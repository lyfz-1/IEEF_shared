updated SocketAppender initialization to set remote host and port to ensure proper configuration of remote host and port in the socket appender
refactor code to use a new method ` getPromptHeaders ` for setting authentication headers to improve code readability and maintainability by reducing
replace ` RecordDescriptor . msgLengthOffset ( recordIndex ) ` with ` msgLengthOffset ( recordIndex ) ` in ` ManyToOneRing
updated CPU and RAM overcommit ratio assignment to use conditional checks to improve code readability and avoid potential null pointer exceptions
added an ` flags ` field and a ` getFlags ` method in ` ShadowPaint ` and updated ` PaintTest ` to use it to
updated the title in MassSetFieldsDialog from " Set / clear / append / rename fields " to " Manage field names & content "
added error handling for missing bugs in DetectorsTest . java and set NoClassOk if Eclipse is not used to compile the project to
add a check for non - empty nonce in Realm . java and add a test for digestAuthTest in NettyAsyncHttpProvider .
added a new interface ` RemoteInputListener ` and modified the ` RemoteInput ` constructor to include a listener for handling connection states to enhance the
refactor conditional structure for better readability in OrcEncodedDataReader . java to improve code clarity and maintainability
added a check for the enabled state before filtering the handler to ensure that the filter only occurs when the handler is enabled
added null checks before calling methods for policy management in AuthorizeAdminServlet . java to prevent potential NullPointerExceptions during operation
updated assertions in tests to use ` matches ` method instead of ` isEqualTo ` to improve readability and maintainability of the test code
added JSON serialization and logging for DAG information in TezTask . java to enhance data handling by including context and description in the DAG
added heap time retrieval methods and updated time calculation in ComputedSummary . java and HprofHeap . java to improve accuracy of heap dump time
replaced RxJava2Tasks with CommonsApplication for setting upload count and removed RxJava2Tasks class to streamline code and improve maintainability by
do n ' t check lock _ mode _ read _ committed in mvtable . lock ( )
[ issue # 3394 ] fix the issue of commitlog offset be too big . ( # 3394 )
added a check to ensure the folder info is marked as open before proceeding to avoid potential null pointer exceptions when the associated folder is not open
added a new test method ` testSortOrder ` to ` PGPropertyTest ` to ensure that ` PGProperty names are sorted in ascending order to
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN in the Common class to provide a
updated method parameters from ` Object ` to ` ItemInfo ` in ` UninstallDropTarget . java ` to improve type safety and simplify intent
updated the assertion in RequestBuilderTest to use ` isIn ( ) ` instead of ` hasMessage ( ) ` to improve clarity of error message
refactor NearbyActivity to replace NearbyMapFragment with NearbyListFragment and update related constants to improve clarity and
renamed the parameter ` status ` to ` sessionStatus ` in the ` FlatProfileContainerFree ` constructor to improve clarity and consistency in
added a new configuration field ` sendZeroAnomalyEmail ` to the ` EmailConfiguration ` class and its associated getter and setter methods to enable
[ hotfix ] [ kafka ] fix the npe in kafkaconsumerbase # open ( )
added methods to retrieve user and geofences from the database to enhance data retrieval capabilities for users and geofences
added a constructor to BlockingResponseListener that accepts a maximum length to ensure proper handling of response length in the BlockingResponseListener
refactor mcastservice and mcastserviceimpl to use a byte array instead of a ChannelData array to improve code readability and maintain
replaced System . out . println with logger . info for snapshot paths and added a try - finally block to ensure resources are properly closed to
fix unit test after change in http : / / issues . apache . org / activemq / browse / amq - 489
updated ConfigMetadataProviderTest . java file to improve test coverage for metadata handling
updated imports in ListFragment . java and modified parameter names in SnoozeActivity . java to improve code clarity and maintain consistency in
introduced a private static class AcceptAllFilter to streamline directory stream filtering to improve code readability and maintainability by centralizing the
refactor JdbcTestDataSet class to improve code readability to enhance maintainability and facilitate future development
added ClassNotFoundException to lookupType method signatures and introduced a new lookupTypeHelper method to handle ClassNotFoundException to improve error handling and provide better diagnostics for class
added validation for Docker image names and created a new utility class for validation to ensure that the specified Docker image names are valid and provide a specific
updated the login error message from " login _ failed _ username " and " login _ failed _ password " to " login _ failed _ wrong
added setAutofocus ( " autofocus " ) method calls across multiple form classes to improve user experience by ensuring the autofocus functionality is
added unit tests for SAML properties in SamlIDPRefreshMockMvcTests . java to ensure correct handling and configuration of identity zones in SAML
added checks for empty and non - numeric lists in ComparableVersion . java and created a new test for Mng7644 in ComparableVersionTest
updated sheet rendering methods and added padding and margin properties in UIManager to improve layout responsiveness and ensure proper display based on preferred dimensions
moved ` ParallelUniverse ` and ` ParallelUniverseTest ` from ` org . robolectric ` to ` org . rob
refactor constructor handling in LocalCacheFactory and NodeFactory to improve code readability and maintainability by reducing redundancy
updated the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to align the
added functionality to draw self loops and edges in the graph to enhance rendering capabilities for self - loops in the graph
updated references from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY _ 0
renamed the method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to improve clarity and consistency in
reset the translation position of the drag handle indicator in AllAppsTransitionController to ensure the drag handle indicator is correctly positioned during transitions
removed logging statements from CollectionViewer , CommunityViewer , and ItemViewer classes to streamline logging for better readability and performance
updated the configuration message for push predicates down into storage handlers in HiveConf . java to clarify that filters may be pushed down in the
added an assumption to skip tests on OS - specific issues in ScanningAppProviderRuntimeUpdatesTest . java to ensure tests are only executed on
added Maven bundle options for Jetty alpn client in TestJettyOSGiAnnotationParser . java to ensure compatibility with Jetty al
fix for activiti - 1349 : fix executionentitymanager # updateprocessinstancelocktime ( ) to work with async execution
refactor transaction handling logic in Transaction . java to improve code readability and maintainability
replaced ` @ AddToRuleKey ` annotation with ` @ ExcludeFromRuleKey ` and added ` @ ExcludeFromRuleKey ` annotation
simonstewart : add the ability to launch the firefox executable on window
added a check to ensure ` fam ` is not already present before adding it to ` colFamToDynamicColumnsMapping ` to avoid duplicate
[ hotfix ] [ runtime ] remove rawtypes suppression from hadoopoutputcollector and hivettupleunwrappingiterator
added a condition to check if the client version is less than MIN _ SPLITTABLE _ SYSTEM _ CATALOG and retrieve derived columns and indexes
added code to update the googleid of student cascading for a specific instructor to ensure that the update of student cascading for a specific
updated import statements in AllXSSFTests . java to use TestCellReference instead of XSSFTest to ensure compatibility with the latest
added a hardness check to the block condition in LensPiston . java to ensure that the block ' s energy flag is only
added a new file LongPointerPressTest3049 . java to implement a network error handling test for long pointer press functionality in the application
truffle : do not inline trufflefunctioninlining if they do n ' t exist .
simplified null return statements in BaseBuilder . java and XMLConfigBuilder . java to improve code readability and maintainability by reducing
simplified the condition in ListBlockParser and added a new test for deeplyIndentedList in SpecialInputTest to improve code readability
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to extend it to improve code organization and encapsulate
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to temporarily ignore tests related to issue 1070
remove the global namespace from the saveMessage method to simplify the method signature and improve code readability
removed unnecessary whitespace in RouteStartupOrderLastTest . java to improve code readability and maintainability
added a condition to check if the video format is a video before proceeding to ensure that web subtitles are only processed when the video is
added security property to ComHostnameVerifier and JavaxHostnameVerifier to disable TLS algorithms in hostname verification processes
server : do n ' t create vm for zones / local storage if it ' s not in zones
updated logging statements in Driver . java and QueryResultsCache . java to include the current instance of CacheEntry to improve logging clarity and provide more
added an option to skip updating the model after managing dependencies to enhance functionality by allowing users to skip updating the model after managing dependencies
added a test for the last intent sender request in ` ShadowActivityTest ` and implemented the ` send ` method in ` ShadowActivity ` to
added FBO support and improved graphics rendering in RocketFigure3d . java to enhance user experience by enabling and disabling
added synchronization to the ` controllerListeners ` list in ` HydrawiseAccountHandler ` to ensure thread safety when adding or removing controller listeners
added a JUnit @ BeforeClass annotation to TestCoreAdminApis . java to ensure EasyMock does not run with Java 9 to prevent
updated year retrieval in TimestampUtils and refactored date formatting in SetObject310Test to use DateTimeFormatter to improve code readability and maintain
fix a potential npe in the jabber server when a jabber connection be close .
updated the column name from " cur . ws _ commit _ id " to " cur _ ws _ commit _ id " in TxnHandler .
replace ByteChunk with ByteBuffer for improved performance and memory management to enhance performance and prevent potential memory leaks
added a new method ` toSync ` in ` AsyncUtils ` and a corresponding test class ` AsyncUtilsTest ` to facilitate
added ActionGraphBuilder to multiple compiler factory classes and updated related methods to utilize it to improve code organization and ensure proper handling of ABI
add a new test method for validating hidden file input in UploadTest . java to ensure that the upload functionality works correctly when hidden files are not
removed unnecessary import of java . util . Date from SQLManager . java to streamline the code by eliminating unnecessary dependencies
added a check to ensure the file exists before retrieving the local Maven directory to avoid potential errors when accessing the local Maven directory
ggb - 1889 hide label when it ' s hidden .
fix ( ctelementimpl ) : avoid npe when getmetadata ( ) return null
replaced ` setFlags ( ) ` with ` addFlag ( ) ` in ` DefaultTrackOutput . java ` to ensure the buffer is
added a check for ` cached . isSortedById ( ) ` in the ` isReorderingDisabled ( ) ` condition to ensure that ` cached
corrected a typo in the error message for the verify ( mock ) method call to clarify the purpose of the method ' s
added null check for backupFolder before logging the expiration date to avoid potential NullPointerExceptions when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` that tests the ` Array . newInstance ` method to demonstrate the
added @ AddToRuleKey annotation to toolType in ClangCompiler and GccCompiler classes to ensure toolType is added to rule keys
added a constant for PINCODE _ TIMEOUT and updated the time comparison logic in PinCheck . java to improve code readability and maintainability
add isSampled ( ) method to PrometheusMeterRegistryTest and PrometheusExemplarsSample classes to ensure consistency in sampling behavior across
added @ Ignore annotations to multiple test classes for MongoDB server requirements to ensure tests are executed on the correct MongoDB server requirements
http : / / issues . apache . org / jira / browse / amq - 4892 - fix a typo in test
changed the condition from checking if the table name starts with an empty string to checking if the table is an artificial to ensure that the
updated file status checks from ` isFile ( ) ` and ` isDirectory ( ) ` to ` isDir ( ) ` in ` FileOutputCommitter
refactor session attribute handling in MongoSessionManager . java to improve clarity and ensure proper session management to enhance code readability and maintainability
replaced ` setFixedSize ( 320 , 240 ) ` with ` setSizeFromLayout ( ) ` in ` CameraSurfaceView . java
replaced direct usage of ` _ stopping ` with ` CountDownLatch ` in ` AbstractConnector . java ` to improve code readability and
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 16460 : camel - defaultmessagehistory now use the current time of the message history . thanks to michael
[ mono ] fix delaymonopublishertest failure
replace assertTrue with a conditional check for WebSocketHandshakeException in WebsocketTest . java to improve error handling by providing more informative failure messages
refactor AllAppsTransitionController to use View . OnLayoutChangeListener instead of an anonymous inner class to improve code readability and maintainability by
refactor variable name from ' theHandler ' to ' handler ' for consistency to improve code readability and maintainability
int - 1346 add namespace support for ' default - output - channel ' attribute on router element
updated cacheSeconds from int to String and added DurationCapable annotation in MessageBundleProperties . java and CasCoreWebConfiguration . java to enhance
updated openapi version from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in multiple Java files to
removed the append ( buffer , true ) method call from ByteBufferPool . java to streamline buffer handling by eliminating unnecessary operations
added a method to check for the presence of " alt - rt . jar " in the boot class path to improve error handling and provide feedback
updated JdbcScimUserProvisioningTests to replace instances of " jo @ " with " jonah " and changed ScimUser to
replaced ` Arrays . asList ` with ` ArrayList ` and added conditional JVM options for flight recording to improve code readability and ensure compatibility with
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebcamInputDialog ` to check
added a condition to check if the content view has content before processing in HttpParser . java and created a test for chunked put in ProxyServlet
camel - 14284 : fix typo in atmosendpoint javadoc
added support for " printf " and " print " methods in Java2TypeScriptAdapter to ensure proper handling of " printf " and " print
added a new test class ` TestCapacityUntilGCWrapAround ` and native methods to ` WhiteBox ` and ` WhiteBox ` classes to
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the endTime calculation in SamplingStatCalculator . java to ensure the endTime reflects the current time when the resource is stamped at the
added unit test base on user forum issue
tmi - jpeg : do n ' t throw an exception if an icc / icc / icc / icc _ chunk be
fix terra botania rod and terra pick not be able to reequip
added a check to ignore entries in SpringModule and modified registration logic in SpringModule to ensure entries are only registered if they are not specific to
simonstewart : use container . getparentclassloader ( ) instead of thread . getcurrentclassloader ( ) . getclass
bug 60584 - nameupdater : do n ' t re - load property file if it be already define
make sure ellipsoidregionselector . start ( ) be call before start ( ) .
replaced instances of " http : " with " https : " in JavaSEPort . java to ensure secure connections for the Codename
give a good error message if a sortby be not specify in the request
updated null check for grantTuple from ` equals ( null ) ` to ` null ` in ` AbstractJdbc2DatabaseMetaData . java ` to
added graphics configuration for image rendering in DiagramGenerationTest . java to ensure compatibility with different screen configurations
added a null check for sidedDelegate in FMLCommonHandler . java and throw a runtime exception if installing some other mod that edits
refactor DataUtilities and ReTypeFeatureReader classes to improve code organization and maintainability
fix flaky locktest # islocked ( )
added methods ` wholeWordTokenize ` and ` joinTokens ` to the ` StringUtil ` class for splitting strings and joining tokens to enhance functionality
use response . geterror ( ) instead of response . setstatus ( ) . setmessage ( ) .
refactor command handling in SystemHighlighter to use a variable for commandIndex to improve code readability and maintainability by reducing redundancy
updated VERSION and VERSION _ DATE from " 1.0 . 0 " to " 1.0 . 1 - SNAPSHOT " and " PENDING
updated buffer position calculation to include dimensionSize to ensure accurate positioning based on the specified dimension size
added support for handling shell drag - and - drop functionality in the Quickstep and SystemUiProxy classes to enhance user experience by allowing users to
[ java ] do n ' t run socketappender on java 7
added support for PSK - AES256 - GCM - SHA384 + TLSv1.2 in TestCipher . java to enhance security
update description retrieval from ` getDescription ( ) ` to ` getLongDescription ( ) ` in ` NearbyMapFragment . java ` to ensure
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization for the ScimGroupMember class
updated HqlQueryRenderer to handle reserved words and added a new test for schema scoping in HqlQueryRendererTests to improve query rendering
[ hotfix ] fix typo in objecthelper . requirenonnull
refactor Parser class to improve code readability to enhance maintainability and facilitate future development
added a new parameter ` indexStartsAtOne ` to the ` offsetStreamIndex ` method and adjusted its logic accordingly to enhance functionality by allowing
tika - 697 - add test - documents . cpio a a mime type for ar file .
[ hotfix ] [ table - planner - blink ] remove unnecessary method from flinksqloperatortable
added ` equals ` , ` hashCode ` , and ` toString ` methods to ` OneTimeTokenAccount ` and ` OneTimeToken ` classes
added a condition to check if the assistant is not launched in the AssistantTouchConsumer class to ensure the fling condition only occurs when the
added a new file SolarisShortDSA . java that implements key pair generation and verification using DSA to facilitate testing
added a call to toggleSearchLabel ( false ) in ListFragment . java to improve user experience by disabling the search label
cloudstack - 4892 : lock the volume before create a snapshot , throw an exception if create a snapshot fails .
updated the ` DetailsServiceConnection ` class to implement ` ServiceConnection ` and added a null check before unbinding the ` mConnection ` to
refactor error handling in HttpClientTLSTest to use AtomicReference for better clarity to improve code readability and maintainability by reducing
removed the equals method from ConjunctionScorer class to simplify the code by eliminating unnecessary complexity
added a null check for the variable ' v ' in Launcher . java to log an error when binding items fails to improve error handling and
increase commit timeout for getRaftgroupids in cpmemberaddremovaltest
updated cache size calculations to use desiredSize instead of a fixed value and added a warning log for cache shrinking to 90% to improve cache
updated API endpoint from " / api / v2 " to " / api / v3 " and modified account handling logic in multiple classes to
added a method ` empty ( ) ` to the ` freenect2 ` class to check if the size is zero to enhance functionality by
added null checks for page data in AsyncPageReader and updated test annotations in TestDrillParquet and TestDrillParquetReader to
updated the ` buildChannelName ` method to accept an additional ` subscriptionType ` parameter and added validation for the ` accountSubscribe ` type to
add config option to disable charging animation when item be charging on top of a mana pool
[ java ] make cluster node restart test more robust .
added error logging for InterruptedException in WaitForHelper . java to improve error handling by providing more informative error messages
replaced conditional checks for directory creation with assumptions in DefaultServletTest . java to improve test reliability by ensuring directories are created only when
updated injection order for dialog and screen styles in ResourcesInjectorFull . java to improve code readability and maintainability
updated variable types from String to FileResource in BaseLiquibaseTask . java and DBDocTask . java to improve type handling and
use getx ( ) and getz ( ) instead of getx ( ) and gety ( ) in blockworldvector .
removed redundant comments and made fields final in LongConcurrentLRUMap . java to improve code clarity and enforce immutability of fields
added regex escaping to the resource configuration in ReflectionProcessor . java to ensure proper handling of special characters in command line arguments
updated FileCredentialsCache to retrieve the KRB5CCNAME environment variable and modified EmptyCC to accept a command - line argument for the C
corrected the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to ensure
move hassufficientpeers ( ) method to sync configuration ( # 1193 )
danielwagnerhall : fix checkstyle issue in java / awt / webdriver / webui / webdriverservlet . java
mondrian : do n ' t expand ' AreEqual [ x , y ] , y , z , z ] ' format expression
added a check to clear pending rendering operations if the implementation is minimized to optimize rendering performance by reducing unnecessary operations
modified the deadline check logic in HazelcastTestSupport . java to include a conditional check before sleeping milliseconds to ensure that sleepMillis is only
fix ( mapstore ) : fix continuously update key in every write delay time window
set the icon of a JLabel to null in GroupTreeCellRenderer to prevent potential memory leaks by resetting the icon
updated test methods for strict and non - strict redirect matching in TestBlacklistAwareRedirectResolver to improve clarity and functionality of redirect matching tests
added IO resource cleanup and improved test methods in ShutdownMonitor and ShutdownMonitorTest classes to enhance resource management and enhance test coverage for shutdown scenarios
refactor memory movement logic in RandomAccessStore . java for improved clarity and efficiency to enhance code readability and maintainability by redu
refactor field retrieval and error handling in Json . java to improve code readability and maintainability by reducing redundancy
[ hotfix ] [ runtime ] move componentclosingutils and recreateonresetoperatorcoordinator to futureutils
cloudstack - 4892 : destroy volume when vm fail to start due to error state change
cloudstack - 7036 : fix ipv6 range for vlan that do n ' t have ipv6 range
rename ` InitializeUserDetailsManagerConfigurer ` to ` InitializeAuthenticationProviderManagerConfigurer ` and update related references to improve clarity and consistency
increased the timeout duration for the leader retry from 15 seconds to 30 seconds to allow more time for leader retrieval in the test to complete
removed the ` input ` parameter from the ` errorMessage ` method signatures across multiple classes to simplify error handling by eliminating unnecessary string concatenation
corrected the positioning of the image from ' x ' and ' y ' to ' - x ' in URLImage . java to ensure
updated field name comparison from solrDocument1 to solrDocument2 to ensure accuracy in comparing field names
simplified the code by introducing a new method ` isItemZeroHighCardDim ` to improve code readability and maintainability by
[ hotfix ] [ runtime ] add exception to streamtaskexception
refactor the handling of tags in Preprocess . java to improve clarity and efficiency to enhance code readability and maintainability by simplifying
removed unnecessary line breaks in the read method of MessagePack . java to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a structured way to
jsonparser : do n ' t encode empty extension list if there be no fhir comment
updated regex patterns in ` Artifact . java ` and ` LibraryManager . java ` for consistency and added null checks for ` child ` and `
added a new alias " node _ popup _ scripting " to the entryNavigator in ScriptingMenuEntryVisitor . java to enhance the navigation
updated constants and animations in OverviewActionsView and RecentsView to improve handling of task visibility and animations based on device profile to enhance
camel - 14284 : camel - jms - do n ' t cast jmsmessage to jmsmessage to avoid classcastexception
[ hotfix ] fix checkstyle violation in io package
deleted deprecated classes AbstractDelegatedVerb . java and FailureContext . java to remove unused code to streamline the codebase
added support for " If - None - Match " header in GzipHandler and implemented a new MicroServlet for handling " If - None - Match
replaced ` getAndAdd ` with ` getAndAddRequest ` in ` OnSubscribeRedo . java ` and added a new test for distinct
added logging functionality and improved code formatting in SpeedmentImpl . java to enhance debugging capabilities and enhance code readability
add dspace - config to load oai from dspace - config . xml
hbase - 24950 fix the bug of storescanner . setmaxversions ( ) and setmaxversions ( ) do not work
camel - 10650 : camel - test - support to disable jmx by default .
replaced hardcoded ` CANONICAL _ PACKAGE _ SEPARATOR ` with a constant ` CANONICAL _ PACKAGE _ SEPARATOR ` in ` Source
added YARNBIN configuration and app info retrieval in Spark job monitoring to enhance integration with YARN applications for better application management
added support for " maria " database in the database connection check to ensure compatibility with both MySQL and Maria databases
updated log message formatting and adjusted time calculation logic in SplitLogManager . java to improve readability and correctness of log output for empty directories
added a new file ExecuteAndReturnStringTest . java to implement a test for handling network errors in the application
added a new file InvokespecialInterface . java that implements an interface with a method invocation to demonstrate the use of a method
updated the implementation of the EvictingBoundedList class to improve performance and maintainability of the code
use setencodingmanager instead of check for turncosts = true
added a check for backgroundDisabled in the SelectBox class to ensure selection is valid and prevent invalid selection values
added a null check for the header ' s method name in RpcServer . java to ensure that unsupported methods are handled correctly by throwing an exception
updated the calculation of hotseat cell size and icon center in TaskbarViewController . java to include border spacing to improve layout consistency and
refactor key and index comparison logic in ExpressionTree . java to improve code readability and maintainability by using a more concise method for
add version check to namedtaskdecorator and taskdefinition for 4.1
updated the method call from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure
updated the ` equal ` variable from ` false ` to ` true ` and modified the comparison logic in ` DisplayModeTest . java ` to
added support for high code point Unicode characters in UnicodeToLatexFormatter and updated test cases in HTMLUnicodeConversionMaps to ensure proper handling of
update dcvalue assignment logic in OAIDCCrosswalk . java and Item . java to ensure dcvalue is not set to null to
danielwagnerhall : do n ' t select the current window handle if it ' s already in the original window handle
added a clear button to the DataBrowser and updated string comparison logic in StringSearchPanel and BookmarksPanel to enhance the user interface by allowing
updated the base URL construction in OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for building the full request URL to improve code readability and
updated date assertions and error messages in SoftAssertionsTest . java to use a more descriptive format to improve readability and maintainability of
updated order adaptation methods to include an reverse parameter to enhance order adaptation by allowing reverse ordering of orders
added null and pos checks for the vartype in PrettyPrinter . java and created a new Java11Var class with a test method in Java11
danielwagnerhall : remove unused import from test / java / awt / driver / test / typingtest . java
updated Configuration initialization to set the default value to false and removed unnecessary checks for the default value in HiveConf . java to enhance configuration flexibility
changed method name from ` drawChildren ` to ` draw ` in ` WidgetGroup . java ` to improve clarity and consistency in method naming
added unit test base on user forum issue
replace usage of catalina . Globals with context . getCatalinaBase ( ) in multiple Java files to streamline code by central
added unit tests for the ` getBestDateTimePattern ` method in ` ShadowICUTest ` and modified the ` ShadowICU ` class to
added color information to the object in the PlotSquared class to enhance the visual representation of color information in the application
added ZuulProperties parameter to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration classes to enhance tracing capabilities by allowing
tika - 1188 -- add test for timezone . getdefault ( ) in fontparsers .
added two new classes , ` SampleApplication ` , and modified ` BuildInfoMojo ` to use ` getBuildTime ( ) ` method to
updated the calculation of xDist in PagedView . java to use the absolute value of mScroller . getFinalX ( ) to
remove the guirwtester . java file which be no longer necessary
removed nullable annotations from constructor parameters in LazyMessage and related classes to simplify method signature and improve code clarity
updated the error message format in TestStream . java to include a placeholder for clarity to improve readability of the error message for better debugging
move thymeleaf - templateparser from thymeleaf - templateparser to thymeleaf - templateparser - markup module
added a new test method ` testXPathString ` in ` XPathTest . java ` and updated ` XPathTest . java ` to use the
added @ Nullable annotation to FutureUtils . java to indicate that the method should be nullable
add warn message when invokedynamic be not resolve during call - graph construction
updated email references from " @ gmail . com " to " @ example . com " in ContextTest . java to align test with the
updated the response format in HttpConnectionTest . java from " HTTP / 1.1 400 " to " HTTP / 1.1 200 "
added ` getColumnDataType ` method implementations in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to ensure consistent return
( chore ) camel - aws : add default implementation for serviceclientconfiguration ( )
refactor HSSFPictureData class to improve code organization to enhance maintainability and readability of the code
replaced ` long ` with ` Instant ` for ` startTime ` and updated related methods to use ` Instant ` instead of ` long ` to
added version handling and updated debug logging in LibMediaInfoParser . java to improve media parsing capabilities based on user - defined versions
added reflection - based proxy creation for IdeaDependency in ProjectReader . java to enhance compatibility with IdeaDependencies and improve proxy handling
added a new class ` SerialHeap ` and updated references in ` Universe . java ` and ` GenCollectedHeap . java ` to
added multiple @ SuppressWarnings ( " serial " ) annotations to the Gson $ Types class to suppress serialization warnings for better code safety
added mouse position to mouse wheel event to make it easy to use .
updated ` addAppropriateLikeRegexTo ` to handle null parameters and added a new test for ` findByFirstNameIgnoreCaseWith null
[ hotfix ] [ table - common ] add multiset type info to maptypeinfo
added the ` retrieveByIssuer ` method to ` XOAuthProviderConfigurator ` and corresponding tests in ` XOAuthProviderConfiguratorTests ` to ensure
updated CMapParser to handle delimiters in whitespace parsing and added a new test for PororWhitespace in TestCMapParser to improve parsing
added a new ` OperationsServiceConnection ` class and refactored service handling in ` ContactsBackupJob . java ` to improve service management
refactor type constraints handling in ` ForAll ` and introduce new classes ` T6938454a ` and ` T6938454
added functionality to check if account configuration is hidden in AccountList . java and defined a new constant in ProtocolProviderFactory . java to enhance account
added a check to log an error when the number of supported displays differs from oldInfo and oldInfo to improve error handling for incorrect display state
updated schema removal method to use ` getSchemaKey ( ) ` instead of ` getSchemaUtil . getSchemaKey ( ) ` in ` PMetaDataImpl
ggb - 1889 fire passive login event when user click on it
added a new file ` Box2DTest . java ` and updated ` GDXTester . java ` , ` Box2DTest .
add more debug log for localbypartionertype . getbytestohex ( ) return null
[ hotfix ] [ network ] set default buffer request timeout to 5 minute
doc : add default generator name and version to speech api doc
added a help button to the OpenOfficePanel to display a help message to enhance user experience by providing help information for users
[ java ] set tcp _ nodelay channel option to child option in netty acceptor and protocoldecodingserver
updated method signatures in BinanceAuthenticated , BinanceFundingHistoryParams , BinanceTradeServiceRaw , and BinanceFundingHistoryParams
added a transient class reference field and refactored class loading logic in ScanResultObject . java to improve code readability and maintainability by
refactor connection handling in DecodeServlet . java for improved readability and maintainability to enhance code clarity and maintainability by consolidating
added a method to query Dsl null handling in Querydsl . java and created a integration test for it in QuerydslIntegrationTests . java
added a null check for actor in ParallelAction and modified condition checks in SequenceAction to ensure actions are only processed when the actor is null
test ( refactor ) : fix typo in cttypetest
added synchronization to the ` sfWriters ` management in ` HDFSEventSink . java ` to ensure thread safety during concurrent access to ` sf
added a new test interface ` Issue888 _ JavaI ` and a class ` Issue888 _ Kotlin _ JavaI `
added a command to revoke an existing agent certificate in CertificateManager . java and implemented a corresponding test in CertGenerationTest . java to enhance certificate
added checks for no HTTP body codes in AbstractHttpTest and implemented a test for handling 304 responses in HttpServerTestBase to ensure proper handling of
updated error handling for script loading in ScriptTransformer . java to improve error messaging for invalid script tags and languages
updated the ` METASTORE _ CONNECTION _ POOLING _ TYPE ` configuration to include " DBCP " and " HikariCP
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added a new method ` filterLock ` to handle lock visibility based on file status to enhance user experience by allowing users to lock files based on
refactor Version class to improve code readability to enhance maintainability and facilitate future updates
clear endpoint cache when update keyspace
refactored synchronization logic into a separate method ` waitForState ` in ` Locks . java ` and changed ` waiting ` variable in `
updated method signatures and parameters in Skylark - related classes to use SkylarkRuleContextAttr instead of separate method parameters to
simonstewart : move storage interface to html5
fix nullpointerexception when create or replace view
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error handling by catching a broader range of exceptions
updated the way the query string is retrieved in SpellCheckComponent . java to ensure that the query string is retrieved only if it is null
added checks for illegal characters and whitespace in header values and introduced a new checkValue method to validate header values to ensure proper handling of header values
replace instanceSize with arrayBaseOffset in HybridLayout and add afterFieldsOffset to HostedInstanceClass and HostedInstanceClass to improve
[ java ] add experimental annotation to astcommentcontainer and abstractapexcommentcontainernode
hhh - 510 - introduce a warning log for association with ` fetch = ' ' join ' ' and ` ` lazy ' '
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter classes to extend from AbstractSpecFilter instead of implementing Swagger
added assertions for database and table names in TestCompactionTxnHandler and set database and table names in TxnHandler to ensure correct database and table
camel - 1889 : added support for graceful shutdown of the timer component in camel - core .
added a conditional check before adding traces and removed the current block from worklist to ensure traces are only added when the block is processed to avoid
updated ProviderManager to use CollectionUtils for null element checks and added new test cases for null element scenarios to ensure proper handling of null values and validate
simplified the database type check in InsertOrUpdateGeneratorPostgres . java to simplify the logic for determining if the database is a Postgres
added local index limit handling and updated query assertions in LocalIndexIT , BaseScannerRegionObserver , and ExplainTable classes to improve search functionality
added a check to prevent adding a collection with the same name and type in the past to ensure that collections with the same name and type are
updated cursor position calculations in VDUBuffer . java and removed cursor change handling in vt320 . java to improve cursor positioning accuracy and ensure
added a static final string USE _ RETRIES with a value of " useRetries " in HttpShardHandlerFactory . java to provide a
updated the VERSION _ NUMBER regex in JavaVersion . java and added a new assertion in TestJavaVersion . java to ensure compatibility with Java version
added a check to return early if no input gates are available to optimize performance by avoiding unnecessary processing when no input gates are available
added a new test method ` test ( ) ` to the ` TestReceivingMessageSourceParserTests ` class to facilitate testing
added null check for properties in RemoteCluster . java to prevent potential NullPointerException when properties is null
refactor IOException initialization to use a temporary variable instead of throwing an exception to improve clarity and maintainability of error handling
updated error message from " rolling upgrade " to " stack upgrade " in multiple files to improve clarity of error reporting for stack upgrade failures
move txconfidencelistener to walletservice . getconfidencefortxid ( ) to avoid duplicate listener .
[ netbeans - 4892 ] add support for ` ` g1 perm gen ' '
removed unused import statements and simplified return statements in NearbyController . java to streamline code and improve readability by eliminating unnecessary
pdfbox - 4071 : make class public , a suggest by valerybokov
added a condition to check if the activity type is not home in the gesture state check to ensure that only home activities are processed in the gesture
rename ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and update related references to improve clarity and consistency in naming con
updated method names and logic in ShadowTelephonyManagerTest and ShadowTelephonyManager to improve clarity and consistency in naming conventions
remove setUnfreezeAmount method call in UnfreezeBalanceV2Actuator . java to streamline the code by eliminating unnecessary method
conferenceschedulingxlsxfileio : add miss ` ` per match ' ' to description
danielwagnerhall : use commons . io . fileutils instead of google . common . io . files in firefox
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the codebase
refactor Observable class for improved readability to enhance maintainability and facilitate future development
replaced direct key assignment with a multi - field operation in MongoUpdate . java and added multiple test cases in MongoTemplateTests . java to
added a null check for randomUUID before setting the hubChangeLog ID to ensure that the hubChangeLog ID is set only if it is
added hover event handling in InputConsumer , OverviewInputConsumer , and InputConsumerProxy classes to enhance user interaction by allowing hover events to be
added a conditional check for the " bootstrap _ conf " property in CoreContainer . java to ensure proper initialization of the bootstrap configuration based on server
camel - 8274 : camel - netty - http - add option consumer to specify max header size
increased the maximum number of client retries from 5 to 35 in HBaseTestingClusterAutoStarter . java to increase the retry limit for
refactor file creation in SourceSnippetHelper . java to use File . getAbsolutePath ( ) directly to improve readability and maintainability of the code
make encodedgraphcachetest more tolerant to slow machine
updated query command from " customer _ count " to " all _ tables " and modified the SQL query to use " INFORMATION _ SCHEMA .
added currency metadata handling for Kraken assets in KrakenAdapters . java to enhance currency metadata adaptation for Kraken assets
added a ` toString ( ) ` method to ` AnyOf ` class and created a corresponding test class ` AnyOf _ toString _ Test `
updated variable names and logic in AlertTaskRunnerV2 . java to improve clarity and functionality to enhance code readability and maintainability by
[ beam - 10688 ] add check for miss property - measurement / database in influxdb publisher
rename ` doTransform ` methods to ` downcast ` across multiple converter classes to improve clarity and consistency in method naming
updated filter conditions in NetUtils . java to include unique local addresses to enhance filtering capabilities for specific IP addresses
refactor column name handling by introducing a new method ` quoteColumnNames ` to improve code readability and maintainability by centralizing column name
added methods for setting system properties and improved method signatures in WrapSystem , StrUtils , CompileMethodEntity , and ClassWrapper classes to enhance
added a constructor to UpdateRequest that initializes the POST method to ensure proper handling of requests with the correct HTTP method
removed the static modifier from the EnumSerialization enum declaration in ProtoTypeAdapter . java to improve code readability and maintainability
removed the ` addExperimentalFormatWarning ` method from ` RequestHandlerUtils ` and added it in ` DataImportHandler ` and ` ReplicationHandler
updated debug logging to use a formatted list of module names to improve readability and maintainability of the code
improve row height calculation by use the default label font
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4892 . java :
updated the calculation of meanPartitionSize , partitionSize , and splitCount in CqlInputFormat . java to improve accuracy of partition size and
simplified the conditional check in JUnitTestsShouldIncludeAssertRule . java to improve code readability and maintainability
added ` equals ` and ` hashCode ` methods to ` RuleTerminalNodeLeftTuple ` class to ensure proper object comparison and hashing for ` Rule
added StageIDsRearranger import and resolution logic in TezCompiler . java to ensure proper handling of stage ID rebuilds based on configuration
fix a typo in the name of the mbeans
refactor memory consumption logic in LotsOfOutput . java to use a variable for totalMemory to improve readability and maintainability of memory
added imports for Document and DimConfig , and implemented a hashCode method in LabelAndValue class to enhance functionality and ensure consistent hash code generation across
polish ` ` allow anonymous - read - only ' ' property for ldap autoconfiguration
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
changed the access modifier of the EchoInputDoFn class from public to private to restrict access to the class for better encapsulation
added a ` finishMocking ` method to ` MockitoSession ` and implemented it in ` DefaultMockitoSession ` to ensure proper handling
removed the ` extraDeps ` parameter from the ` withDeclaredDeps ` method calls in ` GoTestDescription . java ` and added new test
refactor SPDYAsyncConnection and HTTPSPDYAsyncConnection to improve buffer management and handling to enhance code clarity and ensure proper
change block initialization from getStaticBlock to getFlowingBlock in BlockLiquidWrapper . java to ensure the correct block is used for the
updated AndroidLocationPlayServiceManager to use Uri for background location retrieval and modified BackgroundLocationHandler to handle data string splitting to improve flexibility in
fix javadoc typo in aprendpoint
[ hotfix ] [ table - planner - blink ] fix clifrontend to handle streamingplan
fix craftingmanager . getshapedrecipes ( ) and craftingmanager . getshapedrecipes ( )
[ hotfix ] [ test ] fix flakiness in testutils
refactor conditional statements in TabsAndIndentsVisitor . java for improved readability to enhance code clarity by removing unnecessary parentheses
added regex pattern matching for pg _ temp _ in NeuteredLinesFilter . java to enhance regex matching for temporary file handling
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added conditional checks for data type " INTERVAL " and " NCLOB " in DataTypeFactory and ColumnSnapshotGenerator to ensure correct handling of
flush distribution summary when the timer be not publish ( # 1188 )
updated ShenyuClientRegisterSpringCloudServiceImpl to set divide upstreams and added a warmup method in DivideUp
added a new method ` registerListener ( SensorEventListener , int maxLatency ) ` to the ` ShadowSensorManager ` class to provide functionality for
added exception handling for full method , URI , and header tests in SelectChannelServerSslTest . java to improve error handling and logging for SSL
camel - 1565 : fix the npe of camel - ignite
modified line number handling logic in AbstractClient . java to improve clarity of error messages and track reach end state
pdfbox - 4892 : catch more general exception , a suggest by valerybokov
added unit tests for retrieving and handling HDR capabilities in ShadowDisplay to ensure proper functionality and error handling for unsupported display formats
added a finally block to set classLoader to null in JavacInMemoryStep . java to ensure proper resource management and prevent potential memory leak
enhanced error messages in SemanticAnalyzer to include source and target parameters and added a toString method in SemiJoinHint to improve debugging and provide
added a default constructor to the Message class to provide a default implementation for the Message class
added GUI class checks and improved bug reporting logic in SerializableIdiom . java to ensure proper handling of serialization priority based on class type
added imports for DecimalTypeInfo , HiveDecimalUtils , and HiveDecimalUtils , and modified constructors in PhoenixDecimalObjectInspector to enhance
changed the return type of ` gzipStream ` from ` GZIPOutputStream ` to ` OutputStream ` and added a check for committed responses to ensure that
renamed the method ` WWWAuthenticate ` to ` authenticateHeader ` and updated related references to improve clarity and consistency in naming conventions
removed unnecessary conditions for checking directory names in DCD . java to streamline code by eliminating unnecessary checks
added a method to retrieve the thread group name in ThreadLeakTest . java to improve clarity by providing a specific thread name when the
added logging functionality to MethodInvocationPrivilegeEvaluator for security interceptor checks and improved error handling to enhance debugging capabilities and provide clearer insights during
updated package names from " org . apache . nutch . crawl " to " org . apache . nutch . tools " to
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to improve code clarity and
server : add iso disk to the storage pool if the vm do n ' t have iso
refactor signal handling in SigInt . java and update test assertions in SigIntTest . java to improve code clarity and ensure correct exception
replaced the static import of ` ArrayUtils . isEmpty ` with ` ArrayUtils . isEmpty ` in ` NodeTool . java ` to improve code read
updated imports and annotations in AxonAutoConfigurationWithSpringCloudTest . java to use Spring Boot ' s auto - configuration and added a
added multiple @ Override annotations in ColorRGBA . java to improve code clarity and maintainability
remove ` ` resetinitializedplanningentities ' ' from planningentityselector
updated the ` TwoLevelArtifactCacheDecorator ` and related classes to include ` artifactBuildTimeMs ` as a parameter to improve tracking of build
updated the logic for calculating fixed row size in GroupByOperator to include the type of the field to ensure accurate row size calculation based on the
added null checks before adding block appearance in Wallet . java to avoid potential NullPointerExceptions when the block is null
added support for the CNC currency in the BTCEUtils , Currencies , and TickerDemo classes to support the CNC currency
updated skewAllowance from 5 to 15 and modified related builders to conditionally use it based on service settings to improve flexibility in handling SAML
updated sorting logic in SongListActivity and Utils to use ItemSortBy . SortName instead of null to enhance sorting functionality by using a
removed unused imports and refactored the readBodyToBytesIfNecessary method in Utils . java to improve code clarity and maintainability by elimin
replaced ` BaseBlock ` with ` LegacyBaseBlockWrapper ` in multiple block classes to utilize a new wrapper class for block management to
refactor tag retrieval logic in IcebergBranchExec . java and add a test case in TestHiveIcebergBranchOperation .
replaced ` newArrayList ` with ` Collections . singletonList ` in ` AbstractLdapMockMvcTest . java ` to simplify the code by using a
removed redundant code and streamlined the handling of boxesSboBinding and frameNumber in PhotonMappingDemo to streamline the code and
added validation for requirePasswwordChangeRequired in IdentityProviderEndpoints . java and improved logging in IdentityProviderEndpointsMockMvcTests . java
remove assumeReflective from notInitializedInConstructors list to ensure notInitializedInConstructors are removed from notInitializedInConstructors
updated error handling in JdbcExecutor to differentiate between closed and closed connections to improve error messaging for SQL execution errors
added a new test method ` testRequiredBody ` in ` SpringmvcClient . java ` to validate the behavior of the ` Person `
updated regex patterns for user and password in CredentialInjector . java to improve accuracy in matching user and password formats
added a new menu item " Item4 " and a new key binding for the VK _ ENTER key in ActionListenerCalledTwiceTest . java
updated print statements and assertions in TestCoreParser . java for clarity and consistency to improve readability and maintainability of the test code
simonstewart : fix typo in simplenode . equals ( )
removed the public modifier from the PopulatorContextStackItem class to restrict access to the class for better encapsulation
updated the return type of ` numDocs ` from ` int ` to ` long ` and added a test for small sample from corpus to
reformatted code for improved readability in QuestManager . java to enhance maintainability and clarity of the code
[ hotfix ] [ test ] make networkbufferpooltest extend testlogger
modified the way the ` BasicDBObject ` is appended to the query in ` MongoSessionDataStore . java ` to ensure that the ` append
add a native method ` unsafegetlong ` to the ` CompilerDirectivesSubstitutions ` class to facilitate unsafe retrieval of long values
replace " ARAST " with " EET " for " Asia / Amman " in multiple language - specific TimeZoneNames files to
updated the ID value from 90000010 to 90000011 in DeprecationLogger . java to reflect the new naming convention for better clarity
hhh - 14536 - handle jdbcexception in sessionimpl . gettransaction ( ) . getrollbackonly ( )
do n ' t print file name if there be no file extension
set apple . laf . usescreenmenubar to false on macosx
add integration test for piecewise ( x ^ 2 , x ^ 2 , x ^ 3 )
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods from private to protected
added a new constant ` modWhiteListPattern ` to ` HiveConf ` and implemented a test for configuring ` hive . metastore
removed invalidClasses . put ( entryName , value ) method from EntryLoader . java to streamline the code by eliminating unnecessary entries
update target coordinate from ` Team . sharded ` to ` player . team ( ) ` in ` MobileInput . java ` to ensure the
updated the cookie domain from " comp1 " to " domainHelper . getHostName ( ) " in CookieImplementationTest . java to ensure the
added nullable validation logic in MissingColumnChangeGenerator and MissingTableChangeGenerator , and implemented a method to retrieve it in ColumnSnapshotGenerator to enhance
refactor multiple security - related classes to improve code organization to enhance maintainability and readability of the security - related components
added a new query for " * : * " in CustomCollectionTest . java and made fields static final in CompositeIdRouter . java to
added support for snapshotting in ExecutablePreparedStatementBase and introduced a new test for blob types change log in PostgreSQLIntegrationTest to enhance functionality and ensure
added checks for max _ cached _ files and max _ cache _ size in DefaultServlet . java to ensure proper handling of cached files and sizes
added drag - and - drop functionality to the JabRefFrame class to enhance user experience by allowing drag - and - drop features to be
updated method names and assertions in ExecutionUnitRunner , CucumberTest , and ExecutionUnitRunnerTest classes to improve clarity and consistency in
replaced ` ! myVersion . isEmpty ( ) ` and ` ! buildTimeString . isEmpty ( ) ` with ` StringUtils . isNotEmpty (
removed the ` public ` access modifier from several methods in ` TimeUtils ` and added an import statement in ` GitBlitTest ` to
removed direct method handle initialization and refactored class name validation logic in RefectionMHTests . java to improve code clarity and ensure
updated file extension check from " jpeg " to " . jpeg " in PreviewImageFragment . java to ensure compatibility with both JPEG and JPEG files
fix nativeimagedebuginfoprovider . getjavatype for hostedmethod .
added a ` getIcon ( ) ` method to the ` Data ` class and updated the ` DataTableTopComponent ` to set the display node to
added a check for the last index of the request name before returning it to ensure that the request name is not empty before returning it to avoid
modified the replacement logic in ` FindAndReplace . java ` to handle dollar signsTolerated in regex patterns to ensure correct replacement behavior
simonstewart : do n ' t cast to xmppconnection to avoid classcastexception
refactor SchemaExtractionProcessor class to improve code organization to enhance maintainability and readability of the code
added methods to copy directories and directories in IO . java and removed them from SpecWebAppTest . java to streamline file copying functionality and
added error handling for unknown datum classes in JacksonUtils to improve error reporting for unknown data types
refactor ABI handling in DefaultJavaLibraryBuilder to use requireRule for library and class ABI jars to improve code clarity and ensure
simplified height calculation in SelectBox by removing unnecessary padding to improve code readability and maintainability
added normalization of database and table identifiers in ObjectStore . java to ensure consistent identification of database and table names
added handling for " oracle " database type in DbSqlSession . java to ensure correct schema is used when " oracle " is provided
removed the Logout method call from HomeFragment . java to simplify the code by eliminating unnecessary response handling
updated mockStreamingRuntimeContext parameters from ' false ' to ' foobarTask ( 43 / 43 ) ' across multiple test files to ensure
replaced the variable ` priviledged ` with ` candidates ` and added a null check for ` result . a . get ( ident )
updated the management check in ContainerLifeCycle to use a boolean variable for better readability to improve code clarity and maintainability by using a
corrected the spelling of " IExecutionAttributesDialect " to " IExecutionAttributeDialect " across multiple files to ensure consistency in naming con
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure that the metadata is cleared before
added null checks for the loc variable in CmdGetTime . java to avoid potential NullPointerExceptions when loc is null
added null checks for measurement and introduced DisruptorQueueExceptionHandler for handling exceptions to improve robustness by preventing null pointer exceptions during data processing
deleted the Session2Token . java file to the functionality was no longer needed in the project
cloudstack - 4892 : remove volume from disk when volume creation fails
added a new Install class to the PopupDataProvider and implemented instant app support in SystemShortcut to enhance functionality to support instant app installation in the
added a NullAuthoritiesPopulator to the LdapAuthenticationProvider class and updated related tests to ensure that null authorities are returned correctly when retrieving
updated the method of obtaining the retrolambda JAR path in Executor . java and added a fallback mechanism in CN1BuildMojo .
replaced ` buildOrThrow ( ) ` method with ` build ( ) ` method in ` ShadowCamera . java ` to improve code clarity
updated the method signature of ` sortLiveDocs ` to use ` Bits ` instead of ` MutableBits ` to improve flexibility in handling live
added handling for null results in JMESPathExtractor to improve robustness by preventing potential null pointer exceptions
updated import statements in AuthorizeTag . java and added a null and empty check for currentUser ' s authorities to improve code clarity and ensure
updated assertions in tests to use ` Date ` instead of ` DateTimeUtils ` for date formatting to improve code readability and maintainability by standard
cloudstack - 4892 : fix typo in vm snapshot error message
updated ` RobolectricTestRunner ` to include ` methodClassConfig ` and ` testClassConfig ` and changed ` ArrayList ` to
replaced ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner . java ` to improve performance by using a more
added a method to compare partial partition keys in HiveAlterHandler and updated related logic in TestHiveMetaStore to improve partition key comparison logic
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to enable the visibility of the icon
corrected formatting of the if statement in SimulationStatus . java to improve code readability and maintain consistency
replaced ` SharedBlockingCallback ` with ` Callback ` in multiple classes to simplify code and improve readability by using ` Callback . Completable
added workspace listener functionality to ` PreviewControllerImpl ` and modified ` PreviewUIController ` to use it to enable dynamic graph building based on workspace
added a check for VM anonymous classes in ReflectionFactory . java and updated class name checks in ReflectUtil . java to ensure proper handling of anonymous
refactor TransportHelper class to improve code readability to enhance maintainability and facilitate future updates
updated the file path format in CatalinaAcegiUserRealm . java to ensure proper resource loading for XML files
updated logging statements in AmbariServer . java to initialize the ActionManager before starting the server and agent to ensure that the server and manager
added null checks for initialization and modification nodes in JSONWriter . java to enhance robustness and prevent potential NullPointerExceptions
refactor methods in SliderAppsViewControllerImpl to accept a FileSystem instance instead of using a hardcoded path to improve code clarity and
added a check to ensure the backgroundManager is attached before attaching it to avoid potential NullPointerExceptions when the backgroundManager is not attached
set the current tab to 1 and adjust child dimensions in multiple classes to ensure proper layout behavior and improve user interface responsiveness
added a null check for the URL in BaseDataSource and created a test for it in SimpleDataSourceTest to ensure that a valid URL is provided
added JUnit 5 annotations to the PebbleModuleTest class for compatibility with JRE 8 and 12 to ensure compatibility with newer Java versions
added EditNameDialog functionality to FileDisplayActivity for directory creation to enhance user experience by allowing users to create a new directory when the directory is
added functionality to toggle bar borders in multiple chart activities to enhance user experience by allowing customizable bar border behavior in the chart
updated OkCoinExchange configuration to use " okex . com " instead of " okcoin . com " and " okex . com "
[ zeppelin - 1349 ] add a heuristic to set deciderscorecomparator in the evaluatedforagertest
replace FileChannel with SeekableByteChannel in Files . java and add a new test in BytesAndLines . java to improve resource management and
refactor ` getFlattenFieldTransferPair ` method to accept a ` FieldReference ` parameter and update related references to improve code clarity and
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
reformatted conditional statements in SerializationConfigurationParser . java for consistency to improve readability and maintainability of the code
added heap limit configuration for debug devices in QuickstepProcessInitializer . java to optimize performance by allowing watch heap for debug devices
refactor the sumWithCompensation method to use a variable for better readability to improve code clarity and maintainability by reducing red
[ log4j2 - 1343 ] fix npe in abstractloadbundletest
[ hotfix ] [ table - common ] fix checkstyle violation in precompactedrow
updated bitwise operations in ICC _ Profile . java and ColorConvertOp . java , and added a new test class InvalidRenderIntentTest .
close meterregistry lifecycle on shutdown
change log level of config center from warn to info ( # 11886 )
added multiple try - catch blocks to validate certificate generation in CertificateFactoryTest . java to ensure proper handling of certificate exceptions during certificate generation
camel - 14284 : camel - core - optimize simple predicate parser to handle ambiguous binary operator
removed redundant code in ` onTabUnselected ` method and added focus change handling in ` IDEEditor ` to improve code readability and
add user . name to accesslogvalve error message
updated file paths and scaling factors in SkeletonModelGpuSkinningTest . java , added null check for submeshnames in Ogre
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature
added @ Deprecated annotations to UpgradeResponse . java to indicate that these methods are outdated and should not be used in future development
added support for specifying the " d . ts " declaration in the JSweet command line launcher and transpiler to allow users to specify the
[ flink - 20688 ] [ stream ] add default fetch timeout for kinesis consumer factory
add . html to stream dataflow worker ' s timestamp
increased the default value of METASTORESERVERMAXTHREADS from 100000 to 1000 to allow more time for the metastore server
changed the return type of ` onTaskSnapshotChanged ` from ` void ` to ` boolean ` in ` RecentsModel . java `
updated the shadow radius parameter in SwipeUpAnimationLogic . java from mMaxShadowRadius to shadowRadius to ensure the correct shadow radius is
added a new test method ` chainNestingAndAggregation ` to ` ChainParserTests ` to validate the functionality of the ` aggregatorInput `
updated loop condition from ' limit ' to ' end ' and added a failure assertion in MarketSellAssetActuatorTest . java to
use isInteractive instead of isinternal in polyglotcontextimpl to check if the source be interactive .
updated conditional logic in CreateKeytabFilesServerAction . java to use ' | | ' instead of ' && ' to improve readability and
added DisplayController import to LauncherPreviewRenderer and modified WindowManagerProxy instantiation to include DisplayController as a parameter to enhance functionality by integrating
updated toolTipText assignment logic for root directories in MetalFileChooserUI and SynthFileChooserUIImpl to ensure accurate identification of the
updated screen size retrieval from getToolkit ( ) to getDefaultToolkit ( ) in LooksFrame . java to ensure compatibility with the default
changed the return type of the ` recognise ` method from ` List < ? extends RecognisedObject > ` to ` List < Caption
refactor JPASQLBase to improve entity management and add new test cases for fetch results with factory expressions to enhance test coverage and ensure
removed unnecessary drag index check and adjusted drag index logic in FreeformFinSetConfig . java to streamline the code by eliminating unnecessary
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " in DependencyBank . java to reflect the
updated error message in Runtime . java and added spendAllGas ( ) method call in Runtime . java to improve clarity of error reporting and
updated error formatting to include a newline character in multiple classes to improve readability and consistency of error output
added a @ Deprecated annotation to the Weights class to indicate that the class should no longer be used in future development
use register platform - specific unsafe plugins to reduce code duplication
added ` @ Hint ( isDep = false ) ` annotation to ` AndroidAppModularityDescription ` and ` AndroidGraphEnhancer
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to disable the center page vertically functionality
updated the order of calls to ` migrationInfo . doneProcessing ( ) ` in ` MigrationRequestOperation . java ` to ensure consistency in the
updated variable names from HOST to BASE _ URL in KonnectedBindingConstants and KonnectedUPnPServer , Kon
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy . java
added database creation and processing methods in TestJdbcWithMiniLlap . java and updated query parameters in LlapBaseInputFormat . java
added a new test method ` testCaseInsideBrackets ( ) ` to ` CaseExpressionTest . java ` to validate SQL parsing and deparsing
added a new method ` startCopyMode ( ) ` and refactored the event handling logic in ` ConsoleActivity . java ` to improve
updated XML output handling in TestCommand . java to use DocumentBuilder and Transformer to improve XML writing flexibility and ensure proper resource management
camel - 16451 : fixed the npe of custom list aggregation strategy with empty splitter .
camel - 14650 : camel - jbang - log should include the cause in the exception message .
* fix checkstyle issue in util / logging / basicconfigurator . java and socketmin . java
[ hotfix ] [ table - common ] add check for PHI _ NODE flag in type qualifier dataflow analysis
remove unused import of SharedStringSource from TestXSSFRichTextString . java to clean up the code and improve readability
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate the invocation of a method with specified parameters
refactor multiple classes related to BoxAndWhisker and Histogram to improve code organization and maintainability
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit 5
changed NormUpdate class to static and updated equality checks to use ` . equals ( ) ` instead of ` = = ` to improve performance and
changed the visibility of the singleton and its constructor from public to private in IndexFileNameFilter . java to enhance encapsulation and restrict access to the
refactor IfStatementTest to use a single PluginDefinition variable and streamline vertex processing to improve code readability and maintainability by reducing
updated method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java `
removed unnecessary Gson registration and null - safe methods from TypeAdapter and StreamingTypeAdaptersTest to simplify code and improve readability by eliminating
updated the expected size in BundledDistributionTest from 12 to 13 to reflect the correct expected behavior in the test
added a new class EXIFReader and updated ImageProcessingService to use it to streamline metadata processing and improve image processing functionality
cloudwatch : return none instead of unknown _ to _ sdk _ version when unit be unknown
feat ( pmml ) : add support for set request params in applypmmlmodelcommand
improve error message when a peer receive a repeated currency transfer start message .
added a check to ensure the bubble bar is visible before proceeding to prevent further processing when the bubble bar is not visible
[ gr - 24984 ] handle branchtargetinvaliddexception in aarch64 backend .
added a try - finally block around the initialization of JDKLogManager in JDKXRLogger . java and implemented a concurrent initialization test in X
added a ` find ` method to ` TicketCatalog ` and refactored logging messages in ` DefaultTicketCatalog ` and ` HazelcastTicket
refactor SSL connection strings for consistency and clarity to improve code readability and maintainability
[ hotfix ] [ table - common ] fix memory leak in sortmerresultpartition
http : / / issues . apache . org / jira / browse / amq - 4237 - add miss constructor to jmsio
updated PluginHandleController , PluginHandleService , PluginHandleDO , PluginHandleQuery , and PluginHandleDO classes to include a type parameter to
updated method calls from ` nextSpan ( ) ` to ` start ( ) ` in ` DefaultSpanCreator ` and ` SleuthAdvisor
added new GLKViewDrawableColorFormat , GLKViewDrawableDepthFormat , GLKViewDrawableMultisample , and GLKView
add test to verify user lock - out after fail attempt
fix ( pytorch ) : add support for complex ( ) in pytorch library
removed unnecessary thread interruption check and replaced it with a do - while loop in SynchronizationStatistics . java to simplify thread synchronization logic and
refactor Implements and ShadowPicker classes to improve code organization to enhance maintainability and readability of the codebase
updated HttpClientOptions to create a new method for creating HTTP / 2 client options and added configuration for connection pool size , multiplexing limit , and
added support for both StructType and DynamicArray types in DynamicStruct . java and improved type handling in SolidityFunctionWrapper . java
updated ` getStringProperty ` and ` getFloatProperty ` calls to include a ` true ` parameter in ` FontUtil ` and ` InlineLayout `
added two overloaded constructors to the CopyStep class and a corresponding test in CopyStepTest to enhance functionality and ensure correct handling of shell commands
fixed - rsemaphore . addpermits ( ) method do n ' t work after addpermits ( ) method . #
camel - 14284 : fix the unit test error of camel - core
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` and ` FlavorParserTest ` to utilize
updated data types from List < String > to List < ByteString > in WitnessScheduleStore . java to improve data handling by using a more
added a check for empty resultsMeta before printing it in TestElementsAnnotatedWith . java to ensure that output only occurs when resultsMeta is not
refactor ConcurrentLinkedQueue to improve null checks and add a new RemoveLeak class for testing concurrent queue behavior to enhance code clarity and
added a boolean parameter ` addSpecialTokens ` to multiple ` encode ` and ` batchEncode ` methods in ` HuggingFaceTokenizer `
[ hotfix ] [ runtime ] use collections . ncopy instead of manual list creation
updated data size and chunk data handling in LoadSingleTsFileNode . java to ensure accurate data size and data size calculations for chunk data
added a new constant for session storage context and updated state handling in DuoSecurityMultifactorWebflowConfigurer to enhance session management
added a new test method ` testSchemaValidation ` in ` TestJspDocumentParser . java ` to verify schema validation functionality to ensure that the
added a default constructor to TypeAdapter and updated @ Ignore annotations in Java17RecordTest and ReflectionAccessTest to disable tests until record support is
introduce ` ` kill ' ' and ` ` preparekill ' ' method to make sure we do n ' t throw a ` `
refactor AntPathRequestMatcher class to improve code readability to enhance maintainability and facilitate future updates
add the ability to create resource policy with a type parameter ( e . g . collection )
added null check before releasing _ deflaterEntry in GzipHttpOutputInterceptor . java and improved test assertions in BlockingTest . java to
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup of test lifecycle after each test execution
added normalization for " Unknown " unicode char 65533 in CheckSum . java to ensure proper handling of special characters in checksum output
refactor command variable handling and add null check for completer to improve code robustness and prevent potential NullPointerExceptions
fix warning due to miss @ override or miss @ params in javadoc . in basicprofilerstate and baseappstate
updated the variable name from ` objectToSave ` to ` dbDoc ` in ` MongoTemplate . java ` and added a new test for
added functionality to extract multiple remote addresses from the IP string in RequestUtils . java and created a corresponding test in RequestUtilsTest . java to
changed the return type of getJobArgs methods from String to ObjectBuilder in JsLibrary . java to allow for more flexible handling of JSON objects
replaced direct calls to InetAddress with a static method to retrieve the host address to improve code readability and maintainability by centralizing host address
updated glyph rendering logic in GlyphLayout . java and added a test case in BitmapFontTest . java to ensure proper handling of wrapped runs and
added a method ` pauseOrResumeSplits ` to ` PulsarSourceReaderBase ` and ` PulsarPartitionSplitReader
added support for the Hive script operator ID environment variable in HiveConf and ScriptOperator to enable dynamic configuration of script operator IDs for improved flex
refactor ` getListedTermCounts ` method to use ` SimpleImmutableEntry ` and streamline term count retrieval to improve code readability and
added a new action class ` UseSeparateStepSizeAction ` to provide functionality for enabling step size options in the JOG code
added imports for AccountManager and FileLockingHelper , and modified file filtering logic in FileMenuFilter . java to enhance code clarity and
hbase - 25819 fix npe in roundrobintableinputformat when regionname be blank
change the value of BraveHttpHeaders . Sampled . getName ( ) from " false " to " 0 " and " 1 "
pdfbox - 4892 : use ioutils . closeclose instead of null check
added fullscreen support and updated display mode handling in GwtGraphics and GwtApplication classes to enhance compatibility with fullscreen features in the application
updated WebfingerIssuerService to use URI instead of String for resource handling to enhance flexibility and support for different URI formats in the application
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate configuration of SoulApacheDubbo
replaced calls to ` Gdx . files . internal ( fileName ) ` with ` resolve ( fileName ) ` in ` SkinLoader .
updated logging levels from warn to info in ChainingAttributeReleasePolicy . java and OidcDefaultJsonWebKeystoreCacheLoader . java to
changed PMS . REALTIME _ LOCK . lock ( ) to PMS . REALTIME _ LOCK . lockInterruptibly ( )
moved the package declaration from ` java . lang ` to ` java . lang ` to correct the package structure for better organization
do n ' t report redundant branch if there be no exception
simonstewart : use default httpdatasource for download manifest
added a configuration property for the maximum number of prepared statements per database connection to provide a way to control the maximum number of prepared statements per database
changed the return type of the ` set ` method from ` WritableConfig ` to ` Configuration ` in multiple configuration classes to improve type specificity
added a checkErr method to handle command errors in AutoScalingHandler to ensure proper error handling for command payload errors
combine and apply modifications to CombinedDataset . java to improve data handling and processing efficiency
change variable name from ' buf ' to ' b ' in InflateIn _ DeflateOut . java to improve code clarity
remove cryptography restriction from jce , policy , etc .
added a check for the entity ' s cancellation status before moving to the Nether entity to ensure that the entity is not cancelled before proceeding
added a new test method ` testPageMarginsLongTextTransform ` to the ` TextVisualRegressionTest ` class to verify the functionality of
added a null check before setting the vectorization context in Vectorizer . java to avoid potential NullPointerExceptions when the context is null
fix wialon speed calculation ( fix # 3591 )
hbase - 25815 disable the metric user aggregate by default ( # 2594 )
added a method ` isEmpty ( ) ` to the ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to provide a way to
updated the initialization of mUserPresent , mVisible , and mAttached variables and added a conditional check before unregistering the receiver to ensure proper
refactor multiple HTTP - related classes to improve code organization to enhance maintainability and readability of the codebase
added parameters to the zadd method call in PipelineBase . java to enable additional parameters for the zadd operation
( chore ) camel - core : fix checkstyle issue in unit test
rename the test class from ` TestAsyncMessages ` to ` TestAsyncMessagesPerformance ` to clarify the purpose of the class related to
added a method to retrieve an Optional in VersionedTargetGraphBuilder and refactored test handling in VersionPropagatorBuilder to improve code readability
updated constants for epoch seconds in TimeZoneProvider . java to improve clarity and maintainability of time zone comparison logic
corrected the calculation of the header size in EscherBlipRecord . java and added a new test class TestOLE2Embeding
removed redundant initialization of the ' row ' and ' column ' variables in JSONParser . java to streamline code by eliminating redundancy
updated ` FindTypes ` and ` JavaType ` classes to use ` StringUtils . aspectjNameToPattern ` instead of ` JavaType . Sh
updated DETAIL _ THUMB _ HEIGHT and added PLAY _ TRAILER action handling in BaseItemDetailsFragment . java to
added a method ` removeGlyphInfoFromCache ` to handle glyph information freeing in ` CStrike ` and ` CStrikeDisposer
fix for act - 1188 : terminate end event on end - to - end ( # 1188 )
camel - 13651 : camel - xml - bind - support xml - root - element in type name strategy
updated the valid endpoint URL from " http : / / www . apereo . org / scottb . html " to " https
add ` ` prdef ' ' option to reset all preference to default value
changed access modifiers from private to protected for several fields and methods in ThriftMetrics and ThriftServer classes to enhance encapsulation and restrict access to these
[ danfossairunit ] remove deprecated channel ' { } '
use hamcrest assertion instead of junit in integrations / cdi / jersey / testendpoint . java ( #
removed duplicate code for stopping expansionHelper in TweetActivity . java to streamline code by eliminating redundancy
added null index check in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to ensure index is valid and enhance object comparison and hashing functionality
cloudstack - 7038 : add disk size to custom params when create vm
added preference - based visibility checks for suggested apps in PredictionRowView to enhance user experience by allowing toggling of suggested apps based on
[ geos - 8470 ] apibboxparser . parseCRs ( ) now return an empty coordinatereferencesystem instead of null
added methods to validate parameters for value , position , and Merkle tree depth in LibrustzcashParam . java to ensure that values
mark IThrowableEntity as deprecated to indicate that it should no longer be used in future development
added random values for x and y in NodeDataImpl . java to ensure consistent positioning of the node ' s attributes
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test method ` validateRefreshToken _ should
refactor the initialization of ` declaredDepsBuildResult ` and ` returnedStderr ` to use a try - with - resources statement to ensure proper
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the release of the application
added a condition to check for DEEP _ SHORTCUT itemType in LoaderCursor . java to ensure proper handling of deep shortcut items in the
added a hashCode ( ) method to the TimeGranularitySpec class to ensure consistent hash code generation for object instances
changed access modifiers of classes BooleanWeight and DisjunctionMaxWeight from private to protected in BooleanQuery and DisjunctionMaxQuery classes to allow subclasses
added a boolean flag ` useProxyResponseCode ` to manage proxy response code behavior to ensure proper handling of NTLM proxy responses based on
aarch64 : fix aarch64move and aarch64Macroassembler to use a scratch register .
server : do n ' t list vm up by host id , use capacity _ type _ memory instead
added a null check for the maximum score in JSONResponseWriter . java and included a query in TestDistributedSearch . java to ensure that
updated audio recoder from 22050 to 44100 in AudioRecorderTest . java to improve audio recoder accuracy
updated the calculation of newOriginX in RocketFigure . java to account for the minimum x scale to ensure accurate positioning of the
[ hotfix ] [ druid ] fix npe in druidquerybasedinputformat
added a new property " ORIGINAL _ TYPE " to the CustomProperty class and updated regex pattern to include it to enhance the functionality and
added a static method ` create ` to create a ` Index ` using a parent table and a data map to facilitate the creation
simplified the return statement by removing the boolean variable ` isBetweenGivenPeriod ` to improve code readability and maintainability
updated schema compatibility handling in SchemaCompatibility . java and added new test cases in TestSchemaCompatibility . java and TestSchemaCompatibility . java to ensure
added support for persistent attribute types in QueryUtils and updated join logic in EclipseLinkNamespaceUserRepositoryTests to improve handling of entity paths and
added synchronization to the spans list in TestSpanHandler . java to ensure thread safety during concurrent access to spans
replace ` List < Object > ` with ` List < ? > ` in multiple method signatures across multiple classes to enhance type safety and flexibility
updated exception handling in ViewContextImpl to use InvocationTargetException and added logging for authentication failures to improve error handling clarity and provide more informative logging
refactor OAuth2AccessTokenEntity class to improve code organization to enhance maintainability and readability of the code
updated error messages related to request rejection in multiple classes to clarify that the service cannot process requests due to status = DOWN to improve
added multiple ` ProjectFile ` entries for iOS data and moe resources in ` GdxSetup . java ` to ensure proper handling of iOS
replaced ConcurrentMergeScheduler with ConcurrentMergeScheduler in TestSearcherManager . java to enhance merge performance by utilizing ConcurrentMergeScheduler
updated conditional checks in QTestUtil . java and refactored list iteration in GenericUDTFInline . java to improve code clarity
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization to enhance maintainability and readability of the codebase
ggb - 1889 prevent mouse up in web when click on a spreadsheet .
added persistence and session factory services to HibernateBundleActivator and updated test cases in OsgiTestCase to improve service management and ensure proper
fix calculation of timeout in hikariprogress ( ) to account for connection timeout
voicecompilertest : move the creation of the component . xml file to a separate directory .
updated file path handling to use ` File . separatorChar ` and improved directory checks in ` FileOpener ` to enhance cross - platform
changed the return type of ` row ( ) ` from ` Cell < T > ` to ` void row ( ) ` in ` Cell .
improve error message when port number be specify multiple time
added a null mask feature to the WebSocketClient class and modified the WebSocketConnectionD12 instantiation to use a fixed mask generation based on the _
changed return type of ` genUDTFPlan ` from ` RelNode ` to ` Pair < RelNode , RowResolver > ` to
added node selection statistics tracking for bucketed preferred and non - preferred node selection in NodeScheduler and related classes to enhance node management by tracking selection
added a new class ` Person ` with a private field ` name ` and its getter and setter methods to facilitate the creation and
added a boolean variable ` hasOwnerPtr ` and modified the owner execution logic in ` CPlatformWindow . java ` to improve readability and
refactor PlaybackOverlayFragment to utilize a Handler for managing clock animations to improve performance and maintainability of the code by utilizing a
remove unnecessary call to updatecomparatoroutputlevel ( ) and markdirty ( ) in some place .
changed the ` IMPL ` variable from ` private static final ` to ` private static ` and improved exception handling in ` SegmentReader `
refactor event firing in Sudoku to run on the Event Dispatch Thread using SwingUtilities to ensure that event updates are triggered on the Event
updated the ` DefaultInetAddressAdapter ` and related classes to use ` Class ` instead of ` DefaultInetAddressAdapter ` to enhance
added null checks and assertions for double , long , and boolean data types in Series . java and corresponding test cases in DataFrameTest . java to
changed the option from " -- no - audio - time - stretch " to " -- audio - time - stretch " in VideoManager . java
updated boundary checks in GeoRelationUtils and GeoUtils to use Math . min and Math . max for boundary calculations to improve accuracy of boundary checks
server : fix npe in listvirtualmachines api - use getdiskofferingid instead of getid
added cleanup methods to HazelcastTest class to ensure proper resource management during tests
added error handling for AES cipher modes in BlockCipherTest . java to ensure proper verification of expected exceptions for unsupported algorithms
added filter statements for printing operations logs in QFileClient . java to enhance logging functionality for better debugging
fix miss type argument during bean definition injection ( # 3390 )
set current connection address to proxy address if it ' s null
replaced ` Math . addExact ` with ` MathUtils . cappedAdd ` for demand calculation to simplify code and improve readability by
refactor code to use try - with - resources for ImageOutputStream and ensure proper resource management to improve code readability and ensure proper resource cleanup
replaced calls to ` TvApp . getApplication ( ) . showSearch ( ) ` with ` SearchActivity ` in multiple fragments to stream
removed unnecessary ' this ' keyword from constructors in SchemaCrawlerCommandLine , GrepOptions , and MutableIndexColumn classes to improve code readability and
http : / / issues . apache . org / jira / browse / amq - 4237 - add osgiservice to
added @ Autowired annotation to PersonRepository in RepositoryIndexCreationIntegrationTests . java to enable dependency injection for the PersonRepository instance
updated the ` stop ` method to use ` InterruptedException ` instead of ` Exception ` and corrected the log message format in ` TestVertxU
added new case statements for various Cactus types in BlockCactus . java to support additional cactus functionalities
refactor mouse event handling into a separate method for better readability to improve code organization and maintainability by encapsulating mouse event handling logic
introduced a new abstract class ` AbstractMinMulticastFlowControlRhsPadding ` to extend ` AbstractMinMulticastFlowControlR
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation . java and IOSNative . java to enhance text editing
improve error message when no tokenization model be specify .
added a condition to check if the query is distinct before processing group by expressions in ClusterIntegrationTestUtils . java and modified the handling of distinct
[ gr - 20688 ] add method to jninativelinkage . closelylinkage . getcloselylink
bug 60527 - fix typo in javadoc of jsyntaxtextarea
added a null check for the children array before iterating to avoid potential NullPointerExceptions during execution
added tokenPosition and currentPosition fields and improved error handling in MessagePackParser . java to enhance JSON parsing capabilities and ensure correct parsing context is
added locale management functionality after class execution in AbstractSolrMorphlineTestBase to ensure consistent locale settings during tests
simplified the size calculation for the status bar in LauncherFragment . java to improve code readability and maintainability by eliminating
added a new test class ` MetricsReporterTest ` to validate metrics functionality to ensure correctness of metrics reporting in the metrics framework
added a typeCacheMap instance to OsgiServiceRegistry and removed unused import in CamelMockBundleContext to improve thread safety and eliminate unused imports
added ` equals ` and ` hashCode ` methods to the ` Rectangle ` class to ensure proper comparison and hashing functionality for ` Rectangle ` objects
[ hotfix ] [ test ] add test _ nonexistenttopic to kafka test
refactor DSAParameterGenerator to use BigInteger constants for prime strength validation to improve code readability and maintainability by reducing boilerplate
added a new configuration variable ` LLAP _ DAEMON _ AM _ USE _ FQDN ` and updated related methods to utilize
make clientoutofmemoryhandlertest thread - safe
added a new method ` getCmoObjectId ( int ) ` to multiple shape classes and updated ` setObjectId ( shapeId ) ` calls to
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of a distinct query
refactor Driver , SearchTravRetLoadFieldSelectorTask , and SearchTravTask classes to improve code organization and maintainability
added methods to bind and unbind the ` ExtensionAdapter ` in the ` ManagedKubernetesClient ` class to enable dynamic binding and unregistration of
updated subtitle text to use a utility method for retrieving information from base items to improve code readability and maintainability by centralizing the retrieval of
updated JUnit imports and annotations from ` @ Before ` and ` @ After ` to ` @ BeforeEach ` and ` @ AfterEach `
added error handling to the generateSummary method in BugCollectionBugReporter . java and XMLBugReporter . java to improve robustness by logging exceptions
removed parameters from reset methods for intPool and bytePool in TermsHash . java to simplify code by eliminating unnecessary parameters
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
updated ShadowWindowManagerGlobal to handle TIRAMISU API level and introduced a new WindowSessionDelegateU class to enhance compatibility with T
fix urlhelper . force add scheme host and port with non - standard port
added support for MSSQLDatabase in foreign key constraint generation to ensure compatibility with both Oracle and MSSQL databases
hbase - 24938 fix checkstyle violation in hstore and storeengine
remove debug print from emzuli pipe , add filtereventhandler to handle side check .
simonstewart : make debug mode configurable
updated HiveLookupTableSource and HiveLookupJoinITCase to use getTableSchema ( ) instead of getProducedTableSchema ( ) and modified
deprecate listenerset . setthrowthrowwhenusingWrongthread and make it thread - safe .
added CatalogAndSchema import and modified schema name construction in SequenceSnapshotGenerator . java to enhance schema handling by using a customizable CatalogAndSchema
updated color handling in SpriteBatch , SpriteCache , LwjglDebugStarter , AlphaTest , and AlphaTest classes to
fixed - spring data redissonconnection . tocompletablefuture . join ( ) method throw classcastexception . # 3368
added logic to replace " http : / / " and " https : / / " with " https : / / " in statisticYearCores
renamed the method ` launchTask ` to ` launchTaskFromView ` and introduced a new method ` launchTaskFromView ` to improve
updated MorfologikFilter to use a dynamic dictionary resource instead of a wildcard import and refactored related imports to improve flexibility
updated sort options in GridFragment to use the correct titles for community and critic rating categories to improve clarity and consistency in sorting options
added imports for ViewKt and ListRow , and modified visibility of ViewKt in CustomListRowPresenter . java to ensure proper handling
added try - finally block around the switch statement in StressAction . java to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability to enhance maintainability and facilitate future updates
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof ( DB2Database ) ` for case sensitivity checks to improve code
added support for jsr310 java time module ( thymeleaf / thymeleaf )
replaced Log4j MDC import from ` org . apache . log4j . MDC ` to ` org . slf4
replaced TypeBearer with Type in PhiTypeResolver . java to simplify type handling by using a more general Type type
removed unnecessary whitespace and improved formatting in CoinbaseTransaction . java to enhance code readability and maintainability
added functionality to retrieve and force build targets in BuckConfig and updated ProjectCommand to include a new method to force building with Buck targets
updated the initialization of BusySpinIdleStrategy in Ping . java to ensure proper resource management and avoid potential memory leaks
replaced ` ContentProvider ` with ` ContentResolver ` in ` OCFile ` and updated related references to improve flexibility in handling content
removed redundant conditional checks for state change events in ReportPanel . java to streamline code for better readability and maintainability
[ hotfix ] [ test ] fix npe in testinglogicalslot when slot owner be null
add a new recipe class ` RemoveCallsToSystemGc ` to remove calls to ` System . gc ( ) ` and ` Runtime .
replaced calls to ` super ( ) ` with ` super ( ) ` in multiple exception classes to ensure consistent instantiation of ` super ( )
added a method to set the UIID of the ScaleImageLabel class to ensure the correct icon is set for the image label
updated variable names from ' foundEntry ' to ' update ' in FeedUpdateService . java to improve clarity and consistency in variable naming
added support for " - cp " argument alongside " - classpath " in addition to " - classpath " to enhance command - line options
updated the link configuration from ` options ` to ` compiler ` in ` avutil . java ` to ensure the correct compiler is used for the
set the initialization flag to true in StorageService . java to ensure proper initialization of the storage service
updated Test7196045 . java file to improve test coverage for new functionality
updated density and decay values in ShaderParametersLightShaft . java to improve rendering quality and responsiveness
added ` withState ` and ` stateData ` fields to ` OidcConfiguration ` and updated their usage in ` OidcRedirectActionBuilder
phoenix - 1346 add @ nullable to unique constraint for table with non - nullable column
added federated sharing checks in UsersAndGroupsSearchProvider . java and EditShareFragment . java to enhance user experience by allowing users to share
added a method ` needsDocValues ( ) ` that always returns true in ` TestBBoxStrategy . java ` to ensure that document values are
refactor BufferAlignmentInterceptor and StringWriterOutputManager for improved error handling and code clarity to enhance code readability and provide clearer error
added an ` intForEach ` method to ` Int2ObjectHashMap ` and updated imports in ` IntObjConsumer ` and ` IntObj
fix global map storage to share scoreboards early
change return type of count ( ) method from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongo
refactor logging statements in MManager . java for clarity and consistency to improve readability and maintainability of the code
refactor the dot product calculation in VectorUtil to use a temporary variable for clarity to improve code readability and maintainability by reducing
added a threshold for handling the irreSIBLE _ THRESHOLD in multiple classes and updated related methods to manage the latest confirmed block number to improve
refactor locale handling in GpsMainActivity , MainPreferenceActivity , and Systems classes to use a centralized method for setting locale to improve
added functionality to check if the new database was created in LauncherClings . java and integrated it into LauncherProvider . java to ensure
refactor collection handling in BasicAclEntryAfterInvocationCollectionFilteringProvider to improve readability and maintainability to enhance code clarity and ensure proper
refactor conditional statements in Constants . java for clarity to improve readability and maintainability of the code
added a check for the current thread in TestIndexWriterDelete . java to ensure that the test only proceeds if the current thread is the
changed the access modifier of the closeDatabase method from private to protected to allow subclass access to the closeDatabase method
updated imports and method calls in FullDetailsActivity and BaseRowItem to use the new API structure to ensure compatibility with the latest API changes and
added attribute handling for SVG elements in BatikSVGDrawer . java to ensure that SVG elements have the correct attribute values for the document
added a try - catch block around the user configuration parsing in ConsoleKeys . java to improve error handling by logging the original exception as a warning
added conditional checks for " WaitForResult " in CodenameOneActivity and modified intent handling in AndroidImplementation and CodenameOneActivity to
refactor constructors in HitQueue , SpanPositionQueue , PriorityQueue , TopOrdAndIntQueue , and TopOrdAndIntQueue to
added functionality to display widget descriptions in the WidgetCell class to enhance user experience by providing a clearer description when available
added a maximum attribute count check in Attribute . java to ensure that the attribute count does not exceed the registered attribute count to prevent registration issues
moved PredicatesTest . java to the org . hazelcast . query . impl . predicates package and added necessary imports to improve organization and
camel - 1565 : add support for case - insensitive header in camel - http
updated break logic and variable names in InlineLayout and Breaker classes to improve clarity and maintainability of the code
added nullability annotations and improved null handling in ShareUserListAdapter . java to enhance code robustness and prevent potential NullPointerExceptions during view
refactor the ` shouldInstrument ` method to return a boolean indicating whether a class is instrumented based on the presence of a ` Instrument `
added a condition to return the size of the last column in the table if the association is insert destination before the source to ensure that the table
updated the method to retrieve the memory limit file path in CmdModifierTest . java to ensure accurate retrieval of memory limits based on cgroup version and
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` for empty dependencies to improve
added a null check for the source under test in JavaTestRule . java to provide clearer error messages when the specified source under test is
bump common for minecraft 1.9 . 4 and vanilla 1.9 . 4 to 1.11 . 1 ( #
added a check to ensure atIndex is non - negative to avoid potential errors due to negative index values
increased the timeout duration in BuckBlockJUnit4ClassRunner from 100 milliseconds to 500 milliseconds and increased sleep duration from 1000 milliseconds
added a new ` AssistContentRequester ` instance to the ` TaskOverlayFactoryGo ` constructor and updated its instantiation to use it to improve
updated the method for encoding the witness address in VoteWitnessProcessor . java to ensure proper handling of witness addresses and avoid potential null pointer exceptions
updated test cases in DefaultMethodRegressionTests . java to improve test coverage for method regression scenarios
refactor WorkloadManagerMxBean class to improve code organization to enhance maintainability and readability of the codebase
replaced ` KafkaProducerException ` with ` KafkaException ` in ` KafkaOutboundAdapterParserTests . java ` to ensure consistency in exception handling
added a call to close the container loader in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and implemented multiple test cases for exception handling in FaultTolerantExceptionClassesTests to
[ beam - 8470 ] improve configbuilder error message to include jobcoordinator and app runner
added ` extraProperties ` parameter to multiple ` applyTunerConfigs ` method across multiple tuner classes to enhance tuner configuration flexibility by
added a check for in progress instances before adding it to the list of segments to ensure only unique instance instances are added to the list of segments
added a condition to return null if the touchable is disabled to prevent potential null pointer exceptions when the touchable is disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to ensure
throw a retryable exception if the cache config be not create yet
refactor npm installation logic by introducing a method to check if a node package is installed to improve code readability and maintainability by central
added ManagedObject and ManagedOperation annotations to MBeanContainer and Destroyable classes to enable management of MBeans in the application
updated conditional check from ` inAppBrowser ` to ` false ` in ` LongClickableSpan . java ` to ensure ` inAppBrowser
replaced ` equals ( " 0 " ) ` with ` . equals ( ) ` for better readability and consistency to improve code clarity
updated type checks in ` mmm Types . java ` and added new classes ` T6558559a . java ` and `
updated player print statements to include block - in and position information for clarity to improve debugging by providing more context about the position setting
camel - 14284 : camel - kafka : fix the issue that kafka consumer do n ' t shut down properly . thanks to j
removed the default implementation of the examples ( ) method in Schema . java to streamline the code by eliminating unnecessary parameters
refactor thread interruption handling and retry logic in AgentRunner . java to improve responsiveness to thread interruptions and ensure proper
removed the time column from dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure the correct dimensions are removed from the data
updated conditional logic in FacetComponent . java to improve readability to enhance code clarity and maintainability
replaced linker dependency retrieval with CxxPlatforms . getParseTimeDeps in RustBinaryDescription . java and RustLibraryDescription .
added name property and corresponding getter / setter methods in JdbcAuthenticationProperties , AbstractLdapProperties , NtlmProperties , and NtlmProperties
added CFGPrinter logging and improved error handling in IdealGraphPrinterDumpHandler to enhance debugging capabilities and ensure proper printer initialization
phoenix - 1349 add support for small scan for point lookup ( phoenix )
added ` routeId ` to the retry filter string representation in ` RetryGatewayFilterFactory . java ` to include the route ID in the retry
replaced multiple calls to ` redisplay ( ) ` with ` callWidget ( name ) ` in ` LineReaderImpl . java ` to
replaced the ` onOverviewShown ` method with ` showForOverviewIfNeeded ` across multiple classes to streamline the overview display logic and improve
refactor null point checks in CheckIndex . java and add a test for deleting all point documents in TestPointValues . java to improve code
updated the method call from ` true ` to ` updateLastState ` in ` ZkController . java ` to ensure the correct state is
updated SQL string concatenation syntax in MetastoreDirectSqlUtils . java to ensure proper formatting of string values for better readability
added a null element to the exp list in SpliteratorCollisions . java to ensure proper handling of null values during execution
simonstewart : add ` ` textcaseSensitive ' ' and ` ` exacttextcaseSensitive ' ' method to the condition class
replaced multiple instances of ` do ( while ( true ) ) ` with ` while ( true ) ` in ` ManyToManyConcurrentArrayQueue
no effective change - add ebeanqueryengine . forwardonlyfetchsize ( ) for mysql
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to avoid logging warnings when the channel is already closed
pdfbox - 4071 : initialize arraylist with size of beads .
updated the calculation of window radius to support rounded corners in QuickstepAppTransitionManagerImpl . java to ensure correct window radius is used based on
refactor DesktopTaskView to use View instead of ShapeDrawable and LayerDrawable for background management to improve layout flexibility and maintainability by
updated the instantiation of ` UpstreamCheckService ` to include additional parameters to ensure proper initialization of the ` upstreamCheckService `
refactor logging statements in AbstractSession and AbstractSessionManager for improved readability to enhance code clarity and maintainability by reducing unnecessary
replaced error logging with a return statement in ZooKeeperHiveLockManager . java to improve code clarity by directly returning locks instead of throwing
refactor multiple Java classes related to execution configuration and serialization to improve code organization and maintainability
added a check for custom data before generating the texture 2D map in FileTextureArrayData . java to ensure mipmap generation only occurs
updated test assertions to use single quotes for secret key and Cheese in DefaultMaskingFormatterTest . java to ensure consistency in secret key formatting
added selection functionality and getter / setter methods to the List class to enhance user interaction by allowing selection behavior based on selection status
added a check to return false if the first value count is zero in LlapArrowBatchRecordReader . java to ensure proper handling of empty
added file separator handling and improved logging in PolicyContext . java , along with a corresponding test in PolicyContext . java to ensure consistent file
replaced HashSet with ArrayList for flatQueries and expandQueries to improve performance by using a more efficient list structure
refactor TLSRestrictions class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ kafka ] fix race condition in kafkaproducer # close ( )
added a new parameter " freedisk " to the assertNodeStateProvider method and modified its usage to include ignorable node values to enhance the
added a lock file deletion mechanism in RocksdbMavenPomCache . java to ensure the cache is deleted if it exists to prevent
hbase - 25827 minizookeepercluster should use ip address in testhquorumpeer . testhquorumpeer
added a new method ` getResponse ( RestCallSpec < R > , HttpURLConnection < R > ) ` to the ` RestClient ` class to
updated the method to use ` segmentTarURIStrs . toArray ( ) ` instead of ` segmentTarURIs . toString ( ) ` to
updated the loginStudent method to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to ensure
added a null check for the item ID in EnhancedBrowseFragment and StdBrowseFragment to prevent potential NullPointerExceptions when checking if the item ID
increased the number of strings from 500 to 100 in TestSpecialOperations . java to increase the maximum number of strings for improved performance
updated ByteArrayInStream initialization and removed hexToBytes method from WKBAttributeIO . java to simplify the code and improve performance by eliminating
corrected a typo in the method name from ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity and
added a check for direct substates in the AbstractStateMachine class to prevent transitions between states that are direct substates of each other
added handling for ListMultimap and SetMultimap in MultimapSubject . java and corresponding unit tests in MultimapTest . java to ensure correct equality
added JoinOperation interface to PostJoinOperation class to enhance functionality by allowing join operations
added a new test method ` testDataIssue258 ` in ` AdditionalPostgreSQLTest . java ` to validate PostgreSQL functionality to ensure that
http : / / issues . apache . org / jira / browse / amq - 5035test . java fails due to intermit
refactor AvaticaDatabaseMetaData class to improve code organization to enhance maintainability and readability of the code
changed ` lifeTime ` , ` idleTime ` , and ` maxWaitTime ` from ` int ` to ` String ` in ` MongoDb
use sip service for create audiomediaformat to avoid classcastexception
refactor ` handleFilters ` and ` handleBlockJoin ` methods to return boolean values instead of void to improve clarity and functionality in handling
added a enabled timeout option to the ShuffleHandler class and updated its logic to handle it to enable or disable the timeout handler based on the
replaced the hardcoded value of ` mQuickStepStartingRotation ` with a constant ` QUICKSTEP _ ROTATION _ UNINIT
updated logging statements in XPathBuilder . java and added new debug level logging in XQueryBuilder . java to improve logging clarity and introduce a
updated the resource loading mechanism in NNDataSet . java to use DataResource instead of a class path to improve code clarity and maintainability by
pmd : add test case for escape backslashes ( # 1751 )
added a check for the presence of the " atlas " property in the map and threw an exception if it is missing to ensure that the map
camel - 14284 : camel - support - add option to not resolve property placeholder on component
added a call to ` levelDbDataSource . closeDB ( ) ` in ` BlockchainTest . java ` and removed multiple receive listeners in
refactor code to use a new method ` getLines ` for splitting lines into a list to improve code readability and maintainability by central
polish ` ` remove ' ' from webserviceinboundgatewayparsertests ' '
replaced ` ImmutableList . Builder ` with ` Lists . newArrayList ( ) ` for creating ` SQLBindings ` instances to improve code readability and
added support for checking if the Java VM is an OpenJDK to ensure compatibility with OpenJDK in addition to Apple
added a keepAlive option to the baseUrl configuration in ReactorClient . java to ensure that the baseUrl is properly marked as keep - alive for the
replaced hardcoded vertex attributes with a constant from ShaderProgram in MD5Renderer . java and ObjLoader . java to improve maintainability
camel - 16462 : camel - core - make it easy to use a custom property component . thanks to martin for the
modified the condition to check for null accountCapsule before retrieving it from the database to improve robustness by avoiding potential null pointer exceptions
update version number to 3.8 . 1 to reflect the new release status
replace instances of ` t ` with ` t . unannotatedType ( ) ` for better type handling to improve clarity and consistency in
refactor TsFileProcessor initialization and configuration settings in StorageGroupProcessorTest . java to improve code readability and maintainability by reducing red
added a new DumpableCollection to the Server class and updated class loading methods to support the " ee10 " environment to ensure compatibility with the
added a new parameter ` waitbeforestart ` to the ` FFMpegVideo ` class to ensure proper timing during video processing
removed the ` _ skipCorrupt ` parameter from the constructor of ` OrcEncodedDataConsumer ` and related classes to simplify the constructor by elim
refactored import statements and added a new test method for handling list index out of bounds to improve code clarity and ensure proper functionality of
add lirgenerator . framemap ( ) to make it easy to access the framemap .
replaced JUnit @ Ignore annotations with ConditionalIgnore annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to improve
fix boat ' s y - coordinate tag for block water . close # 3365
modified the ` toString ( ) ` method in ` Directory ` and added a ` getLockID ( ) ` method in ` RAMDirectory ` to
removed the method ` allowExperimentalOptions ( ) ` from the conditional statement to simplify the code by eliminating unnecessary method call
added new utility methods for Path and AssertDelegateTarget in BDDAssertions . java to enhance functionality for asserting paths and assertions in the
updated variable names and logic in ForwardedRequestCustomizer . java and ForwardedRequestCustomizerTest . java to improve code readability and
updated logging level from debug to warn for Kubernetes configuration files and improved string concatenation for better clarity to enhance user experience by providing clearer
added file upload status handling in UploadListActivity and introduced a method to fill OCFile in FileStorageUtils to improve file upload management and
added new ` ProviderLoader ` and ` ProviderLoaderListener ` classes and updated ` TerminalManager ` and ` TerminalManager ` to implement it for
replace Span references with TraceMessageHeaders in StreamEnvironmentPostProcessor and its tests to improve clarity and consistency in header management
updated SelectFromDatabaseChangeLogStatement initialization to use ColumnConfig and setComputed to true to improve flexibility in selecting database change log statements by
hhh - 10688 - fix postgresql dialect to use the current _ schema ( ) instead of the current _ schema
do n ' t divide by zero when there be no data member
added error handling and scheduler state checks in ExecutionScheduleManager , ExecutionScheduler , and ExecutionSchedulerImpl classes to improve robustness and ensure proper scheduler
simplified the construction of InlineBox by removing unnecessary string conversion to improve code readability and maintainability
refactor argument checks in StatisticMap . java for improved readability to enhance code clarity and maintainability
updated the return value of getStagedRectSlideEnd from 383 to 500 to adjust the slide end duration for better user experience
updated button labels to use system resources instead of hardcoded strings to improve maintainability and readability of the code
updated condition to check for both kILL _ ROAD _ ITEMS and plotArea in BukkitMain . java to ensure that
added a new test method ` setTouchExplorationEnabled _ invokesCallbacks ` to ` ShadowAccessibilityManagerTest ` and modified ` Shadow
pdfbox - 5328 : fix miss character code lookup when font be miss
tidy up : use getname ( ) / setname ( ) instead of property access
pdfbox - 4071 : remove redundant code , a suggest by valerybokov
added imports for PlotArea and PlotArea , and modified return logic in Move . java to improve code clarity and ensure proper handling of plot
updated the version regex pattern in TestWebHCatE2e . java to include additional characters to ensure compatibility with the latest version in the
updated the condition to check for ` count ` from ` 0 ` to ` 1 ` in ` Filters . java ` to ensure that ` count
fix kafkaproducerprocessor do n ' t expose bean type name ( # 3394 )
updated import statements in JavacCompiler . java to replace IsolatedClassLoader with IsolatedClassLoader and added error handling for javac execution failure
do n ' t repaint the view if there be no item in the list
camel - 14263 : camel - spring - batch - fix typo in springbatchproducer
added a method ` isAnimationFinished ( float stateTime ) ` to check if an animation is finished to provide functionality for identifying if an animation
updated import statements in LoginInfoEndpoint . java and added a test for custom FavIcon with line breaks in LoginMockMvcTests . java
added null check for otherUrl in TimeLineCursorAdapter and modified string concatenation in HomeFragment to enhance robustness by preventing potential NullPointerExceptions
ggb - 1889 fix space in the text of the edit button in web
refactor ObjectHashSet class to improve code structure to enhance maintainability and readability of the code
refactor null checks and improve equality checks in DataUtilities . java to enhance code readability and maintainability by using ` Arrays . equals `
allow deletion of enchanted books , mc - 12770 ( # 12770 )
add microprofile test for async operation ( # 3394 )
rename the target header map suffix from " - target - flat - headers . hmap " to " - target - user " in ProjectGenerator
added error handling and logging for email sending failures in MailService . java to improve debugging capabilities and provide clearer error messages during email sending
replaced ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskHolder . java ` and `
added multiple test cases for retrieving partitions with single batch and multiple equal size batches in TestHiveMetaStoreClientApiArgumentsChecker . java to
added a closing brace to the FileListListAdapter class to improve code readability and maintainability
changed the type of ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile ` and ` OCFileListAdapter
corrected the index used in the removeViewInLayout method from the last child to the last child in BubbleBarView . java to
removed unused imports from JavaxWebSocketConfiguration and JettyWebSocketConfiguration to simplify code by eliminating unnecessary dependencies
change the ` expiresSeconds ` parameter from ` true ` to ` false ` in the ` S3Request ` constructor to disable expiration in the
fix jfxradiobutton refresh animation when timeline be null
updated condition checks in DeweyNumber . java and added a test case in DeweyNumberTest . java to ensure proper handling of
added a static variable ` categorySetString ` and modified the return statement in ` MwVolleyApi . java ` to replace " Category
corrected the spelling of " close control status " to " close code " in the WebSocketClientTest . java file to ensure consistency in
added a null check for classLoader in WebappLoader . java and updated the expected repository count in TestVirtualWebappLoader . java to ensure
removed duplicate code for adding fields in PersistentAttributeTransformer . java to streamline the code by eliminating redundancy
pdfbox - 4071 : avoid classcastexception , a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` to validate the functionality of the ` PorterStemFilter ` class to ensure that
indexer : fix write index update even if it be successfully write
updated package names from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch
added synchronization to the chatwindowmanager . getchatrooms ( ) method , a suggest by valerybokov
removed multiple instances of Sys . touch ( ) from multiple Java files to streamline the code by eliminating unnecessary calls to Sys . touch
added " - mardu " command to HgCmdLineInterface and updated untrackedFiles method implementations in NoOpCmdLineInterfaceIntegration
camel - 8750 : fixed the issue that nettyendpoint . gettimer ( ) do n ' t return a timer instance .
replaced instances of ` new Vector3 ( ) ` and ` new Vector3 ( ) ` with ` final ` and added ` range `
updated width and height calculations in X11GraphicsConfig and WGLGraphicsConfig to ensure a minimum value of 1 to prevent potential errors due to
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` , ` DelegatingSecurityContextRunnable ` , and corresponding tests to provide a
added a new class ` AnnoFilterTreeSet ` and modified ` findAnnotatedClasses ` and ` findClassesThatExtend ` methods in `
modified the handling of newLength in BytesColumnVector to ensure proper overflow and maximize size for newLength to improve robustness by preventing
replace assertEquals with assertTrueEventually in WriteBehindMapStoreWithEvictionsTest . java to improve test reliability by ensuring
modified the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in both ` MotifScrollPaneUI
ggb - 1889 add equal ( ) method to make sure that polynomial [ degree , polynomial [ degree ] , polynomial [ degree ]
added a null check for the table before setting the column class to avoid potential NullPointerExceptions when the table is null
added a try - catch block around the instantiation of ` CustomChange ` to handle potential ` ClassCastException ` to improve robustness by preventing runtime
added support for always materialize whitelisting in DistBuildConfig and refactored related classes to use BuckConfig instead of ConfigPathGetter
show warning for double entry in export dialog
added an import statement for JUnit ' s Ignore annotation and annotated the BasicDistributedZkTest class to temporarily disable the test due to
changed return types of ` doJoin ` and ` doJoin ` methods in multiple classes to return a boolean indicating success or failure to improve the
removed the method ` getAutodeps ( ) ` from ` JavaLibraryDescription . java ` to simplify the code by eliminating unnecessary
updated intent flags in LauncherTimelineCursorAdapter . java to include FLAG _ ACTIVITY _ NEW _ TASK to ensure proper handling of task
added a new method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enhance query performance by allowing pagination by
updated repository URL assertions in RepositoryConventionPluginTests to reflect the correct number of repositories to ensure that the test accurately reflects the correct repository
added a new ` affiliatetask ` class to facilitate the creation of ` node ` and ` affiliate ` data
improve error message when taglib directive uri be invalid
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added array handling for object updates in CacheKey . java and improved formatting in CacheKeyTest . java to enhance code readability and maintain
updated the implementation of ` getextmntent ` method across multiple files to utilize ` FileSystemProvider ` for file type detection to enhance compatibility
added a call to close the WebSocket session to ensure proper resource management and prevent potential memory leaks
updated ` ShadowVirtualDeviceManagerTest ` to use ` getVirtualSensorCallback ( ) ` instead of ` Shadow . extract ( ) ` and
added a condition to check if the security context object has changed before saving it to the session to ensure that the security context is only updated if it differs from the previous context to maintain consistency
refactor loopback address enumeration logic in NetUtil . java to improve clarity and functionality to enhance the handling of loopback addresses based on point and
renamed ` BUF _ SIZE ` to ` DEFAULT _ BUF _ SIZE ` and updated related references to improve clarity and consistency in
refactor KeyInfoReferenceResolver , XMLSignatureInput , TransformXPath , and TransformLocalFilesystem to improve validation logic and error handling to enhance code
added a boolean flag to track if the icon change listener is installed and updated action listener management to ensure proper handling of icon change events based on
added support for Russian language in Language . java to enhance localization support for Russian users
hhh - 15836 : use nanoseconds instead of second for sqm duration conversion
disable frame state verification in substrategraphkit
added methods to reset and reset system properties in RobolectricTestRunnerTest and TestUtil to ensure proper cleanup and cleanup of SDK properties
added a system class " org . slf4j . " to the webAppContext in ViewClassLoader . java and updated tests in ViewClassLoader
added checks for null or " jar " packaging in ChangePackaging . java and implemented a test case in ChangePackagingTest . java
fix flaky test : download file with ` ` forbidden ' ' extension
fix ( griffin ) : clear the buffer in gLFw demo
replaced instances of ` getDefaultUnits ( ) ` with ` preferredUnits ` and updated related methods in the JogService and Settings classes to
updated the expected date format in DatePatternConverterTest to use UTC time zone to ensure accurate date formatting based on the current time zone
updated return statement formatting in Terminator . java to improve code readability and maintain consistency
updated error messages for file URIs and added authority validation in FileSystem and DistributedFileSystem classes to improve clarity in error reporting for invalid file URIs and
use a timertask instead of a single thread scheduledexecutorservice in jabrefframe . showtrackingnotification
improve ftp reconnect - attempt - server - stop test
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in the ` KeyedProperties ` class to improve thread - safety and performance
added ` ignore ` method to ` JavaUtilLog ` , ` Logger , ` LoggerLog ` , and ` StdErrLog ` classes to
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerExceptions during execution
removed unnecessary type casting for item and contents in BukkitWorld . java to simplify code by eliminating unnecessary type casting
removed unnecessary image cleaning in PanelManager . java to streamline image processing by eliminating unnecessary code
added new files MMapDirectoryFactory . java and SimpleFSDirectoryFactory . java to implement directory management for MMap and SimpleFS in Solr
added null check for the ` ic ` object before creating ` BaseColor ` to avoid potential NullPointerExceptions when ` ic ` is null
updated the variable name from " field1 " to " field1 _ s " in the assertQueryEquals assertion to clarify the purpose
refactor ExtendedOperatingSystemMXBeanImpl class to improve code organization to enhance maintainability and readability of the codebase
added functionality to install left commands in the SideMenuBar class based on client property to enhance user interface by allowing commands to be added based on
added a boolean flag ` advanceWindowed ` to ` AppSettings ` and updated ` setUpWindow ( ) ` calls in ` TweetActivity
added SybaseDatabase to the conditional check in DropPrimaryKeyGenerator . java to support additional database types
refactor Client class to improve code readability to enhance maintainability and facilitate future updates
[ java ] set lastrecordingposition to 0 when leader be ready .
replaced ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java `
added a return statement to the NearCachedClientMapProxy class to ensure that the method returns early when necessary
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added error handling to shutdown the HTTP server in ListenHTTP . java to improve stability by gracefully handling exceptions during server startup
camel - 15836 : camel - aws2 - s3 - stream - upload - do n ' t throw npe if producer be
[ hotfix ] [ runtime ] fix typo in taskmanagermetricshandler
fix 226 to 226 to 226 upgrade from 226 to 226 to 226
added a new test class ` TestThriftCLIServiceSecurity ` and modified ` TOpenSessionReq ` to append a space to ensure password validation
added a new variable ` maxEnergyLimit ` and updated its assignment logic in ` VMActuator . java ` to utilize it to
added ` maxInMemorySize ` property and its getter / setter methods to ` HttpClientProperties ` , and updated ` webClientPlugin ` to
refactor Cache class to improve cache handling to enhance performance and maintainability of cache operations
added new test classes ` RunCucumberTest ` , ` StepDefinitions ` , and ` RunCucumber ` for Cucumber
added error handling for parsing double values in TypeJsonUtils . java and updated test cases in TestArrayOperators . java to improve robustness of
removed redundant variable declarations in Utf8StringBuilderTest . java to streamline code and improve readability
added checks to ensure parameters are only processed if they are set to improve parameter handling and prevent potential null pointer exceptions
camel - 15836 : fixed loadbalance and circuitbreaker to throw an exception if the maximum number of output be configure .
updated the maximum buffered documents configuration in TestIndexWriterExceptions . java to ensure that the correct maximum buffered documents are used in the document frequency assertion
replaced calls to ` hasher . putUnencodedChars ( ) ` with ` Sha1HashCode . update ( hasher ) ` in multiple
removed enumValue , intValue , and longValue methods from AsmRuntime . java to streamline code by eliminating unused methods
add a new biome tag to the biome tag provider . close # 3321
use a fixed thread pool for image loading to speed up image loading
changed access modifiers of fields and methods in BaseTableUpsertMetadataManager from private to protected and added initialization for custom variables to enhance accessibility and
replaced occurrences of " “ ” ” with " ” ` ”
replaced calls to ` vid . getImage ( ) . equals ( ) ` with ` hasImageEqualTo ( varName ) ` for image equality
camel - 16451 : camel - jbang - add -- repos = ' ' camel - jbang - make it easy to configure to
added handling for NaN scores in CrawlDbReader . java and improved tdigest calculation in CrawlDbReader . java to ensure accurate
added a cleanup method to delete temporary files after tests in OnStartupTriggeringPolicyTest . java to ensure that temporary files are deleted after tests
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` in ` FilterConditionEditor . java ` and added focus
[ hotfix ] [ runtime ] implement autocloseableasync in checkpointscleaner
added a new file ` XPathWhiteSpaceTest . java ` that tests XML schema validation to ensure proper handling of XML schema parsing in the application
fix ( bonsai ) : avoid get mutable with rollback not override trie log layer
refactor FilledNewArrayInstruction class to improve code readability to enhance maintainability and facilitate future development
add timeout to simplenetworktest to avoid flaky test
updated the method to check if the parent path ends with " / " instead of using substring to ensure correct handling of trailing slashes in parent paths
added a print statement to indicate when loading a skin file to improve debugging by providing visibility into loading failures
added ` markDirty ( ) ` and ` isValid ( ) ` methods to ` LgoGroupedLevel2Update ` and modified ` Lgo
added a static final constant UNDEFINED in Result . java and updated return statement in TestStep . java to use it to improve code readability and
changed assertThrows from PersistenceException to NullPointerException in TestTransactionCallback . java to ensure proper handling of null values in the database registration process
refactor uploadjobmultipartoperation to extend operation and add check for jet service
[ hotfix ] [ table - common ] do n ' t fail recovery if there be no journalfiles
adjust vertical node view layout strategy to ignore child node
removed the volatile modifier from the ` pos ` variable and added a ` sizeMask ` variable and modified the ` ensureAvail ` method to
added @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark tests as ignored due to cruel
replaced the usage of ' targets ' with ' endpoints ' in StorageProxy . java to streamline the code by eliminating unnecessary variable
updated parameter order in FileManager . java to improve code readability and maintain consistency
refactor TransformFunctionType to include additional transform function types to enhance code readability and maintainability by reducing redundancy
added methods ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` to ` VariableElement ` and updated package - info . java to
updated RFC3280 value from " RFC3280 " to " RFC5280 " in multiple Java files to ensure compliance with the latest RFC
update version number to 2.17 . 4 and fix type cast in searchannotationvisitor
refactor ListActivity and NoteAdapter to use SparseBooleanArray instead of HashMap for selected items to improve performance and optimize memory management during item selection
refactor conditional statements in DirectUpdateHandler2 . java for improved readability to enhance code clarity and maintainability
updated path handling in ConfigFileApplicationListener to use ResourceUtils . FILE _ URL _ PREFIX and added a test for absolute resource defaults to ensure correct
updated PreviewPositionHelper initialization to include context in TaskViewSimulator and TaskThumbnailView to ensure proper handling of split - screen insets based on
[ java ] do n ' t publish new leadershipterm for new leadershipterm if it ' s already in the
mondrian : add test case for errorstreamlog in pmdcoveragetest
refactor ByteArrayInputStream logic and add a new Skip class for testing byte skipping functionality to improve code clarity and ensure accurate skipping of bytes
refactor conditional structure for promptUpdate and showChangelog in UpdaterTask . java to improve code readability and maintainability
peer : do n ' t download a block if there be too many header .
added " rt . jar " to the list of STANDARD _ LIBRARIES in ModClassLoader . java to support additional jar files in the
refactor connection handling logic in AbstractHandshakeHandler . java to improve readability and maintainability of the code
updated method signatures to use utility constants instead of string literals to improve code readability and maintainability by using more descriptive constants
added a check for committed status before sending error messages in HttpChannel . java to ensure that errors are only sent when the response is already committed
modified conditions in HttpSession . java for better readability and consistency to improve code clarity and maintainability
updated fade - out behavior in HomeGestureTutorialController and added feature flag checks in SwipeUpGestureTutorialController and T
change log level to warn for unknown prefab
replaced multiple instances of ` ScimExternalGroupBootstrap ` with direct addition of ` externalGroupSet ` to ` externalGroupSet ` to
updated thirtyDays calculation in FreezeBalanceActuator . java and added a validation check in TransferActuator . java to ensure thirty
updated file path handling to use File . separator instead of a hardcoded slash to improve cross - platform compatibility across different operating systems
ggb - 1193 fix for ` ` show command error ' ' and ` ` show command error ' '
updated GpsMainActivity to use session description instead of an empty string and replaced Intent creation with EventBus posting in AnnotationViewFragment to
updated the page assertion logic in JsoupNonVisualRegressionTest to save a PDF file if it is not equal to 3 to ensure
* added androidnativebufferallocator to support native buffer .
added checks for flag names starting with " ! " in both Main . java , PrimaryItem . java , and Util . java to ensure correct
do n ' t throw npe if we do n ' t support it
updated the condition for checking item use operation from " ITEM _ USE _ GRANT _ SELECT _ REWARD " to " ITEM _ USE _
updated QueuePriorityTest to calculate expected items and added a toString method in PriorityElement to improve test accuracy and provide a clearer string representation of
refactor affinity api unit test to use injection instead of manual unit test
added a null check for the command and modified the argument check to include OPTIONS . HELP to ensure proper handling of command - line arguments and
[ light ] increase output size of lightoutputstream from 7 to 4
changed the access modifier of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a boolean flag ` showBlank ` to control the display of blank lines in ClassWriter . java and created a new class ` T8032
added a check for the length of the ' p . sn ' variable in the Person class to ensure that the validation of the ' p .
added null check for file extension before checking if it exists to improve robustness by preventing potential NullPointerExceptions
change return statement to continue in ContactRightButtonMenu . java to ensure that the method does not return the result
[ hotfix ] [ runtime ] fix checkstyle violation in simpleslot and slotsharinggroupassignment
simplified the calculation of the screen position in InstallShortcutReceiver . java to improve code readability and maintainability
updated the binding and closing logic of PlainSocketImpl to use a delegate socket instance to ensure proper resource management and prevent potential memory leaks
added functionality to clear and manage removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve management of removed media details in the
updated log message to reference the element ' s in - view center point instead of the center of element to clarify the purpose of the
added a new file ` bug4865918 . java ` that implements a GUI for testing scrollbar behavior to address bug 4865918
replaced the usage of ` velocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler . java ` to simplify the code by
replaced specific imports with a wildcard import and added a new case for " grouptriggers " in QuestCommand . java to streamline
fix crash when try to select gnucash account file
add lombok . tostring ( callsuper = true ) annotation to partitionchange and applicationevent
updated the configuration URI in the CloudService class to use a constant for the configuration URI to improve code readability and maintainability by centralizing
removed setViewportComponent and setJScrollPane for the scroll component in the BrowserPanel to streamline the UI by eliminating unnecessary scrolling
added support for forward DEL and BACK keys in LwjglInput , updated particle editor handling in ParticleEditor , ParticleEditor
updated MoreIndexingFilter to conditionally retrieve MIME type parts based on configuration to enhance flexibility in handling MIME type parts based on user settings
added a regex pattern for author names in the JSDoc class and modified the conditional checks for the main constructor and comment lines to enhance clarity
updated metric constants to include CREATE _ TOTAL _ DATABASES , CREATE _ TOTAL _ TABLES , and DELETE _ TOTAL _ PART
updated HiveDatabaseSchema and HiveSchemaFactory to use DrillHiveMetaStoreClient and SchemaConfig instead of List < String > to improve
modified the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` parameter and added error handling to the
updated locale from " Hijrah - umalqura " to " Islamic Umm al - Qura Calendar "
added a condition to check if the browser is not firefox and is not supported in WebAudioWrapper . java to ensure compatibility with firefox
added an ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the ` private ` constructor in ` InterceptorConstants ` to enhance
added a default character set to the parser in Parser . java and updated table creation statements in TestCompatibility . java to ensure compatibility with the default
removed redundant calls to kill ( false ) and added allocateOutgoing ( ) method in StreamingAggTemplate . java to improve code clarity and ensure
[ hotfix ] [ runtime ] fix checkstyle violation in executiongraph
added a boolean property ` hasFrom ` and modified SQL statement handling in ` Delete . java ` and ` DeleteDeParser . java ` to
refactor status handling in SynchronizeFolderOperation to improve clarity and functionality to enhance code readability and maintainability by using a unified method
refactor the applicable test selection logic into a new method ` RecipeSchedulerUtils ` to improve code readability and maintainability by centralizing
updated the regex pattern in LogAnalyser . java to allow additional characters in the log output to enhance the accuracy of the log output by
( chore ) camel - jbang - integration : add integration test for camel - google - cloud
fixed - rsearch . range ( ) and rsearch . range ( ) method do n ' t work correctly if exclusive = false . #
refactor CCLicenseStep to improve type safety and clarity to enhance code readability and maintainability by using generics
added null check for ifcRoot ' s globalId before adding it to guidIndex to avoid potential NullPointerExceptions when accessing globalId
updated comparison logic in OptionalAssert to use comparison strategy to improve accuracy of value comparison
added a boolean variable ` lmb ` and updated related logic in ` NoNewLineParagraphCssApplier ` , ` ParagraphCssApplier `
added a new file TestArrayCopyToFromObject . java to test array copying functionality to ensure that ArrayStoreException is thrown during array copying operations
replaced ` escapeAsBashString ` with ` escapeAsPythonString ` for file paths in ` BuckPythonProgram . java `
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4892 .
fix craftinghelper . findfiles ( ) and craftinghooks . findfiles ( ) .
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to mark the test case as unstable to temporarily disable the test case
added a null check before asserting the request in TestInternalInputBuffer . java to ensure that a null exception is thrown when the request is
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4893 . cgi
updated the ` getServerVersionEqualOrGreater ` method in ` CustomPlaybackOverlayFragment ` and ` PlaybackController ` to include server version comparison
removed redundant calls to writeJAASConf ( ) in BasicKrb5Test . java and added localhost handling in KDC . java
updated Jsr250Voter to conditionally return ACCESS _ DENIED or ABSTAIN based on the presence of multiple roles to ensure
[ mp4 ] fix checkstyle issue in io / mp4 / mp4parser . java
added a constant for the HS2 proxy user and modified session parameter handling in ConnectionFactory . java to improve code readability and maintainability
camel - 16458 : camel - hdfs - add snappy compression support for camel - bzip2 / snappy
added a delay of 1000 milliseconds in HttpClientTest . java to introduce a delay for better synchronization during testing
bug # 49966 - fix bug # 49966 - fix bug # 49966 - remove cell that contain multi - cell array
updated glyph positioning logic in GlyphLayout . java and changed text in BitmapFontTest . java to improve text rendering accuracy and clarify
updated ISTIO integration code to use Commons . container ( ) instead of hardcoded paths to improve code readability and maintainability by
replaced calls to ` apiClient . ReportPlaybackStartAsync ` with ` TvApp . getApplication ( ) . reportPlaybackProgress ` in `
simonstewart : use bufferedinputstream in simpleauthority to avoid memory leak
fix maploader hitting eviction on initial load
updated the return statement in ResponseFlag . java to use bitwise OR instead of bitwise AND to ensure correct bit manipulation for error status codes
add read policy to fix default policy
refactor CompositeFont initialization to use a SoftReference for concurrent access to improve memory management and avoid multiple instances of CompositeFont instances
set prefHeight to 0 and adjust its calculation based on node height to ensure prefHeight is correctly calculated based on the node ' s height
[ drools - 4892 ] fix dmn validation error message ( # 4892 )
removed unused imports from multiple Java files to improve code cleanliness and maintainability
changed the access modifier of ` finishRunningRecentsAnimation ` method from private to public and updated its usage in ` NavHandleLongPress
added null checks for node IDs and improved edge type handling in multiple classes to ensure robustness and prevent potential NullPointerExceptions during node processing
[ beam - 10688 ] fix npe in fnapicontrolclient and beamfnstategrpcclientcache
nifi - 4892 : fix npe in binfiles when there be a large bin limit .
refactorclosest method to use a loop for finding the closest CoreBuild instances to improve code readability and maintainability by using a more
added a check for CONTENT _ LENGTH in RestTemplateCopyHeaderFilter and implemented a test for it in TestRestTemplateCopyHeaderFilter to ensure
updated Java2TypeScriptTranslator to handle literal values correctly and modified test assertions in SyntaxTests to ensure correct handling of literal values and validate expected
updated filter sizes and sample sizes in multiple Java files to improve layout consistency and enhance user interface responsiveness
hbase - 25819 canary command - add - allregions option to allow all region on regionserver mode
removed the NodeModule import from CassandraConnectorFactory and simplified the ImmutableMap initialization in TestCassandraConnector to streamline the code by eliminating
reset the cursor position of the order index in KahaDBStore . java to ensure the correct cursor is reset during data retrieval
added minimum size constraints to CallDialog and adjusted one - to - one - to - one - to - one - to - one - to
fix loss of block state information during world gen
refactor TestHTTPSamplersAgainstHttpMirrorServer to use TestSuite and TestSetup classes instead of private fields to improve test structure and
added null checks and removal logic for KerberosPrincipalHostDAO in KerberosPrincipalDAO . java and removed unused imports in KerberosPrincipalEntity
removed the ' true ' parameter from the getTableSnapshot method call to simplify the method call and improve code readability
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4892 .
updated the error message in AndroidGradleBuilder to clarify the purpose of the licenseKey in build hints to improve user understanding of
updated ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` and modified ` isInsideTrans
[ drools - 1348 ] allow kie - inf . classes to be specify in the root directory ( # 1358 )
added an assumption to skip the test on a specific version 19 in CheckIndexTest . java to ensure the test only runs on a specific version
removed the context parameter from the assignTargetsForSplitScreen method in AbsSwipeUpHandler and RemoteTargetGluer classes to simplify the method
refactor LeaderLatch class to improve code readability to enhance maintainability and facilitate future updates
added methods to initialize Zksnark parameters in SolidityNodeHttpApiService to facilitate the initialization of Zksn
refactor transaction confidence handling by introducing a new method ` getDepthFuture ` in ` TransactionConfidence . java ` to improve clarity and
added ` createMediaRecorder ` method to ` CodenameOneImplementation ` , ` Location ` , and ` MapComponent ` classes , and
set default value of platformName to " ios " to ensure platformName defaults to " ios "
updated PageEditClient . java with new functionality to enhance user experience with improved data handling
added braces around conditional statements for mozDash and webkitLineDash in Graphics2D . java to improve code readability and maintainability
refactor CreateVisibleSignature class to improve code readability to enhance maintainability and facilitate future development
added a try - catch block around the outgoingFrame method call in AbstractExtension . java to handle potential exceptions during frame processing to improve error handling
replaced direct caller class retrieval with privileged action in ContextHandler . java to enhance security by enforcing privileged actions during class loading
added logic to delete child categories based on their ID to ensure that only child categories are removed from the database
updated ContributionManagerDialog to use a dynamic title based on the contribution type to enhance user experience by providing a more descriptive title based on
added a ` vwap ` field to the ` Ticker ` class and updated the ` Ticker ` class to include it to support
added support for a no - widget TextView in the SearchAndRecommendationsScrollController and updated WidgetsFullSheet to utilize it to
add render graph api to make it easy to use with tint node
added primary color setting in NCFirebaseMessagingService . java to enhance the messaging service ' s appearance with the primary color
updated ShadowUsbManagerTest . java file to improve test coverage for USB management functionality
add log to help diagnose test failure
added a call to ` selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure the selected configuration is updated correctly
updated width and height calculations in AndroidGraphics . java to ensure a minimum value of 1 to prevent potential errors during rendering
replaced instances of HashMap with LinkedHashMap across multiple classes to maintain insertion order and ensure consistent iteration order
replaced ` ClosureManager ` with ` ClosurePool ` for managing closures to improve memory management by utilizing a dedicated ` ClosurePool `
( chore ) camel - spring - boot : migrate camel - route - main to junit5
added two new classes , WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , for integrating and testing WebSocket connections
[ dsm ] remove unused type set from abstractimportmetadatasourceservice
refactor authentication equality check by introducing a new method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability
added a condition to check if JN . ffi . compile . x86asm is true in X86MethodGenerator . java to ensure compatibility
refactor code to use a local variable ` callNodeType ` instead of calling ` callNode . getType ( ) ` directly to improve code read
added a new @ Insecure annotation and updated MessageBuffer constructor to use it to enable secure operations on message buffer operations
added multiple Hive configuration variables to HiveConf . java to enhance configuration options for Hive integration
initialized scopes and policies as a HashSet in ResourceSet . java and added a null check in DefaultResourceSetService . java to ensure that scopes
made the ` decrefOnClose ` field final and modified the ` MultiReader ` constructor to accept an additional ` Collection < ReaderFinished
updated SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , TestFrameSize , Test3 , and Test
simonstewart : re - enable test that fail - bug in 2.49
refactor ` getFirstTypeArgument ` method to use ` final ` instead of ` $ Gson $ Types ` to improve code clarity and enforce
changed return types of keySet ( ) and values ( ) methods from Set < Integer > to KeySet and Values in Int2IntHashMap to
added duration property and methods to set and get the background color in FlipTransition to enhance flexibility and control over transition duration settings
removed logging for non - enabled subsAreValidForStreaming in DLNAResource . java to streamline the code by eliminating unnecessary
bump major and minor version to 9.10 . 10 .
replaced ` System . err . println ` with ` LowLevelLogUtil . log ` for warnings related to ` getCallerClass ` and
add java16validator and javaparserv2validator and javaparserv2validator and javaparserv2validator
updated padding settings for the first and last replies in ExpansionViewHelper . java to improve layout responsiveness for the status view
refactor callback handling in AbstractPartitionPrimaryReplicaAntiEntropyTask . java to use a boolean variable for clarity to improve code readability
added metadata field and its getter / setter methods to SeedUrl and SeedResource classes , and integrated it into SeedUrl and SeedResource classes to
added a null check before creating a cloned pattern in PatternBuilder . java to avoid potential NullPointerException when declaration is null
refactor TestCoprocessorWhitelistMasterObserver class for improved readability to enhance maintainability and facilitate future development
ww - 4449 add package name to annotationactionvalidatormanager ' s output
updated assertions to cast ` ( Object ) null ` to ` ( Object ) null ` in ` IterableTest . java ` to ensure type safety
added StreamSupport methods to MapIterable , PrimitiveObjectMap , and MapIterableTestCase to enhance stream functionality for improved performance and flexibility
updated return statement to return a cloned instance of notifInfo to ensure the notifInfo is not modified before returning it to maintain data integrity
make sure command key be not null when compare command
refactor AEADBlockCipher class to improve code readability to enhance maintainability and facilitate future updates
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap `
added a null check for resource ID in PackageResourceTable and changed the default value in RobolectricTestRunner from best to legacy to
added a conditional check for ` ulSize ` and ` ulPos ` before retrieving ` post _ Table ` and ` post _ Table ` to
refactor SignPlugin to accept a list of HttpMessageReaders instead of a static constant to improve flexibility and maintainability of the code by
refactor Int2ObjectCache class for improved performance to optimize memory usage and performance
added validation for remote repository instances in StandardMavenAuthenticationProvider . java to ensure that validation only occurs when the remote repository is valid
refactor AudioNode class to improve code readability to enhance maintainability and facilitate future updates
added SSL context initialization and improved exception handling in LinkyHandlerFactory and EnedisHttpApi to ensure proper SSL context setup and enhance error
refactor HiveFunctionRegistry to use streams for improved readability and performance to enhance code maintainability and reduce boilerplate code
fix for http : / / issues . apache . org / jira / browse / amq - 4892 - fix typo in
updated the method ` getBuildTargetForAlias ` to include a ` possiblyFlavoredAlias ` parameter and adjusted the logic for extracting the alias
camel - olingo2 : fix npe in olingo2consumer when there be no entry
updated MetaStoreSchemaInfo to retrieve the Hive version from a map using EQUIVALENT _ VERSIONS to improve version management by
server : fix the bug where expunge a vm do n ' t take into account when expunge a vm .
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should not be used in future development
refactor ONDashClockExtension , AlarmReceiver , AlarmReceiver , AlarmReceiver , and TextHelper to use a new method
updated GoogleAuthUserConfigTable to include " nvarchar / varchar / varchar / nvarchar / varchar / int4 / int4 " and
replaced ` commit ( ) ` method calls with ` apply ( ) ` method for saving preferences to improve performance by using ` apply ( )
added a new TestIdleListener class to the StandardSession initialization to enhance session management by providing an idle listener
updated the way the testBigQueryTable is constructed by providing a formatted string to improve readability of the test output by including the test ID
set the predicted icon in HotseatPredictionController and reset the background in BubbleTextView to enhance the visual appearance of the
mondrian : fix typo find by codespell on fossies . org
add nativeworker test for system . runtime . queries
updated the method to retrieve active features based on the presence of ALL _ OUTPUTS in the explanation to ensure correct retrieval of active features based on
added a command line option to the AppleSimulatorController and InstallCommand classes to allow passing arguments when running with Apple targets to enhance
refactor code to use a generic styled area for position calculations to improve code readability and maintainability by reducing redundancy
added a check for the availability of the lifecycle pipeline in ContainerBase and StandardContext classes to ensure proper handling of lifecycle states when the pipeline is
added background clipping functionality to QsbWidgetHostView to improve the visual appearance of the QSB background
added timing for flag conversion in SQLManager and improved string manipulation in BlockTypeListFlag , BlockTypeListFlag , and PlotArea classes
replaced specific OpenGL imports with a wildcard import and modified glDisable logic based on floatingText ' s Occluded status to streamline
rename target _ oracle _ truffle _ nfi _ backend _ libffi _ libffi _ linux to libffi _ lib
added getter and setter for the propagation behavior in JdbcAggregationRepository . java to allow customization of transaction propagation behavior
layervalidation : add support for l1 / l2 regularization in base layer
added try - catch blocks around the readWrite ( ) method in AbstractChecker . java to handle potential exceptions during read operations to improve error handling
changed the access modifier of the colorStack array from static to instance variable and updated its assignment to improve encapsulation and ensure the colorStack is
updated method calls to ` getMappedStatement ` and ` hasStatement ` from ` false ` to ` true ` for statement mapping and checking to
convert tradableIdentifier to lowercase in BTCEPollingMarketDataService . java to ensure consistent handling of currency values in depth retrieval
update channel state test values in ChannelStateTests . java to reflect changes in channel state changes to ensure accurate test coverage for the new channel state
[ engine ] remove unused support for versionedhash parameter ( # 2596 )
reset trigger price and ontriggerpricetextfield when change
modify student feedback submission ' s save action to return the result if the student is not registered and the error is not present to ensure that the
removed debug print statements from I18NPageController . java to clean up the code and improve readability
hbase - 2590 hstore . flush ( ) should check if result be true
fix for # 1188 - savemanybeans . setmanyproperty ( ) throw illegalstateexception ( # 1188 )
added a boolean variable ` _ alwaysSaveUri ` and its getter and setter methods in ` FormAuthenticator . java ` , and modified the condition
added new methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to provide functionality for
replaced specific Java imports with wildcard imports and added visibility logic for the popup menu in LWChoicePeer . java to improve code clarity
[ hotfix ] [ runtime ] fix npe in stressprofile
replaced instances of ` asScalaIterable ` with ` collectionAsScalaIterable ` in multiple test wrapper classes to standardize
added null check for requests in MockServerEventLog and improved logging messages in HttpForwardObjectCallbackActionHandler and CallbackWebSocketServerHandler to
added warning log for property file loading failures in DefaultEnvironment . java to improve visibility into property loading failures
use try - with - resources to ensure sessiondataset be properly close
added a condition to check if the network supports multicast and is up in the SetOutgoingIf class to ensure proper handling of network connections based on
modified the constructor of sqlCommand to accept a length of 0 and len parameters to ensure proper initialization of the string with a specified length
updated consume time and asset operation time settings in UnDelegateResourceActuator and removed redundant calls in BandwidthProcessor and EnergyProcessor to
added a new method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class and updated its usage in the ` SessionManagementConfig
updated error message in ProtobufAnnotationSerializer to include the count and known labels to improve error reporting for better debugging and monitoring
added a new test class ` MapAssert _ containsKeys _ Test ` for testing the ` containsKeys ` method in the ` MapAssert `
updated JdbcProxyGenerator to use a new interface JDBC4TemporaryPreparedStatementMethods and added multiple setter methods for various stream types to enhance the flexibility
added a static method ` ensure ` to ` ServerWebSocketContainer ` and updated the ` DirectUpgradeTest ` to use ` Handler ` instead of
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags . java ` and ` CxxFlags . java ` to
pdfbox - 4892 : return point2d instead of float , a suggest by valerybokov
replaced the instantiation of MethodHook [ 0 ] with a static final EMPTY array in MethodHook and updated the hooks initialization in Method . java
added a boolean flag ` grantAccess ` to the ` MockAuthenticationManager ` class and modified the ` return ` logic in ` MockAuthenticationManager
updated JobListener and JobListenerSupport to accept a JobExecution parameter for job execution handling to improve job execution handling by allowing the job execution to be
added a check for file execution in SharedLibraryLoader . java to ensure that only writable files can be executed before proceeding to avoid potential errors
doc : update protoc to v3.15 . 3 ( # 538 )
refactor : use event instead of e . getresult ( ) in saveservice . java and resultcollector . java
added constants for Battery level , annotation , time , distance , and profilename in BundleConstants . java and updated CustomUrlManager . java
use map instead of hashtable in searchexpression . applyrule ( )
use absolutescreenlocateable instead of geowidget , fix typo
updated JoglGraphics and ProjectiveTextureTest to use Mipmap format and texture filters to enhance texture rendering flexibility and improve texture
modified the ` setResourceToDelegate ` method to return a ` File ` object instead of void to ensure that the output file is writable before proceed
camel - 1889 : fixed the issue of camel - properties component do n ' t intercept the uri . thanks to martin
updated condition from ' > ' to ' > = ' in ActionScheduler . java and modified test assertion in TestActionScheduler . java to ensure
updated debug log file path to use " / tmp / ums _ dbg . zip " and added null check for debug _ log to ensure
add hud _ hidden flag to notification overlay ( # 3889 )
add a resetgate ( ) method to blockgenericpipe so that gate can be reset
updated TestSupplementary . java to use Locale . getDefault ( ) for locale management to ensure consistent locale handling during test execution
updated random color values in the Team class from 0.8 f and 0.8 f to 0.4 f and 0.4 f
change the type of ` activeMatchedStates ` from ` Set ` to ` Collection ` and update logging statements in ` SequenceMatcher . java `
updated the condition to check for null annotations in SoftAsserts . java to improve clarity and correctness of the logic for handling expected exceptions
updated error message formatting in StorageResources . java and added exception handling in StoragePluginRegistryImpl . java to improve clarity of error messages and
added CSV file reporting functionality in CallTreePrinter . java and updated ReportUtils calls in CallTreePrinter . java to improve code readability and
refactor code to use ` mActivity ` instead of ` getView ( ) ` for better consistency to improve code readability and maintainability by
added peak tasks tracking and adjusted loaded calculations in AssetManager . java to improve task tracking and ensure accurate loading calculations
simonstewart : disable native event by default on window
added constants for nutch score and fetch interval , and implemented custom score and fetch interval handling in Injector . java to improve code maintainability
updated import statements from commons . collections to commons . collections4 in ScimExternalGroupsTypeResolvingFactoryBean and RsaJsonWebKeyTests to ensure compatibility with the newer version of the Apache Commons Collections library
added a method ` isShareSchema ( ) ` to ` CoreContainer ` and implemented a test for schema sharing in ` TestCoreContainer `
updated sizeInBytes ( ) method calls to include a boolean parameter across multiple classes to ensure accurate size calculations based on the new segment ' s size
updated assertions in VersioningTest . java to use assertNull for version1 _ 2 to improve clarity and consistency of test assertions
updated SQL query to include both ' d ' and ' typnotnull ' and ' typnotnull ' types in database metadata queries to enhance
[ java ] make appendnewleadershiptermevent return false when append a new leadership term event .
added a method to build the media type from the ServerWebExchange exchange to ensure the application correctly retrieves the content type from the request headers
updated method names from ` fillUsingLengthPrefix2 ` to ` fillAndGetIndex ` across multiple classes to improve clarity and consistency in naming
added a check for compacted base and valid transactions in AcidUtils . java and implemented a new test in TestCleaner . java to
set ` immutableStorageScheme ` and ` qualifierEncodingScheme ` to ` ImmutableStorageScheme . NON _ ENCODED _ QUALS `
added new files for PojoProducersCustomized and RestProducersCutomized in the servicecomb demo package to enable customization of
updated cache section name from " cache " to " cache _ SECTION _ NAME " in ArtifactCacheBuckConfig . java to improve clarity
replaced a duplicate registration of the AesGcmSivProtoSerialization instance in AesGcmSivKeyManager . java to
added a replacement for the wooden slab in the OreDictionary to enhance the visual representation of the wooden slab in the O
refactor multiple session - related factory classes to improve code organization to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from ` UndefinedSymbolsLinker
prepare next release 3.2 : update doc tree ( rc1 )
hhh - 15836 - fix unit test failure on oracle
updated the positioning of the sprite batch drawing in HelloWorld . java to correct the positioning of the texture to ensure proper rendering of the
updated the logic for determining the plot ' s position in PlayerFunctions . java and modified region creation in WorldGuardListener . java to improve accuracy
added a deprecated static final Version constant for Lucene 8.5 . 0 to indicate that the version is outdated and should not be used in
updated print statement formatting in SSLSocketImpl . java to improve code readability and maintain consistency
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to verify SQL parsing and deparsing for signed
refactor dependency type handling in CoNLLUOutputter and introduce a new DependenciesType enum in SemanticGraphCoreAnnotations to improve
refactor ` makeTargetDescription ` method in ` ParseContext ` and remove unnecessary parameters in ` NoSuchBuildTargetException ` to streamline the code
replaced ` testFromMain ( ) ` method with ` test ( ) ` method in ` MyChild ` initialization to improve clarity and
reduced the size of configBlocks from Block . blocksList to 256 to optimize memory usage and prevent potential ArrayIndexOutOfBoundsException
refactor version checks in BukkitMain . java for improved clarity and functionality to enhance code readability and maintainability by standard
updated SQL statement escaping logic in AbstractSQLChange . java and added a corresponding test in AbstractSQLChangeTest . java to ensure proper handling of
added ` ofAll ` and ` withAll ` methods to ` MutableBagFactory ` and its implementation in ` MutableBagFactoryImpl ` to
pdfbox - 4892 : do n ' t escape ` ` . adoc ' ' and ` ` . html ' ' file in
updated the MqttBrokerConnection constructor to include a new boolean parameter to ensure that the MqttBrokerConnection is only initialized with a
refactor ChangeSet retrieval logic to check for null DatabaseChangeLog before retrieving change sets to improve robustness by avoiding potential null pointer exceptions
updated method parameters in ` StaticMethodInterceptor ` , ` RocketMQGlobalPluginHandler ` , and ` PrometheusPluginBootService ` to
added database dropping functionality in HiveMetaStorePartitionSpecs and enhanced logging in TestObjectStore to improve database management and enhance debugging capabilities
added a new parameter " order _ currency " to the BithumbAuthenticated class and updated its usage in the BithumbAccountServiceRaw
deleted the SSEFluxWebConfig . java file to remove unused configuration files to streamline the codebase
updated method calls to use ` getReturns ( ) . isVoid ( ) ` instead of ` getReturnType ( ) . getFullyQualifiedName ( )
replaced the static final YAML _ READER with a static YAML and added a new RESTful endpoint to list YAML configurations to enhance functionality by
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to enhance encapsulation and
refactor ThreadFactory initialization to use a lambda expression and introduce a new awaitTermination method for asynchronous channel group termination to improve code readability
added unit tests for adding items to a list and created a new class ` PersonWithAList ` to ensure correct functionality and functionality of MongoDB
ggb - 1343 fix for applet panel size change
added a delay before setting the toolbar visibility in DrawerActivity to ensure the toolbar is displayed after a delay to improve user experience by preventing
refactor the overlapped page handling logic into separate methods for better readability and maintainability to improve code clarity and maintainability by encaps
server : do n ' t try to save vm password if vm be not run on a router
added new boolean variables usingOutputStream , usingWriter , and isCharacterEncodingSet to ensure proper handling of character encoding in response processing
added a warning check for assignment side effects in GroupDialog to improve user experience by preventing unnecessary assignment effects
refactor JSON and JSONObjectConvertor classes to improve code organization to enhance maintainability and readability of the codebase
updated the condition in FileUploadApiController to use maxWidthWithMargin instead of maxHeightWithMargin to ensure the icon size accurately reflects the
refactor methods in ` RegisteredServiceProperty ` , ` JwtTokenCipherSigningPublicKeyEndpoint ` , and ` JwtTokenCipherSigningPublicKeyEndpointTests
added checks for content types and improved import statements in Basic . java to ensure proper handling of MIME type files on Windows and non - Windows
added JZlibDecoder and JZlibEncoder imports and modified compression handling in NettyConnection . java to enhance compression capabilities and improve code
added a method ` doesClassLoaderDescendFrom ` to the ` Util ` class and refactored its logic in the ` MethodHandles ` class
removed unnecessary parameters from the ` doConnect ` method in ` ChannelProvider ` and ` ProxyChannelProvider ` classes to streamline the connection process
added functionality to start a field in TextReader and implemented a test for empty final columns in TestCsvHeader to ensure proper handling of empty final
added compass gravity and margins to NearbyMapFragment to improve layout responsiveness in the user interface
added unit tests for the ` computeDistance ` method in the ` GeoPath ` class to ensure correct behavior of the ` computeDistance ` method
added exception handling to the methods in LeafFilterFactory and ParquetFilterPredicateConverter to improve error handling and provide clearer feedback during the conversion
added a check to set the language of the current audio track if it is blank to ensure that the current audio track uses the correct language for
added a warning log for compatibility issues related to the microservice version in MicroserviceRegisterTask . java to inform users about potential compatibility issues due
replaced manual array resizing logic with a new method ` addAll ` in multiple array classes to improve code readability and maintainability by central
reformatted code for improved readability in DataSourceProxy . java to enhance maintainability and clarity of exception handling
refactor InMemoryClientRegistrationRepository to accept a Map < String , ClientRegistration > instead of a List < String , ClientRegistration > to
added a method to reset the UI state in SchemaUpgradeHelper . java to ensure that the UI state is correctly reset based on the cluster state
added strict and non - pending exception handling in JUnitReporter and corresponding tests in JUnitReporterTest to ensure proper handling of pending exceptions and
add playerselector . java patch to allow player to select all the player . close # 179666
added the Closeable interface to the Selector class to ensure proper resource management and prevent potential resource leaks
added a connection pool factory for multiple threads in MaxConcurrentStreamsTest . java to improve resource management and performance during concurrent stream operations
added multiple stringType ( ) calls to CoreOptions . java to ensure proper handling of string types in CoreOptions
updated token handling in HqlQueryRenderer and modified context configuration in EclipseLinkUserRepositoryFinderTests and UserRepositoryFinderTests to improve query
updated HTTP status handling to use HttpStatus constants instead of hardcoded values to improve code readability and maintainability by standardizing status constants
pdfbox - 4071 : fix typo , a suggest by valerybokov
replaced JDBC URL configuration with a dynamic data source class name and added a slowCreate flag for the HikariCPCollectorTest to improve
refactor file selection handling in ParquetFormatPlugin and ParquetGroupScan classes to improve file selection management and ensure accurate file existence checks
updated the boolean variable ` isSuccess ` from ` false ` to ` true ` and added error handling logic in ` Jsr199Javac
added a new ` BaseTableModelListener ` class and updated ` baseRenderer ` initialization in ` DefaultSortedTableModel . java ` to enhance
updated the range condition in ServerConfig . java from ` < 49152 ` to ` < = 65535 ` to ensure that the number is within
added imports for DocumentsContract and updated URI handling in AuthenticatorActivity , AccountRemovalJob , and DocumentsStorageProvider to ensure proper management of
removed the call to startLogging in MainApp . java to streamline logging process by eliminating unnecessary logging
refactor exception handling in FilterChainProxy to utilize ThrowableAnalyzer for improved error handling to ensure proper handling of wrapped RequestRejectedExceptions and
updated string manipulation logic in StringBuilder . java to use ' this . length ' instead of ' length ' to improve code clarity and ensure correct
pdfbox - 4071 : throw illegalargumentexception instead of npe if filterlist be empty
added a new file ` TbStopWatch . java ` that extends ` StopWatch ` to provide a utility for managing time - to - live
set initialized to true in PListStore . java to ensure proper initialization of the PListStore instance
added @ Deprecated annotation to multiple Java classes to indicate that these classes are outdated and should not be used in future development
[ zeppelin - 1340 ] set the current thread ' s context class loader for remote interpreter
remove unnecessary getentity ( ) call from commandsourcestack .
updated minSdk version from VERSION _ CODES . P to VERSION _ CODES . O _ MR1 in ShadowRttCallTest
renamed parameter ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to improve cl
# 1188 - enh : add simplename to beandescriptor , beanpropertyassocmany , beanpropertyassocmany and beanpropertyassoc
updated response URLs to use " static / all . js " and " wro / all . css " instead of " wro / all
added a new test method ` showLatestTimeseriesTest ` to validate the functionality of the ` showLatestTimeseries ` method to ensure that
corrected the parameter name from " appContextLocation " to " contextConfigLocation " across multiple test files to ensure consistency in naming conventions
refactor exception handling in OCSPChecker to check if the exception is an instance of CertPathValidatorException before throwing it to improve clarity
benchmark : add writeoutputsolution config option to enable / disable write output solution
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` to validate the behavior of ` sliceSize ` in a map file to ensure that the
added a shapeless recipe to the game registry in BuildCraftTransport . java to enhance the game ' s shapeless recipe functionality
[ mahout - 1348 ] vector . iteratenonzero ( ) do n ' t throw indexoutofboundsexception when
added support for Shulker entity management in BukkitMain , EntitySpawnListener , PlayerEvents , and PlayerSpawnListener to
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide access to the
updated imports and added methods to get maximum directory and file name lengths in IOHelper and MultiKahaDBPersistenceAdapter to ensure compatibility with
refactor UpToTagChangeSetFilter instantiation and add a check for seen tags in Liquibase . java to improve code readability and
updated generic type parameters from ` T ` to ` T2 ` and replaced LinkedList with ArrayList in multiple classes to enhance type safety and improve performance
refactor BrokerRoutingManager to improve routing logic to enhance performance and maintainability of the routing process
updated volume and up paint colors from gray and green to GRAY and GREEN in CandlestickRenderer . java to improve visual
refactor InsettableFrameLayout to use a variable for layout parameters and add support for ignoring insets to improve code readability and maintainability
added a duration parameter to the BuildTargetDurationListener and updated related tests to include it to enhance the functionality of duration handling in the build process
replaced ` @ Profile ( " profile " ) ` annotations with ` assumeTrue ( " db profile to be enabled " ) ` in multiple
added a null check for the user object before processing claims to avoid potential NullPointerExceptions when user is null
camel - test - infra : camel - test - add advicewith to camel - test - infra - camel - test - camel -
replaced ` ConcurrentSkipListSet ` with ` NonBlockingHashSet ` in ` CassandraConnection . java ` to improve performance by using a more
api : listpublicipaddresses api : list public ip address by source network id
added unit tests for the ` isIgnoringBatteryOptimizations ` method in ` ShadowPowerManager ` and implemented it in ` ShadowPowerManager
updated the method of retrieving the Jetty version to use the build properties instead of a hardcoded value to ensure compatibility with the latest Jetty
added unit tests for verifying invocation order in NumberOfInvocationsInOrderVerifierTest . java to ensure correctness of verification behavior based on
[ tregex ] do n ' t force evaluation if there be no match instance
added a foreground option to the startProfile method call in NewProfileExtensionConnection . java to enhance user experience by allowing the profile to be started
updated executor variables and method calls in MiniSolrCloudCluster . java to use IOUtils for better resource management to improve code clarity and ensure proper
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` and updated related logic
updated logging to use the file name instead of the file name in CodeEditorView . java and added null checks in EditorTextActionWindow .
enhanced error message formatting in ClassFileReader and modified warning message in JdepsTask to improve debugging by providing more context on skipped entries
replaced LogStorage with LuceneStorage in Fetcher and FetcherTask classes to enhance functionality by integrating LermanAnalyzer and German
updated the ` populateBubble ` method to include an ` existingBubble ` parameter and added a check for existing bubbles to improve bubble
updated exception handling to throw an IllegalArgumentException for invalid route states to improve error reporting and provide clearer context during job execution
updated method signatures from ` buildRpcExt ` to ` buildRpcExtJson ` for ` ShenyuMotanClient ` and `
[ java ] use a more efficient nak delay generator in the conductor .
added JSON object creation for client - related properties in ClientInformationResponseView . java to enable JSON serialization of client information based on client secret and
added a conditional check for ` openOrder ` before setting the average price in ` HuobiAdapters . java ` to ensure that ` open
removed the rawExecutionReports ( ) method from the execution report subscription to simplify the subscription process by eliminating unnecessary method call
added a ` fail ` method to handle exceptions and updated the timeout condition in ` LdapTimeoutTest . java ` to improve error handling and provide
fix for mary . install ( ) and mary . install ( ) in case user dictionary file do not exist .
added a check for the presence of a password file or credential store alias before updating it in AmbariServerConfigurationHandler . java to ensure
added a check to skip parsing a segment if it already exists in ParseSegment . java and introduced a new method in SegmentChecker . java to
[ hotfix ] [ yarn ] make yarn . application - attempt - failures - validity - interval configurable
[ geoserver ] add more logging when h2 driver be not include
hbase - 20688 add a new configuration option to set the default scanner readtype for snapshot - based input format
added fixedHeight and fixedWidth fields with their respective getter and setter methods to the LoginInstanceRequest class to enhance configuration flexibility for instance login options
added a new parameter ` cornerRadius ` to the ` update ` methods across multiple classes to enhance the functionality by allowing for customizable corner radius
updated COMMANDS _ TO _ REMOVE string to use conditional expressions to improve readability and maintainability of the code
added retry logic for database connection handling in TxnHandler . java to improve reliability by allowing retries to work around BONECP bug
add backup reservation check and poll operation to txnprepareoperation and txnprepareoperation
added a new private final char array ` strings ` to the ` FirstOfStringsMatcher ` class to facilitate the use of string
replaced " DELETE ROWS " with " DELETE ROWS CLIENT SELECT " in multiple files and created a new ExplainPlanTextTest class
added retry logic for SocketException in BaseServiceException . java and corresponding tests in BaseServiceExceptionTest . java to enhance error handling by allowing retryable
added support for " rapid _ install _ types _ beta " configuration in multiple classes to enhance functionality by allowing configuration of rapid install types
updated the regex pattern in SortTest . java to allow negative values to improve accuracy in seed validation
refactor MultimapSubject to use factory methods for handling Iterable < ? > to improve code readability and maintainability by reducing redundancy
removed conditional check for device orientation and adjusted display size calculation to simplify the logic for determining the vertical position of the hotseat
added support for transmuxing multiple media items in the Transformer and TransformerInternal classes to enhance flexibility in handling transcoding media items during
fix picker to localize the string
camel - 2347 : camel - cxfrs consumer should check if exception be present
hhh - 10688 - postgresql81dialect do n ' t use jdbcexception for lock acquisitionexception and lockacquisition
added null checks and improved query ID retrieval in TestJdbcDriver2 . java , and modified import statements in HiveStatement . java to enhance
add UsesUnboundedPCollections category to ParDoTest . java to categorize tests related to the UsesUnboundedPCollections functionality
updated HTML text formatting in GpsSimpleViewFragment . java to remove unnecessary spaces to improve readability and maintainability of the code
[ java ] remove unused leadershiptermid parameter from joinlogasfollower
refactor HttpSender to use a private instance variable for HttpExchange to improve encapsulation and maintainability of the code
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
corrected the method name from ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` to
added null check for the tree object and introduced Lombok ' s EqualsAndHashCode annotation to enhance stability by preventing potential NullPointerExceptions
fix xwpf - default - run to return double instead of float .
changed the type of the variable ` email ` from ` String ` to ` String [ ] ` in ` AddressBookDoCoMoResultParser
refactor exclusion handling in RawMavenResolver to create a new Set of GroupArtifact instances based on the presence of exclusions to improve flexibility
added handling for ` DSXExchangeInfo ` in ` DSXAdapters ` and updated ` DSXPairInfo ` to include base and quoted
refactor multiple test classes for consistency and clarity to improve maintainability and readability of the test suite
[ drools - 90 ] fix incremental compilation when kiemodule pom be invalid
updated the initialization of ` copy ` and added a conditional check for ` sobj . has ( k ) ` in ` NativeArray . java
rename JacksonDataFormat and JacksonXMLDataFormat classes to improve clarity and consistency in naming conventions
fix hostfielddesc . findgetter and findsetter to use unreflectgetter and unreflectsetter .
added a method parameter for the CompletableFuture CompletableFuture annotation in DefaultNullnessAnnotations . java to enable handling of concurrent completion stages in the database
updated the calculation of mFreezeCheckPoint in PlaybackController . java to adjust the freeze check point to improve the accuracy of the
added a method to set the internal state of the suiteChunker in AbstractCommonPowerMockRunner and removed it from PowerMockRunner to stream
updated the method call from ` typeCode ` to ` realType ( ) ` in ` AnyImpl . java ` to ensure the correct type
refactor the logic for handling method invocations in TabsAndIndentsVisitor . java to improve readability and maintainability of the code
replaced LuceneTestCase with TestCase in TestSingleTokenFilter to utilize JUnit ' s TestCase instead of Apache Lucene
updated the output format in HtmlProcessInformationsReport . java to include a wrapped text cell to improve the display of wrapped text in the output
added ExecutionContext management to JdbcStepExecutionDao , MapStepExecutionDao , SimpleJobRepository , and MockStepDao to enhance execution context management
added a conditional check before adding a child to the root folder to ensure that the child is only added when the new media folder is hidden
added null checks for actor parameters in SplitPane . java to ensure that null actors are handled correctly and prevent runtime exceptions
added handling for Parameterized types in RemoveUnusedImports . java to improve type management for parameterized Java types
added null and empty checks for modFileInfo and modInfos in UniqueModListBuilder . java to enhance robustness by preventing potential NullPointerExceptions
changed the logger declaration from instance variable to static final in TicketGrantingTicketImpl . java to improve encapsulation and ensure the logger is initialized
updated SQL string to include an additional parameter " 81 + 12 " to ensure compatibility with the latest timeseries structure
added a method ` isValue ( String value ) ` to ` AttrData ` and modified exception handling in ` Converter ` to improve value validation and
added functionality to check for US - User - defined InternationalPC locale and modifier keys in LWCToolkit to ensure proper handling of
[ java ] add publication connection timeout to spysimulatedconnectiontest and c medium driver .
added a condition to check if the request URI starts with " / css " , " / images " , and " / favicon " to
added assertions to validate the installation of the test APK in TestUtil . java to ensure the device is rooted before proceeding with the
no effective change - remove oracleplatform . java and add test for oracle
added Mockito mocking for MultiMap in TestSimpleBodyHandler . java and updated assertions in TestVertxTLSBuilder . java to ensure tests
updated the Java library reference in the DiffRuleKeysScriptIntegrationTest . java file to ensure compatibility with the latest library version
added a new boolean variable ` mIsDismissHapticRunning ` to manage the dismiss state of the haptic to ensure
update world explosion cause to handle projectile entity . close # 1193
removed unused import and modified getItemId method in SymbolInputAdapter . java to streamline code by eliminating unnecessary dependencies
updated the method signature of ` getBook ` to use ` @ QueryParam ` instead of ` & ` in ` Bitfinex . java ` to
replace double quotes in result with single quotes in StaxConverterTest . java to ensure proper handling of single quotes in the result
[ zookeepershiptermanager ] add tostring ( ) to k8s zookeeperleaderelectiondriver and zookeeperleaderelection
rename SqlSessionFactoryBean class to improve clarity to enhance code readability and maintainability
[ 3.0 ] fix issue with generic call in tripleinvoker
replaced error logging with throwing a GdxRuntimeException in PolygonRegionLoader . java to improve error handling by throwing exceptions instead of logging errors
added a method to check if a thread local deadline is active in the Deadline class and invoked it in RawStoreProxy to ensure proper handling
added handling for ClosedChannelException in NettyRequestExecutor to provide a clearer error message when a channel is closed
added null check for the genres list before setting it to null to avoid potential NullPointerException when the genres is null
[ hotfix ] [ runtime ] add test for reset hook in region recovery
fix entitydatajsonformat and protobufpersisteddata to handle collection of mapped container .
added a new variable ` oldestUnpinnedMemTableInfo ` to simplify the calculation of active memory tables to improve code readability and maintainability by reducing complexity in the condition check
added a test for retry the same host on callback failure in the HttpTest class to ensure that the client retries the same host on callback failure
fix checkstyle issue in ` ` com . oracle . truffle . tutorial . background ' ' package
added a new test class SQLServerEscapeQuestionCharacterTest to validate SQL Server escape functionality to ensure correct handling of question characters in SQL queries
added @ NonNull annotations to constructors and added null checks for routes in CamelModule and JoobyBeanRepository classes to enhance null safety and
replaced synchronized block with util . wait for blocking operations in JavaFXSEPort . java to improve code readability and leverage utility methods
changed the package of ParameterFlags from ` com . kenai . jaffl ` to ` com . kenai . jaff
refactor crop rendering logic to handle both RegionDecoder and Bitmap objects to improve flexibility and error handling for unsupported image objects during view setup
removed the ` appName ` parameter from the ` InputRC ` constructor and related methods to simplify method signatures and improve code clarity
[ gr - 19389 ] add test for install / uninstall command with ignore deps
replaced ` options . setHeadless ( true ) ` with ` options . addArguments ( " -- headless = chrome " ) `
replaced direct assignment of ` value ` with ` value . intern ( ) ` in ` VersionedValue . java ` to ensure the value is
added support for " MOVE " status in the status check to ensure proper handling of the " MOVE " status in the connection
updated ISO _ MONTH _ YEAR _ DAY _ YEAR4 _ TIME and ISO _ MONTH _ YEAR4 _ TIME constants in FixedDateFormat . java
replaced ` org . apache . curator . shaded ` with ` com . google . common . collect . Lists ` in multiple Java
[ hotfix ] [ network ] fix npe in hssubpartitionmemorydatamanager # startspilling ( )
updated permission checks for untrusted visit functionality in the plot to ensure proper handling of untrusted visit flags in the plot
do n ' t send jabber packet if no jabber be register
updated the condition in BasicURLNormalizer to include additional boundary checks to enhance URL normalization functionality to accommodate additional edge cases
changed access modifiers of methods from protected to private in QuickstepTransitionManager . java to restrict access to these methods for better encapsulation
added a check to compare ` enc1 ` and ` enc2 ` with the ` lockRate ` comparison in ` EncodingConfiguration . java `
added ` getProjectPath ( ) ` method to ` ProjectGenerator ` and modified ` generateProjects ( ) ` method to return a set of generated
removed unnecessary conditional check for native locale zero digit and added validation for calendar type to improve code clarity and prevent potential ArrayIndexOutOfBoundsException
added a new file MSwingUtilities . java that implements utility methods for image scaling and error handling to provide utility functions for displaying messages and
camel - 1770 : camel - mail - make it easy to use async in camel - mail . thanks to alexander
added @ RefreshScope annotations to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enhance configuration management by ensuring the scope is refreshed during authentication
added unit test base on user forum issue
added two new files , Main . java and ScriptRenderer . java , and updated SchemaCrawlerMojo . java to use this new file to
added a new test method ` testQueryAfterRead ` in ` RequestTest . java ` and modified the conditional check in ` Request . java
added checks for glyph dimensions in BitmapFont . java and implemented isDescendant method in Group . java , modified touch focus handling in FlickScrollPane
replaced failure reporting with close hook execution in DeploymentManager . java and added a new test for deployment failure handling in DeploymentTest . java to
add a ` ` force ' ' flag to the lexicon recipe mapping to make it easy to use .
increased sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to improve test stability by allowing more time for
replaced specific imports with a wildcard import and modified the conditional check for shortName to simplify import statements and improve code readability
do n ' t use classpathurlstreamhandler in jollydayholidays . java , use getresource ( ) instead
added a new file ` FieldUtils . java ` with utility methods for reflection - based field access to facilitate easier manipulation of field
removed the assertion for speculative type in DeferredAttr . java and added a new class DoubleStaticImport . java with a locking mechanism to
updated layout inflation from ` custom _ content ` to ` workspace _ screen ` and added padding for widgets in ` AppWidgetHostView `
added updatesettingswithsavelastaccount to update the xabber account setting
added a method ` setvar ` to the ` Commands ` class for setting variable values to facilitate users to enable users to set
add animal tame event to the catentity . onanimaltame ( ) method to allow catentity to fire an
throw exception on null range or unsupported data type in window frame
pdfbox - 4892 : add a test to verify that the font name be a help
added code to set the application ' s mode to ensure the application uses the correct application ' s mode
added support for optional Docker file paths in ImageFromDockerfile and created a new DockerfileBuildTest class to enhance flexibility in handling Docker
added a null check before assigning threadInfos to avoid potential NullPointerExceptions when accessing threadInfos
updated the conditional check for sweepAngleOuter in PieChartRenderer . java to use a constant value to improve code readability and maintainability
[ hotfix ] [ checkpointing ] add more log to singleinputgate and singlecheckpointbarrierhandler
added various table and view types to the Schema class to enhance schema management capabilities for improved data handling
added a minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum constructors to allow flexibility in similarity calculations for fuzzy queries
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java `
refactor LayoutWrappingEncoder to allow setting the " immediateFlush " property within the enclosing Appender to enhance flexibility in handling output streams by
updated the AutoConfigureAfter annotation to include additional auto configuration classes for Rabbit Rabbit and Kafka to enhance configuration flexibility by allowing multiple auto - configuration
modified the null check for the component in JLayer . java and added a new test class bug6875716 . java to ensure proper
updated import statements from ` avro . shaded ` to ` com . google . common . base ` in multiple Java files to ensure compatibility with
refactor BciBlockMapping and GraphBuilderPhase to improve block management and add methods for return and unwind blocks to enhance code clarity
added getter and setter methods for legacyRenderer in mmm Label . java and ppp Label . java to enhance image rendering functionality by allowing legacy
replaced the method ` intToFourBytes ` with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and `
added null check for mObserver in NavigationModeFeatureFlag . java to prevent potential NullPointerException when mObserver is null
removed the super modifier from the thenComparing method in Comparator . java and added a new test class for the Department class in TypeTest
refactor DocIdSet class to improve code organization to enhance maintainability and readability of the codebase
updated the end time calculation in UserRuleAnomalyFunction to use currentKey bucketMillis instead of null to ensure the anomaly result reflects the
added a try - catch block around parsing values in VisualScoreTagTest . java to ensure NumberFormatException is not thrown when parsing values
added a class loader to the enhancer configuration in MockFactory . java to ensure proper class loading for mock factories
added a new ` OriginalFormat ` class and integrated it into the ` formats ` list in ` ConverterWithEnumFormat . java ` to enhance
replaced hardcoded string " yyyy / MM / " with a constant PATTERN _ YYYY _ MM in FileStorageUtils . java to improve code
refactor JAWTRenderer class to improve rendering performance to enhance performance and maintainability of the rendering process
camel - 15836 - camel - aws2 - * : enable autowire on the lambda client , regen doc
add mac address validation for uservmmanagerimpl . getnextavailablemacaddress ( ) method .
removed the check for " Authorization " in stringHeaderName to simplify the logic for handling authorization headers
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService ` to streamline the execution process for better clarity and
added ` getDetails ( ) ` method to ` Authentication ` , ` AbstractAuthenticationToken ` , and ` UsernamePasswordAuthenticationToken ` classes ,
modified the initialization of randUsePoints to use a random value of 0 to ensure that the randUsePoints variable accurately reflects the maximum
rename method ` appendDot ( ) ` to ` endSentence ( ) ` in multiple classes to improve clarity and consistency in naming conventions
updated ` formatForConsole ` method to include ` Locale . US ` parameter across multiple classes to ensure consistent output formatting across different locales
updated import statements in GroovyParserVisitor . java and added sorting logic for named arguments in GroovyPrinter . java to improve code clarity and ensure
added boundary checks for bottom , left , and right insetPx in Border . java to ensure that the inset dimensions are within valid bounds
replaced instance of ` GestureState ` with a static final instance ` DEFAULT _ STATE ` in ` TouchInteractionService . java ` to
replaced Joda ' s DateTime with Java ' s Instant and DateTimeFormatter in LlapServiceDriver . java to improve compatibility with Java ' s
refactor openblas and openblas _ nolapack files to improve code organization and maintainability
replaced IOUtils . closeQuietly with try - catch blocks for closing piece storage to improve resource management and prevent potential resource leaks
added synchronized keyword to the initTxnMgr method to ensure thread safety during initialization
increased the timeout duration in ` waitForRecoveriesToFinish ` from 120 to 480 in ` AbstractDistribZkTestBase
added a new class ` SearchResults ` to handle search results from a given Hits object to facilitate the retrieval and retrieval of
fix npe in threadcpufeaturesupport when threadcpufeature be null
added initialization of the ` primitivesTemp ` array in ` BytecodeNode . java ` to ensure that the ` primitivesTemp ` array is only
added new versions " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " to TestBackwards
updated the feature flag for " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified the
added a new endpoint to retrieve tenant pools for a current instance to enhance the API functionality for retrieving database pools
refactor canEarlyTerminate method to improve clarity and structure to enhance readability and maintainability of the code
added ` isToString ( ) ` method to ` InlineBytecodeGenerator ` and new test cases in ` InlineByteBuddyMockMakerTest
added logging statements to CxxCompileStep and CxxPreprocessStep for better traceability to facilitate debugging and monitoring of command
add stringutil . removecharacter ( string , char ) method to remove character from string
[ 3.0 ] fix metadata service export issue ( # 9444 )
( chore ) camel - kie - runtime : add datatransformer interface
changed the type of the variable ' values ' from ' Collection < ? > ' to ' Collection < Number [ ] > ' and updated the
simplified conditional checks in FormatStringChecker . java to improve code readability and maintainability
removed unnecessary whitespace in ElectionContext . java to improve code readability and maintain consistency
refactor ITestDbTxnManager class for improved readability to enhance maintainability and facilitate future development
refactor connection handling in DatabasePlatformFactory to use try - with - resources for better resource management to improve code readability and ensure proper resource
added testMapModel method to CodeFirstPojoClient , CodeFirstPojo , CodeFirstPojoIntf , and CodeFirstP
pdfbox - 4071 : remove unneeded null check , a suggest by valerybokov
updated selection logic and item listener in ScaleDialog . java for improved clarity and functionality to enhance code readability and maintainability by redu
change method name from ` updatePlayerStepStatus ` to ` tickBelt ` and add null check for ` stepHeight ` to improve code
pdfbox - 4071 : do n ' t throw exception if widget have no rectangle
changed the type of the ` keys ` variable from ` SortedSet ` to ` LinkedHashSet ` to ensure uniqueness of the keys in the order
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG value from 1500 to 1000 and added method overrides in PageListPanel and
updated the preload library from " libdc1394 - 22 " to " libdc1394 - 25 " in dc1394 . java
added support for agent support in MainMockTransformer and created new test classes MockStaticWithPrivateCtor and StaticWithPrivateCtor to enhance testing capabilities
pdfbox - 4892 : avoid duplicate instanceof check , a suggest by valerybokov
add a setwindowtitle ( ) method to set the window title for x11 .
modified depth calculation in XRSurfaceData . java to accommodate different pixel sizes to ensure correct depth value is used based on the color
added error response body handling in OkHttpDataSource to improve error reporting for unsuccessful response responses
added a static method ` exit ` to ` TopLogging ` and replaced ` TopSecurityManager . exit ` with ` TopLogging . exit `
updated the logic for determining the start index in NativeRegExp . java to ensure correct initialization of the start index based on the regexp ' s type
[ optaplanner - 468 ] ignore optaplanner test until upgrade to optaplanner 6.3 . 1
updated variable name from lowIndex to highIndex in DefaultAllocator . java to improve code clarity by using a more descriptive variable name
added a method to clean entries without feeds in DatabaseCleaner and FeedEntryDAO to facilitate deletion of entries without feeds in the
changed the return type of the appendToLabel method from void to AtomicCounter to allow the method to return the instance of the AtomicCounter
[ java ] add no - op idle strategy for low latency medium driver .
added handling for HttpStatus . NOT _ MODIFIED in multiple classes to ensure headers are only written when the response status is not modified
rename ` constantValueInertSpliceInstrumentListener ` to ` constantValueInertToolEvalNodeFactory ` and update related method names to
updated the ` paintTabArea ` method in ` SynthTabbedPaneUI ` to retrieve the dimensions of the tab area to ensure proper
updated the ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept an additional ` Object . args ` parameter to
added methods to retrieve file separator and absolute paths in multiple classes to ensure consistent file path handling across different operating systems
added JSON annotations and a new build method for JavaProvenance in JavaProvenance . java and updated MavenProjectParser . java to include dependencies
added logging for all Hive functions and non - deterministic UDFs in HiveFunctionRegistry . java and updated the condition in EqualityVisitor . java
increased loop iteration count from 100 to 200 in CloudStateUpdateTest . java to accommodate larger state updates
change exception class name from unserializablecolumnfamilyexception to unknowncolumnfamilyexception
added a check for writable output files in NativeErrors . java to ensure tests are skipped when the output file is writable
added error handling for package info retrieval in LauncherModel . java to improve robustness by logging errors when package information is not found
cloudstack - 4892 : do n ' t swallow exception when database upgrade fails
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and added a new test in FaultTolerantChunkOrient
replace ` startsWith ( completed ) ` with ` regionMatches ( Option . CASE _ INSENSITIVE ) ` in ` LineReaderImpl . java
added imports for SourcesFileResults , SourcesFileErrors , and GlobalDataTables , and modified data table handling to include global data tables to enhance
added import for Overview and modified task dismissal logic in TaplTestsTaskbar . java to ensure all tasks are dismissed
databaseupgraderecovery : add dbupgradetystemvmtemplate interface to implement dbupgradetemplate interface
changed the ` conn ` variable to be ` final ` and simplified null checks for ` resource ` to ensure immutability and improve code read
refactor index handling in SequenceAction . java to use a local variable for clarity to improve code readability and maintainability by reducing
set _ keyspace ( ) impl ( setup for keyspace arg removal )
added a check to skip synthetic fields in ReflectUtils . java to improve handling of synthetic fields in the ReflectUtils class
added SLF4J logging functionality to the Ninja configuration and created a LoggerProvider class to enable logging capabilities for the Ninja application in
updated the ` ServerStatusCommand ` class to use ` ImmutableMap < String , Object > ` instead of ` ImmutableMap < String , String > `
added deprecation warning for deprecated Spring context configuration in SpringFactory . java to provide clearer guidance for users regarding the deprecation of multiple glue classes
added a new method ` deepStart ` to the ` Startables ` class for deep starting from specified startables to enhance functionality by allowing deep
removed the deprecated method ` reservePrimitiveExtensionArray ( ) ` from ` Shape ` and its implementation in ` ShapeImpl ` to streamline code
fix the laser table not be able to add the laser target to the list of target .
refactor conditional logic for object name checks in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports related to CachingTokenFilter , TokenStream , and MemoryIndex in TestSolr4Spatial2 . java to improve code cl
set the expiration period of policyEntry to zero in MemoryLimitTest . java to ensure that the test does not consume more than 2 * pageSize
removed null checks and improved conditional checks for handlerName in RequestHandlers . java to simplify code and enhance readability by reducing unnecessary null
modified the way the servlet name is retrieved by replacing ' - ' with a dot to ensure consistent logging format by removing unnecessary spaces
updated import statements and modified the handling of the PythonPATH environment variable in ProjectBuildFileParser . java to improve code clarity and ensure correct
updated audio format handling and buffer allocation in DirectAudioDevice and Toolkit classes to improve error handling and ensure valid audio data sizes
added null check for enums in ElasticSearchStringLookupService to ensure safe handling of null values to avoid potential NullPointerExceptions
updated error message format in CommitLogReader . java to include additional context to improve clarity of error messages for better debugging
added initialization of the WebSocketSession policy using containerScope to ensure WebSocketSession uses the correct policy based on container scope
simplified the initialization of static fields in the TypeScript translation process to improve code readability and maintainability by eliminating unnecessary checks
added a new parameter ` webroot ` to the ` createContext ` method in ` UserService . java ` to enable dynamic configuration of the
( chore ) camel - spring : migrate all test to junit 5 ( # 4396 )
use netbeans ' s getcurrentactivecomponent ( ) instead of registry . getmostactivecomponent ( ) .
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple formatter classes to improve clarity and consistency in header creation logic
consolidated multiple import statements for trade DTOs in VircurexTradeService . java and added a placeholder method for pl
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure proper resource management during processing
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions
updated comparison operator from ` < = - 3 ` to ` < - 3 ` in FloatingDecimal . java and added a new ` ToString
updated property validation logic in PropertyDescriptor . java and added a new test class Test7189112 . java to ensure proper type checking and validate
solr - 9310 : address the test failure in jenkins
added conditional logic to set the ORIGIN header based on the URI ' s secured status to ensure the origin is correctly set based on the
refactor visibility and animation logic in RecentsView , TaskView , and LayoutUtils classes to improve code readability and maintainability by
added the ` field ` parameter to error messages and modified the ` extractSingleValue ` method calls to include the ` field ` parameter to enhance error
added new sample URLs for " Clear HLS : TearsOfSteel " and " Clear HLS : Basic 4x3
removed unused imports and updated method definitions in PersistenceProvider . java to streamline code and improve readability by eliminating unnecessary dependencies
hbase - 25819 addendum fix log message in execrpcinvoker and writablerpcengine
added logging functionality to TestSpecificCompiler and introduced a new Position class to improve error handling and diagnostics for generated code compilation
added a return statement to the session creation process in WebSocketEndpoint . java and implemented a new test for session closure in WebSocketIT . java to
increased random number generation from 1 to 10 and updated method names for consistency to improve code readability and maintainability by using more d
ww - 4892 fix typo find by codespell on fossies . org
modified the stream stop logic to conditionally call stop ( ) based on the stream ' s stop status to ensure that video tracks are only stopped
change chartData from List to ArrayList in BittrexChartDataResponse and introduce a new BittrexChartDataPeriodType enum to
[ geot - 8470 ] update gml example to use geotools instead of jts
replaced ` substream ( 200 ) ` method with ` skip ( 200 ) ` method in ` TargetType58 . java ` to improve
hhh - 10956 - add support for identifier generator in simplevalue and abstractentitytuplizer
rename ` ` look up full text ' ' action to ` ` download full text ' '
refactor URI registration logic to include host and port information to enhance clarity in handling URI registrations by including host and port information
refactor WebSocket mapping and upgrade filter classes to improve code organization and maintainability
added a check for non - blank OSDB hash before calling getInfoFromOSDbHash in OpenSubtitle . java to ensure that only valid
added token transfer functionality in ` RuntimeImpl ` and ` MUtil ` to facilitate token transfer functionality in contract processing
camel - 14650 : camel - ftp - do n ' t delete a file if stepwise = true
corrected a typo in the method reference from ` searchBindDN ` to ` searchBindPassword ` to ensure the correct password is used
added validation for join results in MapJoinOperator and introduced BloomFilter in HybridHashTableContainer to enhance error handling and improve bloom
updated HTTPSPDYAsyncEndPoint constructor to accept an AsyncEndPoint parameter and added methods to retrieve local and remote addresses to enhance functionality by allowing
added ` intent . putExtra ( " id " ) ` to multiple adapter classes and updated its usage in ` TweetPager ` and `
added proxy authorization handling and refactored disconnect logic in HttpURLConnection to improve code clarity and maintainability by centralizing the disconnect logic
replaced ` _ numChildren ` with an ` AtomicInteger ` for thread - safe incrementing in ` TraceContext ` to ensure thread - safe
removed unnecessary whitespace in multiple Java files to improve code readability and maintainability
disable the test in ValueTypeTests by setting the enabled flag to false to improve test stability by preventing the test from running
resolve split - packages : move everything from kie - api under org . kie . api : move org . kie . internal
updated superclass constructor parameters from PredicateType . IN to PredicateType . NOT _ IN across multiple predicate classes to improve clarity and consistency in predicate
replaced specific exception handling for AccountNotFoundException with a more general Exception in FileActivity , Preferences , and ReceiveExternalFilesActivity to improve error handling
added a null check for the witnessService before validating its address to avoid potential NullPointerException when witnessService is null
updated the way the taggedCol string is constructed by using getExprString ( ) to improve code readability and maintainability by using a more
added a conditional check before setting the item ' s Javadoc in AbstractJavaClassTranslator . java to ensure that the item ' s Javadoc is only
rename ` holderMethod ` to ` holderMetadata ` in ` CompiledICHolder . java ` and add a new class ` RedefineInterface
replaced multiple calls to revalidate ( ) with revalidateWithAnimationSafety ( ) in Tabs . java to improve code clarity
[ hotfix ] [ metric ] remove unsupportedoperationexception from deserializer and serialization schema adapter
updated the calculation of the y - coordinate in the Polygon class to use a temporary variable to improve code readability and maintainability by reducing
updated cache creation method to explicitly cast null to a Configuration object to ensure type safety by explicitly casting null to improve code clarity and prevent potential
added a check for non - empty string constants in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java
refactor ShadowCookieManager class to improve code readability to enhance maintainability and facilitate future modifications
added a new configuration option to disallow storage - based authorization check for external tables and updated related tests to ensure proper permission handling for managed tables during
added a braces to the conditional statement in Stage . java and adjusted the drawing position in ProgressBar . java to improve code readability and correct the
[ gr - 20684 ] use the native byte order for llvm and big _ endian platform capability .
updated the property name from " namedpipesocketprovider . timeout " to " windowsprovider . timeout " in WindowsClientProviderStrategy . java
modified the ` initWebViewLogin ` method to accept a ` baseURL ` parameter and updated the logic for loading the login URL to enhance flex
corrected a typo in the exception message from " parameterArray . Paramter " to " parameter . Parameter " to clarify the
camel - 18131 : camel - auditevents - do n ' t require date after return invalid date
rename ` ExponentialTimer ` to ` PreciseThroughputTimer ` across multiple files to clarify the purpose of the timer ' s purpose
fix flaky softbodytest . testdistributionsoftbody ( )
changed interface visibility from package - private to public for SinkFunctionProvider , SourceFunctionProvider , OutputFormatProvider , and InputFormatProvider interfaces to
[ zeppelin - 4892 ] fix log message for websocket error
[ jingle ] add unit test to check that there be no redundant namespaces
fix a crash when the redplasma file be n ' t find
added HTTP / 2 header handling to BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler to
refactor conditional statements in Remove . java for improved readability to enhance code clarity and maintainability by standardizing formatting
updated delimiter values in SimpleReport . java from ' count ' and ' count ' to ' count 2 ' and ' count ' to correct the
removed the option ` - XDignore . symbol . file ` from ` JavapTask ` and updated ` JavapTask `
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed the ` TickerDemo ` class to improve clarity and consistency
removed unnecessary try - catch blocks and added null checks for contract creation and contract address in Runtime . java to improve error handling and provide clearer
do n ' t create input3d for applet that do n ' t support it
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
simonstewart : do n ' t throw a parserexception , just return false .
corrected the method name from ` getRepositoryFactoryClassName ` to ` getRepositoryFactoryBeanClassName ` in ` JpaRepositoryConfigExtension . java `
changed the return type of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to improve the
refactor assignments of instance variables in IOSGLES20 . java to improve code readability and maintainability
removed the UploadPathActivity class and its associated functionality from ComponentsModule . java to streamline the codebase by eliminating unused components
modify return statements in SimpleTextFieldsReader to handle DOCS _ ONLY index options to ensure that totalTermFreq and sumTotalTermFreq is
fix : fix implicit constructor in constructor . isimplicit ( )
added a database parameter to multiple populateValidateNullableIfNeeded and populateValidateUniqueIfNeeded methods to check if the database is an instance of OracleDatabase to
refactor Database class to improve code readability to enhance maintainability and facilitate future development
refactor SpringApplicationBuilder class to improve code organization to enhance maintainability and readability of the application
removed the ` indexOptions ` variable from ` DefaultIndexingChain ` and updated the iterator assignment in ` PointInSetQuery ` to streamline
removed the substring operation from rawName in SchematicHandler . java to simplify the code by eliminating unnecessary substring extraction
added a switch statement to handle class names in AbstractCollectionAssert and updated return statements in CollectionAssert _ isUnmodifiable _ Test to include additional collection
changed the access modifier of the Option enum from static to instance to allow external access to the Option enum
updated Compose . java and ComposeActivity . java to conditionally display an alert dialog based on character remaining text to enhance user experience by
replaced the toggleKeepInSync ( ) method with a direct call to getFile ( ) in FileDetailFragment . java to streamline the
replaced ` DatatypeConverter ` with ` java . util . Base64 ` in ` ImageUtil . java ` and added unit tests for `
added new files ` ControllerCounter . java ` and ` DBCallback . java ` in the ` org . springframework . datastore . document .
added ' final ' keyword to the ' deleteTicket ' method parameter in EhCacheTicketRegistry . java to enforce immutability of the
added a new file FlywayMigrationRunner . java to create a database migration runner to facilitate the migration of flyway data
replaced ` isEmpty ( ) ` calls with ` size = = 0 ` in HashMap . java and created a new class ` OverrideIsEmpty
updated the version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the latest version
added @ Nullable annotation to the modify method in CompressionCodec and ZlibCodec classes , and added a null check for ORC compression modifiers to
added null check for mainAttrs and improved jar handling in LauncherHelper , Arrrghs , TestHelper , and TestHelper classes to
updated test class names for consistency in naming conventions to improve code readability and maintainability
rename hotspotvmconfig . methoddata : : _ jvmci _ ir _ size to methoddata : : _ jvmci _ ir _
pdfbox - 4071 : make cellcopypolicy constructor public
added a method to reset the icon load result in FloatingIconView and refactored its usage in Launcher to improve code clarity
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure
updated IconRecentsView to handle landscape orientation and layout adjustments based on configuration changes to ensure proper layout adjustments for landscape orientation
deleted the AddAdapter . java file to remove unused code to streamline the codebase
added checks for empty constructorCodeList before accessing its first entry in NonStaticLifter . java to prevent potential NullPointerExceptions when accessing the first
refactor method signatures and conditional checks in OpTraitsRulesProcFactory . java to improve code readability and maintainability by reducing unnecessary null
refactor TestLogWatcher to improve error handling and message registration logic to enhance clarity and maintainability of the test code
added a print statement to the Java2TypeScriptTranslator class to enhance output formatting for better readability
updated the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to reflect the latest version changes
added a condition to set SPRING _ AOP _ PROXY _ TARGET _ CLASS to " true " if it is not already present to
removed the singletonLock variable and its usage in TypeCachingBytecodeGenerator . java to simplify the code and improve readability by eliminating
updated method names in CallbackActionExamples to include " withClass " and " withString " with a new client and server configuration to enhance cl
add helper method to make it easy to write xml file
added a condition to check if ` mavenSettings ` is not equal in ` MavenExecutionContextView ` and refactored ` MavenRepositoryMirror
added a ` name ` field to ` BuildRuleSourcePath ` , ` PathSourcePath ` , and ` SourcePath ` classes , and
updated the comparison logic for serviceRedirectUri in OAuth20CallbackAuthorizeEndpointController and added a new test for operation clients with the same redirect URI
refactor annotation handling by introducing a new ` toArray ` method in ` AnnotationParser ` to improve code readability and reusability by
replaced ` getBadgedDrawableForUser ` and ` getBadgedLabelForUser ` with ` getBadgedIconForUser ` and ` getB
updated the default value for the " OS default " property in GlobalConfiguration . java to include " Line separator ( LF or CRLF ) " to
bugfix : check for subclass of bestpathaccuracytracker and bestpathaccuracytracker
fix for thymeleaf - 1769 : do n ' t escape backslashes in the input
chore : update java and python dependency ( # 660 )
added IOException handling to the buildFileNamesCanBeDifferentCrossCell method to ensure that the buildFileNamesCanBeDifferentCrossCell method throws
refactor CountersReader class to improve code readability to enhance maintainability and facilitate future updates
updated container type assignment in AllAppsRecyclerView and refactored logDeepShortcutsOpen method to accept a View instead of a int to
hbase - 15827 add deprecation warning for hbase . ipc . server . reservoir . initial . max and hbase
fix native join and window query in native mode
added a new method ` getAllGenericParameterTypes ( ) ` in ` Executable . java ` and updated its usage in ` Parameter . java `
refactor TestFSTs class for improved readability to enhance maintainability and facilitate future development
ggb - 1889 fix for text box height calculation in text renderer .
hbase - 20650 increase the max split size of increasingtoupperboundregionsplitpolicy to be more flexible ( #
removed unnecessary state reset and loader calls in LauncherClings . java to streamline loading process by eliminating unnecessary state management
removed initialization of keys and updates lists in ManagedSelector . java to simplify code and improve readability by eliminating unnecessary initializations
added a ` setExcludedDatasources ` method to ` SpringDataSourceBeanPostProcessor ` to allow users to specify excluded Spring datasource configurations
store undo info in table value view and remove unnecessary null check in tablevaluespanel
( chore ) camel - aws : use clientconfiguration instead of clientconfiguration in kinesisproxy
refactor channel handling in VelbusSensorHandler to use a loop for channel masking to improve readability and performance of channel event triggering
updated LocalCacheSelectorCode and BoundedLocalCache to disable tests due to unfavorable benchmarks and modified delay logic in BoundedLocal
added a test for illegal database names in IoTDBSessionSimpleIT and improved error handling in PartialPath to ensure that illegal database names are
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are properly reset during garbage collection operations
renamed ` desiredWorkspaceLeftRightRightMarginPx ` to ` desiredWorkspaceHorizontalMarginOriginalPx ` and introduced a new method to calculate horizontal
refactor whitespace and formatting in CharTokenizer . java for consistency to improve code readability and maintainability
chore ( deps ) : upgrade gapic - generator - java to 2.1 . 0 and update gax - java to 2.16
updated the constant name for the XENSERVER _ NETWORK _ LABEL from " xenservernetworklabel " to " xennetworklabel " to
updated libGDX and Nightly versions from 1.5 . 5 and 1.5 . 6 - SNAPSHOT to 1.5
added a private field ` metricNames ` and its getter method to ` SolrCore ` to provide access to the ` metricNames ` map for
updated URI handling in MavenManifestFactory to use Path instead of URI to improve compatibility with different file systems
replaced the direct method call to ` System . getProperty ( " os . name " ) . contains ( " mac " ) ` with a
refactor JdbcAggregationRepository class to improve code organization to enhance maintainability and readability of the codebase
added clear and addAll methods to slotList in Frame . java to ensure slotList is properly cleared and added to other elements
initialize m _ predCount to - 1 in PredicatedNodeTest . java to ensure proper initialization of the predCount variable
added imports and overridden the ` mergeProperties ` method in ` ConfigurationSpringInitializer ` to retrieve and merge configuration properties to enhance configuration management by
fix checkstyle issue in util / logging / CommandLineOutputAppender . java and Main . java
replaced HashMap with LinkedHashMap for aliasToWork and aliasToWork in multiple files to ensure consistency in data structure structure across the codebase
added logic to determine the superclass of the JDBC handler map based on the type type to ensure proper handling of specific class types in the type handler
added debug logging statements to HibernateItemWriter , JpaItemWriter , JpaItemWriter , and JmsItemWriter classes to improve trace
modified the way the language range is parsed by removing the ' ; ' character from the ' ; ' string to ensure the correct substring is used
updated Http2ServerResponseImpl and VertxHttp2Handler to execute the close handler in an IO context to ensure that the close handler is
cache xssf table in basexssfevaluationworkbook to improve performance
updated schema text formatting logic in BaseSchemaTextFormatter . java to accommodate additional schema text detail types
replaced ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to ensure compatibility with
replaced HashSet with LinkedHashSet for roots and leaves in SparkWork . java to ensure uniqueness of elements in the collection
removed redundant initialization of tableScanCloneOpsForJoin and added a null check for it to ensure the operator tree is properly cloned before proceeding
added a null check for the client ID before returning it in DynamicRegistrationClientConfigurationService . java to avoid potential NullPointerExceptions when the client ID
reset achievementlist . field _ 187981 _ e to avoid memory leak
initialize member variables with empty strings in MutableDatabaseInfo and MutableJdbcDriverInfo classes to ensure default values are empty instead of null to improve code
updated references from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in ` QuickSharingPermissionsBottom
added methods to read long values from byte arrays in ByteBuffersDataInput and ByteBuffersIndexInput classes to improve performance and efficiency of long data
added new variables for security and nsec in UnixFileAttributes . java and refactored file time retrieval logic in Basic . java to improve
added a new file TestNoEagerReclaimOfHumongousRegions . java to test garbage collection behavior of humongous reference
added visibility control for the search bar in the AllAppsContainerView based on user preferences to enhance user experience by hiding the search bar based
updated the method call from ` router ( ) ` to ` routes ( ) ` in ` EnvRouterFeature . java ` to ensure the correct
added a null check for cur and next in LineChartRenderer . java to prevent potential NullPointerExceptions during rendering
added a new ` ReloadPageAction ` class to handle the reloading of the current displayed page in the menu to enhance user experience by allowing
changed log level from info to warn for various log messages in SQLManager . java to improve logging severity for better user experience
update minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type is provided before proceeding
use serviceloader instead of factoryregistry to load extension point
added a call to ` closeTable ( ) ` in ` HiveHBaseTableInputFormat ` to ensure proper resource management by closing the table
added a ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` , ` JdbcViewImpl ` , and ` HiveViewImpl `
removed redundant configuration settings for doctype declaration and load external DTD in DocumentFactory and updated hints initialization in XMLSAXHandler to improve code cl
updated JdbStopThreadidTest to use OutputAnalyzer instead of JdbCommand to improve code readability and maintainability by using a more
added a ` getType ` method to ` ShadowContentResolver ` and corresponding unit tests in ` ContentResolverTest ` to ensure correct handling of null
replaced direct usage of ` runnable ` with a variable ` entry ` in ` ExpressionThreadPoolManager . java ` to improve code readability and
updated the default HTTP port from " port " to " vertx . httpPort " in HttpTestBase . java to ensure the application uses
replaced ` addCaptureListener ` with ` addListener ` in ` buttonTable ` to enhance listener functionality for better user experience
increased the default batch size from 10 to the available processors in NewSessionQueueOptions . java to increase the batch size based on the
added error handling to the ` establishResourceManagerConnection ` method in ` TaskExecutor . java ` to improve robustness by logging errors when the
modified the handling of ClassFile to initialize it to null and return a new LambdaExpressionFallback if classFile is null to improve code clarity and ensure
updated the error message in IllegalArgumentException to include minimum and maximum values to improve clarity of error messages for better debugging
updated onMessage method signatures to include ' owner ' and ' telegram ' parameters across multiple classes to enhance functionality by allowing recipient - based message processing
added new interfaces ` Cursor ` , ` Database ` , and ` Row ` in the ` com . codename1 . db ` package to
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the codebase
# 113 - enh : add ebeanserver . setbeanid ( ) and ebeanserver . setbeanid ( ) ,
updated the transform method to use the method getAddToSiteDescriptorXsl ( ) instead of a hardcoded XSLT path to improve flexibility
added a list of request matchers to the HttpSecurity class to enhance flexibility by allowing multiple matchers to be added
added hashCode and equals methods to ContactResource class to ensure proper handling of resource names in collections
move the getrequest ( ) method from abstractprocessor to abstractprocessor so it can be use by ajpprocessor .
updated log messages in FileManager . java for clarity and improved error handling to enhance readability and provide clearer context for debugging and
added a tearDown method to TestIndexSearcher and reset mock control in TestJdbcDataSource to ensure proper cleanup and optimize operations during tests
added import for LambdasWithInterfaces and replaced assert statements with getSourceFile calls in SyntaxTests . java to enhance code clarity and ensure
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
[ tika - 2370 ] use fallbackparser instead of emptyparser to simplify parserdecorator
fix fmlsecuritymanager . getcallerclass ( ) to return ` ` none ' ' instead of ` ` none ' '
removed unnecessary parameters from several fields in AccountUtils , IndexedForest , and CustomPopup classes to simplify initialization and improve code readability
updated parameter key from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME method in CoreApi
added a new test method ` testJsxComment ` in ` JsLexerJsxTest . java ` and modified ` Parser . java `
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording for the widget functionality
added error handling for missing Buck configuration in BuildEndToEndTest , CxxEndToEndTest , and CxxEndWorkspace to
added physical memory retrieval and validation in TestStringBufferAndBuilderGrowth . java to ensure the machine has sufficient resources before running the test to
mark the conversionService as deprecated and updated its usage in MapToLocalDateConverter to improve code clarity and maintainability by using a more
added a success flag set to true in HiveMetaStoreClient . java to ensure that the operation is successful before proceeding
updated string comparison from ` = = ` to ` . equals ( " * " ) ` in ` ResourceReferenceInfo . java ` and modified
added support for " amp . twimg . com / v / v / " formats in TimeLineCursorAdapter and TweetActivity to enhance
added a @ Deprecated annotation to AreaReference . java to indicate that the method is outdated and should not be used in future development
refactor ElementType and Target classes to improve code organization to enhance maintainability and readability of the codebase
updated assertions and reference kind handling in MemberName . java to improve clarity and correctness of method reference handling
updated the default value of ` __ submitKeyUpdates ` from " false " to " true " and added synchronization around the ` runChange `
modified the conditional check for mouse events in EditNodeTextField . java to ensure proper event handling for mouse events
camel - 1889 : added support for static bean method in camel - spring . thanks to david for the patch .
refactor multiple classes related to benchmarking and processing to improve code organization and maintainability
refactor exception handling in AgentRunnerTest . java for improved readability to enhance code clarity and maintainability by reducing redundancy
added ` getDescription ( ) ` method implementations in multiple classes to provide clearer descriptions for Maven project property management
refactor activeGroup . faces initialization to use a local variable to improve readability and maintainability of the code
refactor ProcessEngine class to improve code readability to enhance maintainability and ease of understanding
corrected a typo in variable name from " reentrantLock " to " lock " across multiple files to improve code readability and
added ` mavenPackaging ` parameter to the ` getBomReference ` method in ` PrintMavenAsCycloneDxBom ` to
updated back ( ) method to use evt . getComponent ( ) instead of directly using evt . getComponent ( ) to ensure the correct component is displayed
reformatted conditional statements in SASLAuthentication . java for improved readability to enhance code clarity and maintainability
updated method parameters in ObjectArraySubject , StandardSubjectBuilder , Truth , and ObjectArraySubject classes to enforce nullable types to enhance type safety
updated configuration retrieval method to use ` getConf ( ) ` instead of ` NutchConf ` to improve consistency and maintainability by using a
replaced OMR . gui . removeBoardsPane ( ) with tab . deselected ( ) in SheetAssembly . java and added
added a method to retrieve the session ID in RemoteWebDriver to provide access to the session ID for external use
added null checks before setting the TimeInterval in ImportContainerImpl . java to avoid potential NullPointerExceptions when setting time interval
updated the command parameter from " - logLevelINFO - serverPort " to " - serverPort " in MockServerContainer . java to correct the
updated error logging to include the exception message to improve error reporting by providing more context about resource loading failures
update dispositionprocessor to use crawlingmetadata instead of robotsheonoringpolicy
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
updated file path formatting in ` DefaultPackageScanResourceResolverTest . java ` to use File . separator for better cross - platform compatibility to ensure
added imports for ByteArrayInputStream and ZipInputStream , and implemented alternativePath method in ExpectNewDemo . java to enhance functionality by providing an alternative path input
fix logentryparsertester to call firstfilter ( ) . init ( ) instead of input . init ( )
added protectionDomain parameter to the BufferAlignmentAgent class to enhance security by integrating protection domain functionality
added dispose method to properly release resources associated with mesh , batch , and texture in WaterRipples . java to ensure proper resource management
added a new configuration variable ` HIVE _ DISABLE _ UNSAFE _ EXTERNALTABLE _ OPERATIONS ` to control semi - join
updated the authorization header description in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys to improve user
added SHOW _ WALLPAPER flag to the window and adjusted wallpaper offsets in the Workspace class to enhance the visual appearance of
changed return value from false to true in SybaseASADatabase . java and modified sequence generation logic in SequenceSnapshotGenerator . java to ensure
nutch - 1348 putsql : do n ' t commit or rollback if the autocommit mode be set to false
added directory creation checks in SnapPuller . java and corresponding test cases in TestReplicationHandler . java to ensure the correct directory is created
updated the AppTarget identifier from " id : launcher " to " launcher : launcher " to ensure consistency in naming conventions for better readability
refactor frame methods in Framer and related tests to include an output parameter to improve message handling and ensure proper memory management during frame operations
simplified method signatures by removing unnecessary parameters in multiple classes to improve code readability and maintainability
updated error messages in GenericUDFStringToMap . java for clarity and added extended parameter for key - value delimiters to improve user understanding
replaced the ` formatInstance ` method with a ` truncatedTo ` method in ` PlainFormatter . java ` that utilizes ` ChronoUnit
replaced TIMEOUT _ MS with RETRY _ CLOSE _ TIMEOUT _ MS in AgentRunner . java and added a new close ( ) method to
hhh - 14536 : remove reflection in classloadingstrategyhelper . getprivatelookupfor ( )
refactor Mockito class for improved readability to enhance maintainability and facilitate future development
updated debug log message from " Closing " to " New " in HiveProtoLoggingHook . java to clarify the purpose of the
added JUnit @ Ignore annotation to SamplingNamingTest . java to mark the test as ignored due to insufficient sample results
updated the exception message to specify that rows and columns must be greater than zero to improve clarity and accuracy of error reporting
refactor methods in DecisionNode and WagonCART classes to improve string concatenation and error handling to enhance code readability and maintainability
added order handling and sorting functionality for BoundSheetRecords in XLS2CSVmra . java and TestBOFRecord . java to enhance the
refactor calculations in ThrustCurveMotor to use separate start and end thrust variables to improve code readability and maintainability by
updated InputSystemJme initialization to use inputManager as a parameter to ensure proper initialization of the InputSystemJme instance
refactor hash code field offset logic in UniverseBuilder . java to improve clarity and ensure offset is non - negative to enhance code read
remove block . getmesh ( ) since it be deprecate
[ hotfix ] [ yarn ] fix typo in yarnapplicationmanagerrunner
added support for EMPTY _ WORD _ OPTIONS option in LineReader and LineReaderImpl classes to enhance handling of empty words in case - insensitive matching
updated the pushViewReplicaUpdates method to include writeCommitLog parameter to ensure proper handling of commit logs during view replica updates
removed duplicate code in CaptureActivity . java and added default button ID retrieval in PreferencesActivity . java to streamline code by eliminating duplicate
added a new test method ` testBatching ` in ` JoinedTableTest . java ` to validate batching behavior to ensure that batch
updated error handling in JpaPersistenceService to differentiate between EntityExistsException and EntityExistsException to improve logging clarity for better debugging and
removed deprecated ` format ` option from ` CucumberOptions ` and updated ` RuntimeOptions ` to use ` plugin ` instead to streamline
removed the save ( ) method call from PMS . java to streamline the code by eliminating unnecessary changes
simplified the back key handling logic in ExtendedEditText . java to improve code readability and maintainability
updated the ` newCapacity ` calculation in ` AbstractStringBuilder ` and added a new ` Capacity ` class for testing the ` ensureCapacity ` method to
replaced goHome ( ) method with onNoteSaved ( noteTmp ) method to enhance note saving functionality
add xwpfrelation . endnote to allow extraction of footnote reference from xwpfdocument
updated the ` CasAuthenticationTransactionSuccessfulEvent ` to include ` clientInfo ` as a parameter in the ` CasAuthenticationTransactionSuccessfulEvent ` to
added a test method to verify the GDALVersionInfo version in BridjOGRDataStoreTest . java to ensure that the GDALVersionInfo
added a new file ` Lifecycle . java ` that implements network error handling in the system to provide a standardized way to handle network errors and
viantart ripper now log 404 on the url
removed unused imports from BodyTubeShapes . java and RocketFigure . java to streamline code by eliminating unnecessary dependencies
implement nativewindow . setretina ( ) and windowNEWT . set
set default value for create project offline checkbox ( # 3396 )
refactor DiskDocValuesConsumer to use BlockPackedWriter and improve value writing to enhance performance and maintainability of the code by reducing
camel - 16458 : camel - default - router - do n ' t return the status code a the originating type instead of the
removed unnecessary data handling and streamlined response creation in GoAwayTest . java to streamline code and improve readability by eliminating
added support for setting Fluent setters in ReflectionUtils and created a new FluentSetterBean class to enhance the flexibility and functionality of the FluentSetterBean
updated ` BlockingHttpEndpoint ` and ` HttpEndpoint ` to return a ` HttpResponse ` instead of a ` ListenableFuture < ? > `
( chore ) camel - core : add unit test for filesortbyexpression and filesortbycaseexpression
updated the method call from ` mLastAppearedTaskTarget ` to ` getLastAppearedTaskId ( ) ` to improve clarity
added new configuration options for image scaling in RtfDocumentSettings . java to enable configuration of image scaling options in the application
added aggregate function name handling in TSServiceImpl . java to improve flexibility in handling aggregate function names during column addition
updated test classes to extend WithNestedTests instead of LuceneTestCase and added setup and teardown methods to improve test structure and ensure proper cleanup
added functionality to set the xCapEnableBox and set the xCapServerUriValue in the PresencePanel to ensure the presence panel reflects
ww - 4448 add a new parameter to allow custom exception to be propagate to the system .
added a method to stop text editing in CodenameOneImplementation , Display , and AndroidImplementation classes to enhance user experience by allowing users to
nifi - 5892 : fix control rate control flow file creation when group attribute be null .
added a new parameter ` isNewComponent ` to the ` showDialog ` method and updated its usage in the ` RocketComponentConfig ` to
added error handling and synchronized access to the client in ChatAnnotation . java to ensure thread safety when sending messages to the client
added a check to ensure the test is only run on Windows to prevent execution of the HTMLDataFlavorTest on Windows
added SQL _ SERVER _ SNAPSHOT parameter to the TransactionIsolationLevel class to enhance transaction isolation level functionality by integrating SQL server snapshot
modified the way newRecids is added in AsyncWriteEngine to ensure that newRecids is added to the queue before proceeding to avoid
use java . util . zip . zipfile instead of java . util . compat . jrecompat
added null check for commandClass before creating a new instance of RegisteredServiceImpl to avoid potential NullPointerExceptions during service creation
update disk failure policy from best _ effort to ignore and add ignore option to cassandra daemon
remove the public modifier from the ripper interface , since it be no longer public .
[ java ] do n ' t filter ip address if it ' s already in use .
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to streamline the job execution process by eliminating unnecessary methods
added ClusterDataCache to the computePartitionAssignment method call in PinotSegmentRebalancer . java to enhance data cache management during segment rebalancer
danielwagnerhall : move container . delete ( ) from containerconfig to containerconfig .
simonstewart : make the defaultselenesecommand parse more robust
added multipleattemptsrule to createglossarytests to make test more stable
updated schema references in ModelResolver to use a constant for component references to improve code readability and maintainability by using a constant for components
replaced the ` deleted ` field with a ` source ` field in ` EntityDeletedEvent ` and added JSON serialization in ` EntityDeletedEvent
added support for " gop " format in FormatConfiguration and updated media parsing in DLNAMediaInfoParser and LibMediaInfoParser to
added a new file TestProfileReturnTypePrinting . java with methods for testing profile return type printing to facilitate testing of return type
refactor ParseConfigUtils to use ReentrantLock for thread - safe access to improve performance and ensure thread safety during configuration updates
added AcquireReleaseColumnsSegmentOperator to manage block acquisition and release in MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper resource management during
danielwagnerhall : remove @ ignore from test
updated return statements in HasAndroidDeviceDetails . java for consistency and clarity to enhance code readability and maintainability by standardizing return statements
replaced ` CheckForNull ` import with ` javax . annotation . CheckForNull ` in ` ProjectStats . java ` and removed redundant
bugfix # 206193 - disable shadow and foreground label on gtk lafs
removed multiple redundant @ Override annotations in CacheControlImpl . java to improve code readability and maintainability
added logic to return a date in the future if a weekly action is set without a weekly date to ensure that scheduled actions do not
refactor upload button functionality to use a menu item instead of a button to improve code readability and maintainability by using a dedicated menu item
refactor multiple Java files related to message evaluation and security metadata handling to improve code organization and maintainability
added a loadMetaData method to MeXBTExchange and RippleExchange classes to load exchange metadata from an input stream to facilit
added a new ` WritableSerializer ` class and integrated it into ` CrawlDbReader ` to enable serialization of ` Writable ` objects in JSON
fix import and remove useless test class . base on a patch by fjodor vershinin .
added a service annotation to the MDNSDiscoveryService class to facilitate the configuration of the MDNS service
added null check for messageItem before scrolling to scrollToPositionWithOffset to avoid potential NullPointerException when messageItem is null
updated ForkJoinPool initialization in TestBPIndexReorderer . java to use a worker thread to improve thread management for concurrent execution
removed assertions related to DATANODE and NAMENODE in RoleCommandOrderTest . java to streamline the test by eliminating unnecessary assertions
added methods to deduplicate and restore local information from table info in PartInfo . java to improve code clarity and ensure data integrity during serialization
standardized spacing in conditional statements across multiple Java files to improve code readability and maintain consistency
added a transformation matrix for logo rendering and enabled texture flipping to correctly position and display the logo sprite in the opposite vertical orientation
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
removed the ` hasPendingEcho ` field and related getter / setter methods in ` EndpointState . java ` , modified echo handling in ` G
add gossiper . getunreachabletokenowners ( ) to check if a endpoint be reachable
[ geosymbolic ] do n ' t change to multiplication in coordmultiplicationReplacer
updated form content type handling in FormAuthenticator and added getter / setter methods in SavedRequest to improve flexibility in handling content type and ensure
replaced the static variable ` _ display ` with ` display ` and added null checks for ` localEnv ` in ` XToolkit .
refactor job and job classes to improve code organization to enhance maintainability and readability of the codebase
replaced ` Object ` with ` ReentrantReadWriteLock ` for thread - safe locking in ` EnvironmentImpl . java ` to improve
added a new test method to verify reading identity providers in another zone using a Zones token to ensure correct handling of identity providers in other zones
updated scheduleJob method to use ExpireJob in ObjectTypeNode . java and added null check for timestamp in PointInTimeTrigger . java to
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
send heartbeat to all broker when rebalance change
add ` ` cairo . detached . mkdir . mode ' ' configuration property ( # 509 )
[ java ] add a test to check if there be a slow follower .
update default label pattern to use auth instead of authors3
refactor dependency handling in DBinaryDescription , DLibraryDescription , and DTestDescription to utilize CxxPlatforms for dependency resolution to
added disposal logic and improved service management in GoogleCloudAPI and GoogleTTSService to ensure proper resource cleanup and prevent memory leaks
camel - 16462 : fixed file consumer when done file be consume with the same name . thanks to martin for the patch
added a configuration option ` reopenReaders ` to ` SolrConfig ` and modified the conditional check in ` SolrCore ` to include it to enhance
add dialect attribute to mapwriter for freeplane release version
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding test cases in ` UpdateTests ` to enhance
added a new method ` dup ` in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor Condition class to an interface and simplify its implementation to improve code readability and maintainability by reducing boilerplate
replaced ` TermQuery ` with ` ConstantScoreQuery ` and updated score calculations in ` TestFacetsCollector . java ` to improve score
removed multiple redundant imports from ConcurrentClassLoadingTest . java to streamline the code by eliminating unnecessary dependencies
added a new method ` providesDirectNearbyUploadPreferences ` to the ` CommonsApplicationModule ` class to provide direct preferences for nearby
added support for " SYSIBM " and " SYSDUMMY1 " modes in the database parser and mode classes to enhance compatibility support
refactor logging statements for consistency and clarity in TraceGatewayEnvironmentPostProcessor and add conditional properties in SamplerAutoConfiguration to enhance code read
fix bug # 44444 - add property to xwpf and workbookproperties ( # 4444 )
updated the condition to check for NaN noData in GeoTiffReader and added a new test for negative infinity noData in GeoTiff
refactor command execution and session state handling in CliDriver . java and SessionState . java to improve code clarity and ensure unique process status
replaced ` httpExecutor ` with ` httpScheduler ` in ` MockRestAdapter . java ` and updated its usage in ` MockRestAdapter
refactor ` selectByRuleIdSet ` method to accept a list of ` List < List < String > > ` instead of a single
added a method ` addExitDescription ` to ` ExitStatus ` and updated ` AbstractJob ` and ` AbstractStep ` to use it to
fix the multiblock render handler not fire on the player . close # 3889
rename the ` columnFamily ` variable to ` columnFamilyColumn ` and update related methods in ` SliceReadCommand . java ` to improve clarity and
removed unnecessary import of Collections and simplified range length calculation in PlotConfiguration . java to improve code readability and maintainability
refactor ` DefaultIOSInput ` to use ` UIAlertController ` instead of ` UIAlertView ` to improve code readability and maintain
replace ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java ` to
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method from ` arrayValue ` to ` values `
added a null check for the service message in AdvServiceTest . java to ensure that the service message is not null before proceeding
updated key handling in MappingMongoConverter to use potentiallyEscapeMapKey instead of potentiallyConvertMapKey to improve clarity and correctness in key
updated logging statements in NearbyMapFragment . java for clarity to improve readability of log output for better debugging
camel - 16462 : camel - core - optimize to reduce memory usage in camel - core
added null check for terms in FuzzyLikeThisQuery and introduced a test for non - existing fields in FuzzyLikeThisQueryTest to
modified the ` writeApplicationsLinks ` method to accept a boolean parameter for a list of columns to enhance the visual representation of application links based on
( chore ) camel - dspace : use identifierservicefactory instead of dspace . getservicebyname ( null , null )
updated the ` assignBytes ` method calls to use ` bw . getLength ( ) ` instead of ` bytes . length ` to ensure consistency in
changed the return type of the getDisplayScript method from abstract to non - abstract and added a return statement to provide a default implementation for the method
replaced direct usage of ` keyToPress ` and ` keyToRelease ` with a single ` sequence ` variable in ` RemoteWebDriver
pdfbox - 4071 : initialize arraylist with the actual size of the list .
added synchronization and null checks for active interfaces in NetworkConfigurationWatcher . java and removed unnecessary null checks in NetworkManagerListenerImpl . java to ensure
refactor HSSFWorkbook to use a new method for retrieving embedded objects and add unit tests for nested objects to improve code readability and
removed the import of Shdr from Shogamp . common . os . elf to eliminate unnecessary dependencies and improve code clarity
updated variable names from ` hostParams ` to ` roleParams ` in ` AmbariManagementControllerImpl . java ` to improve clarity
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of font types
replaced ` GlStateManager . popAttrib ( ) ` with ` GL11 . glPopAttrib ( ) ` in ` ModelHourg
added a private variable ` mCurrentGuideStart ` and updated related logic in ` LiveTvGuideActivity ` and ` ProgramListAdapter ` to
updated method invocation in MockGateway and added new test classes in MainMockTransformer to improve method resolution and enhance testing capabilities for the powermock
added dlopen calls for " libfreetype . so " and " libfontmanager . so " in JREUtils . java to
refactor variable handling in FunctionParser to use a new helper function with a dummy argument to improve code readability and maintainability by reducing
loop safepoint elimination : add guard for protect non - overflowing node .
fix a bug in typemodelingvisitor when the instance of an instance of a class do n ' t exist .
added a new static class ` LocalizedString ` and refactored ` Resolve ` and ` T6758789a ` classes to
added a ` disableClasspathSearch ` property and its getter / setter methods in ` ServerConfig ` , and updated ` DefaultContainer ` to use
made several fields final and replaced System . arraycopy with Arrays . copyOf for better memory management to improve code readability and ensure immutability
updated the default value of ` retries ` from ` 0 ` to ` 2 ` in ` Reference . java ` and adjusted the corresponding test in
added JSON parsing and handling for Settings in TexturePacker . java to ensure proper handling of settings file during packing operations
updated AchievementsFragment to use TextView instead of ProgressTextFormatPattern for uploaded images and images used by the wiki pb to improve
added multiple calls to ` tracer . beginAnnotationProcessingRound ` , ` tracer . endEnter ` , and ` tracer . endAnnotationProcessor `
added ` CategoryInfo ` and ` CategoryInfo ` fields to ` MwQueryPage ` and updated ` CategoryInterface ` to include it to
replaced string literals with string literals for username and password validation in AuthzAuthenticationRequest . java to improve code readability and maintainability by
added accessibility support for the taskbar ' s auto - hiding timeout in TaskbarStashController to enhance user experience by allowing users
added a condition to check for the first character of ' ^ ' in the signature parsing logic to ensure that only one character is processed in the
updated access flags handling in ClassVisitorDriverFromElement . java and added multiple test cases in StubJarTest . java to ensure that generic interface
added null checks for input in IntervalFilter and added null check in LowpassIntervalsSource to enhance robustness by preventing potential NullPointerExceptions
added unit tests for entry set iterators in MapInterfaceTest . java to ensure correct iteration behavior of entries in a map
added a serialVersionUID field to TreeMap class to ensure proper serialization compatibility for the TreeMap class
updated the creation time from milliseconds to milliseconds in ImageData . java to improve accuracy of time representation for image creation
[ singularws ] use f2m locus instead of f2m locus for singularws
added functionality to delete private and public keys for accounts in AccountRemovalJob . java to ensure the account ' s key is removed from the data
fix http header name for proxy - connection
added a check for empty interceptor list in PostJoinMapOperation . java and created a test for it in PostJoinMapOperationTest . java
hhh - 14536 - remove unused code in standarddialect . java
removed the ` spillEnabled ` parameter from several ` BaseHybridHashTable ` , ` BinaryHashTable ` , and ` LongHy
refactor environment variable retrieval to use Optional for better null safety to enhance code readability and maintainability by leveraging Optional for better null
fix issue with defaultactionmapper throw npe if no extension specify
added import statement for SerializableMode in Mockito . java and removed an unnecessary closing brace in PluginSwitch . java to improve code clarity and
added a method to instrument annotation metadata and modified error handling for nullable fields in AbstractBeanDefinition to improve error reporting and ensure proper handling of nullable
added support for isolation level in select statements and introduced a new method to parse the isolation level in select statements to enhance compatibility checks for database operations
added constants for transport mode , transport mode , and HTTP path in HiveConnection . java to improve code readability and maintainability by reducing
added an override method ` isCacheable ` to return false in ` GlobalOrdinalsWithScoreQuery ` to provide a default implementation that
added a new file TestStrangeControl . java that tests StrangeControl functionality to demonstrate the use of the StrangeControl
updated file names from " % s . json " to " % s . jsfile " and " % s . jslib " in Js
added selection start and end variables and corresponding getter / setter methods in ShadowEditText . java to enhance functionality for setting and getting selection positions in
refactor grpc server initialization to use a try - with - resources statement to ensure proper resource management and prevent potential resource leaks
updated the ` use ` method in ` Jooby ` , ` Router ` , and ` JoobyTest ` classes to
added a null check for the fst variable in FreeTextSuggester . java to ensure that a IllegalStateException is thrown when the lookup is not
updated newline handling in ` T4975569 . java ` and improved error verification in ` T6729471 . java ` to
added ABI writer class loading functionality in JavacInMemoryStep . java to ensure proper handling of ABI writer classes during processing
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to the " BooleanMethod
[ pullmessagereservice ] log warn when pull message be shut down
refactor EnergyEndpointer class to improve code organization to enhance maintainability and readability of the code
refactor the handling of displayed columns in ComponentPresetChooserDialog to use an ordered key list instead of an array to improve code readability and
removed unused imports from BazaarRepository , CVSRepository , and IndexDatabase classes to improve code clarity and reduce unnecessary dependencies
camel - google : fix switch / cases indentation see camel - 14540
added a default ` getExportedHeaderStyle ` method to ` CxxLibraryDescription ` and updated references in ` CxxLibraryMetadataFactory `
deleted the files Constants . java and DistanceUtils . java to the files are no longer needed for the project
refactor key splitting logic in RandomPartitioner . java to use indexOf for improved readability to enhance code clarity and maintainability by
do n ' t initialize fallback linker if there be no fallback annotation
added a new test method ` testCreateInline ` in ` RoleBindingTest . java ` and refactored the ` create ` method in
added logging statements to UaaSessionCookieConfig for session cookie configuration to enhance visibility into session configuration process
updated the calculation of FILE _ NAME _ PREFIX to use the current calendar ' s day of the year instead of the log period to ensure accurate
update condition from ' o ' to ' v ' in ObservableBlockingSubscribe . java to ensure correct handling of blocking observer state
added error handling for invalid options in JavapTask . java and created a new class T8033711 . java for testing to
replaced instances of ` Collectors . toList ( ) ` with ` toList ( ) ` in multiple Java files to simplify the code by removing unnecessary
updated logging level from error to warn in TaskDriver . java and added shutdown check in TaskDriver . java to improve log clarity and handle
[ hotfix ] [ network ] add support for tier storage in singleinputgate
refactor code to use a new method ` isNotSuccessStatus ` for checking response status to improve code readability and maintainability by centralizing
added GL20 configuration to Cuboc and modified LwjglApplication initialization to enable OpenGL support for the Cubocy application
remove unnecessary check for voidtype in method . getreturntype ( )
replaced DefaultSourcePathResolver and SourcePathResolver imports with AddToRuleKey and HumanReadableException in OutputMacroExpander . java
fix logexceptionsqltest . assertnojobslefteventually ( ) and simpletestinclustersupport . assertnolightjobslefteventually
added a condition to exclude the " \ build \ " character in the file path validation to ensure that build files are not part of the build
update instructorfeedbackresponsecomment and instructorsessionresultsbundle to use string key instead of string
removed unnecessary whitespace in mmm Container . java to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke . java with a class TestEscapeThroughInvoke that tests object escaping to demonstrate object equality
replaced direct stream reading with Apache Commons IO methods in FilePreviewService to improve code readability and maintainability by using Apache Commons
added interceptor handling in ConnectionPool and improved error logging in DataSourceProxy and TestSlowQueryReport to enhance connection management and provide clearer error
changed catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching a broader range of exceptions
added eviction checks and test methods in LruBlockCache and TestLruBlockCache classes , along with a new test for current size to
removed unnecessary check for empty taskCount in RecentsView . java to simplify code by eliminating unnecessary checks
added instance configuration change listener for HelixBrokerStarter and increased sleep duration in HelixServerStarter to improve configuration handling and allow more
added new ` CoinmateStatic ` and ` CoinmateMetadataServiceRaw ` classes and updated ` CoinmateExchange ` to retrieve
improve error message when system - path reference to project base directory
pdfbox - 4892 : use the same key for each cosobject , a suggest by valerybokov
add ptransform . setdisplaydata ( list < itemspec < ? > > ) to allow customization of displaydata in ptransform .
replaced instances of ` new DefaultSubject ( Truth . THROW _ ASSERTION _ ERROR , null ) ` with ` assertThat
added a security property to disable certificate path algorithms in JSSEServerJSSE to enhance security by disabling algorithms for certificate path validation
added checks for subcommands and subcommand groups in OptionData . java to ensure that only valid subcommand groups are accepted to improve error handling and
updated module - info . java files for mmm and ppp modules to improve module documentation clarity and maintainability
added error handling in ensureConnection method and improved error handling in IOSImplementation . java to ensure proper resource management and handle potential IO exceptions
set sCheckingEvents to true in LauncherInstrumentation . java and set mFinished in LogEventChecker . java to ensure proper cleanup of
refactor exception handling and add methods to close writers and records in FileSinkOperator . java to improve error logging and ensure proper resource management during
added diagnostic output to the task call in SchemaGenerator . java to enhance visibility into diagnostic information during task execution
replaced instances of ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by
refactor DataSourceMonitorTests to improve test coverage to enhance reliability of data source monitoring functionality
added a new set ` loadedResourcePaths ` to track loaded resource paths before scanning them to improve performance by avoiding redundant scanning of resource paths
updated the handling of null test instances and improved error logging in TestServiceUtil . java to enhance robustness by providing clearer error messages
added null check for HttpResponse and updated response handling logic in RoutingInBoundHandler . java to ensure proper handling of 404s and improve response processing
added natIp field to EkeyConfiguration and updated logging in EkeyUdpPacketReceiver to include ip address to enhance logging clarity by
updated imports from ` io . netty . buffer ` to ` ArrowByteBufAllocator ` across multiple files to align with the latest version of
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added validation for header and body in HttpParser in HttpConnection . java and created a new test case in RFC2616BaseTest . java
refactor the subscription handling in MultiTimeout to use AtomicReference for upstream and requested initial states to improve clarity and ensure proper initialization of subscription
add compaction limit to leveledmanifest . getOverlappingstarvedsstable ( )
added a test annotation to the TestOrcTimezone1 class to facilitate testing of the OrcTimezone1 functionality
added a new method ` findMatch ` and introduced ` enabledMetricsSubstrings ` and ` enabledTimersSubstrings ` to handle string matching
added error handling for JSON processing in PinotSegmentRestletResource and simplified return statements in TraceContext and TraceContextTest to improve robustness
refactor JTable renderer retrieval to handle null column classes and add a new Test6888156 class for testing to improve robustness of
added a check for the existence of the shell directory before adding it to the command line arguments to ensure that the shell command is only used when
updated the method call from ` deleteWithoutSubscriptions ( 10 ) ` to ` deleteWithoutSubscriptions ( 1 ) ` in ` DatabaseCleaningService
replaced ` List ` with ` Set ` in ` MockitoExtension ` and added a new test in ` JunitJupiterTest
refactor FieldMonitor class to improve code readability to enhance maintainability and facilitate future updates
replaced deleteFilesAfterClose ( ) with transactionDisable ( ) and fileMmapEnableIfSupported ( ) in BTreeMapTest .
modified the iterator initialization in SortedIntList . java and added a new test class SortedIntListTest . java to ensure proper initialization of the
added unregistering of the object name in DefaultRemoteProxy and modified exception handling in JMXHelper to improve resource management and enhance error handling in JMX
updated the default writebuffer size from 4MB to 64MB in RocksDB configuration to optimize memory usage for on - disk files
simplified the constructor call by removing unnecessary parameters to improve code readability and maintainability
replaced ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to improve clarity by using a more descriptive
[ samza ] remove pipelined pipeline json graph from config
update demo to use mouseinput . button _ left instead of vector3f . zero
refactor LoopRotateBadNodeBudget class to improve code readability to enhance maintainability and facilitate future updates
added TypeInformation < ? > parameter to the convertToMongoType methods across multiple classes to enhance type conversion handling for nested polymorphism in MongoDB
simplify inputbox . updatelinkedgeo ( ) and inputboxrenderer . updatelinkedgeo ( ) and inputbox . updatet
simonstewart : update copyright year , add unit test for sendkeytoactiveloadelement
added methods to calculate a scaled instance of a BufferedImage based on target dimensions to enhance image scaling capabilities by allowing non - negative target sizes
removed duplicate extendArgumentCheck ( ) and extendWrapStore ( engine ) methods from DBMaker . java to streamline code by eliminating
added updateshiftstatenow ( ) and updateshiftstatenow ( ) in anysoftkeyboard . java
removed the handling of the " DETECTED _ ACTIVITY " constant and related methods in multiple classes to streamline the code by elimin
updated import statements to reference the correct package for ExtensionConfig from the extensions package to the protocol package to ensure the correct package structure for the WebSocket
removed the import of Buildable in AaptPackageResources . java to streamline dependencies by eliminating unnecessary dependencies
added comments to multiple method calls in CodeException , ConstantInvokeDynamic , ConstantMethodHandle , ConstantMethodType , and ConstantMethodType classes to clar
updated the error message in WebSocketUpgradeHandler to include the status code to provide more context about the invalid upgrade protocol
updated the assignment of blockMode in P11Cipher . java to correct syntax to improve code readability and maintainability
refactor Mockito class for improved readability to enhance maintainability and facilitate future development
removed redundant code lines in the Merge . java file to streamline the code structure for better readability and maintainability
deprecated the ` getConversationID ( ) ` method in ` HttpContentResponse ` , ` HttpRequest ` , ` HttpResponse ` , and ` Response
use de . dfki . lt . unitselection . featureprocessors instead of com . sun . speech . freetts . phoneset
refactor ` stripQuotes ` method in ` BaseSemanticAnalyzer ` and ` PartitionSpec ` to use ` PlanUtils ` instead of `
refactored rendering handling in DLNAResource and Request classes to improve clarity and functionality to enhance code readability and maintainability by
added remote artifact repositories to the DefaultPluginManager to ensure that all remote artifact repositories are included in the resolution group
camel - 15836 : camel - cxfrsproducer / cxf - rsproducer / cxfproducer / cxf
refactor PhysicsClient to improve connection handling to enhance performance and reliability of Physics interactions
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable the test due to frequent failures
added a new file initialization in ZipFile . java to ensure the file is created from the specified name
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the method should no longer be used in
change channel . uid to nonnullbydefault so it can be initialize by default .
added StackTraceUtils class and modified GenericDAOImpl , ForumServiceImpl , and ForumServiceImpl to utilize it for stack trace logging
removed the @ Test annotation from FormLoginIntegrationTests . java to clean up the test code and improve readability
fix unparse function call with parentheses ( # 1193 )
updated GET _ CONFIGS _ SELECTED _ MORE _ THAN _ ONCE _ QUERY to use cluster _ name and cluster _ id
rename ` supressWarnings ` to ` suppressWarnings ` in ` UnsafeAutomaticSubstitutionProcessor . java ` and add support for ` Innoc
updated JsonTreeReader to handle JSON parsing more accurately to ensure proper error handling for unexpected JSON elements
added a command line option ` withDashArguments ` to ` TestCommand ` and a corresponding test in ` ExternalTestRunnerIntegrationTest ` to
added dedup and indexSolr methods to SolrDeleteDuplicates and SolrIndexer classes to enable deduplication and indexing of Solr files with specified segments
[ hotfix ] [ doc ] add support for flink planner in streamsql example
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure the database is cleared before running tests
updated progress handling in Progress . java and added disposal logic in RSSReader . java to improve responsiveness and ensure proper resource management during
added a check to ensure the parent file exists before proceeding to avoid potential errors when the parent file does not exist
added utility methods for writing and closing POIDocument objects in IOUtils . java to enhance functionality for writing and closing POIDocument objects
updated print statements to include carriage return characters in runOptions and exportClassPath to ensure consistent output formatting across different operating systems
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for ` getDotsPerPoint `
modified the ` apply ` method in ` CustomQueryFilterFactory ` to handle generic user search queries and updated the transport port in ` TestLdap
added support for default port configuration in NettyHttpServer , DefaultRouter , Router , and FilteredRouter classes to enhance routing functionality by allowing
updated SnmpTargetHandler to update ThingStatus based on handler initialization and refactored test methods to improve code clarity and maintainability by
add permission check for submit session in instructor ' s list in instructor feedback edit page
added @ Incubating and @ Deprecated annotations to AvailableSettings . java to indicate that these classes are outdated and should not be used in future
refactor path extraction logic in FileResolverImpl . java and add WarFileResolverTest . java to improve handling of jar files and ensure
updated the string concatenation for newFlushedSize in DocumentsWriterPerThread . java to include docstores to improve clarity of the output
updated the method call from ` func _ 149739 _ a ( ) ` to ` getUnlocalizedName ( ) ` in the output
updated conditional checks from ` stripWhitespaceX ` and ` stripWhitespaceY ` to ` stripWhitespaceY ` in ` ImageProcessor . java `
increased the number of locks from 1 , 000 , 000 to 1000 in FeedRefreshUpdater . java to improve thread management by allowing more
updated the ` MetadataIndexNode . deserializeFrom ` method to include an ` exactSearch ` parameter in ` TsFileSequenceReader . java `
[ hotfix ] [ table - common ] fix checkstyle violation in csvsaveservice
added preferred size adjustment for the pane in NavigationShareTab . java to improve UI layout by adjusting the pane ' s size based on the
replaced OffsetAttribute with a State object in BeiderMorseFilter and added a custom attribute test in TestBeiderMorseFilter to
refactor UpnpAudioSinkReg , UpnpHandler , UpnpRendererHandler , UpnpServerHandler , and UpnpEntryQueue classes
fix warp lens not be able to set collided at the end .
added new test methods for JSON serialization and deserialization in JsonTest . java to enhance test coverage and ensure proper exception handling during JSON serialization
refactor MutableContextDataSupplier class to improve code organization to enhance maintainability and readability of the code
change catch block from Exception to Throwable and log a warning instead of throwing a SolrException to improve error handling and provide a more informative logging
updated KubernetesMockServer to include HTTPS as a parameter to enhance security by allowing HTTPS connections
add a stamp to the foreigncallnode so that it do n ' t interfere with the default stamp .
updated HTTP response handling in DefaultServlet and DefaultServletTest to include " POST , OPTIONS " and " GET , OK _ 200 , OPTIONS "
tika - 1357 -- use locale . us for decimalformat in tika - tika - tika - tika - t
replaced instances of ` throw new SolrException ( 400 , 403 ) ` with ` rsp . setException ( ) ` in ` ShowFileRequestHandler
added try - catch functionality to handle exceptions in the Reflector class to improve error handling and ensure proper exception management during reflection operations
added a ` clamp ` method to the ` Vector ` class and implemented its logic in the ` Vector2 ` class to enable clamping values
added client scope handling in ChainedTokenGranter . java and updated authentication creation in ChainedTokenGranter . java to enhance
refactor BC _ instanceof class for improved clarity to enhance maintainability and readability of the code
replaced direct call to setSaveFlags with a logger instance in EditorBottomSheetBehavior . java to improve code readability and maintainability by
updated test imports and annotations in UaaUrlUtilsTest . java to use JUnit 5 conventions to enhance test readability and maintainability
hhh - 14619 - fix compilation error in native - query
added a static WeakHashMap for storing font status in SunLayoutEngine . java to improve performance by reducing the number of thread - safe access
use intarraylist instead of intbigarray in typedset . size ( )
danielwagnerhall : fix link to the session id for the remote driver .
refactor BrokerRequestUtils to improve code readability to enhance maintainability and facilitate future updates
refactor instances handling in InjectorBuilderImpl to use a single instanceMap instead of a single instance to improve code readability and maintainability by
replaced calls to ` getAbsolutePathToBuildFile ` with ` getBasePath ( ) ` in ` BuildTargetToRawTargetNodeTransformer . java
added null check before parsing a value in EchoMessage . java to avoid potential NullPointerException when ' val ' is null
fix a memory leak in jabber when jabber be disable .
updated the DEFAULT _ LOAD _ FACTOR value from 0.67F to 0.67 to correct the precision of the load factor in Int
added ` getAllDataTypePhysicalVariations ` method to ` VectorizationContext ` , ` Vectorizer ` , and ` VectorPTFDesc `
updated package declarations for HtmlAssetTranslator and StringsResourceTranslator from ` com . google . zxing ` to ` com . google . z
refactor conditional checks for overview actions in OverviewState . java to improve code readability and maintainability by consolidating conditional logic
added an import statement for javax . persistence . Entity and annotated BaseActivityEventEntity with @ Entity annotation to enable entity management in BaseActivityEvent
added tracing functionality to the NavBarSwipeInteractionHandler , TouchInteractionService , TouchInteractionService , and TraceHelper classes to enhance debugging
added a new file ` InvalidOptions . java ` to demonstrate the use of Java ' s ` - h ` and ` -
added a check to log an error when the number of supported displays differs from oldInfo and oldInfo to improve error handling for incorrect display state
refactor code to move the method from OAuth20UsernamePasswordAuthenticator to OAuth20Utils for better organization to improve code readability and maintainability
updated the ` _ unwrapServletException ` field to true in ` ErrorPageErrorHandler . java ` and set it to false in ` AsyncContextTest . java ` to ensure proper handling of servlet exceptions during asynchronous processing
added logic to set the status of the ShortcutInfo to default if a specific condition is met to ensure that the ShortcutInfo is updated
camel - 14263 : fixed the issue of create a queue with size = 1000 .
added batch update start and end to make sure we do n ' t call batchupdate
added HttpClient configuration to ThirdEyeApplication to enable dynamic HTTP client configuration in the application
added a getSort method to JpaJobPersistenceImpl and introduced a private Sort field in JobInstanceFetchRequest to enable sorting functionality for job instances
updated the cancelCryptoFacilitiesOrder method to return an empty currency pair instead of throwing an exception to improve error handling and provide clearer feedback
ggb - 1358 hide the keyboard when the web be click
use native function handle for memcpy ( ) in native function interface .
reformatted code in BindLdapAuthenticationHandler . java for consistency to improve readability and maintainability of the code
ggb - 1885 add option to disable tooltip in mode toggle menu
updated DefaultDateTypeAdapter to use DateFormat . getDateTimeInstance ( ) instead of DateFormat . DEFAULT and added a timeStyle parameter to GsonBuilder to
updated playerSet string formatting to include parentheses instead of a space to improve readability and maintainability of the code
added a check for empty lists in the List class to return a List < Z > if it is empty to ensure proper handling of empty lists
added exception handling for CommandException in ParametricCallable . java to ensure proper handling of CommandException in command execution
modified the ` getLikeExpression ` method to accept a boolean parameter for conditional logic to enhance flexibility in expression handling based on the ` is
added start ( ) and stop ( ) methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl classes to provide methods for starting and stopping streams
updated the ` runChild ` method in ` LuceneTestCase ` to set all available locales for the ` runChild ` method to ensure
refactor multiple SSL - related classes to improve code organization to enhance maintainability and readability of the codebase
refactor context handler initialization into a separate method for clarity to improve code readability and maintainability by reducing duplication
camel - 9641 : camel - osgi - blueprint - add support for routebuilder reference in camel - osgi - blueprint
nifi - 1348 : use contains ( ) instead of substring ( ) in testexecutestreamcommand . testexecutestreamerror ( )
refactor ` returnTypeSubstitutable ` method to accept a ` Warner ` parameter and streamline type comparison logic to improve code readability
added throttleType enum and modified processing logic in TestExecutor to allow customizable throttle behavior for improved test performance
replaced pixel assignment with rgb assignment in ColorBleedEffect . java and added conditional logic in SpriteBatch . java to streamline
refactor annotations and elements in Annotation and AnnotatedElement classes to improve code organization and maintainability
added a new interface ` Model ` and updated ` Sheet ` , ` Workbook ` , and ` Workbook ` classes to implement it to
( chore ) camel - cxf : use constant instead of string literal .
added a boolean flag ` clearEntityManager ` to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to control the clearing
added null checks for ShortcutInfo before adding a shortcut and improved toast handling in InstallShortcutReceiver , Launcher , LauncherModel ,
updated TwoDimensionalCollectionValuedMap instantiation to include a new parameter to enable multiple instances of TwoDimensionalCollectionValuedMap
updated exchange specifications from " btc - e " to " Wex " and changed exchange name from " BTC - e " to " W
added null checks before processing column readers and tree readers in OrcEncodedDataConsumer and EncodedTreeReaderFactory to enhance code stability by avoiding null pointer exceptions
added null check for files in SegmentInfos and implemented a test for opening a reader after deleting a directory to ensure robust error handling when no files
updated search parameter type from " dt . lower - ord " to " dt . lower " in HSearchSortHelperImpl . java and modified
refactor the return statement to use a temporary variable for percentValue to improve code readability and handle negative percent values gracefully
updated range checks from ` < 1 ` to ` < = 0 ` in ` RangeInputStream . java ` and ` RangeReader . java `
camel - 16451 : camel - core - add option to print duration if route be not empty
update method parameters and calculations for playback positions in HlsChunkSource . java and HlsPlaylistTracker . java to improve clarity and accuracy of position
updated package structure and class hierarchy for NumericRangeFilterBuilderTestCase and NumericRangeQueryBuilderTestCase to improve organization and clarity of test classes
added a new ` StatefulOperator2 ` class and updated ` OutputHandler ` to set the next input in ` OutputHandler . java `
removed null check before setting bitmap shader shift in Area and Line classes to simplify code and improve readability by eliminating unnecessary null check
added dbExists method to Blockchain and updated related imports in BlockchainTest to improve database existence checks and enhance test coverage for blockchain functionality
trim whitespace from the group value in SQLPlusSupport . java to ensure that the value is trimmed before processing
fix http / 1.1 / apr / apr / apr / apr / apr / apr / 1.0
ggb - 1885 fix regression in drag - and - drop
add controller health check to pinot - controller ( # 4395 )
set visibility of sharedAvatars to GONE in LocalFileListAdapter to improve user experience by hiding the shared avatars view
[ mebis ] remove unused ` @ clientbundle ` annotation in mebisresources
updated conditional checks in BurstSendReceiveUdpPing , ReceiveSendUdpPong , and SendReceiveUdpPing classes to use
added logging level checks in LogInterceptor . java to ensure proper execution of command based on log level
replaced CountDownLatch usage with assertWaitUntil for span presence verification to improve code readability and maintainability by using assertWaitUntil for
refactored QueryParser to use Locale . getDefault ( ) for locale initialization and added getter / setter methods to improve code readability and maintain
replaced ` Arrays . asList ` with ` Collections . singletonList ` and changed ` HashSet ` to ` LinkedHashSet ` in ` EntryCustomizationDialog
jbrules - 2892 : fix compile error in jbrules - manners
added a new class ` OCSPUnauthorized ` and modified ` OCSPResponse ` handling in ` PKIXRevocationChecker . java ` , and
replaced a fixed sleep duration with a dynamic check for server state to ensure that the server is already failed before proceeding with a fixed delay
added a new constant for open connection count and updated related methods in SourceCounter and AvroSource classes to introduce connection count management to enhance the
make executionstrategy . execute ( list < field > ) public and add a builder . fields ( list < fielddefinition > ) to the builder
refactor ` createDefaultJavaPackageFinder ` method to return a ` Set < String > ` instead of a ` ImmutableSet < String > ` to
replaced ` OutputWriter ` with ` PrintWriter ` in ` ScriptExecutable . java ` to improve performance by utilizing ` PrintWriter ` for better
[ hotfix ] [ test ] fix filesourcetextlinesitcase failure
added support for handling DataTable instances in JRubyStepDefinition to enable processing of DataTable instances in JRuby execution
updated visibility settings and improved API request parameters in ApacheHttpClientMediaWikiApi . java and SearchImagesRenderer . java to enhance code clarity
refactor ReadSentimentDataset class to improve code readability to enhance maintainability and facilitate future updates
updated error handling in FormulaParser to include a more descriptive error message to improve clarity of error messages for better debugging
added getter and setter for the bind address in WebSocketClient . java and modified visibility of the WebSocketFuture class in WebSocketClient . java to enhance
[ java ] cleanup archive and archive directory in consensusmoduleharness . close ( ) .
refactor width and height calculations in WidgetGroup to streamline size management to improve code readability and maintainability by reducing redundancy
changed the type of ` sessionFixationAttribute ` from ` Boolean . equals ( ) ` to ` Boolean . valueOf ( ) ` to improve
modified the switch statement in LALogicLinesFragment . java to include an edgeOption parameter for starting the one channelLA to enhance functionality
danielwagnerhall : add ability to increment and increment the backoff in the chrome driver .
added support for URI template handling in TraceExchangeFilterFunction and updated ClientResponseWrapper instantiation to include method and route parameters to enhance flexibility in handling
fix potential nullpointerexception in precompactedrow . removedeleted ( )
updated bitwise operations in ICC _ Profile . java and ColorConvertOp . java , and added a new test class InvalidRenderIntentTest .
add ` ` check ' ' and ` ` check ' ' option to contribution question
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
[ hotfix ] [ kafka ] fix findbugs warning in kafkaproducer
added PGConnection to the connection initialization in PooledConnectionImpl . java and created a test for it in BaseDataSourceTest . java to enhance
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated log level from warn to info for missing token encryption secret and changed log level from warn to trace to improve logging clarity and provide more
removed the @ Deprecated annotation from Hazelcast . java to indicate that the class is outdated and should not be used in future development
ambari - 20650 . ambari server should send kerberos update event when enable kerberos ( dlysnichenko )
refactor NamedListCodec to improve iterator handling and add support for Iterable types to enhance type safety and improve code clarity in handling NamedList
add null check to assigncompletelylostpartitions to avoid npe
added a schema inclusion rule to the ApiExample class to allow access to the schema from other packages
updated the expected value in the mean and var assertions from 3.0 to 7.0 to ensure the test accurately reflects the expected
added coordinate sequence validation for polygon ring creation in SDO . java and corresponding unit tests in SDOCreateTest . java to ensure proper handling
added methods getBaseName ( ) and getDimensionCount ( ) to the ConstantPool class to provide access to the base name and dimension count from the
added a method ` setDebugEvaluationOutputForNextEval ` to multiple formula evaluator classes and implemented it in ` SheetUtil ` and ` X
test : migrate testmodule , refactoringtest , variabletest , variabletest to junit 5
removed the ' false ' parameter from the ExoPlayerProfile initialization in LegacyMediaManager . java and modified the condition in PlaybackController .
added a return statement to the DynamicStyleBar class to ensure the method returns early when certain conditions are met
added SLF4J logging statements to Utils . java for database property management to improve traceability and debugging of the repl dump process
refactor ReactiveAuthorizationManager to improve authorization handling to enhance security and maintainability of the authorization process
updated conditional check to include boolean type in MethodEmitter . java to ensure compatibility with both object and boolean types
truffle : rename llvmobjectnuller to llvmaddressnuller and add llvmbitcodefunctionvisitor .
refactor multiple Java classes to improve code organization and readability to enhance maintainability and facilitate future development
add a unit test for the caffeine cache default configuration
added a method ` calculateBoundingBox ` to calculate the bounding box of a ` Mesh ` based on the number of vertices to provide a bounding box
added a TargetHashFunction enum and updated hashing logic in TargetsCommand . java to allow users to specify the use of murmur hash3
refactor DefaultConfigurationProperties to improve code readability to enhance maintainability and facilitate future development
added high light color settings to ListViewMultiChartActivity and modified highlight drawing logic in BarChart to enhance visual consistency and improve highlighting functionality
removed the mapping of tmpPg to sgPathPlanMap in ClusterPlanRouter . java to streamline the process by eliminating unnecessary mapping
[ hotfix ] [ test ] fix infinispan - infinispan - remote - producer integration test
added file locking functionality in MavenArtifactFetcher and modified test assertions in MavenDependencyResolver to improve thread safety and ensure proper resource management during artifact fetching
added conditional rendering for the fragment shader in SpriteBatch . java to ensure the shader is only applied when GL _ ES is enabled
changed the return type of ` getServers ( ) ` and ` getServers ( ) ` from ` SortedSet ` to ` Set ` in `
added a try - catch block to load the JspPage class and changed log level from warn to debug in TagLibConfiguration . java to improve
updated CustomAnalyzer and TestCustomAnalyzer to use LowerCaseFilter for version handling and added a test for version - aware token filtering to ensure compatibility
added a test for reading and retrieving package archive information in ShadowPackageManagerTest to ensure correct retrieval of package archive information from the package manager
replaced direct method invocation with MethodUtil . invoke across multiple classes to enhance security by ensuring package access during method invocation
added new import statements for ProjectConfigurationStartEvent , TaskStartEvent , and TaskStartEvent , and implemented progress update functionality in Main . java
removed synchronization block from AndroidWebDriver . java to improve performance by eliminating unnecessary synchronization
make initializationfailtimeout configurable in hikariconfig . getinitializationfailtimeout ( )
removed the ` timeOut ` parameter from the ` getResult ( ) ` method and added an error method for HTTP responses to simplify method signature and
changed the ` isNative ` field to be transient and modified its usage in the ` addEntry ` method to ensure that the ` isNative
corrected spacing in error message in CEntryPointCallStubMethod . java to improve code readability and maintain consistency
rename ruleenablehandler to ruleenablementactionhandler for clarity
updated variable declarations in TagSupport . java to improve clarity and consistency to enhance code readability and maintainability
updated debug logging in AuthzAuthenticationFilter and added debug statements in AuthzAuthenticationManager to improve clarity of authentication process and enhance debugging information
updated method names from ` getBasicSourceOptions ( ) ` and ` getFullSourceOptions ( ) ` to ` getBasicSinkOptions ( ) ` and
added null check for repository repository and improved error handling in UsersPanel . java to enhance robustness by handling cases where the registrant repository
added support for " . otf " and " . OTF " formats in font name checks to enhance functionality by supporting additional font formats
refactor type matching logic in AnnotationMatcher . java for improved clarity and correctness to enhance readability and maintainability of the code
change the message from " OFF " to " SEVERE " in Grep . java to accurately reflect the severity of the application
added a check for debug level before logging debug messages in FaultTolerantChunkProcessor . java to improve performance by avoiding unnecessary string concatenation
replaced the initialization of the ` includes ` list with a ` excludes ` list and added checks for empty ` includes ` and ` excludes `
added checks to ensure openFolder is not null and can move to default screen on home intent to enhance user experience by allowing navigation to the default
updated maximum bitrate from " 110 " to " 30 " in PMS . java to increase the maximum bitrate for better user experience
replaced the method call to ` getOptions ( ) ` with a direct call to ` optionsMap . values ( ) ` to simplify the code
trim whitespace from the description returned in MutableDatabaseProperty . java to ensure that the returned description is trimmed before further processing
updated the filename assignment in XOMParserTest . java to ensure the correct file path is used for the output file
remove process . pid from error message in processbesunoderunner
added ` getLoadedMusic ( ) ` and ` getLoadedSound ( ) ` methods to ` MusicLoader ` and ` Sound
removed unnecessary imports and added type casting in OnBeanCondition . java to streamline code and improve type safety
added ScreenRecord annotations to RequestPinItemTest . java to facilitate screen recording during test execution
set the lrPauseButton to false if it is not null in CPUFeature and MemoryFeature classes to ensure the lrPauseButton is selected only
refactor preferences to use a dedicated ` mAccountsPrefCategory ` variable and introduce a new ` createAddAccountPreference ` method to improve
do n ' t send ` ` available ' ' presence to the packet writer if it ' s unavailable .
modified the initialization of StringBuilder to handle cases where utflen is less than Integer . MAX _ VALUE to ensure proper initialization of StringBuilder based on the
added property values to WebEndpointTestApplication and ReactiveWebApplicationContextRunner in WebEndpointsAutoConfigurationIntegrationTests . java to disable statistics export functionality for
refactor InterruptedException class to improve code readability to enhance maintainability and facilitate future updates
refactor ServiceTicket class to improve code organization to enhance maintainability and readability of the codebase
refactor connection check logic to use a boolean variable for SSL success to improve code readability and maintainability by reducing redundancy
refactor the conversion logic in ArgumentArrayMessageMapper to check if the target type is a Map before proceeding to improve code clarity and
updated conditional checks for index objects in SolrServiceCommunityCollectionItemFilterPlugin . java and changed collection type in XmlWorkflowFactoryTest . java
replaced the addition of AuthenticatorActivity to the exemptOfPasscodeActivites list with a direct intent setting to improve code readability and
refactor ( template ) : remove deprecate annotation in patternparameterconfigurator
changed the return type of ` beginDraggingWidget ` from void to boolean and added a null check for ` image . getDrawable (
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check for root and collect components in DynamicStyle . java to improve robustness by preventing null pointer exceptions
add a new feature to testclassifier so that it do n ' t overwrite the confusion matrix .
change variable name from lastsampleinerror to lastsampleok
added unit tests for ` getConnectedDevices ` and ` getConnectionState ` methods in ` ShadowBluetoothHeadsetTest ` to ensure correct handling
corrected the spelling of " # autowire " to " # autowired " in PropertyBindingSupportTest . java and Property
added a new constant ` FINALIZE _ METHOD ` and modified the logic for loading methods in ` ResultObjectProxy . java ` to enhance
added null checks for Counters objects in IntegrationTestBigLinkedList . java to ensure that generator and write verification cannot be performed due to ins
add support forFERRING _ OBJECTS command in jdwp . getinstanceinfo ( ) .
updated the parameter name from ' service ' to ' serviceId ' in SamlIdPServicesManagerRegisteredServiceLocator . java to improve clarity
added a null check for the activity before running the UI thread to avoid potential NullPointerExceptions when the activity is not initialized
corrected the spelling of " LOGGER " to " logger " across multiple files to improve code readability and maintain consistency in naming conventions
added a ` _ stringType ` field and its getter / setter methods in ` DatabaseAdaptor ` , and updated ` JDBCSessionDataStore ` to
updated test cases in UIMAUpdateRequestProcessorTest to use " suggested _ category : * " instead of " language : english " to
refactor thread name management by introducing ` updateThreadName ( ) ` and ` resetThreadName ( ) ` methods across multiple classes to
refactor TaskletAdapter class to improve code readability to enhance maintainability and facilitate future development
added a new test method ` testDROOLS2200 ` to ` DMNRuntimeTest ` and modified ` DecisionTableImpl `
fix ( gui ) : make sure the texture map creation finish before move on
added tooltip text to the showCGCP checkbox in RocketPanel . java to improve user interface clarity by providing context - sensitive information
replaced ` getTypes ( ) . add ( e ) ` and ` add ( i ) ` methods with ` addType ( e ) ` and
add ` ` text ' ' and ` ` description ' ' to the hot reload / restart action
ggb - 2892 : use hasspreadsheetlabel ( ) instead of getlabelsimple ( )
changed the type of the BRIGHTNESS _ FACTOR constant from intValue ( ) to doubleValue ( ) to ensure the constant value is correctly
[ sscm ] fix parsing of revision number in sscm history .
added a new parameter ` isAdmin ` to the ` createUser ` method and implemented listUsers ( ) ` and ` listUsers ( ) ` methods
added null checks for indexedWriteMethod and writeMethod in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor classes , and created a new test
updated logging statements in DynatraceExporterV2 to use placeholder syntax to improve code readability and maintainability
updated method parameter names from ' runnable ' to ' task ' in Context . java and modified method signatures in Response . java to improve clarity
bump common for backwards compatibility
[ hotfix ] [ test ] fix wrong assertion in lifecycleutilstest
added validation for contract types and refactored contract creation logic in multiple files to improve contract validation and ensure proper handling of smart contracts
added package - info . java files for various packages in the com . ibm . dtfj package to improve organization and clarify package
refactor the ` add ` method in ` DocumentsWriterDeleteQueue ` to use a loop for adding a new node to improve performance by
added a check to ignore duplicate JavaFileObject instances in JavadocTool . java and updated command line arguments in T7091528 . java to
change the default value of STRIP _ IPV6 from " true " to " false " and adjust substring logic to ensure the host is
added a new parameter ` addNewUserParameters ` to the ` LoginServerTokenEndpointFilter ` class and modified the login info handling to include user
added a new constant C _ KEY and updated language comparison logic in LanguageFactory and LanguageFactory classes to support C _ KEY alongside the
replaced the direct instantiation of ` MoreExecutors ` with a new method ` newSingleThreadExecutor ( ) ` in ` BuckEvent
added cache control headers and expiration handling in LoginService , FormAuthenticator , and ConstraintTest classes to enhance security and ensure proper handling of cache requests
improve error message in voicemanager to include error message
updated HSSFTests class to use TestAreaReference , TestCellReference , TestRKAddress , TestRangeAddress , and TestSheet
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
refactor output handling in TestCommand . java to check for null output before retrieving its absolute path to improve robustness by avoiding potential NullPointerException
added ExternalResourceControlPriority imports and set access controller settings in Java2DRenderer . java to ensure proper access control during the resolution process
added a try - catch block around the draw method in TestTriggerCoverage . java to handle ArrayIndexOutOfBoundsException during graphics drawing to ensure that the build
added exception handling and refactored CPU time testing in GetInternalThreads . java to improve thread management and enhance error handling for CPU time validation
added a check for empty comments before verifying the last whitespace in TabsAndIndentsVisitor . java to ensure that comments are only processed
updated assertions in TestTriggerIntegration to use greater than 100 instead of greater than 5.0 to improve test accuracy by ensuring values are greater than
updated string comparison to be case - insensitive in DatabaseChangeLog , RanChangeSet , AlreadyRanChangeSetFilter , NotRanChangeSetFilter
added a method ` getString ( String key , String defaultValue ) ` to the ` ShadowBundle ` class to return a default string value when the
added support for military date and time formatting in TweetActivity to ensure consistent date and time display across different locales
added a check for empty connections in StandardProcessSession . java to ensure that an empty list is returned when no connections are available
updated keyboard visibility logic and refactored focus request logic in DetailFragment . java to improve code readability and maintainability by encapsulating focus
do n ' t hard - coded ` ` file : / / ' ' to ` ` file : / / ' ' in classpath
make sure solve ( ) be call in a synchronized block to avoid memory leak .
added import statement for org . springframework . integration . core . Message in GenericMessage . java to enable the use of the Message class from
refactor SQL query construction in PostgresConnector . java to use a join method in TaskAttempt . java to improve code readability and maintain
updated file filter handling in AquaFileChooserUI to ensure the selected file filter is only set if it does not already exist to improve
fix synchronization issue in p2ptransportmanager . getextension ( )
replaced ` toString ( ) ` method with a return statement in ` ArrayPtg ` and added a new test method in ` TestArray
updated import statements in PGtokenizerTest . java to improve clarity and consistency to enhance readability and maintainability of the test code
refactor variable handling in Java2TypeScriptTranslator and add a new test for nested anonymous classes in StaticsTests to improve clarity and
added sequence name generation for auto - increment columns in PostgreSQL to ensure proper handling of auto - increment columns in PostgreSQL
updated byte reading logic in DataInput . java to handle negative values correctly to ensure proper handling of negative byte values and prevent potential errors
added assertions to check for the " Dimension VerticalPhysicalPixelSpacing " and " HorizontalPhysicalPixelSpacing " metadata in ImageParserTest . java to
updated the assignment of the parent variable to use the parent ' s parent ' s method to ensure proper retrieval of the parent object
refactor import statements for consistency and readability to improve code clarity and maintainability
fix test failure with engine _ finish and engine _ init
refactor InterleaveControl and related classes to improve iteration event handling and event firing to enhance clarity and functionality of event processing in the application
added release calls for HttpContent and NettyStreamingFileUpload to ensure proper resource management and prevent memory leaks
added deleteLogs ( ) method to TestRecovery . java to improve logging management during recovery tests
modify URL loading logic in BrowserActivity to handle both " twitter : / / " and " twitter : / / " URLs to improve user experience
added a client instance and awaiting host status in DeploymentGroupTest . java to ensure proper handling of host status in deployment tests
updated logResult parameter from false to true in VisibilityController . java to enable the logging of label visibility for better debugging
updated the maximum retry limit from 0 to 25 in RestTemplateRetryTests . java to limit the number of retry attempts for the Ribbon
removed a println statement from TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java to streamline output handling
added support for the " FRACTION " resource type in multiple classes to enhance functionality for handling fraction resources in the application
removed file confirmWrite check from BasicFrame . java to streamline file writing process by eliminating unnecessary confirmation
added assertions for groupId , artifactId , and tagId in findNewerDependencyVersion method to ensure that groupId , and tagId are not null
hbase - 25819 throw quotaexceededexception instead of donotretryioexception in namespacestatemanager # getmax
refactor multiple Java classes related to token handling to improve code organization and maintainability
refactor TestFuzzPreLoop class to improve code readability to enhance maintainability and facilitate future development
added a check to initialize f0 to 0.0 if it is less than 0.0 to ensure that f0 is non - negative
updated logging messages in SchemaRetriever and added null checks for pkColumn and fkColumn in TableRetriever to improve logging clarity and prevent potential NullPointerException
improve performance of request . clearencoders ( )
added support for empty page preferences in the Workspace class to enhance user experience by allowing users to control empty page scenarios
deprecate cucumber - needle in favor of cucumber - cdi2 or cucumber - jakarta - c
updated theme handling in ShadowThemeTest , ShadowArscAssetManager , ShadowArscAssetManager , ShadowArscAssetManager , and Shadow
updated failure messages in VerifyFast . java to use Arrays . toString ( ) instead of string concatenation to improve clarity and consistency in error reporting
no effective change - remove @ dbmigration on ehistory2
updated conditional checks in CodeGenerator and added new methods in Global and ScriptObject to enhance property handling and improve accessibility for prototype property management
updated the shuffle method in TestFilterDirectoryReader to include a random value to ensure that all readers are randomly generated during the shuffle process
updated display name assignment logic in UsersAndGroupsSearchProvider to differentiate between username and shareWith to improve user clarification based on user
updated the path formatting in CookieRetrievingCookieGenerator to ensure a default value is used when the path is blank to enhance security by preventing
http link update - sun . com - > oracle . com
changed the variable name from ` getBackupCount ( ) ` to ` getTotalBackupCount ( ) ` in ` AbstractCacheService . java `
updated pageNumber comparison logic in ValidationResult . java to compare against ve . pageNumber to ensure accurate validation of page number comparison
added a null and equality check for the focused widget in the highlighting condition to ensure that the highlighting behavior only occurs when the focused widget
reformatted method signatures in SoundUtil . java for improved readability to enhance code clarity and maintainability
refactor ApplePackageDescription and AbstractKnownBuildRuleTypes to use a new method for retrieving AppleCxxPlatformFlavorDomain to
test : add test for ` show ololoed format tabSeparatedwithnamesandtypes `
corrected the spelling of " onConnect " to " onAccept " in ServerSessionListener . java and AbstractHTTP2ServerConnectionFactory .
refactor the EnglishPTBTreebankCorrector class to improve code readability to enhance maintainability and facilitate future updates
added a new file TestGetLoggerNPE . java to test logging functionality to ensure that logger functions correctly handle potential NullPointerExceptions during logging operations
added a ` getData ( ) ` method to ` PathSharingContext ` and updated ` ScriptedProcessor ` and ` ScriptedDecideRule
use castExact instead of unsafe . getobject / getunsafefield / getunsafefield / getunsafefield / getunsafe
added support for using " NEXT VALUE FOR " in NextValExpression and updated related methods to enhance functionality for handling multi - row values in SQL
improve error message when resource bundle be not pre - cached
refactor buffer removal logic in BoundedLocalCache and add a test for pending writes in BoundedLocalCacheTest to improve cache management and
added order direction support to QuoineExchange and QuoineNewMarginOrderRequest classes to enable customization of order direction in the Qu
added a method to bound properties in PropertyDescriptor and created a new test class Test7192955 to ensure proper binding of properties in the PropertyDescriptor
replaced ` failsafeWidth ` and ` failsafeHeight ` with an ` SetDisplayModeCallback ` interface in ` Lwjgl
added null check for parent buttonsAwatingRelease in Tabs . java to ensure proper cleanup of button resources when the form is not initialized
updated wrap width calculations in LineCell . java and changed region usage in StyledTextAreaSkin . java to improve layout responsiveness
updated formatting of a string in XSLTErrorResources _ it . java to improve code readability and maintain consistency
changed ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper ` classes to
simonstewart : replace string concatenation with string . format ( ` ` % s ' ' , ` ` \ ' ' )
refactor namespace retrieval in StaxXmlPullParser to simplify code and improve readability
removed the ` nestedJoins ` feature from multiple test classes to streamline the testing process by eliminating unnecessary conditions
server : fix wrong account type check for admin only
added support for JavacFileManager in SourceFileManager and updated CompletionTaskProcesor constructor to accept a cursor parameter to enhance functionality
added default values for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to ensure
replaced JUnit Assert with Hamcrest MatcherAssert in KuduIOIT . java and XmlIOTest . java to
improve nullness warning in renderer and text renderer .
corrected the calculation of offsetMemSize in SymbolMapReaderImpl . java and added a new test method in LineTcpConnectionContextTest .
removed print statements for termFilter and otherTermFilter in TermFilterTest . java to clean up the code and improve readability
removed the ` Reflection ` class and updated the package structure in ` Jooby . java ` and ` TypeConverters . java ` to
refactor ThreadlessExecutor to remove sharedExecutor dependency and introduce finished state management to improve code clarity and ensure proper handling of thread state
removed unnecessary try - catch block in DateTimeFormatter . java and added new test cases in TestDateTimeParsing . java to improve code readability and ensure
rename variable ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and introduce a new method ` in ` CompressionParameters . java
added a new case ` WILDCARD ` to ` Types . java ` and created a new class ` T7034495 . java `
replaced the ` do ` loop with a ` while ` loop in ` LotsOfEvents . java ` to improve code readability and
refactor conditional statements in TransclusionDecideRule . java for improved readability to enhance code clarity and maintainability by standardizing
remove ` ` micronaut . version ' ' and ` ` micronaut . version ' '
added unit tests for ` Area3DPtg ` and ` Area3DPtg ` in ` TestBugs . java ` to ensure
modified the MindIcon constructor to use a default description if the name does not start with a slash to ensure proper formatting of the icon description
updated the ` onHomeIntent ` method to include a ` internalStateHandled ` parameter to enhance the handling of home intents in the launcher
replaced direct usage of ` getPreferDependencyTree ( ) ` with a variable ` preferDependencyTree ` in ` CxxBuckConfig
added ` showDetails ` method across multiple activities and modified ` FileDetailFragment ` to accept an ` activeTab ` parameter across multiple activities to
updated function names from " $ apply " to " apply " in multiple files to improve clarity and consistency in method naming
added randomization logic to the MinimalEncoder class and updated assertions in HighLevelEncodeTestCase to reflect the correct number of symbols and improve
updated header descriptions and modified formatting in SourceBuilder . java to include an additional " | - " prefix to enhance clarity and support additional header
added a call to ` mAdapter . notifyDataSetChanged ( ) ` in ` FolderSyncActivity . java ` to ensure that the adapter is
removed the method ` setDefaultWALSyncMode ` from ` ShadowSQLiteConnection ` to streamline the code by eliminating unnecessary functionality
updated type erasure logic in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to improve type safety and ensure correct handling of
( chore ) camel - aws2 - crt : remove unused getter
updated error messages for corrupted streams in ParserTest . java to clarify the expected sizes of corrupted streams
updated assertion message in HazelcastTestSupport . java to include found - content to improve clarity of the expected size assertion message for better debugging
improve graphbuilderphase . addifnode ( ) to avoid duplicate comparenode .
make sure we do n ' t create the pen image if it ' s too small
refactor SQLXML class to improve code readability to enhance maintainability and facilitate future updates
added a limit parameter to the getOrderBook method and updated related calls in YoBit and YoBitMarketDataService classes to support
rename ` GotWrongOOMEException ` to ` HeapOOMEException ` and update related exception class references to improve clarity and specificity
added StreamReadConstraints import and configured it in StandardDataFlow to ensure proper handling of stream read constraints in JSON processing
updated the retrieval of the engine string to use an empty string instead of a configuration object to ensure a default value is used for enabling engines
renamed the class ` FullIterator ` to ` WheelIterator ` and updated references accordingly to improve clarity and consistency in naming conventions
added error handling to the format method in BugInstance . java to improve robustness by providing a clearer error message when a specific bug pattern
increase wait _ chunk _ is _ ready _ in _ seconds in localchunkpropertiestest
changed the visibility of the uncomplete check lists menu item from true to false to hide the uncomplete check lists menu to improve user experience by
refactor DefaultResultSetHandler to resolve discriminated result maps and introduce a new Contract class with associated tests to improve the handling of discriminator
added null check for defaultHome and updated receiver unregistration logic in OverviewComponentObserver . java to improve robustness by ensuring proper handling of
removed the import and annotation for VertxGen in PumpImpl . java to streamline the code by eliminating unnecessary dependencies
removed unnecessary cast to FileDisplayActivity in FileDetailFragment and OCFileListFragment to simplify code and improve readability by eliminating unnecessary
trim trail and leading whitespace from tokens array in ConfigAttributeEditor . java and add a test for it in ConfigAttributeEditorTests . java to
renamed classes ` ClassUsingAnotherAuxiliary ` , ` ClassUsingAuxiliary ` , and ` SelfClassWithAuxiliary ` to
svm : make singlemodulereference public and add getunnamedmodule ( )
updated the case handling in DatabaseMetaData to set the relation kind based on the presence of " pg _ " in the string to ensure the correct
chore : [ java ] deprecate tier _ ENTERPRISE _ plus _ value in favor of agent _ enterprise _ plus .
corrected the arithmetic operator from ' - 1 ' to ' 1 ' in ThriftHiveMetastore . java and HiveMetaStore .
added a new module - info . java file for the com . speedment . runtime . core module to provide exports and dependencies for the core
added flush state and fill state management in SslConnection . java to ensure proper handling of flush and fill states during SSL connection operations
refactor Log4j2LogDelegateFactory to improve logger initialization logic and add a new NoExceptionInInitializerErrorTest class to enhance logging
7029048 : test7029048 : jre / bin / lib / lib / lib / lib / lib
refactor ExecutableFindOperation , MongoOperations , and ReactiveMongoOperations classes to improve code organization and maintainability
added " org . postgresql . ssl . LibPQFactory " to PGProperty . java to support SSL configuration in PostgreSQL
disable the test in TestInterProcessSemaphoreEdges . java to temporarily disable the test due to a failing issue
sort theme keys in EditableResources for consistency to ensure consistent ordering of resource names during iteration
added a new file ` OSvTerminal . java ` and updated ` TerminalFactory . java ` to support the ` OSV ` flavor to
added additional file extension checks for " . gr " and " . grs " alongside " . gs " in ClassType . java
replaced HashMap with TreeMap for combinedVectors in DrillTestWrapper . java to improve performance and maintain order of vector data structures
added a condition to check the size of the values array before iterating through names and values to ensure that the loop does not exceed the defined values
refactor WebSocketPolicy class to improve code readability to enhance maintainability and facilitate future updates
changed access modifiers of ` readPhoneStatePermission ` , ` accessWifiStatePermission ` , and ` accessWifiStatePermission ` from
modified the ` resolveMessage ` method to include ` performOriginBasedResolution ` and ` performDefaultBasedResolution ` parameters to enhance message resolution control
updated Class type parameters from ` Class ` to ` Class < ? extends MethodVisitor > ` and ` ClassVisitor ` to improve type safety and
added new ` LoggingAuditService ` and ` UaaAuditService ` interfaces for logging user authentication to facilitate logging and auditing
added nullability annotations and improved handling of temperature values in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to enhance robust
use modelutils . abstract ( concreteclass ) instead of return early for abstract abstract class
camel - 1745 : camel - http - add support for proxyhost and proxyport property on camel - http .
updated the maximum encoding version from " 1.1 " to " 1.2 " to ensure compatibility with the latest encoding requirements
added a call to jdkSerialFilter in System . java to enable serial filtering functionality for the system
( chore ) camel - core : improve log message for pool size
replaced ` forceFinished ( true ) ` with ` forceFinishScroller ( ) ` across multiple classes to simplify the method signature and improve
updated the parameter name in the ensureRealtimeClusterIsSetUp method from ` realtimeTableConfig ` to ` rawRealtimeTableConfig `
added methods ` isError ( ) ` and ` error ( ) ` to ` ValidationReport ` , updated status handling in ` DisallowValidator `
updated inline QSB handling in InvariantDeviceProfile . java to use closestProfile instead of displayOption to improve clarity and maintainability of
updated createClassPath method to include exception handling and URL decoding to improve error handling and ensure proper URL encoding during file path processing
updated regex patterns in TransformSteps . java to replace ' 10 ' with ' ( . * ) ' for parameter validation to enhance flexibility in
added null checks for ` prop ` and ` image ` before setting ` retinaProp ` in ` PGraphicsJava2D . java `
replaced hardcoded timeout values with a variable timeoutMs in FaultToleranceTest . java to improve code readability and maintainability by using a
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in Environments . java to ensure the application uses the correct Docker image configuration
added multiple calls to System . gc ( ) in KnowledgeAgentTest . java to ensure proper memory management during test execution
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
replaced the createHardLink method with a copyFile method for copying files to improve code readability and maintainability by encapsulating file copying logic
rename ` appendToDescription ` to ` getDescription ` across multiple classes to improve clarity and consistency in naming conventions
[ pytorch ] add sanity check for device
added a conditional check for ` Xml . Document ` before visiting ` FindIndentXmlVisitor ` and ` FindLineFormatJavaVisitor ` to
refactor NotesHelperTest and ReminderHelperTest to use AndroidJUnit4 runner instead of InstrumentationTestCase to ensure compatibility with Android
added new rules ` GasLimitRule ` , ` DifficultyRule ` , and ` ParentGasLimitRule ` to the CommonConfig class to
changed the access modifier of ` setupData ( ) ` from public to private in ` BaseAssumptionsRunnerTest . java ` and removed
renamed the ` autocommit ` variable to ` runInTransaction ` in the ` ChangeSet ` class to improve clarity and specificity
[ te ] do n ' t close the deframer if the stream be close .
[ hotfix ] [ doc ] use site . baseurl instead of . / ops / state / task _ failure _ recovery / restart -
added a new test method ` testIssue154 ` to ` SelectTest . java ` to validate SQL parsing and deparsing to ensure correct handling
refactor Common class to improve code readability to enhance maintainability and facilitate future development
refactor event handling in Launchable . java to use try - with - resources for better resource management to improve code readability and ensure proper
refactor StreamExecDeduplicate class to improve code readability and maintainability
added a warning log statement for error handling in KafkaSubscriber . java to improve error tracking and debugging during kafka message sending
added PersistentPropertyAccessorFactory and isImmutable method to SimpleElasticsearchPersistentEntity and SimpleElasticsearchPersistentProperty classes to enable configuration of persistent property accessors for
[ geos - 8470 ] setcoord ( ) now return true for undefined coordinate
added scroll distance calculations and logging in AskGestureEventsListener . java to improve the responsiveness and debugging of gesture scrolling behavior
improve the comparison logic in the NGramEstimator class to ensure the correct order of elements in the comparison
updated package imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` in multiple Java files to
updated method calls in StatsLogCompatManager to retrieve folder icon properties to improve clarity and maintainability of the code
updated method calls from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
8015278 : compiler / c2 / irtests / testskiptests . java fail with illegalargumentexception due to miss
modified the SelectionHighlighter class to include a setter method and improved the equals and hashCode methods to enhance flexibility in object comparison and ensure
added a new ` StringResultConverter ` class and refactored ` AsmRuntime ` and ` AsmUtil ` to utilize it
replaced @ DisabledIfSystemProperty annotations with @ Disabled annotation in AccountProducerTest , MarketDataProducerTest , and MetaDataProducerTest to
updated condition in JansiWinSysTerminal from " ! = 0 " to " = = 0 " to ensure that the condition checks for
added null checks and improved buffer limit handling in BufferUtils . java to enhance code robustness and prevent potential NullPointerExceptions
updated the expected data directory path in TestSolrDiscoveryProperties . java from " data / " to " data . separator " to ensure compatibility with
updated condition checks for operating system and added support for macOS pre - Catalina in AutoUpdaterServerProperties . java to ensure compatibility with
updated Lock class to accept a string instead of a File object to improve flexibility in handling lock file names instead of a File object
updated the variable name from ` appIcon ` to ` allApps ` and adjusted the method for retrieving the visible bounds to improve clarity and
updated references from ` Invocable . Invocation ` to ` ClientDatagramEndPoint . this ` in ` ClientDatagramEndPoint . java `
updated the GET _ STEP _ EXECUTIONS string to use " order by STEP _ EXECUTION _ ID " instead of " oreder
modified button handling in LwjglInput . java to ignore unknown buttons to ensure that unknown buttons are handled correctly
added tests for approve and reject functionality in TaskRestRepositoriesIT . java to ensure that the test correctly verifies the correctness of the claim
replaced direct instantiation of SLF4J logger with a static final logger in multiple response builders to improve code readability and maintainability by
modified the expiration time parsing in SsoAccessTokenProvider . java and added a new test method in SsoAccessTokenProviderTest . java to improve
[ geos - 8470 ] skip test that fail on window
added multiple overridden methods for alarm suppression methods in GreetResourceMockedTest and OciMetricsCdiExtensionTest classes to ensure proper
reformatted conditional statements in JFrame . java for improved readability to enhance code clarity and maintainability
added a null check for the MediaDatabase connection before executing the " ANALYZE SAMPLE _ SIZE0 " command in LibraryScanner . java to
replaced the implementation of ` metricsContext ` with a call to ` super . initializeMetrics ` in ` SuggestComponent . java ` to
refactor output string construction logic in OCFileListFragment . java to handle negative file and folder counts more effectively to improve readability and maintain
change default hash known hosts from " yes " to " no " and update loadKeys method to return Iterable < KeyPair > instead of an array
[ hotfix ] [ doc ] fix typo in sourceversion javadoc
added a new test class ThreadFactoryTest for testing the thread factory functionality to ensure that the thread factory behaves as expected with ' My -
refactor lock period retrieval to use a dedicated method in DelegateResourceActuator . java to improve code readability and maintainability by centralizing
added a new TicketModel instance in EditTicketPage . java to facilitate the creation of the TicketModel for better user experience
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable dimiss apps from predicted list
updated constructors in multiple assertion classes to include a selfType parameter to enhance type safety by allowing type - specific assertions
updated menu item constants in TweetActivity . java and added a quote intent in ComposeActivity . java to enhance user experience by allowing quote
do n ' t start a new thread if it be already finish .
rename ` codecPassthroughFormat ` to ` decryptOnlyCodecFormat ` and introduce ` isDirectPlaybackSupported ` method to improve cl
added a conditional check before offering failure and closing the consumer in ServerHTTP2StreamEndPoint . java to ensure that failures are only processed when
updated the error message from " Stiller Modus " to " Silent - Modus " in XSLTErrorResources _ de . java and
added ThreadSafe annotation to CheckpointsCleaner . java to ensure thread safety for the CheckpointsCleaner class
updated imports and method implementations from ` Observer ` and ` Subscription ` to ` Subscriber ` in ` MockRestAdapter ` , ` RestAdapter `
reformatted code for better readability in ComponentPresetManager . java to improve code clarity and maintainability
added a new configuration option for unique column names in HiveConf and updated test cases to use it to ensure unique column names are used in the
mondrian : fix for maryclient . setinputtext ( true ) and maryclient . setinputtext ( true )
added session validity check and exception handling in Session . java and a corresponding test in SessionHandlerTest . java to ensure that invalid sessions are properly
hhh - 14536 remove exceptionhelper . java ( no longer use )
increase the seed size from 256 to 255 in JceX25519Domain . java to allow for more flexibility in seed generation
added a codec configuration for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene 4.
[ hotfix ] [ runtime ] log debug message when checkpoint be empty
added support for " RSA / ECB / OAEPPadding " algorithm and improved exception handling in OperatorHelper . java to enhance algorithm
update platform references from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple files to ensure compatibility with the new architecture
added SecurityException handling and improved error logging in DebugSourcesResolver . java to enhance error handling and provide clearer logging for runtime exceptions
simplified conditional checks in AbstractTest . java for better readability to improve code clarity and maintainability
updated error handling in FileUploadUtils and modified return values in ControllerConf and UploadRefreshDeleteIntegrationTest to enhance error reporting and improve segment management
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` across multiple files to use ` ByteOrder . nativeOrder ( ) ` for
set the USE _ PIPELINE _ DOWNLOADER flag to true in FastSyncChainDownloader . java to enable streaming download functionality by default
modified the DST _ OFFSET setting in SimpleDateFormat . java and added a new class Bug7130335 . java for testing date formatting to
refactor code to use a local variable for iconCount and update related calculations to improve code readability and maintainability by reducing redundancy
cloudstack - 4892 : do n ' t return the default router if there be no default vm
refactor StringBuffer class to improve performance to enhance performance and maintainability of string manipulation operations
added a line to set the rule uid in RuleResource . java to ensure that the rule uid is correctly assigned from the rule
added a null check for the listener before removing it from the registry to avoid potential NullPointerExceptions when the listener is null
added a new property for pretty printing in JoltTransformJSON to enable customizable pretty printing behavior in JSON transformation
fix checkstyle issue in instrumentbranchphase . java
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests to provide clearer context when no resources are found to improve clarity in error reporting
improve error handling by throw ioexceptionsupport . create ( )
refactor multiple classes related to control and response handling to improve code organization and maintainability
added an ` isUpgradeSuspended ` parameter to the ` AmbariManagementControllerImpl ` class and updated related method calls to include it
updated copyright year from 2007 - 2009 to 2009 in FindsByCssSelector . java to reflect the correct copyright year for the
removed the final List < Field > declaration from writer . getFields ( ) to streamline the code by eliminating unnecessary variable declaration
added default key size settings for encryption and signing in OAuthProperties to enhance security by allowing dynamic configuration of encryption and signing keys
hbase - 25819 fix the usage of htabledescriptor . getcolumnfamily ( ) . length to htabledescriptor . getcolumn
replaced the ` AllowedResourceAliasChecker ` instantiation with a lambda expression in the ` addAliasCheck ` method to improve code readability and
refactor ObjectInputStream , ObjectStreamClass , Serializable , and package - info classes to improve code organization and maintainability
[ java ] add a reset method to cluster so that it can be reset .
updated the initialization of SequenceFile . Writer to increment the currentChunkID correctly to ensure that the current chunk ID accurately reflects the current
added a new abstract class AbstractJobExecutor to handle job execution in a batch execution environment
added a new variable ` replayFuture ` and replaced ` return ` with ` break ` in ` RecoveryStrategy . java ` to improve clarity
corrected the spelling of " hugeStaticBase " to " staticBase " in HugeResourceTest . java to ensure consistency and
added service ID retrieval logic in AbstractConsulClient to ensure proper handling of service IDs based on discovery settings
replaced ` Float . random ( ) ` with ` SecureRandom ( ) ` for hashSalt generation to enhance security by preventing collision attack
add an option to verify runtime compilation framestates during bytecode parsing
removed redundant calculations for currentStart and baselineStart in TimeOnTimeComparisonHandler . java to streamline code by eliminating unnecessary calculations
added support for abstract methods in the ` answer ` method in ` CallsRealMethods ` and created tests in ` CreatingMocksWithConstructorTest
updated ` NashornScriptEngine ` and ` Context ` classes to use ` Class ` instead of ` String ` for package access checks to
updated ContextPathPluginTest to extend AbstractPluginDataInit and added error configuration setup methods to improve test structure and enhance error handling during context path
refactor ContributionListPanel to use a unified model variable instead of dtm to improve code readability and maintainability by using a unified variable
added handling for the REQUEST _ HAS _ TIS constant in multiple classes and updated related conditions in LauncherInstrumentation to use it to improve
refactor connection dialog handling in ConnectAction . java to improve readability and maintainability of the code
updated method signatures and variable types from ` String ` to ` BuildTarget ` in ` TargetsCommand . java ` to improve clarity and consistency
added new classes ` javaemul . internal ` and ` javaemul . internal ` in the ` javaemul . internal ` package
added support for ' & ' character in the comparison logic and updated operation mappings for home and end states to enhance functionality for handling home and end
removed synchronization around the retrieval of connected plots in PlotHandler . java to simplify the code by eliminating unnecessary synchronization
refactor intent creation in Utilities . java to use a chooser method to improve code readability and maintainability by consolidating package installation checks
changed the access modifier of the Roster constructor from public to package - private to restrict access to the constructor for better encapsulation
added a new extension for basic constraints in TestUtils . java to ensure proper handling of basic constraints in certificate generation
added a new test method ` testFixedNestedTransform ` to the ` TextVisualRegressionTest ` class to address failures due to incorrect transform
removed unnecessary conditional checks for multi - valued precision in TrieDateField and TrieField classes to simplify code and improve readability by eliminating
added TaskbarStateHandler to BaseQuickstepLauncher and removed TaskbarStateHandler class to streamline taskbar state management by eliminating
added a new file ArrayLength . java to test array access methods to ensure correct behavior of reflection methods for array types
added logging for hazelcast process destruction and invoked process . destroyForcibly ( ) in the tearDown ( ) method to
replaced ` @ Singleton ` with ` @ ApplicationScoped ` and added initialization method to ` ApplicationSettingsService ` to facilitate the
updated assertions and conditions for newValue assignment in Safepoint . java to ensure correctness of value validation and prevent potential negative values
updated threadNameField to use " Ljava / lang / String " and changed return type from charArrayToString to stringOopToString to
updated the DEFAULT _ RAND _ SEED constant in Lucene90HnswGraphBuilder and HnswGraphBuilder to use 42
re - apply the current font when use retina ( fixes # 2617 )
[ calcite - 4892 ] fix sql validator for dynamic star table with window and group by
added a new method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class for finding nested comments to enhance the functionality of
added import for Messages and set the status of the PMS frame in HTTPServer . java to improve user experience by providing a clearer status
[ add ] getmodifiersex ( ) and deprecate get getClickcount ( ) and getamount ( )
node cost : increase node cost from CYCLES _ 6 to CYCLES _ 3 in AMD64CountLeadingZerosNode and
fix npe in camel - as2 client when no content - transfer - encoding be specify
refactor Locale class to improve code readability to enhance maintainability and facilitate future development
added a ` clearLogButton ` field and a ` clearLog ` method to ` ErrorConsoleController ` , modified ` ErrorConsoleViewModel
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of mRecentsAnimationController
replaced ` ConsolePlayer ` with ` LocaleHolder ` and updated method signatures to use ` Set ` instead of ` Map ` and ` Collections
added connectionPooling method to multiple test classes and modified execution count in AbstractTest to improve resource management and enhance test reliability
[ java ] add opera blink support to the default driver session
updated exception handling in ManageJournalsPanel to catch a broader range of exceptions and added a dialog for downloading failures to improve error handling
added new product entries for various LIFX types in LifxProduct . java to enhance functionality to support additional simulation options in the application
added asynchronous request handling to the OverseerCollectionProcessor and CollectionsHandler classes to enhance functionality by allowing asynchronous processing of replicas
removed unnecessary whitespace in PostgresDatabase . java and PostgresDatabaseTest . java to improve code readability and maintainability
updated LogPanel instantiation to use getRepositoryModel ( ) . HEAD instead of a null reference ID to ensure that the repository model uses the correct repository
changed the unit of the parent tail from UNIT _ Y to UNIT _ XYZ in SkeletonInterBoneWire . java to accurately reflect
added a method ` browserDestroy ` to ` AndroidImplementation ` and refactored the ` destroy ` method in ` AndroidImplementation ` to improve
added a call to waitForActiveCollection on readApiTestViolations to ensure that the test waits for an active collection to complete before proceeding
refactor loop structure in ScreenTerminal . java and update imports in Tmux . java to improve readability and maintainability of the code
updated the return condition in SoftResetAction to include ControllerState checks to improve clarity and functionality of controller state checks
disable on - disc stream cache to speed up texture pack reloading
added conditional logic to retrieve the parent folder in mmm Request . java and ppp RequestV2 . java to ensure proper handling of media
fix a typo in the variable name ' isPersistent ' to ' persistent '
refactor FileOutputStream initialization to use a custom close method to ensure proper resource management and avoid potential memory leaks
added error handling for ` RestClientException ` in ` StandardGitHubRepository . java ` to improve robustness by handling 403 responses gracefully
log4j2 - 1343 add getoriginal ( ) method to messagefactory2adapter and fix unit test
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related
updated the regex pattern in Version . java to include a new version number to ensure compatibility with the latest versioning requirements
added initial delay and dismiss delay settings for ToolTipManager in ExtractionModelFrame . java to improve user experience by allowing more time for tooltip
refactor ` ProjectCommand ` to use ` ImmutableSet < BuildTarget > ` instead of ` options . getArgumentsFormattedAsBuildTargets ( ) `
added a timezone setting and a test for the format2445 method in the TimeTest class to ensure correct formatting of 2445 seconds in time
refactor MediaSessionConnector class to improve code readability to enhance maintainability and facilitate future updates
use the endpoint ' s ssl implementation instead of a new jssefactory
updated the accuracy display from altitude to accuracy in GpsLoggingService . java to ensure accurate accuracy information reflects the current location ' s accuracy
added a check for futures enabled in BinanceExchange and updated BinanceAccountService and BinanceTradeService to use user references instead of order
refactor adminaccountmanagementservlet and adminaccountmanagementhelper to use course data instead of account data
added setAcceptQueueSize method to ThriftHttpCLIService to set the maximum queue size for worker threads
updated the way watchServiceEnabled is retrieved by using a constant instead of the class name to improve code readability and maintainability by centralizing
http : / / issues . apache . org / jira / browse / amq - 4892 - fix for http : / /
replaced parseError ( ) with validationError ( ) in DrillSqlWorker . java and updated error handling in TestWindowFunctions . java
removed assertion for duration calculation in GCInspector . java to simplify the calculation by eliminating unnecessary assertions
do n ' t use optional . parse ( ) on method with line comment .
replaced the ` reserveMemory ` method with a ` readReservedMemory ` method in ` ReserveMemory . java ` and updated its implementation
added multiple calls to ` ungroupedAggregateRegionObserver . checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner .
hbase - 25827 hbaseadmin . getprocessexception ( ) should use getdescription ( ) instead of getoperationtype
camel - 14263 fixed the cxf test error of camel - cxf
refactor YamlChangeLogSerializer to use a map for storing databaseChangeLog objects to improve code readability and maintainability by reducing duplication
replaced print statements with print statements in SchemaPrinter . java to improve readability and maintain consistency in output formatting
replaced manual chunk regeneration with C . NOT _ IN _ PLOT . send in DebugRoadRegen . java and
updated references from ` getContext ( ) ` to ` getActivity ( ) ` for ` HomeFragmentNowPlayingRow ` and ` HomeFragmentFooter
added Hibernate ` @ GenericGenerator ` annotation to multiple ` @ GeneratedValue ` annotations in the ` CasEvent ` , ` AbstractRegisteredService
removed the country parameter from the getSystemTimeZoneID method and related calls to simplify the method signature and improve code readability
added position and remaining parameters to the output stream in BZip2Codec . java and modified byte buffer allocation in TestBZip2Codec .
move data param show logging from appw to appw
added a new constant VALUE _ TYPE _ EMPTY in Type . java and modified Value . java to handle empty values to improve type management and ensure
replaced ` = = ` with ` . equals ( ) ` for string comparison in ` GroupManager . java ` to improve code readability
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class to improve code readability to enhance maintainability and facilitate future updates
added a static method ` newInstanceExact ` to ` TargetGraphFactory ` and replaced instances of ` newInstance ` with ` newInstanceExact ` to improve
rename min _ row _ compacted _ size to min _ row _ size for consistency
added a new ` ArtifactVersionAdapter ` class and modified ` parentMod ` and ` autogenerated ` fields in ` ModMetadata ` to be transient
modified the handling of the last element in the array by introducing a boolean variable ` hasPrevious ` to improve clarity and functionality of the
updated file handling in FileUploader . java to use remote parent path instead of local file storage to improve file management and ensure correct parent ID is
added a new file UTF8ReaderBug . java that tests supplementary characters in XML parsing to ensure proper handling of supplementary characters in XML
add a unit test base on user forum issue
updated subscription stream depth from " dashbtc @ depth " to " ethbtc @ depth20 " in multiple test files to accommod
added a ` resetAllocation ` method to the ` Wrapper ` class and invoked it in ` SimpleParallelizer ` to reset initial and maximum allocation
added import statement for AssertTree in AmbariManagementControllerTest . java to utilize AssertTree functionality for testing purposes
added synchronization around system properties retrieval in mmm Agent . java and created a new test class AgentCMETest . java to ensure thread safety
refactor ModelUtils class to improve code readability to enhance maintainability and facilitate future updates
refactor AbstractDoubleArrayAssert class to improve code readability to enhance maintainability and facilitate future development
updated width and height calculations in Legend . java to include bounds checking before adding elements to avoid potential index out - of - bounds errors
added methods ` testDelay ( ) ` and ` testAbort ( ) ` to ` CodeFirstSpringmvcIntf ` and `
updated the method for retrieving and adding term frequency from a string to an array of strings to improve code readability and maintainability by using a
replaced CxxLink rule resolver with BuildTargetSourcePath in Omnibus . java to improve code clarity and maintainability by
disable botania versioning by default
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added a new ` numberOfFiles ` field in ` Media
added a command line argument " - b " to AidlStep . java and updated the format in GenAidlTest . java
add test case for issue #79 and #79 ( # 766 )
added a TODO comment to the FakeHttpLayer class to address a known issue in the test case
[ hotfix ] [ runtime ] remove erroneous call from embeddedleaderservice
refactor CompositeDiscoveryClient to use Single instead of Stream for improved readability and efficiency to enhance code clarity and performance by reducing
replaced ` systemResources . getConfiguration ( ) ` with ` new Configuration ( ) ` in ` ParallelUniverse . java ` and ` Bootstrap
[ hotfix ] [ doc ] add description for job computation recovers from task failure
replaced ` updateNoWidgetsView ` with ` updateRecyclerViewVisibility ` for better clarity to improve code readability and maintainability by
mondrian : fix multiversionxmlparsertest to pass when woodstox be not find on classpath
refactor ` testBuckAliasCommandIntegrationTest ` to initialize ` ProjectWorkspace ` before each test to improve test setup time and ensure proper
removed debug log statements related to header view height in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up
camel - 15836 : disable some test that fail on ci server
added error handling for the update method in CachedStore . java to improve robustness by logging exceptions during periodical refresh
updated ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` @ RequiredArgsConstructor ` and refactored
added a method to check the default background color in HSSFCellStyle and refactored color retrieval logic in HSSFPalette to
refactor ZonedDateTimeFormatterBenchmark class to improve code readability to enhance maintainability and facilitate future updates
added a new method ` shouldBufferUpdate ` to handle update buffering in ` DistributedUpdateProcessor ` and created a corresponding test class ` DistributedUpdate
added a condition to check if the rocket ' s stage is null in SimulationListHandler . java to ensure proper handling of potential null
updated command mappings for " / editreplace " and " / editscript " to include " ToReplaceID " and modified getItem method to accept
refactor ExtendedMasterSecretExtension class to improve code organization to enhance maintainability and readability of the codebase
changed the input processor variable from non - final to final in AndroidInput . java to ensure immutability of the processor variable
added a call to ` onWriteFailed ` in ` WritableKeyProcessor . java ` to indicate that the end of stream is reached during writing
added " CUBE " to MySQLDatabase . java to support CUBE database functionality
added a try - catch block around the rm method call in TestReplicationHandler . java to handle potential IOException during the rm operation
rename ` ExperimentalRobolectricTestRunner ` and related classes to ` MultiApiRobolectricTestRunner ` and update related
replaced reflection - based field access with direct method calls for connection timeout , read timeout , followRedirects , and followRedirects to simplify code and
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the variable ' os ' in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions during execution
ggb - 1193 fix for ggb - 1889 , close # 3885
added a ` fromCli ` parameter to the ` jailerMain ` method and modified its implementation to conditionally throw a runtime exception based
refactor HttpRequest class for improved readability to enhance maintainability and facilitate future modifications
added functionality to store the unread pull status in shared preferences to ensure that the unread status reflects the latest data
added a check for the object kind before processing the object stamp in IsNullNode . java to ensure proper handling of null values in the parent object
updated memory calculations and improved camera initialization in Box2DTest , Pong , Pong , and OrthographicCamera classes to enhance
refactor layout manager initialization for commentsRecyclerView in ViewPostDetailFragment . java to improve code readability and maintainability by reducing duplication
change the log level from trace to warn for background operation aborting to improve log severity for better debugging and monitoring
fix a bug in jimplebodybuilder where abstract method do n ' t work .
ggb - 1349 fix textfield not click on ie10plus
added device ID parameter to the getNotificationUsers method and updated user retrieval logic to include device ID to enhance notification management by filtering users based on
updated baseUrl in CGIARProvider to reference SRTM _ ZIP instead of v4.1 / 6 _ 5x5 _ T
removed unused properties and action listeners in MotifFileChooserUI . java , and added a new class bug6520101 . java to
change return type of hollowuirouter . handle ( ) and hollowuirouter . handle ( ) from void to boolean . return true
refactor ` getRuleOptional ` and ` getRuleWithType ` methods to return ` Optional < T > ` instead of ` fromNullable ` to
set the visibility of transportSpinner based on the makingShortcut flag to improve user experience by hiding the transportSpinner based on shortcut state
added null check for attributes _ field and created new files T7043371 . java and T7073477 . java with annotation
modified backPressed ( ) method to return a boolean indicating success or failure in multiple fragments to improve user experience by allowing back button actions to be
added LONG _ VIEW _ INDEX _ ENABLED _ ATTRIB and DEFAULT _ LONG _ VIEW _ INDEX _ ENABLED to QueryServices and QueryServicesOptions
corrected the casing of " v " to " v " in SDRTrunk . java to ensure consistency in the output format
updated the method to clean the private key path in PrivateKeyParserTests . java to ensure a clean path before processing the private key path
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method and related calls to simplify the method signature and improve code clarity
updated IndexWriter and IndexWriterConfig to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the latest testing version of Lucene
added strict column family handling and a warning message in ImportTsv . java to ensure that column families do not match any of the specified table
[ java ] rename logrecordingchannel to logsubscriptionid for clarity .
replaced ` startActivity ( intent ) ` with ` startActivitySafely ( intent , " onClickVoiceButton " ) ` and ` start
added a condition to skip processing for specific JSON nodes in PoloniexStreamingService to improve performance by avoiding unnecessary processing for specific JSON
refactor Procedure class to improve code readability to enhance maintainability and facilitate future development
added Locale and ClassLoader parameters to resource bundle loading in Toolkit and Window classes to enhance resource loading flexibility by allowing default locale and system class
[ j2kt ] add kotlin normalization for kotlin array
updated PerSegmentSingleValuedFaceting . java to handle edge cases with mincount and mincount to ensure accurate counting of term values based on
updated authorList assignment to use Objects . firstNonNull for clarity to improve readability and maintainability of the code
added OSGiTest . java and modified module - info . java to require static Jdk . unsupported , and added OSGiTest
refactor controller service enabling logic into a separate method for clarity and maintainability to improve code readability and maintainability by encapsulating
hbase - 2696 fix hbase . setautflush ( false ) and hbase . setautofflushto ( false )
fix ( annotation ) : cast ifelement . getThenStatement ( ) to ctelement . getElseStatement ( ) in a class ( #
added ` hasUserData ( ) ` method to ` SimpleFeatureImpl ` and its implementation in ` SimpleFeatureImplTest ` and ` Property `
removed ` HiveException ` from method signatures in ` DDLPlanUtils . java ` and ` ExplainTask . java ` to simplify method signatures
refactor RelyingPartyRegistration class to improve code readability to enhance maintainability and facilitate future updates
removed the enableLogging method from JavaCompiler . java to streamline logger configuration for better readability and maintainability
added a new file InJavaSourceSet . java to search for Java source sets and updated imports in UsesJavaVersion . java to improve code
updated the resource path for the " gdalinfo " file in TestGDALParser . java to ensure the correct file is used for testing
added a new method ` createGetter ` to the ` ReflectionHelper ` class to facilitate the creation of getter objects with specified attributes
removed the use of external storage in the conditional check for SDK version M to simplify the logic for better readability and maintainability
added a new constant ` INDEXER _ NO _ COMMIT ` in ` IndexerMapReduce ` and updated related classes to use it to
cloudstack - 5248 : allow disk offering id to be pass whilst create volume
updated comment and assertion messages in ToHtml . java and BaseTestCellComment . java to improve clarity and accuracy of test assertions
added checks for ` amountToAdd ` and ` amountToSubtract ` instances in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes
added a new file ` Issue382 . java ` to handle specific error types and updated the ` Routes . java ` syntax to improve error
replaced the ` signum ` method with a static import for ` Integer . signum ` and simplified the return statement in ` PositionUtils . java
added visibility control for the text holder in AttachmentAdapter to ensure the text is hidden when the condition is met
refactor ( ctimport ) : improve readability and maintainability of the code
refactor the profile retrieval method in XpiDriverService . java to use a lambda expression to improve readability and maintainability of the code
added a new class LiquidBlock that extends BucketPickup and made fields private in FlowingFluid and List < FluidState
http : / / issues . apache . org / jira / browse / amq - 2902 - fix test failure
updated time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to align with the
corrected the spelling of " existing " to " distinct " in DistinctErrorLog . java to improve code readability and maintainability
updated boolean properties in LuceneTestCase to use annotation . enabled ( ) for various test configurations to enhance flexibility in property retrieval based on
renamed the method ` createLogger ( ) ` to ` getOrCreateLogger ( ) ` and modified logger initialization logic to improve clarity and ensure
[ graal ] do n ' t allow access to field , method , and proxy .
replaced direct calls to ` getRGB ( ) ` with ` getDataElements ( ) ` and ` setRGB ( ) ` for raster data
updated the transaction property verification in HiveAbstractReader to include the partition information to ensure that the correct transaction properties are verified for the job
refactor overlay scrolling logic in Workspace . java to improve readability and maintainability of the code
hhh - 15836 : add support for unmodifiablelistbuilderimpl and unmodifiablelistbuilderinitiator ( #
updated exception messages in multiple classes to include a new method ` shouldNotReachHere ( ) ` and ` shouldNotReachHere ( ) `
added a new test method ` spyingOnAClassRetainsState ` to ` PartialMockingRetainsStateTest ` and created a
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to validate SQL parsing with brackets and orders
added null check for ugi before calling doAs in SecurityUtil . java to improve robustness by handling potential exceptions during action execution
refactor error handling in OpenALMusic . java to use a local variable for error code to improve code readability and maintainability by
( chore ) camel - jbang : rename endpointhelper . reslovestringparameter to endpointhelper . resolveparameter and deprecate the
refactor precision and scale handling in RexNodeConverter to improve clarity and correctness of SQL type creation for DECIMAL to enhance code read
replaced direct calls to ` getAttestationMetadata ( ) ` with ` Optional . ofNullable ( Attestation : : empty ) `
updated the account update assertion to use the current timestamp instead of a hardcoded string to ensure the test accurately reflects the current time for
replaced AxialStage with RocketComponent in BasicFrame . java and refactored selection logic in DesignPanel . java to improve code
added getter and setter methods for long running time in Args . java to allow configuration of the long running time in the application
updated priority adjustment from AT _ MOST _ MEDIUM to AT _ MOST _ LOW and added a new class Ideas _ 2012 _
updated imports and method signatures in HttpServerProvider , ScriptEngineManager , FtpClientProvider , FtpClientProvider , and FtpClientProvider
replaced ` toString ( ) ` with ` toPlainString ( ) ` in ` XSDecimalBinding . java ` and refactored
updated assertions in TestRestClientRequestImpl . java for consistency to improve readability and maintainability of the test code
updated the condition in MissingUniqueConstraintChangeGenerator to check for equality between referenceDatabase and comparisonDatabase to ensure proper handling of unique constraints in the
refactor Android properties handling in IjProjectTemplateDataPreparer . java for improved clarity and functionality to enhance code readability and
replaced assertEquals calls with awaitility in DuplicateCookieTest . java and SessionRenewTest . java to improve test reliability by using await
added user - arguments and timestamp information to the ImmutableMap in ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance traceability by including additional
synchronize list to avoid concurrentmodificationexception
corrected a typo in the trace log message from " match limit to " to " order " to improve clarity and consistency in logging
added a new file ` TheRockMetaDataDemo . java ` to demonstrate the retrieval of exchange metadata to facilitate
changed class names from " FloatingDecimal " and " FormattedFloatingDecimal " to " strictfp " and added a strictness test method
removed unnecessary unparseIdentifier call from columnNamesBuilder . append to simplify the code by eliminating unnecessary parameter
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest . java ` and updated the ` contextFreeTemplate ` method
added a check for non - synthetic methods in the InstantiateStaticClass class and created a new test method in Bug1282 to ensure that static
removed the method call to ` projectFilesystem . getPathForRelativePath ` in ` WorkspaceAndProjectGenerator . java ` to simplify the code by elim
added pending reservation handling and refactored message sending in IkStepDefinition . java to improve resource management and error handling during message execution
changed the ` equals ` and ` hashCode ` methods from ` final ` to ` final ` in multiple classes and added ` equals ` and `
added a method to retrieve the SyncLevel in UpdateLog . java and updated the defaultSyncLevel assignment in UpdateLog . java to provide a
( chore ) camel - control : use try - with - resources
added a condition to check if the slice state is not RECOVERY before proceeding to ensure that only valid slice states are processed during recovery
updated the order of parameters in the create method call to improve code readability and maintain consistency
added ` sdkPath ` to ` AppleBundle ` and ` SwiftStdlibStep ` classes and updated ` makeProcessExecutorParams ` to
[ flink - 20688 ] [ blob ] [ storage ] remove write lock from blob cleanup task
fix typo in log message for static nat
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code organization and maintainability
added conversion of sort and union row types to HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure proper handling of
refactor BetterBlockPos class to improve code organization to enhance maintainability and readability of the code
updated the method to retrieve the proxy in EmbeddedVelocityToolboxView to ensure the correct class loader is used for the proxy
refactor Nightly warning handling to use a dedicated method for version and version string retrieval to improve code readability and maintainability by central
added OracleDatabase support in LoggingExecutor and JdbcExecutor to ensure trailing slashes are handled correctly for database operations
add a system property ` ` findbugs . nullderef . assumensp ' ' to disable assumensp
make the jolokia test work on window by set the port to 12345
updated BLOB _ SIZE , PLAY _ MARGIN , SLIDER _ MARGIN , and SLIDER _ MAR
added a method to add a multifactor authentication provider bypass in DuoSecurityMultifactorProviderBypassConfiguration . java to enhance
reformatted the ` findPositionForNewNodeBestAreaFit ` and ` findPositionForNewNodeContactPoint ` methods for improved read
[ drools - 7 ] fix checkstyle issue in the java . xml module
added help page functionality to PMS , HelpTab , and LooksFrame classes to enhance user experience by providing a configurable help page
added GeocodeProviderFactory and Constants interface files to implement geocoding functionality in the project
updated import statements for CharArraySet in LuceneAnalyzerUtil . java and LuceneTokenizer . java to ensure consistent usage of CharArraySet
refactored exception handling in tests to use a dedicated test method to improve clarity and maintainability of the test code
[ java ] do n ' t delete the object if it be not set
updated conditional checks in ` SegmentsInfoRequestHandler . java ` and refactored collection creation in ` CollectionsAPISolrJTest . java `
modify the calculation of numPredictiveAppCols based on device type to ensure correct app column count based on device type
added a new method ` hasScalarSubqueryInput ` to ` JoinUtils ` and modified conditional checks in ` DrillJoinPrule `
add a buildcraft blockcontainer . onblockremoval ( ) method to the buildcraft library to make it easy to use .
updated layout parameters for drag target bar in DeviceProfile . java to improve layout responsiveness for the target bar
( chore ) camel - yahoo : use start ( ) instead of run ( )
added null checks for the metastore client and initialized it to null in HiveMetaStore . java and HiveMetaStoreClient . java to
updated ` getDisplayScript ` method to use ` Category . DISPLAY ` instead of ` Locale . java ` and added a test for bug7079
removed static imports for ZkStateReader and CORE _ NAME _ PROP in Replica . java to streamline code by eliminating unnecessary
replaced ` ThreadLocalRandom ` with a ` Random ` instance in ` StoreDirectTest . java ` to improve randomness by using a
added a check for launcher availability before backup operations to ensure that the launcher is ready before proceeding with backup operations
updated exception messages to include the value of ' space ' , ' left ' , ' right ' , and ' right ' to improve clarity
added unit test base on user forum issue
rename ` ` body space ' ' to ` ` bar space ' ' in multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code organization to enhance maintainability and readability of the code
updated import statements and refactored file handling in FileMessageHistoryTest . java to use JUnit ' s TemporaryFolder class to improve test
added debug level settings for various logger names in Grasscutter . java to facilitate easier debugging and monitoring of the application
changed access modifiers of ` highlightCnstScrRngQuery ` and ` setHighlightCnstScrRngQuery ` methods to
updated the condition in Launcher . java to include a check for the workspace ' s state and added a method to retrieve the current state to
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the codebase
added a conditional check for ` cacheable ` before notifying a new template in ` SnippetTemplate . java ` to ensure that notifications are only
added a new constant ` SCOPE _ SOLR _ CORE ` and updated related classes to handle the ` solrcore ` scope to enhance
added a primary key parameter to the measurement table creation statement in DatabaseMetaDataTest . java to ensure that the measurement result is correctly retrieved from the
use -- permissions - config - file instead of -- permissions - config - path
removed redundant checks for ` httpSessionExistedAtStartOfRequest ` and ` httpSessionExistedAtStartOfRequest ` in ` HttpSession
added a new file TestIfWithDeadRegion . java that includes a method for obtaining string values with a dead region to facilit
rename english _ ud . gz to english _ usd . gz and fix typo
replaced ` testConcurrentAccess ( ) ` with ` testConcurrentAccess ( ) ` in ` SnowflakeIdGeneratorTest . java ` to
added a static UI preference to AppSettings and modified MainFragment to conditionally hide the toast bar based on user preferences to enhance user experience by
refactor the drop method to use a lambda expression instead of an anonymous class to improve code readability and ensure proper resource management during the drop
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler . java ` and added null check for ` clientId `
updated dialog messages in MEncoderVideo , NavigationShareTab , and PluginTab to use localized messages instead of hardcoded strings to improve maintainability
tika - 1188 -- add mime detection for tika - ooxml and vnd . openxmlformats - officedocument
added logging for glue loading and improved feature path handling to enhance debugging capabilities and enhance code clarity
camel - 14650 : camel - eip - enricher - make it work with camel - eip - maven - plugin ( #
add a method to remove the version info for a specific endpoint in the MigrationCoordinator class to ensure that versions are properly handled when endpoints are removed
add debug logging for stored notification and playback devices in DeviceConfiguration . java and PortAudioAuto . java to improve traceability and clarify
added WebSocket configuration methods to ShenyuConfig and updated ReactorNettyWebSocketClient to accept a configurable maximum frame payload size to enhance
improve cachevalidationlistener to work with testng
added a check for non - empty content length before adding it to the document to ensure that the contentLength is only added if it is not empty
fix deadlock in defaultsolvingjob . solvingterminated ( )
added exception handling for PathAlreadyExistException in createTimeseries method to improve robustness by handling potential PathAlreadyExistException during concurrent insert operations
added a method ` check ` to return the result of the ` Authz ` class to provide a way to check the existence of a boolean
changed access modifiers of several methods from public to protected in multiple classes to enhance encapsulation and restrict access to these methods
cloudstack - 6892 : fix npe in createvirtualmachine api when vm be in reserved state .
updated HttpParser to return an empty string instead of null if compliance is RFC2616 to simplify the value assignment logic and ensure proper initialization of
refactored thread initialization logic by moving the completeInitialization method to a new static method to improve code organization and ensure proper error and output handling
added a method to create and return a public directory for external storage in ShadowEnvironment . java and created EnvironmentTest . java for testing external storage
[ drools - 9 ] add test case for mvel type coercion
updated type parameters and improved formatting in logging configuration classes to enhance code readability and maintain consistency in naming conventions
added exception message to the logging statement in ActionNode . java to provide more context about the exception during the construct process
remove tel : from sip address if it be n ' t a tel :
refactor visibility logic for shared file in FileListListAdapter . java to improve code readability and maintainability
removed the deprecated ` HIVEOPTSORTDYNAMICPARTITION ` configuration and its usage in ` HiveConf . java ` to indicate that the
refactor ` ExecuteStatementOperation ` , ` Operation ` , and ` SQLOperation ` classes to accept a ` confOverlay ` map
refactor BTCMarketsStreamingAdapters and BTCMarketsStreamingService to use Arrays instead of Lists for subscrition messages to
updated method calls from ` getName ( ) ` to ` getTypeName ( ) ` in ` OGRDataStoreTest . java ` to ensure consistency in
removed the onErrorInStep method from StepListenerSupport . java to streamline the code by eliminating unused functionality
refactor Wallet class to improve code readability to enhance maintainability and facilitate future updates
camel - 8096 : camel - netty - http endpoint should use http : / / ? port = 80 instead of http : /
replaced ` System . out . println ` calls with ` Log ` logging statements in ` TestNonBlockingAPI . java ` to improve logging
added a boundary check for the row index in the DbConnectionDialog to ensure that the database connection is valid before proceeding with operations
[ java ] fix false positive on method with same name as an enclosing class
added a new class ` ExtendedPlatformComponent ` and modified ` ManagementFactory ` to utilize it for retrieving platform MBeans to enhance management capabilities
replace single quotes with single quotes in SQL string processing to ensure proper handling of single quotes in SQL queries
updated resource paths in Bleutrade test classes to include " org / knowm / xchange / xchange / dto / " to
refactor TextEscapeUtils class to improve code readability to enhance maintainability and facilitate future updates
added a filter parameter to the FilteredQuery instantiation in AbstractSpatialFieldType . java and updated its usage in TestSolr4Spatial . java to
added progress display and display logic for auto email sending in GpsLoggingService to enhance user experience by providing feedback during email sending
replaced ArrayList with HashSet for inlinks and refactored iterator handling in multiple classes to improve performance and readability of the code
added synchronization to the stopScan method in TradfriDiscoveryService to ensure thread safety when removing OLder results
modified the ` getPartitionsByNames ` method to accept a boolean parameter for server - side filtering to enhance flexibility in partition retrieval based on
added " Abandoned " status to the list of statuses in TicketModel and TicketBasePage to enhance workflow management by including a new status for
removed default value for columnAliasPrefix in multiple platform classes to simplify the initialization of the columnAliasPrefix variable
updated Llap classes to use BytesWritable instead of Text and added LazyBinarySerDe to enhance data handling capabilities by using BytesWritable instead of
log a warning when run on a 32 - bit jvm on a 64 - bit jvm
fix a bug in pdfcopy . copyobject ( ) that cause a nullpointerexception
added a new option " daemon " to the RESET _ ALARM option in OptionEnum . java and implemented daemon mode starting in daemon mode to
added a new file FlushIndexTask . java that implements a performance task for flushing the index writer to facilitate performance testing of index
fix sstablestore . createflushwriter ( ) to take into account the memory threshold .
added support for SEASONS output in MediaLibraryFolder . java to ensure proper handling of the SEASONS output in addition to
added a new file ` LocalSocketAddress . java ` that implements a DatagramSocket using an IPv6 loopback address to facilitate testing
updated grid size points in GridSizeMigrationTask . java to correct positioning for grid size calculations
replaced calls to ` getName ( ) ` and ` getField ( ) ` with direct usage of ` name ` in ` SerializerPojo .
added read - only options and improved transaction and transaction handling in the Context class to enhance transaction management and ensure proper handling of read - only
refactor LookAndFeelCommand class to improve code readability to enhance maintainability and facilitate future updates
updated the method for retrieving the last run end from floor to ceiling in BlockBoxing . java to improve accuracy in determining if the last
added EOFException handling to the assertion in GracefulStopTest to ensure proper exception handling for EOFException
refactor locking mechanism in NetJavaImpl . java for improved clarity and consistency to enhance code readability and maintainability by reducing
[ hotfix ] [ doc ] fix typo in networkparameters
removed conditional check for account asset optimization in DynamicPropertiesStore . java to streamline the code by eliminating unnecessary complexity
added a new constant J9 _ GC _ POLICY _ NOGC and initialized it to zero to facilitate the management of garbage
added validation logic for valid contract procedures in TransactionCapsule . java to ensure proper handling of invalid protocol buffer errors during transaction processing
[ java ] remove strictexception
updated resource path and error logging in HelpContent . java to ensure localization is available and improve error message clarity
added a new file ` ProcessorInfo . java ` that implements processor - related functionality to determine the number of available processors and check for US -
added a stylesheet option to the PrintingBugReporter class to enhance HTML output generation by allowing custom stylesheet options
fix nullpointerexception in logbackloggingsystem when logbackxmllocation be null
updated ` handleUpdate ` method to use ` onServiceComponentRecoveryChangedEvent ` and made fields final in ` ServiceComponentRecoveryChangedEvent ` to enhance
updated SleuthTagPropagationAutoConfigurationTests to validate handler creation with default and YML properties to ensure that the tag propagation auto - configuration
refactor rust dependency type assignment from if - else statements to a switch statement to improve code readability and maintainability by using a switch
modified the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` parameter and added error handling to the
hbase - 2695 fix halfstorefilereader . getfirstkey ( ) to seek to the first key
hhh - 14619 - introduce a new ` ` always ' ' generationtimemillis ( ) and ` ` always ' '
add test case for layer normalization in nd4j backend
refactor file sharing methods to use ` getFileOperationsHelper ( ) ` instead of ` seeShareFile ( ) ` across multiple fragments to improve
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to validate the execution of LiquibaseUpdate Mojo
convert the " proxyType " value to uppercase before setting it to ensure consistent formatting of the proxyType value
add mod _ minecraftforge . getversion ( ) and mod _ minecraftforge . getdungeonloot
refactor JdbcDatabaseSnapshot to introduce tablesOfColumnsFetched and update filter logic to improve handling of table and column retrieval based on the database
added a new container with a border and a label to the CSSBorderTest class to enhance the visual appearance of the application by providing a
modified the ` RetryAutoConfiguration ` class to public and added a conditional bean check for retry status code in ` RetryLoadBalancerInterceptor ` to enhance
changed superclass parameters from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to align layout with the new MATCH _ PARENT layout
updated the construction of ` parentTaskName ` to use ` System . currentTimeMillis ( ) ` instead of ` System . nanoTime ( ) ` to
added error handling for parsing input in ServiceResourceProvider to improve robustness by catching unchecked exceptions during service request parsing
refactor conditional checks in IndexDatabase . java for clarity and consistency to improve code readability and maintainability
[ giac ] make sure x [ 0 , 2 , x [ 1 ] , x [ 0 ] , x [ 0 , 2 ]
refactor AnonCipherWithWantClientAuth class to improve code readability to enhance maintainability and facilitate future updates
added multiple @ Deprecated annotations to ProducerTemplate . java to indicate that these classes are outdated and should not be used in future development
refactor JLayer class to improve code organization to enhance maintainability and readability of the code
fix flaky test evictiontest . testinsertedentrylatch ( ) .
updated method names and variable names from ` encodeInternal ` to ` saltedPass ` in ` Md5PasswordEncoder . java ` to
replaced direct calls to ` viewTreeObserver ` with direct calls to ` mTaskRecyclerView . getViewTreeObserver ( ) ` to simplify
refactor Response class to improve code readability to enhance maintainability and facilitate future updates
fix long . min _ value to long . max _ value in sstablemetadata
increase the size of the callparticipant panel so that it do n ' t waste space .
added null and empty checks for the ` compressReplies ` condition in multiple classes to ensure that ` compressReplies ` is only returned when there are
replaced the ` ToStringBuilder ` implementation in ` HitbtcBalance ` with ` Objects . equals ` and ` Objects . hashCode `
updated column handling in SQL code generation and added a new test for where clause with in statements to ensure correct order by functionality and improve test coverage
hbase - 15710 include issue server information in retriesexhaustedwithdetailsexception message ( yu li )
simplify code by use the lookup ( ) . lookup ( ) . lookup ( ) . lookup ( ) . lookup ( ) . get
updated imports from ` org . apache . http . impl . client ` to ` org . apache . hc . client5 ` in ` Json
pipewood : do n ' t receive battery energy when there be no energy
added a check to delete the temporary output file if it exists to ensure that the temporary file is removed before attempting to delete it to prevent potential
added " id " parameter to the BitstampWebSocketTransaction constructor and introduced new test cases for trades and ticker retrieval in BitstampStreamingMark
added checks for time limits in ReplayProcessor , ReplaySubject , and ReplayProcessorTest classes to ensure that state and size values are
updated the expectedCitation string format in CitationStyleGeneratorTest . java to ensure consistency in the expected output format
added new constants and refactored SQL insert statements in MediaTableFiles . java to improve code readability and maintainability by reducing duplication
apps - 297 add show _ definition _ for _ equation _ in _ exam feature flag and only show definition of the equation in exam mode
fix a nullpointerexception in sipcommtextfieldui . getcomponent ( ) .
hbase - 25827 add cache for meta scan when startrow = = null and scanroot = = null
updated the initialization script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
refactor Math and StrictMath classes to improve code organization to enhance maintainability and readability of the code
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to enable transient taskbar functionality in the application
refactor AccessExecution , AccessExecutionVertex , ArchivedExecution , and ArchivedExecutionVertex classes to improve code organization and maintainability
added a conditional check to set density based on the scale value in IOSGraphics . java to ensure density is set to 3f when scaling
rename ` optional ` to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in variable naming
hbase - 25814 regionstatestore . log ( ) should log exception when region be delete
refactor assertTrueEventually to use a lambda expression for clarity to improve readability and maintainability of the assertion logic
updated logging messages and refactored AsyncHttpConnection , AsyncContextTest , and SelectChannelAsyncContextTest classes to improve logging clarity and
added a boolean parameter ` showArrow ` to the method signature of ` SearchUiManager ` to enhance functionality by allowing the option to show arrow
added a break statement in mmm Database . java and modified lockMode handling in mmm TestRowLocks . java to ensure proper locking behavior
truffle : skip amd64 only test for linux / amd64
added type checks for Integer and IntValue in Scalars . java to ensure proper handling of input types and return appropriate string values
refactor primary key validation logic in CreateTableStatement . java to provide clearer error messages for missing or multiple primary keys to improve clarity
added conditional logic to set drawable resources based on the LMP version of CellLayout , Hotseat , and Launcher classes to ensure
improve error message when no isolate be query for flutter view
added multiple getter methods for content type options , cache control , cache control , and frame options in HeadersConfigurer to enhance header configuration flexibility
refactor ObjectEnumerableAssert class to improve code readability to enhance maintainability and facilitate future updates
simonstewart : move the smoke test to the router package
added a type attribute to the @ AggregateRoot annotation in EventSourcingRepositoryTest . java to facilitate the aggregating of
added support for resolving prebuilt libraries in Python binary descriptions to ensure proper handling of prebuilt libraries in the build process
added handling for client authentication in NetServerOptionsConverter and updated its usage in HttpServerOptions and NetServerOptions to ensure proper configuration of client authentication
updated REPLDIR , REPLCMDIR , and MetastoreConf to include system name in directory paths to ensure that directory names are
refactor task view retrieval and visibility handling in RecentsView . java to improve readability and maintainability of the code
[ hotfix ] [ test ] add timeout to integration test
removed the call to clearAll ( ) in DataTableTopComponent . java to streamline the code by eliminating unnecessary method calls
rename variable ` controller ` to ` flowController ` in multiple processable classes to improve clarity and consistency in variable naming
[ hotfix ] [ table - planner - blink ] fix outofmemoryerror when consume all child pipeline
added uses of ClassLoaderHandler in module - info . java to enable ClassLoaderHandler functionality in the project
added a new method ` setSolution ` and modified the ` solve ` and ` solve ` methods in ` SolutionBusiness ` and ` Solver
added Jackson ' s @ JsonIgnore annotation to ApplicationSettings . java to ignore serialization of data in JSON output
changed the condition from checking if throwable is null to checking if throwable is not null to ensure that throwable is not null to prevent potential NullPointerExceptions
refactor null check for queryInfo in QueryTimeManager . java to improve code readability and maintainability
make the auto workbench work again if there be no recipe
fix gl200 hdop decoder ( fix # 389 )
rename ` timeColumnName ` and ` timeFieldSpec ` to ` incomingTimeColumnName ` and ` incomingTimeFieldSpec ` to improve clarity
added multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20
ww - 4892 add initializable to containercontainer so that it can be inject to the container .
add longtasktimer . sample to timer instrumentation ( fixes # 1188 )
changed the data type of SYNC _ DELTA _ RATE from float to double and adjusted related calculations for fetch time to improve precision
add warn log for deprecate unwrapped fragment expression in thymeleaf
changed the type of the _ attributes variable from HashMap to ConcurrentHashMap to ensure thread safety when reading attributes from the input stream
http : / / issues . apache . org / jira / browse / amq - 4892 - add log for acking message
added new color constants and improved return statements in ColorExtractionAlgorithm . java to enhance color extraction functionality by providing fallback values for main and dark
add data folder to the source folder list if it ' s accessible
modified the ` appendContent ` method to include a ` includeTitle ` parameter and updated related logic in ` OmniNotes ` and `
removed the instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl . java to simplify the session registry initialization process
added logging for reconnection completion and error in NettyStreamingService to improve debugging and error tracking during connection reconnection
updated references from net . sf . cglib . proxy . Factory to javassist . util . proxy . Proxy across multiple test files to
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve performance by using a more efficient
updated exception message formatting in SocketExceptions . java and ExceptionText . java to improve clarity of error messages to enhance readability and provide more
added a check to ensure the view directory is under the repository directory to improve error handling and provide clearer feedback when the view directory does not
remove drag - and - drop functionality from jabrefframe
8178013 : [ testbug ] test / gc / g1 / testdumpandloadclass / testdumpandloadclass
added a condition to check if the update log is in ACTIVE or REPLAY state to ensure that only active or REPLAY states are
deleted the ConnectionHook . java file to remove unused code to streamline the codebase
removed the ` waitForInSyncWithLeader ` variable and its usage across multiple test files to streamline the synchronization process by eliminating unnecessary
camel - 14284 : fix the test error of camel - swagger and camel - swagger - dsl
updated version handling in ApexLanguageModule and added a new method hasNamespaceGuardedAccess in TestAccessEvaluator to ensure compatibility with the current
refactor multiple Java classes related to CORS and Tregex to improve code organization and maintainability
refactor AggregateEngine to use a singleton instance and modify thread pool usage in OverflowQueryEngine to improve thread management and ensure proper shutdown of
updated WebSocketAsyncConnection and WebSocketServerFactory to use ByteBufferPool instead of StandardByteBufferPool to improve memory management by utilizing a configurable buffer pool
added scrollToPositionWithOffset logic to LinearLayoutManager in UploadActivity . java to ensure proper scrolling behavior based on the index value
fix ( sql ) : fix sample by on timestamp override by other column alias
added @ Override annotation and refactored animation handling in LauncherAnimUtils and LauncherStateTransitionAnimation classes to improve code clarity and
added a condition to disable the default user agent in HttpClient to ensure that the HTTP client uses the appropriate user agent based on configuration settings
added a check for pubsubhubbub in FeedRefreshUpdater and integrated it into ApplicationSettings to enhance flexibility in handling pubsubhubbub
changed the access modifier of the finalize method from public to protected to allow subclasses to override the finalize method
updated methods to check for synthetic classes in StubJarClassEntry . java and modified assertion in CalculateAbiFromClassesStepTest . java to
add dspacewebapp to make it easy to use in the web application .
added logic to retrieve the table alias in CalcitePlanner and implemented a method in RowResolver to improve error handling by throwing a SemanticException
updated the trigger key construction to include a space before the group name to improve readability of the trigger key for better debugging
updated logging statements in Wallet . java to include transaction IDs and improved log messages to enhance clarity and provide more context for transaction broadcasting
increase timeout in basicmaptest from 30 second to 6 second
renamed ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` to ` rcfileOptimizedWriterEnabled ` and `
added a new enum ` TlsClientCertPolicy ` and modified the handling of client certificate policies in ` GitBlitServer . java `
replaced a thread - based subscription message sending with a debug log statement to simplify the code for better readability and maintainability
added support for configuration of WebSocket protocol in WebsocketRoutingFilter to enhance security by allowing customizable WebSocket protocol settings
added a debug log statement to HiveQueryResultSet for fetch requests to improve traceability of fetch request handling in debugging
updated string formatting in HolidayEventFormatter . java for consistency to improve readability and maintainability of the code
replaced the ` staticNestedClassFieldMadeFinal ` method with ` ignoreInnerClass ` and introduced a new method ` ignoreInnerClass
refactor UnexpectedJobExecutionException class to improve error handling to enhance reliability of job execution failures
deleted the ` AquaLookAndFeel . java ` file and removed the ` shouldUseOpaqueButtons ( ) ` method from
updated variable names and logic in DrillSidewaysQuery and DrillSidewaysScorer to use long instead of int for maxFreq to
added a new key for GeoDegeneratePath in the classRegsitry to enable processing of GeoDegeneratePath in the application
removed preFill parameter from multiple pool constructors across multiple pool classes to simplify constructors and improve code clarity
updated TaskbarLauncherStateController and TaskbarStashController to conditionally update and apply the taskbar state based on launcher state to ensure
added null check for default style before comparing styles in CascadeDeleteVisitor . java to avoid potential NullPointerExceptions during style removal
fix too much space issue in the status tab
refactor file icon retrieval logic in FileTreeViewHolder . java to improve readability and maintainability of the code
updated assertions in ParallelUniverseTest to use contains instead of isEqualTo for better readability to enhance code clarity and maintainability by using
added synchronization to the iteration over suite results in XMLReporter . java to ensure thread safety when accessing the list of test results
add a probability function test for native native query runner
added ShutdownThread . deregister ( this ) in ClientContainer . java to ensure proper cleanup of resources associated with the ShutdownThread
hhh - 14836 : add sybasease15dialect . droptemporarytableafteruse ( ) to make sure table be drop
simonstewart : fix htmlunit driver to work with htmlunit 4 . x
refactor multiple Solr - related classes to improve code organization to enhance maintainability and readability of the codebase
refactor LinksIndexingFilter class to improve code readability to enhance maintainability and facilitate future updates
updated the hex string format in VirtualAllocCommitUncommitRecommit . java to include " 1024KB for Test " to improve clarity of
do n ' t refresh source info if there be no ad group
refactor equality check in MultimapSubject to use a boolean variable for clarity to improve readability and maintainability of the code
updated frequency string from deg _ text to unit _ hz in WaveGeneratorActivity . java to improve accuracy of frequency representation in the user interface
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
simplified the initialization of the TreeMap in TestLabelOptions . java to improve code readability and efficiency
added a new constant NORMAL _ 4F and modified the handling of the normal format element to improve code readability and maintainability by encapsulating
updated TracingClientInterceptor , ITTracingClientInterceptor , ITTracingServerInterceptor , and ITTracingServerInterceptor to include
updated time zone handling in ScheduledTrigger . java to use TimeZone . toZoneId ( ) instead of ZoneId . of ( ) to improve
added AsyncBucket and InMemoryExtension classes , and modified Bucket and ConfigurationBuilder to throw UnsupportedOperationExceptions to enhance functionality and ensure proper handling of unsupported
updated class path validation logic and improved error handling in resexhausted003 . java to ensure the correct directory is found in the test
updated formatting and added exception handling in AbstractConnector . java to improve code readability and handle interruptions more effectively
refactor OngoingStubbing class to improve code structure to enhance maintainability and readability of the code
added a ` Optional < WebServer > ` parameter to the ` Daemon ` constructor and implemented logic to reuse the ` Daemon ` instance based on
corrected the spelling of " product " to " constructor " in HttpClientUtil . java and added a static import in SolrTestCaseJ
added error logging for thread allowlist utilization and cleared it in ParametersInterceptor . java to improve error handling and ensure thread allowlist is properly
changed the method name from ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to improve clarity
mondrian : do n ' t call findgaps / findOverlaps if the hit policy be set to COLLECT ( #
added a new test method ` testSlidingWindowsCombine ` in ` CombineTest . java ` to validate the behavior of ` SlidingWindows
added a conditional check for ` allAppsDirty ` before binding all apps in ` LauncherModel . java ` and improved logging in `
removed redundant check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest . java to streamline the test by eliminating unnecessary
removed unnecessary whitespace in the main method of Solution . java to improve code readability and maintainability
refactor AquaMenuBarUI to use LWCToolkit for property retrieval to improve compatibility with embedded LWC toolkit
fix potential infinite loop when set set location
refactor the query logic in SimpleJpaRepository to use a CriteriaQuery for better criteria handling to improve code clarity and maintainability by
added timestamp , parent hash , nonce , and number attributes to BlockUtil . java to enhance the blockchain configuration by including timestamp , parent hash ,
replace loop safepointinsertionphase with safepointinsertionphase .
hbase - 20660 fix npe in rsgroupinfomanagerimpl and zkprocedurememberrpcs when there be no child
changed access modifiers of methods in ArtifactResolver from package - private to public to allow broader access to these methods in the ArtifactResolver class
added disposal logic and error handling in multiple classes to ensure proper resource management and prevent potential memory leaks
added a validation check for maxBufferedDocs in IndexWriter . java to ensure maxBufferedDocs is at least 1 to prevent runtime errors
added functionality to manage and log the login state in the LoginActivity to ensure the login process is executed when the state changes are in state changes
added null checks and modified value extraction logic in Pump . java , and added a new test case in PumpTest . java to ensure
updated access modifiers of several methods and variables in HttpShardHandlerFactory and LBHttpSolrServer classes from private to protected to enhance encapsulation
updated the order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in BaseAuthenticationServiceSelectionStrategy . java and
added JNDI server and handler setup to TestJNDI . java to enhance server functionality and improve request handling
refactor code formatting and improve readability in SortedDynPartitionOptimizer . java to enhance code clarity and maintainability
changed the return value of the loop from an instance of NioEventLoop to true to ensure that the loop is always returned as a boolean
updated the calculation of newNumNulls and added a conditional check for newNumRows to ensure that newNumRows does not exceed existingNumRows
camel - jbang - export : camel - jbang - enable kamelet to export from camel - jbang - camel - jbang -
replaced OkHttpOAuthConsumer with an AtomicBoolean and added authorization checks for the OpenStreetMap access token to improve token upload handling and ensure
ptx : remove debug print from test code
added support for client authentication in IoTDBRestServiceConfig and updated related classes to utilize this feature to enable dynamic configuration of client authentication based
updated the injection logic in ` PropertyAndSetterInjection . java ` and added a new test class ` ChildWithSameParentFieldInjectionTest .
bloomfilter64bit and bloomuriuniqfilter now use spring bean .
updated getCursorAdapter parameter from false to true in HomeFragment . java and added refresh _ me preference in TweetPager . java to enable
updated the intermediate header height ratio from 1f to 0.75 f in ProfilePager to improve layout aesthetics and responsiveness
updated import statements and added a new RecompilationEvent class to handle recompilation exceptions to improve event tracking and facilitate instrumentation
ambari - 17458 . ambari - server - agent : add system property to determine whether to use system pre - installed host (
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method in ` DatabaseChangeLog . java ` and modified its
added a loop to delete the first character from the location if it starts with a slash to ensure that the location does not contain a leading slash
added properties and scores handling to the StaticPipeline class to enable dynamic configuration of entities and scores based on specified properties
refactor file handling in Frame . java and enhance WhoopsModule . java to enable or disable Whoops based on configuration to improve
[ geos - 8470 ] catalogrepository . getdatastore ( name ) should return null instead of runtimeexception .
refactor assertions in Assert . java to improve code readability to enhance maintainability and facilitate future development
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` , ` MultiLineJaggedTextTests ` , and
camel - 16462 : fixed the unit test error of camel - TwoConsumerOnSameTopic
removed the ` writeMeasurementScheams ` list from multiple method calls in ` TsFileWriteAlignedWithTSRecord ` , ` Ts
updated the loop condition in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to include actual memory usage calculations to
updated slf4j configuration file from " log4j - log4j12 " to " slf4j - reload4j
( chore ) camel - hue : fix intermittent failure in huebridgehandlerossgitest
refactor package structure for multiple activity classes to improve organization and clarity of the codebase
danielwagnerhall : ignore kiesolverfactorytest until drools - 1276 be fix
added a constructor to ` PullRequestMergedEventsStream ` that initializes ` topicName ` and ` personalAccessToken ` with a ` StreamDataProducer ` to
refactor AbstractExpressionPart class to improve code organization to enhance maintainability and readability of the codebase
[ hotfix ] [ doc ] fix typo in taskslot javadoc
replaced ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket ` and ` NettyWebSocketTest
added error handling for unlocking lock in MoveTask . java to improve robustness by logging warnings when unlocking the lock
replaced Properties retrieval with ResourceBundle retrieval for GEM _ PATH and RUBY _ VERSION to improve code readability and maintainability by using
transaction . equals ( ) : use byteutil . empty _ byte _ array instead of a static empty byte array
reformatted the initialization of classInfo in ClassGraphClassLoader . java to improve code readability and maintainability
updated JobManagerStartupTest to use a temporary directory for the blob storage directory to ensure the test correctly handles cases where the blob storage directory is
chore : [ clouddatastream ] add ` ` alpha1 ' ' and ` ` datastream : v1a ' ' to the
added a new Bundle instance and set extras to the builder in FileDisplayActivity . java to enhance the functionality by allowing users to specify extras for
replaced a break statement with a continue statement in the ParticleEmitter class to ensure that the loop does not continue when the particle is null
updated cluster number expectations from 4 to 3 in AmbariManagementControllerImplTest . java and AmbariManagementControllerTest . java to
removed nullable constraint from the SERVICE column in TransientSessionTicketImpl . java and added handling for NoResultException in JpaTicketRegistry . java
updated Bug4823811 . java file to improve code maintainability and readability
added a path relativization function to the argument list in RmStep . java to enhance flexibility by allowing dynamic path relativization
modified the ` requestFullState ` method to accept a boolean parameter for initial requests to enable full state request based on the initial request state
refactor ShibbolethCompatiblePersistentIdGenerator to include a attribute field and update related methods for better attribute management to enhance flexibility in
corrected the casing of the @ Inject annotation in RequestValidationService . java to ensure proper dependency injection for the RequestValidationService class
added a key - value pair for the STATS _ LOGGER _ KEY and implemented a conditional check before hiding the soft input from the window
removed redundant ` MManager . getInstance ( ) . clear ( ) ` calls and added temporary ` MManager . getInstance ( ) . delete (
refactor NavigableMap and NavigableSet classes to improve code organization and maintainability
add a test to verify that we can use ioutils . slurpfile ( ) on window
added @ FunctionalInterface annotation to multiple classes and modified the client variable declaration in AbstractChannelFactory . java to enhance interface clarity and ensure
refactor span assertions to use a new method ` spanWithName ` for clarity to improve code readability and maintainability by centralizing span
added support for EDATE _ CONVERTER in Hive ' s ETypeConverter and HiveSchemaConverter to enhance date handling capabilities and support for
updated the string splitting method to use Patterns . COMMA _ SEPARATOR instead of hardcoded whitespace to improve code readability and maintainability by using
ggb - 1889 add validation to input dialog for positive / negative value
refactor column counting logic in SemanticAnalyzer . java to improve clarity and maintainability to enhance code readability and maintainability by reducing
refactor assertions and logic in WANDScorer . java for better clarity and correctness to enhance code readability and ensure correctness
refactor Correspondence class to improve code readability to enhance maintainability and facilitate future updates
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT and event classes to enhance code clarity and maintainability by
updated curPixVal initialization in XRSolidSrcPict . java and added a new WhiteTextColorTest . java file to improve pixel value
refactor biomedictionary to use a collection for supertypes instead of a list to improve performance and maintainability of the code
corrected the spelling of " exceedsTolerance " to " exceedsTolerance " in BoundedLocalCache . java to improve code readability and
updated the ` @ Ignore ` annotation in ` TaplTestsLauncher3 . java ` to include stability annotations to enhance test stability
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a check to ensure the log file suffix is not empty before proceeding to avoid potential errors when processing empty log files
refactor PythonBuckConfig class to improve configuration handling to enhance code readability and maintainability
added unit tests for ` addSystemSharedLibraryName ` and ` clearSystemSharedLibraryNames ` methods in ` ShadowPackageManagerTest ` ,
add support for meiligao alarm ( fix # 113 )
added null check for tile before accessing its properties in PowerDiode . java to prevent potential NullPointerExceptions when tile is null
added a new ` TrimCache ` class and modified cache deletion logic in ` PrefFragment . java ` and ` IOUtils . java ` to enhance
fix checkstyle issue in util / template / rendertasklistgenerator / rendertasklistgeneratortest . java
http : / / issues . apache . org / jira / browse / amq - 4892 - fix basicauthaccesscontrolfactory
[ hotfix ] [ runtime ] add scheduler . scheduleperiodically ( t , action , delay , timeunit )
replaced the refreshListOfFilesFragment call with a call to onItemClicked in FileDisplayActivity . java to ensure the file list is
added logging for file matching and improved error handling in StreamUtil . java to enhance debugging capabilities by providing clearer error messages when no files
refactor table creation methods in SessionHiveMetaStoreClient and HiveMetaStoreClient to use CreateTableRequest instead of EnvironmentContext to simplify
added an ` aborted ` flag and synchronized the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker ` to ensure
updated indentation logic in multiple parser classes to accommodate a new indent value of 4 to enhance code readability and maintainability by ensuring correct
added networkwifistatuslistener and changewifistatusevent to the postfragment and postfragment .
removed unnecessary check for control frames in FrameGenerator . java to streamline control frame validation logic
added visibility control for the collapse handle in the WidgetsBottomSheet to improve user experience by hiding the collapse handle view
added two new test classes , Issue475 . java and XSS . java , for handling HTML and JavaScript in the Jooby
added a conditional check to return early if the unitsToScroll ( ) is zero to optimize performance by avoiding unnecessary processing when there is no
updated condition to check for non - single contract list instead of greater than one to ensure correct validation of contract list size
added methods to ` JsonArray ` , ` JsonObject ` , and ` put ` in ` JsonArray ` , and ` JsonObject ` classes to enhance functionality
added a ` hashCode ( ) ` method to ` IPPPrintService ` and created a new test class ` TestRaceCond ` to
db2ddialect : replace getiversion ( ) with getversion ( ) in favor of getversion ( )
added a condition to check if the platform fee is greater than zero before creating a new payment context to ensure that the connection is enabled only when
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
do n ' t queue secure input buffer if encryption be enable .
removed the ` public ` access modifier from several classes and methods in the ` AsynchronousAntn ` , ` CommandInterceptor ` , ` Fallback
added import statement for Retrofit in Part . java and PartMap . java to enable Retrofit functionality in the application
refactor JsonBuildHelper and ParamsBuildHelper to improve parameter handling and add common handle parameters to enhance code clarity and ensure proper handling of
added a new constant ` TYPE _ TASKBAR _ OVERLAY _ PROXY ` to the ` AbstractFloatingView ` class to enhance functionality by allowing
fix : update gapic - generator - java with mock service generation fix ( # 44 )
updated alpha calculation logic in ClipAnimationHelper . java and added hasRecents field in RemoteAnimationTargetSet . java to improve animation handling
removed the second parameter from the createRenderScript method call in AllAppsView . java to simplify the script creation process by eliminating unnecessary
pdfbox - 4071 : fix typo find by codespell on fossies . org
move system - bundle check into pluginmanageractivator . issystembundle ( )
refactor import statements and formatting in IntegrationTestSparkBulkLoad . java for consistency to improve code readability and maintainability
updated Bloom filter parameters to use a constant for positive rate to improve code readability and maintainability by avoiding hardcoded values
refactor configuration handling in Overview . java for improved clarity and functionality to enhance code readability and ensure correct selection of motor configurations
[ iotdb - 4892 ] fix npe in agentmanagerimpl # gethostid ( ) when host be not find
added null check before processing values in DefaultRecordStore . java to avoid potential NullPointerException when accessing values
cloudstack - 4892 : do n ' t return null when kvm be not enable .
updated string literals for named and value attributes in ParamAction . java to improve readability and maintainability of the string representation
updated constructor parameters in BaseStubbing and ConsecutiveStubbing classes to accept a mock object instead of a InvocationContainer to enhance flexibility by
added a static method ` stripMethodParams ` and modified the ` getMethodLine ` method to include it to enhance method parameter handling by stripping
update version name and code for the GreatVoyage application to reflect the new release of the application
mondrian : make allowedcommands a collection rather than a list
change symbolizer option name to be constant instead of hardcoded string
ggb - 2338 center and resize popups when there be overlap feature
( chore ) camel - core : fix typo in validation test
added a new ` StartingWindowListener ` class and refactored the listener implementation in ` QuickstepTransitionManager ` to improve the handling of
added a comment comment inherited from MBeanServerConnection in MBeanServer . java to clarify the purpose of the code related to MBeanServerConnection
updated exception messages in CheckPackageAccess . java to use " PackageAccess " and " PackageDefinition " instead of " SecurityException " to improve cl
increased the timeout duration in ThreadSafetyTest from 30 seconds to 90 seconds and added an assertion to ensure the test does not terminate
changed the type of ` loggingEnabled ` from ` boolean ` to ` Boolean ` and added a null check before setting it in ` XR
added @ JsonIgnore ( true ) annotations to the Schema class to exclude certain fields from JSON serialization
increased the test timeout from 5000ms to 10000ms in TestNonTxIndexBuilder . java to allow more time for tests to complete
simplified the train method and updated scoring logic in SimpleNaiveBayesClassifier . java to improve performance and accuracy of scoring calculations
renamed ` CheckHelperModule ` to ` CheckHelperControllerModule ` and added ` CheckHelperAuditModule ` to improve clarity and functionality
refactor Prototype class to improve code organization to enhance maintainability and readability of the codebase
added a check for null tableIsTransactional and initialized it to a default value if it is null to ensure that tableIsTransactional is
[ java ] remove duplicate code from recordingwriter . writefragment ( ) .
update cea subtitle to use offset _ sample _ relativative instead of 0 .
add miss alias to datastoremetricqueryimpl . getalias ( )
updated CurrencyPair entries from " BTC _ CAD " and " LTC _ USD " to " USD " and " U
updated Hibernate test classes to use EntityManagerFactory and SessionFactory to ensure proper resource management and prevent memory leaks
updated KafkaSender import statements from ` kafka11 . Kafka ` to ` kafka . Kafka ` in both ` ZipkinKafkaSenderConfiguration `
added new files GwtBinaryIntegrationTest . java and A . java to implement integration tests for GWT binary building to ensure proper functionality and
updated button visibility logic in BrowserContentPane and improved error handling in SQLConsole to enhance user experience by ensuring loadingCauseLabel is visible when
updated variable names in EnhancedRandomImpl . java and EnhancedRandomImplTest . java for consistency to improve code readability and maintainability
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , SAXParser , and XMLSecurityPropertyManager classes to enhance security management by
added a new file ` InlineDefaultMethod . java ` containing interfaces with default methods to demonstrate the use of default methods in interfaces
updated SQL query patterns in SqliteFieldPredicateView . java to replace " LIKE " with " GLOB " and " * " to enhance
change visibility of getDMNProfiles method from private to protected to allow subclass access to getDMNProfiles
fixed - rscript . script _ load command do n ' t return the result of slave node . fixed - rscript . script _ load
simplify staticobject . setwordfieldvolatile and add assertion .
updated debug log statements to use the size of targets instead of the number of targets to improve log clarity by providing more detailed information about targets
[ fml ] fix memory leak in fmloutboundhandler
added a configuration option for HTTP Jetty server handlers in ExecConstants . java and updated thread pool size in WebServer . java to improve flex
replaced the ` idsToShortcuts ` map with a ` removedShortcutInfos ` list and added a check for non - pinned shortcuts to
simplified the conversion logic for String values in DefaultHttpClientBinderRegistry . java to improve code readability and maintainability
removed the case for navigation up in DetailFragment . java to streamline the code by eliminating unnecessary navigation logic
added a condition to check if the Android market is present in the includesPlayServices condition to ensure that services are only included when the Android market
refactor TableBlockParser to improve handling of whitespace and zero - length headers in TableBlockParser . java and add corresponding unit tests in Tables
added support for a bridging header in ` NewNativeTargetProjectMutator ` , ` AbstractAppleNativeTargetBuilder ` , and `
refactor methods in PotentiallyDeadCode . java to improve handling of unused and unused Java types to enhance code clarity and maintainability by
added diamond finder functionality to manage diamond arguments in type inference to enhance flexibility in diamond handling and provide clearer
updated method calls from ` invocationStageTrace ( ) . startSend ( ) ` to ` invocation . onStartSendRequest ( ) ` in
removed the import of Utils and added a debug log statement in SolrCacheHolder . java to streamline the registration process by eliminating unnecessary
added exception handling for AuthenticationException in LdapCtxFactory . java to ensure proper exception management during authentication
updated the comparison logic for the zero value in Test6796786 . java to ensure correct handling of negative values in floating - point comparisons
added " logback . dev . xml " to the ` JoobyMojo ` and updated the ` Main ` class to include
added a new file JaasEventCheck . java that implements ApplicationListener for handling Jaas authentication events to enhance event processing for Jaas authentication
refactor QuickstepTransitionManager to use a list for managing views to improve code readability and maintainability by reducing redundancy
updated string distance comparison in ConjunctionSolrSpellChecker . java and added a new test class ConjunctionSolrSpellCheckerTest . java
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to improve type
[ hotfix ] [ runtime ] remove unused constant in defaultleaderelectionservice
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
kvm : add a config option to set the script timeout for ready command .
updated JDBC table and schema parameter handling in AbstractJDBCConnectorProvider . java to improve clarity and consistency in parameter management
corrected the spelling of " SQLUpdateAUP " to " SQL Update " across multiple files to ensure consistency and correctness in SQL
replaced the synchronized implementation of ` WeakHashMap ` with a synchronized method ` computeIfAbsent ` for ` schemaTypeCache ` to improve thread safety
updated header addition logic in StaticServerHttpHeadersWriter to check for non - existing headers before adding them to ensure that headers are only added when
added JUnit @ Ignore annotation to LatticeDemo . java to mark the test as ignored due to file availability issues
added directory creation for the storage directory in TestCollector . java to ensure the test directory exists before proceeding with operations
added a line to set the chunked streaming mode in StarTreeJobUtils to improve performance by reducing unnecessary data transfer
add basic and multi - type syntax checker , and test
hbase - 16462 fix checkstyle violation in hbase - pb - java
added a test to verify that recursive structures do not cause stack overflow exception in BeanPopulatorTest . java and created a new Node class to
added IOException to the getRemoteName method signature in AccountingTransceiver . java to ensure that the method does not throw an IOException
updated exception handling to include IllegalArgumentException in UserAccountManagerImpl . java and added createPlainClient method in ClientFactoryImpl . java to improve error
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for AspectJ mode with protect - pointcut definitions in GlobalMethodSecurityBeanDefinitionParser to enhance security configuration flexibility and support for
added hostname verification configuration to enhance security by allowing users to disable endpoint identification in SSL connections
changed the ` remove ` method in ` OHLCSeries ` from final to non - final and added a corresponding test in ` OHLCSeries
updated method invocation from ` invoke ( ) . joinInternal ( ) ` to ` invokeUrgent ( ) ` in ` ClientSchemaService
removed duplicate joint removal logic in the world . destroyJoint method to streamline the code by eliminating redundancy
fix nullpointerexception in searchfilter . getphonenumbermatch ( ) .
[ flink - 20688 ] [ test ] move sourcereaderbasetestbase to testutils
refactor null checks and error handling in DocumentsStorageProvider . java to improve code clarity and ensure proper resource management during document conversion
added new ` HookDefinition ` , ` JavaHookDefinition ` , and ` JavaHookTest ` classes to facilitate hook registration and
refactor buffer flushing logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by reducing
updated the ` setExoOptions ` method to include a ` allowTs ` parameter to enhance flexibility in setting exo options based on
removed the user identifier from the identifier collection in DMRDecoderState . java to ensure the user ' s identifier is removed from the user '
added a static constant INVISIBLE in Color . java and updated color imports in RailButtonShapes . java to improve code readability and maintain
updated null handling logic in CountAggregationFunction and added a new test for null handling query options in NullHandlingIntegrationTest to ensure correct handling of
added a deep property to the InternalTransaction class to initialize the deep state to - 1 to ensure that the transaction ' s deep state is correctly
escape the XML name in the buffer to ensure proper handling of special characters in the name string
updated file initialization to use a configurable work directory instead of a hardcoded value to improve flexibility in configuring the work directory across multiple classes
added support for handling deprecated rules in RuleSetFactory to ensure that deprecated rules are properly marked as deprecated in the application
fix amd64directcallop to use the codebuffer position instead of the dummy label .
added static final constants for minStamp and maxStamp in TimeRange . java and implemented range construction logic in TestTimeRangeTracker . java to
refactor BitDocIdSet class to improve code organization to enhance maintainability and readability of the codebase
refactor ` emitMetricsJson ` logic into a separate method ` emitMetricsJson ` to improve code readability and maintainability by reducing
updated formatting of code for consistency and improved readability in DetailFragment . java and GalleryActivity . java to enhance code clarity and maintain
fix tank not fill if the player be not remote
updated CsharpLibrary . java to handle both RuleAnalysisLegacyBuildRuleView and PrebuiltDotnetLibrary to ensure correct path resolution for
of - 1341 : added support for iq . type . get to be able to send an iq packet to the server . jm -
fix npe in intrinsificationphase when runtime be null
updated conditional statements in MetricTrackingWindmillServerStub . java and streamlined active refresh logic in StreamingDataflowWorker . java to
pdfbox - 4892 : avoid arrayindexoutofboundsexception if last eofmarker < long . max _ value
added a constructor to ` LwjglApplet ` that initializes the ` Canvas ` with event listeners and modified the ` Lwjgl
refactor string representation of DockerHost in EnvironmentAndSystemPropertyClientProviderStrategy . java to handle null DockerClientConfig to improve code readability and
refactor LdapAuthenticationHandler and AccountStateHandler to streamline handling of password policy application to improve code clarity and maintainability by consolidating
refactor Int2ObjectCache class for improved performance to optimize memory usage and performance
added a private field ` resolveFromAttribute ` to ` AbstractLdapAuthenticationProperties ` and updated its value in ` LdapUtils ` to utilize
refactor Readable class for improved readability to enhance maintainability and facilitate future updates
simplified the PDF document execution by using TestSupport . WITH _ FONT to improve code readability and maintainability by eliminating unnecessary
updated the share menu icon from ` share _ menu _ item ` to ` ic _ menu _ share ` in ` CaptureActivity . java `
updated Java version checks to use JVM _ MINIMUM _ JAVA8 instead of JRE _ IS _ MINIMUM _ JAVA8 to ensure compatibility
updated the logic to check if the connection timeout is not equal to Integer . MIN _ VALUE and added multiple catch blocks for NoSuchMethodError to
refactor GenericContainer class to improve code organization to enhance maintainability and readability of the code
replaced instances of HashSet with ArrayList in Enclosed . java to improve performance by using a more efficient list structure
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , AbstractCasProtocolValidationSpecification , and AbstractCasView classes
removed redundant whitespace in ChartProvider . java to improve code readability and maintainability
fix ( db ) : use file . getparent ( ) instead of file . getpath ( )
simplified the return statement in ` JavacParser . java ` and added a new class ` ExtraSemiTest . java `
added functionality to retrieve users by created date based on keywords in the user repository to enhance user search functionality by allowing users to retrieve their creation time
refactor Test15FloatJNIArgs class to improve code readability to enhance maintainability and facilitate future development
updated version strings in mmm plugin . java and ppp plugin . java to include additional version information to enhance clarity and accuracy of version
corrected the substring logic in MockProcessContext and added a new test for fake encryption and decryption in TestMockProcessContext to ensure correct encryption
[ java ] add check to prevent call reentrant on a callback in archive .
added null check before merging dependencies in OpProcFactory . java to avoid potential NullPointerExceptions during dependency merging
added ` @ Test ( timeout = 10000 ) ` to the ` @ Test ` annotation in ` SslBytesServerTest . java ` to ensure
refactor Peer class to improve code organization to enhance maintainability and readability of the codebase
added a new method ` getRealtimeSegment ( ) ` and ` toHistoricalIndexSegment ( ) ` in ` RealtimeIndexingCoordinator `
added null check before writing output in FailureWatcher . java to avoid potential NullPointerException when accessing viewCaptureDataSupplier
refactor scroll handling in RecyclerViewFastScroller to use getScrollThumbRadius method to improve code readability and maintainability by centralizing
updated commands and imports in BuckWSServerPortUtils , BuckEventsConsumer , and BuckToolWindowFactory classes to improve clarity
added a conditional check for Windows platform before adding a checkbox to the list of items to ensure that the checkbox is only added for non - Windows
updated import statements from javax . servlet to jakarta . servlet in HttpConfigurationAuthorityOverrideTest . java to align with the latest J
refactor cropping logic to accommodate vertical bar layout in QuickstepAppTransitionManagerImpl and FloatingIconView to improve layout handling
added full - screen exclusive mode functionality to XWindow , XWindowPeer , and XWindowPeer classes to manage the visibility of full - screen
[ logback - 1348 ] fix the playeddurationstr ( ) method in logback . xml and add unit test
added credential management methods in DagUtils and updated TezTask to utilize them to enhance the functionality of DagUtils and Tez
( chore ) camel - maven - plugin : use entryset ( ) instead of keyset ( )
trim whitespace from the last element of the thread name in SessionState . java to ensure that the last element of the names array is not empty
updated the error message in GpsMainActivity to provide clearer context when adding a description to a file to improve user experience by providing clear
refactor Job class to improve code organization to enhance maintainability and readability of the codebase
added a new abstract class ` Unused ` with methods to retrieve integer , string , and double fields to facilitate testing of unused
corrected the key from " hbase _ master _ host " to " hbase _ master _ hosts " in multiple files to ensure consistency
resolved - batch - 821 : remove eventserializer / deserializer abstraction and use marshaller / unmarshaller directly
updated the ` performJoin ` method to return a list of ` GenericRecord ` objects instead of a single ` GenericRecord ` to enhance the
updated the handling of the MAX _ DELEGATE _ LOCK _ PERIOD parameter in multiple files to ensure that the maximum delegate lock period is
fix npe when there be no network rate
added initialization services and overridden the applySpecification method in CmcExchange . java to ensure proper initialization of services and improve exchange specification handling
updated configuration keys from " config . json " to " config . conf " and added a check for the existence of " seed . node .
set ` ` hazelcast . client . tpc . enabled ' ' system property ` ` hazelcast . client . tpc . enabled '
updated swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 across multiple AdminApiApplication and PinotService
refactor MutableBigInteger logic to handle larger magnitude than p and add a new ModInvTime class for testing modular inverses to improve
modified the handling of the ` key ` variable in ` NamedObjectList . java ` to ensure a default value is used when ` name ` is
hive - 20688 : querycompactor . cleanupemptydir ( ) should check if the file system do not exist before delete it
refactor AsyncCache and Cache classes to improve code readability and maintainability
added import for RCFileInputFormat and registered it with Kryo to enable the handling of RCFileInputFormat in the serialization process
added methods ` typeOf ` and ` categoryOf ` to ` TypeMapperComponent ` for retrieving Java types from a ` Column ` to enhance type
added error handling for invalid host headers in Request . java and improved test cases in RequestTest . java to enhance robustness and ensure proper
updated ShadowTimeZoneFinderTest and ShadowTimeZoneFinder to use ReflectionHelpers for testing time zone lookup to enhance compatibility with Robolectric ' s
modified the ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in the ` StandardOp ` class to enhance functionality for handling outgoing values
changed the visibility of ` cfsDir ` and ` dir0 ` variables in ` SegmentCoreReaders ` and ` SegmentReader ` classes to
add aggregatedao . hasmainthreadprofile ( ) to check if main thread profile exists
added validation to ensure annotation definitions are not allowed in a Buck rule to ensure that annotations are not allowed in a Buck rule with required
updated names from " greekLowerCase " , " irishLowerCase " , " uaX29UrlEmail " , and " turk
refactor HSSFSheet and Sheet classes to improve code organization to enhance maintainability and readability of the codebase
update webui discovery to use discoverysearchrequestprocessor instead of lucenesearchrequestprocessor
added a list to remove specific entries from the " America / Dawson " , " America / WhiteHorse " , "
updated the instantiation of SurfaceSyncGroup to include a string parameter to improve clarity and maintainability of the code
datamongo - 2392 - update gridfs template to use uuid instead of objectid
added unit tests for total size and bytesSoFar in DownloadManager and ShadowDownloadManager to ensure correct handling and retrieval of total size and bytesSoFar
refactor character insertion logic to use a boolean variable for clarity to improve readability and maintainability of the code
added a conditional check to return early if the target equals the target to optimize performance by avoiding unnecessary processing when the target equals the target
refactor ` afterSetStatements ` method in ` Lower . java ` and ` BlockLexicalContext . java ` to improve terminal handling logic
added hashCode methods to IntervalXYDelegate , IntervalXYCollection , and XYSeriesCollection classes using HashUtilities for consistent hash code generation to ensure consistent
remove nightly dependency from clientqueuedisruptiontest
reformatted code for improved readability and consistency to enhance maintainability and clarity of the code
updated the method name from serializeSpecialDoubleValues ( ) to serializeSpecialFloatingPointValues ( ) in Gson . java to improve clarity and
added calls to ` HttpMethed . waitProduceOneBlock ( httpnode ) ` and ` PublicMethed . waitProduceNext
added checks for non - empty subtag and improved language tag canonicalization in Locale . java and LanguageTag . java to enhance robustness
add kvm . ssh . to . agent = true config option to allow ssh to agent
removed the ` public ` access modifier from several constructors and methods in ` SchedulerWhen . java ` to enhance encapsulation by restricting access to
removed the import of PagerSlidingTabStrip from EmojiKeyboard . java to streamline the code by eliminating unnecessary dependencies
added a condition to check if the string contains a hyphen before processing it to ensure that the filter does not contain a hyphen in the input string
replace " natural order " with " Natural column order " in BrowserContentPane . java and update UISettings calls in DataBrowser .
replaced ` Arrays . copyOf ( in , 6 ) ` with ` Arrays . copyOf ( in , 6 ) ` in ` Utils . java
updated the write method to use htmlEncodeButNotSpace for remoteAddr to ensure proper handling of special characters in URLs
fix itemstatetriggerhandler . getitemstate ( ) return wrong item name ( # 3394 )
removed unnecessary synchronization in FastHttpDateFormat . java to streamline code by eliminating unnecessary synchronization
added functionality to manage file moving in a multi - threaded environment to improve resource management by allowing users to move files asynchronously
added a new method ` trigger ` to ` WrapTimer ` that accepts a ` String period ` parameter to facilitate the triggering of
added support for LOCAL _ DATE and SQL _ TIME types in DataTypeUtils to ensure proper handling of timestamp and date types in string processing
added a verbose option to the error message setting in AbstractStatusReporter to provide more detailed error reporting based on user preferences
added menu toggle functionality based on app . isMenuShowing ( ) in Header . java and ItemControls . java to enhance user interaction by
s2s vpn : allow vpn connection to be esitablished between different account and customer gateway
updated error handling logic in CursorReadingTask and added a new test for error handling in CursorReadingTaskUnitTests to improve error management and ensure
added logging for encrypted PDFs in PDFBoxThumbnail and PDFFilter classes to enhance error handling for PDF encryption issues
[ 3.0 ] fix a memory leak in curatorwatcherimpl . getchildren ( )
rename AnomalyDetectionResource and its test files to improve clarity and maintainability of the codebase
updated the method to use ` id ` instead of ` getSelectedItemId ( ) ` and added a call to ` deleteItem ( ) ` to
refactor Java6Assertions and Conditions classes to improve code structure to enhance maintainability and readability of the codebase
updated the return type of replaceOrderBulk method from Collection to List and changed the parameter type from Collection to String to enhance flexibility by allowing
refactor methods in FindScopeDepths . java to improve clarity and adjust parameter types to enhance code maintainability and facilitate better understanding of node - specific behavior
added a new utility class ` J9ConstantHelper ` to retrieve long values from a class to facilitate the retrieval of long values
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to validate concurrent modification exceptions on multi - threaded verification to
added ability to remove a roster from the transport session if it ' s offline .
replaced ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator . java ` and added a method to
updated comments in FunctionObjectCreator . java for clarity to improve code readability and maintainability
added null check for extTypeCustomDesers before initializing it in MessagePackFactory to avoid potential NullPointerExceptions when extTypeCustomDesers is
remove system . setproperty ( ` ` mockserver . logLevel ' ' , " ` warn ' ' )
removed the @ Test annotation from AbstractRegistryFactoryTest . java to streamline test execution by eliminating unnecessary tests
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline the code
updated scoreMap and termScoreMap to use String and Map < String , Map < Float , Float > > instead of Map < Float ,
updated bitwise operations to use ` < 0 ` instead of ` & 0x8000000000000000L ` and added an ` eq ` method to
added a head line style to the MainViewModel to enhance the visual appearance of error messages in the application
updated the notifyChange method to include a check for dark text support to ensure the notification only occurs when the dark text is supported
[ hotfix ] [ checkpointing ] remove unnecessary early check from checkpointrequestdecider
updated MAX _ POOL _ SIZE and KEEP _ ALIVE _ TIME _ MINUTES constants , and modified KEEP _ ALI
replaced ` filter ` with ` anyMatch ` for filtering providers in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java ` to
[ netbeans - 4892 ] add miss test requirements for non - windows server
fix for http : / / issues . apache . org / activemq / browse / amq - 4892 - add support for
[ py4j ] add throwables to the getreturnvalue ( ) method that throw a throwable .
added a Repeatable annotation to the Issue class in the Issue . java file to enhance the functionality of the Issue class by providing a repeatable
updated user properties key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and modified imports
updated socket connection logic to use a fallback if the " socksProxyHost " system property is not set to enhance flexibility by allowing dynamic
updated SlotReport and SlotStatus classes to improve clarity and consistency to enhance code readability and maintainability
removed the import of ClassUtils from ReflectionUtils . java to eliminate unnecessary dependencies and improve code clarity
replaced instances of ` HashSet ` with ` LinkedHashSet ` in ` SslContextFactory . java ` to ensure consistent iteration order for various protocols and cipher
added a static resource variable and logic to return it if it equals the system resource location to improve resource management by avoiding unnecessary retrieval of resources
added a constant for plaintext segment size in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel to improve code readability
added a test for handling invalid circuit breaker fallback URIs in ServerMvcIntegrationTests . java to ensure that the circuit breaker does not throw
added SSL support to the HttpClient to enhance security by allowing SSL connections in the application
replaced the resetBytesReadCounter ( ) method call with setSizeLimit ( 0x7FFFFFFF ) in PerformanceTest . java to
added ` preferAES ` property and its getter and setter methods in ` ProtectionPolicy ` and removed it from ` StandardProtectionPolicy ` to
( chore ) camel - opentelemetry : use log instead of system . out . println
[ ec2 ] remove the test for the load balancer instance operation
renamed the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to improve clarity by
added error handling for file creation in DiacriticTest . java to improve robustness by handling invalid path exceptions during file creation
hhh - 10688 : ignore followonlockingtest . testtimeouts on oracle 11
updated file handling in TextureUnpacker . java to check for the existence of the atlas image before reading to improve error handling and provide clearer
refactor AmbariManagementControllerImpl to use a lock for thread safety during configuration creation to ensure thread safety during concurrent access to the configuration
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test to verify that the ResultSet ' s close method does not close the result set to ensure proper resource management and prevent potential resource leak
simonstewart : remove inputstream . mark ( 0 ) and inputstream . reset ( ) .
added logic to remove pre - deleted databases from the schema list in ClusterSchemaManager to ensure that pre - deleted databases are removed from the schema
updated Http1xUpgradeToH2CHandler to remove " chunkedWriter " before writing to the context to ensure proper handling of chunked data
updated conditions for retrieving the last deleted item in EnhancedBrowseFragment and added a deleteItem method in FullDetailsFragment to enhance item deletion functionality
refactored CSSBank , CSSParser , and RuleFinder classes to implement RuleBank interface and refactored RuleFinder methods to improve code
added a try - catch block around the initialization and final method in JcaTlsCrypto . java to handle potential exceptions during cipher initialization and final
added two new Java files , TestMonomorphicObjectCall . java and Object . java , to implement and test object - related functionalities
replaced multiple calls to ` removeMetaDataSource ( session ) ` with ` toFront ( ) ` in ` DataBrowser . java ` and
hbase - 25819 fix the bug that memstore . shouldseek ( scan , store ) do n ' t take into account cf
[ hotfix ] [ table - common ] fix checkstyle violation in taskmanagerserviceconfiguration
modified AlterTimeSeriesStatement to accept a boolean parameter for isAlterView and adjusted the visibility of isAlterView in AlterTimeSeriesStatement to
fix regex pattern in condition . matchtext ( ) , add test case for matchtext ( )
added a try - catch block around the retrieval of the routing table builder in HelixBrokerStarter . java to handle potential exceptions during configuration
replaced ` putAll ` with ` putIfAbsent ` for adding parameters in ` HttpClientIntroductionAdvice . java ` to improve code read
( chore ) camel - jms : use char [ ] instead of string for jms password
bug 10650 : add recursive domain search to the list of domain in the list of domain
refactor equals and isUniformDistribution methods in Counters . java for improved clarity and consistency to enhance code readability and maintainability
modified the ` initialize ` method to accept a ` SimulationStatus ` object instead of a ` SimulationStatus ` parameter to improve clarity
truffle : add miss transfertointerpreterandinvalidate call to system . currenttimemillis ( ) .
added a variable ` var ` to the ` readObject ` method calls in ` PrettyPrinter . java ` to ensure the correct variable is used for
added a null check before creating a new Node in LRUDictionary . java to avoid potential NullPointerExceptions when accessing indexToNode
refactor DatagramSocket to use a temporary variable for clarity and introduce a checkFiltering method to improve code readability and maintainability
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in TestQueryDNS . java to ensure compatibility with the latest Jup
added a new file NutchServerInfo . java that defines server date , job , and running jobs to provide a structured way to manage
replaced ` OffsetAttribute ` and ` PositionLengthAttribute ` with ` AttributeSource ` in ` EdgeNGramTokenFilter . java ` to
added a timestamp field to the CqlInserter and updated ThriftInserter to use it to enhance timestamp handling by allowing users to
refactor DSAParameterGenerator to use BigInteger constants for prime strength validation to improve code readability and maintainability by reducing boilerplate
improve numberutils . tolongotouble ( ) to use float / double / long to double / long .
updated the mask condition in InetAddressSet . java and added unit tests in InetAddressSetTest . java to ensure correct masking behavior and validate the
added handling for ` SQLException ` and ` DataIntegrityViolationException ` in ` DefaultJdbcOptimisticLockingExceptionMapper ` to check for constraint violations to
http : / / issues . apache . org / jira / browse / amq - 4237 - remove setzeroifnotfound
added a new method ` addTab ` and ` insertTab ` to handle tab creation with specified font and icon sizes to enhance functionality for better
replaced array size ( ) calls with zero - length arrays in multiple files to improve performance by avoiding unnecessary array allocation
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironment and mockenvironmentbuilder
refactor conditional checks in MavenVisitor . java for clarity to improve readability and maintainability of the code
updated test cases to use " MOCK _ UPDATE " and " MOCK _ NAME _ REFRESH " instead of " MOCK _ NAME
added a new file FormatCheckingTest . java to test class format validation to ensure proper handling of illegal class names in Java processes
updated line number assignment in CodeGenerator . java to ensure correct line number assignment to improve code clarity and maintain consistency in line number handling
added a try - catch block around the retrieval of service properties in ConfigHelper . java to handle potential exceptions during configuration retrieval
added overloaded createToggle methods to RadioButton for creating toggle buttons with specified text , icon , command name , and command options to enhance functionality
updated cache initialization in LRUCache and increased CHUNK _ METADATA _ CACHE _ SIZE in MetadataQuerierByFileImpl to improve cache efficiency
int - 1347 make internalmessagebus and internalmessagebus name public so that it can be use .
added null check before quoting the symbolic name in OsgiManagementNameStrategy . java to avoid potential NullPointerException when symbolicName is null
add ` ` usemode ' ' system property to support external / external mode
added error handling when adding a shutdown hook in IOManager and improved logging in YARNSessionFIFOITCase to enhance error handling and
rename ` projectRoot ` to ` androidManifestPath ` and update related methods in ` RobolectricTestRunner ` to improve clarity and
updated the handling of notPropagated headers in AbstractMessageProducingHandler and added a test for it in AbstractReplyProducingMessageHandlerTests
refactor CompareMode class to improve code readability to enhance maintainability and facilitate future updates
added HasTests interface implementation to RustBinaryDescription and RustLibraryDescription classes to implement HasTests interface for testing functionality
updated drawable resource references for recent image placeholder in FileMessageVH . java to improve clarity and consistency in drawable resource usage
updated OnExitTest . java file to improve test coverage to enhance reliability of on - exit scenarios
added onUserPreferenceChanged method to recreate the taskbar in TaskbarManager to ensure the taskbar is refreshed when user preference changes
added reflection - based methods to handle iOS VM and hotspot dump in HeapDump . java to improve compatibility with IBM vms and enhance
camel - 13651 : camel - mybatis - use try - finally instead of try - with - resources to ensure the session be
simonstewart : fix the ie driver to work with the ie driver .
updated ` @ TriggerPatterns ` and removed unnecessary null declarations for collections in ` IteratorToFor . java ` to improve code readability and maintain
added a method to set the application state to STATE _ UNAVAILABLE to ensure the application state is properly managed when the application is unavailable
replaced assertions with conditional checks for position and limit in ByteBuffer and StringCharBuffer classes to improve code readability and maintainability by reducing
replaced ` toUri ( ) . toString ( ) ` with ` toUri ( ) . split ( i ) . split ( i )
updated array deletion logic and added multiple overloaded ` setEmpty ` methods across multiple classes to ensure proper handling of empty arrays and improve data integrity
changed enum declarations from package - private to public in VirtualAuthenticatorOptions . java to allow access to the Protocol and Transport enums from other packages
added a new Document instance and updated document addition in TestMultiPhraseQuery . java to improve document handling and ensure consistency in tests
add offline payment method to the assignTickets method and filter out pending reservation states to ensure that tickets are only assigned when the payment method is
added a timeout thread check and improved error handling in HttpChannelState . java to ensure proper synchronization and state management during timeout operations
updated logging statements to include class names and added debug level checks in multiple test classes to improve logging clarity and provide better debugging information during debugging
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
hbase - 25836 fix the consistency for the read command when use local _ serial and local _ serial
added support for " Home " model in HeosDiscoveryParticipant . java and updated property handling in HeosPlayerHandler . java to enhance device
added a ` Wait ` class and integrated it into ` PlainSelect ` and ` SelectDeParser ` to manage SQL wait timeouts to enhance SQL
refactor Neo4j to use AttributeController for property management to improve code readability and maintainability by using a unified AttributeController for
added a null check for serverName in SessionManager . java to ensure that both serverName and from are not null to avoid potential NullPointerExceptions
nifi - 10650 : deprecate rocksdb class in favor of nifi - controller - repository
updated the method to retrieve the " IS _ GRANTABLE " boolean value from results to ensure the correct retrieval of the value from the results
updated URL validation logic in JavascriptContext . java to ensure correct handling of URLs starting with " javascript : " to improve user experience by preventing
camel - cxf : fix the test failure of camel - cxf on macos
added conditional logic to handle column modification in LoadTestTool . java to ensure proper handling of column modifications based on new cf state
added Disposable interface implementation to Texture class to enable proper handling of disposable resources in the Texture class
updated WebappRegistrationHelper and related classes to use WebBundleDeployerHelper instead of WebappRegistrationHelper and modified extractWars flag to
use goquorum genesis file if goquorum privacy be enable
replace IOException with Throwable in HttpInput . java to improve error handling by using Throwable instead of IOException
added a condition to skip the " JP " country when the era is not " JP " in LocaleTest . java to ensure the
updated API operation references from ` Wrapper ` to ` HostResponseWrapper ` and ` ViewPrivilegeResponse ` to improve clarity and consistency in response
updated filter comparison logic in FilteredQuery . java to include getBoost ( ) method to ensure correct equality and hashing behavior based on the
reformatted the constructor of FileMenuFilter for improved readability to enhance code clarity and maintainability
ggb - 1343 fix for ` ` show logging ' ' and ` ` show logging ' '
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that CMS class unloading
added a check for empty entities before creating a new ItemTossEvent instance to prevent potential NullPointerExceptions when no entities are available
refactor ColumnMapKeyMappingPreparedStatementSetter to ColumnMapItemPreparedStatementSetter and update related methods to use ItemPreparedStatementSetter instead of KeyMappingPreparedStatement
fix compactionstest to use identityqueryfilter instead of range . forkeyrange
added null check for the ' type ' attribute in MiniAapt . java and created a corresponding test in MiniAaptTest . java to
added a new ` SPEL ` operator and a ` SpELJudge ` operator to the ` OperatorJudgeFactory ` class to
change comparison from ` = = ` to ` . equals ( ) ` for ` ordinalityType ` in ` LocalExecutionPlanner . java
bugfix # 20619 , use lookup . getdefault ( ) . lookup ( ) instead of service . providers ( ) . lookup (
updated import statements in ConscryptTest . java and removed an unused import in ConscryptTest . java to improve code clarity and
updated attribute resolution logic in ` AttributeResolution9 . java ` and fixed syntax errors in ` ShadowArscAssetManager9 . java ` to
updated the source and target options in the fullOptions list from " 1.5 " and " 1.5 " to " 6 " to
changed access modifier of ` extractMetadataColumns ` method from private to public and refactored project handling in ` PushProjectIntoTableSourceScan
added sorting functionality for localized names in the AboutActivity to ensure the dropdown item is sorted by their canonical and localized names
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added conditional logic to refresh shared preferences based on live streaming settings to ensure that shared preferences are only refreshed when live streaming is enabled
added an exception parameter to the MappingException constructor in AuditConfiguration . java to improve error handling by including the original exception context
[ hotfix ] [ test ] fix flaky test in fileconsumerpollstrategystoponrollbacktest
updated generic type declarations in SchemaLoader , CompositeTypeTest , and DynamicCompositeTypeTest to use generics to improve type safety and flexibility in
added a new method ` supportsTransport ` to the ` GitClientApplication ` class and updated ` RepositoryUrlPanel ` to utilize it to
added long press navigation handle prefix and updated getDelegatorName method implementations across multiple input consumer classes to provide clearer identification of input consumers and
updated version handling logic in ChangeParentPom . java to check for null mavenMetadata before collecting available versions to improve robustness by preventing
added a check for the " Large Page Support : ( \ w * ) " output in TestLargePageUseForHeap . java to
cloud _ usage db do n ' t crash if the usage db do n ' t exist
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4895 . java should
added a new test class ` TestObjectStreamClass ` to validate serialization behavior of ` ObjectStreamClass ` to ensure that the object stream class
refactor conditional checks for data center info in ZoneAwareDiscoveryFilter . java to improve readability and maintainability of the code
changed log level from error to warn in OpenTracingTracer . java to improve logging severity for tracing failures
added a toString ( ) method to the Generator class to provide a readable string representation of the generator
updated the handling of the ` dontquote ` variable in ` URI . java ` and added new test cases in ` Test . java ` to
added a check to throw an exception if the requested resource does not exist in ClusterControllerImpl . java to ensure that a valid resource is returned
updated error handling and logging for API response extraction in AccepttoApiUtils . java to improve error handling and provide clearer logging for invalid API
updated vertex buffer allocation logic in VertexBufferObject . java to ensure compatibility with Android versions below 5 and above
refactor SybaseASADatabase class for improved readability to enhance maintainability and facilitate future development
added a forceProjection flag to the HashJoinInfo class and updated related methods to handle projections to ensure that the HashJoinInfo can be
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to the ` sd ` variable for retrieval
added new flags for immutable PendingIntent flags and updated related methods to ensure proper handling of mutable pending intents across different Android SDK versions
added methods to handle read column IDs in HiveFileFormatUtils and updated references in HiveInputFormat to improve code readability and maintainability by
replaced instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper
added a private method ` DisplayTemporaryToast ( ) ` to display a temporary toast message to enhance user experience by providing a informative toast
added version handling in ServiceModule and a corresponding test in ServiceModuleTest to ensure correct service version resolution and ensure correct version resolution in tests
added a new test class ` RawSerializationTest ` for Gson serialization tests to ensure correct handling of various collection types in JSON output
simonstewart : rename seleniumserver to sslcertificategenerator so that it can be use in unit test
refactor loop structure to use indexed access instead of a for - each loop to improve readability and maintainability of the code
increased the timeout duration from 3 seconds to 60 seconds in ExpiringUrlCacheTests . java to allow for more time for resource access
added a new test method ` testNGramFilterPayload ` to validate the behavior of ` DelimitedPayload ` and ` NGram
refactor AclImpl class to improve code organization to enhance maintainability and readability of the codebase
removed duplicate test cases for different array sizes in EasyRandomTest . java to streamline the code by eliminating unnecessary test cases
citrixresourcebase . getconnection ( ) should catch exception and log it
added a thread - local mechanism to manage SSL connection termination to ensure proper handling of asynchronous operations in a concurrent environment
updated null checks for parent and actor in Actor . java and added ancestorsVisible method to improve clarity and functionality of actor visibility checks
added logging for deployment group name and error message in RollingUpdateOpFactory . java to improve visibility into deployment failure scenarios during rolling updates
[ hotfix ] [ table - common ] fix checkstyle violation in sinkprovider
added error handling for BadCredentialsException in DaoAuthenticationProvider and created a new event for handling username not found in LoggerListener to improve user
refactor AtMostXVerificationTest . java for improved readability to enhance maintainability and facilitate future development
updated the default QTYPE assignment to use LParserPlugin . DEFAULT _ QTYPE instead of OldLuceneQParserPlugin . NAME and added sorting
added Locale . US to SimpleDateFormat instantiation in WeekDateTest . java to ensure consistent date formatting across different locales
added an ` isInitialized ` method to ` ILanguageServer ` and overridden it in ` JavaLanguageServer ` , and created a new ` Loc
updated the test to use ` shouldHaveIdToken ` instead of ` idToken ` to ensure the test accurately reflects the presence of
added transaction management methods in DatabaseAdapter and improved error handling in GncXmlHandler to enhance transaction management and ensure consistency in database operations
refactor byte array handling in MimeType . java to use ByteArrayOutputStream instead of byte array to improve performance and readability of the file reading process
refactor exception handling logic in MessagingTemplate . java to improve clarity and maintainability to enhance code readability and maintainability by reducing
added an ` isAcceptable ` method to the ` AutoFormatVisitor ` class to check if the source file is an instance of ` J
added maximum buffered documents and RAM buffer size settings to TestIndexWriterMergePolicy to improve performance and resource management during index writing operations
clear the witness list in Manager . java and add a new test for updating witness capsules in ManagerTest . java to ensure that the witness
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by handling potential NoSuchElementException
[ hotfix ] remove log4j dependency from flume - agent
updated BasicAuthIntegrationTest and DaemonStream classes to improve authentication handling and thread management to enhance reliability of authentication metrics and ensure proper shutdown of
replaced HashMap with LinkedHashMap in DependencyUtil . java to ensure predictable iteration order of graph nodes
added error handling for internal errors in JerseySupport and its corresponding test in JerseySupportTest to improve error reporting and
refactor header validation logic in Http2TestBase . java to use a dedicated validateHeader method to improve code readability and maintainability by
added a switch statement to handle specific property keys in System . java to improve code clarity and ensure compatibility with specific Java versions
changed method parameter types from String to CharSequence in StringSubject and StringTest classes to enhance flexibility in handling different character sequences in string operations
add jfr . countertime ( ) and jfr . eventwriter ( ) to checkgraalintrinsics . java
rename IntUtilsTest class to PrimUtilsTest to clarify the purpose of the test class
updated the database connection factory to use a new variable ` ds2 ` to ensure the correct datasource is used based on the ` forCompactor
refactor DeploymentOptions class to improve code readability to enhance maintainability and facilitate future updates
updated the method signature of ` updateTextButtonWithDrawable ` to accept a ` Drawable ` instead of a ` Drawable . ConstantState ` to
updated ` XmlParser ` and ` YamlParser ` to use ` StringReader ` instead of ` ByteArrayInputStream ` and ` ByteArrayInputStream ` to improve resource management
added support for the " coalesce " function in the RexNodeConverter and SqlFunctionConverter classes to enable processing of coalesce expressions in
camel - 18131 : remove unused unit test from camel - hl7
added context class loader management in JavassistProxyFactoryFactory to ensure proper resource management during proxy factory generation
updated DefaultDateTypeAdapter constructor to accept ' final ' keyword for thread safety to ensure thread safety during serialization and deserialization processes
reformatted method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
refactor HttpClientRequestBase to simplify query handling by directly setting the URI and updating the query to improve code readability and maintainability by elim
removed the filterOldEntries ( ) method from FeedRefreshUpdater . java to streamline the code by eliminating unnecessary filtering of old entries
changed log level from fatal to warn in FSHLog . java to improve log severity for better debugging
refactor NodeMap to implement a new NodeMapIterable class to improve code organization and maintainability by separating the implementation of the Iterable class
updated variable names from ' predicate ' to ' subPredicate ' in DiscoveryClientRouteDefinitionLocator . java to improve clarity and consistency in variable
added a check for non - empty fields before adding aggregation operations in MongoRecordReader . java and modified RexToMongoTranslator . java to
defaultadminprovider : add the admin to the list if there be no admin
replaced MultiFields with SolrIndexSearcher for obtaining terms in multiple plugin classes to improve performance by avoiding unnecessary MultiFields usage
updated the return statement in ConstantBeanHolder to include the class name and identity hash code to improve clarity of the return statement for better debugging
simplified the handling of unresolved Java types in GroovyParserVisitor . java to improve code readability and maintainability
remove uninterruptible code from frameinfoqueryresult and javalangsubstitution
increase the timeout for seda blocking tests from 100 to 300 milliseconds to improve test reliability by allowing more time for tests to complete
added a new file ` package - info . java ` in the ` org . apache . lucene . core . testresources ` package to
updated the calculation of readLen in MessageUnpacker . java to ensure correct length calculation based on the buffer size
updated the import statement from ` io . micrometer . common . lang . Nullable ` to ` io . micrometer .
updated SQL query to include user information in IconDB to enhance data retrieval by including user information
http : / / issues . apache . org / jira / browse / amq - 4892 - fix the typo in the
do n ' t add whitelisted resource if it ' s not a classfile - only
added a method to fix baremetal foreign keys in the Upgrade410to420 . java file to ensure that the baremetal
removed the IJava2DRenderer interface from Java2DRenderer and deleted the IJava2DRenderer interface to simplify the codebase by elim
added onTearDown method to handle offload buffer emptying in DefaultAudioSink to ensure proper event handling when the audio track is stopped
added scheduling functionality to the UpstreamCacheManager by introducing a concurrent map for delay initialization and scheduled time to improve the management of upstream tasks by
refactor StreamType class to improve code organization to enhance maintainability and readability of the code
updated assertion message in Recording . java to include output status to improve clarity of failure messages for better debugging
updated FilestorePage , RootPage , and FilestorePage classes to include admin role checks and streamline user authentication logic to enhance
camel - 9444 : ignore camel - elasticsearch - rest test until it can be fix
added a check for the declaring class of the method in ExpressionControlBusFactoryBean . java to ensure that the method only proceeds if the
updated button labels from " leftButton " and " rightButton " to " buyAltcoin " and " buyWithFiat "
camel - 15836 : camel - restlet - do not allow route with invalid url
refactor createNextBlock methods to remove the ' final ' keyword from parameters to simplify method signatures and improve code readability
removed ` Serializable ` interface from ` BTreeMapJava ` and added ` serialCloneNoCatch ` method in ` JSR166Test `
added null check for cause before logging error messages in RuleEngineImpl . java to improve robustness by avoiding potential NullPointerExceptions during execution
reformatted conditional statement in Main . java for improved readability to enhance code clarity and maintainability
corrected a typo in the method call from ` mFilesAll ` to ` mFiles ` to improve code readability and maintain consistency
deleted the PlainVerifier . java file to remove unused code to streamline the codebase
added a check for triggeredFromAltTab in OverviewCommandHelper to close system windows when the action is triggered from theAltTab
replaced ` showDialog ( fda , sut ) ` with ` show ( fda . getSupportFragmentManager ( ) , `
added " UTF - 8 " parameter to MimeUtil . parseCharset calls in RestAdapter . java to ensure proper handling of character encoding in the
added a call to the superclass ' s deinitialize method in TextField . java to ensure proper initialization of the TextField component
replaced manual serialization with TestUtilities for LogFormat serialization to improve code readability and maintainability by utilizing utility methods
updated method calls to use ` previousUntilLastClause ( ) ` instead of ` previousClause ( ) . DURATION ( ) . getText ( )
added bounds checking for array size and improved exception handling in JAXWSExceptionBase . java to enhance error handling for negative array sizes and ensure
test ( refactor ) : migrate ctunresolvedimporttest to junit 5
increased the join duration from 10 seconds to 60 seconds in T6567415 . java to improve the responsiveness of the
[ hotfix ] [ table - common ] [ table - planner - blink ] [ table - planner - blink ] [ table -
added i18nSafe property and corresponding getter / setter methods in ShadowActivity , ShadowAlertDialog , ShadowTextView , ShadowToast ,
updated logging mechanism from Apache Commons Logging to Apache POILogger in POIFSFileSystem . java to ensure compatibility with the latest logging framework
updated alarm handling logic in InstarHandler . java to improve clarity and functionality to enhance code readability and maintainability by standardizing alarm
count remove operation count when delete a map
updated the status check in Response . java to use a switch statement for better readability to improve code clarity and maintainability by using a
added a method to find and retrieve the javac location in CheckResourceKeys . java to enhance functionality by allowing the retrieval of the Java file
add the ` ` project - name ' ' option to the ` ` create additional ' ' setting ( # 3396 )
added a new test class DeprecatedStubbingTest for verifying stubbing behavior to ensure proper functionality and error handling of deprecated stubbing functionalities
replaced the import of ` org . eclipse . jetty . server . DispatcherType ` with ` javax . servlet . DispatcherType `
[ tregex ] add miss pattern for partmodicalmodicalrelation and add unit test
add a system property to disable rsa key exchange by default
refactor variable names from ` output _ reader ` to ` reader ` for consistency and clarity to improve code readability and maintainability by
added methods to create and delete OAuth service and access token in PubSubAPI and SDMAPI classes to ensure proper cleanup and cleanup of OAuth services
updated interpolators from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView . java to align
added UpdateRegionLocationPlan to ConfigPhysicalPlan and updated logging levels in ProcedureManager , ProcedureManager , RegionMigrateProcedure , and DataNodeInternal
added a new file ` FileDialogLeakTest . java ` to test the finalization of ` FileDialog ` to ensure that resources are properly released and avoid memory leaks
updated package structure and import statements in TestOpenTableInCoprocessor . java to improve organization and clarity of the code structure
[ gr - 20684 ] fix uninterruptible implementation method in trufflefeature
[ flink - 20684 ] [ table - common ] remove split method from pbcodegenrowdeserializer and pbcodegenrow
updated condition to check for non - null disi in DrillSidewaysScorer . java to ensure that disi is not null before
[ exoplayer ] refresh manifest when prepare a media source .
updated Java version check from " 9 - ea " to " 9 - ea " in constants . java to ensure compatibility with Java 9 and above
updated FileReporter instantiation to explicitly cast String and File types to File to ensure proper handling of null values in the FileReporter class
updated the condition from ` isFalse ( ) ` to ` isTrue ( ) ` for checking end - to - end encryption keys to ensure correct
added navigation functionality to the action bar in DirectMessageConversation . java to enhance user experience by allowing navigation to the home button
added GET _ USER parameter to RpcServlet and updated PROTOCOL _ VERSION from 5 to 6 , and implemented user retrieval logic in RpcServlet to enhance
added an @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL . java for OS - specific configurations to enable the test for
replaced direct reference to ` startClass ` with a variable ` originalStartClass ` to improve code readability and maintainability
for long and double which be encode on two register in dalvik , add second register to register list .
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` event . getSuppliedResponse ( ) ` in ` TestAsync
kristianrosenvold : fix look and feel when use nimbus
updated the regex in AppPage . java to correct the version string to ensure compatibility with the latest versioning standards
refactor animation listener implementations in LauncherAppTransitionManagerImpl . java to improve readability and maintainability of the code
dumpedprivatekey : fix typo in exception message
updated the parameter from ` offerPayload . getExtraDataMap ( ) ` to ` newOfferPayload . getExtraDataMap ( ) ` to ensure the correct
updated milestoneParameters initialization to check if the milestone is open before creating a new one to ensure that the repository parameters are only added when the milestone
increase the pipe battery from 640 to 80 , in the wood pipe
updated the ` getStateMachineClusterInstance ` method to include ` blueprintName ` and ` blueprintRev ` parameters to enhance cluster key retrieval for better
set downgradeAllowed to true in UpgradePack . java and add a test for it in UpgradePackTest . java to ensure downgradeAllowed
updated XML scanning methods to use NameType . ATTRIBUTENAME instead of NameType . ATTRIBUTE to improve clarity and consistency in naming con
added an EMULATE _ SYSTEM _ LOADLIBRARY configuration and refactored library loading logic to utilize it to improve flexibility in
replaced instances of ` APP _ NAME _ COMPARATOR ` with a dedicated ` getAppNameComparator ` method in ` LauncherModel ` to
updated file handling in DefaultPlatformManager and FatJarStarter to ensure proper resource management and prevent potential resource leaks
updated the ` doTest ` method to include additional output in the assertion message to improve debugging by providing more context in assertion messages
camel - 1889 : camel - spring - dsl - add support for camel - spring - boot and camel - main - spring - boot
updated descriptions in MetricOptions . java to clarify that unsupported reporter configurations should only be applied when a reporter is configured , enhancing
hbase - 25827 fix testfulllogreconstruction test failure
added a reuseAddress property and its corresponding setter methods in DatagramSocketOptions . java to enable configuration of reuse address in DatagramSocketOptions
fix checkstyle issue in entity / glowserver / serverconfig . java
danielwagnerhall : remove deprecate locatable interface
updated error messages in VersionInfo . java to clarify that the field must be searchable and not indexed or documentValues to improve clarity
replaced ` equalityPredicateColumns ` with ` predicateColumns ` and updated related logic in ` StarTreeIndexOperator . java ` to improve
removed unnecessary whitespace in HandshakeHandler . java to improve code readability and maintainability
reformatted closing braces in Navigator . java to improve readability to enhance code clarity and maintainability
updated access modifiers in RecordReaderFactory . java and added a new RecordReaderFactoryTest . java file to improve encapsulation and add a test
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL queries in MongoQueryCreator and corresponding unit tests in MongoQuery
refactor grouping logic in CalciteSqlParser to utilize a new helper method for expressionOutsideGroupByList to improve code readability and maintain
replaced UnsupportedOperationException with Unsafe . invokeCleaner in MappedByteBuffer and modified FileChannelLinesSpliterator constructor to include AtomicInteger for buffer reference counting to
refactor code to use a local variable for the validator instance to improve code readability and maintainability by reducing redundancy
added a ` schedule ( ) ` method to ` CircuitBreakerImpl ` and updated ` CircuitBreakerTest ` to include ` TimeoutException ` to improve
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in Launcher . java to simplify the code by
change the property name from " webui . submit . upload . ajax " to " webui . submit . upload . progressbar " in Sub
updated the display name in TableExtRetrieverTest from " Retrieve view column privileges " to " Retrieve column privileges " and added a disabled annotation to
made the ` addExportedCount ` and ` getExportedCount ` methods synchronized in ` EntityGraph . java ` to ensure thread safety during
updated the import statement for ` IntRangeUtil1 ` from ` IntRangeUtil1 ` to ` IntRangeUtil . requireNonNegative `
updated character validation logic in HttpParser and added a new test for encoded headers in HttpParserTest to ensure proper handling of encoded HTTP headers and
updated the layout reference from ` trends _ activity ` to ` configuration _ activity ` in ` ConfigurePagerActivity . java ` to align
updated the output message in SLWTTextListing . java to include the position of the document to improve clarity of the found S
refactor ForceLeaderTest to conditionally use tlog replicas and introduce a new ForceLeaderWithTlogReplicasTest class to improve test
refactor Thread class to improve code readability to enhance maintainability and facilitate future updates
refactor template file handling in AbstractConfigurableTemplateResolver to support multiple template suffixes to improve flexibility and maintainability of template file management
camel - 14650 : camel - cxf - do n ' t set namespace for payload body in cxfbinding and cxfpayload
removed unnecessary whitespace in YamlRepresenter . java to improve code readability and maintain consistency
updated date formatting in ToChar . java to use String . format for better readability to improve code clarity and maintainability by using formatted
added configuration checks for valid transactions and write IDs in GenericUDTFGetSplits . java to ensure proper configuration for valid transaction and write IDs
updated logging statements and changed initialization of columnNames , columnTypeProperty , and columnTypes to use empty lists instead of empty lists to improve logging clarity
added a null check for the book path before loading it in DataHolder . java and introduced a new method hasNoData in Picture . java
refactor SSTDeserializer class and add a new test method in TestSSTDeserializer to ensure correct handling of SST records and improve test
updated the handling of grid column values in AppPreferencesImpl and ExtendedListFragment to use a constant instead of a hardcoded value to improve code
update output messages in Platform . java and ComparisonFailureWithFieldsTest . java to include " line - break characters " to improve clarity of
added a ` waitingForKeys ` field to ` DecoderInputBuffer ` and updated conditions in ` ClippingMediaPeriod ` and ` Sample
updated API paths from " / api / margin / v3 / accounts " to " / margin / v3 / accounts " in Okex
corrected the logic for determining the result of line coordinates in LineUtilitiesTests . java to ensure accurate comparison of coordinates within the specified tolerance
added error logging for varargs and old array syntax in JavacParser . java and created new classes VarargsAndOldArraySyntax . java
log a warning if defaultdrmsessionmanager be access on wrong thread .
added support for the " m ( ) " method in the VariableContext class and corresponding unit tests to enhance functionality and ensure correct handling of member
added unit tests for invalid compilation units and profile strings in ExperimentParserTest . java and removed the asNullableBoolean method from ExperimentJSONParser .
update buffer limit calculation in Piece . java and SharingPeer . java to ensure proper handling of buffer position and avoid potential null pointer exceptions
added HttpClientProperties and updated NettyRoutingFilter and NettyRoutingFilter classes to utilize a configurable response timeout to enhance configuration flexibility and
updated methods in ` CxxLibraryFactory ` and ` NativeLinkTargetGroup ` to use ` getTargetForPlatform ` instead of ` getNativeLink
camel - 18686 : added unit test for camel - rest - dsl to ensure that camel - rest - dsl and camel - rest -
added support for ` RexFieldAccess ` in ` ASTConverter ` and ` RexNodeConverter ` to enhance the handling of field access
replaced direct calls to ` QueryLogEntry . values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES ` to
relativize request uri only if there be no proxy predicate
modified certificate handling in PKCS12KeyStore and added trusted certificate loading in StoreSecretKeyTest to improve certificate management and enhance test coverage for trusted certificates
replaced ` canLinkTypeStatic ` with ` isReflectionClass ` and introduced ` checkReflectionAccess ` method in ` NativeObject ` and
removed the ` public ` access modifier from the constructors of ` CollisionMap ` in ` CollisionMap . java ` to restrict access to
marked the method ` getRawInputFromTransactionInput ` as deprecated and added a null check for ` input ` to indicate that the method should
refactor if - else statements into a switch statement in ConfigurationValueConverter . java and Main . java to improve code readability and maintainability
cloudstack - 4892 : remove unused region _ id from configurationserverimpl
added support for handling encrypted files in OldExcelExtractor and created a corresponding test case in TestOldExcelExtractor to improve error handling for unsupported encryption
add extra _ image _ build _ argument to mx _ java _ benchmarks . py
removed unnecessary conditional check before setting the visibility of the holder image to improve code readability and maintainability
increase the timeout in BatchingStateChangeUploadSchedulerTest from 10ms to 50ms and increase sleep duration to improve test reliability by allowing
updated directory creation logic in ShadowContext and refactored directory deletion in ContextTest to use a dedicated method to improve code clarity and ensure
refactor ExceptionFactory to use Class . forName for better readability and maintainability to enhance code clarity and maintainability by using more d
increased WAIT _ TIME _ MS from 10000ms to 60000ms to increase the wait time for instrumentation to improve responsiveness and
updated import statements and added support for AUD extension in ConnectOAuth2RequestFactory and ConnectTokenEnhancer to enhance flexibility in handling
[ hotfix ] [ kafka ] remove default value for breakonfirsterror
added a new constant ` selectableItemBackground ` with a value of 0x10a13 to facilitate the selection of items in
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements
updated event type assignment logic in TxnSetOperation . java to ensure correct event type handling for updates
added a new file ` ResumableRandomAccessFileListener . java ` and updated ` ResumableExternalDownload . java ` to use it
updated class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java
added logic to set the size of formats based on the index code in HSSFDataFormat . java and updated test cases in TestWorkbook
[ hotfix ] [ kafka ] deprecate flinkkafkaproducer in favor of flinkkafkapro
updated the calculation of compressedChunkLength in CompressedInputStream . java to use maxCompressedLength instead of compressedChunkLength to ensure accurate length validation
add idempotent repository for camel - spring - data - redis
fix a bug in the containerrepair . getitems ( ) method that use metadata here instead of damage
[ mng - 5452 ] fix legacylocalrepositorymanager to work with local repository layout
added checks for task manager initialization before starting the local task manager and improved error handling in multiple classes to ensure that tasks are only started if
added detailed information to the AbstractArtifactResolutionException class to enhance debugging capabilities for deploying files
updated the method ` getInternalTemporalPath ` to include ` mContext ` as a parameter in ` UploadFileOperation . java ` to ensure
updated imports and added a new method ` findByEntries ` in ` FeedEntryStatusDAO . java ` to utilize Apache Commons libraries and
added thread execution handling in ` ContextImpl . java ` and improved test cases in ` BlockedThreadCheckerTest . java ` to ensure
updated the ` instantiate ` method to include a ` formatterString ` parameter and added a null check for ` convertOrNull ` in ` FormatterConverter
updated LoadContactsTask . java to conditionally load vCards based on Android SDK version to ensure compatibility with newer Android versions that do not support
replaced calls to ` setRemoteAddress ` and ` setRemoteHostname ` with direct assignment of ` remoteAddress ` and ` remoteHostname ` to
added a null check for the realClass in Robolectric . java to ensure that a valid shadow class is annotated with @ Implements to
added a check for ` tlsMutualAuthenticationRequired ( ) ` in ` NettySslContextFactory ` and ` ExampleNettySslContextFactory `
updated import statements and added a test for handling SSL exceptions in BasicHttpTest . java to ensure proper handling of SSL exceptions when requesting plain HTTP
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to provide access to the consumer and producer instance
refactor conditional statements in PageChangeListener . java and enhance frame rendering in FrameRenderer . java to improve code readability and maintainability while ensuring
updated warning message from " address / subject / text " to " SMS " in CommunicationsManager . java to clarify the reason for
# 1188 - enh : add beandescriptor . draftqueryoptimise ( query < t > query ) and beandescriptordrafthelp
added error handling for IOException during file transfer operations in MultipartBody . java to improve robustness by handling potential IO exceptions during file transfer operations
fix checkstyle issue in util / cttypereference / java . lang . { executablefactory , zipfolder }
refactor EndpointConfiguration , SpEL , MainSupport , and SSLContextParameters classes to improve code organization and maintainability
fix attach file directory not be set to work directory
added LoadOptionsBuilder and updated SchemaCrawlerOptionsBuilder usage in AccessTest . java to enhance schema crawling capabilities by allowing dynamic configuration of
updated package structure and renamed test methods in TestLoadLegacyLibrary . java to improve organization and clarity of test cases
replace exception throwing with returning null in TestReader . java to improve error handling by returning null instead of throwing an exception
added methods to set name , enabled , and expanded properties in ProjectProperty to enhance functionality by allowing properties to be set based on their properties
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources to ensure proper resource management and avoid potential memory leaks
refactor DataStreamJob class to improve code organization to enhance maintainability and readability of the code
updated error handling in TestContentProvider to use try - with - resources for FileOutputStream to ensure proper resource management and avoid potential resource leaks
camel - 14650 : camel - cxf - fix the issue of cxfendpoint . getserviceclass do n ' t work with
added a condition to check if the protocol is " h2 - 14 " in the HTTP2ServerConnectionFactory to ensure proper handling of H2
refactor LambdaToMethod to use a ListBuffer for parameter symbols and add lambda handling in ClassFileVisitor to improve code clarity and ensure proper
fix a bug in the coordinationtransformer , so that it do n ' t fail if the whole model do n ' t match the whole
increase timeout in dl4jinceptionv3net . java from 5000ms to 60000ms
added a call to set the slop value for the MPQ to ensure the MPQ uses the correct phrase slop for processing
increased sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to improve test stability by allowing more time
updated the default value of the collector host from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink to
[ scene2d . ui ] use parallel mono . use ( ) instead of parallel mono .
updated visibility logic in EditShareFragment to include option availability check to ensure the correct view is displayed based on the available edit options
added a progress calculation in DepthController . java to ensure that the progress is within a minimum of 1.1 f to prevent potential errors during
[ java ] remove unused packetreceived method from session
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction to improve
added null checks for the service parameter in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUIAction classes to
[ pantheon ] add ` ` hidden ' ' flag to pantheon command help
added a method to do not instrument the " androidx . room . CoroutinesRoom $ Companion " class in AndroidConfigurer
modified the access modifier of the ` isSupported ` method in ` NegotiateAuthentication . java ` from private to public to allow access to the
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the initialization process by eliminating unnecessary code
camel - 14263 : fixed the issue of queue reply manager do n ' t work with concurrent consumer . thanks to david
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added methods to open and close MC blocks forTagged documents in PdfDocument . java to ensure proper handling of text rendering for tags in the PDF
log4j2 - 1343 add unit test for patternselector
simonstewart : do n ' t throw an exception if the hta mode do n ' t support it
added a new ` MwThankPostResponse ` class and updated the ` thank ` method in ` Service . java ` to support
updated ChannelEndPoint to implement SocketBased interface and modified SslConnection to use it to enhance socket management by implementing the SocketBased interface
updated the logic for setting the maximum size of the revoking store to ensure that the correct maximum size is applied based on the dynamic properties
added multiple test methods for implicit join scenarios in HQLTest . java to ensure correct behavior of the query execution with multiple calls and timestamps
normalize expected and actual strings in NonVisualRegressionTest to ensure consistent line endings across different operating systems
refactor IndexWriter and related classes to utilize a collection for filesToCommit and update reference counting logic to improve resource management and ensure proper
added @ Final annotation to multiple methods in BaseError . java to indicate that these methods are no longer final
added validation for consume user resource percentage in the ` ConsumeUserResourcePercentActuator ` class to ensure percentage values are within the valid range of [ 0 , 100 ]
added a conditional check for legacy login display in AuthenticatorActivity to ensure compatibility with legacy login settings based on user preferences
[ hotfix ] [ test ] fix typo in streamnetworkthroughputbenchmarktest
simplified the response page assignment logic in EditTeamPage . java to improve code readability and maintainability
updated debug log message to include exception details to improve clarity of error messages for better debugging
added a try - finally block to ensure the server socket channel is closed even if the live state is not set to false to improve resource management
refactor Rocket class to improve code organization to enhance maintainability and readability of the code
added a method ` createDynPartSpec ` to handle dynamic partition specifications in ` BaseSemanticAnalyzer ` to improve code readability and maintain
pdfbox - 4892 : use scientific notation for round half up factor instead of round hack
added a visitDirectory method to JarDirectoryStep and its implementation in DirectoryTraversal to enhance directory traversal functionality for better handling of directory entries
added a new file ` JWKSetEditor . java ` that extends ` PropertyEditorSupport ` to handle JWK set input to facilitate
refactor term handling in OrdsBlockTreeTermsWriter , BlockTreeTermsWriter , and VersionBlockTreeTermsWriter to use single PendingTerm
do n ' t use method . resolveparameterklasses in toespressonode . resolveparameterklasses ( ) .
changed the default value of " byIP " from true to false in Fetcher . java to disable the fetching process by IP based on the
simplified the conditional check for queryTimeout in StatementUtil . java to improve code readability and maintainability
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher , and included target configuration hash in HaskellGhciRuleIntegrationTest
refactor ReplicaPosition class to improve code readability to enhance maintainability and facilitate future updates
cloudstack - 4892 : fix the bug that network usage stats update task be not run immediately after the initial delay be set .
updated interpolators to use a static final variable FINAL _ FRAME in QuickstepAtomicAnimationFactory , AllAppsTransitionController , and Interpolators
adjusted the swipe length calculation in the nav bar ' s position based on display density to improve the visual appearance of the nav bar based
added a new module - info . java file for the Jetty HTTP server module to facilitate the use of Jetty ' s
updated JsonType and JsonTest to use MY _ JSON _ OBJ instead of a hardcoded string to enhance code readability and prevent potential
removed unnecessary parentheses around the method call in ResourceResolverBean . java to improve code readability and maintainability
[ hotfix ] [ checkpointing ] use get instead of getOptional and nodefaultvalue
updated ` reportInnerClassReferences ` method to accept ` Element ` instead of ` TypeElement ` and added support for package annotations in ` InnerClasses
updated the argument passed to ` cmd ` in ` TimestampCheck . java ` to include the value of ` test . tool . vm . opts
replaced ` FluentIterable ` with ` MoreCollectors ` for stream processing in ` ChromeTraceBuildListenerTest . java ` to improve code
[ dubbo - 2594 ] fix register config not work in jdk 1.4 . 0 ( # 8274 )
fix security otr session not be reset when security otr mode change
added outline size and transparency properties to the PreviewProperty class and updated the renderProcessing method in NodeLabelRenderer to support customizable outline settings for
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated the boolean value from false to true in Win32FontManager . java to enable the functionality of the font management feature
added null check for the variable ' v ' before visiting it to avoid potential NullPointerExceptions when ' v ' is null
do n ' t fail batch compilation if there be no classpath
added alignment point and RectangleAnchor properties and corresponding getter / setter methods to LabelBlock . java , and updated label drawing logic in LabelBlockTests
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the codebase
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
changed the type of ` isLoopback ` from ` boolean ` to ` Boolean ` and added null checks for ` networkInterface ` to improve
added Locale parameter to the fromRfc1123DateString method and updated related tests to use Locale . US to ensure consistent date formatting across different locales
updated the download method in FileDownloadViaProxyTest to include a specific PDF extension to ensure that missing files are not processed as PDF files
nifi - 10750 : add output no hit property to json - query elasticsearch
fix ( serviceoffer ) : remove aggregation ratio from service offer update
refactor switch - case statements in Election . java to use a try - finally block for clarity to improve code readability and maintain
remove uncheckrun ( ) from readfilesp . poll ( )
refactor widget handling logic in PageChangeListener . java to improve clarity and efficiency to enhance readability and maintainability of the code
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` HSSFWorkbook ` , and ` RecordInputStream ` classes
added a try - catch block around the unregisterInvalidatedSessions ( ) method to handle potential exceptions during session unregistration to improve error handling and
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
updated the status message from " reachable = false " to " reachable " in HueLightHandler . java to clarify that the bridge
add a loading flag to fmlclienthandler and add a method to check if loading be active . close # 74303
updated return statements in UI . java and BlockInventoryFragment . java to include " unit . millions " and " unit . thousands
refactor MessagePackParser to use a switch statement for type handling and add a new BinKeyPojo class to improve code clarity and
added parameterized tests for querying reserved words as relationships in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure correct handling of reserved
added unit tests for serialization and deserialization of nested maps in MapTest . java to ensure correct handling and serialization of nested maps in JSON format
added offset calculations for x2 and y2 in GeometryUtils . java to ensure correct positioning based on offset values
refactor sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to use SortingOrderDialogFragment to improve code readability and maintain
do n ' t exit if there be no testplan
updated method names in ` GeneratedEntityTranslator ` and changed ` dbmsType ` and ` dbmsOperationHandler ` to ` Lazy < Db
modified the handling of ` argIdent ` to include a null check before adding it to ` parameters ` to ensure that ` argIdent ` is
updated the default protocol in JettyHttpComponent9 from " SSL - HTTP / 1.1 " to " SSL - HTTP / 1.
set displayVolume to true in VolumeVO . java to enable display volume functionality by default
updated the ` version ` method to accept a boolean parameter and improved message retrieval logic to enhance clarity and maintainability of the code by
updated logic in ChangeLogParameters to check for global change logs instead of a single change log to improve handling of global change logs and ensure correct
change log level to not spam log when run in cmt / ejb environment
hhh - 14663 skip setoperationtest due to sql format issue
added multiple calls to startHandshake ( ) and setSoTimeout ( ) in sslSocket . java to ensure proper handshake and socket timeout settings are
updated action bar size calculations in multiple fragments to account for the MainActivity ' s popup status to ensure correct status bar height based on the Main
change the default value of the CHA option from false to true in EspressoOptions . java and change class modifiers from DefaultClassHierarchy
http : / / issues . apache . org / jira / browse / amq - 4892 - add debug log for thread context
refactor JodaTimeRangeRandomizersTest to use assertJ assertions instead of manual data provider to improve code readability and reduce boiler
updated the handling of Jakarta EE version in WebDescriptor . java to include a redirectEntity method for different Jakarta
fix : add readiness . isready ( ) method to be able to determine if a node be ready
change liveEndpoints to handler . endpoints in StorageProxy . java to ensure correct retrieval of endpoints from the handler
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the new version of the RPC
added security checks in ObjectStreamClass and ObjectStreamField to ensure package access only occurs when the security manager is active
removed unused imports and changed visibility of UGSCommandCount to private in XLCDCommunicator . java to improve code clarity and
refactor DefaultMetricsTagProvider to use an unmodifiableMap for tags instead of an immutable ImmutableMap to improve code readability and maintainability by redu
updated the addition of the MockBrowserTest suite in ClientDriverSuite . java to ensure the MockBrowserTest suite is correctly added to the test
change default level from OFF to ERROR in opt2 to reflect error level instead of OFF
changed variable declarations from ` private ` to ` private final ` for several fields in ` IconNormalizer . java ` to ensure immutability of
added a boolean flag ` firstCallPrepareDo ` and modified the prefix method invocation logic in ` PrepareInterceptor ` to allow control over the first
refactor workspace state management and focus handling in Launcher . java and Workspace . java to improve code clarity and maintainability by consolidating
replaced usage of ` asEagerSingleton ( ) ` with ` @ Singleton ( ) ` in ` AuthWithStoreFeature ` and `
added a boolean parameter ` ignoreInvisibleAssociations ` to the ` incomingAssociations ` method in ` GraphicalDataModelView . java ` to control
cloudstack - 4892 : remove the private ip capacity from the pod if it do n ' t exist
updated the URL construction in ProfileServlet . java to include instructions for empty diagram and Linux 4.6 + to improve user guidance for asynchronous
added support for optional fields in the model model and created a new class ` RequiredFieldModel ` to ensure required fields are applied correctly to the
rename ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreEnvironmentBootstrapConfiguration ` classes to ` CasCoreWatchAutoConfiguration ` and ` Cas
refactor FeatureFlags class to improve code readability to enhance maintainability and facilitate future updates
updated the initialization of StringBuilder and modified the unique identifier formatting in ConfigStore . java , and added a new test case in CommonSetup . java
added conditional logic to set picture in TimeLineCursorAdapter and TimelineArrayAdapter to ensure that the picture is set to false if it is
updated error messages for compaction on full CRUD tables in HiveConf . java to clarify that compaction actions are always run on insert -
added a null check for the storage path before verifying if mWaitingToSend is down to ensure that a valid storage path is available before proceed
replaced ` resizeThreshold < = keysAssigned ` checks with a ` checkResize ( ) ` method across multiple classes to improve code readability
refactor LDAPConnectionService to improve connection handling logic to enhance reliability and maintainability of LDAP connection management
deprecate @ xmlattribute ( required = true ) in aggregatedefinition , since it be n ' t require
removed debug tracing log statements from TouchInteractionService , RecentsAnimationDeviceState , and RecentsAnimationDeviceState classes to streamline
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoft
updated assertions in TestMultiSearcher to compare lengths between hits2 and hits3 to ensure accuracy of length comparisons in tests
added a new file ` LucenePackage . java ` that defines a private static class ` LucenePackage ` to provide a centralized way
corrected the calculation of sizeInBytes in RAMDirectory . java to ensure correct handling of the existing size in addition to the existing size
added estimate method to GenericUDAFBloomFilter , GenericUDAFBloomFilter , and GenericUDAFBloomFilter classes , and
added a null check for the getDrawerToggle ( ) method before accessing its properties to avoid potential NullPointerExceptions during animation
( chore ) camel - spring - security : document unused parameter
added logic to set the ` scanModules ` variable based on ` overrideClasspath ` and ` enableSystemJarsAndModules ` based on class
[ msbib ] fix bug in msb export format
added ZooKeeper awareness checks and refactored core recovery cancellation logic in CoreContainer . java to improve core state management and ensure proper recovery cancellation
replaced direct calls to ` System . currentTimeMillis ( ) ` with a custom ` currentTimeMillis ( ) ` method and adjusted time calculations to improve code
removed debug print statements and simplified null and size checks in RepoEditView . java to improve code readability and maintainability by reducing unnecessary
[ hotfix ] [ doc ] fix typo in pgproperty
added security - related fields and updated the SecurityExpressionRoot initialization in SecurityEvaluationContextExtension . java to enhance security configuration and ensure default fields are
added a check to set exponentSize if it is zero in DHParameterGenerator to ensure exponentSize is correctly calculated based on primeSize
replaced direct usage of ` ocLocalFolder ` with a new method ` getUsableSpace ` in multiple files to improve code readability and
updated the ` combine ` method in ` DistinctSqlAggregation ` to include accumulate functionality to enhance the aggregation process by allowing multiple values to be
added a test method to verify post - login activities on successful authentication in UserServiceTest . java to ensure correct functionality of post - login activities
refactor ExtractorSpanishStrippedVerb to accept a dictionary path and create a new ExtractorSpanishStrippedVerb instance to allow
refactor character array contains logic in CharArraySet and add a new test case in TestCharArraySet to improve code clarity and ensure correct
updated track type validation logic in MuxerWrapper . java to improve clarity and ensure proper handling of track formats
replaced instances of ` JsBundleAndroid ` with ` AndroidPackageable ` in ` JsBundleGenrule ` and updated asset directory handling to
set character encoding to " UTF - 8 " in PinotClientRequestServlet and refactor string indexing logic in StringDictionary to ensure proper handling of
changed the case from " Logical Analyzer " to " Logic Analyzer " and updated the applications array to use drawable resources instead of an array
replaced direct instantiation of Vector with a static instance variable and added a conditional check before creating a new instance to improve performance by avoiding unnecessary
removed the call to syncMetaLeader ( ) in CMManager . java to streamline the code by eliminating unnecessary synchronization
show no response for contribution question that do n ' t have any response
added TestLoggingExtension import and annotated DiagramRendererTest with TestLoggingExtension in DiagramRendererTest . java to enable logging functionality for testing
updated method signatures to include a ` mapUnderscoreToCamelCase ` parameter across multiple classes to enhance property mapping functionality by allowing case - insensitive mapping
added support for the VIOMI Internet electric water heater 1A ( 60L ) device type in MiIoDevices . java
replaced direct calls to getSslSessionData ( ) with a local variable for SSL session data to improve code readability and maintainability by
added a new file ` CreateNewSpreadsheet . java ` for creating Excel sheets with a comment to facilitate the creation of Excel
updated cache properties to replace ` Duration ` with ` long ` for time - to - live in ` CacheProperties ` to improve clarity and
updated references from CONTENT _ URI to CONTENT _ URI _ NO _ NOTIFICATION and modified icon retrieval logic to improve notification handling and ensure proper icon
updated the testCompile group version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to reflect the latest
replaced ` lucidaFontName ` with ` this ` in ` SunFontManager . java ` to ensure thread safety when accessing
added a condition to check if the variable ' c ' is equal to ' < ' in DocClassUtil . java to ensure proper handling of
removed ` String . format ` from the return statement in ` Workspace . java ` to simplify string formatting for better readability and maintainability
added a message to indicate no validation errors in ValidateCommandStep . java to provide user feedback when a validation fails
updated imports and refactored the configuration logic in IntegrationTestContextLoader . java to utilize Spring ' s DefaultResourceLoader , FileSystemResource
modified scroll handling logic in Component . java and adjusted component retrieval in JavaSEPort . java to improve component responsiveness and ensure proper handling
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new class ` ClientStat ` and updated method signatures in ` StatsService ` , ` StatsService ` , and ` DefaultStatsService
updated regex replacement logic in CellContentConverter . java to include newline characters to ensure proper handling of special characters in the expression
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 489 . java
mondrian : fix typo find by codespell on fossies . org
added thread stack printing functionality in ProcessTools and updated launcher permission handling in CustomLauncherTest and LocalManagementTest to enhance debugging capabilities and ensure proper
remove tumblrtest . testembeddedimage from tumblr
added a conditional check to convert storeType only if the symbol has a slot for the storeType to ensure that conversion only occurs when the symbol
refactored the initialization logic in ContainerMediaChunk . java and InitializationChunk . java to ensure proper initialization of data sources when nextLoadPosition
replaced deprecated IndexWriterConfig and OpenMode with PrintStreamInfoStream and added a custom toString method for better readability to improve code maintainability
tika - 1348 -- add the ability to configure a dynamic service loader in tika - config .
updated import statements and replaced generic types in DocLint and DocLintTester classes to improve code clarity and ensure proper handling of package -
added a new constant IMPORT _ CMD in DataImportHandler and modified the conditional check in DataImporter to include it to enhance functionality by allowing the
added a test to verify that modifications to inner classes are not modified when ` ignoreDefinition ` is true to ensure that inner classes are not modified
removed unused import of android . util . Log in JettyService . java to clean up the code and improve readability
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method to handle workspace screens to ensure items are
added a new " / quitquitquitquit " servlet in Jetty7AppServer and created a new " / quitquitquit " servlet
improve the handling of multi - row transformation in LLRealtimeSegmentDataManager . java to enhance code clarity and maintainability by
added a check for Windows OS and filtered Teredo display names if they do not start with " Teredo " to ensure compatibility with
fix npe in addcontactdialog when contact be not connect
replaced ` registerBeanDefinition ` with ` registerBeanComponentDefinition ` in ` AuthenticationConfigBuilder . java ` to streamline the registration process
updated drawBitmap method to use null parameters instead of r . left and r . top to simplify drawing logic for better performance and readability
fixmeitrack , totem , meitrack , totem protocol decoder
changed access modifiers of ` getFontPath ` and ` getPlatformFontPath ` methods in ` SunFontManager ` and ` X11FontManager `
added multiple @ Deprecated annotations to EnhancedRandom . java to indicate that these classes are outdated and should no longer be used
[ hotfix ] [ test ] catch ExecutionException in clientmapstoretest . testmapstore ( )
add ` ` keepemptysentences ' ' option to control whether to keep empty sentence
added checks for artifact creation failures and changed return type of createArtifactSubdirectory method to return a boolean to improve error handling and provide clearer
replaced the implementation of ` IDELazyTreeLoader ` with ` JavaCompilerService . NO _ MODULE _ COMPILER ` in multiple
added a null check for the answer in DirectAgentAttache . java to ensure that a null answer is returned and log a warning if it
moved the sendEmail method from a try - catch block to a throws MessagingException to simplify the method signature and improve error handling
fix pipeitemsobsidian and pipeitemsobsidian to return early if they be null
updated date parsing methods in DateFormatEvaluator and FileListEntityProcessor to accept a Locale parameter to enhance flexibility in parsing math functions across different locales
added a checkbox for including decals in the storage options to allow users to customize their storage preferences by opting to include decals
updated generateDocumentation method to include a null parameter in Liquibase . java and added a suppression warning in LiquibaseTest
updated HiveProtoLoggingHook and TestHiveProtoLoggingHook to enhance performance logging capabilities and improve test coverage to enhance performance monitoring and ensure accurate
corrected the spelling of " Begining " to " Beginning " in multiple files to ensure consistency and clarity in log messages
updated the class file version check in ignoreRecordAttribute . java to include the major version to ensure the output accurately reflects the current version
added a new test class LdapPasswordAuthenticationTest to validate LDAP authentication functionality to ensure correct handling of user credentials in the LDAP authentication process
updated import statements in TaskCompiler . java to use BasicStatsNoJobTask instead of OrcInputFormat to improve code clarity and ensure
fix a nullpointerexception when reload on save ( # 1748 )
refactor VisibleAdvance class to improve code readability to enhance maintainability and facilitate future development
fix : do n ' t try to start the informer if it fail to start
added support for dynamic number columns in EdgeDataTable and NodeDataTable to enhance functionality to support dynamic number columns in the data table
added null checks for groupId , artifactId , version , and version in ResolvedGroupArtifactVersion initialization to enhance code robustness by ensuring non - null
updated the assignment of the API variable to handle null cases to improve robustness by preventing potential NullPointerExceptions when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code readability and maintainability
added shader loading and destruction functionality to PhotoPanel and FlameRenderer classes to enhance texture management and improve error handling during texture disposal
updated scene size in FxWindow . java and added a new context menu in InsnListEditor . java and InsnProxyListEditor
added bounds checking for the first character in CSSParser . java to ensure that the index does not exceed the defined length and avoid potential ArrayIndexOutOfBoundsException
added a check for the " isDecorated " property and set default look - and - feel decoration in UIServiceImpl . java to
removed the ' NOT EXISTS ' keyword from the SQL query in HostRoleCommandDAO . java to simplify the SQL query and improve code readability
updated test function names and return values in LJ1200Message . java to improve clarity and consistency in naming conventions
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability to enhance code readability and maintainability
changed the type of mHostDb from HostDatabase to ColorStorage to enable color storage functionality for better user experience
refactor String class to improve code readability to enhance maintainability and facilitate future development
removed unused SLF4J logger imports from multiple Java files to improve code cleanliness and maintainability
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to provide a way to retrieve all entries from the
added assertions to verify the functionality of the sendcoin method in MultiSign34 . java to ensure that the sendcoin function behaves as expected
updated JUnit imports from ` org . junit . Test ` to ` org . junit . Jupiter . api ` in CU
use system . getproperty ( ` ` path . separator ' ' ) instead of hardcoded ` ` ; ' '
changed the access modifier of the augmentSuccessViewModelObjects method from static to non - static to allow subclasses to access the method from other classes
added assertions for existence of properties in ` InheritanceTest . java ` and changed method calls in ` TestUtil . java ` to ` getDeclaredField
removed the configuration parameter from Outlink instantiation in multiple parser classes to simplify the creation of Outlink objects by eliminating unnecessary configuration
removed the ` LexicalContext ` parameter from several methods in the ` Lower ` , ` CopyFinally ` , and ` GlobalMath ` classes
added imports for ` RemoveUnusedImports ` and modified type expression handling in ` UseLambdaForFunctionalInterface . java ` , and modified type
replaced the method ` appendClassSelector ` with ` createFileSet ` in ` TestNGAntTask . java ` to simplify the code by
removed unsupported root input check for Aggregate in HiveCardinalityPreservingJoinOptimization . java to simplify the code by eliminating unnecessary checks
[ iforge ] add registryevent . pool to allow registry to be use by the registry manager .
removed redundant assignments of x3 and y3 assignments in Intersector . java to streamline code for better readability and maintainability
added default methods for sbe decoding length and limit in MessageDecoderFlyweight to ensure compatibility with the SBE version of MessageDecoderF
[ hotfix ] [ test ] add health check for elasticsearch container
[ java ] use bytebuffer . copyof ( byte [ ] , int ) instead of copy ( byte [ ] , int ) to avoid
added version ID handling and updated cluster definition methods in ClusterDefinition and GSInstallerClusterProvider classes to improve clarity and functionality to support version
camel - 14263 : remove unused setconfiguration method from ftpendpoint
[ zeppelin - 4892 ] set status status to ready when load dependency fails
modified the local assignment logic in Gen . java and added a new test class NoLocalsMustBeReservedForDCEedVarsTest .
added a check for basic constraints in ` ForwardBuilder . java ` and created a new class ` BuildEEBasicConstraints . java ` to enhance
added a method to initialize the step after the database connection in JdbcPostgresqlDAO to ensure that values with the same time will be upserted
updated WebSocket implementation to set maximum message size and added buffer size validation in AbstractWebSocketConnection to improve WebSocket responsiveness and ensure input buffer size
lucene - 4892 : fix indexreader . undeleteall ( ) to prevent double write
added null check for scopes in ClientRegistration . java and updated test cases in ClientRegistrationTests . java to ensure that null scopes are handled correctly
added null checks for orderBy before adding the productSort and explanation to prevent potential NullPointerExceptions when orderBy is null
updated import statement from JUnit Assert to Hamcrest MatcherAssert in ClusterEntrypointTest . java to utilize Hamcrest
cloudstack - 6892 : do n ' t delete vm from backed up state if vm be not in kvm
added a variable for the initialization of the Hive log4j message to facilitate debugging by tracking the initialization of the log4j
added a check for the size of tasks before retrieving the first element to avoid potential NullPointerExceptions when there are no tasks
do n ' t try to delete pubsub node if it do n ' t exist .
[ iotdb - 4892 ] fix bug in relationentity . delete ( ) and fix typo
added checks for empty results in Code128Reader , Code39Reader , and TruePositivesBlackBoxTestCase classes to ensure that empty barcode
changed TreeSet to LinkedHashSet in SSLContextImpl . java and SystemPropCipherSuitesOrder . java to maintain order of cipher suites
refactor control character validation in Escaper . java and update expected string formatting in InternationalizationTest . java to improve code readability
updated ` ProviderSqlSource ` and ` SqlProviderTest ` to support ` CharSequence ` instead of ` String ` to enhance flexibility in handling
updated import statements and added null checks for aliasChildren in InternalMNode . java to improve code robustness and prevent potential NullPointerExceptions
added a method to calculate the layout transition offset for a page in PagedView . java and updated scroll delta calculation in Workspace . java to
renamed variable ` synthetic ` to ` pruned ` and updated references accordingly to improve clarity and consistency in naming conventions
added method . setAccessible ( true ) to WidgetInterceptor . java to ensure method accessibility for better encapsulation
added a condition to check if the value is not " database . server . id " before setting the literal initializer to ensure that the default value
update ripper to use firefox 537.36 instead of macosx 10.7
added a menu item to the popup in BasicSystemUtils . java to display the server ' s look - up address to enhance user experience by
updated value handling in HandleGetter and HandleGetter classes to use a constant for the actual value name to improve code clarity and maintainability by
added a try - catch block around the record creation in EncryptedSlideShow . java to handle potential ArrayIndexOutOfBoundsException when building the record
updated debug logging messages and improved file path handling in multiple classes to enhance clarity and maintainability of the code
added a null check before calling loadBattlePassManager ( ) in Player . java to avoid potential null pointer exceptions during avatar loading
updated Docker image configuration options in PortForwardingContainer . java to include support for agent and TCP forwarding features
added a large object array and called System . gc ( ) in ThresholdTest . java to ensure proper garbage collection behavior during tests
updated conditional checks in StdErrLog . java and added new debug logging in StdErrLogTest . java to ensure correct logging behavior based on
fixed - rremoteservice . getremoterivce ( ) method throw npe if service name be not specify . #
added ` isSelected ( ) ` and ` setSelected ( boolean b ) ` methods to ` MultiButton ` class and updated ` invertFirstTwoEntries
updated the activity name from UpNextActivity to NextUpActivity in CustomPlaybackOverlayFragment . java to align the activity ' s functionality with the
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4892 . java should
refactor RedisReactiveHealthIndicator to include ReactiveRedisConnection as a parameter to improve resource management and ensure proper closure of Redis connections
refactor background color retrieval and brand color retrieval in ProgramGridCell and Utils classes to improve code clarity and maintainability by centralizing theme
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
removed multiple type adapters from the builder in ToolingApiLauncher . java to streamline type adapter configuration for better readability and maintainability
removed unnecessary whitespace in TestPayloadCheckQuery . java to improve code readability and maintainability
added a mask parameter to the ConsoleReader ' s print method and modified the ConsoleReaderTest to include a test for reading lines with a mask
added user handling and command line output in BaseCommand . java to improve user feedback during the exit process
move test class to org . graal . compiler . api . test and move it into org . graalvm . compiler . test package
[ hotfix ] [ runtime ] remove unused constructor in slotsharinggroup
added a condition to check if the " one . util . streamex . emulateJava8 " system property to ensure Java9Specific is
updated file paths in DecalTest , MusicTest , and SimpleDecalTest to use " sys . png " instead of " wheel
removed redundant calls to registerReceiver and unregisterReceiver in Launcher . java to streamline code for better readability and maintainability
updated import statements in HostsRemovedEvent . java to ensure consistency in code structure
added a new boolean field ` allowIntrospection ` and updated related methods in ` ClientDetailsEntity ` and ` IntrospectionEndpoint ` to enhance
replaced direct calls to ` write ` with ` writer . write ` and added a new ` htmlEncode ` method to handle HTML encoding to
updated the documentation for PhraseQuery , PhrasePrefixQuery , and SpanQuery in the Query class to improve clarity and organization of query
use ` isempty ( ) ` instead of ` size ( ) = = 0 `
refactor ` isLiteralString ` and ` isThisElementAnOperandInABinaryStringConcatenation ` methods to use ` firstEnclosing `
updated method signatures in AbstractAssert , DateAssert , Assert , DateAssert , and ExtensionPoints classes to use Object instead of A to enhance type
updated the ThrowingFunction interface to use a generic type T instead of a generic Object to improve type safety and clarity in the code structure
refactored ` getUploaderBehaviour ` and ` setUploaderBehaviour ` methods in ` AppPreferences ` and ` PreferenceManager ` to
fix ( pretty - printing ) : use query . getElements ( ) instead of query . getElements ( ) in typefactory . getelements ( )
replaced the direct instantiation of BitmapDrawable with Robolectric ' s newInstanceOf method to improve compatibility with Robolectric ' s
corrected the spelling of " isValidSEnding " to " isValidEnEnding " in DutchStemmer . java to ensure proper
updated the page indicator resource from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to align the page indicator
added a volatile integer variable ` reinvocations ` and updated the logging format in ` BasicInvocation . java ` to track the number of backups
updated the calculation for topPadding in DefaultLookAndFeel . java to correctly account for the inner height of the text component to ensure proper
added a break statement in the Recognize . java file to ensure proper flow control in the code
added preference - based haptic feedback based on home screen lock in multiple classes to enhance user experience by providing haptic feedback based on
updated formula handling logic in ExcelBatchReader and added unit tests in TestExcelFormat to improve formula processing and ensure correct functionality for text and numeric
fixed bug 137047 - immutablefield no long report false positive on anonymous inner class .
added a private variable ` userAgent ` to ` CommaFeedConfiguration ` and modified ` HttpGetter ` to retrieve it to ensure user agent is
updated the ` @ XmlAttribute ` annotation to be ` required = true ` in ` AvroDataFormat ` and ` BarcodeDataFormat `
changed log level from info to debug for file not found messages to reduce log verbosity for better debugging
rename QueueTest class to QueuedPipeTest to clarify the purpose of the test class
updated the version check logic in BukkitMain . java to use a dynamic method for retrieving the getUniqueID to ensure compatibility with OfflinePlayer
camel - 16462 : camel - core - optimize routescollector to handle empty include pattern
added a vertexColor property and updated color handling logic in PShape3D . java to enable dynamic coloring based on the vertex ' s
added a new boolean parameter ` isPkColumnFiltered ` and updated related methods in ` SchemaDotFormatter ` and ` DiagramRendererOptionsTest
removed the import of Shadow and simplified the matrix value extraction in ShadowMotionEvent . java to simplify the code and improve readability by elimin
changed the package of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck .
simplified the class definition retrieval logic in GroovyEngine . java to improve code readability and maintainability by eliminating unnecessary logic
move brandingservlet to branding . plugin and add plugincontextlistener to allow plugin initialization / destruction
removed duplicate print statement for command in NativeCodeGenerator . java to streamline output for better readability and maintainability
replaced calls to ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with ` fireChangeEvent ( ) ` to improve
added a new test method ` should _ fail _ if _ actual _ and _ expected _ cause _ has _ different _ types ` to `
removed unnecessary variable declarations for flatten and pack names in AutomaticDependencies . java to streamline code by eliminating unnecessary variable assignments
updated the condition from ` requestedScopes ` to ` allowedScopes ` in ` ClientDynamicRegistrationEndpoint . java ` to ensure that ` allowedScopes
simonstewart : add a test for the firefox profile and capability .
camel - 16462 : camel - jbang - add route . description to description property to provide a way to specify the route ' s
refactor JavacTreeMaker class to improve code organization to enhance maintainability and readability of the code
added a method to set the weight of an edge in ImporterCSV . java to properly initialize the edge ’ s weight during the import process
[ iotdb - 4892 ] use current date when calculate the tariff cost per hour per month
updated SQL query to include ' adsrc ' and ' adnum ' fields in DatabaseMetaData . java and modified tuple assignment in DatabaseMetaData .
improve error message when binarized sentence be not build by parser
added detailed user information to the User class to improve debugging by providing more context about the user ' s state
added null check for message body in MessageHelper . java to improve error handling and provide clearer feedback when the message body is null
[ hotfix ] [ runtime ] rename taskdeploymentdescriptorfactory . fromexecutionvertex to taskdeploymentdescriptorfactory . fromexecution
[ com . google . com . google . com . google . com / roster / roster / rosteraccess . java ] fix
added a new path reference for " maven . test . classpath " in AbstractJRubyMojo and removed the unchecked suppression annotation in
simplified the assertion in MethodHandleImpl . java and added a userMethod method in MethodHandlesTest . java to improve code clarity
added imports for StopFilterFactory , NamedSPI , and HTMLStripCharFilterFactory in CommonGramsQueryFilterFactory , and LegacyHTMLStrip
updated width and height checks from ' > ' to ' ! = ' in URLImage . java to ensure proper comparison of image dimensions
added a condition to check if the name does not start with " META - INF / " and modified the handling of the package name to ensure
added background tasks to ` createImageToFileSystem ` , ` createImageToStorage ` , and ` createImageToStorage ` methods in ` ImageDownloadService
updated test assertions in StackWalkerTest . java to use a dynamic expected value based on version check to ensure correct validation of the number of values
changed the access modifier of the ` addViewportJob ` method from protected to public to allow external access to the method for adding the viewport job
remove the ' num - output - partitions ' parameter from various methods in SimpleWordCount , RBKTimeSlidingTest , RB
removed server restart settings and running checks in TestDatabase . java to streamline server shutdown process and enhance test reliability
added null and empty checks for block in NodePathsConvertOperator and improved child iteration logic in SchemaQueryMergeOperator to enhance error handling and
added a new method to retrieve the total harvesting time from IceUdpTransportManager , IceUdpTransportManagerGTalk
updated font rendering parameters in ParticleEditor . java for improved visual feedback to enhance user experience by providing more visual feedback during particle processing
added configuration handling for " hadoop - env " in UpgradeCatalog240 . java and updated corresponding tests in UpgradeCatalog240Test . java to ensure
added a transparent color constant and updated the background color in SvgViewerFactory . java to improve rendering performance by avoiding unnecessary transparency
removed the minSdk annotation from ShadowKeyguardManagerTest and ShadowKeyguardManager to simplify the test configuration by eliminating unnecessary minSdk
refactor ` containsExactly ` method to use ` asList ` instead of ` accumulate ` for improved clarity to enhance code readability
updated Bandwidth configuration to use refillGreedy instead of simple and added a check for non - empty key in AsyncBucketProxy to
updated GermanAnalyzer , GermanStemmer , and WordlistLoader classes to enhance functionality to support external list of stopwords in German
updated the Generator instantiation to accept a set of post - execution hooks instead of creating a new one to enhance flexibility in lineage evaluation based on
added error handling for NoClassDefFoundError in REngine . java to ensure proper handling of NoClassDefFoundError and set supported to
replaced instances of ` Span ` with ` SpanAndScope ` in ` TraceWebFilter ` and ` TraceWebFluxTests ` to
updated exception message setting to handle null causes more gracefully to improve robustness by avoiding potential null pointer exceptions
updated SolrServerException instantiation to include the base URL to improve error handling by including the base URL for better debugging
updated landscape settings and return values in HSSFPrintSetup . java to ensure correct handling of landscape display behavior
modify return statement in JavaVoidObjectInspector to handle null values safely to improve robustness by preventing potential NullPointerExceptions
added validation to check for argument names in ArgDesc . java to ensure that invalid argument names do not cause runtime errors
added support for memory management of background location updates in AndroidLocationPlayServiceManager to ensure location updates are requested and removed based on the presence of
updated the condition for checking GL _ POINTS in MeshBuilder . java to ensure correct handling of GL _ POINTS primitive type
improve performance of trufflestring . equals ( ) .
added a method to set the command list in ComboBox . java to ensure the command list reflects the current state of the command list
nifi - 5898 : escape filename in tl file when generate certificate .
updated ZkCLI command to use ` zk - zkhost ` instead of ` zk - cmd ` to improve clarity and specificity of
updated equality checks in FirmwareUpdateProgressInfo , BridgeHandler , WemoLightHandler , and WemoLightHandler to use `
added a conditional check for remoteGrpcStatus before posting the console event to avoid unnecessary logging when the build fails
reformatted method signatures in XYItemRenderer . java for consistency to improve code readability and maintainability
add a new nbttag compound to the tick entity in the forge chunk manager . close # 3889
refactor error handling in GLSurfaceViewAPI18 by extracting error string logic into a separate method to improve code readability and maintain
improve error message when there be no supported locale
updated the server URI handling in RFC2616BaseTest to use " http : / / " instead of " serverURI " to ensure the
added a call to addToHelperList ( ce ) in Construction . java to facilitate the addition of the helper list in the
added a condition to skip the first element of an escape sequence in GlyphLayout . java to ensure proper handling of the escape sequence in the layout
added security permissions for setting the context class loader in Transport and TCPTransport classes to enhance security by enforcing privileged actions during context class loading
refactor directory population logic to check for null parent directories before populating the directory list to improve error handling and ensure the folder is not null
added null check for m _ serviceLoaderClassLoader before loading the ServiceLoader to avoid potential NullPointerException when m _ serviceLoaderClassLoader is null
removed debug logging statement from BarrowmanCalculator and simplified the deltap calculation in TubeCalc to improve logging clarity and eliminate unnecessary complexity
modify column assignment logic in TimelineControllerImpl to handle Node instances to ensure correct column assignment based on the type of the object
added a method to register extra components in BaseBrokerStarter to enable registration of additional components for the broker admin application
added a new test method ` testBug4658 ` in ` MultiCfQueryExecIT . java ` to validate the functionality of the
peergroup : do n ' t search for preferred peer version if we have a witness version .
improve the performance of abstractbuilder . getCycles ( ) .
removed the configuration for a simple consensus snapshot trigger threshold and updated related classes to utilize a Supplier for RatisConfig to enhance flexibility
refactor multiple Java classes to improve code structure and readability to enhance maintainability and facilitate future development
added a conditional check for ManagedService annotation before unregistering JMXHelper in DefaultRemoteProxy . java to ensure that JMXHelper is only registered when
tika - 1348 -- allow to parse non - unicode entry name in packageparser
added a new file TestSplitThruPhiDivMod . java with two test methods for division and division to ensure correctness of the division
added methods to lookup generic interfaces and superclasses in TemplateRegistry . java to enhance flexibility in template registration by allowing multiple types to be registered
increased the initial capacity of ByteArrayOutputStream from 512 to 1028 to optimize memory usage and improve performance
added comments to the ` languagesExcluded ` array in ` PlayerSettingsScreen . java ` to clarify available symbols related to Chinese ,
refactor byte array initialization and length handling in TransferCompletionHandler . java to improve efficiency to optimize memory usage and prevent potential ArrayIndexOutOfBoundsException
replaced ` windowFocusListener ` with ` windowAdapter ` in multiple menu and popup menu classes to improve clarity and consistency in handling window
refactor error handling in SemanticAnalyzer to check for null source before throwing an exception to improve robustness by throwing a specific semantic exception when the
added scaling functionality for the skeletal mesh in SkeletonRenderer . java to ensure the visual representation of the skeletal mesh ' s
added ` getSolrHome ( ) ` method implementations in ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` to
added @ ComponentScan annotation to SpringWebConfig . java to enable scanning of components in the application configuration
removed the ` getAccount ( ) ` method from ` UserListItem . java ` to streamline the code by eliminating unused methods
added unit tests for installing package information in ShadowPackageManagerTest . java and modified package name handling in ShadowApplicationPackageManager . java to
refactor AvailableSettings class to improve code readability to enhance maintainability and facilitate future development
added TransactionCapsule fields and methods to the TransactionTrace class to enhance transaction management capabilities in the application
add shuffle member list property to cluster listener ( # 2594 )
replaced Text with CrawlDatum in SegmentReader . java to improve data handling efficiency
refactor JsonDeserializer class to improve code readability to enhance maintainability and facilitate future updates
updated configuration names and modified fetch size handling in TsfileDBConfig , QueryProcessExecutor , and OverflowQueryEngine classes to use ThreadLocal
updated the SQL error message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to correct the syntax
removed unused import of ExecutionContext in TaskletStep . java to clean up the code and improve readability
initialize the title variable to an empty string in Lwjgl3WindowConfiguration . java to ensure a default value is used for the title
fix npe in asynchttpclientcall when body be null
add a new interface ` embeddedserverinstance ` and deprecate it in ` io . micronaut . runtime . server ` ( #
use reflection instead of jabref . macadapter . macadapter . macadapter . macadapter . macadapter .
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related references to improve clarity
modified the return statement in HandlerLibrary . java to return the result of the toEnum method to ensure that the method returns the correct enum type
changed the ` hideUnprivilegedObjects ` variable from non - final to final in ` PgConnection . java ` to enforce immutability
change log level from info to fine in ThreadedAcousticScorer . java and update import statements in AudioDataSourcesTest .
added a check for Android Q and saved Giphy video URL in IOUtils . java to ensure compatibility with Android Q and improve video URL handling
fix ( activiti - engine ) : fix npe in setvariable ( )
updated multiple Java files related to EhCacheTicketRegistry , LdapPasswordPolicyEnforcer , GoogleAccountsService , GoogleAccountsService , and Saml
replaced manual retrieval of logger instances with a call to computeIfAbsent in MavenLoggerFactory . java to simplify code and improve readability by redu
deleted the DataOutputOutputStream class and updated import statements in HbaseObjectWritableFor96Migration . java to streamline the codebase by elimin
updated the column name from " delta _ 0000021 " to " rowid " in TestAcidOnTez . java to ensure
changed log level from info to debug in MavenEnhancePlugin . java to reduce log verbosity for better debugging
added a method to retrieve the default provider name and updated JSSE _ PROVIDER _ NAME to use it to improve flexibility in provider name
added imports and processing logic for Captor annotations in MockitoBeforeTestNGMethod . java to enhance testing capabilities by processing Captor
added checks for enabled class and method names in TestSuiteBuilder . java to provide clearer error messages when no test cases are found to improve
refactor GroovyAutoComplete , GroovyLanguage , and GroovyAutoComplete classes to improve code readability and maintainability by standardizing import statements and
use graphhopperosm instead of graphhopper in import
danielwagnerhall : use a default client when create a session
changed the visibility of ` mHideSysUiScrim ` from final to non - final and added functionality to manage the visibility of the
added a ` canceled ` flag to the ` enqueue ` method in ` OkHttpCall ` and modified exception handling in ` OkHttpCall `
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability to enhance code readability and maintainability
updated RequestMatcher interface to extend org . springframework . security . web . util . matcher . RequestMatcher to extend from Spring Security ' s
added a new abstract class ` ImplicitLambdaConsideredForApplicabilityTest ` and modified ` DeferredAttr ` to include an ` IF
[ j2kt ] add test for boxed primitive equality in j2kt
added unit tests for the applyQualifiers function in DeviceConfigTest . java and updated the setDimensions method in DeviceConfig . java to ensure
replace IOException with RuntimeException and update timestamp initialization in ExternalViewReaderTest , PinotDataTypeTest , and PluginClassLoader classes to improve error handling and
updated the icon resource for the icon in RootCursor from a logo to a specific icon resource to align the icon with the new mipmap
added errorBuilder . setContentText ( content ) to FileUploader . java to enhance error handling by setting content text for error messages
refactor the implementation of the ConcurrentHashMap class to improve performance and maintainability of the code
added methods to adapt Abucoins fill data into UserTrades and UserTrades to enhance trading functionality by adapting user trades
modified the ` Claim ` and ` SetBlockFast _ 1 _ 8 ` classes to include a new parameter in the ` clearAsPlayer `
simonstewart : add a constructor to HtmlUnitDriver that initializes the browser version from the capability
added support for handling VARBINARY data type in BlobType . java to ensure proper handling of VARBINARY data types in the application
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4894 . java should
added synchronization around language initialization in LibFFIContext . java to ensure thread safety when accessing language variables
updated context handling in InboundBuffer to use ContextInternal and VertxThread instead of Vertx to improve thread safety and clarity in context
updated timeout handling in LdapTimeoutTest to include a timeout parameter to improve test reliability by allowing more time for server operations without a timeout
7186311 : ( prop ) ` ` unicode ' ' be misspell a ` ` uniocde ' ' in javadoc and error message
camel - 14284 fixed the unit test error of cxfmessageheadersrelaytest
refactor various UI components to improve code organization to enhance maintainability and readability of the codebase
added handling for BoosterSet in ComponentAssemblySaver and changed return value in BoosterSet to false in BoosterSet . java to
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4898 .
updated variable names from ` __ FORK _ COUNT ` to ` BLOCKCHAIN _ FORK _ COUNT ` across multiple files to improve consistency
replaced an InternalError throw statement with a return false statement in the method to simplify error handling by returning false instead of throwing an exception
replaced the use of mortbay logging with Apache Commons Logging in TestIPCUtil . java to improve logging consistency and maintain
removed chunked transfer encoding handling in NettyRoutingFilter to simplify the request flow by directly using the HTTP client
added a call to clearAttributes ( ) in PatternTokenizer . java to enhance attribute management for better performance
added polling period parameter and improved error handling in VerificationAfterDelayImpl and After classes to enhance the verification process by allowing customization of the
added session compaction functionality to the SemanticAnalyzer and QueryCompactor classes to ensure proper handling of compaction state during table masking
[ zeppelin - 1390 ] add jar file to zeppelin - zeppelin - z
hbase - 2695 addendum fix checkstyle violation in hbaseadmin
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable tests that are not ready for execution
updated the calcXBounds method in BarLineChartBase , CombinedChartRenderer , and Renderer classes to improve the calculation of X - axis bounds
set content and error handlers to null for reader in SimpleSAX . java to ensure proper resource management and avoid potential memory leaks
added a call to release the headerBuffer in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and updated ` Java17TypeSignatureBuilderTest ` and ` Java
added a null and closed check before closing the ResultSet in JdbcExecutor . java to avoid potential NullPointerExceptions when closing the ResultSet
updated driverVersionMajor and driverVersionMinor assignments from - 1 to 10 and 6 in DerbyDatabase . java to ensure compatibility with the latest
fixed bug 137047 - ustringbufferlength no long report a false positive on empty stringbuffer
removed error logging statement in RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary logging
modified the ` createDb ( ) ` method to return a ` Connection ` object instead of void to ensure proper resource management and prevent potential memory
refactor CreateCustomMetric , ListResources , and ListResourcesTest classes to improve code organization and maintainability
hbase - 25827 add a configuration option to disable hstore compaction max size .
added handling for " address " in BitstampDepositAddress and created DepositAddressJSONTest class for JSON unmarshalling to enhance error
replace IllegalStateException with response . abort in BufferingResponseListener . java to improve error handling by throwing an IllegalArgumentException instead of throwing an IllegalStateException
updated the method call to use absolute path for deleted directories to ensure correct handling of paths in deleted directories
updated ` InvocationFinishedEvent ` to implement ` MetricsEvent ` and changed the type of ` InvocationType ` to ` InvocationType ` to enhance
refactor network interface iteration in OptionsTest . java to use a while loop to improve readability and maintainability of the code
updated the loop structure to iterate through validCheckSums before returning true to improve readability and maintainability of the code
added a clone method to the BufferedChecksumIndexInput class that throws an UnsupportedOperationException to ensure that the clone method does not throw an unsupported operation exception
replaced ` Math . sqrt ( ) ` with ` radius * radius ` in the ` Circle ` class to improve accuracy in determining if the
added a conditional check before assigning frequencyBand in P25Channel . java and overridden methods in P25ExplicitChannel . java to ensure frequencyBand
rename ` tapSquareSize ` and ` tapSquareSize ` to ` tapRectangleWidth ` and ` tapRectangleHeight ` , and update related
set default replicate on write to false by default
added a new query parameter ` lastFillTime ` to the ` nonce ` parameter and implemented the ` format ` method in the ` Util `
added getter methods for ` getDelegate ( ) ` in ` TraceCallable ` , ` TraceRunnable ` , and corresponding tests in ` TraceCallable
updated error handling in FileActivity and FileDisplayActivity to use result . getMessage ( ) instead of result . getData ( ) to improve clarity
added stream writable functionality to ForeignIncubatorQuicheConnection , JnaQuicheConnection , and ForeignIncubatorQuic
added a second parameter to the method call in JavascriptContext . java to enable the functionality of the method
refactor TableCell and BaseTextFormattingHelper to remove unused parameters to simplify constructor calls and improve code clarity
added a new file ` TracingAutoConfiguration . java ` for auto - configuration of tracing components to enable automatic tracing functionality for the UAA application
added a parameter to the second paragraph content in the Submissions . java file to enhance the clarity and functionality of the submission process
updated the ` getPrunedQueryableSegments ` method to include a ` list < IndexSegment > ` parameter and adjusted segment retrieval logic to
refactor VertxBufferTest class for improved readability to enhance maintainability and facilitate future development
refactor MessageSubmissionChunk to improve parsing of dateS and add a new TestMessageSubmissionChunk class to enhance the accuracy of date extraction and
changed the access modifier of mContext from private to protected to allow subclasses to access the mContext variable
removed unused imports from ShowTablesOperation and ShowViewsOperation to improve code clarity and reduce unnecessary dependencies
added a new exception class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to include ` WriteResult ` and ` ActionOperation `
updated return statement in JobCoordinationService . java to return the result of jobCompletionFuture to improve code clarity by explicitly returning the result
added a new method ` bitsToHumanReadable ` and ` bytesToHumanReadable ` to the ` DisplayUtils ` class for better handling of
replaced ` newMergePolicy ( ) ` with ` newTieredMergePolicy ( ) ` in ` TestUpgradeIndexMergePolicy . java
added a check to return early if overview state is not enabled to optimize performance by avoiding unnecessary processing when overview state is not enabled
updated error log message in CpuNDArrayFactory . java to include a link for CPU support and hardware extensions to enhance user guidance for CPU
modified the ` loadSettingModels ` and ` contextInitialized ` methods to accept an ` InputStream ` parameter to enhance flexibility in setting model loading
added null checks for incoming fields , TermsEnum , DocsEnum , and LeafReader in FilterLeafReader . java to ensure input parameters are
* add support for key size provider to jcecrmencryptorbuilder
updated IOException to include the message of the exception instead of the original exception to improve error handling by providing a more informative message
removed multiple @ Inject annotations from multiple Java classes to streamline dependency injection for improved code clarity and maintainability
updated the expected size in BundledDistributionTest and added database user assertions in PostgreSQLTest to improve test accuracy and ensure correctness of database user
[ hotfix ] [ stream ] add pipeline . name config option to set job name in streamexecutionenvironment
refactor scaling logic in OverviewState to differentiate between two - panel and two - panel layouts to improve layout consistency based on device profile
refactor IcePlainsBiome class to extend SnowyBiome instead of GrassyBiome and update populators to
removed zone parameter from several methods in StorageUtils for maximum and minimum time retrieval to simplify method signatures and improve code readability
[ j2kt ] add isqualified flag to this reference .
xhamster ripper now accept w . r . r . g . and w . r . r . g . w . r
move entity to a temp list to avoid concurrentmodificationexception
fix oracledialect . gettablenotfoundexception when schema be null or empty
fix checkstyle issue in util / console / flutterconsolefilter . java ( # 1849 )
updated FileMenuFilter to accept a number of files instead of a single file to enhance flexibility in managing file selection options
[ java ] : fix network publication offset calculation in networkpublication .
refactor guildUpdateOwnerEvent for improved clarity to enhance maintainability and readability of the code
added conditional logic to increment inPortalTicks based on creative status in Player . java and Entity . java to ensure inPortalTicks are only incremented
updated chart pane spacing and text color settings in ClusterMonitorTileSkin . java to improve rendering accuracy and visual consistency based on compression settings
updated ResponseTemplate , TransactionalListCodecTemplate , TransactionalCodecTemplate , and TransactionalSetCodecTemplate files to improve code organization and maintainability
change data types from int to long for length calculations in Base64 . java to ensure accurate handling of larger values in data processing
removed a null check for header in RendererConfiguration . java to simplify the conditional statement for better readability
cloudstack - 5248 : do n ' t change disk offering change on vm with custom service offering
updated import statements in HitbtcAdapters . java and added new imports for Hitbtc - related classes to improve code clarity
rename ` idleCount ` to ` consecutiveIdleCount ` in ` LLRealtimeSegmentDataManager . java ` to improve clarity and consistency
updated the service description from " jruby " to " automation : jrubyscripting " in JRubyScriptEngineFactory . java to align
updated variable name handling in ConfigCategory . java to use displayName instead of name to improve clarity and maintain consistency in variable naming
updated the condition in ParticipateAssetIssueActuator to include an additional check for the preciseExchangeAmount to ensure that the exchangeAmount is
removed redundant loop condition in FeedUtils . java to streamline code by eliminating unnecessary complexity
added a new test method ` testHDF4 ` in ` HDFParserTest . java ` to validate the functionality of HDF4 file parsing
add a new constant CALCITE _ 6092 _ FIXED and modify casting checks in SqlOperatorTest to use it to improve code read
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintain consistency
added methods ` quietCloseAll ` to handle multiple closeables in ` CloseHelper . java ` to improve resource management by ensuring all closeables
replaced the variable ` posBtn ` with a constant ` common _ yes ` in ` RemoveFileDialogFragment . java ` to simplify code
added null checks before drawing images in Pixmap . java to avoid potential NullPointerExceptions when srcWidth , dstWidth , and dstHeight
replaced ` ReflectionHelpers ` with ` java . security . ProtectionDomain ` and refactored method invocation in ` UnsafeAccess . java
updated regex pattern in GUIUtil . java and added unit tests in GUIUtilTest . java to improve regex pattern matching accuracy and ensure correct validation
replace boolean conflict checks with long conflicts in CachedRowSetWriter . java to improve clarity and efficiency of conflict handling logic
use publicspec . yaml instead of version . yaml ( # 1188 )
added a conditional check for reference equality in ReferenceMemory . java to ensure proper handling of reference equality in the memory assignment logic
added validation for seed files and improved error handling in Injector . java to ensure that only non - file inputs are injected in the specified URL
added a condition to check if ` hideOriginal ` is true before setting the visibility of ` originalView ` to ensure that the original view is
updated maxNodes calculation and conditional check in DefaultLoopPolicies . java to ensure maxTrips does not exceed maxTrips - 1 to improve
added a check for support for texture coordinate types in CombinedTexture and introduced a warning log for unsupported texture coordinate types to improve error handling and provide
added error handling for file deletion in EncodeActivity , SupplementalInfoRetriever , and MatrixUtil classes to improve robustness by logging errors and ensuring
added seek and close methods to TracingConsumer and TracingProducer classes to enable seeking and close functionality for better resource management
updated the substring method to use oldPrefixLength and added a query setting for the old prefix length to ensure correct handling of prefixes in the database
replaced the initialization of convertedValsList with a direct initialization from the collection to simplify the code and improve readability by eliminating unnecessary
added a deprecated constructor to the AbstractTimer class to indicate that the constructor should no longer be used in favor of a new one
added a nightly version check in MainWindow to inform users when the Universal Gcode Sender is a nightly build to inform users
modified the ` getResponsesSortedByRecipient ` method to include a ` sortByTeam ` parameter and adjusted the logic for sorting responses based on the
update return statement to include the description of the ` throws ` declaration to improve clarity of the error message for better debugging
deleted the CacheApplication class and refactored related classes to use CommonsApplication instead of CacheController to streamline the codebase by elimin
replace ` realObject . getApplicationContext ( ) . startService ` and ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment .
refactor StatisticsServlet class to improve code readability to enhance maintainability and facilitate future updates
updated configuration update logic for devices running KitKat and above to ensure compatibility with devices running Android KitKat and above
added a constant for the " VersionDefinition / stack _ repo _ update _ link _ exists " in VersionDefinitionResourceProvider and implemented a test
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
add null check for oldIndexName in CFMetaData . java to avoid potential NullPointerExceptions during indexing
added package imports for XML resolver helpers and readers in CheckPackageAccess . java to enhance security by ensuring necessary dependencies are present
renamed methods from ` save ` and ` persistExecutionContext ` to ` add ` and ` updateExecutionContext ` across multiple classes to improve
loop exit : do n ' t need to re - wrap the loop if it ' s a loop exit
replaced instances of RecyclerView with WidgetsRecyclerView and introduced a new method for setting the current scroll height to improve flexibility in handling
added a check for terminal support in ConsoleReader . java to ensure proper handling of unsupported terminal scenarios
changed the data type of ` fiveSeconds ` from ` long ` to ` int ` and added time checks in ` LBHttpSolrClient
added session validity check before flushing session data in AbstractSessionCache and updated session attribute handling in RemoveSessionTest to ensure proper session management and ensure
added null check for columnNames before processing differences in ChangedIndexChangeGenerator . java to prevent potential NullPointerExceptions when columnNames is null
replaced Vector with ArrayList for managing RadioButton instances to improve performance and flexibility in managing RadioButton buttons
refactor UserManagerCompat , UserManagerCompatVL , UserManagerCompatVN , and UserManagerCompatVN to extend UserManager
added methods to retrieve database major and minor versions in MockDatabase , AbstractDatabase , HibernateDatabase , and ReorganizeTableStatement classes to
updated ActionGraphCache to use ` MapDifference ` and added a maximum mismatch count for entries in common / created nodes to improve clarity and
added new files LockDatabaseDesc . java and UnlockDatabaseDesc . java to implement serialization for LockDatabaseDesc and UnlockDatabaseDesc classes to provide
refactor RankingTopComponent and RankingUIModel to use setter methods for model properties to improve code readability and maintainability
added disconnection handling for disconnect messages in HandshakeHandler . java and updated logging format in NodeImpl . java to enhance disconnect functionality and improve logging
added a test method ` testSetDeleteSG ` to ` IoTDBAuthorizationIT ` and implemented the ` DELETE _ STORAGE _ GROUP `
chore : fix : [ doca ] [ proto ] update doca to v1beta1
refactor type validation logic to handle variable declarations more effectively to improve clarity and maintainability of type validation logic
added two new test methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to enhance
replaced specific buffer imports with a wildcard import and modified buffer validation logic in CountersManager . java to improve code readability and maintainability
updated logging statements to use ` getAddress ( ) ` instead of ` getStep ( ) ` in ` MultiSteps ` and ` SendEmail ` classes
added logic to clone joinKeys from the joinDesc object if it exists to ensure that the joinKeys array is not null to avoid potential NullPointerException
added PrincipalResolver to WebAuthnConfiguration and updated registration method to use it to improve authentication handling by using a custom principal resolver
added search paths parameter to XcconfigParser methods and corresponding tests to enhance functionality to support additional search paths in configuration parsing
changed variable declarations from non - final to final in Oracle . java to enforce immutability and ensure immutability of these fields
[ hotfix ] [ runtime ] exclude unaligned checkpoint from documentation
[ calcite - 2287 ] throw unsupportedoperationvisitor for order _ by and map _ value _ constructor
add a system property graal . compiletheworldtest . log to enable debug output
added a check to ensure lValue is an instance of LocalVariable before throwing a CannotDelambaException to improve error handling by preventing
added support for MySQL in CreateTableGenerator to ensure proper handling of timestamp data for MySQL databases
added context class loader management in EnvConfiguration . java to ensure proper resource management and prevent memory leaks
added a condition to set the ejection delay if stageNr is zero in SimulationListHandler . java to ensure proper handling of motor configurations
renamed the class ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and updated related references to clarify the purpose
refactor methods in TransactionUtil2 for improved transaction handling to enhance performance and maintainability of transaction processing
updated ` validateIssuerClaim ` method to accept ` Optional < OAuthRegisteredService > ` instead of ` JWTClaimsSet ` to enhance flexibility
added null check for collection before returning its string representation to improve robustness by providing a default return value when the collection is null
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` in `
added foreign database name and schema name properties to ForeignKeyColumn and related classes to enhance functionality for managing foreign database and schema names in the database
[ java ] throw a warning when a leader fail to join catchup , live , and catchup fail .
replaced static import of Shadows . shadowOf with a private method shadowOf in ShadowActivity . java and ShadowBluetoothDevice . java
drill - 4192 : fix selection of a directory with a wildcard ( # 4192 )
deprecate iforgeitem . oninventorytick ( ) in favor of itemstack . onarmortick ( ) .
add war class prefix to jar export ( fixes # 339 )
added a null check before calling invalidateOptionsMenu ( ) in SingleUploadFragment . java to avoid potential NullPointerException when getSherlockActivity ( )
updated bind options handling in AppsCustomizePagedView , Launcher , and PendingAddItemInfo classes to improve widget binding logic to
added new device constants for air pressure , air quality , co2PPM , and vocPPM in EcobeeSensorThingHandler
refactor code to use a session variable instead of a local variable to improve code readability and maintainability
added " AAPT " and " AAPT2 " environment variables to Genrule . java and updated corresponding test cases in GenruleTest .
only dump instrumentation table if trufflecompileroptions . truffleinstrumentbranch . value be true .
added a null check before disposing the message to avoid potential NullPointerExceptions when the message is null
added @ Getter annotation and made db field final in TronStoreWithRevoking , modified init methods in TxCacheDB , and
updated warning messages in CoreContainer . java to clarify that log watching is not implemented and should be disabled for SLF4J version
replaced printStackTrace ( ) calls with fail ( ) for cloning failures and updated assertion in CategoryPlotTests . java to improve error handling and
updated IOSImplementation to use SmallByteArrayOutputStream instead of ByteArrayOutputStream and added null checks to improve performance and prevent potential NullPointerExceptions during data writing
shader : use vertexbuffer . type instead of string . getstring ( ) . getattributetype ( )
updated JDBC connection parameter from " territory = en _ US " to " shutdown = true " in AbstractDIHJdbcTestCase . java
camel - 14284 : camel - core - fix npe in routeinfo . java when the timestamp be null . thanks to j
updated the default language handling in TestHtmlTag and added new output checks in TestUseOption , TestUseOption , and C1 classes to
updated the condition to check if the result is incomplete and the size of the result is greater than 10 to ensure that completion results are only processed
updated argument handling and logic in HybridClusterIntegrationTestCommandLineRunner . java to support a new time column name to enhance flexibility in handling
updated variable names and logic for setting output format and extension in multiple classes to improve code readability and maintainability by using more descriptive variable
updated condition to check for QSB enabling in DeviceProfile . java to ensure proper handling of conditions when QSB is enabled
added ` equals ` and ` hashCode ` methods to ` AnimationList ` and refactored equality checks in ` GltfModelKey `
added a ` _ date ` field and its setter method in ` AbstractGenerator ` , modified ` HttpGenerator ` , ` HttpConnection ` ,
replaced instances of ` Adler32 ` with ` CRC32 ` in ` Store . java ` to improve performance by using a more efficient
cloudstack - 6892 : fix default value of xen . heartbeat . interval to null
added a new constant ` ZERO _ AREA _ FIN ` and modified warning checks in ` FinSetCalc . java ` to include it to
replaced Jackson annotations with Jackson ' s JsonGenerator and introduced a custom serializer for DocumentMetadata to enhance JSON serialization capabilities for better compatibility
hhh - 14663 add support for date _ trunc ( ) function in h2 and oracle dialect
added a check for " Memory Pool not found " before logging warnings in MetricUtils . java and updated error handling in MetricUtilsTest . java
added a boolean variable ` useJavaScript ` to ` UserContext ` and modified return statements in ` FileAccess ` , ` FileTreeNode ` ,
updated error messages to use ` RUNTIME _ OBJECT _ TYPE . classNameWithEnclosingNames ( ) ` instead of ` @ ConfiguredBy `
updated the BACKFILL path from " / generateAnomaliesInRange " to " / replay " to align the resource path with the intended
replaced instances of ` new DataWord ( 1 ) . getData ( ) ` with ` new DataWord ( 1 ) . getData ( )
updated badge handling logic in AllAppsContainerView . java to improve accuracy of badge updates based on child views
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated comments in ResourceHandlerTest . java to clarify the behavior of start methods after ContextHandlerCollection to enhance code readability and ensure
removed conditional check for custom drawing identifier in Cling . java to streamline code by eliminating unnecessary logic
truffle : remove assertion that be n ' t need .
added @ Ignore annotation to the test method and corrected the method name from ` shadowInvocationWhenChildIsInstrmentedButUnshadowed
updated import statements from ` ItBitExchange ` and ` ItBitExchange ` to ` ItBitExchange ` and ` ItBitExchange ` to
ww - 4898 fix npe in case of invalid parameter .
added private constructors to Utils , ApplicationUtils , AsyncSocketFactory , and Whois classes to enforce immutability and enforce immutability of
added try - with - resources for ObjectInputStream in RegionsApiUtil . java to ensure proper resource management and avoid potential resource leaks
updated class references from " java . util . Vector " and " java . util . Hashtable " to " java . util . Vector " and
added ` tableNameWithType ` parameter to the warning log message in ` RetentionManager . java ` to include the table name in the warning
trim whitespace from the fragmentList size check in QueryExecutorImpl . java to ensure that the input string is not empty before processing to avoid potential
updated the method for obtaining the file path in ResourcePackFileNotFoundException to ensure the correct file path is used for resource packing operations
replaced instances of ` Node ` and ` Edge ` with conditional checks for ` nodeTransformerGroup ` and ` edgeTransformerGroup ` to improve
removed unnecessary check for showAsGrid ( ) in RecentsView . java to improve code readability and ensure proper handling of task view
updated the ` calculate ` method to return a ` BMIViewObject ` instead of a ` Map < String , String > ` to enhance
removed the Comparator from the thenComparing method in QueryCommand . java to simplify the comparison logic for better readability and maintainability
fix block haybale damage not adjust properly .
refactor environment variable handling and improve code clarity in WindowsProcessAddressSpace , J9DDRImageProcess , NewElfDump ,
added support for custom plugin properties in OptionsParser and related tests to enhance configuration flexibility and ensure correct handling of plugin properties
updated condition to check if hashTable is not empty instead of null to improve code readability and ensure proper handling of empty hashTable
updated timestamp validation logic and refactored test methods in TimestampTest . java to improve clarity and maintainability of timestamp handling
[ java ] remove unused archivecontext from cluster service agent .
added a condition to check if the compilation is not executed before evaluating the COMPILE _ THRESHOLD check to ensure that the method type is
added new test methods for image2 and image2 joining in AbstractTest . java and updated existing test classes to include these new test cases to
refactor methods in TogglableFlag and BaseFlags to use a new namespace for setting overridden default values to improve code clarity and
updated logging statements in DockerClientFactory . java to use parameterized messages to improve logging readability and maintainability
added a check to return early if the current platform is ANDROID to optimize performance by avoiding unnecessary processing on Android devices
updated assertions in RoutesTest to use assertThat for better readability and consistency to enhance code readability and maintainability by using Hamcre
added new functional interfaces for byte , float , float , short , and short predicates in the com . speedment . common . function package to
changed the return type of getSubsColor and setSubsColor methods from int to String and updated bitrate limit handling to improve flexibility
added a conditional check before deregistering the future in Invocation . java to ensure that the invocation registry is only deregistered if the complete operation is
replaced the ` flush ( ) ` method with a ` output ( ) ` method in ` AbstractWebSocketConnection . java ` to streamline
added a check for the " redirected " flag before starting the WelcomeActivity in LoginActivity to ensure that the WelcomeActivity is only started
added a new class ` ShadowCheckedTextView ` and modified ` Robolectric ` to implement a shadow for ` CheckedTextView `
added Serializable interface to ParserState and made several fields transient in AccessorProperty and Property classes to ensure proper serialization and prevent potential memory leaks
added " identrustdstx3 [ jdk ] " to VerifyCACerts . java to support IDentrustdstx3
removed duplicate calls to setAttribute with TEMPDIR _ CONFIGURED to streamline code by eliminating redundancy
[ xmpp ] fix wrong occupant nick in multuserchattest
added ` context ` and ` quicheConnectionId ` as a parameter in the ` QuicSession ` constructor to enhance session management by
replaced direct calls to ` writer . getConfig ( ) ` with ` writer . getConfig ( ) . getConfig ( ) ` for configuration management to
refactor code formatting and simplify character type checks in ICU4JImpl . java and TextPosition . java to improve code readability and maintain
added support for ` ComputedDateValue ` and ` ComputedNumericValue ` in ` AddDefaultValueChange . java ` and ` AbstractDatabase
refactor NbtScoreboardIoService class to improve code organization to enhance maintainability and readability of the code
http : / / issues . apache . org / activemq / browse / amq - 4237 - fix saml service provider metadata
changed the visibility of the ` printer ` variable from private to protected and added a ` createPrinter ( ) ` method in ` GraphPrinterDump
added BigDecimal import and updated order average price calculation in HuobiAdapters . java to ensure accurate calculation of order ' s average price based on
updated field handling in ProjectionOperation and TypeBasedAggregationOperationContext to use getTarget ( ) instead of getName ( ) and getFieldName ( ) to improve
modified the logic to check if a player is in a viewers list before sending a packet to ensure that only one player is added to the
added a null check for layout in FolderAdaptiveIcon , FolderAdaptiveIcon , and ShiftedBitmapDrawable classes to ensure proper handling of
refactor SPDYClient to use AsyncConnection and AsyncCompressionFactory for connection handling to improve code readability and maintainability by reducing
fix an npe in the protostuffobjectoutput when the object be null
pdfbox - 4071 : improve formatting , a suggest by valerybokov
refactor BarrowmanCalculator class to improve code readability to enhance maintainability and facilitate future updates
ggb - 1889 do n ' t show axis when there be no axis
replaced setFilter and setWrap methods with unsafeSetFilter and unsafeSetWrap in Texture . java to improve code clarity and maintainability by
removed unnecessary whitespace in returnToWorkspace method call to improve code readability and maintain consistency
added SSL support for HTTPS connections in CustomUrlJob . java and created a new CustomUrlTrustEverything . java file to enhance security by
updated methods to retrieve the real used clock rate string from the encoding and format to improve clarity and maintainability of the code by centralizing
refactor TextureAtlas class to improve code readability to enhance maintainability and facilitate future updates
replaced getProductNameForBuildTargetNode with getModuleName in ProjectGenerator and added a method to set the module name in AppleLibraryBuilder
[ hotfix ] [ test ] fix potential deadlock in testslot
fix : find ( vehicle ) . find ( ) . findids ( ) with inheritance
replaced ` closeFrame ` with ` rbuf ` for response handling in ` WebSocketServletRFCTest . java ` to improve clarity
[ wasm ] fix reference multi - value stack in udf function .
log4j2 - 1343 add ` ` ttl to datetime ( timelocal ) interval ' ' log option ( log4j2
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and added related methods in CustomPreconditionWrapper and XMLChangeLogSerializer
replaced the usage of ` Executor ` with ` Handler ` and added setup and teardown methods in ` DeploymentExceptionTest . java ` to improve
added error handling for Fresco initialization in CommonsApplication . java and improved vector drawable creation in NearbyController . java to
added a null and empty check for objectName before trimming to prevent potential NullPointerException when objectName is null or empty
updated error message formatting in Command . java and TestPrint . java to improve clarity of error reporting for file operations
[ hotfix ] [ table - planner - blink ] make planner and executor class static final
updated variable names and improved null handling in KeyTool . java , Resources . java , and Resources . java to enhance code readability and
added a @ Deprecated annotation to RuntimeOptions . java to indicate that the method is outdated since 23.0 and should not be used in future
replace byte array conversion with string . getBytes method to simplify code and improve readability by eliminating unnecessary byte array creation
added a new interface ` PermissionEvaluator ` in the ` org . springframework . security . expression ` package to provide a centralized way to
added a new option ` ERASE _ LINE _ ON _ FINISH ` to the ` LineReader ` and modified the ` LineReaderImpl
modified the condition to check if the server name is not equal to the online server to ensure that the server name is not equal to the online
updated exception types from SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED to BLOCK _ SIGN _ ERROR across multiple
refactor expandwar to use urlconnection . geturl ( ) instead of jarfile . geturl ( )
improve error reporting for httpclientresponse . decode ( )
changed the center method from centering to centerAbsolute in the Picker class to ensure the spinner container is rounded to the absolute position for better
[ flink - 20650 ] [ network ] fix the bug that networkbufferpool # requestmemorysegments be interruptable .
testjmxintegration : fix memory leak in testjmxintegration . testjmxserver ( )
updated imports and annotations in AbstractIT . java to use RetryTestRule instead of AndroidJUnit4 to enhance test reliability by allowing retries
updated QueryStateMachine to use transactionManager for auto - commit checks instead of a boolean flag to improve transaction management by ensuring only valid transactions are
updated import statements in CsvFieldType , CsvTable , CsvTableScan , and CsvTest classes , and added package - info . java to improve
added support for " javax . microedition . khronos . opengles . GL " in the DistinguishedNameParser
[ hotfix ] remove redundant code in streamtasktimertimertest
refactor URI retrieval logic in Request . java and add a test for CONNECT method in RequestTest . java to improve code clarity and ensure
updated references to ` KEY _ LAST _ SEEN _ VERSION _ CODE ` to use ` WhatsNewActivity . KEY _ LAST _ SE
added sessionAvailable and sessionUnavailable methods to the SessionManager class to enhance session management functionality for better session management
added a new package " liquibase . pro " to the scan configuration to enable the scanning of the " liquibase .
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider ` to simplify the method signature
updated the ` loadWithNewGlobal ` method to accept an additional ` Object ... ` parameter to enhance functionality by allowing dynamic argument passing to the
simplified the regionMatches method calls and improved substring handling in FastPathResolver . java to enhance code readability and maintainability by
replaced ` footer . length ( ) ` and ` stream . length ( ) ` with ` toIntExact ( ) ` in ` HiveClient
corrected the spelling of " isExceedRandomizationDepth " to " hasAlreadyRandomizationDepth " across multiple files to ensure consistency
added support for " LEAD " and " LAG " functions in UnsupportedOperatorsVisitor . java and a corresponding test in TestWindowFrame .
clear the headers from the proxy request in AbstractProxyServlet . java to ensure that the proxy request headers are properly cleared
added a check to skip execution if SA attach is not expected to work in CompressedClassSpaceSizeInJmapHeap . java to ensure
added null checks for bgColor in GraphicsDevice . java and created TranslucentWindow . java for fullscreen window translucency testing to
added a conditional check for user information and improved error handling in UserInfoActivity . java to ensure user information is displayed when no information is available
added a new class ` PrecompiledHeaderSerialization ` to enforce precompiled headers on different machine to ensure that precompiled headers can be used on
[ hotfix ] [ table - common ] fix update mode validation in kafka source sink
added a new integration test class ` MultipleOutputsIntegrationTest ` to validate the functionality of multiple output groups and source files in the Buck example
updated regex pattern and added content comparison logic in FileSettings . java to ensure correct formatting of content based on user input
nifi - 4892 : add support for configuration via json for stateless flow ( # 4892 )
replaced ` new Object [ ] { } ` and ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY
added a TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable taskbar mode switching for persistent tasks
added new device status entries for " leaving - dock " and " energy - save - mode " in DeviceStatus . java to enhance functionality for
improve error message when item model can not be load
added JUnit @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
fix ( opengl ) : do n ' t return 1 for 2x
refactor RussianLowerCaseFilter class to improve code readability to enhance maintainability and facilitate future development
replaced hardcoded server and client properties with a constant value in CsvBulkLoadToolIT . java and QueryUtil . java to simplify code and
replaced File . separatorChar and File . pathSeparatorChar with underscores in displayName to ensure consistent file path handling across different operating systems
add a seekableinputstream to the wavloader so that it can be seek to the endien .
added a ` repeatFirstLineIndent ` property and updated the ` setIndent ` method to use it to control the indentation behavior based on the
cast the type of ' oid ' to Object before comparing it to ensure proper type safety and prevent potential ClassCastException
fix checkstyle issue in util / hikariconnection / hikariconnection . java ( # 1188 )
use controlflowanchored instead of controlflowanchornode for debug .
added a line to disable the focus painting of the buttons in WindowsPlacesBar to improve user interface responsiveness by preventing unint
added ` UniqueConstraint ` and ` ForeignKey ` types to the ` backingIndex ` condition in ` DatabaseSnapshot . java ` to ensure proper handling
added a deprecated method ` getAccountLedgersWithParams ` in ` KucoinAccountServiceRaw ` and implemented it in ` AccountAPI ` to
added dc . title check to communityrestrepository if it do n ' t contain dc . title
refactor the GapInsertionDetector to check for non - empty utterance before returning a new HypothesisUtterance instance to
added unit test base on user forum issue
updated thread retrieval from background threads to database update threads in FeedRefreshUpdater . java and added getter / setter methods in ApplicationSettings . java to
increased the FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 in RecyclerViewFastScroller . java to increase the
replace MetaUtil . toInternalName with a direct reference to " Ljava / lang / System " in HotSpotResolvedJavaField .
hhh - 13644 : fix npe in procedurecallimpl when getresultstream ( ) return null
camel - 14263 : camel - swagger - java : fix npe in rest - swagger - java . xml when apiproperties be null
added two new classes , BinaryFrameGenerator . java and TextFrameGenerator . java , for generating WebSocket frames with UTF - 8 encoding to enhance
danielwagnerhall : use selenium . until ( ) instead of selenium . findelement ( ) . findelement ( )
simplified the calculation of ' lat ' and ' radius ' in RandomGeo3dShapeGenerator . java to improve code readability and
added a keepAlive method to manage class loading behavior to improve resource management by allowing a custom ClassLoader instance
changed the return value from false to true in SQLiteDatabase . java to reflect the correct behavior of the method
added a check for the util / concurrent signature prefix in the FindJSR166LockMonitorenter class to improve handling of concurrent
added MkdirStep to multiple classes and updated steps count in FatBinaryTest to ensure proper directory management during tests
added detailed error messages for coordinate range checks in MeshLeveler . java to improve debugging by providing clearer error messages for invalid coordinates
[ drools - 4892 ] skip pmml dependency from classpath when applypmmlmodelcommand run
changed the variable name from locationMode to thermalStatus in ShadowPowerManager . java to improve clarity by using a more descriptive variable
updated temporary directory creation logic in MountableFile . java to conditionally use the platform - specific temporary directory to ensure compatibility with macOS environments
added a conditional check for memory mapped buffers in PrjFileReader and CatalogManager to ensure proper handling of memory mapped buffers across different operating systems
added a check for null organization in the pom . xml file to ensure that the Plugis is required to have an organization in the pom
removed the notice file from SepPostingsWriterImpl . java to clean up the code and improve readability
deleted the TerminateWebSessionListener . java file to the functionality was no longer needed in the project
updated the method to retrieve the Java class path from system properties instead of an empty string to ensure compatibility with the system ' s Java class path
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for ` cryptKeyInit ` , ` crypt
added JUnit Pioneer annotations and a test method to the AddLicenseHeaderTest class to address issue # 3198 related to Javadoc changes
updated LAUNCHER3 _ PHYSICS feature flag from false to true to enable the launcher 3 phone feature feature
added HTML structure to display the " noPrint " class in HtmlThreadInformationsReport . java to improve user interface clarity by providing a
update LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and update TEST _ VERSION _ CURRENT
added macosx symbolicator and task handles in BsdDebuggerLocal . java and updated platform check in PlatformInfo . java to include Mac
[ fml ] use weakreference to avoid memory leak .
change the log level of networkdispatcher exception to debug if connection reset by peer .
[ java ] default to admin _ directory _ name if context . conductorbytebuffers be null .
added a break statement in the TouchImageView . java file to handle a case where a break statement is encountered
chore : update protoc to v3.15 . 3 ( # 3892 )
simplified the SSL handshake handling in FeedableBodyGenerator . java to improve code readability and maintainability by eliminating unnecessary SSL
added logic to check if a type is assignable to a Java object in TypeUtils . java to ensure correct handling of type variable assignments in generics
use concurrenthashmap instead of nonblockinghashset for memtablespendingflush
added null checks and improved error handling in MemberEnter , JavaCompiler , and TestParseErrors classes to enhance robustness by preventing null
replaced NO _ BACKGROUND browser with SWT . NONE in BugInfoView . java to simplify the browser configuration by using the ' NONE '
updated the method call from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java ` to ensure
fix div . foldstamp ( int , long , long , int , long , long , int , long , long , long , int )
added a method to read an InputStream and updated image loading to use it to improve code readability and maintainability by centralizing input stream reading
updated SwitchCompiler and CaseStmtToken classes to include local variable handling and added test cases for switch bugs to enhance variable management and improve test coverage
added error handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by logging exceptions during cipher provider initialization
updated the " AdditionalDependencies " attribute in WinGammaPlatformVC10 . java to include psapi . lib to ensure proper handling of additional dependencies
updated SQL command line formatting in StringUtilsTest . java to ensure consistent line endings across different operating systems
updated TemplateEngineFreemarker , ApplicationController , and ApplicationControllerTest to enhance HTML output formatting and improve code readability
replaced ByteArrayInputStream with byte array and added string conversion in CRDGeneratorTest . java to improve code readability and facilitate debugging
make ` ` hold _ samples ' ' and ` ` mode ' ' a ` ` hold _ samples ' ' and ` ` mode ' '
added a conditional check for the " testngEmailableReporter " system property before adding the EmailableReporter to ensure that the EmailableReporter
added a boolean flag ` quoted ` to handle quoted strings in ` CommandLineBuilder . java ` and updated corresponding tests in ` CommandLineBuilderTest .
removed the ` public ` access modifier from the interfaces and classes in the ` Clock ` , ` DelegatingGauge ` , and ` Vendor
added job . setNumReduceTasks ( numFetchers ) to FreeGenerator . java to set the number of reduce tasks based on fetchers
refactor object field handling in SchemaGeneratorHelper to use a new method for retrieving field definitions to improve code readability and maintainability by central
updated the file version from " 505365 " to " 532077 " in SaveService . java to reflect the new version of
added support for " OES _ TEXTURE _ FLOAT " and " GL _ ARB _ texture _ float " extensions in FloatTextureData
add write ( ) and closefile ( ) method to fileserver , and update version number
added a null check for outputDirectory and jarStream before setting the output directory to ensure that output directory is set only when both outputDirectory and jarStream
added performance measurement to the ` getFuture ` method call in ` ShadowSQLiteConnection . java ` to measure the execution time of the submit
updated method calls from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeapTest . java
[ geos - 8470 ] add a new enum resourceerrorhandling to handle ogc error .
added bounds checking for buffer position in RAMInputStream and implemented EOFException handling in TestRAMDirectory to improve robustness of input stream handling and ensure
improve error message when file be not find
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous parameter and modified ForkJoinPool and ForkJoinWorkerThread to
updated CHECK _ EVERY _ N from 10000 to 0xFFFF and added logging statements for HardRefCache clearing to improve cache management and enhance
hbase - 26969 remove unused parameter in testsplittransaction # testsplittransaction # testopenregion ( )
added null check for currentSelectionArea before accessing its enabled state in CompatibilityEngine . java to prevent potential NullPointerExceptions during selection
added a parameterized test method ` provideEnvironmentsToTest ` to the ` DemoModulesTests ` class to verify the functionality of the Jaas
added conditions to check if spanX and spanY are both 1 and 1 in the folder creation logic to ensure correct behavior when creating a folder
refactor CacheOffHeap class implementation to improve performance and maintainability of the code
added support for reference later tables in CreateTable . java and a corresponding test case in TestCases . java to ensure that tables depend on another
added a check to prevent corrupt XML gid values in TiledLoader and improved data string trimming to enhance robustness by preventing corrupt
tilecache : synchronize setworkingset to avoid concurrent modification
added a new file ` Solution . java ` that implements a solution that calculates the minimum and maximum steps based on a given range to facil
added a new interface ` AddressChecker ` and updated ` TrackerRequestProcessor ` to use it to check for bad IP addresses to improve address
fix rendertype for translucent moving block not be render properly .
guiconfigentries : remove default tag from config entry
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType . java ` and updated its assignment
added a null check for recieptents before attempting to mail to avoid potential NullPointerExceptions when recieptents is null
refactored the logic for determining if a route is a single operation in RoutingInBoundHandler to improve code readability and maintainability by
[ hotfix ] [ docker ] make dockerclientfactory . client ( boolean failfast ) optional
added a new parameter ` resourcesMode ` to the ` AndroidMetadata ` constructor and updated the ` perfStatsCollector ` to include it to enhance
replaced DateUtils . truncate with Calendar . getInstance for date manipulation in HistoricProcessInstanceQueryImpl . java to improve date handling by using
replaced ` importProject ` method with ` importProjectCore ` method in ` OpenAndroidModule . java ` to ensure compatibility with the latest
added error handling for CommandFailedException in LiquibaseCommandLine . java to improve error reporting for command failure scenarios
refactor TreeMap class to improve code readability to enhance maintainability and facilitate future updates
added methods to manage and manage asynchronous stack traces in the Display class to improve error handling and debugging capabilities for asynchronous stack traces
added a method to set the glow color in BubbleTextView and updated Folder to use this new method to allow customization of color
added file row text styling for links and descriptions in LinkedFilesEditor . java to enhance the visual appearance of file links and descriptions in
removed the return value of " java . lang . Short " in AbstractJdbc2ResultSetMetaData and added a test for class matching in ResultSetMetaData
removed the try - finally block around the write method in Lucene40LiveDocsFormat . java to simplify the code by eliminating unnecessary
added a null check for the _ info object before checking if it is null to prevent potential NullPointerException when _ info is null
added a constructor to the ShadowLocation class to initialize the provider with a specified value
added a condition to check if the deviceRam is less than 2048 in LauncherPreferenceJavaFragment . java to ensure that the maxR
add map stats to localmapstatsprovider when map have no data
added logging functionality to the FileProfileActivator class to enhance visibility into file profile activation process
updated the error message in PdfWriter to include a specific name instead of " noname1234 " to improve clarity and specificity of the
remove duplicate role when use ` ` guild . modifymemberroles ( ... ) ' ' ( # 1314 )
updated the return value in ExpandableUploadListAdapter . java from 30 to MAX _ NUM _ UPLOADS _ SHOWN and adjusted the
added multiple assertions for the delete method in DashboardUserMapperTest . java to ensure correctness of the delete operation in the dashboard user mapper
update instructorfeedbackresultspagedata to use ' primary ' instead of ' recipient '
sulong : fix interoperability of derefhandle get receiver and store node .
added a method to retrieve the buffer size in BufferedIndexOutput to provide access to the buffer size for external use
[ scene2d . ui ] add usage help for terasology .
added swipe - to - dismiss functionality to the action bar in DrawerActivity . java to enhance user experience by providing visibility into old interactions
updated CommandLineParserTest . java with new test cases to improve test coverage for CommandLineParser functionality
added new imports and modified visibility of constants in QuickstepAtomicAnimationFactory , PortraitStatesTouchController , and QuickstepAtomicAnimationFactory
refactor method to use ` javaNameFromExternal ` instead of ` Character : : toUpperCase ` to improve code readability and maintainability by
removed unused native methods from CWrapper . java to streamline code and improve maintainability
added constant value checks in mmm Checker . java and created a new ValueTest . java file to ensure that constant values are correctly handled and
updated test files for MontgomeryMultiply ,MulAdd , and TestSquareToLen to improve code organization and maintainability
removed the null check for constructors in PojoUtils . java to simplify the code by removing unnecessary null check
refactor JiraConfiguration to improve code readability to enhance maintainability and facilitate future development
updated error message formatting in UploadBuild . java to include parentheses to improve clarity of error messages for better readability
updated bounds calculations in DeviceProfile . java to include search bar offset to ensure proper layout adjustments based on search bar position
pulseaudio : do n ' t schedule next disconnect if idletimeout = 0
refactor recents activity launching to run on the UI thread to improve responsiveness and responsiveness of the Recents activity
removed the abstract method ` getSourceGroupOptional ( ) ` and its usage in ` AppleSource . java ` to streamline code by elim
increased the timeout duration for trigger firing in TestSimTriggerIntegration . java from 220000ms to 320000ms to allow more time
update output position in FloatSelectiveStreamReader to use positionCount instead of outputPositionCount to ensure accurate block allocation based on the specified position count
added square comparison for distFromStartSq in AbstractNodeCostSearch . java to improve the accuracy of path retrieval based on distFromStartSq
added a conditional check to skip processing for Form and Dialog components in ResourceEditorView . java to ensure proper handling of specific component types in the
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView ` and ` FloatingIconView ` to utilize
added a null check for commitPoint and initialized it if it is null to ensure the correct commit point is used when it is null
added unit tests for IMEI and getMeID methods in ShadowTelephonyManager and implemented permission checks in ShadowTelephonyManager to
modified the ` debug ` and ` debugRequestEntity ` methods in ` SimpleHostRoutingFilter . java ` to enhance debugging capabilities by providing detailed
added ` destory ( ) ` method to multiple classes and implemented close methods in ` IndexSegment ` and ` BitmapInvertedIndex ` to
[ rocketmq - 4892 ] fix test failure in statictopicit ( # 4892 )
use standardcharsets . utf _ 8 instead of charset . forName ( ` ` utf - 8 ' ' )
hbase - 25827 addendum do n ' t crash if multi - family file be not find during bulk load
added a nullable commission parameter to DefaultWithdrawFundsParams and updated RippleWithdrawFundsParams to include it to enhance the
removed the import of StreamTerminator from AutoClosingReferenceStream . java to clean up the code and improve readability
consolidated multiple catch blocks for SolrServerException and IOException in LoadSolrBuilder . java and SolrLocator . java to improve code readability and
added error handling for abstract overloaded methods in Java2TypeScriptTranslator . java and updated tests in OverloadTests . java to ensure proper
added StacklessLogging for file session garbage collection in TestFileSessions . java to enhance logging capabilities for better debugging during file operations
added serialization support to MutableColumnDataType and refactored static declarations in Entities to improve data type handling and ensure type safety during serialization
updated test files forExactLConstantTest and SubExactLNonConstantTest to improve test coverage for exact and non - constant scenarios
added null check for claimRequestString before parsing to improve robustness by preventing potential NullPointerExceptions
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve flexibility and maintainability of the rule implementation
refactor processTypeHintForNestedDocuments and add unit tests for null values in UpdateMapper and UpdateMapperUnitTests to improve null handling and
replaced ` CoreAdminResponse ` with ` CoreStatus ` in ` CollectionsAPIDistributedZkTest . java ` and updated related
initialize transformers and locators list with new ArrayList instances to ensure consistent initialization of transformers and locators lists
fix typo in abstractquerydslprocessor # inits ( )
add getcallstack ( ) method to pegraphdecoder to display call stack .
updated method names from ` setOf ` to ` copiedSetOf ` in ` RestTemplateBuilder . java ` to improve clarity and consistency
camel - 16462 : camel - mail - make it easy to use to generate the mailmessage id .
http : / / issues . apache . org / jira / browse / amq - 4890 - add null check for redel
updated return statement to use setIsPropertyName ( ) instead of getIdentifierName ( ) to ensure the correct identifier name is returned
added a new ` WaveGeneratorActivity ` class and modified ` InstrumentsFragment ` to start it with an intent to enhance user experience by providing
added null checks and logging for sheet name in KeyedProperties . java and SheetOverlaysManager . java to improve robustness by handling cases
add integration test for exec ( ) and log ( ) method in pod
added a test method ` testNoWriter ` to ` TestReplicationHandler ` to verify that no index is detected and create a new one to
dispatch method kernel okra in graalkerneltestrategy to avoid npe
updated DnsClient and DefaultDnsClient to use a sorted list of records and added Comparable interface in DefaultMxRecord to ensure proper sorting of
refactor thread creation in XToolkit to use a privileged action for clarity to improve code readability and maintainability by reducing
added validation to SelectBox and set the selected value of the dropdown in UITest to ensure the dropdown reflects the latest version of the
[ hotfix ] [ runtime ] use collector . printstacktrace instead of illegalstateexception
added a new parameter ` parentSplit ` to the ` createState ` method and updated related logic in ` FlowBuilder ` , ` SplitState
changed the ` connectionState ` variable to be volatile and modified its usage in the ` getConnectionState ( ) ` method to improve thread safety and
increase polling period from 10 to 1000 and add unit test for periodic trigger
replaced calls to ` malloc ( ) ` with ` length ( ) ` and ` encodeUTF8 ( ) ` and ` encodeUTF
added exception handling for IOException and DocletAbortException in HtmlDoclet . java and AbstractDoclet . java to improve error reporting and provide
[ java ] unusedmodifier false positive with enum
refactor lambda expressions to method references across multiple Java files to improve code readability and maintainability
updated the @ Parameterized . Parameters annotation to specify the name of the parameter to improve clarity and specificity of the test configuration
added handling for IllegalFormatException and improved logging messages in TransformationHelper . java to enhance error handling and provide clearer error messages for better debugging
updated variable names from ` userPermissions ` to ` activeConnectionPermissions ` in ` ActiveConnectionRESTService . java ` to improve clarity and
replaced direct equality check with Apache Commons Lang ' s EqualsBuilder for improved equality comparison to enhance code readability and maintainability by
updated the process method to handle null outputRoot gracefully to improve robustness by preventing potential NullPointerExceptions when outputRoot is null
added a AnnotationFilter interface and updated PDFPage , PDFRenderer , and PageDrawer classes to enable filtering of created annotations to enhance flexibility in
refactor StackTraceCleaner class to improve error handling to enhance code reliability and maintainability
updated content disposition handling in PluginServlet to set content type to " text / css " or " text / javascript " to ensure correct content type
hhh - 10688 - skip test that fail on oracle 8.0
updated the ` upgrade ` method to use ` slotSize ` instead of ` version ` and added null and empty checks for ` stats ` to
added getStats methods to AbstractDataImportHandlerTest , Context , and ContextImpl classes , and changed ` docCount ` from ` AtomicInteger ` to
[ scb - 2892 ] add support for long polling in kieservice ( # 2892 )
refactor gesture handling in PagedView , BaseOverview , and LauncherInstrumentation classes to use scroll instead of gesture margins and waitForIdle
updated UnlocksDialog initialization and added a button in PausedDialog to improve user experience by providing a clearer dialog for unlocks
added a call to clear the drop list in PlayerEventListener to ensure the event is cleared before further operations
added a new constant DEFAULT _ PARAM in StreamResult . java to provide a default parameter for input stream handling
updated the exception type in the test method from MalformedURLException to IOException to ensure proper exception handling in the normalization test
updated the printBoth method to include chunk type in TsFileSketchTool . java and added a call to strBuffer . flip ( ) in
added a check to exclude " lib - Swift . h " headers from the UmbrellaHeader class to ensure that the umbrel
reformatted the method signature of onHttpHeaderError in GrizzlyAsyncHttpProvider . java to improve code readability and maintainability
added a call to encode ( ) in RequestPlugin . java to ensure proper data integrity during request processing
mondrian : make sure sqlquery . getdialect ( ) return ` ` float ( ) ' ' instead of ` ` string
added validation for null or blank password in LdapAuthenticationProviderImpl . java and created a new test class TestLdapAuthenticationProviderImpl . java to
pdfbox - 4071 : remove unnecessary call to long . tostring , a suggest by valerybokov
added a condition to clear complexWriters in ProjectRecordBatch . java to ensure proper handling of complexWriters when a condition is met
added @ SuppressWarnings ( " serial " ) annotations to multiple cache - related classes to suppress serialization warnings in the codebase
removed the ` public ` access modifier from the ` ClassGraphClassLoader ` class and modified the null check for ` classInfo ` to enhance encapsulation
added a check for the name " _ errors " in the ErrorResponseException class and modified the return statement in the ErrorResponseException class to improve error
added a constructor to ` EventSourcingRepository ` that accepts ` EventStore ` , ` SnapshotTriggerDefinition ` , and ` RepositoryProvider
refactor binary node handling to improve clarity and consistency to enhance code readability and maintainability
added error handling and improved text formatting in SearchedPeopleCursorAdapter and QustomDialogBuilder to enhance robustness by avoiding potential
refactor command handling in NuvoConnector and NuvoHandler to remove nullable annotations and introduce standalone mode functionality to improve code clarity and
tmi - tiff : use tiff baseline instead of extension for planar configuration .
added a call to close the resource in ItemListTag . java to ensure proper resource management and prevent memory leaks
improve performance of average tick and laser table
added new files SigInt . java and SigIntBarrier . java to implement a thread - safe signal handling mechanism to facilitate
added hierarchical graph handling for nodes and edges in ExporterGEXF . java to ensure accurate representation of nodes and edges based on the graph
replaced byte array handling with Text handling in TCTLSeparatedProtocol . java to improve performance and compatibility with modern Java features
[ 3.0 ] fix rubric response with invalid index
updated the condition in CatalogComparator to compare against ORIGINAL _ CASE instead of DB2Database to improve code readability and maintainability by
simonstewart : clean up the browsermobproxytest after the test be complete .
updated the formatting of criticalErrors to use Integer . toString ( ) instead of MessageFormat . format ( ) to improve readability and maintainability of
removed duplicate call to mTextWatcher . reset ( ) in InPlaceEditView . java to streamline code by eliminating redundancy
fix typo in javadoc of internalbytearray and trufflestring
[ hotfix ] [ runtime ] update outEdgesfunction to use vertex type instead of tuple3
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the codebase
deleted the file ` Class Á . java ` and added a new ` DiacriticTest . java ` for testing Java compilation
replaced CountDownLatch with CyclicBarrier and added a new assertExecutionsDone method to improve concurrency handling in cluster membership tests
added error handling for setting the workspace reader in DefaultMaven . java and improved conditional checks in DefaultGraphBuilder . java to enhance robust
updated SSL scheme check from startsWith to equals in ServiceRegistryConfig . java and improved test assertions in TestServiceRegistryConfig . java to enhance
refactor Mockito class for improved readability to enhance maintainability and facilitate future development
removed unnecessary whitespace in Jdbc3Connection constructor to improve code readability and maintain consistency
added a synchronized method ` ensureInstance ( ) ` to the ` ServletHolder ` class to ensure the servlet instance is properly instantiated and prevent potential
added logging functionality and modified deltaServerTime handling in BinanceExchange and BinanceBaseService classes to improve monitoring and monitoring of delta server time
added support for binding " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8.5 " in Tomcat
added a null check for the component form before deregistering an animation to avoid potential NullPointerExceptions when accessing the component form
updated ` decodeResource ` and ` decodeBitmap ` methods to accept ` BitmapFactory . Options ` as a parameter to enhance flexibility in bitmap
[ java ] use a constant for number of message instead of a hardcoded value .
added click handling logic and improved tweet styling in TimelineArrayAdapter to enhance user interaction by allowing click and long - click options to
added " text " to the list of supported data types in PostgresDatabase and modified NumberType and ColumnSnapshotGenerator to handle numeric data types
fix flaky entryprocessorbouncingnodetest . testentryprocessorbouncingnodes ( # 3683 )
updated method names and logic in AmbariManagementControllerImpl , State , and AmbariManagementControllerTest classes to improve clarity and
added null check for thingRegistry before adding a result in CreateBridgeServlet . java and updated test cases in CreateBridgeServletTest . java to
refactor ` PreconditionEnforcer ` and ` CrawlServer ` classes to synchronize methods for thread safety to improve thread safety and ensure thread safety
updated conditional checks for " Teredo " display name to handle potential null values to improve robustness by preventing potential NullPointerExceptions when getDisplayName
added a default shader parameter to the SpriteBatch constructor and updated shader creation logic to use it to enhance flexibility in shader management by allowing
added default options for synchronous commit in TestUtil . java to ensure consistent commit behavior during tests
added type coercion functionality to SortedSetTypeCoercer and updated the fill method to handle duplicate elements to improve type coercion and
refactor message retrieval logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to use conditional checks for folder , folder , and local removals
added a condition to check if the character is less than 256 before processing to ensure that the safe array is not less than 256 to prevent potential
updated the port assignment in UserContext . java to use a dynamic port instead of a hardcoded value to improve code readability and maintainability
updated the expected return value of clusters . getClusters ( ) in HostResourceProviderTest . java to ensure the test correctly returns an empty map
[ hotfix ] remove unused logger parameter from yarnentrypointutils # loadconfiguration
refactored the initialization of SIPCommFrame to use initialization methods instead of final fields to improve code readability and maintainability by redu
deleted ShadowHtml . java and updated HtmlTest . java to replace HtmlTest . java with a new test case in HtmlTest . java to
added a new file StarTreeRecordStoreFactoryBlackHoleImpl . java that implements StarTreeRecordStoreFactory to facilitate
updated logger names from " logger " to " h3Logger " and added " quicLogger " and " quicLogger " to improve
changed the visibility of the ` addListeners ` method from private to package - private in ` MockSettingsImpl . java ` and added a new
refactor StateHandleStore class to improve code readability to enhance maintainability and facilitate future development
updated imports from ` org . eclipse . jetty . util . security . Constraint ` to ` org . eclipse . jetty .
refactor : use const . default _ section instead of string literal ` ` none ' '
use try - with - resources to ensure resource cleanup
camel - 1145 : fixed the unit test error of camel - core
added a new ` libraryTarget ` parameter and updated related methods to retrieve library jar parameters to enhance the handling of library jar parameters for improved
corrected a typo in a comment in TrustEverythingTrustManager . java to improve clarity and maintainability of the error message
fix : remove unused method getpagesizeval ( ) in listcapacitycmd
added a case for CLOSED in IteratingCallback . java to ensure proper handling of the CLOSED state in the callback logic
added a new boolean field ` isAuthorized ` and modified related methods in ` AccessControlContext ` and ` ProtectionDomain ` classes to enable authorization
updated OSGiDeployer to check if the app is an instance of AbstractOSGiApp before registering it as a deployment event to
added handling for " tiff " codec in DLNAMediaInfo . java to ensure correct MIME type is set for tiff images
fix race condition in optimizedcalltarget . setprofilearguments ( ) .
added a new file ` CubocDesktop . java ` and modified ` Cubocy . java ` , ` Map . java `
replaced ` getTestResourceDir ( " monitor - test - * " ) ` with ` File ` in the ` PolicyMonitor ` initialization to
added a call to remove all files from the trashbinListAdapter to ensure the trashbin list is removed before further operations
replaced ` org . eclipse . jdi . Bootstrap . allConnectors ( ) ` with ` com . sun . jdi .
truffle : add checkglobalnode . checkglobalnode to check global storage .
modified the ` createLauncherEvent ` method to include an ` Intent ` parameter and updated related logic to enhance event handling by incorporating
burningmanpresentationservice : increase the upper burn amount to avoid overflow
updated import statements and refactored the ` snapshotObject ` method in ` UniqueConstraintSnapshotGeneratorSnowflake . java ` to improve code
refactor item assignment logic in DMLTransformer . java to handle empty insert statements to improve clarity and correctness of SQL query construction
updated import statements and modified test method names in ServiceValidateControllerTests . java to ensure consistency and clarity in test cases
added a boolean parameter ` isStatement ` to the ` getDefaultValidFunctionName ` method and introduced a ` hideDefaultName ( ) ` method to
refactor JarLauncher class to improve code organization to enhance maintainability and readability of the code
updated generic type declarations in multiple classes to use generics to improve type safety and clarity in type usage
telephony : do n ' t send hole punch packet if it ' s not a jabber call
added a test method for updating a PGobject in ResultSetTest . java to ensure correct handling of PGobject values in database updates
updated password reset endpoint to return UNPROCESSABLE _ ENTITY when the user has non - UAA origin to ensure correct handling of unprocessable
replaced the retrieval of the first child of the document with a direct retrieval from the document element to simplify the code and improve readability by
refactor Cache class to improve cache handling to enhance performance and maintainability of cache operations
rename ` timeInSec ` to ` timeMillis ` and ` prevTimeMillis ` in ` Isochrone ` and ` SPTResource
fix the light relay not be able to set a valid bind . close # 159
added a new ` Chainer ` class and updated ` CollectionSubject ` and ` CollectionSubject ` to utilize it to improve code organization and
refactor Model class to improve code organization to enhance maintainability and readability of the codebase
updated the recordedTime calculation to include a long value of 619315200000L to ensure accurate representation of the recorded time in milliseconds
added a condition to resize the terminal if it does not start with a Windows terminal to improve user experience by ensuring the status is properly resized
updated host version setting logic in UpdateDesiredStackAction . java and modified repository version states in RepositoryVersionState . java to ensure proper handling of
simonstewart : move jre bundle deployment to integrationtestcase
mng - 4892 : add debug info to mavenexecutionrequest . setsettingsbuilder advice
changed the declaration of the ` op ` variable from a try - catch block to a final variable to simplify the code and improve readability by
reformatted the method call in KnativeEnvironment . java for improved readability to enhance code clarity and maintainability
updated the thread pool name from " commitlog _ archiver " to " CommitLogArchiver " to clarify the purpose of the
added multiple calls to ` connect ( ) ` in ` CloudSolrClient ` and created a test for uploads in ` TestCloudSolrClientConnections
added synchronization to synchronize access to the allBindings list to ensure thread safety when accessing shared resources
added methods to clear files and cache in ShadowContext . java and refactored file handling in RobolectricTestRunner . java to
added imports for LinkedHashSet and TreeMap , and updated styles handling in SecureXStream . java , and added unit tests in XStreamPersisterTest .
[ drools - 7 ] add kiemodulemodel to the kiemodule to make it easy to create a kiemod
updated condition checks for Farmland and Farmland in BlockEventListener . java to ensure correct handling of soil - dry flag for
added a default implementation of the getLocalIp method in FinishedSpan . java to provide a default implementation that returns null for the local IP address
updated JdbcStepExecutionDao to deserialize object values and modified test cases in AbstractStepExecutionDaoTests to enhance data handling and improve test coverage for
updated code structure and comments in multiple Java files to improve readability and maintainability of the code
added " python37 " and " python37 " to the resource list and updated preload resource paths to support additional Python libraries and ensure compatibility with
added a refresh button to the PluginTab class and updated JTable initialization to include a refresh button to enhance user experience by allowing users to refresh
change log level from info to warn for history file loading and trimming errors to improve logging severity for better debugging and monitoring
server : fix npe in vmwarestorageprocessor when vmmor be null
camel - 15836 : camel - s2s - camel - sftp : use sshd . stop ( true ) instead of sshd
refactor ExperimentalMockitoJUnitRunner class to improve code organization to enhance maintainability and readability of the codebase
updated GpsSettingsActivity , Session , and HttpUrlLogger to use a new utility method GetBuildSerial to improve code readability and maintain
refactor SwapGBuffers class to improve code readability to enhance maintainability and facilitate future updates
added null checks for spatial and skeletonControl before removing it to prevent potential NullPointerExceptions during control removal
added a test for setting smart replies in ShadowRankingTest and updated ShadowRanking to utilize the RankingReflector interface to
[ java ] do n ' t add segment file to the archive directory if it do n ' t exist .
updated the initialization of ` carrot2ResourcesDir ` in ` CarrotClusteringEngine . java ` to use ` initParams ` directly
added null check for ` testRect ` in ` WindowsTreeUI . java ` and created a new class ` bug8004298 .
updated ASM API version from ASM7 to ASM9 to ensure compatibility with newer ASM versions
improve error message when map file be empty
added ClientInfo and ClientInfoHolder imports and setup method in SurrogateAuthenticationEventListenerTests . java to enhance test setup by associating client information
added a new boolean variable isUserView and initialized it to false to disable user view functionality in CardPresenter
updated method names from ` GraphvizJavaExecutorUtility ` to ` GraphvizUtility ` for consistency and clarity to improve code readability and
log4j2 - 1343 log dispatcher thread metric should be store in a variable instead of create a new one
added a new module - info . java file for the SQLite connector module to provide module exports and dependencies for SQLite integration
added a delay of 500 milliseconds in StreamResetTest . java to introduce a delay before proceeding with further operations
removed conditional check for " new " type in PermissionsManager initialization to simplify code by eliminating unnecessary conditional checks
refactor DateParser and TestDateParser classes to improve code organization to enhance maintainability and readability of date parsing logic
added a method ` getDepth ( Context context ) ` to the ` SpringLoadedState ` class to provide a default depth of 0.5 f
replaced manual array copying with Arrays . copyOfRange in BinaryDecoder . java to improve code readability and performance by utilizing a constant for
refactor ExecutionGraph class to improve code organization to enhance maintainability and readability of the code
removed swipe - related components from NotificationActivity and removed them from NotificationRenderer to simplify the user interface by eliminating unnecessary swipe functionality
updated exception handling logic in DefaultExceptionConverter and modified test assertions in EndpointTest and EndpointTest to ensure proper handling of null invocation exceptions and improve
fix checkstyle issue in entity / glowcontainers / glowcontainer . java ( # 1193 )
replaced MethodHandle usage with reflection for setting the target field in ProxyMaker . java to improve code readability and maintainability by using a
change type casting from int to Integer in MathTest . java to ensure proper handling of integer values in the query results
updated return statements in BaseEmailContentFormatter to remove unnecessary StringUtils . join for metrics and datasets to improve code readability and reduce unnecessary string concatenation
added functionality to display a provided panel based on the presence of a simple panel to enhance user interface by providing a visual representation of the provided panel
added a null check for location in the dead server condition to ensure robustness by preventing potential null pointer exceptions when location is null
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a null check for key parameters in BasicChecker . java and simplified public key generation in BasicChecker . java to improve error handling and ensure
update MediaTypeRequestMatcher to use a new method ` shouldIgnore ` and add a test for handling ignored media types to improve code readability and
updated logging statements in LlapBaseInputFormat . java to use task ID instead of task attempt ID to improve clarity and maintainability of
added a property to allow bean definition overriding in EventServiceTests to enhance configuration flexibility for bean definition overriding
added a null check before closing the indexReader to avoid potential NullPointerException when indexReader is null
changed package declarations from ` service ` to ` btcmarkets ` across multiple classes to simplify package structure and improve clarity
added a new test method ` issue151 ` to the ` FencedCodeBlockParserTest ` class to ensure that the rendering logic correctly
added a new file CompatibilityTest . java to test property loading and verifying properties to ensure proper functionality and validation of properties in the
added new files ` VariantComponentsModule . java ` , ` PushUtils . java ` , and ` SecurityUtils . java ` to implement utility
[ hotfix ] [ table - planner - blink ] fix the logic of tablerebalancer . getnextsinglesegmentassignment ( )
bump version to 2.7 . 0 and release note
[ log4j2 - 1348 ] use system property for line separator in test
added a timeout check to the ajp connector that throw a sockettimeoutexception .
initialize friction , restitution , density , and isSensor to 0 and set isSensor to false to ensure default values are initialized
updated method signatures and variable names from ` fetchSaclingFactors ` to ` fetchScalingFactors ` across multiple classes to improve clarity and
added a shell command to wait for broadcast idle in LauncherInstrumentation . java to ensure proper handling of broadcast idle state during execution
added unit tests for font and link tags in ResourcesTest . java and modified span calculation in ResStringPool . java to ensure correct handling of
move guicatscomponent . getstats ( ) to src _ work / base / common / minecraft / src / minecraft
added permission handling for the CALL _ PHONE permission in Launcher . java and introduced a new constant in Utilities . java to improve user experience
updated return values in SimulationPanel and modified parameters in PlotDialog , BasicEventSimulationEngine , Startup , and BasicEventSimulationEngine to
updated GeoPointDistanceQuery , GeoPointInBBoxQuery , GeoPointInPolygonQuery , GeoEncodingUtils , and GeoPointInPolygonQuery
added a synchronized method ` isDockerAvailable ( ) ` in ` DockerClientFactory ` to check if the Docker client is available to ensure proper
added a new constant VPX with a value of " vpx " to the CodecTypes class to facilitate the use of
added a coordinator address option to the DistBuildFactory and updated the DistBuildRunCommand to allow configuration of the remote coordinator thrift server to connect
added path matching functionality in FsUtils and a synchronized timer method in WrapTimer to enhance path matching capabilities and improve thread safety in WrapTimer
added a conditional check before adding label values in TestTaxonomyFacetSumValueSource . java to ensure that only positive values are added to the label
mob - 1565 : make sure ` ` possiblygenericallytrue ' ' do n ' t show ` ` true ' '
removed the @ Test annotation from TestPerfBenchMarkDriver . java to streamline test execution by eliminating unnecessary tests
added materialization time setting in ObjectStore and implemented a test for updating creation metadata in TestObjectStore to ensure correct materialization time is set
added handling for UnsatisfiedLinkError in model loading methods to improve error reporting for missing native dependency issues
remove jmsampler . is _ one _ WAY property from gui and add response code to jms sampler gui .
updated the logic for determining break weight in GlyphView . java to improve clarity and correctness of break weight comparison logic
refactor sync reading logic in RCFile . java to improve clarity and efficiency to enhance efficiency in reading sync data from a buffer based on
added @ AwaitsFix annotation for SOLR - 13028 in AutoAddReplicasPlanActionTest . java to indicate that the test
refactor ToePool to use a unified LinkedList for storing steps and processors to improve code readability and maintainability by reducing redundancy
removed unnecessary parameters and simplified the ` setToSortedDataFlavorArray ` method in ` ClipboardTransferable ` and ` DataTransferer
hbase - 25827 add - infoport to testthriftservercmdline to avoid port conflict
added a check for EOF in the RegExpScanner class to ensure proper handling of end - of - file conditions in the regexp scanner
replaced direct retrieval of enabled metrics and timers with a static initialization loop to improve performance by reducing redundant calls to Boolean . getBoolean ( )
fix npe in chatroomjabber when no nickname be available
improve error message when file be miss or inaccessible
refactor refresh token creation logic into a separate method to improve code readability and maintainability by reducing duplication
updated error message format in BuckConfig . java for clarity to improve readability of error messages for better debugging
[ hotfix ] [ yarn - flink ] remove unnecessary code in yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ` to the ` ShadowNativeImageReaderSurfaceImage ` class to provide a synchronized implementation for
updated BTCChinaExchange to set SSL URI for BTCChina market data service to ensure secure communication for the BTCChina
pmd : use file . separator instead of file . separator on window
added OauthController and Oauth2PluginTest classes , along with OAuth2 integration tests to enhance OAuth authentication functionality and ensure proper testing of OAuth2
refactor SemgrexPattern class for improved readability to enhance maintainability and facilitate future development
added flatMap and flatCollection methods to AbstractStreamEx , StreamEx , and EntryStream classes , while removing it from EntryStream to streamline
updated error logging message in RestCodec . java and added error handling in ExceptionToProducerResponseConverters . java to improve clarity of error reporting
added a comment to clarify the purpose of the ` shouldComeFromThisClassLoader ` variable in ` RobolectricClassLoader .
updated the condition to check if ` transmittableAudioEncodings ` is not equal to ` sdp ` to ensure that only valid audio encodings are
changed the type of ` defaultValue ` from ` SequenceNextValueFunction ` to ` DatabaseFunction ` in ` CreateTableGenerator . java ` to
added methods to check for specific GML station versions in NormalizedMultiValuesTest . java to ensure accurate identification and validation of GML32
added a volatile boolean field ` wasInvoked ` and updated related methods in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest ` to
added checks for configuration before expanding regex mappings in ColumnarDataSource and updated return types in RowProcessor and BinaryResponseProcessor to ensure that expandRegex
refactor CustomSeekProvider to improve seek position handling to enhance clarity and maintainability of seek processing logic
added new classes XLCDCommunicator and XLCDController for managing Grbl and TinyG codes to implement functionality for
[ drools - 4892 ] use the internal jaxp validation api to load schema from the kmodule . xsd
added retry logic to check if messages are empty in multiple query classes to enhance reliability by allowing retries to complete before proceeding
refactor WorkerProcessPoolTest to use a unified join method for thread states to improve code readability and reduce duplication in thread state management
updated the equals and hashCode methods in DelegatingMethod . java and added a new DelegatingMethodTest . java file with corresponding unit tests to
updated FREEZE _ V2 , UNLEGATE _ RESOURCE , and UNLEGATE _ RESOURCE constants in EnergyCost . java
updated the method signature of ` command ` to throw ` ConfigurationException ` and added configuration save / reload functionality to improve error handling and ensure proper configuration
deleted the SpringTransactionHooks . java file and updated the target variable in SpringTransactionHooksTest . java to use AbstractSpringTransactionHooks instead
refactor AbstractClassAssert to improve code structure to enhance maintainability and readability of the code
added a new file GetUninitializedStringValue . java that demonstrates usage of StringReference to facilitate testing of uninitialized
added support for provided dependencies in AndroidLibraryDescription and integrated it into GraphEnhancementQueryEnvironment to enhance dependency resolution and improve test coverage for
added a new BooleanFlag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable the synchronization of keyboard
replaced system anomaly message retrieval with a static boolean flag for saving bugreport to improve code readability and maintainability by reducing red
added a constant for the CINEPACK format in FormatConfiguration and integrated it into LibMediaInfoParser to enable support for Cinepack format
added camera bobbing functionality and adjusted rotation parameters in Player . java to enhance player control over camera bobbing during gameplay
replaced ` data . describe ( ) ` with ` digest . toString ( ) ` in ` GrpcCasBlobUploader . java `
deleted the HSQLDBServerFilesFilter class and replaced its usage with FilenameFilter in TestUtility to streamline the codebase by eliminating
added additional null checks for restoreFromSeed and restoreFromKey in WalletAppKit . java to ensure proper handling of null values in restoreFrom
updated the method for retrieving the latest version from ` getApiDataVideoVersion ( ) ` to ` getApiDataSeriesVersion ( ) ` and added
added an overridden method ` visitMethodInvocation ` to check if a type exists in a method to ensure proper handling of method invocations based on the type
updated array size from 6 * 3 to NUM _ VALUES in AmbientCubemap . java to improve code readability and maintainability
[ netbeans - 4892 ] add ` ` reset ' ' dialog to profiler feature if it be not configure properly
added checks for zero values in GenericUDFMask , GenericUDFMaskFirstN , and GenericUDFMaskLastN classes to ensure
replaced usage of ` File . createTempFile ` with ` File . newFile ` in ` BoundedOverheadBlockStoreTest ` and ` Der
added a new method ` isItemStackDamageable ( ) ` and ` getHasSubtypes ( ) ` to ` ItemStack
fix line width not be set when render ( # 167447 )
danielwagnerhall : set the browser . startup . page to ` ` 0 ' ' instead of ` ` 0 '
updated the condition to check for both CONNECT and GET HTTP methods in Http1xClientConnection . java to ensure proper handling of HTTP / 1
updated the task accept method from " compile " to " process - classes " to improve clarity and specificity in processing classes
replaced the shutdown method with a closeIdleConnections method in HTTPHC4Impl . java to improve connection management by allowing idle connections to be
added a conditional check for aggregate function suffix before adding a metric identifier to ensure that aggregation functions are only added when necessary
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskThumbnailView to use mCurrentFullscreenParams to improve flexibility in
added a new file ` Solution . java ` that reads and prints a frequencies of a given number of integers to facilitate the analysis
[ java ] set ch1 to null in clusteredagentmanagerimpl to avoid nullpointerexception
refactor the MutisignOperationerGodicTest class for improved readability to enhance maintainability and facilitate future
added exception handling to ` readToStartFragment ( ) ` and ` readToEndFragment ( ) ` methods in ` StaxEventItemReader
replaced specific text imports with a wildcard import in ShadowTextView . java and added null check for qualifiedResourceName in TestAttributeSet . java
updated import statements in ClaimConversionServiceTests and ClaimTypeConverterTests to use net . minidev . json instead of com . nim
updated OS name handling to support both " Linux " and " AIX " alongside " Linux " to ensure compatibility with AIX architecture
server : use router . getid ( ) instead of getprivateip ( )
added a method ` invokeWithoutBlockingWithResultSync ` to the ` CN ` class to facilitate asynchronous execution of tasks with results
remove camel - spring - integration - xmpp - ignore from xmpp - ignore
replace integer division with Math . round for calculations in PortraitPagedViewHandler . java to improve code readability and maintainability by
corrected spacing in method calls in TestClusterDumper . java to improve code readability and maintain consistency in formatting
[ hotfix ] [ table - common ] fix row cache size calculation in keyvalue .
camel - 1889 : add type converter to camel - core to allow to configure type converter . thanks to david for the
added handling for ConditionalTask in SparkCrossProductCheck . java to ensure proper task processing for conditional tasks in SparkCrossProductCheck . java
added ACTION _ MANAGED _ PROFILE _ REMOVED to the filter in Launcher , LauncherAppState , and LauncherModel to
updated the condition in ` LoginInfoEndpoint ` to include a check for ` jsonResponse ` in the ` infoForLoginJson ` method to ensure
hbase - 25827 add a tostring ( ) method to the assignmentmanager to print the time taken for a region .
added a new field ` result ` and updated related methods in ` HuobiAccountInfo ` and ` HuobiAccountServiceRaw `
added support for " PERIOD " keyword in MariaDBDatabase and created a corresponding test in AddColumnGeneratorTest to ensure proper SQL generation
[ beam - 8470 ] add documentation for portable pipeline option
added instructions for updating dictionary loading mechanism in VersionChangeLogs . java to provide guidance on changes to the dictionary loading mechanism for Android 7.
updated the visibility of the NUM _ MILLIS _ IN _ DAY constant from private to public in TestUtil . java to allow access to the
removed a debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] do n ' t allow aeron client to be invoke in the consensus module .
added validation for implicit lambda parameters and introduced a new class NoWarnOnImplicitParams with generic interfaces to ensure correct type handling for implicit lambda parameters
refactor ` hideMenuItem ` and ` hideMenuItems ` methods to use a unified ` showMenuItem ` method to improve code readability and
updated the transaction type in BTCETransHistoryResult from " withdrawal " to " BTC _ deposit " to ensure proper
replace List < List < ? > > with Set < ? > for series and exceptions in RetryFilterFunctions . java to improve performance by using
marked the PluginLoader class as deprecated to indicate that it should no longer be used in future development
updated the condition in LastQueryExecutor to handle unseq time larger than sequence time and added a new test case in IoTDBLastIT to
corrected the newline character in the request string appending to ensure proper formatting of the response
set slf4j ' s simplelogger . simplelogger . log . org . apache . http . wire . error to " error "
added titleBar . setSafeArea ( true ) to Sheet . java to ensure the title bar is safe for better user experience
modified the iteration order of TimeSeriesChunkMetaData in OverflowSeriesImpl . java to ensure all TimeSeriesChunkMetaData elements are processed in reverse order to
added SQL syntax to the ALTER TABLE command in AlterTest . java to ensure correct parsing and deparsing of SQL statements
changed the access modifier of the copyState method from package - private to public to allow access to the method from other classes
fixed - redissonexecutorservice . executeasync ( taskparameters ) method return empty result if executorservice . executeCallable ( ) return null .
hbase - 2695 add . part file extension to file lister , and use it in filelister .
[ hotfix ] [ table - common ] fix checkstyle violation in org . apache . camel - orc
rearranged the order of variable assignments in CompareFunctionsProcessor . java to improve code readability and maintainability
refactor ` reduceScopeForLimitedSpace ` and ` checkAvailableDiskSpace ` methods to accept ` expectedSize ` instead of ` long
removed the ` toString ( IndexReader ir ) ` method from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTerm
added state checks in AbsSwipeUpHandler and unregistering TaskStackListener in TaskAnimationManager to ensure proper handling of invalidated states and prevent
removed the ` Context ` parameter from ` getLockTimestamp ` and ` setLockTimestamp ` methods in ` AppPreferences ` , refactored `
refactor artist retrieval logic in MediaInfoParser to use a dedicated method to improve code readability and maintainability by centralizing artist retrieval logic
added null check for remoteMessage before accessing its data to prevent potential NullPointerExceptions when remoteMessage is null
added null and empty checks for splitInfo and splitFlowFile in SplitText . java and corresponding unit tests in TestSplitText . java to
added support for Windows key store type in HttpsConnectorFactory to ensure compatibility with Windows - specific key store configurations
updated the default CHECK _ TIMEOUT value from 400 to 1 _ 000 in RestTemplateSenderTest . java and WebClientSenderTests . java to
added a condition to check if the result code is not FILE _ NOT _ FOUND in FileSyncAdapter . java to ensure that the handling
added animation functionality to the Slider class to enhance user experience by allowing customizable animation options
replaced occurrences of ` eol ` with ` lineSeparator ` in ` LineSeparatorProcessorTest . java ` to ensure consistency in variable naming conventions
increased maxWidth and maxHeight from 512 to 1024 in TexturePacker . java to optimize memory usage for texture packing
added a new test method ` negatedTernaryNotUnwrapped ` in ` UnnecessaryParenthesesTest . java ` and modified the condition
camel - 17284 : fix npe in camel - hazelcast - consumer when poll timeout be set to false .
added a new test class ` TextFeedbackTest ` and refactored ` TestRunner ` and ` AllTests ` to include it to enhance
replace Math . round with Float . compare for score comparison in DefaultSolrHighlighter . java to improve accuracy of score comparison by using a more
updated case statements in AddAndScaleMultiImage . java and ResourceEditorApp . java to use try - with - resources for FileOutputStream and FileOutputStream
added a new method ` arrayClassElementOffset ( ) ` to ` HotSpotReplacementsUtil ` and updated ` ArrayCopySnippets `
skip stage total per - total per - total metric in defaultlogpublisher
added support for remote SCM in configuration and runtime environment to enhance flexibility in managing remote system configurations
[ miele appliance ] add new state ( state _ end | state _ rinse _ hOLD ) and state _ rin
replaced ` StatsLogCompat ` with ` SysUiStatsLog ` for logging events in ` StatsLogCompatManager . java ` to improve
corrected the spelling of " log " to " LOG " in LocalZookeeper . java to improve code readability and maintain consistency in
added unit tests for ProjectGenerationEvent ' s finished and started events in EventSerializationTest . java to ensure correct serialization and deserialization of ProjectGeneration
ggb - 1881 add preview _ points feature to selectionmanager
refactor JavaCompiler class to improve code readability to enhance maintainability and facilitate future development
added validation to ensure remainingTime is non - negative before executing random reads in IntegrationTestTimeBoundedRequestsWithRegionReplicas . java to prevent
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
added " -- gc - sections " and " nocopyreloc " flags to the ImmutableList initialization in NdkCxxPlatform . java to
updated SpringCloudCircuitBreakerFilterFactory to expand fallback URIs using ServerWebExchangeUtils to enhance flexibility in handling fallback URIs during circuit breaker
danielwagnerhall : add miss copyright header to test file
do n ' t try to read sst / t / sst / t / t / sst / t / t / sst
added a method to retrieve an account net by HTTP in HttpMethed . java and a corresponding test in HttpTestAccount001 . java
added a null check for availTextWidth in SwingUtilities2 . java and improved error handling in Test6635110 . java to
refactor FlatteningIterator to improve clarity and consistency in handling flattening iterators to enhance code readability and maintainability by standardizing iterator
removed HTML tags from title and body in TweetLinkUtils to ensure proper formatting of HTML elements in the title and body
doc : generate sample code in the java microgenerator ( # 4382 )
update instructorfeedbackeditquestionquestionuitest to be able to delete question
updated return values and conditions in HSSFSheet . java and added multiple assertions in BaseTestSheet . java to ensure correct behavior of row
added permission checks for launcher activities in InstallShortcutReceiver , Launcher , and PendingAddComponent classes to enhance security by ensuring malicious intents
[ java ] send event and time of last activity time when a session be open .
updated the hashCode method in AbstractParquetMapInspector to use AbstractParquetMapInspector instead of StandardParquetHiveMapInspector to improve
added logic to flush and release the Quic session if the connection is remotely closed to ensure proper resource management and prevent potential memory leaks
modified the SplitReader interface to extend AutoCloseable and removed the close method from the close method to enhance resource management by extending AutoCloseable
removed the ` deepCopy ` method from ` GsonBuilder ` to streamline the code by eliminating unnecessary object creation
llinescanner : use a static final llsourcemap instead of null to improve performance by avoiding unnecessary object creation
refactor fileOpenFuture initialization and streamline asynchronous file handling in RestClientRequestImpl . java to improve code readability and maintainability by
removed unnecessary whitespace in dispatchStatusString method call to improve code readability and maintain consistency
updated ClassLoader handling in MockFactory and added a new SearchingClassLoader class to improve class loading efficiency and facilitate the use of the
* add test case for refresh flag in scene
added a condition to check for LEFT _ SEMI _ JOIN in ConstantPropagateProcFactory . java to ensure proper handling of LEFT _ SE
simplified conditional checks in HttpReceiver and HttpSender for response completion and request completion to improve code readability and maintainability by reducing
use arraydesclengthoffset ( ) instead of arraylengthoffset ( ) to reduce memory usage
http : / / issues . apache . org / jira / browse / amq - 4892 - add default policy to broker test
refactor multiple Java classes related to Kerberos to improve code organization and maintainability
added a check to ensure the application context is running before stopping it to avoid potential NullPointerExceptions when the application context is not running
changed the return type of the drawItem method from void to GlyphLayout to enhance flexibility by allowing the method to return a GlyphLayout object
refactor metrics retrieval in SpringmvcClient to use MetricsPublisher for improved performance to streamline metrics retrieval and enhance error handling by throwing
added a constant for SAFE _ ACCOUNT _ AGE _ DATE and updated the mapping logic in AccountAgeWitnessService . java to ensure
refactor code formatting and improve readability in StructureHeader . java and StructureReader . java to enhance code readability and maintainability
added ResourceUrlProviderExposingInterceptor to the CasWebflowContextConfiguration and related classes to support handling of ` ResourceUrlProvider ` in the
add dexbody . transform ( ) and dexbody . deadassignmenteliminator . v ( ) . transform ( jbody )
update enrichedruledto to use getproperties ( ) instead of getconfiguration ( ) . getproperties ( )
removed the NOFOLLOW _ LINKS option from the directory check in PathResource . java and updated the test cases in AliasCheckerSymlinkTest .
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] remove sqldialect from executioncontext
refactor ` AndroidPackageableCollection ` to use ` Supplier < ImmutableSet < String > > ` instead of ` ImmutableSet < String > ` for
pmd : add test case for package name in package declaration
added configuration for minimum cross compaction unseq file level in IoTDBDescriptor to enhance configuration flexibility for cross compaction unseq file configuration
[ hotfix ] [ runtime ] move resource manager class to correct package
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn ` to clarify that the test
updated URI creation in ZipResource . java to handle URISyntaxException and added a new test class ZipResourceTest . java to improve URI handling and ensure
updated formatting and added thumbnail handling in ExpandableUploadListAdapter . java for better readability and functionality to enhance code clarity and ensure proper
refactor RobolectricTestRunner to iterate through parent classes and add tests for config merging to improve clarity and ensure correct configuration merging
updated block and item list initialization to filter based on registry name to ensure that only valid blocks and items are processed
removed abstract methods from AbstractDataChangedListener and updated WebsocketCollector and WebsocketDataChangedListener to extend AbstractDataChangedListener to simplify method
updated JSONPojoConvertor to handle enum types and improved test assertions in JSONPojoConvertorTest to enhance type safety and ensure
added deprecation warning for ` -- view ` option in ` IjProjectCommandHelper . java ` to inform users that the ` -- view `
refactor GWTRequestWrapper to use ByteArrayOutputStream instead of String for originalPayload and adjusted character encoding handling to improve memory efficiency and enhance character encoding handling
updated GyroControl to implement OrientationEventListener and added orientation correction functionality to enhance touch responsiveness based on device orientation changes
bump biome _ list _ size from 256 to biomegenbase . getbiomegenarray ( ) . length
replaced instances of ` println ` with ` print ` in ` GetInterfaceTest . java ` and made interfaces public to enhance code clarity
removed duplicate declaration of the variable ' env ' in FileCompilerConfig . java to streamline code for better readability and maintainability
added a new interface ByteToLongCollector in the com . speedment . common . function . collector package to provide a centralized way to collect
added a preload parameter to the MMapDirectoryFactory class to control preloading behavior based on user parameters
added custom metrics for world , economy , economy , plot expiry , and mysql in BukkitPlatform . java
refactor QuickConnectREST class to improve code organization to enhance maintainability and readability of the code
added aspect ratio and default card image retrieval in CardPresenter . java to enhance the visual appearance of the default card folder
use loginpageurl instead of implicit check for login method in authentication count selector
updated cloning logic for long , double , byte , and byte lengths in VectorHashKeyWrapper . java to ensure proper handling of empty arrays and
added tests for system nanotime functionality in TimeChangeTest . java to enhance testing capabilities for system nanotime operations in the CRI
added trimming and null check for the line variable in MultiPartFilter . java and improved error logging in MultipartFilterTest . java to
add an experiencedropevent to the livingbaselivingbase . getexperiencedropevent ( ) method . ( #
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to use " @ text / offline . config - error - unknown - apikey
[ beam - 10660 ] remove unsupportedoperatorsvisitor from beamqueryplanner
added RdepsFunction to GraphEnhancementQueryEnvironment and updated related tests to enhance dependency management and improve test coverage for Rdeps functionality
refactor Character class to improve code readability to enhance maintainability and facilitate future updates
added a check to determine if the selected rocket is a entire rocket before setting the selection option to ensure that the selection option is only
replaced ` Arrays . toString ( ) ` with ` rs . getBytes ( 4 ) ` in ` UpdateableResultTest . java ` to
added time boundary info retrieval for hybrid tables and refactored the attachTimeBoundary method to improve the handling of time boundary information for hybrid tables
simplify the logic for adding socket references in the APR connector to improve code readability and maintainability
change eightmuses ripper to use a huge collection of free porn comic for adults and porn com
replaced instances of ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` for consistency across multiple test files to
added a condition to check if the profile is a phone and not landscape in QuickstepLauncher . java to ensure proper layout behavior for phone
replaced calls to ` getValue ( ) ` with ` unwrap ( QueryImpl . class ) ` in ` PartTreeJpaQueryIntegrationTests
replaced direct calls to ` Files . readAllLines ` with a new method ` readMatchingLines ` to improve code readability and encapsulate
removed dynamic check for the " getResultStream " method in JpaQueryExecution . java to streamline the code by eliminating unnecessary dynamic
added null check for entity and type in PhysicsProcess . java to prevent potential NullPointerExceptions during entity processing
added a test to ensure entry processor clears the map when attribute attributes are indexed to ensure that the entry processor clears the map when attributes are indexed
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
updated color values in Utils . java and modified HTML message format in UtilsTest . java to ensure correct color representation and enhance test coverage for color
fix ` ` disable ' ' feature for empty string
updated scratch path format and added RmStep to Aapt2Link . java to improve clarity and functionality of scratch path management in the
replaced instances of ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest .
ggb - 1889 clear selected geos only once , not only once
added handling for MarkedYAMLException and EmptyStackException in YsldValidator . java to improve error handling and provide clearer error messages
implemented the ` isCanceled ( ) ` method in multiple classes and updated its implementation in ` ExecutorCallAdapterFactory ` to ensure consistent behavior across
refactor the ` isAnnotationPresent ` method across multiple classes to use a default implementation to improve code readability and maintainability by reducing redundancy
added a default implementation for the ` removeAllWidgets ` method in ` UILayout . java ` to ensure that the ` removeAllWidgets ` method
[ hotfix ] [ yarn ] make yarntestbase and yarnsessionfifoitcase tolerant to log4j
opensslcipher : fix incorrect output size calculation
added logic to determine if transcoding is used for high - res content in Fire TV Stick to ensure proper handling of high - res
[ beam - 10688 ] use datastream . show ( ) instead of apply to datastream . show ( ) .
replaced specific imports with a wildcard import and modified listener handling in GpsLoggingService to improve code readability and maintainability by using a
changed the parameter type of ` putString ` from ` boolean [ ] ` to ` byte [ ] ` in ` vt320 . java ` and
added support for BaseItemDragListener in FolderIcon . java to enhance drag - and - drop functionality in the launcher
added createEmptyArtifact method to multiple connector classes and modified return statements in AbstractRepositoryConnector , AbstractRepositoryConnector , SignavioConnector ,
updated comments in RabbitMQPublisherImpl . java for consistency to improve code readability and maintainability
removed conditional checks for afterAug1 and afterAug1 in video loading condition to simplify the condition for video link loading
camel - 16462 : camel - sftp - do n ' t compact the path when create a sftp operation
fix flaky baseweatherconsumertest . testmockendpointsatisfied ( )
rename variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability by using a more descriptive
added support for LARGE _ FERN in condition checks in BlockDoublePlant . java and BlockType . java to ensure compatibility with
replaced ` setFocusable ( false ) ` with ` setRequestFocusEnabled ( false ) ` in ` TranscodingTab . java ` to
cloudstack - 4892 : do n ' t swallow exception when fail to start
removed the ` requireLicense ( ) ` method from ` DB2TestSystem ` and updated conditional checks in ` DockerDatabaseWrapper ` and `
updated UnitGroup usage and added unit management in DoubleModel , GeneralOptimizationDialog , and OptimizationPlotDialog classes to improve unit handling and
added a new constant BTC _ ZMW for currency pairs BTC and ZMW to facilitate the creation of currency
added a check for the number of samples in TestPBRLighting . java to set the number of samples based on the user ' s
updated test assertions in StepWithSimpleTaskJobParserTests to remove " job . step " prefix to streamline test execution by eliminating
changed variable declarations from non - final to final in CentralAuthenticationServiceImplTests . java to enforce immutability and ensure immutability
[ ggbabs ] fix syntax error in ggbabs ( )
added multiple calls to ` addServiceOutput ( ) ` and ` hasTrigger ( ) ` in ` DDLSemanticAnalyzer . java `
[ zeppelin - 1349 ] fix bigdecimal coercion for object creation expression
added a comment to hide the jdt used by the jetty in WebAppContext . java to clarify that the jdt is used
removed the call to super . useAuthCache ( ) in NegotiateAuthentication . java to simplify the logic by always returning false
convert segments [ 0 ] to lowercase in PageTitle . java to ensure consistent namespace formatting by capitalizing segments
camel - 16462 : fixed the backward compatibility issue of camel - direct
added a null check for the ZooKeeper object before setting it to null to avoid potential NullPointerException when accessing the ZooKeeper state
corrected spacing in progress bar step message to improve code readability and maintain consistency
replaced direct calls to ` mVibrator . vibrate ( ) ` with ` runOnUiHelperThread ( ) `
added a method to update the last remote stream ID in HTTP2Session . java to ensure that the last remote stream ID is updated correctly for
added text anti - aliasing to the Graphics2D rendering hint in EditorHeader . java and EditorToolbar . java to enhance text rendering quality
[ java ] do n ' t use termwindowsize when calculate the available window .
refactor : remove static import of enums in ctannotationimpl . java ( # 2296 )
refactor ExoPlayer class to improve code readability to enhance maintainability and facilitate future updates
replaced the native method ` getRGBPixelImpl ` with a native method ` getRGBPixels ` in ` WRobotPeer . java
added a new method ` newPrintStream ` to handle non - null encoding for output streams to improve flexibility in handling different encoding settings for
updated the vibration duration from 1 to 25 in TouchableMovementMethod . java to improve the responsiveness of the touchable movement
fix checkstyle issue in util / flybush / appenginesqlcloudsession . java and testenvironment . java
reformatted the constructor of WebSocketClient for improved readability to enhance code clarity and maintainability
simonstewart : make the i18n test work again
use handleloadconstantexception instead of handleinaccessibleclasschangeerror in bytecodeparser
added a call to ` context . restoreAuthSystemState ( ) ` in ` XmlWorkflowServiceIT . java ` to ensure that the security
added a new ` LowercaseComparator ` class and updated constructors in ` CoNLLUFeatures ` to use it to improve sorting flexibility
refactor JavadocTool and T7091528 to streamline file parsing logic and improve error handling to enhance code clarity and maintainability
simonstewart : add a new test for toggle an option in a multi - select .
added a check for the length of keys in HighestKvno . java to ensure that an exception is thrown when the key length is
added error handling for retrieving attributes in HDF5BatchReader to ensure only Huge objects BTrees with 1 record are supported to improve robustness
[ beam - 8470 ] use pdone return type instead of pdone return type for batch load and windowed query
rename ` copySnippetRequestEntity ` to ` createTemplateRequestEntity ` and add ` ApiImplicitParam ` annotations in ` ProcessGroupResource `
added a new file TestMultiANewArray . java to implement testing for multi - dimensional arrays in Java to ensure correct functionality and error handling
add a global config option to disable secondary storage on management server
refactor variable naming for clarity and conditional logic in SyncBlockChainMsgHandler . java to improve readability and maintainability of the code
set the theme of the preview tab in PreviewTabView to ensure the correct theme is used for the preview tab
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leak
added a test for HTTP idle timeout in ` ConnectorTimeoutTest . java ` and modified the ` ServerConnectorTimeoutTest . java ` to ensure
add property for dcoref . dictlist , dcoref . dictpmi , dcoref . signatures , and dcoref
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` in ` DocCommentParser . java ` and added a new method
removed unnecessary type casting and updated parameter values in JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests to improve code read
changed log level from warn to debug for child node detection to reduce log verbosity for better debugging
refactor ColorExtractionService to use a new method for retrieving the hotseat palette to improve code readability and maintainability by centralizing
added methods to set default data table entry and cell transformers in TypeRegistry and TypeRegistry classes to enhance the flexibility and functionality of data table
removed an assertion for newAvailableShared in AtomicRemainder . java to streamline the code by eliminating unnecessary assertions
chore ( regen ) : regenerate with update license year ( # 1 )
removed the ` projectGenerated ` field and its getter method from ` ProjectGenerator ` to streamline the project generation process by eliminating unnecessary
corrected the spelling of " AUTH _ HEADER " in the conditional statement to improve code readability and maintain consistency
added new routes for handling contact form requests and created a new Contact class to enhance functionality for handling contact data in the application
guacamole - 1349 : use objectpermissionset instead of permission to allow access to system permission .
updated the RELEASE _ VERSION constant from 20 to 21 in IconCache . java to reflect the new release version of the application
[ hotfix ] fix typo in method parameter name
updated method names and queries to use " findWhereNameOrAliasLikeAndActive " instead of " findWhereNameLikeAndActive " to
replaced manual closing of per - document consumers with IOUtils ' s closeSafely method to improve code readability and maintainability by utilizing
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added an OnClickListener to the overflow button in ExpansionViewHelper to improve user interaction by allowing the overflow button to be shown
updated error messages from " is null " and " is not null " to " is a " reference " across multiple files to improve clarity
ggb - 1346 update the line height of the help button in the av , so that it do n ' t appear in the
move io . bisq . network . p2p . network to io . bisq . core . util ; move protobufferutil
fix divider position and side pane width calculation
improve crossref handling in aux file generation .
[ geos - 6769 ] update geoserverfeaturesource and geoserverfeaturestore to use metadatamap instead of map
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity by using a more descriptive
fix a bug where avatar be not update in the meta contact list when update a contact .
updated import statements in ShellCommand . java and ShellFactoryImpl . java to ensure consistency in package structure
added a new test method ` testCleanUpAuditLogTablePostParametersByPosition ` to ` AuditLogTest . java ` to verify the
changed the return type of the inject method from Class < T > to Object and added a suppress warnings annotation to improve type safety and suppress unchecked
added regex patterns for parsing comment lines in ` ACLFileParser . java ` and updated corresponding tests in ` ACLFileParserTest . java `
updated import statements and modified the ` isReadable ` method in ` MapRDBFormatMatcher ` and ` MapRDBSubScan ` classes to
added a new HashMap < String , String > for ancestor dimension values and updated related methods in StarTreeImpl and TestStarTreeNodeImpl to
added user unlock check before dumping plugin manager in TouchInteractionService and refactored close logic in BaseQuickstepLauncher and Launcher to
updated condition from widthStr to positionStr in Photo . java to check for positionStr instead of widthStr
refactor conditional checks for certificate validation in PKIXValidator . java to improve code readability and maintainability
[ hotfix ] [ hadoop ] [ hadoop ] [ test ] add archunit test for the test code
corrected the package name from " org . apache . shenyu . integratedtest . alibaba " to " org .
server : remove skipprojectnetworks from listnetworks / listnetworks api call
updated the method from ` remove ` to ` get ` in ` RuntimeTypeAdapterFactoryFunctionalTest ` to ensure the correct retrieval of the
mob - 488 : make sure we do n ' t store undo info when property change
replaced direct retrieval of the " sun . java2d . xrgradcache " property with a privileged action to ensure that the system
replaced assertion with awaitility for checking stream size in StreamCloseTest . java to improve test reliability by using awaitility for asynchronous operations
added ` doAfterFlush ` method to ` DocConsumer ` , modified ` TermVectorsConsumer ` , and ` TermVectorsConsumerPerField `
updated ConfigurationMetadataGenerator to filter out deprecated errors and modified AbstractJpaProperties to include NestedConfigurationProperty to improve error handling by filtering out deprecated
changed variable declarations from ` capacity ` to ` value ` in both ` BiInt2ObjectMap ` and ` Int2ObjectHashMap ` to
increased the maximum number of threads from 25 to 15 in HiveConf . java and refactored file rename logic in Hive . java
do n ' t swallow exception in parallelniosender when send message fails .
added a null check for the context in SchemeAndroidIDE . java to prevent potential NullPointerExceptions when the context is null
svm : fix classloading issue in native - image build server
changed return type of ` modifyGrantedAuthorities ` method from void to List in ` SwitchUserAuthorityChanger ` and ` SwitchUserProcessing
refactor JaxrsIntegrationTest to extend JaxrsIntegrationTestBase and add new integration test classes for improved integration testing to enhance integration testing
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 339 . add
added DataProviders for general and supplementary character tests in XslSubstringTest . java to enhance testing capabilities for various character types in the
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter `
added support for MariaDB sequences in MariaDBDatabase and modified sequence generation logic in CreateSequenceGenerator to ensure compatibility with MariaDB
updated string concatenation syntax in multiple Java files for consistency to improve code readability and maintainability
replaced the import of BrokerResponse with TableDataManagerProvider in multiple test files to streamline the code by utilizing the TableDataManager
added support for the " jsse . enableMFLNExtension " property in SSLExtension . java to ensure that the JSP extension is
refactor ObjectHashSet and ObjectHashSet classes to remove generic type parameters and simplify iterator initialization to enhance type safety and improve code clarity
updated character count in Compose . java and TweetFragment . java from 22 to 23 for shortened URLs to enhance user experience by providing
added a new constant DATAPOINT _ TTL and updated data point write buffer methods to include it to enhance data management by introducing a
modified the ` checkForAndKillXcodeIfRunning ` method to accept a boolean parameter for prompt behavior to enhance flexibility in handling Xcode
added a method to retrieve the terrain at a cell in TerrainGrid . java to enable retrieval of a terrain from a specified cell
added default value printing functionality in ` Pretty . java ` and created a new class ` T6665791 . java ` with a test
added error handling for missing quest keys in ResourceLoader to improve robustness by logging an error when the file is not found
modified the return statement to check if the transport is not pushing before proceeding to ensure that push support is only applied when the transport is
refactor PointValue class to improve code readability to enhance maintainability and facilitate future updates
removed the sign operation for local witnesses in BlockUtil . java to streamline the signing process by eliminating unnecessary code
added null checks and security checks in FileSystemView , Win32ShellFolder2 , and Win32ShellFolderManager2 classes to improve robustness
updated methods to retrieve maximum height instead of row height and renamed ` copyContent ` to ` copyLastRow ` in ` PdfPRow `
refactor undoTrash , undoArchive , and undoNotesList management in ListFragment . java to use SparseArray for managing undo notes to improve
add feedback question id and id to backup backup
added a null check for the data parameter in getTransferData method to ensure that the method does not throw an exception for non - null data
remove unused pstmtdelegate . java and package - info . java
replaced ` Padding ` class with ` Rect ` in ` AppWidgetResizeFrame ` and ` Launcher ` classes to utilize `
refactor NashornBeansLinker to use a static block for method handles and introduce a new method for handling ConsString to improve
refactor ClassGraph and ScanResult classes to improve code organization to enhance maintainability and readability of the codebase
rename ` CountDownLatch ` to ` CountDownLatch ` for clarity to improve code readability and maintainability by using a more d
replaced calls to ` expectFailure . getFailure ( ) . getMessage ( ) ` with ` expectFailure . getFailure ( ) . has
replaced instances of ` get ( ) ` and ` set ( ) ` with ` null ` for ` currentBook ` in multiple classes to
refactor ContactSecurityVoter to include support checks for MethodInvocation in the vote method to enhance flexibility in handling different object types during security
removed unused imports from DataLoader . java to clean up the code and improve readability
added a rowAffected parameter to multiple postUpdateLog methods across multiple step classes to enable tracking of affected rows in the update process
ggb - 1889 fix margin issue in ggb - 1889
set foregroundFPS and backgroundFPS to 60 seconds in JglfwApplicationConfiguration . java to improve rendering performance by reducing the frequency
added ObjectReleaseTracker assertions to HdfsTransactionLog and TransactionLog classes to ensure proper resource management and prevent memory leaks
replaced ` DefaultWebSocketFrame . FrameType . CLOSE ` with ` ChannelFutureListener . CLOSE ` in ` DefaultHttpServer . java `
renamed ` TestApplicationEventListener ` and ` TestApplicationEventListener1 ` to ` TestApplicationEventListener1 ` and ` TestApplicationEventListener2 `
refactor SettingsActivity to use a dedicated method for setting the background color to improve code readability and maintainability by centralizing background setting logic
updated imports from Apache Commons StringUtils to OpenHAB StringUtils and added a null check for the line variable to ensure compatibility with OpenHAB
[ hotfix ] [ table - common ] [ table - planner - blink ] [ table - planner - blink ] add aggregate function
[ hotfix ] fix checkstyle violation in put and replicationsink
replaced ` VALID _ CACHE _ SET ` with ` REGEXP _ CACHE ` for caching regular expressions to improve performance and efficiency by reducing
added a static method to reset the gameThread variable to provide a way to reset the game thread state
added a login method to return null if the realm does not match the realm in the DigestAuthenticator class to ensure that the login service does not
refactor parameter handling in SavedRequestAwareWrapper to use iterator for improved readability and efficiency to enhance code clarity and maintainability
updated info status message to use ' lc ' instead of ' hiddenSingleton ' and improved string concatenation in several classes to enhance clarity and
replaced multiple calls to ` hasNotified . compareAndSet ( false , true ) ` with ` this . wakeup ( ) ` in `
added a check for Android O in PhotoViewerActivity and introduced a new utility method in UserAutoCompleteHelper to ensure compatibility with Android O and
updated schema info level from minimum to basic in SchemaCrawlerOptions to enhance flexibility in schema information generation
replaced ` XMLStreamWriter ` with ` BufferedOutputStream ` in ` SaveTask . java ` and modified ` VizModel . java ` to improve
updated TestPayloads . java to use UTF - 8 encoding for generating random byte lengths and replaced bytesToString method with new String constructor to improve
fix mc - 103516 not be able to remove entity from list . close # 103516
removed duplicate entries for " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101
[ drools - 1348 ] fix a bug in marshalling of multi - accumulate ( # 1349 )
fix switch / cases indentation see camel - 14540
pdfbox - 4071 : remove public modifier , a suggest by valerybokov
added support for retrieving HTTP methods and headers in RemoteEndpointServiceAccessStrategy to enhance security by using Spring Expression Language for HTTP requests
added a new method ` newResponseBuilder ` to handle ` SolrQueryRequest ` and ` SearchComponent ` in ` SearchHandler . java `
added notification for command start in AsyncBackgroundTaskManagerTest to ensure proper handling of command start events during background tasks
updated the ` recomputePreviewDrawingParams ` method to accept a ` mReferenceDrawable ` parameter instead of a ` Drawable ` to improve flexibility
updated LukeRequestHandler to use CharFilterFactory instead of SimpleOrderedMap for tokenizer , filters , and cfilters to enhance token processing capabilities
replaced null checks with ParamChecks . nullNotPermitted for plot , generator , and hotspot arguments to improve code readability and maintainability
added verbosity handling to the ` createSubContext ` method to support conditional output based on verbosity settings to enhance flexibility in logging output based on
added a check to convert the schema to uppercase if it ' s not null and the database type is " oracle " to ensure compatibility with Oracle
add logmanager . getcontext ( false ) . getname ( ) to logmanager . getcontext ( false ) . getname ( )
added a new file TestShrinkToOneRegion . java that demonstrates the use of System . gc ( ) to demonstrate
refactor code to use Splitter for splitting custom packages to improve readability and maintainability of the code
updated context handling in AnalyzingInfixSuggester and added a new test method in AnalyzingInfixSuggesterTest
updated the attachment handling logic in PushsaferMessageBuilder . java to use a local variable for better clarity to improve code readability and
updated the ` showLabelStats ` method in ` ModelExplorer ` , ` SequenceModelExplorer ` , and ` StripProvenance ` classes to
pdfbox - 4071 : remove unnecessary null check , a suggest by valerybokov
changed the access modifier of the FORMATTER function from ' final static ' to ' static ' across multiple field test classes to enforce immutability
replaced Apache Commons Logging with Java ' s built - in Math and RoundingMode in UDFRound . java to improve code clarity and
refactor configuration retrieval to use ConfigParser for injection enabled and useIncludedLibrary to improve code readability and maintainability by reducing redundancy
changed class declarations from package - private to public in Test1 . java and Test2 . java to allow access to these classes from other packages
updated permission messages in PlayerEventListener to use " deny . no _ enter " instead of " permission . no _ permission _ event " to enhance
updated the ` getAdditional ` method in ` ConditionAndOr ` and ` ConditionInConstantSet ` to include a session parameter to enhance functionality by
replaced ` doTestNormsVersusStoredFields ( ) ` with ` doTestNormsVersusDocValues ( )
added random friction calculations for Box2DCharacterController and reset contact friction in Box2DCharacterControllerTest to ensure proper
added tests for exceeding memory size limits in FLIGHT _ RECORDER _ OPTIONS and implemented memory size adjustment in TestMemoryOptions to ensure
removed validation checks for power of 2 and multiple of 8 in ObjectAlignment and Options classes to streamline code by eliminating unnecessary checks
added a method to extract the target package from the manifest and updated related classes to utilize this new functionality to enhance the instrumentation testing capabilities by
refactor DocHelper class to improve code organization to enhance maintainability and readability of the code
fix a bug in the constructor of acceptableThrowawayItems that could cause a concurrentmodificationexception .
replaced generic type parameters with explicit type casting for method calls in Test6987555 . java to ensure proper type casting for method calls
reformatted code for consistency and clarity in MessageHandler . java to improve code readability and maintainability
refactor Inflection class to improve code readability to enhance maintainability and facilitate future updates
added methods to retrieve and set the locale in EvaluationContext to enhance functionality by allowing locale management in the el context
added import statement for io . cucumber . core . api . plugin . Plugin in SummaryPrinter . java to facilitate the
added a break statement in the DrawerActivity . java file to improve control flow in the navigation process
updated import statements in MongoQueryCreator . java to use wildcard import and improved debug logging to enhance code readability and maintainability by using
add a system property xwork . loggerfactory to allow to configure the xwork . loggerfactory
renamed test methods in AdminAddPeerWithP2PDisabledAcceptanceTest to reflect their purpose to improve clarity and understanding of
polish ` ` add readiness / liveness health indicator ' ' and ` ` liveness health indicator ' ' bean name
added a concurrent map for concurrent write operations in LocalPStoreProvider to ensure thread - safe access to local PStore configurations
changed the visibility of the deleteFiles method from public to private to restrict access to the method for better encapsulation
replaced instances of ` Provider ` with ` ServiceProvider ` in ` ServiceLoaderSpliterator . java ` and updated related methods to improve cl
truffle : do n ' t throw nosuchfieldexception in javainterop reflect . findfield ( ) and javainterop
added toolchain creation checks and corresponding tests in multiple classes to ensure accurate validation of Android SDK changes when toolchains are present
fix race condition when context be already add to engine .
replaced ` indexOf ` with ` contains ` for string checks in ` AbstractCheckDescriptor . java ` to improve code readability and maintainability
updated linker flag handling from ` setLinkerFlags ` to ` setExportedLinkerFlags ` across multiple classes to ensure that exported linker flags
refactor ` onConfigurationChangedInternal ` to ` updateRecentsRotation ` in ` AbsSwipeUpHandler ` and ` Recents
updated type parameters in multiple classes to use generics for improved type safety to enhance type safety and eliminate unchecked warnings
added header hash string to the Object array in AbstractBlockChain . java to ensure the correct string representation of the newBlock object
use getstorepathphysic ( ) instead of storepathcommitlog ( )
removed the try - with - resources statement around JvmGcMetrics initialization to simplify the code by eliminating unnecessary try - with - resources
added statistics tracking for message status and total found / miss in CompactionLog . java to ensure accurate tracking of message count and statistics for better
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should no longer be used
added a method to check for the presence of a system UI object and execute a shell command when the keyguard status view is present to enhance
changed the access modifier of ` logger ` and ` sessionIds ` from static to instance variables in ` SessionRegistryImpl . java ` to allow
added checks for empty cookieJar in InMemoryCookieStore and NullUriCookieTest to ensure that the removeAll ( ) method returns false for empty
added a ` toString ` method to ` BonsaiValue ` class and improved null checks in ` BonsaiWorldStateArchive `
changed method parameter types from String to CharSequence in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository classes to enhance
[ java ] unignoring a test in marionette
added a try - finally block to ensure the connection is returned in the finally block to handle potential IOException during connection handling
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update related references in multiple files to
added synchronization to the heartbeatExecutorService in DbTxnManager to ensure thread safety when accessing the heartbeat executor service
refactor ` transformBuildResultIfNotPresent ` to ` transformBuildResultAsyncIfNotPresent ` and introduce ` wrapWithTracingAndCancellation
added a method to update the first line showing state in the TextArea to fix the drag - selecting text out of the TextArea to ensure
added temporary directory configurations for test information schemas in TestInformationSchemaWithPrivilege . java to ensure compatibility with different file system configurations
refactor graphics configuration retrieval logic to use conditional checks to improve readability and maintainability of the code
tika - 1348 -- fix test for oom in legacy mode
camel - 14284 : camel - core - optimize pipeline to reduce object allocation .
added validation for the model file and improved tag handling in PrintTagList . java to enhance user experience by allowing specification of the model file
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test
log4j2 - 1349 fix test that fail on window due to eofexception
updated method names and logic in StartFromTruncatedRecordingLogTest . java to improve clarity and functionality to enhance code readability and maintainability
modified the calculation of the ' arc ' variable in LineBorder . java to use a float multiplier instead of a int to improve precision of the
added a check for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter to prevent potential NullPointerExceptions when galleryImages is null or empty
added functionality to generate and reset the deployment ID in StandardChangeLogHistoryService and updated the CreateDatabaseChangeLogTableGenerator to use it to
pdfbox - 4071 : fix typo in usage message
removed the ' moreColumnsOk ' parameter from several methods in AlterTableAddConstraint . java to simplify method signatures and improve code readability
added support for provisional engines in QuickfixjComponent by introducing a new provisionalEngines map to improve engine management by ensuring all
added displayZoomControls field and updated setMixedContentMode and getDisplayZoomControls methods in RoboWebSettings . java to improve control over zoom
added new block constants for corporea and corporea brick , slab , and slab in the ModBlocks and related classes to enhance
refactor ConnectionFactory to improve connection handling logic to enhance performance and maintainability of connection management
added EnableDisableMenuItems ( ) method to GpsMainActivity to enable or disable menu items based on user settings
updated the string resource used in the setMessageForEmptyList method from ` file _ list _ server _ search ` to ` file _ list _
hhh - 15836 - fix unit test for hibernate 2.5 . x
updated MotorMountConfigurationPanel and MotorMountTableModel to use subpanel instead of ' this ' in MotorMount
replaced ` System . lineSeparator ( ) ` with ` System . getProperty ( " line . separator " ) ` in ` StringJoiner .
added getter and setter methods for creator , subject , and subject in POIXMLProperties . java , and updated tests in TestPOIXML
removed duplicate calls to super . doStop ( ) in HandlerWrapper . java to improve code readability and maintainability
[ java ] fix check for empty cnc file in aeron client .
refactor ` UnsatisfiedTypeBounds ` to replace ` Marker ` with ` Command ` and introduce a new ` FooCommand ` interface
added jmod class handling methods in ClassFileSourceImpl . java to support dynamic class name resolution based on the presence of " jmods " prefix
updated ` TreeBackedElement ` , ` TreeBackedEnter ` , and ` TreeBackedPackageElement ` to remove the ` canonical
initialize tokenRequest with PublicTokenRequest and set request parameters in Saml2TokenGranterTest and UserTokenGranterTest to
updated array reference from arrayLength to valueRangeObject in AbstractFromPropertyValueRangeDescriptor . java to ensure correct handling of value range objects
added synchronization methods to ZKAssign and ZooKeeperWatcher classes to ensure proper synchronization of ZooKeeper objects
feat ( egl ) : add check for egl _ no _ context error
[ drools - 1348 ] activate rule flow group only when activation be active .
added a return statement in HystrixDashboardConfiguration . java to ensure proper termination of the method execution
removed the try - catch block for handling PipeNotExistException in DropPipeProcedure . java and added assertions in IoTDBPipeIT . java to
remove nightly dependency from clientqueuedisruptiontest
refactor : use defaultjavaprettyprinter instead of signatureprinter in ctreferenceimpl . tostring ( )
changed the access modifier of the validateInstance method from public to protected to allow subclass access to the validateInstance method
updated import statements in GeoPointInPolygonQuery , GeoPointField , GeoPointInBBoxQuery , GeoPointPrefixTermsEnum , and Geo
added a new file ` FakeBuildable . java ` and updated ` OnDiskBuildInfoTest . java ` to use it to improve test
fix a nullpointerexception in the guiingameforge ' s renderhelmetoverlay if the itemstack be empty . close #
updated variable names from " rule path " to " timeseries " in TSParser . java and SQLParserTest . java to improve clarity and
added a check to return 0 if the value is less than or equal to zero in TubeCalc . java to ensure that a negative value
replace calls to getBucket ( ) with getBucketName ( ) in GcsPinotFS . java to improve code readability and maintainability by
removed duplicate block method call in TestHighwayTransport . java to streamline code by eliminating redundancy
added methods to create and recreate history views with specific column names in DbTriggerBasedHistoryDdl and PostgresHistoryDdl classes to enhance
updated the clustering engine check from 2 to 3 in CarrotClusteringEngineTest . java to accommodate new clustering engine requirements
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as rewritten to ensure that the test needs to
replaced ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand . java ` and added a new ` ParserStateObject
updated object quoting strategy initialization in ChangeSet . java and added null check in DatabaseChangeLog . java to ensure proper handling of object quoting based
replaced the parsing method from ` parse ` to ` fromXmlStream ` in ` SliderAppsViewControllerImpl . java ` to improve
deleted the CsrfControllerAdvice . java file to remove unused code to streamline the codebase
added a method to quote the endorsed directory paths and updated endorsed argument handling to improve file path handling and ensure proper formatting of
added ObjectAnimator functionality to manage background animations in the launcher to improve visual feedback during drag - and - drop operations
updated the precision of the long string infer type from 2 to 1 in TypeInferenceUtils . java and added new test cases in TypeInferenceUtils
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added validation for absolute and unc path prefixes in WindowsPathParser . java and corresponding test cases in PathOps . java to ensure correct handling
replaced InetSocketAddress instantiation with direct instantiation of MulticastSocket in Promiscuous . java to simplify code and improve readability by elimin
removed duplicate calls to writer . close ( ) in TestWildcard . java to ensure proper resource management and avoid potential resource leaks
change return value from nBits to nBits . clone ( ) to ensure that nBits is not modified before returning it to maintain data integrity
change access modifier of deriveCollectorName method from private to protected in ProfilerCollector . java and add new test cases in TestProfilerCollector . java
refactor type hint handling in MappingMongoConverter to use a dedicated method for clarity to improve code readability and maintainability by encapsulating
added performance measurement for creating proxy factories in ProxyMaker to improve performance monitoring during factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
updated exception handling to include the original exception as a cause to improve error reporting by providing the original exception details
replaced the method ` reinflateWidgetsIfNecessary ` with ` getWorkspace ( ) . reinflateWidgetsIfNecessary ( ) ` in
added a new file DeleteInsideFileDialogTest . java to test the functionality of file deletion in a File Dialog to ensure that the file dialog
fix ( lwjgl ) : do n ' t call display . update ( false ) when auto - flush be enable
update instructorstudentlistpageuitest . testshowphoto ( ) to verify html part for a student
added functionality to ignore specific test methods based on the " onlyRun " and " method " system properties to enhance testing capabilities by allowing users to
removed the ' pointer ' parameter from the ' fling ' method in ScrollPane . java to simplify the method signature by removing unnecessary parameters
added null check for pageable in QueryDslJpaRepository . java and created a test for it in QueryDslJpaRepository
added a new method ` computeMemorySize ` to the ` MemoryManager ` class and corresponding unit tests in ` MemoryManagerTest ` to enhance
increase the timeout for the JMSPublisherConsumerTest and add a new boolean parameter in PublishJMSTest to improve test
refactor SnowballAnalyzer class to improve code organization to enhance maintainability and readability of the code
updated previousIndex handling in StreamingAggTemplate . java to ensure previousIndex is correctly set to - 1 to avoid potential null pointer exceptions during batch
improve error message when plugin need to be null check .
added a new method ` stream ` to the ` StreamSupplierComponent ` class with a default value using ` computeIntensityDefault ` to enhance stream
updated logging messages for watched files and improved error handling in MediaMonitor . java to enhance clarity and accuracy of log messages related to file
replaced the ` setAccessable ` method with a ` newInstance ` method in ` InjectorProxy ` and ` StandardInjectorProxy ` , and
[ hotfix ] [ stream ] remove unnecessary close ( ) call in flinkstreamingcreatefunction
added unit tests for ShowStatement , CreateTable , and UnsupportedStatement classes to ensure correct parsing and handling of SQL statements in the application
replace return null with return ImmutableList . of ( ) in AppleTest . java to ensure that the method returns an empty list instead of null
updated the regex pattern in NamedSetTest . java to include Quality Distribution and Inc . to enhance test coverage for the named set functionality
added a check for ` websocketReconnect ` in ` DeconzBridgeHandler . java ` and refactored connection state management in ` WebSocket
replace ` setAttribute ` with ` removeAttribute ` for ` ACEGI _ SECURITY _ AUTHENTICATION _ KEY ` and ` ACEGI _
hbase - 25815 retry table creation before enable it in testregionreplicareplicationendpoint . testregionreplicareplicationendpoint
added PMS configuration setup in FormatRecognitionTest . java to ensure PMS configuration is disabled during recognition tests
cloudstack - 4892 : fix error when create ov disk template ( # 4892 )
updated test imports and annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to use JUnit4 and SpringJUnit4ClassRunner to
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method
updated table names and SQL queries in AppendOnlySchemaIT . java to use " metricVal1 " instead of " metricVal " to enhance
added a check to throw a CorruptIndexException if the deleted document count matches the segment document count to ensure that the document count does not
add a method to log the sip communicator jAIN sip logger .
updated FilamentFactory to set the length of 1.0 to 0.9 for staves w / no starting barline to ensure
removed the default value of handleFileUploads in VertxPlatformHttpServerConfiguration . java and set it in VertxPlatformHttpEngineTest .
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to ` CsrfFilterTests ` to
replace static inner class ` Fields ` with local variable ` field ` in ` HotSpotObjectConstantImpl . java ` to improve code read
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in naming conventions
make fileio . match watermark advance even without new file
make ctedefinition field non - final in sqcmqtestatement . copy ( )
added import statement for ResultSetMetaData in QueryCompilerTest . java to enable retrieval of ResultSetMetaData from SQL queries
updated the string format in JsLibrary . java to include the project filesystem ' s root path to improve clarity of library output by including the
updated the slider ' s angle value from - 180 to - Math . PI in RailButtonConfig . java to ensure proper scaling of the
updated the draw position in OverlayRenderer and modified save handling in Saves to improve rendering accuracy and enhance error handling during save operations
added expressionLanguageSupported method to KerberosProperties . java to enable support for expression language in Kerberos configuration
removed null checks for remoteMountPointComponent before setting translation and rotation degrees to simplify code and improve readability by eliminating unnecessary null checks
updated setupViews method to include ScrimView parameter across multiple classes to enhance the handling of scrim views during transitions
[ statebackend ] add a configuration option to enable / disable periodic materialization
added a ` value ` field with getter and setter methods in ` ProtocolParameter ` , and updated ` List ` and ` ParamTagHandler `
added a new test method ` testChunkingWithHead ` in ` TestHttpServlet ` to verify the behavior of the ` ChunkingServlet
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4894 . java should
added Content - Type header to SwitchToPostInterceptor and updated SearchRequestUnitTest to include it to ensure proper handling of form - urlencoded
refactor EmbeddedClientConnector class to improve code readability to enhance maintainability and facilitate future updates
added logging statements to PhoenixResultSet and replaced SQLFeatureNotSupportedException with a warning for ignoring setFetchSize ( " rows " ) to
added initialization of AndroidNet to null in AndroidDaydream . java to ensure proper initialization of the AndroidNet instance
[ hotfix ] [ table - planner - blink ] fix typo in log message
removed the ' false ' parameter from the getDepositAddresses method calls in KrakenAccountService . java to simplify the method calls by
hbase - 26969 remove hbase - prefix - tree from mapmapreduceutil ( addendum )
added a boolean flag ` inflationFailed ` to ` DesignerActivity ` and modified ` root ` declaration in ` XMLLayoutInflater `
refactor PushbackInputStream class to improve code readability to enhance maintainability and facilitate future updates
refactor loweringphase to use schedulephase instead of controlflowgraph . compute
updated the download folder message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " in ErrorMessageAdapter
[ makefiles ] makefiles . makefile ( string , ... ) now handle new line separator
replaced direct calls to ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` and added
updated the refresh flag handling in SimpleBatchNode . java to ensure proper refresh behavior during batch operations
[ gr - 20684 ] use isinterruptible instead of isguarded safepoints for cfunction .
added framebuffer size callbacks for window size updates in LwjglWindow . java to ensure proper resource management and prevent memory leaks
replaced ` centerTaskParallaxToRight ` with ` centerTaskParallaxOffscreen ` in ` LauncherAppTransitionManager
updated the ` LiteralNode ` class to replace ` NodeLiteralNode < Node > ` with ` NullLiteralNode ` and modified related methods to
added file length management methods to CompoundFileWriter , FSDirectory , and IndexOutput classes to ensure correct file length handling in file operations
updated AndroidNdkScriptGenerator to handle manifest paths and added new test classes in AntScriptGenerator and LwjglDebugStarter to
camel - aws2 - s3 : use sourcebucket / sourcekey instead of copysource for producer / consumer
added role handling for " * " in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin to improve authorization logic and ensure
updated ZookeeperClientServerRegisterRepository . java to improve data handling and event type management to enhance code clarity and ensure proper event types are
renamed methods and classes related to deep stubs to improve clarity and consistency in naming conventions to enhance code readability and maintainability
added a check for empty call values in the contract ' s call value conversion to ensure that a default value is returned when there are no calls
improve debug log message for date parse error
updated the ` mapPBEAlgorithmToOID ` method to throw an ` NoSuchAlgorithmException ` and changed the PBE algorithm string from " PBE
refactor TIFFReader to replace ' length ' with ' inputLength ' for better clarity to improve code readability and maintainability by using
added validation for job parameters in CommandLineJobRunner to ensure that form name is not empty to improve error handling by providing clearer feedback for invalid
replaced newline characters in assertions from " foo \ r \ n " to " foo " in SmtpTests and MailTests to ensure consistency
refactor case statements in ExtendedConnectionDataSourceProxy . java to use lambda expressions to improve readability and maintainability of the code
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for managing sequence IDs to improve thread safety and performance by utilizing AtomicLongFieldUpdater
added a new file ` Test . java ` with a ` sum ` method and a main method to facilitate the summing of
updated minimum and maximum SDK version configuration in ShadowWifiManagerTest and changed variable visibility from private to protected in WifiUsabilityStatsEntry
added a new file ` Solution . java ` that implements a solution that checks the order of elements in an array to provide a solution for processing
fix race condition in gossiper . getexpiretime ( ) and table . getexpiretime ( )
refactor taskbar recreation logic to use a boolean variable for clarity to improve readability and maintainability of the code
refactor SyncFutureCache class to improve code readability to enhance maintainability and facilitate future synchronization
updated the DUBBO protocol version from " 2.0 . 1 " to " 2.0 . 2 " and modified the LOWEST
[ java ] uselessstringvalueof : fix false positive with literal
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest ` to ensure correct handling of el
added support for a configurable maximum type shard size in HollowProducer to enhance flexibility in handling larger snapshot sizes
added new test cases for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to
refactor CompilationTask class to improve code organization to enhance maintainability and readability of the code
updated assertion to check for " mydb . db " in TestSemanticAnalysis . java and modified parameter handling in DDLTask . java to
added a command to clear the change log table statement in the AbstractJdbcDatabase class to ensure that the database change log table is cleared upon execution
added version handling and improved URL construction in RestClient , CallPath , and CallPathProviderTest classes to enhance code clarity and ensure
updated error handling in PhoenixDriver and introduced a synchronized close method in close ( ) to improve thread safety and ensure proper resource management
replaced return statements with UnsupportedOperationExceptions and updated ToolBar menu items to use Measurement instead of Mesurement to improve error handling and ensure
added screenshot tests to FolderPickerActivityIT and modified FolderPickerActivity to extend AbstractIT and implement screenshot functionality to enhance test coverage and ensure proper
[ gr - 20684 ] add devmode option to native image generation and compilation queue
added a check to return a string if the copy length is less than 2 in StringHelper . java and a corresponding test in StringHelperTest . java
updated JpaQueryCreator to handle NOT _ CONTAINING case in JpaQueryCreator and added a new method in UserRepositoryFinderTests
do n ' t push a branch id if auth dur too long .
added a call to dispatch a new P25Message in P25MessageFramer . java to handle the copy of the P25Message
added null checks before calling ` checkClosed ( ) ` in ` WebSocketImpl . java ` and a new test in ` WebsocketTest .
( chore ) camel - core : re - enable discoveryit and indexeventconsumer to use indexablepooltask instead of indextask
updated padding calculations in AppWidgetResizeFrame , Launcher , and LauncherAppWidgetHostView to utilize the launcher ' s padding for
added ` hideAllApps ` method to ` TaskbarUIController ` , ` TaskbarAllAppsController ` , and ` BaseActivityInterface
removed the synchronized modifier from the launch method and replaced Thread . sleep with launcher . join to improve thread safety and simplify the launch method
updated the calculation of the Point object in JavaSEPort . java to correctly account for the canvas ' s zoom level to ensure accurate positioning
replace notificationManager calls with startForeground method calls in UploadService . java to improve code readability and maintainability by using a dedicated method for
fixed bug 137047 - excessivepubliccount no long report false positive for static final method
hbase - 24975 testthrifthbaservicehandler . testthrifthbaseservicehandler fail on slow ci server
changed log level from info to debug in TransactionalMessageServiceImpl . java to reduce log verbosity for better debugging
added error handling for FileNotFoundException in ResourceUtils . java and changed logging level from debug to trace in AbstractCipherExecutor . java to improve logging cl
added a new method ` getTickers ( ) ` in ` Bittrex ` and created ` BittrexTickersResponse ` class
fix nullpointerexception in entityentry . getenumconstants ( )
updated method signatures in WsSession , WsHttpUpgradeHandler , and WsServerContainer to accept an Object endpoint instead of Class to enhance flexibility
added additional Unicode escape sequences to the clist string in FileUtils . java to ensure proper handling of special characters in character sequences
added a stylesheet property and updated related methods in ResourceService , ResourceHandler , DefaultServlet , and DefaultServlet to utilize it to enhance the
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is cleared before further operations
updated the method call from ` ObjectParameterStrategy . class ` to ` PointerParameterStrategy . class ` in ` X86MethodGenerator . java
updated the condition in CreateSequenceGenerator to exclude CockroachDatabase instead of PostgresDatabase to ensure compatibility with CockroachDatabase
removed the condition checking for enum type in ObjectStreamClass . java to simplify the logic for better readability and maintainability
replace UnsatisfiedLinkError with SymbolNotFoundError in Library . java and add a new class SymbolNotFoundError . java to improve error handling by providing
added logic to handle pseudo fields in BinaryResponseWriter to ensure correct document creation based on return fields
added WebSocketPing and PONG cases in WebSocketImplBase and implemented a test for WebSocket pause functionality in WebSocketTest to ensure proper handling of ping
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to ensure proper handling of special characters in regular expressions
replaced specific DNS - related imports with a wildcard import and refactored cache resolution logic in DnsResolverProvider . java to improve code read
added a conditional annotation to the TraceMessagingAutoConfiguration class to ensure that messaging tracing is only enabled when the MessagingTracing class is present
fix for mondrian - 2592 : use ` ` . ' ' instead of ` ` . ' ' for mysql
updated import statements in IDELanguageClientImpl . java , EditorTextActionMode . java , EditorTextActionWindow . java , and Editor
added a condition to handle the ' / ' character in XMLLightweightParser to ensure proper handling of closing tags in the parser
changed the visibility of the touch character input from GONE to GONE to improve user interface responsiveness
added a null check for the current user before comparing its ID to avoid potential NullPointerExceptions when accessing the current user
modified JSObjectLinker . java to conditionally set member values based on the index of the JSObject object to ensure proper handling of member
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to initialize randomStringGenerator and suffix with a new instance to improve
added a @ Deprecated annotation to the SecurityConfig class to indicate that the class should no longer be used in future development
added @ Deprecated annotations to multiple Java classes to indicate that these classes are outdated and should no longer be used
deleted the JoglDebugAdaptor . java file and updated RocketFigure3d . java and GuiceStartup . java to remove
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` , ` AWSPropagation ` , and corresponding tests in ` ExtraFieldPropagationTest
added PendingIntent import and updated contentIntent in FileDownloader and FileUploader to ensure proper handling of PendingIntent updates in FileDownloader and
refactor the ` nextOrd ` method in ` Lucene80DocValuesProducer ` to use a new ` set ( ) ` method to
refactor DateTimeFormatter class to improve code readability to enhance maintainability and facilitate future development
removed unnecessary try - catch block around desktopProperties entry for DnD . Autoscroll . initialDelay and DnD . shell
added null and empty checks for the principal , password , and keytab in the setAdministratorCredentials method to ensure that the administrator credentials are
added MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN constant and adjusted width calculations based on device profile type and device
fix ( opengl ) : do n ' t render the window color
refactor Hashing class to improve code readability to enhance maintainability and facilitate future updates
updated the parameter name in the accept method from ' file ' to ' folderPath ' and modified its logic to improve clarity and accuracy of file
updated the ` UserInfoActivity ` class to include a ` contentDescriptionInt ` parameter and modified the ` addToListIfNeeded ` method to include a
added a null check for the type variable in the JavaType class to avoid potential NullPointerExceptions when type is null
increased the ACTIVITY _ START _ DELAY from 500 to 800 milliseconds to allow for more time for the activity to start
added a static constant WEBAPP _ HOME in SolrJettyTestBase and updated its usage in JettyWebappTest to use this constant
removed unnecessary diameter assignment and set selectedMotorSet to null in ThrustCurveMotorSelectionPanel . java to simplify the code and
added import for BufferUtil and called clearToFill method in ByteBufferPool . java to ensure buffer is cleared before further operations
fix for alarm trigger on create via rest api ( # 233 )
corrected the spelling of " authorization " to " authentication " in the LDAP configuration files
added delete exchange and queue delete operation in DurableOnTransient . java to ensure proper cleanup of data in the clustered channel during transient operations
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest # testbulkslotallocationfulfilledwithnewslots
updated connection handling in ` ServerInfoService . java ` to include error handling for server connection failures to improve error handling and provide clearer error
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
refactor Quartz2Adapter class to improve code readability to enhance maintainability and facilitate future updates
added exception handling to the ` lookup . execute ` method in ` SulongLibrary . java ` to improve robustness by preventing IllegalStateException
updated Spring Security version references from 6.2 to 6.3 in multiple files to ensure compatibility with the latest Spring Security features and improv
updated ` newNameResolver ` method to accept ` Args ` instead of ` Helper ` and modified synchronization handling in ` DiscoveryClientNameResolver ` to
updated JavacParser to handle non - empty annotations and introduced a new earlier method for positioning to improve annotation handling and ensure compatibility with
added " com . sun . naming . internal . " to CheckPackageAccess . java to enhance access control for internal packages
changed the strict variable from false to true in StaxEventItemReader . java to enable stricting functionality by default
added an ` isExhausted ` boolean to ` OfflineSorter ` and modified the partition reading logic to handle the ` isExhausted
refactor ActionResetingPool class to improve code organization to enhance maintainability and readability of the code
added a check to determine if the light state is in an XY mode before converting toHSBType to ensure correct handling of color mode
updated CellLayout . java to include target cell parameters and refactored folder creation radius calculations to improve flexibility and maintainability of the layout
removed calls to ` activity . showLoadingDialog ( ) ` in ` FileOperationsHelper ` , ` FileDetailFragment ` , and ` O
added a null check for uigestureFile before loading recordsMap , recordsMap , and messagesMap to avoid potential NullPointerExceptions when uig
updated FieldNamingPolicyTest to use Locale . getDefault ( ) for name comparisons to ensure consistent behavior across different locales
added listener set to result in XmlSuite . java to enhance the functionality of listener management in the XML suite
added a new method ` loadWithNewGlobal ` to the ` Global ` class and updated the ` Context ` class to utilize it to
added JSON serialization methods to StarTreeIndexSpec and updated tests in TableConfigTest to ensure proper handling of StarTreeIndexSpec objects
added ObjectPostProcessorConfiguration import to HeadersConfigurer , OAuth2LoginConfigurer , OAuth2LogoutConfigurer , and ServerHttpSecurity classes
replaced double quotes with single quotes in multiple file handle classes to improve consistency and clarity in string replacement operations
[ drools - 1349 ] fix null pointer exception in in operator ( # 1349 )
added import for FieldCache and called commit ( ) and purgeFieldCache ( FieldCache . DEFAULT ) in TestDistributedSearch . java to
added unit test for boundary message event on subprocess and inside subprocess .
add ` ` resolvestaticcall ' ' and ` ` resolvestaticcall ' ' to handle static method .
http : / / issues . apache . org / jira / browse / amq - 4892 - add messagegrouphashbucketcount
added constants for slot IDs and refactored method signatures in Secmod . java to improve code readability and maintainability by using specific slot
added alignment parameter to the add method in Layout . java and modified the startRenderering method in GdxRenderer . java to enhance layout alignment
[ hotfix ] [ test ] ignore unalignedcheckpointitcase
added imports for Receiver , Semitter , Sender , Synmitter , and Sequencer in JDK13Services . java to enhance functionality
added a check to ensure the keyword is only added if it ' s already in the map to avoid duplicate entries to improve performance by avoiding
camel - 16462 : fix the bug that multicastprocessor do n ' t handle the case where a collection be not a collection .
removed unused methods from SegGraph , SegToken , and WordDictionary classes to streamline code and improve clarity by eliminating
escape telegraf character in metric name ( # 644 )
[ java ] add udp port to member serialization .
rename ` ` operatormulticast ' ' to ` ` operationmulticast ' '
increased the send timeout from 1ms to 100ms in EventBusTracerTestBase . java to improve test stability by allowing more
added a try - finally block around the failure handling logic in VertxTestBase . java to ensure latch count is decremented to prevent potential
added a synchronized destroy method to reset cachedEventListenerRegistry to null to ensure proper resource management and prevent potential memory leaks during service destruction
danielwagnerhall : update test to use jwt token instead of home page
[ pytorch ] add ivalueutilstest . testTuple ( ) and ivalueutilstest . testmapofTensor (
added a task stack listener to clear the force invisible flag in RecentsView and removed it from BaseActivity to streamline the animation process
fix bug in defaultsplitcharacter . checkdatepattern ( ) and add unit test
camel - 14263 fixed the issue of cxfendpoint do n ' t set property on the factory bean
refactor pending animation handling by extracting logic into a separate method ` endPendingAnimation ` to improve code readability and maintainability
added debug logging for play time adjustment in LauncherAnimationRunner to improve debugging capabilities and ensure play time is set correctly based on debug settings
added a conditional check for ` BailoutOnException ` in ` C1XCompilation ` to throw a runtime exception when compilation fails to
replaced hardcoded signup and password strings with null values in Links . java and updated assertions in IdentityZoneConfigurationBootstrapTests . java to
[ hotfix ] rename previousexecutiongraphallocations to reserveallocations in slotprofile
replaced ` onlyFormat ` with ` format ` and introduced a new method ` getOnlyFormat ( ) ` to improve clarity and functionality
[ geotiff ] fix npe in geotiffreader when no data be available
improve error message when exception source section be null
replaced ` toString ( ) ` with ` new String ( output . toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` and `
replaced ` blockUntilConnected ( ) ` with ` CountDownLatch ` and added a connection state check to ensure proper handling of connection state
refactor ArrayTypeHandler to handle null array cases to improve code robustness by avoiding potential NullPointerExceptions
refactored JakartaRegexpCapabilities to use reflection for retrieving the prefix from the REProgram class and removed the RegexpTunnel class to
updated application selection to use Application . class instead of null to ensure compatibility with the current application configuration
[ drools - 1348 ] fix npe when use mutable global in drl
replaced ` Preconditions . checkNotNull ` with ` TransactionUtil . validAssetName ` , ` assetName ` , and ` description ` methods to
do n ' t add text field in copypaste if it be a textfield
updated action descriptions and modified status update methods to use localized strings instead of hardcoded strings to improve code readability and maintainability by standardizing
refactor node configuration methods to use addAll for seeds , active , and trust nodes to improve clarity and efficiency in node management
enhanced assertion messages in BaseTokenStreamTestCase for clarity and added failure handling to improve debugging capabilities and ensure thread safety during tests
log4j2 - 1343 - log4j2 - 1343 log4j2 - 1343 log4j
added new methods for item click handling in ShadowAdapterView and ShadowListView to improve item navigation functionality and error handling in the application
pdfbox - 4071 : remove unneeded cast , a suggest by valerybokov
fix npe in graphdecoder and pegraphdecoder when loopscope be null
refactor HttpSessionDestroyedEvent to use getSession ( ) for attribute retrieval and add a new test class for security context management to improve code clarity
added new imports and a test method to verify service name changes in Zipkin to ensure that the service name changes in the zipkin service name
added logging statements to JavaInMemoryFileManager and JavacToJarStepFactory for improved clarity and functionality to enhance debugging capabilities
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to improve clarity and consistency in naming con
increased the timeout duration for tryLock from 4 seconds to 10 seconds in ClientMultiMapLockTest . java to allow more time for
added a cache capacity parameter to the ConfluentSchemaRegistryDeserializerProvider class and its corresponding static methods to enhance cache management by allowing configurable capacity
replaced the ` remind ` checkbox with a ` checkAtStartup ` checkbox in ` UpdateInfoDialog . java ` to improve clarity
added multiple methods to the NodeGenerator class for creating a NodeFactory with specific parameters to enhance the NodeGenerator ' s builder pattern to support method
hhh - 15836 : fix checkstyle issue in entity / entity / cascadingactions . java
added methods to retrieve and set prototype properties in ScriptObject . java to enhance flexibility in managing prototype properties in the script object
updated the default read mode from " heap " to " mmap " and refactored the initialization of ImmutableSegmentImpl to improve clarity and
added import for ByteArrayTemplate and modified return statement in ArrayTemplateBuilder to support byte data handling in ArrayTemplateBuilder
added support for Hipchat in SamlServiceProviderProperties and created a new configuration class CasSamlSPHipchatConfiguration to enhance SAML service
replaced List < URL > with Set < URL > for commandRegistryUrls in CommandRegistry . java to ensure unique entries for command and command
updated warning message to include context for uncovered HTTP methods and added debug logging in ConstraintSecurityHandler . java to improve logging clarity and
camel - 16451 : camel - sftp - add login option to camel - sftp - connector
camel - 1889 : do n ' t create a transaction manager if it be not transact
cloudstack - 4892 : fix checkstyle issue in vmwareresource . java
refactor Timers class to improve code readability to enhance maintainability and facilitate future updates
replace usage of ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java `
removed deprecated constructors from UAX29URLEmailTokenizer and updated TestUAX29URLEmailTokenizer to use LUCENE _
removed the ` @ Override ` annotation from the ` ScriptObject ` class and replaced ` Map < Object , Object > ` with ` ScriptObject
refactor EventBusMetrics class to improve code readability to enhance maintainability and facilitate future updates
[ ds - 4892 ] add getepersonlocale ( ) and getlanguage ( ) method to get eperson and epa
updated JaversTransactionalDecorator to implement InitializingBean and modified ensureSchema method to override the afterPropertiesSet method to ensure schema is properly
removed null check for pgTypeName before adding to the _ pgNameToSQLType map to simplify code by eliminating unnecessary null check
added imports for Jetty ' s Server and setServer methods for multiple handlers in ScopedHandlerTest . java to ensure proper handling of multiple
add log for calltimeoutexception and retry call in wait - notify phase
changed the condition from checking if the username or password is blank to checking if it is empty to ensure proper handling of empty credentials in the login
updated permissionNode comparison from ` Objects . equals ( " " ) ` to ` " * " ` in CommandMap . java to ensure proper
renamed ` encoding ` to ` sourceCharset ` and updated related methods in ` AbstractCompiler ` and ` ICompiler ` to improve clarity
changed data type of postLogin from byte [ ] to String in HostBean , TerminalBridge , and HostDatabase classes to improve flexibility and
added imports for GenericComponentModifier , FinSet , and FlightConfiguration , and modified simulation handling in GeneralOptimizationDialog . java to improve
camel - 14263 : camel - main - allow to configure whether or not the context reload . thanks to david for the
updated console configuration settings in CommonTestUtils . java to improve clarity and consistency to enhance readability and maintainability of the test output
refactor PrologSizeSanityCheck class to improve code readability to enhance maintainability and facilitate future updates
refactor NearbyListFragment to improve code organization to enhance maintainability and readability of the code
added a check for ` markSupported ( ) ` before invoking ` invokeSafely ( nonCloseable : : reset ) ` in ` Request
added a check for enabling TCP port in EmbeddedNeo4jServer and improved debug logging in DefaultBeanContext and TypeArgumentQualifier
fix movementdebugcommands to save player movement component
updated the ` random ` method to include a maximum weight parameter for the upstream list to improve the randomness of the load balancer by ensuring the
refactor GsonParser to simplify cache string handling and improve timestamp validation to enhance code readability and ensure accurate validation of timestamp values
added comments to clarify parameter order in ApacheHttpClientMediaWikiApi . java to improve code readability and maintainability
replace checkTransactionSynchStatus ( ) with pulseTransactionCoordinator ( ) in multiple files to improve clarity and consistency in handling transaction synchronization status
updated PipeTaskCoordinator to use PipeTaskCoordinatorLock instead of ReentrantLock and added a new class PipeTaskCoordinatorLock to improve thread
added conditional logic to determine the Android version based on the " robolectric . usePreinstrumentedJars " system property to enable
modified the conditional check from ' ! ' to ' ! ' in ExecDriver . java to correct the logic for silent mode handling
added validation for dynamic fields in IndexSchema to ensure that default values and required fields are provided to improve error handling and provide clearer feedback for
do n ' t attempt to repair the command if it ' s randomly read
replaced ` ImmutableSortedSet ` with ` Iterables ` for adding system include roots in ` PrebuiltCxxLibrary ` to improve flexibility
added sensitivity and sensitivity flags to the AdaptableX509CertSelector class and updated conditional checks in ForwardBuilder to ensure proper handling of
[ log4j2 - 1348 ] use abstractappender . parseint ( ) instead of string . parseint ( ) to
deprecate guicurrencyevent in 1.16 since 1.16 be deprecate .
added methods to manage added and removed categories in CategoryEditSearchRecyclerViewAdapter to improve category management functionality in the search RecyclerView
# 1188 - enh : add serializable to cachebeandata . getloaded ( ) and getdata ( )
refactor the setting of massOverriddenBy and CDOverriddenBy in RocketComponent to use a for - each loop to improve
replaced the ` doCompile ` method with ` post ` and introduced a ` destroy ` method in the ` JavaCompilerService ` class to
refactor ` MultiThreadedBuildRuleResolver ` to use a ` Supplier < V > ` for task creation to enhance flexibility by allowing
refactor WanReplicationServiceImpl to use a synchronized getter for StripedExecutor to improve thread safety and ensure thread safety when managing Striped
added null checks for partitions and tables in Partition . java and modified Driver instantiation in DDLSemanticAnalyzer . java to improve robustness by
updated lambda expressions in LocalServiceRegistryClientImpl . java and RemoteServiceRegistry . java to use lambda expressions to improve code readability and maintain
added unit tests for the ` Files . delete ` method in ` Files . java ` and implemented the ` delete ` method in ` Files .
removed try - catch blocks around the close method in ServerSocketAdaptor and SocketAdaptor to simplify the code by eliminating unnecessary exception handling
updated class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to
replace currentWorkingDirectoryList . clear ( ) and addWorkingDir ( f ) with addWorkingDir ( f . toString ( ) ) to
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to improve robustness by
changed the access modifier of the ` GeneratedEntityDecorator ` constant from public to private to restrict access to the constant for better encapsulation
updated Java - Durl configuration for CSV and JSON files in SimplePostTool . java to ensure proper handling of file types for CSV and JSON
[ geosymbolic ] fix issymbolic toggle for max and min command
refactor clientContainer initialization and shutdown logic in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve error handling and
updated the condition to check for null or empty the ' type ' variable in Linux . java to improve clarity and correctness of the condition
close the datasource in jdbctestbase to avoid memory leak
added a new method ` getSearchStr ` to retrieve search strings and updated the ` getDLNAResources ` method to utilize it to enhance
remove visibility setting for neutral button in SetupEncryptionDialogFragment to improve user experience by hiding the neutral button
[ ds - 3892 ] refactored itemdao implementation to use the new count ( distinct ) method instead of count ( )
updated string concatenation syntax in DDLTask . java for better readability to enhance code clarity and maintainability by standardizing string concatenation syntax
added exception handling for OAuth2 exceptions in CheckTokenEndpoint . java to improve error handling and logging for better debugging
refactor multiple Java classes to improve code organization and clarity to enhance maintainability and readability of the code
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use parameterized API and improve response handling to enhance code readability and maintainability
updated the dismiss delay from 20000 to 10000 milliseconds in multiple classes and added tooltip text in SQLConsole to improve user experience by providing clearer
added support for single test method with JUnit 5 in the ActionProviderImpl class to ensure compatibility with Surefire 2.22 . 0
replaced ` Exception ` handling with ` IOException ` in ` WorkerShellStep . java ` to improve error handling by providing a more specific exception
[ hotfix ] [ runtime ] introduce @ experimental annotation in flink - sink
[ hotfix ] [ doc ] fix typo in streamclipstrumsource
added a check to return false if the index does not exceed the size of the items list to ensure that the index does not exceed the available
updated type assertions from OrExpression to Parenthesis in CloneHelperTest . java to ensure compatibility with the new expression structure
added confirmation and requiredType attributes to the DebugPaste command to enhance user experience by allowing confirmation for the debug paste command
replaced ` . get ( ) ` with ` . orElseThrow ( ) ` in multiple configuration classes to improve error handling by providing clearer
ggb - fix for newradiobutton and newradiobutton in web
updated GoBinaryDescription . java to replace ` Arg ` class with a new interface ` AbstractGoBinaryDescriptionArg ` and updated related imports to
added a check for the presence of the " application . env " resource and updated the environment variable retrieval logic to ensure the application environment is loaded
refactor ` SimpleRetryExceptionHandler ` to implement ` SecondDummyRetryListener ` instead of ` RetryListenerSupport ` and introduce a new class
report whole count with decimal ( # 498 )
made fields ` email ` and ` author ` final in the ` Contribution ` class to improve code clarity and ensure immutability
refactor loop structure in JUnitFormatter to use a do - while loop for appending a period to improve code readability and maintainability by
refactor the way elements are retrieved by introducing a temporary variable and adding a check for the class type to improve code clarity and ensure
improve error message when input resource do n ' t exist
make testmultirendertarget more resilient to full loop
added null check for currentProfile in DelegatedAuthenticationClientLogoutAction . java to improve robustness by handling cases where no valid client is found
replace ` target . addNamespaceDeclaration ` with ` newElement . addNamespaceDeclaration ` in ` SaajStaxWriter . java ` to
added BigInteger and DSAParameterSpec to KeyStoreManager for generating DSA parameters to enhance security by supporting multiple DSA parameters in the KeyStoreManager
updated method calls from ` getIndexBuffer ( ) ` to ` getIndicesAsList ( ) ` in ` GImpactCollisionShape .
[ activiti - 5 ] bpmn deployer now set the engine version for the process definition .
updated property names in SpecificCompiler . java for consistency and clarity to improve code readability and maintainability
updated thread verification methods in CEntryPointSnippets . java and VMThreads . java to improve clarity and functionality to enhance thread management by
added null check for map values in GenericUDFMapValues . java and created a new test class TestGenericUDFMapValues . java
corrected the casing of " interceptor " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to ensure consistency with the
added configuration properties for oil well generation rate and enabling oil spouts in BCEnergyConfig and updated OilGenerator to
added a check for the existence of the " . clean - me " directory and created a new file if it does not already exist to ensure
added getstring ( ) call to memoryrealm . readxml so it can be use in the application .
removed duplicate import statements in CRLDistributionPointRevocationCheckerTests . java to streamline code and improve readability
added import statements for ZipConstants64 . java and ZipEntry . java to ZipConstants64 . java to enhance code organization and facilitate
refactor ` newFileSystem ` methods in ` ZipFileSystemProvider ` to improve file existence checks and error handling to enhance robustness by ensuring only
replaced ` createHorizontalStrut ( ) ` with ` createHorizontalGlue ( ) ` in the ` IfControllerPanel ` class to
updated connection initialization in FailoverUpdateURIsTest . java to ensure consistency in connection handling logic
added Gson annotations for baseUrl , mirrorsList , mirrorsList , and repoName in ServiceOsSpecific . java to facilitate
make sure we delete the db entry if it ' s successful
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
corrected the calculation of the buffer length in AbstractAjpProcessor . java to correct the positioning of the response message
improve admin console startup and shutdown ( ) method to stop the admin console server .
refactor WebSocketImplBase to use ' this ' keyword for variable assignments to improve code readability and maintainability by reducing unnecessary synchronization
added configuration properties for device ID transformation method , ID table , and log file in IoTDBDescriptor . java to enhance configuration flexibility for device
updated the number of documents in ExitableDirectoryReaderTest from 2000 to 100 and added a new DelayingSearchComponent class to improve test coverage
updated the condition in the ` mockTsp ` check to ensure the correct behavior of the ` getAccessError ` method in ` TestSignatureInfo
refactor p2pkh output script creation to use witnessScript instead of scriptCode to improve code clarity and maintainability by using a
added " / schema / types / fieldType " to the expression in IndexSchema . java to support additional schema types
added NullCompleter to the return statement in Completers . java and created a new OptionCompleterTest . java file with unit tests
fix checkstyle issue in util / s3utils . java ( # 4892 )
changed the type of ` sourcePeerId ` and ` selfPeerId ` from ` String ` to ` int ` across multiple classes to ensure
refactor file upload logic in FtpHelper . java to improve file handling and error logging to enhance code readability and provide clearer error
updated the visibility of the reply button in TweetFragment . java to enhance the visual appearance of the reply button
added mocking for AccessLogContext and updated expected timestamp formatting in AccessLogSupportTest . java to improve test reliability and ensure correct timestamp
marycachetest : use tmp / testfiles - deleteme instead of testfiles - deleteme
refactor subscribers initialization and return condition in SettingImpl . java to simplify code and improve readability by reducing unnecessary null checks
added a null check for the marshaller in AbstractSamlObjectBuilder . java and removed unused imports in AbstractSaml10ResponseView . java to improve
replaced printStackTrace ( ) calls with LogUtil . warn ( t ) in DataBrowser . java to improve error handling by logging warnings instead of
added a condition to check if the asset directory is in dev mode and updated tests accordingly to ensure proper handling of static directory paths in dev mode
added writeOptions parameter to the put method in RocksDBKeyedStateBackend to enhance functionality by allowing configuration of write operations
updated the default value format from " value - tag - index " to " value - index " to align the label ' s format with the
fix miss hint for douglas . minprecision and douglas . minprecision
[ esu ] set usenative to true by default
rename duclsSandboxTest to sandboxTest and update related references to improve clarity and consistency in naming conventions
camel - 14284 : camel - cxf - remove unused import and set exception to exchange . setexception
make forwardpropagatetree public to make it easy to use
updated the query parameter in JDBCExample . java from " 0 , 0 , " to " 20 , 20ms " to correct the SQL query
fix $ { project . basedir } syntax for $ { project . basedir }
refactor Style class to improve code readability to enhance maintainability and facilitate future updates
added functionality to handle back key events in ShareActivity to improve user experience by enabling zoom functionality
added a check to skip processing for deprecated fields in Json . java to ensure proper handling of deprecated fields in JSON serialization
added new Runnable methods to manage visibility and animation behavior based on floating - compose settings to improve user experience by providing visual feedback during floating - compose
updated method call syntax for readTokenStorageFile in Utils . java to improve code readability and maintainability
added Progressable parameter to several methods in Utilities , PTFRowContainer , PTFOutputFormat , and HiveIgnoreKeyTextOutputFormat to
[ hotfix ] [ runtime ] fix typo in sourcecoordinatorprovider
removed a contribution from the list and updated panel ordering and color updates to ensure the contribution is removed from the list of contributions
corrected the spelling of " Hyperervisor " in the class name from " Hyervisor " to " Hypervisor " to ensure
added a check to initialize dPath if it is empty to ensure dPath defaults to the user ' s directory if it is empty
updated sample rate calculation in DefaultAudioSink . java to ensure correct handling of sample rate based on the format ' s value
log4j2 - 1349 add mapfilter . filter ( mapmessage ) method to filter map message .
updated VerificationInOrderWithCallsTest . java file to improve test coverage for verification functionality
updated the return statement to use ` axis . x ` instead of ` axis . z ` to ensure correct positioning of the angle in the
corrected the casing of the constant COLLECTION _ DELIM from " colelction . delim " to " collection . delim " to
add a test to verify that the first listener be connect at the start
fix documentation for UNION and INTERSECTION type
added a new boolean variable ` mIsOneHandedModeSupported ` to manage one - handed mode support to improve code readability and maintain
added onDetachedFromWindow method to cancel running running tasks when the window is detached to ensure proper resource management and prevent potential memory leaks
added a ` dictionaryResource ` parameter to the ` MorfologikAnalyzer ` , ` MorfologikFilter ` , and
replaced the variable ` count ` with ` thrown ` in ` ResultSetTest . java ` to streamline exception handling by eliminating unnecessary
changed the initialization path from " debug " to an empty string in GradleBuildService . java to ensure the correct installation directory is used
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` and added checks for lock timeout in ` AbstractPhenomenaTest
refactor tooltip text handling in ComponentTreeRenderer to improve code readability and maintainability by reducing redundancy
increased the timeout duration from 5 seconds to 10 seconds in ZipkinStreamTests . java to allow more time for the zipkin server
feat ( deviantart ) : make deviantart login optional
updated PackageUtils . java to replace KNOWN _ GOOGLE _ SIGNATURES with constants GOOGLE _ PLATFORM _
refactor solutionBusiness initialization to use createSolutionBusiness ( ) method instead of commonApp . solutionBusiness to improve code readability and maintainability
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state changes
added email description to templateData in EntityGroupKeyContentFormatter . java and set it in TestEntityGroupKeyEmailContentFormatter . java to enhance
change return statement from ` remove ( sel ) ` to ` data . remove ( sel ) ` in ` UserData . java ` to ensure the
refactor language retrieval logic in Locale . java and update locale tests in LocaleTest . java to improve code clarity and ensure correct handling of
refactor Liquibase code to use a dedicated method for creating UpdateVisitor instances to improve code readability and maintainability by centralizing
added a check to return early if the screen pinning is active to optimize performance by avoiding unnecessary processing when the screen pinning is active
added text handling for no chart data in Chart . java to improve user experience by providing a more informative text when no chart data is available
replaced direct calls to ` checkValid ( ) ` with ` checkHeadWritten ( ) ` in multiple classes to ensure thread safety when accessing the
refactor NettyResponse to encapsulate chunked response handling logic into a separate method to improve code readability and maintainability by reducing duplication
added scheme header values and updated test methods in Http2TestBase , TestHttp2Limits , and TestHttp2Section _ 8 _ 1
fixed - rlocalcachedmap . setkey ( ) and setentry ( ) method throw npe if cache mode . localcache = true
camel - 16462 : fixed the npe of jpaendpoint when the component be create . thanks to david for the
fix wrong assignment of jump speed in physiccharacter
added a null check for reparsedFunction in the conditional statement to ensure proper handling of syntax extensions when reparsedFunction is null
updated logging statements and variable names in BitstampPusherService . java for consistency and clarity to improve code readability and maintainability by
added deprecated methods for retrieving old upload segments in FileUploadDownloadClient to indicate that these methods are outdated and should be removed in future versions
updated the method call from ` findOne ( ) ` to ` findOne ( filter ) ` in MongoDbTailTrackingManager . java to ensure the
camel - 14263 : camel - juel - add unit test for languagetest support for camel - juel
added a call to bound the alpha range of 0 to 1 in RecentsView . java to ensure the alpha value is within valid range
updated the string replacement for the " Import - Package " attribute in ManifestReversion . java to ensure correct formatting of the import package string
[ hotfix ] [ doc ] fix typo in datasyncconfiguration
added import for JavaSnippetRepository and initialized the JavaSnippetRepository instance to ensure the JavaSnippetRepository is properly initialized before use
added a loop to handle multiple time buckets before updating sums in StarTreeRecordStoreCircularBufferImpl . java to improve performance by avoiding
updated URLs in ChromeDriverService and ChromeOptionsFunctionalTest from " code . google . com / p / chromedriver / downloads /
camel - 10650 : camel - pg - event : use try - with - resources for prepared statement to avoid potential resource leak
updated imports from ` com . sun . syndication ` to ` com . rometools . rome ` in FeedParser . java
fix transfer completion when content - length header be empty
refactor Dialog class to improve code readability to enhance maintainability and facilitate future development
removed the constructor from EnhancedRuntimeException to simplify the constructor by eliminating unnecessary parameters
[ java ] fix intermittent failure in socketappendertest
camel - 14263 : camel - event - admin should use camel - event - admin - dsl instead of camel - event - admin -
updated exception handling and formatted method signatures in ByteArray . java to improve code readability and maintainability
added a method to disable the input proxy in RecentsAnimationWrapper . java to ensure proper handling of input events during touch events
removed the JUnit Ignore annotation from RestletDomainServiceTest . java to temporarily disable the test due to a specific issue related to camel -
removed the ' currentIdx ' parameter from the resizeAndRehashIfNeeded method to simplify method signature by removing unnecessary parameters
move module - info . java to com . hazelcast . test . modulepath
added a new method ` getSourceDirs ( ) ` to ` JavaLanguageServer ` and updated the ` getCompiler ( ) ` method in `
updated menu item ID from " open _ web " to " mute _ hashtags " in TweetPager . java to improve user
updated method names and assertions in AncestorDescendantTests , HasParentNode , and Node classes to improve clarity and consistency in naming conventions
update y - coordinate calculations in WorldEditPlayer . java to ensure values are non - negative to prevent potential errors due to negative position values
added PathNotExistException handling to the selfCheckDataTypes method to improve error handling for partial insert operations
removed unnecessary single quotes in JavaCompiler . java to improve code readability and maintainability
[ hotfix ] [ operator ] move mailboxexecutor to abstractstreamoperatorfactory
hbase - 25827 fix table state in meta and fix meta for unauthorized access
refactor lambda expressions in GatewayMetricFilterTests . java for improved readability to enhance code clarity and maintainability by using method reference
updated ` BlockJUnit4ClassRunner ` to use ` getJavaClass ( ) ` instead of ` getTestClass ( ) ` and removed unnecessary
[ drools - 7 ] use lasttimedata instead of remoteitems when delete a kiecontainer
updated the calculation for allAppsCellWidthPx in DeviceProfile . java to correct the width calculation for better layout consistency
[ hotfix ] [ core ] add parent - first logging pattern to coreoptions
replace calls to ` doc ( ) ` with ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure consistency
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to optimize the merging process for
modified the ` Session ` interface to extend ` Closeable ` and changed the return type of ` close ( ) ` methods from ` Connection ` to
refactor GetLocations class to improve code readability to enhance maintainability and facilitate future updates
replace print statement with null check for exception handling in SchemaValidatorTask . java to improve code readability and reduce unnecessary print statements
removed UncheckedIOException from the exception handling in Contents . java to simplify the code by eliminating unnecessary exception handling
updated the ` GeneratePubkeyActivity ` class to extend ` AppCompatActivity ` instead of ` Activity ` to ensure compatibility with the latest support
ruby flavor : use charsequence instead of string for repeat
changed log level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask
remove the useCaches property and simplify the code in Nio2Endpoint . java to simplify code and improve readability by eliminating unnecessary
refactor CasGeoLocationConfiguration to use Resource instead of MaxmindProperties for database reading to improve flexibility and allow for customizable database
update instructorfeedbackresultspageuitest to use new helper view
added a scan parameter to the useEncodedQualifierListOptimization method in BaseResultIterators . java and modified its logic in EncodedColumnsUtil
removed the public access modifier from several methods in ApprovalStore , ApprovalControllerService , and ApprovalStore classes to allow
added a delay mechanism to handle download progress in FileDownloader to ensure proper notification is canceled when the download process is interrupted
updated method calls from ` getOpenView ` to ` getAnyView ` in ` TaskbarDragLayerController ` and ` AbstractFloatingView `
updated the project version from " 1.0 . 11 " to " 1.0 . 13 " and corrected a typo in the resource
replaced multiple calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure consistent
refactor GsonBuilder class to improve code readability to enhance maintainability and facilitate future development
added null checks before adding centerGeo to circleCenters and fixedPoints to avoid potential NullPointerExceptions when centerGeo is not initialized
remove hard - coded espressohome option and use homefinder instead
doc ( javadoc ) : fix typo in javadoc
modified the DeleteSessionAction class to change the visibility of the timeToDieInSeconds variable and removed the boolean flag to private to enhance encapsulation and
corrected a typo in the class name from ` InvalidDocumentStoreApiUageException ` to ` InvalidDocumentStoreApiUsageException `
initialized ` sz ` to 0 and modified ` result ` initialization in ` JoinQParserPlugin ` , ` SolrIndexSearcher ` , and
added a second parameter to the triggerMediaScan method call in FileDownloader . java to enhance functionality by allowing the file parameter to be passed
removed conditional checks for printing test results in TestRunning . java to simplify code and improve readability by eliminating unnecessary conditional logic
added multiple calls to set custom G - code settings in MainWindow . java to enhance functionality by allowing custom G - code input settings
http : / / issues . apache . org / jira / browse / amq - 4237 - use bufferedoutputstream instead of
refactor JsonElement class to improve code structure to enhance maintainability and readability of the code
added imports for SolrTestCaseJ4 and reset exception handling in TestBadConfig . java to improve test reliability by ignoring specific exceptions during
added a method to remove fragments and hide the action bar in GpsMainActivity to improve user experience by ensuring the fragment is properly removed during
removed the " = = " prefix from the spanish tokens list in TokenizerAnnotatorITest . java to streamline the spanish token
updated RemoteMediaHandler and RemoteRawHandler to use Range . Byte instead of Range . Byte and adjusted null range handling to improve type safety and
updated the G - code file path and modified the bounds and translation logic in VisualizerCanvas . java and GcodeViewParse . java to
added new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to TestBackwards
fix checkstyle issue in util / assertions _ sync _ with _ instanceofassertfactories _ test . java
http : / / issues . apache . org / jira / browse / amq - 4892 - ensure result be not null when
fix integrity check for file with no file directory
removed the import of SolrClient and initialized shardToClient in ChaosMonkey . java to streamline the code by eliminating
added null check for ` fas ` before accessing its properties to avoid potential NullPointerExceptions when ` fas ` is null
reformatted code in NestedRepositoryTreePanel . java for consistency to improve readability and maintainability of the code
modified the constructor of ExtensionTypeHeader to allow for broader range of byte types to ensure that the extension type is within valid range to prevent
pdfbox - 4892 : throw ioexception instead of npe , a suggest by valerybokov
updated the ` deleteOnShutdown ` and ` pushOnShutdown ` properties in ` PrometheusProperties . java ` and added getter and setter methods
added trigger error handling and improved event processing in ReactiveStateMachineExecutor to enhance error management and provide better feedback during state machine execution
added a test for handling multiple Python executables on a specified path in BuckConfigTest . java to ensure that multiple Python executables are
added a default button to the root pane in InitialAccountRegistrationFrame to enhance user interface by allowing the signin button to be selected
added a new configuration variable TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN in HiveConf . java and
added exception to the log message in RegistrationRestRepository . java to provide more context in error reporting for better debugging
move reflection to util package so it can be reuse by other package .
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created corresponding tests in ` Oidc
removed the ` center ` variable from multiple ` Circle ` , ` Ellipse ` , ` Polygon ` , and Rectangle classes to streamline the
removed unnecessary parentheses in conditional statement in RegisterAndProcessBundleOperation . java to improve code readability and maintainability
refactor SslContextFactory to improve SSL configuration handling to enhance reliability and maintainability of the code
replaced instances of ` maxExpectations ( ) ` with ` defaultMaxExpectation ( ) ` and ` defaultMaxLogEntries ( )
change return value from " access _ confirmation " to " access _ confirmation _ error " to clarify error handling in access control
[ 3.0 ] add support for consumerclassloaderfilter ( # 8274 )
modified the ` shiftRows ` method to include a ` copyRowHeight ` and ` resetOriginalRowHeight ` parameter to enhance functionality by allowing
updated icon references from ` rolloverIcon ` to ` rolloverPressedIcon ` in ` FontImage . java ` to accurately reflect the
refactor TaskViewUtils and related classes to streamline grid translation handling to improve code readability and maintainability by consolidating logic for setting
refactor assertions in Assertions class to improve code readability to enhance maintainability and facilitate future development
added a check for ` currentDateTimeFunction ` in multiple database classes and updated return value for ` CURRENT _ TIMESTAMP ` in ` OracleDatabase `
added anonymousPath method to IOUtils and updated Log4jUtils to use this method to improve path handling for anonymous paths in logging output
updated the ` call ` method in ` DigitalWellBeingToast ` and ` TaskView ` classes to include a ` content
increased the timeout logic for metaLocation in CatalogTracker . java to ensure that the timeout value is greater than zero to improve stability
manual fix of header miss by script
fix nullpointerexception in genericitem . getstate ( )
added Hibernate integrator configuration and a test for fetching posts with projections to optimize database queries and verify data retrieval functionality
added a method to remove extra empty screens and modified startSearchPageIndex initialization to ensure proper handling of empty workspace screens and
updated initialization of baseDerivedRefs and derivedRefsSet in MarkBasePointersPhase . java and added null check in IndexedValueMap . java to improve
updated string formatting in GoogleLineChart . java and GooglePieChart . java to use double quotes instead of single quotes to ensure compatibility with
modified the batch acquisition logic in SendingAccountor . java to handle interruptions more gracefully to ensure proper handling of interruptions
added a position property and methods to set and retrieve its value in WALPrettyPrinter to enhance functionality by allowing users to specify the position of the
updated the port from 1 to 0 in the NettyTransceiver instantiation from 1 to 0 to ensure that the transceiver is properly
sort event before generate a report
added a test method to verify CSV line extraction with escaped quotes to ensure correct handling of double quotes in CSV descriptions
corefchinesebenchmarkslowitest , crparser , corefconstituencytree and corefchinesrud
do n ' t send iq message to the server if it ' s not remote .
removed the @ JniImpl annotation from VM . java to eliminate unnecessary JNI implementation
updated configuration settings in Fetcher2 . java to use constants from Protocol . CHECK _ BLOCKING and Protocol . CHECK _ ROBOTS
added a condition to check if the media HDR format is not " dolbyvision " in FFMpegVideo . java to ensure
updated package names from " other _ package " to " other _ package2 " in AstTests . java to clarify the purpose of
fix worldborder . setdiameter ( ) and add integration test
hbase - 25819 make sure we do n ' t get the replication status if master can not host user region
added an additional parameter to the checkOpen method and modified its logic to handle successful login events to improve error handling by ensuring the caller is properly
refactor routing table methods to use a dedicated method for generating instance configurations to improve code readability and maintainability by reducing redundancy in
changed the FieldAttributes class from final to public to allow access to FieldAttributes from other packages
added a test to verify that an erroneous Maven project does not contain a reference to ensure that the project does not contain a reference to
simplified the conditional check for oldProto and newProto in PropertyMap . java to improve code readability and maintainability
refactor ` getControllerId ` method to accept a ` configId ` parameter and streamline the handling of relays to improve clarity and
replace sessionFactory . close ( ) with session . close ( ) in SessionRequest . java to ensure proper resource management and prevent potential memory leak
removed the check for service . isGenerateRefreshToken ( ) in the conditional statement to simplify the logic by eliminating unnecessary refresh token generation
removed a debug print statement from Http2SolrClient to clean up the code and reduce unnecessary console output
replaced a lambda expression with an enum NoopGetter in BaggagePropagation . java to improve code readability and maintainability by using
refactor conditionalOnEnabledResourceChain class for improved clarity to enhance maintainability and readability of the code
added a condition to check if the tree ' s child count is greater than zero in BarrowmanCalculator . java to ensure that the tree
updated the method call from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java
added intent result listeners and modified session state handling in FacebookImpl . java to improve logging clarity and ensure proper handling of session state changes
replaced hardcoded " h : mm a " with " skeleton " in ShadowICU . java and updated test cases in ShadowICUT
removed the KeyguardManager dependency and simplified the condition for checking device lock status to simplify the code and improve readability by eliminating unnecessary
server : fix npe when set disk offering id for a volume that do n ' t exist
replaced FileChannel with AsynchronousFileChannel and added position tracking in UtowBodyHandler . java to improve performance by utilizing asynchronous file channels
simplified formatting and improved exception handling in SigInt and SigIntTest classes to enhance code readability and maintainability
do n ' t update text if there be no editor
change return value from - 1 to 0 in the Asset class to correct the behavior of the method
updated ` ComputeBenchmark . java ` to use a constant for the number of iterations and replaced lambda expressions with lambda expressions to improve code readability
added onRefreshListener to notifyDataSetChanged in UploadListFragment to ensure UI updates occur after data changes
replaced ` File ` with ` Path ` and updated related methods to use ` Optional < Path > ` instead of ` File ` to improve
removed the ' items ' array from the ' emitters ' array and replaced ' items [ i ] ' with ' get ( i ) '
refactor Tomcat class to retrieve the first service and host from the engine if it exists to improve service management and ensure proper handling of
updated error messages in BuildRuleFactoryParams and Console classes to include a period before " desired file " to improve clarity and consistency in error
added a check to return early if the playback state is not PLAYING to prevent further processing when the playback state is not playing
replaced the usage of ` findByPK ` with ` findById ` for retrieving ` ServiceComponentDesiredStateEntity ` to simplify the code and improve
refactor inner class field clash logic in ` Java2TypeScriptTranslator . java ` and add a new test class ` InnerClassField
added configuration options for logging and follow redirect filters in DockerClientFactory and DockerClientProfile to enhance Docker client configuration flexibility by allowing customizable
added locking mechanism around displayChanged calls in XToolkit . java to ensure thread safety during display changes
hhh - 10183 use sqlserver2008dialect instead of db2dialect in nationalized scalarquerytest
pdfbox - 4071 : make sure to close the input stream in case of failure .
changed the access modifier of the ` storeClassFile ` method from private to public to allow external access to the method from other classes
added a new test class ` TestSortedSetDocValues ` and modified ` SingletonSortedSetDocValues ` to use ` error ` instead of
updated error messages in CGIHandler and added a new JavaVM callback handler in JavaVM to improve error handling and provide a callback mechanism for
added support for additional newline characters in the LineReaderImpl class to ensure proper handling of additional newline characters
replace List < String > with Set < String > for multiple source files in DistBuildService , ServerContentsProvider , and ServerContentsProviderTest
added a check to return early if the vertex count is zero in OGLESShaderRenderer . java to optimize rendering by avoiding unnecessary
added verification tests and improved exception handling in IncorectBindingPuzzleFixedTest and DescriptiveMessagesOnVerificationInOrderErrorsTest to
replaced the method ` createData ` with ` createFolder ` in ` MacroService . java ` to improve clarity by using a more
truffle : fix checkstyle issue in util / typesystem . java
refactor JsonObject class to improve code organization to enhance maintainability and readability of the codebase
added a check for maxIdleTime in SelectChannelEndPoint . java and modified conditions in HttpConnection . java to ensure proper handling of idle resource
fix a typo in the block . cansustainplant ( ) method call . close # 1849
added functionality to create and retrieve primary keys from SALTEDTABLE123 and updated database queries to include multi - tenant indexes to enhance functionality and
updated SimpleDateFormat to use Locale . US for date formatting in HttpCookie . java and added a new class B6791927 . java to
removed multiple redundant calls to ` db . close ( ) ` in ` DbHelper . java ` to streamline the code by eliminating
increased the polling duration from 1 second to 5 seconds in BatchMessageListenerContainerIntegrationTests . java to allow for more time for processing
[ gr - 20684 ] add trace phase to economyallocationstage for tracing .
store source source for save / restore keybinding ( # 3394 )
refactor ObjectMapper initialization in DrillTest . java to use a static block and set the system ' s line separator to ensure consistent line separator
updated name processing in NativeEnvironmentRepository . java to handle Windows and Windows paths to ensure compatibility with different operating systems and improve path handling
replaced instances of ` Application ` with ` Application ` in multiple test files to streamline the application setup process and improve code organization
[ java ] remove recordlog . validateexistinglog and use recordlog . lastleadershiptermid directly .
chore : update client to use errorgroupname instead of groupname
testfuzzoptimizations : remove unnecessary sleep from testfuzzoptimizations
added a private boolean variable ` reverseImage ` and updated its initialization in ` CameraManager . java ` to streamline the retrieval of the reverse
refactor string comparison from ` . equals ( ) ` to ` . equals ( ) ` for consistency to improve code readability and maintainability
[ te ] fix bug where field name be not preserve in linking
updated JUnit imports and annotations from ` @ Before ` to ` @ BeforeEach ` in ` AuthenticationSuccessListenerTests . java ` to align
update settypes to use indexof ( ) instead of arraylist ( )
refactor TypeUtil class to improve code readability to enhance maintainability and facilitate future updates
updated the triggerTime variable to use LocalDateTime with the default time zone to ensure the trigger time is formatted correctly based on the current time zone
added a method ` maybeCreateAbstractMethodErrorThrower ` to ` MethodHandleResolver ` for handling method error throwing to improve error handling for
camel - 1889 : camel - simple - simple - language - add support for ` ` $ { body . ognl } '
removed unnecessary check for empty toExplore in AbstractParser . java to streamline code by eliminating unnecessary checks
camel - 15836 : camel - jclouds - use iohelper . copy ( inputstream , cos ) to make it easy to
camel - 16462 : camel - core - camel -Consul : remove ignore annotation due to osgi bundle not release yet
added a check for the ACC _ STRICT access flag in method overrides and created a new test class to ensure that the access flag is
[ java ] reduce driver timeout to further dig into test intermittency .
added a new file ` FileExtensions . java ` with static ImmutableSet of CLANG _ SOURCES , CLANG _ HEADERS , and C
replaced ` ThreadLocalDateFormat ` with a new ` ISO8601CanonicalDateFormat ` instance and updated the ` FORMAT _ THREAD _ LOCAL `
remove deprecate option for cgroupmemorylimitforheap , use cgroupmemorylimitforheap
added displayName property to Pac4jBaseClientProperties and updated related classes to utilize it to enhance client configuration flexibility by allowing dynamic
replaced RuntimeException with EarlyTerminationException in multiple operator classes and created a new EarlyTerminationException class to improve error handling by providing a
updated return statement formatting in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4898 . add connection
fix npe in forgeeventfactory when parent be null
removed KeyCrypterException from the catch block in WalletTool . java to simplify error handling by eliminating unnecessary exceptions
mark the SubmitOrderedCompletionService as deprecated to indicate that it should no longer be used in favor of a new implementation
updated the calculation of ` iLength ` and ` origLength ` in the ` HyphenationTree ` class to ensure correct handling of the
added a sleep delay of 200 milliseconds in IQRegisterHandler . java to improve user experience by allowing more time for operation execution
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
updated the description of the PARAMETER _ NEEDS _ TO _ BE _ NAMED string in ParameterBinder . java to correct the spelling
added a new boolean variable ` providersChanged ` and initialized it to ` false ` in ` ConfigurationManager . java ` to reset the state of
added a method to quote SQL tokens in the SemanticAnalyzer class to improve the handling of quoted identifiers in the token rewrite process
added a null check for type1 in FileSystemFontProvider . java and added a warning log for missing ' name ' entry in PostScript name
changed the type parameter from AbstractAnalysisFactory to a generic AnalysisSPILoader < ? extends T > in SolrResourceLoader . java to improve type
modified the boundary check in the Window class to iterate through the parent hierarchy of the parent actor to ensure that the hit position is within the correct
added a null check for appManifest before retrieving the target SDK version to avoid potential NullPointerExceptions when appManifest is null
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog classes to improve serialization handling and code clarity to enhance code maintainability and ensure proper serialization
added userName property and its getter / setter methods to Driver , HiveSemanticAnalyzerHookContext , and HiveSemanticAnalyzerHookContextImpl classes
camel - 14284 : added setter to xsltbuilder so it can be use by the component .
added HadoopShim support to ContainerRunnerImpl , TaskRunnerCallable , and TestFirstInFirstOutComparator classes to enable support for Hadoop shim
updated expectedFileSize calculation in ShadowAssetManagerTest . java , removed unnecessary variables in ShadowDownloadManagerTest . java to streamline test code and
do n ' t log access time if request context be null
[ hotfix ] [ test ] fix timing of log message
updated VM version checks in CompilerConfigFileWarning . java and ConfigFileWarning . java to use Platform . isDebugBuild ( ) instead of System . getProperty
[ hotfix ] [ metric ] fix typo in defaultlogpublisher
replaced System . err . println with a conditional conditional check for logback configuration file resolution to improve code clarity and ensure logback is
updated method signatures to include @ NotNull annotations for better null safety to enhance code robustness by ensuring required parameters are not null
replaced instances of ` Escaper . BASH _ ESCAPER ` with ` Escaper . SHELL _ ESC
refactor ` waitUntilReadyAndSucceed ` and ` waitUntilReadyAndSucceed ` methods to use try - with -
changed the test class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify the purpose of the test
removed unnecessary whitespace in RelativeDateFormatTests . java to improve code readability and maintainability
added a method to generate a shield address in RpcApiService to facilitate the generation of a shield address in the Rpc
changed the return type of ` readConsoleInput ` methods from byte [ ] to String and updated character encoding handling in ` AbstractWindowsTerminal `
updated regex patterns in TestStabilityRule . java and changed sRunFlavor declaration from PLATFORM _ PRESUBMIT to a
added a note to limit fragments for multi - valued fields in DefaultSolrHighlighter to clarify highlighting behavior for multi - valued fields
added username and password parameters to the tryToLogin method in WebdavClient . java to enhance authentication handling by allowing authentication
updated entity handling in ` HandlerSceneEntityDrownReq . java ` and ` PacketSceneEntityDrownRsp . java ` to improve
http : / / issues . apache . org / jira / browse / amq - 4892 - fix formatting and indentation
removed wrapCollection from the update method call in DefaultSqlSession . java to simplify the method signature for better readability
added logging for ` IllegalCurrencyException ` and improved currency handling in ` BTCEAdapters . java ` to enhance error handling and logging
refactor subscription name handling in DurableConduitBridge . java to improve clarity and correctness to enhance code readability and ensure
pdfbox - 4071 : fix typo find by codespell on fossies . org
updated startController method to accept a boolean parameter for tenant isolation and added new methods for creating broker , server , and server tenancy to enhance
simplified the return statement to directly return the response value as a Map to simplify the code and improve readability by eliminating unnecessary
added a condition to check if the size of attrs is greater than zero before proceeding to ensure that the code does not throw an exception when
added abstract methods to retrieve project JDK name , type , and language level in ` AbstractIjProjectConfig ` to enable configuration retrieval for IntelliJ project settings
corrected the spelling of " Experimenal " to " Experimental " in HiveSessionProperties . java to improve clarity and
added unit tests for ` GrantedAuthorityEffectiveAclsResolver ` to validate correct handling of scott with user details to ensure correct functionality
replaced ` new ReflectionClassDeclaration ( Object . class , ... ) ` with ` getSolvedJavaLangObject ( ) ` in ` JavaParser
added logic to calculate the number of buttons in XlibWrapper to ensure that the return value of XToolkit does not exceed a defined limit
replaced ` jdk . testlibrary . Asserts . assertEquals ` with ` com . oracle . java . testlibrary . Asserts
refactor MessagePack and related classes to introduce a new MessagePackFactory class to improve code organization and facilitate the creation of
add ` ` is _ desert ' ' and ` ` is _ cave ' ' tag to biome tag and update item tag to
renamed the method ` present ` to ` draw ` across multiple screen - related classes to improve clarity and consistency in naming conventions
added conditional logic to set layout based on horizontal state in ComponentGroup . java to ensure UI updates occur only when the horizontal state changes
replaced ` DOI _ URL _ PATTERN . matcher ( identifier ) . matcher ( identifier ) . matches ( ) ` with ` matcher .
replaced ` touchHandler instanceof ` with ` hasMultitouch ` in ` AndroidInput . java ` and ` AndroidLocklessInput .
[ java ] do n ' t check if the commit position counter be close .
add example for usersite , recordidclass and usersiteid
added error handling for malformed URLs and improved address parsing in HttpConverterRegistrar to enhance robustness and provide clearer error messages for malformed URLs
cloudstack - 6892 : listvirtualmachines api - do n ' t return host _ id for storage _ allocated / storage _
replace openInput method with fileLength method in NRTCachingDirectory . java to improve clarity and functionality of file length handling
updated JavascriptCompiler class to be final and modified method names for clarity to enhance encapsulation and improve code readability
added synchronization around the UISettings class to ensure thread safety when accessing the UISettings class
added native text input handling to the TextField class and changed the access modifier of the fireDataChanged method from private to public to enhance user experience
improve error message when emulator do not support one transaction
refactor generic type declarations to use the diamond operator to improve code readability and maintainability
changed the type of ' array ' from double to short in ObjectInputStream . java and added a new class CloneArray . java with serialization tests to
updated nonce retrieval method and improved error logging in OIDCAuthenticationFilter . java to enhance clarity and maintainability of nonce validation logic
added a condition to check if a field is a relationship field in DCInputSet . java to ensure correct handling of relationship fields in the input
added support for server slogan in the FileDataStorageManager and updated related SQL queries in FileContentProvider and ToolbarActivity to enhance
refactor conditional structure in DrawerActivity . java for better readability to improve code clarity and maintainability
updated test case to use JUnit ' s Assume for network connection handling to improve test reliability by using JUnit ' s assumptions and
added a check to return early if missing symbols are empty to avoid unnecessary processing when no symbol events are present
added new test cases for Data 5 - 4 and Data 5 - 4 characters in StringHelperTest . java to enhance test coverage for data formatting and
added a warning log for empty data provider annotations in the Parameters class to inform users that the data provider is returned as an empty array or iterator
( chore ) camel - kamelet : use collections . empty ( ) instead of collections . empty _ map
update xml version to 1.9 . 8 and improve map style model
physicsrigidbody . setrestitution ( objectid , mass ) - > setrestitution ( )
added a new file ` AutoFtpActivity . java ` and modified ` FtpHelper . java ` and ` FtpHelper . java
refactor token handling in BaseSemanticAnalyzer to use a local variable for token type to improve code readability and maintainability by reducing
added getter and setter methods for imageX and imageY in ImageViewer , OnOffSwitch , OnOffSwitch , Component , OnOffSwitch
added a new class ` RemoteExecutionEnabled ` and corresponding tests in ` BuildableSerializerTest . java ` to enable or disable remote execution functionality
pdfbox - 4071 : fix typo , a suggest by valerybokov
replaced ` FileReader ` with ` InputStreamReader ` and added ` StandardCharsets . UTF _ 8 ` suppress warnings in ` ImportCsv . java ` ,
added assertion to check that shadow variables are not stale in the working score to ensure that shadow variables are correctly validated during score processing
updated SEMIJOIN _ CONVERSION from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion
added logging statements to various DatagramPacketDecoder , DatagramPacketEncoder , and DatagramPacketStringEncoder classes to improve traceability and debugging
updated method calls from ` removeFile ` to ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and improved null checks in
added assertions to verify the presence and presence of the transaction hash in the PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly
[ ischemaregion ] deprecate ischemaregion # constructschemablacklist ( ) and rename ischemaregion # deletetimeseries (
added a null check for sampleMimeType in MediaCodecRenderer to ensure proper exception handling for invalid sample mime types
replaced calls to ` this . notify ( ) ` and ` lock . notify ( ) ` with ` notifyAll ( ) ` in `
updated @ AllArgsConstructor annotations to include @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) to ensure that the @ AllArgs
added a check to prevent creating an index on a view in MetaDataClient . java to ensure that index creation is only performed on a view to
added a new file ` Website . java ` and updated ` PopulatorImplTest . java ` to implement a test for ` Website
added a setup method to set the default locale in BSFormatterTest to ensure consistent locale settings for tests
log a warning if there be a badly download jar file that have be zip file
updated the assertion in MultiPartParsingTest to use Matchers . equalToIgnoringCase for comparison to improve readability and maintainability of the
added conditional checks for single and non - single parameters in SimpleExprGenerator . java to ensure proper handling of variable expression tokens in the code
added a volatile boolean flag ` createdVertx ` and modified the conditional check to include it to ensure the vertx is only created if it
updated writeAttributes method calls to include a NodeModel parameter to enhance attribute writing by associating attributes with a specific node model
corrected string concatenation syntax in Log _ OC . java and added null checks in FileDisplayActivity . java to improve code readability and
added a new boolean field ` ignoredReadStatus ` to the ` Entries ` class and updated related classes to manage the read status of unread entries
replaced ` MavenTestingUtils . getTargetDir ( ) . toURI ( ) ` with ` MavenPaths . targetDir ( ) ` in multiple test
updated import statements and refactored data validation logic in RegisterServerConsumerExecutor . java and URIRegisterExecutorSubscriber . java to improve code read
updated the condition for determining if the sound is playing in GwtMusic . java to ensure that the sound is playing only occurs when the
added a new permission constant for ADMIN _ SUDO _ AREA in MainCommand . java and updated its usage in Captions . java to
updated query options handling in ServerRequestPlanVisitor to use HashMap instead of ImmutableMap to improve code readability and maintainability by encapsulating query options
updated file name validation logic in ReloadableJavaParserInputFileObject and Java8ParserInputFileObject to use getFileName ( ) instead of toUri (
updated assertions in ResourcesTest to use dynamic values for " pure " , " label3 " , " label4 " , and " label5
replaced the native method ` NMTWaitForDataMerge ` with ` NMTOverflowHashBucket ` and added new native methods `
[ hotfix ] [ serializer ] migrate eitherserializersnapshot to javatequalserializersnapshot
refactor AddressResolverOptions to replace DEFAULT _ NDOTS and DEFAULT _ NDOTS with DEFAULT _ ROTATE _ RESOLV
added a call to the superclass ` __ associate ` method in ` RequestRockerTemplate ` and a corresponding test in ` RequestRockerTemplate
pdfbox - 4071 : return empty string instead of null for non - terminal dictionary
updated file paths from " liquibase / parser / core / xml / " to " www . liquibase . org /
move commonmimetypelocator from source to test . source .
updated repository state references from INIT to NOT _ REQUIRED in multiple classes to ensure consistency in repository state representation
updated the schema comparison logic in GenerateChangeLogTask . java to include catalog and schema names to enhance the comparison process by providing additional schema comparison
updated JUnit import from ` org . junit . Test ` to ` org . testng . annotations . Test ` to ensure compatibility with
added a new test class ` ProgressiveJPEGTest ` to validate the functionality of ` ProgressiveJPEG ` in the G2D graphics framework
updated the alpha settings in MaterialLoader and changed the way mat names are stored in the list to ensure proper management of material data and improve code
[ gr - 20684 ] add x86 architecture to error message for native - image build
added a null and empty check before setting the size of the label to avoid potential NullPointerExceptions when the text is empty
modify readVarInt ( ) to use % 1 _ 000 _ 000 instead of % 1 _ 000 to ensure correct handling of integer values in
made the ` PushUtils ` class final and added a private constructor to multiple classes to enforce immutability and prevent instantiation of these classes
simplified the calculation of the length in RocketPanel by directly using curConfig ' s getLength ( ) method to improve code readability
removed unnecessary cast to MockDirectoryWrapper in setEnableVirusScanner method to simplify code and improve readability
updated the parameter in the load method from " . * csv " to " ( ? i ) . * csv " to ensure that the correct
added a condition to announce for accessibility in TaskbarStashController and changed variable names in ActivityContext and FloatingIconView to improve
replaced ` Args . getInstance ( ) . getMyKey ( ) ` with ` RefreshTask . getNode ( ) ` in ` NodeManager
pmd : add targetjdk1.5 flag to allow ant task to be target both 1.3 and 1.5
replaced ` PowerMockito ` with ` MockitoJUnitRunner ` in ` QuotaResponseBuilderImplTest . java ` and updated
added PrintStream and PrintStream variables to TestSchemaToolCatalogOps . java to improve output / error handling for better debugging
added a DFSClient parameter to the FanOutOneBlockAsyncDFSOutputSaslHelper constructor and updated related methods to include it to
updated MongoQueryMethod and related classes to include RepositoryMetadata as a parameter to enhance metadata handling capabilities in MongoDB queries
simonstewart : add a wrapper for the entityresolver2 wrapper so that it can be use by the parser .
removed and added multiple import statements for PhoenixDatabaseMetaData in MetaDataEndpointImpl . java to streamline the code by eliminating
increased the ALLOWED _ REATED _ DEADLOCKS constant from 5 to 10 and added a deadlock retry mechanism in Txn
replaced instances of ` xl ` with ` xAxis ` in ` BarChartActivity ` and updated offset calculations in ` LineChartActivity1 `
added methods to check if a character is printable or non - printable in FsUtils . java to ensure proper handling and validation of character names in
rename ` selenide . in ( ) ` to ` selenium . using ( ) `
add option to process plugin configuration in defaultmaven
updated calculations in ProxyConnectionManager and ServerTrafficCounter to use ' d ' for precision to improve precision and consistency in calculations
[ integration ] make itsystemtest work with google - cloud - vision
updated return values in ModeledConnectionRecord , ActiveConnectionRecord , and AuthenticatedUser classes to return null instead of a hardcoded string to
added admin permission check to community list servlet
replaced ` longCompaction ` and ` shortCompaction ` with ` AtomicInteger ` for counting long and short compaction threads to improve thread management
updated the method of obtaining the package name from getApplication ( ) to resources to ensure the correct package name is used for wallpapers
refactor method to retrieve visible players in the plot to improve code readability and maintainability by centralizing visibility logic
refactor AndroidManifest , ResName , ShadowMediaPlayer , ShadowActivity , and ShadowActivity classes to improve code organization and maintainability
updated MlibOpsTest . java file to improve test coverage for Mlib operations functionality
refactor code to use a constant for the operating system implementation instead of a hardcoded string to improve code readability and maintainability by central
corrected a typo in the variable name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a
removed unnecessary null checks for key and iv in UploadFileOperation . java to streamline code and improve readability by eliminating unnecessary checks
added @ Stability annotation to WorkProfileTest . java to indicate that the test is stability for both local and postsubMIT flavors
added a condition to skip processing if bucketing version is not set to ensure that only valid bucketing versions are processed
replaced ` setCursorPosition ` method call with ` input . setCursorPosition ` in ` GwtTestWrapper . java ` to ensure
renamed ` LockFreeBucket ` to ` LockFreeBucketContendedTimeMeter ` and added new classes ` LockFreeBucket _ FinalFields
print thread pool stats to system . out in nodeprobe
updated the method call to retrieve the maximum bitrate from user preferences to ensure the maximum bitrate is retrieved from user preferences
added methods to check for presence of trace ID and span ID in the ZipkinHttpSpanExtractor class to improve code readability and maintainability
move getuserpaymentaccounts ( ) into abstract class to allow subclass to access payment account
remove some reflection specific to 2018.1 and old version ( # 2730 )
added a method to set the project name in the LauncherUtils class to ensure the project is set for the application
updated JsBundle , JsBundleBuilder , JsTestScenario , and JsBundleBuilder to include ProjectFilesystem as a parameter to enhance flexibility in
updated multiple Java files related to EnvelopeStyle , Databinding , Databinding , MessageContext , and PropertySet to improve code
[ hotfix ] [ doc ] fix typo in javadoc
refactored VersionBuckConfig to use ImmutableSet instead of ImmutableMap and removed the VersionConfig interface to simplify the code by eliminating unnecessary
added a try - catch block around the bindShadowClass method call to handle TypeNotPresentException to improve robustness by preventing application cr
changed the access modifier of the ` validateTypes ` method from static to public and updated the exception message from " AST " to " LST
fix : update gapic - generator - java with mock service generation fix ( # 44 )
added SLF4J logger imports to SimulationStatus . java to enhance logging capabilities for better debugging
updated version number from 138 to 150 and font from 9 to 14 in the Splash . java file to improve the visual appearance of the
added a runLater block to the notification addition process in UserInterfaceComponentImpl . java to ensure notifications are added on the main thread to improve respon
added a mock implementation for returning elements in the ReturnsElementsOf class to enhance mock testing capabilities for better functionality
corrected a typo in the error message for dropping partitions for non - string partition columns to improve clarity and accuracy of error messaging
added a test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to validate the functionality of ` LineFileDocs
added a method to retrieve the version code from the application context in MainApp . java and updated FeatureList . java and WhatsNewActivity
camel - 1845 : fixed the issue that beaninfo . getmethodinvocations do n ' t throw an ambiguous request body .
updated assertions from ` getContentDispositionFilename ` to ` getSubmittedFileName ` in ` MultiPartInputStreamTest . java ` to ensure tests accurately
added bufferOwned flags and conditional disposal in IndexBufferObject and VertexBufferObjectWithVAO classes to manage buffer ownership more efficiently
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing forgot password
refactor JerseyClientConfiguration to improve code readability to enhance maintainability and facilitate future updates
int - 1346 move characterstreamreadingmessagesource and characterstreamwritingmessagehandler to ' org . springframework . integration . stream '
updated print statements to use the variable ' o ' instead of ' s ' for consistency and clarity to improve code readability and maintainability
added methods to manage the last modified column count and row count in StringDict and Table classes to improve handling of string arrays and ensure correct row
added a new ` AutoCloseable ` interface to ` GenericContainer ` and implemented ` withCustomizer ` method in ` GenericContainerRuleTest
changed log level from info to error in MediaInfo . java and updated exception handling in RendererConfigurationTest . java to improve error logging clarity
added support for the " schemapattern " option in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance database connection configuration by allowing
do n ' t return an empty tlssession id if it be null .
refactor ratio calculation and bitmap creation in AndroidGraphics . java to improve readability and maintainability of the code
refactor Base64 class to improve data handling to enhance performance and maintainability of the code
sulong : add readi64managedsinglecontext to the global container .
danielwagnerhall : ignore test that fail on iphone
refactor FlowBuilder and FlowJobBuilderTests to improve code organization to enhance maintainability and readability of the codebase
replaced ` ResName ` with ` int ` for resource IDs in ` AttributeResource ` and related classes to improve clarity and consistency in
[ flink - 20688 ] [ docker ] resolve the tl verification of the docker context ( # 3390 )
use setup instead of teardown in simplereactiveelasticsearchrepositorytests
refactor type variable capture logic in ` mmm Attr . java ` and add a new class ` ppp T6450290 .
added logging level configuration to LoggingFlags and LoggingOptions classes to enable customizable logging levels in the application
added logging statements to ` LauncherModel ` , ` SecondaryDropTarget ` , ` ModelWriter ` , and ` PackageUpdatedTask ` to
added ` allFilesOption ( ) ` method to ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity ` to
added deprecated methods for handling ` forEachOperation ` and ` hasMatching ` in ` MutationOperationGroup ` to indicate that these methods are intended to
modify the calculation of numPredictiveAppCols based on device type to ensure correct app column count based on device type
updated the initialization of the value string to use UTF - 8 encoding to ensure compatibility with UTF - 8 encoding in string construction
added a new ` RequestMatchers ` class and its corresponding test class ` RequestMatchersTests ` to facilitate matcher matching functionality in security
simonstewart : remove unnecessary applet check
updated height and width calculations in ProgressBar . java to account for bgBottomHeight and bgRightWidth to ensure proper rendering of the appearance of
fix load external function definition from external _ functions . json
changed fields to be final in BruteArgumentMoverHandle . java and added a native method to permute arguments to enhance immut
added a condition to check if the state handler is invalidated in the gesture state check to ensure that the gesture handler is only processed when the handler
updated layout conditions and metrics calculations in CellLayout and Workspace classes to ensure consistent layout behavior across different orientations
added a condition to check if the redir file is " / robots . txt " in the HttpRobotRulesParser . java file to ensure
[ netbeans - 4892 ] fix warning icon in jBrowseModule . java and callhierarchytopcomponent . form
updated button types in trySubscribe calls from " continue " and " close " to " return " in AdvancedGameSetupScreen . java to improve
added a check for zero values in UDFOPDivide . java and created a new test class TestUDFOPDivide .
refactor code formatting and improve exception handling in FlowJob . java and StopAndRestartFailedJobParserTests . java to enhance code readability
replaced the ` filterProcessesUrl ` property with a ` matcherBuilder ` in both ` FormLoginBeanDefinitionParser ` and ` LogoutFilter
added onDestroy ( ) method to ShareActivity and ContributionsActivity to unbind the service connection when the activity is destroyed to ensure proper resource cleanup
updated variable names from ' thumbNail ' to ' thumbnail ' in WallpaperPickerActivity . java to improve clarity and consistency in
refactor multiple Java classes related to command handling and output format to improve code organization and maintainability
added a call to set the request timeout in RaftServerConfigKeys to ensure proper configuration of request timeout based on configuration
updated logging level from error to debug in TsFileResourceManager . java and refactored test assertions in ResourceManagerTest . java to improve
added system properties to the setModelSource method in MavenModuleLoader . java to ensure the model source reflects the current system properties
added new metrics for readiness check status in multiple classes to enhance monitoring capabilities for readiness checks
added custom item block to the animatedtorch model to make it easy to use
added null check before closing the writer in FileHistoryCache . java to avoid potential NullPointerException when writer is null
added a method to retrieve Hive configuration from a specified directory to facilitate testing by allowing users to configure Hive configuration based on the specified
added a new link for " Muting Users " to the FeaturesActivity to provide users with a specific link for users
added a new property " jdk . reflect . useDirectMethodHandle " with a value of " false " to disable direct method handling for
hbase - 25819 splitonleadingvarcharcolumnspolicy extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ flink - 20688 ] [ yarn ] fix the issue that the plugin / lib / plugins directory do n ' t exist
updated method calls in BuildTranscriptHMM and TrainerDictionary to use getWord ( ) . getSpelling ( ) instead of
removed unnecessary newline characters from JSON string in JsonUtilsTest . java to improve readability and maintain consistency in string formatting
added an extra key " id " to the compose in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to ensure the
[ hotfix ] [ runtime ] log warning when message listener be shut down .
throw a more specific exception when there be no class find to analyze
replaced ` Key ` import with ` PublicKey ` import in ` KeyFetcher . java ` to ensure compatibility with the latest security standards
updated the initialization of isIncompatible to true in DLNAResource . java to ensure compatibility with the latest changes
updated the method signature of ` createAccount ` in ` RpcApiService . java ` to include ` AccountCreateContract ` to enhance functionality by
pdfbox - 4071 : check for non - empty range array , a suggest by valerybokov
http : / / issues . apache . org / activemq / browse / amq - 4892 - fix the rout engine to
enable off - heap format by default and update related constants to reflect this change to improve performance and maintainability of the code
truncate title to a maximum of 2048 characters to ensure that the title does not exceed the maximum of 2048 characters
updated JColorChooser and BasicColorChooserUI to use ColorChooserComponentFactory for previewPanel initialization to improve flexibility in managing the preview panel
changed log level from info to debug for extension checks to improve logging granularity for better debugging
added a null check for the reusable bitmap before setting inMutable and inSampleSize in AndroidTileBitmap . java to avoid potential NullPointerExceptions
added a new method ` getLayoutParams ( ) ` to return layout parameters in ` FakeView ` to provide access to the layout parameters for better
added a check to throw an IllegalStateException if the cursor is already closed in DefaultCursor . java to ensure that an IllegalStateException is thrown when the cursor
pdfbox - 4071 : remove unneeded code , a suggest by valerybokov
added @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready for execution
added a private String field ` ts ` with getter and setter methods in ` Message . java ` to provide a mechanism for retrieving and setting the
[ opengrok ] move genericexceptionmapper and webexceptionmapper into web - api module
changed the visibility of the AbstractExecutor class from package - private to public to allow external access to the class from other packages
remove legacy parameter from request hint in isochrone
removed the ' public ' access modifier from multiple test classes to enhance encapsulation by restricting access to the class
refactor CSRF handling by extracting it into a separate method ` setCSRF ` to improve code readability and maintainability by centralizing CSRF
refactor the EclipseLoaderPatcherTransplants class to include a bootstrap flag for shadowLoader and ClassFileMetaData to enhance flexibility in
[ drools - 666 ] add support for numeric disabled rule ( # 2649 )
changed log level from info to debug for default value logging in HiveConf . java to improve performance by reducing log verbosity when debug is enabled
added null checks for axes and buttons in Lwjgl3Controller and modified controller management logic in Lwjgl3ControllerManager to
updated import statements for ObjectFactory from cucumber . api to io . cucumber . core . backend to ensure compatibility with the latest
refactor the code to retrieve the HostDatabase before saving the port forward to improve code readability and avoid potential null pointer exceptions
added a configuration property ` SHOULD _ SNAPSHOT _ DATA ` and its getter / setter methods to ` GlobalConfiguration ` , and updated related
updated the handling of file paths and job scheduling in SyncedFolderObserver . java to ensure that the event path is not null before proceeding
refactor LocationMarshaller class to improve code organization to enhance maintainability and readability of the codebase
removed redundant check for trackpad motion events in StatusBarTouchController . java and refactored gesture handling in OtherActivityInputConsumer . java
updated package structure and class names for VectorReader and related classes to improve organization and clarity of the code structure
updated import statements from ` org . mockito . ArgumentMatchers ` to ` org . mockito . Matchers ` across multiple test files to
updated method calls to use ` getRelativePath ( ) ` instead of ` getRelativePathName ( ) ` across multiple files to simplify method calls and improve code
updated ` completeMapAndTransformRow ` and ` transform ` methods to use ` RecordReaderFileConfig ` instead of ` RecordReader ` to
added a null check for the extractor before instantiation in ControllerMethodInvoker . java to avoid potential NullPointerExceptions when the extractor is null
cloudstack - 4892 : use domain . resource _ unlimited instead of maxproject _ secondary _ storage .
add a potion shift event to the inventoryeffectrenderer and make it cancelable in the guiscreenevent .
added a deprecated constant for COLD _ READS _ TO _ OMIT _ KEY and marked it as deprecated in SizeTieredCompaction
added a call to leech . stop ( ) in ClientTest . java to ensure proper resource management and prevent memory leaks during tests
[ issue # 6661 ] fix the issue that popmessageprocessor do n ' t respond to retry metric ( # 6661 )
refactor KeyboardAddonSettingsFragment to improve code readability to enhance maintainability and facilitate future updates
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to temporarily disable the test for a moment
polish ` ` ensure that mongoclient ' s eventloopgroup be shut down during context close ' '
added ` UpgradeRequest ` and ` UpgradeResponse ` to the ` JettyTrackingSocket ` and implemented a test for handling upgrade requests to enhance
added a timeout variable and its implementation in AndroidImplementation . java to allow dynamic configuration of connection timeout settings
updated user and team permission methods to return a list of permissions for users , team , and team to enhance permission management by allowing users and team
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure SQL parsing and deparsing correctly handles quoted
added conditional checks for root directories and introduced a method to determine if a file is writable based on the operating system to ensure proper handling of root
added logging for thread group and thread per group in FixedThreadExecutor . java and refactored thread selection logic in FixedThreadExecutor . java
added null check for the field before checking its presence in AbstractChangeGenerator . java to prevent potential NullPointerExceptions when the field is null
replaced ` CasEventListener ` with ` InitializingBean ` in multiple configuration files to standardize event listener type usage and improve code clarity
refactor animation end handling into a separate method ` endAnimation ( ) ` in ` ShadowAnimation . java ` to improve code readability and
hbase - 2696 addend ( ) method to deflateroutputstream in regionfile . close ( )
added a new file ` gsp001 . java ` to test system property retrieval in JVMTI to ensure that the system property agent
refactor BeanDefinitionInjectProcessor to use concreteClassMetadata and isDeclaredBean variables instead of annotationUtils to improve code readability and maintainability by
* add cameranode , lightnode , cameracontrol and camerodenode export to support export of camera control .
refactor PopupNotificationPanel to utilize a utility method for disposal of the popup window to improve code readability and maintainability by
replaced ` NoInstanceException ` and ` InvalidInstanceException ` with ` InferenceException ` in the ` Infer . java ` file
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the value of the feature value
align mockito . after with mockito . timeout to take a long instead of int
added ` onBuild ` and ` executionDriver ` fields with their respective getter and setter methods in ` ContainerConfig ` and ` Info ` classes
added conditional logic to set icon based on RTL support in Toolbar . java and adjusted layout positioning in FlowLayout . java to ensure
added a boolean flag ` enablePositionIncrements ` to the ` StopFilter ` class and updated the return statement to use it to enable position
replaced direct assignment of internetAddress with a new instance of InternetAddress in EmailsTest . java and SystemErrorEmailReportTest . java
added a new boolean variable ` mTryShareAgain ` and initialized it to false in ` FileActivity . java ` to ensure that sharing functionality
added functionality to determine if the TTY command is used in JansiNativePty . java to enhance compatibility with TTY by allowing
updated variable names from ` bytes ` to ` bytesSize ` in ` BandwidthProcessor . java ` to improve clarity and functionality based on
replaced direct assertions with Awaitility ' s await logic in Issue410Tests . java to improve test reliability by using Await
update endpoint URLs in EaseeBindingConstants . java to use a common API base URL instead of hardcoded values to improve maintainability and
updated sleep duration in KafkaIOIT . java and added startup attempts in KafkaContainer . java to improve read timeout handling and increase startup attempts for
replaced calls to ` allOf ` with ` is ` for JSON path checks in ` SearchResultMatcher . java ` to improve clarity and
updated SSL handling in OkHttp . java to utilize TrustManager and X509TrustManager for certificate verification to enhance security by allowing SSL connections
refactor button click handling in NavbarButtonsViewController and TaskbarNavButtonController to use a dynamic button type instead of a static
added a new file ` HyperlinkFormula . java ` and updated ` StringPtg . java ` and ` StringPtg . java `
added nullable fields for stdout and stderr in ShellStep . java and improved null check for workingDirectory in escapeAsBashString method to
increase timeout for asyncappendertest from 1000ms to 2000ms
updated the ` escapeDatabaseObject ` method to include ` objectName ` and ` objectType ` as parameters to enhance flexibility in handling database object names
added a new boolean variable ` inputChanged ` and modified the logic for handling input changes in ` MaterialRenameDialog . java ` to improve the
added a test for state change functionality in ShadowDisplayTest . java and implemented a setState method in ShadowDisplay . java to ensure correct display state
[ geos - 5390 ] add directinvocationservice to invoke direct operation on the dispatcher .
ggb - 1349 fix ggb - 1349 to handle x and y key in gwt .
updated SQL query construction in PgDatabaseMetaData . java based on server version to ensure compatibility with PostgreSQL versions below 9.0 and above
[ hotfix ] [ network ] fix nullpointerexception in queuechannel
updated method signatures and variable names in FileUtils . java for improved clarity and consistency to enhance code readability and maintainability by using a
added support for Jenkins nodes in the RemoteCollector initialization to enhance monitoring capabilities for Jenkins nodes in the collector server
resolved - issue batch - 1368 : security . headers . disabled and security . headers . disabled should be set to ` ` false '
updated exception handling and logging behavior in ProtobufLogReader . java to improve clarity of error messages and ensure proper handling of position limits
added shutdown logic for NacosRegistry and cleared listeners in DefaultApplicationDeployer to ensure proper cleanup of NacosRegistry and handle potential
camel - mybatis : fix switch / cases indentation see camel - 14540
refactor GoAwayGenerator and GoAwayBodyParser to use a switch statement for status code handling to improve code readability and maintain
updated formatting and added JSON output in AuditEventTests . java and AuditEventTests . java to improve code readability and ensure correct JSON output
added checks for non - rounding errors in the Interpolation class and corrected the return value of the cbrt method to ensure proper handling of
fix path issue in forgeworldedit . getdefault ( )
refactor code to store the absolute path in a variable before adding it to the builder to improve readability and maintainability of the code
added multiple assertions for PointRangeQuery instances in TestPointQueries . java to ensure correct equality comparison for PointRangeQuery instances
hbase - 26462 fix testhfilecleaner test failure on window
updated file label assignment logic in ReceiveFileConversationComponent . java to ensure the file name is only displayed when the download file name differs from the
[ hotfix ] [ table - common ] fix checkstyle violation in jedisclustercommand
[ hotfix ] [ table - planner - blink ] make rowtimeminibatchassgineroperator chainingstrategy configurable
updated the ` FilterInvocationDefinitionSourceEditor ` to use ` PathBasedFilterInvocationDefinitionMap ` instead of ` RegExpBasedFilterInvocationDefinitionMap
added benchmark methods for different hash map types in QMapReadRandomKeyBenchmark , QMapReadSequentialKeyBenchmark , and QMapWriteBenchmark
added a new HashMap instance for G _ SCH _ B in HybridPlotWorld . java to initialize G _ SCH _ B with
added checks for empty fields and refactored identifiers handling in GroovyEngine . java to improve code robustness and maintainability by ensuring valid identifiers
do n ' t set drawable to false for angle in web
added configurable server read socket timeout and TCP keepalive settings in HiveConf . java and updated HiveServer . java to use it to improve flexibility
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` in ` FileRenameAction . java ` to improve cl
no effective change - code cleanup - remove unused import
replaced Joda - Time imports with a lambda expression in RealtimeSegmentRelocator . java to simplify code and improve readability by
vpc : do n ' t start vpc if it fail to start
updated window alpha calculation in WindowTransformSwipeHandler . java and modified condition in FloatingIconView . java to ensure progress is within the
updated the fatal error message to reference the 4.0 schema instead of the 3.2 schema to ensure compliance with Spring Security 4.0
refactor IterableOfProtosFluentAssertion , MapWithProtoValuesFluentAssertion , MultimapWithProtoValuesFluentAssertion , and
added ' final ' modifier to multiple fields in DisruptorProviderManage , QueueConsumer , and DisruptorProvider classes to ensure immut
added a new test class ` TestConfigureUDF ` and modified ` ExprNodeGenericFuncEvaluator ` to utilize it to facilit
updated regex pattern in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to improve regex matching accuracy and enhance test coverage for
replaced instances of ` logger ` with direct calls to ` logger ` for debug , info , and warn to simplify logger initialization and improve code
replaced instances of ` updatePurgedShardNodes ` and ` purge _ time ` with ` deletePurgedShardNodes ` and ` delete
added support for JavaLanguage 17 and 17 - preview in JavaLanguageModule and LanguageVersionTest to enhance localization capabilities for Java users
added a new constant for seconds to wait for compression job completion and updated related methods in TimeBasedRollingPolicy and FileAppenderResilienceTest
added a null check for lastLocationAccess in VolatileReadNode . java to ensure that lastLocationAccess is not null before proceeding with
added a method ` getSteps ( ) ` to return an unmodifiable list of steps in ` SimpleJob . java ` to provide access to the
removed unused base58 fields fromBase58 , toBase58 , and contractAddressBase58 from TronJsonRpc . java to streamline
refactor currency pair creation to use a variable for clarity to improve code readability and maintainability by reducing redundancy
fix longtasktimer to use base time unit instead of nanoseconds
[ flink - 25836 ] [ euphoria - guava ] fix incorrect partitioning in reducebykeytranslator
refactor color handling in HostEditorActivity to use CharSequence instead of String for better type safety to improve code readability and maintainability by using
refactorializer : rename incompatibledatabasehandler to databaseversionhandler
added a maximum number of replies in the loop to limit the number of replies in the query to improve performance by limiting the number of replies
increase the refresh interval in AbstractCachedLDAPAuthorizationMapLegacyTest from 1 to 2000 milliseconds to improve test stability by allowing more time for
queue : fix getpersistedbytesiz correctly for fully acked deleted tail page
fix checkstyle issue in entity / glowserver . java
refactor the ` grow ` method in ` DataIO . java ` to use a new ` grow ` method to improve code readability and
removed import of DataOutputStream in GdxSetup . java to streamline code by eliminating unnecessary dependencies
camel - 16462 : added getsubmittedfilename ( ) method to attachmenthttpbinding to provide a way to retrieve the submission file name for
added a call to markReadForLoad ( ) in LauncherFragment . java to enhance user experience by ensuring data is read during loading
modified the ` instrumentJar ` method to handle ` ClassNotFoundException ` and ` NegativeArraySizeException ` to improve error handling and provide clearer feedback
hive - 13434 : fix a bug in hashagg when select a partition to flush ( jesus camacho rodr
changed variable and method calls to use ' dsName ' instead of ' info . info . getDocStoreSegment ( ) ' for consistency to improve
added a default name ID format and a check for supported name formats in SamlProfileSamlNameIdBuilder to ensure the default name ID format
added redirection and error handling for password change in ChangePasswordPage . java to improve user experience by providing feedback when a password change is aborted
reformatted the closing brace in Deadlock2 . java to improve code readability and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle
deleted the FontScalingTest . java file to remove unused test code to streamline the project
added validation for start and end date parameters in RRD4jPersistenceService . java to ensure that filter start and end times are valid before
added checks to return early if the number of vectors is less than or equal to zero in GenericUDAFComputeStats . java to prevent processing
test : migrate executablereferencetest to junit 5 ( # 4394 )
added null checks before setting view and glassPane in JLayer . java and created a new class bug6994419 . java to
camel - 14650 : added support for wiretap expression to senddynamicprocessor and senddynamicprocessor .
changed the access modifier of the setAction method from public to protected to restrict access to the method for better encapsulation
[ calcite - 1188 ] add ` ` planner . enable _ topn ' ' to disable topn planner
[ java ] remove reference to aerondirectory in the archive and cluster test .
fixed - rbatch object in redis _ write _ atomic or redis _ read _ atomic mode can be corrupt by ping command . # 3634
replaced InputStream and ByteArrayOutputStream with a URL for configuration variables in HiveConf . java and removed the LoopingByteArrayInputStream class to improve flexibility
updated the method call to use criteria . getDevice ( ) instead of Device . defaultDevice ( ) to ensure the model is created with the correct
modified the onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to ensure proper handling of menu options and menu item selections
refactor CertificateValidator class to improve certificate validation logic to enhance security and maintainability of certificate validation logic
update homeDir initialization to use " hawtio . dirname " instead of " user . home " to ensure correct directory path is used
added a condition to return SINGLE _ SPACE for empty comments in Space . java to ensure consistent handling of empty comments and improve code clarity
changed fields in multiple dictionary classes to be volatile to ensure thread - safe modifications to fields across multiple classes
added printStackTrace ( ) method call in ContextHandler . java to improve error handling and debugging capabilities
move customitemdroptest to integration - regression module
added a new boolean parameter ` ifNotExists ` to ` AddPartitionDesc ` and updated related classes to handle the ` ifNotExists ` condition to
corrected the logic for reading and resetting the input stream in NfsSecondaryStorageResource . java to ensure proper handling of data reading and reading
[ java ] do n ' t call archivecontext . localcontrolstreamid on service node .
added spatial operator support to the CapabilitiesTransformer and corresponding unit tests to enhance functionality for spatial operations in the application
added import for LuceneTestCase and annotated the BasicDistributedZkTest class with AwaitsFix annotation to address issue SOLR
updated condition checks in Http11InputBuffer . java to handle preface matching more effectively to improve robustness of input buffer processing by ensuring proper
[ java ] set the default value of isIngressExclusive from true to false in AeronCluster . java to ensure that the cluster is
replaced hardcoded configuration keys with an array of cache keys to improve flexibility and maintainability of cache key management
added a private variable ` runningRecordCount ` and updated the exception handling logic in ` JSONRecordReader . java ` to improve clarity and
added a loop to filter out specific year items from mergedItems to ensure that out - year items are removed from the mergedItems list
updated drawing colors in CacheableTextView , CellLayout , HolographicOutlineHelper , and HolographicOutlineHelper to use
added a check for OpenGL ES 2.0 availability in Mesh . java to ensure compatibility with OpenGL ES 2.0 for rendering operations
ww - 4890 set the actioncontext to null in the backgroundprocess to ensure that the actioncontext be set to null after the process
updated methods in BaseSemanticAnalyzer , QBParseInfo , and SemanticAnalyzer to include database name and default database handling to enhance flexibility
added a connection timeout configuration in TestConnections . java and changed the count variable in StubConnection . java to be final to ensure thread safety and
added multiple assertions for the ` approx _ percentile ` function in ` TestHiveAggregationQueries . java ` to ensure that the ` approx _
updated DEFAULT _ IDLE _ TIMEOUT from ZERO to DEFAULT _ IDLE _ TIMEOUT and refactored idle timeout handling in WebSocketChannel to improve
updated the retrieval of shares to use the user ' s platform account instead of the account ' s name to ensure the correct account is used for
added generic type declarations for InetAddress and NetworkInterface in Inet6Address . java to enhance type safety and prevent potential runtime errors
refactor methods in PlaybackControlView to use a unified setButtonEnabled method for setting button visibility to improve code readability and maintainability
updated the ` isPresent ` method to accept a ` long sessionID ` parameter instead of a ` Session ` object to improve flexibility in handling session
replaced ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java `
make useexceptionprobability default to ___ _ instead of true .
updated color handling in PredictedAppIcon . java to differentiate between themed and non - themed icons to improve visual
guacamole - 1349 : refactor userdirectory . updatebyprimarykeyselective ( ) to not use userwithblobs ( )
added " centre " alias to the aliases in Middle . java to support additional aliasing for the center component
added dependency injection for DirectUpload in CommonsApplicationComponent . java and made DirectUpload class public in DirectUpload . java to facilit
added left and right axis spacing adjustments in BarChartActivity , BarLineChartBase , and YAxisRenderer classes to improve chart positioning
added ` HasJavaAbi . CLASS _ ABI _ FLAVOR ` and ` HasJavaAbi . VERIFIED _ SOURCE
added a parameter for operation event status type in OnlineHubService and initialized the services list in CompositeLogService to improve event handling and ensure
added debug logging for annotations in DexAnnotation . java and implemented visibility annotation handling in DexAnnotation . java to improve debugging capabilities and ensure
jmsio : rename startbundle and finishbundle to setup and teardown so that it do n ' t throw exception
updated the variable name from " - cp " to " - classpath " and added classpath to the ProcessBuilder to improve clarity and ensure the
updated the resource loading path in PackageResourceLoader . java to ensure correct file path handling for Android packages
updated method calls to use ' this ' keyword for clarity in DataSet . java to improve code readability and maintainability by standardizing method
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable tests related to issue b / 243855320
replaced the method ` getStackTrace ( actual ) ` with ` escapePercent ( actual ) ` in ` ShouldHaveMessage ` and added a new
fixed - jcache . getcachemanager ( ) . geturi ( ) method do n ' t return cachemanager . getcachemanager (
increase log level of commandcontext to info for already claimed exception
added a conditional block to initialize ALPNClientConnectionFactory in HTTP2Client . java to ensure proper initialization of the ALPNClientConnectionFactory
use getbasevalue ( ) instead of getvalue ( ) in entitypropertiespacket
use thinghandlerhelper . isinitialized ( ) instead of thingstatus . online ( # 3390 )
increased the timeout duration for countDownLatch . await ( ) from 500L to 5 seconds in multiple test files to allow more time
changed log level from info to debug for effect light type determination failure to improve logging clarity for better debugging
add db . properties to syncqueuemanager and asyncjobmanagerimpl so that it do n ' t return the queue for next turn
updated the ` Reporter ` and ` ReturnsSmartNulls ` classes to include an additional ` Object ` parameter and improved exception message formatting to enhance
changed the parameter type of the ` generate ` method from ` Frame ` to ` DataFrame ` to improve type safety and eliminate unnecessary type casting
updated multiple module - info . java files for consistency and clarity to improve maintainability and readability of the codebase
added a check for non - empty physical column names before matching it in OrcPageSourceFactory . java to ensure that physical column names are
fix ( engine ) : implement mixPlay ( input , amp ) method
refactor JComponent and SynthTextPaneUI classes to improve code organization to enhance maintainability and readability of the code
corrected the calculation of firstConfirmedCenter in FinderPatternFinder . java and updated test cases in QRCodeBlackBox1TestCase .
simplified the condition for checking leadingIncludePaths in PreprocessorDelegate . java to improve code readability and maintainability
renamed the test method from ` testMatrixVectorMultiplicationShouldUseBrackets ` to ` matrixVectorMultiplicationShouldUseBrackets ` and re
simonstewart : add ` ` find ' ' , ` ` find ' ' , ` ` find ' ' , ` ` find
updated sample rate calculation in DefaultAudioSink . java to ensure correct handling of sample rate based on the format ' s value
added methods to get and set formula text in XSSFName class and refactored reference handling in XSSFName to improve code
increased the target value from 60000 to 90000 in HighDimensionsTest . java to improve the accuracy of the target value for better
updated the condition from ` split ` to ` split ` in ` SimpleTypeGT . java ` and added a new test method in ` G
added a new test class ClassPathXmlJobRegistryContextTests to validate the functionality of ClassPathXmlJobRegistry to ensure correct job name retrieval
changed the data type of mHistoricTimes from float to long in MotionPauseDetector . java to accommodate larger time values for better
camel - 12320 - camel - restlet - do n ' t throw exception if producer do n ' t exist
( chore ) camel - log : remove unused option showout
refactor ` submitTraceEvent ` to ` writeChromeTraceMetadataEvent ` and introduce a new method ` writeChromeTraceMetadataEvent `
added conditional checks before adding LimitOrder to limitOrders to ensure only valid order statuses are added to limitOrders
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to ensure correct image layout handling and prevent invalid layout issues
refactor timestamp handling in Event and JrubyEventExtLibrary classes to use RubyTimestamp and RubyTimestampExtLibrary ' s newRubyTimestamp
added a check to return the resource if a real path ends with " / " in ContextHandler . java and created a test for getRealPath in
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SETTER
refactor variable names and logic for horizontal and vertical scroll handling in JEditTextArea . java to improve code readability and maintainability by
refactor guard stage and stage flag handling in GraphDecoder . java to improve code readability and maintainability by reducing redundancy
test : migrate sniperprettyprintjavaprettyprinter to junit 5 ( # 4338 )
refactor URLOutputStream initialization to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
added Entity annotations to Mail . java to enable entity - related functionality in the database
updated the default value of " includeTablespace " from " false " to " true " and added an option to include tablespace in the
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to the buffer data for better usability
added a boolean flag to handle non - empty file reading in ScanBatch . java and a corresponding test in TestJsonReader . java to ensure
updated failure handling in StringSubject to include a custom name and improved test assertions in StringTest to enhance clarity of failure messages for better
added a regex pattern to match Cuda names and modified the conditional check for CUDA to improve flexibility in identifying CUDA files based on
replaced specific exception handling from ClassNotFoundException and NoClassDefFoundError to Exception and Error in JrtJavaBasePackages and PackageHelper to improve
hbase - 25828 wait on safemode to get the file system in safemode ( daniel dai )
updated error message formatting in TranslatingJavacPhaseTracer . java to include the class name and message to improve debugging by providing more context
mng - 4892 : remove unused code from defaultplugincache
fix a nullpointerexception in operationsetpersistentpresencejabberimpl . updatecontactstatus ( ) .
refactor : remove unused method and add javadocs .
added a new integration class ` AccountInfoFetchIntegration ` for fetching account information to facilitate integration testing of account information retrieval in B
added mouseWheel method to VDUInput and vt320 classes and updated TerminalView and VDUInput to support mouse wheel functionality to enhance
replaced direct calls to ` getExtractionDir ( ) . toString ( ) ` with a variable ` libraryPath ` to improve code readability
remove columnhstore annotation and deprecate columnhstore from ebean - core
fix setting of player skins in metadata
simonstewart : fix loadbalancerwithservicetests to work on window
fix a nullpointerexception in mapservice . getmember ( ) .
replaced System . getProperty with AccessController for retrieving the operating system version to improve security by using a privileged action for retrieving the OS version
refactor file suffix handling in TemplateEngineFreemarker to use a configurable configuration file suffix to improve flexibility and maintainability by
updated hash code calculation in SelectMessageQueueByHash . java and added multiple test cases in SelectMessageQueueByHashTest . java to ensure
added animation callbacks to the ToolbarPanel class to enhance the visual appearance of the dock panel in the UI
replaced ` EasyBind . bindConditionally ( ) ` with ` EasyBind . when ( hasCaret ) . bind ( ) `
added declaredPlatforms field and updated related methods in PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenruleDescription
replaced ` SimpleParameterAccessor ` with ` ParameterAccessor ` across multiple files to standardize parameter handling in the repository query framework
added a null check before setting the password attribute in ldapAuthenticator to avoid potential NullPointerException when passwordAttribute is null
added a check for array types in DataUtilities and a corresponding test in DataUtilitiesTest to ensure correct default value handling for byte and String arrays
updated SSL engine creation logic to handle null addresses and client authentication to improve robustness by ensuring correct host name is used when the address is null
updated assertions in TestFSTableDescriptors to use assertTrue instead of assertEquals to improve clarity and correctness of cache hit calculations
simonstewart : add wddeletecookie function to the ie driver
added a new boolean variable ` mHasEndedLauncherTransition ` and modified the return logic in ` AbsSwipeUpHandler . java ` to
added " < meta charset = ' utf - 8 ' / > " to the HTML header in HTMLListWriter . java and HTMLWriter .
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
updated the maximum length of the stats key prefix from 200 to 150 and refactored path separator handling to improve performance by reducing the maximum
added a new class ` bug6337518 ` and modified the ` arrowButton ` addition in ` BasicComboBoxUI . java ` to
refactor TestRandomAccessBuffer class to improve code readability to enhance maintainability and facilitate future updates
refactor UserInfoActivity class to improve code organization to enhance maintainability and readability of the code
added HomeContentProvider import and notifyChange calls across multiple services to ensure proper handling of content changes in the application
added functionality to manage the state of the pressed and focused background in BubbleTextView and Launcher classes to improve responsiveness of the
updated ` getFallbackResponse ` method to include an ` Throwable error ` parameter across multiple classes to enhance error handling by providing more detailed error information
removed the conditional check for ` env . _ compile _ only ` when ` env . _ dest _ dir ` is not null to simplify the
added null checks for tags before accessing them in ChannelUri . java to ensure robustness by preventing potential NullPointerExceptions
updated regex patterns in RegexpUtil . java and modified test method names in TestSqlPatterns . java to improve regex pattern matching accuracy and clar
added a constant for the action bar title and updated its title in FileActivity and FileDisplayActivity to ensure the action bar title reflects the
updated type retrieval from ` Iterables . getOnlyElement ` to ` Iterables . getLast ` in ` PythonDslProjectBuildFileParser . java
changed the hour from " * " to " 0 " in the CleaningService class to allow for a non - persistent schedule to be scheduled
updated TransactionalValidationListener to handle partitioned tables and improve table path validation to enhance the accuracy of table structure validation based on partitioned tables
added a polling feature to the SnapPuller class to enable polling functionality in the replication process
changed the data type of ` generatedKey ` from ` int ` to ` long ` and modified SQL statement execution in ` ShadowSQLiteDatabase
removed unnecessary whitespace in SimpleReferenceCache . java to improve code readability and maintainability
updated error messages in multiple test classes to reflect " failed to inline " instead of " not inlineable " to improve clarity and accuracy of
updated keepAliveTimeoutShared and keepAliveTimeoutCustom values and added null checks for endpoint in WebClientFactoryImpl . java to improve thread management and ensure
deleted the HttpTestAccount001 . java file to remove unused test code to streamline the codebase
changed exception handling from Exception to Throwable in Dispatcher . java and added a try - with - resources statement in DispatcherTest . java to improve error
camel - 14284 : camel - cxf - allow to configure the cxfrs dataformat . cxfmessage property .
added support for the ' ~ ' character in ClientUtils . java to ensure proper handling of special characters in the response
camel - slack : allow to specify a delay for consumer to poll
add harvesting event for block drop . close # 3390
updated the layout constraints in TranscodingTab . java and modified the JCheckBox instantiation in TrTab2 . java to improve layout flexibility and
added a new file ` bug8057791 . java ` that demonstrates the use of ` NimbusLookAndFe
updated flag assignment logic in LambdaToMethod . java and added a new class LambdaInterfaceStaticField . java with a static field interface to improve
[ besu - 2576 ] add support for engine api add ( # 2576 )
updated null check from ` to . length ( ) > 0 ` to ` to ! null ` in ` ComposeActivity . java ` to
added a conditional check for using a dictionary in ParquetFixedWidthDictionaryReaders . java and created a corresponding test in TestColumnReaderFactory .
refactor conditional logic in PortraitPagedViewHandler to check if the device is landscape and adjust calculations accordingly to improve layout handling
added two new annotation interfaces , Log and LogInterceptor , and updated TestController and TestController to utilize it to enhance logging functionality for better
updated the string concatenation in the QueuedThreadPool class to include a condition to ensure that the thread ID is only displayed when the trace length is
updated references from ` ReferenceType ` to ` Implementation ` in ` CacheGenerator ` , ` CacheProvider ` , and ` CacheProvider ` to
updated the calculation of ` refMap ` to include ` totalFrameSize ( ) ` to ensure accurate reference mapping with the total frame size
refactor TypesafeConfigurator to improve code readability to enhance maintainability and facilitate future development
camel - 1889 : added karaf feature to the camel - graphql component so it can be run in a karaf
added two new static methods ` bug1 ` , ` bug2 ` , and ` bug3 ` to the ` RFE28919
replaced URLEncoder . encode with direct entry key and value retrieval in HttpClientIntroductionAdvice . java to improve code readability
rename ` unsupportedPlatformTool ` to ` UnsupportedPlatformTool ` and introduce a new class ` UnsupportedPlatformTool ` to improve clarity and
changed loopCount type from double to int and updated log message formatting to improve type safety and enhance logging clarity for retries
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide a way to retrieve the size of the
added reflection - based access to ` kieAddressManagerTest ` , ` AddressManager ` , and ` AbstractAddressManager ` classes , and
updated column specifications and layout parameters in VLCVideo . java to improve layout consistency and ensure proper layout alignment
replace bisq url with bitsquare url in multiple Java files to align with the new version of the Bitquare API
updated the AUTHORITY string from " com . klinker . android . talon . provider " to " com . klinker
updated user configuration directory to include " . m2 " suffix and improved file path handling in MBoot . java to enhance clarity and
added binding of GL _ ARRAY _ BUFFER to the bufferHandle in VertexBufferObjectWithVAO . java to ensure the buffer is properly bound
refactor ServerHttpSecurity class to improve code readability to enhance maintainability and facilitate future development
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests to disable tests that are not ready for execution
added default headers support in HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP client configuration by allowing custom headers
added userpasswordnotvalidexception and thingsboardcredentialsviolationresponse for user password validation
deleted the NoOpConfigPathGetter . java file to remove unused code to streamline the codebase
replaced Codec . base16Decode with Bytes . fromHexString for signingKey assignment to improve code readability and maintainability by using a standard
replaced ` newmatch . CascadedStyle ` with ` constants . CSSName ` and added null checks for ` float _ val `
add drools - planning - property and droolsplanner - planningfactproperty and droolsplanner - planningfactproperty
replaced CaseInsensitiveHeaders with MultiMap in RestUtils . java and updated the getDefaultHeaders method to return a MultiMap instead of a Case
[ java ] rename ` ` enc ' ' to ` ` charset ' ' in proxyserver
added a method ` getJobId ( ) ` to the ` StepContext ` class and a corresponding test in ` StepContextTests ` to ensure
refactor comparison methods in ExpandableUploadListAdapter and FileStorageUtils for improved readability to enhance code clarity and maintainability by
change log level from error to debug in DefaultJdkHttpClient and JdkBlockingHttpClient to improve logging granularity for better debugging
updated import statements in LegacyAuthenticationHandlerAdapter . java for improved clarity to enhance code readability and maintainability by standardizing import statements
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
filtermanager : do n ' t remove invalid filter if they have own public key .
pgp : move the wrap method from publickeyring and secretkeyring into publickeyring so that it can be use by pgp
replaced ` DataOutputStream ` with ` BufferedOutputStream ` in ` MinimalLockingWriteAheadLog . java ` and added a try - finally block
added a new test method ` testSelectAllFromView ` to ` TestJdbcDriver2 ` and updated column name handling in ` HiveBase
refactor FocusTransitionTest class for improved clarity to enhance maintainability and readability of the code
make sure gwt be not use a gwt project , not a gwt project
added a check to ensure sourceTask is an instance of MapRedTask before accessing counters to avoid potential ClassCastException when accessing counters
removed unnecessary whitespace in the _ readListener assignment to improve code readability and maintain consistency
refactor color handling in AppearancePanel to use ColorSelectionModel for consistency to improve code readability and maintainability by centralizing color change
updated constructor parameters in TaskHelper to use ' hidden ' instead of ' false ' to ensure proper handling of hidden state during task processing
fix intermittent test failure on slow ci server
pdfbox - 4071 : fix resource leak , a suggest by valerybokov
added import statement for DefaultParameterHandler in LanguageDriver . java to facilitate the use of the DefaultParameterHandler in the LanguageDriver
add loop depth check before set spill state in linear scan .
add micronaut . ast . transform . test to test the compilation of the groovy module .
refactor PgResultSet and PgStatement to use a centralized closeInternally method to improve code readability and maintainability by centralizing resource
changed the default value of ` serviceAdvisorType ` from ` null ` to ` ServiceAdvisorType . PYTHON ` to ensure the service ad
replaced instance variable ` resolver ` with a ` ThreadLocal < ResolvingDecoder > ` for thread - safe retrieval to improve thread safety and
changed the return type of ` Path ` from ` Collection < ? extends Subpath > ` to ` List < ? extends Subpath > `
replaced direct byte array creation with a random byte array in SendCoinShieldTest . java to improve code readability and maintainability by
added a method ` setPersonalisation ` to the ` SkeinParameterSpec ` class to provide functionality for setting personalisation based on
removed duplicate code lines in CodeGenerator . java to improve code readability and maintainability
removed unnecessary parameters from the scroll method calls in multiple Java files to simplify the method signature and improve code readability
changed the visibility of the ` pointer ` variable from private to public and added ` reset ` and ` resetTo ` methods in ` FlatRecord
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to improve clarity and consistency in naming conventions
replaced specific imports with a wildcard import and refactored type handling logic in CastExpression . java to improve code readability and maintainability
refactor the handling of the ' accepts ' list in AbstractResource . java to improve clarity and functionality to enhance code readability and maintain
added a false value to the TaskView class to control the behavior of the TaskView functionality
added auto - increment functionality to ` CreateTableChange ` and ` LiquibaseDataType ` classes to ensure proper handling of auto - increment
added a default value for the errorText variable in ExceptionResponse . java to provide a clearer error message when a command fails due to Internal
updated imports in DeadListenerTest . java and LocalManagementTest . java to use jdk . testlibrary . ProcessTools and Utils , and
replaced ` toSimulate . add ( currentStatus ) ` and ` toSimulate . push ( boosterStatus ) ` with `
added support for a Jetty AJP connector configuration in GitBlitServer . java to enable dynamic configuration of the Jetty AJP connector
added type coercion handling for compound types in TransTypes . java and created a new Intersection03 . java file with assertion tests to
rename EmbeddingTest class to EmbeddingITest to clarify the purpose of the class
added a native method to start the toolkit thread if it does not already exist to ensure that the toolkit thread starts only if it is
[ gr - 20688 ] add option to compress the bundle in parallel
hide the surface on window if it ' s windows
updated the temporary directory path in AbstractRecordExtractorTest to use the class name instead of a hardcoded string to ensure the test uses the correct
added configuration options for ` fullNodeHttpEnable ` and ` solidityNodeHttpEnable ` in multiple classes to enable or disable HTTP services based
added a new property ` service ` to the ` GoogleCloudFirestoreTicketDocument ` class and modified the ` countTicketsFor ` method
refactor Generate . java for improved code organization to enhance maintainability and readability of the code
updated JsonFunctions to handle null arguments for Java and JSON functions to ensure correct handling of null values in JSON format functions
added a constant for DOTS _ ONLY and updated width calculation logic in BadgeRenderer . java , modified width calculation in IconPalette . java
removed the ` final ` modifier from the ` getConfiguration ` method in ` FreemarkerManager . java ` to allow the method to
added a test for invalid excluded package names in OgnlUtilTest . java to ensure proper handling of invalid package names in the configuration
modified deviceUdid assignment to handle macOS case and updated SDK name handling in IdbRunTestsStep to ensure compatibility with macOS environments
updated DefaultHttpClientFilter and TestDefaultHttpClientFilter to use ProduceProcessorManager for processing errors and improved error logging to enhance error handling and ensure
added a null check for mScript before binding the root script in AllAppsView . java to ensure proper execution of callbacks when the script is
added a new boolean variable ` TEXT _ BURN ` and modified the conditional check for lineCount to improve code readability and ensure proper shadow
added teardown methods for table and view dropping in TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup of database resources after tests
added parser initialization in SecurityNamespaceHandler . java to ensure proper parsing of security namespaces
corrected spacing in BoundedLocalCache . java and added unit tests in BoundedLocalCacheTest . java to improve code readability and
refactor RawConnection to extend WebSocketConnection and implement completion and flush methods in WebSocketAsyncConnection to enhance WebSocket connection handling and improve asynchronous operations
added multiple test methods ` all _ assertions _ should _ pass2 ` , ` all _ assertions _ should _ pass4 ` , and `
added handling for test failure codes in PythonRunTestsStep and updated assertExitCode method visibility in ProjectWorkspace to improve test execution reliability by allowing
added conditional logic to adjust the xAdvances array based on markupEnabled flag to ensure proper rendering of text based on markup settings
refactor score comparison logic in TestBooleanRewrites . java to use streams for improved readability and performance to enhance code readability and
updated the method to retrieve the superclass class instead of the enclosing class to ensure the correct class is used for anonymous classes
remove unnecessary check for player socket connection in updatemanager . flush ( )
added a check for the start of the Launcher class before removing and adding the OnDrawListener in Launcher and LauncherAnimUtils to
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
updated import statements in ReplicaAssigner . java to use wildcard imports and added a condition to check if matchStatus is not APPLICABLE to
updated the default return value of ` getBoolean ( MEDIAPARSERV2 , false ) ` to ` getBoolean ( MEDIAPARSERV
added support for handling AROUND _ TYPE annotation in BeanDefinitionInjectProcessor to enhance support for AROUND method annotations in the BeanDefinitionInjectProcessor
added permission checks for directories and partitions in FolderPermissionBase . java to ensure that permissions are correctly validated and validated during the TRUNCATE operation
updated the ` handleProviderRegistered ` method to include a ` dueToRegistrationStateChanged ` parameter and added a new internal method to handle status
updated the random value calculation in PastelColor . java to use a calculated color base to improve color selection accuracy for better visual representation
refactor ScriptEngineFactory to improve code readability to enhance maintainability and facilitate future development
refactor HolographicViewHelper to create original and outline bitmaps using a dedicated method to improve code readability and maintainability by
refactor request method handling in CloudClient . java to use HttpMethod . fromString for improved clarity and efficiency to enhance code readability and
improve multiwordpreprocessor . gettag ( ) so that it do n ' t throw npe .
removed an unused import of IOException in IOChannelUtilsTest . java to clean up the code and improve readability
modified class loading logic in Table . java to handle different output formats based on the class name to improve flexibility in class loading based on the
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization to enhance maintainability and readability of the codebase
added a check for negative length in the DOMBuilder class to ensure that the length is within the valid range to prevent potential index out - of
updated code formatting and added new imports for HierarchicalUndirectedGraph and HierarchicalUndirectedGraph to improve code readability and maintainability by standardizing
camel - 15850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region ,
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing an interface with static and default methods to demonstrate the use
camel - 16462 : camel - defaultkeyselector now support property placeholder .
replaced instances of ` Throwable ` with ` ThreadDeath ` in ` LogResolverBean . java ` and ` ResourceResolverBean . java
refactor multiple security - related classes to improve code organization to enhance maintainability and readability of the codebase
updated JGit version from " 1.0 . 0 - r " to " 1.1 . 0 - 201109151100 "
updated client key retrieval logic in HttpClientIntroductionAdvice . java to ensure the correct client key is used when the " path "
int - 1188 add the ' transformer ' element to the namespace handler so it can be use with the ' transformer ' namespace .
refactor back factor constants and update conditional checks in ResumeObj . java to improve code readability and maintainability by using a more d
added ` isScrollWheeling ` method to ` CodenameOneImplementation ` , ` Button ` , and ` JavaSEPort `
updated usage string formatting and improved command usage handling in UtilityCommands . java and DocumentationPrinter . java to enhance code readability and ensure proper
corrected the casing of " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in
removed setter methods for seqFiles and unseqFiles in CrossSpaceCompactionResource and updated method calls in RewriteCrossSpaceCompactionSelector to
removed duplicate @ Override annotations in Observation . java to improve code readability and maintainability
updated the logic for updating the projet ruleset in ProjectPropertiesModelImpl . java to simplify the logic for updating the projet ruleset based on preferences
improve performance of abstractsootfieldref . getfieldunsafe ( )
add elastic name convention to index builder ( fixes # 339 )
added new methods to IController and TinyGController , and updated BackendAPI to use IController instead of AbstractController to enhance functionality and
added a new test method ` hugeHorizontalRule ` in ` PathologicalTest . java ` to validate rendering of a large horizontal rule to
replaced instances of ` System . out . System ` with ` TTY . println ` in ` TypeSystemTest . java ` and `
updated multiple Java files to improve code structure and readability to enhance maintainability and facilitate future development
changed the condition from checking if frameLength is equal to checking if it is less than or equal to zero to ensure that frameLength is valid
updated return statements in IntFloatMap and IntIntMap to return values directly to improve clarity and maintain consistency in handling zero values
refactor icon and style setting logic in ImageDownloadService to use Display . callSerially for thread safety to ensure UI updates are executed on
added a null check for the registered variable in HandlerRegistration . java to prevent potential NullPointerExceptions when registered is null
removed the native method ` hasNextSibling ( ) ` from multiple node classes and updated return logic in ` IeNavigator ` to streamline the
added null check for results before accessing its size to prevent potential NullPointerExceptions during execution
updated logging statements in MobFileCache . java for clarity and consistency to enhance readability and maintainability of the code
refactor ColConvCCMTest class to improve code readability to enhance maintainability and facilitate future development
refactor code to use local variables for ` allowCovariantReturns ` and ` target ` and introduce ` syntheticNameChar ` to improve
pdfbox - 4071 : fix raw type warning , a suggest by valerybokov
replaced ` Float . toString ( ) ` with ` asString ( ) ` in ` Json . java ` and added a new class ` X
camel - 14263 : camel - file - consumer - do n ' t throw npe if file consumer do n ' t exist
added an invocation of EventQueue . invokeLater in bug6638195 . java to ensure thread execution is executed on the Event Dispatch Thread
updated the method call from ` getMaxBinaryMessageBufferSize ( ) ` to ` getMaxBinaryMessageSize ( ) ` in ` CompressExtension . java
corrected the calculation of steeringValue in multiple test files to ensure correctness of steering values in the application
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by using a more
refactor JdbcSerDe to use LocalDateTime and LocalDateTime for date and timestamp handling to improve code clarity and ensure accurate conversion of date and timestamp
update version from 2 to 3 and modify metadata handling logic in ParseData . java to improve compatibility with version 3 and ensure metadata is written correctly
refactor FlywayAutoConfiguration to support JPA dependency injection for Flyway and LocalContainerEntityManagerFactory to enhance flexibility in J
added sorted ( ) method to ClassesImpl . java to maintain the order of elements in the class
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated its usage in ` AbstractLauncherUiTest `
refactor SharedInformer class to improve code structure to enhance maintainability and readability of the code
updated method calls in TestCloseScope0 . java to accommodate different Java versions for memory and resource scope to ensure compatibility with different Java
increased the timeout duration in the server socket test from 500ms to 5000ms to improve test stability by allowing more time for connection
rename CaptchaChannelProcessorTests . java file to improve clarity and consistency in naming conventions
added logic to update the owner collection in the MetadataImport . java file to ensure the item ' s owning collection is updated correctly when changes are
added retry logic for saving registry cache files in AbstractRegistry . java to enhance reliability by allowing retries when saving registry cache files
updated the argument from ` mergeDirectory ` to ` directory ` in the TrackingDirectoryWrapper instantiation to ensure the correct directory is used for tracking
added test case for unusedimports , and fix a bug in the rule
added validation for bucket partitioned Iceberg tables in HiveIcebergStorageHandler and corresponding test cases in TestHiveIceberg
updated assertions in BootstrapTests to reflect the correct number of keys and added checks for Legacy SAML keys to ensure tests reflect the correct expected configurations for
updated method names and conditions related to anonymous and non - static fields in Excluder . java to ensure correct handling of non - static
made the ` getAddressVector ` method thread - safe and updated the handling of the ` addressees ` variable to improve thread safety and
removed WAITING _ FOR _ LINE _ COMMENT , WAITING _ FOR _ BLOCK _ COMMENT , and WAITING _ TO _ LEAVE _
added IOException handling to the ` release ` method across multiple classes and introduced a new ` LockReleaseFailedException ` class to ensure proper resource management and
changed the package of DataSourceInitializer from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to organize
added a conditional check for unary operators before transformation in SpelExpressionTransformer . java and modified return statements in multiple classes to improve expression handling and
added TypeValidation . DISABLED to ByteBuddy instantiation in MockBytecodeGenerator . java to disable type validation during bytecode generation
replaced ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment ` and added a new ` ErroneousAnnotations
added failure handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest . java and adjusted inn
refactor ` setSystemProperties ` method to remove unused ` LogFile ` parameter and streamline log file property handling to improve code clarity
added a method to check if a redirect status code is specified and modified the request method to handle redirects more effectively to improve HTTP redirect handling and
added SERVICE _ MAPPING , VERSION _ MAPPING , and APP _ MAPPING constants to ServiceCombConstants and updated MicroserviceFactory to use EnvironmentConfiguration to
updated the method to set the bean name from ` proc . getName ( ) ` to ` proc . getBeanName ( ) ` to ensure the
updated DB _ PATH _ REGEX to static and modified database handling in BaseAndroidTestCase . java , GeocodeHelperTest . java , and
update return statement to retrieve unread count from HomeDataSource to ensure accurate retrieval of unread count from the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method ` testVirtualThreadPool
added a limit parameter to the getAllOrder method in MarketOrderIdListCapsule and introduced a new constant for market count limit in Parameter to
added null check for the user before retrieving user settings to prevent potential NullPointerExceptions when accessing user settings
updated LocalFileSystem to use getAbsoluteFile ( ) instead of getFile ( ) and added a new test for matching relative wildcard paths to ensure correct file
added maximum width and height limits for setting bounds in ComponentBuilders . java to ensure that the bounds are within defined limits to prevent potential issues with
added logging capabilities and deprecated the connection manager timeout methods in CommonsHttpSolrServer . java to improve debugging capabilities and provide a fallback mechanism for
added error handling for document creation failures in PrintController . java to improve error reporting for document creation failures
replaced ` Optional . of ( ) ` with ` Optional . map ( f ) ` for filename formatting in ` CrateType . java
added methods to check if a string is empty or non - numeric in SpellChecker . java and a corresponding test in SpellCheckerTest
rename the constant ' message ' to ' message ' in HelloWorld . java to improve clarity and consistency in naming conventions
added methods to retrieve and display file actions from the OCFileListFragment in FileDisplayActivity . java to improve code readability and maintainability
added daemon mode to the puller and improved error handling in the SnapPuller class to ensure graceful shutdown of the puller and
removed unnecessary whitespace in the update method call in StoreCachedTest . java to improve code readability and maintain consistency
renamed the parameter ` materials ` to ` theMaterials ` and added a loop to remove ` fileColumns ` from the ` fileColumns
added new messages for 3D Collision Detection , Rigid Body Dynamics , and Gamepad API in DependencyBank . java to
added max recycling logic for various view types in the RecyclerView ' s pool to enhance the responsiveness of the RecyclerView by
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure proper functionality of binary
improve error message when there be no valid waypoint
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance functionality by integrating additional node parsing
added null handling checks and tests for range and equal filtering in FilterOperatorUtils and NullHandlingEnabledQueriesTest to ensure proper handling of null values
updated validation checks for bootstrap method signatures in JDynamicInvokeExpr . java to ensure correct argument types are used for bootstrap methods
updated localhost addresses in JmsHttpJmsTest . java from " localhost : 9000 / myservice " to " localhost : 9000 / my
removed clearing of runtime options in CucumberInstrumentation . java to streamline code by eliminating unnecessary formatter clearing
changed the type of ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` and added collection wrapping in ` PrincipalAttribute
added a conditional check to adjust workspace labels based on cell padding and icon size to ensure workspace labels are only shown when necessary
hbase - 25815 add cluster state information to replicationfactortest failure message
sulong : do n ' t initialize context when pre - initialization be enable .
removed JUnit Ignore annotations from ChaosMonkeyNothingIsSafeTest . java and ChaosMonkeySafeLeaderTest . java
replace RuntimeException with JsonIOException in Gson . java to improve error handling by providing a more specific exception type
replaced Integer . valueOf ( ) and Integer . valueOf ( ) with Integer . parseInt ( ) in VisualScoreTagTest . java to improve
updated error messages and modified file tree walking parameters in Copy . java to improve clarity of error reporting and ensure maximum value is used for
refactor segment name validation to use a dedicated method ` isLowLevelConsumerSegmentName ` to improve code readability and maintainability by central
added startActivity and startActivityForResult methods to ShadowFragment and its corresponding test cases in FragmentTest to ensure proper error handling and validation of
updated the return statement in DueDateBusinessCalendar to use the current time from clockReader instead of the current time to ensure accurate date conversion
updated the return statement in TargetCpuType to include " - target " and " - none - linux - none - linux - android " to
added a method ` deleteAllFiles ( ) ` to ` FileDataStorageManager ` and implemented file deletion functionality in ` ManageAccountsActivity ` to
updated the command line argument from " - ? " to " - h " in SchemaCrawlerCommandLine . java to improve readability of the command
added a new method ` createSuiteDescription ` and updated the ` createUniqueId ` method to use it to improve clarity and enforce the unique
replaced the method ` decode ` with ` decodeBarcode ` in ` SnapshotThread . java ` to simplify the code and improve readability
removed the ` ImmutableList < String > sources ` parameter from the ` BuckTarget ` constructor and related code to simplify the constructor and eliminate unnecessary
added unit tests for range pasting end and start in GWCZoomContextFinderTest . java to ensure correct handling of range pasting
added a new configuration key ` DEPENDENCY _ TRACKING _ CONFIG _ KEY ` and implemented a method to enable dependency tracking in JR
updated method call from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to improve clarity
do n ' t try to create a keyspace if it already exist .
added caching functionality to the WelcomeWindow class to improve performance by caching images based on device configuration
updated tuner configurations to include a unique tuner name and modified buffer resubmission logic to improve tuner management and ensure proper handling of
added HasTests interface to AbstractShBinaryDescriptionArg and implemented a new test method in ShBinaryRuleIntegrationTest to enhance testing capabilities for sh
added a condition to set the includeString variable to " db : hsqldb " in TestFilter . java to ensure proper handling of database
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
do n ' t set materializehostexception if there be no stack trace .
export jvmci to the correct class when load a service .
add unit test for duplicate command handler resolution
[ flink - 20865 ] [ doc ] add the option ' fine - grained . shuffle - mode . all - blocking '
fix fish hook not be able to use fish vanilla . close # 1193
camel - ftp : create an camel - ftp component base on sdk v2 , regen doc
rename ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
rename ` useShortNames ` to ` compressPackageNames ` and update related methods in ` GangliaReporter ` to improve clarity
added a check for empty items in AppsContainerRecyclerView to prevent processing when no items are available
added a conditional bean definition for the REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration . java to ensure that the RE
replaced StringBuffer with StringBuilder and added properties property to XMLLayout class to improve performance and support property management in the application
added support for the " omitHeader " parameter in multiple classes and updated related methods to utilize this parameter to enhance response handling by allowing the
updated the property retrieval method to use ` getPropertyNumber ( ) ` instead of ` _ id ` and added a new test class ` TestEs
updated return statement formatting in Description . java to improve code readability and maintain consistency
remove method numberer and modify the hierarchy to ensure that the method numberer is properly removed in the scene
added null checks for disputesPerTradeId , disputesPerDelayedPayoutTxId , and disputesPerDepositTxId
added a ` getObjectHash ( ) ` method to ` AbstractNamedObject ` and modified ` DatabaseSchemaCrawler ` and ` NamedObject ` to
wallet : set not _ sequential _ in _ chain to not _ sequential _ in _ chain for transaction .
added handling for " Body " and " Header " annotations in HttpClientIntroductionAdvice . java to ensure proper handling of HTTP headers
fix craftinghelper . processconditions ( ) to skip craft condition .
hbase - 2695 close region in case of exception in openregion ( ) fails
refactor validation logic in Credential . java to use local variables for length checks to improve code readability and maintainability by reducing redundancy
[ java ] fix check for image subscription in client conductor .
replaced reflection - based process destruction logic with a direct call to waitFor ( ) to simplify the destroy method and improve code readability
added support for Oracle database in TestDefaults . java to ensure compatibility with Oracle database scenarios
camel - 1565 : fix the npe in mailconsumer when the store be not connect to the mail store
added logic to check if a query has more tokens in the parser to ensure that no more tokens in the query are consumed to improve error handling
camel - 18131 - aws - translate : list all the available language in the enum - aws - translate : list all the available language
added a method to retrieve the data file name in the Model class and updated HMMModel instantiation logic in Voice . java to enhance functionality to
added emailDomain property and its getter / setter methods to LdapIdentityProviderDefinition , IdentityProviderDefinition , and IdentityProviderEndpointsMockMvcTests classes to
added default values for request read and connection timeouts in Configuration . java and updated related methods in ViewRegistry . java to improve configuration flexibility and
added a condition to check if myDeferredConcepts and myConceptLinksToSaveLater are not empty before executing the execute method to ensure that
added RedisCategory import and category annotations to RedisServiceRegistryTests to enhance test categorization for Redis services
updated the ` noNNPEWhenUsedFromDeprecatedUses ` test to use ` @ NullAndEmptySource ` and modified the ` no
updated paintComponent calls in OverlayPanel and WaterfallPanel classes to ensure proper rendering of components in the layout
removed unused imports from multiple configuration classes to improve code clarity and reduce unnecessary dependencies
added a new method ` getEventSignatureFull ( ) ` to the ` ContractEventTrigger ` and ` LogEventWrapper ` classes and updated the
updated filter condition from contains to endsWith in FileTestHelper . java to ensure correct filtering of file names ending with underscores
updated the drawing method in MapView to use the background color instead of clearing the rectangle to improve visual consistency by using the background color instead of
added an else clause to the if statement in PackageBuilder . java to ensure proper handling of invoker compilation errors during compilation
removed unnecessary print statements from various graph - related classes to clean up the code and improve readability
added a conditional check for NaN score before asserting document equality in TestFieldCacheSort . java to ensure that assertions are only performed when score
replaced the direct assignment of oldKeys with a copy of the deviceProfile ' s entity keys to ensure that the old keys are not modified
added checks for zero - time values in ColumnSnapshotGenerator and created a test for date default values in MySQLIntegrationTest to ensure proper handling of
updated variable names from ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` to ` offererBtcPubKey ` and
replaced ` Map ` with ` Map < ? , ? > ` in multiple collector classes to enhance type safety by using wildcard generics for `
[ drools - 5892 ] fix the bug that kiesessionmodel . getclocktype ( ) do n ' t return the
updated the instantiation of HiveMetaStoreClient to use ' this . conf ' instead of ' conf ' to ensure the correct context is used for
added a conditional check to return early if modalness changes to optimize performance by avoiding unnecessary processing when modalness changes
added a test method ` createFromProfileLevel ` to ` ShadowMediaCodecListTest ` and implemented native global settings in ` ShadowMediaCodecList
fix # 5460 when enter key , focus be wrong ( # 5460 )
added input validation for width and height in SunVolatileImage and improved error handling in XRSurfaceDataProxy and XRPMBl
updated thousands separator from " . " to " \ u00a0 " in FormatData _ uk . java to ensure proper formatting of
replaced int array with AtomicInteger for thread - safe access in AsyncStressTest and StressTest classes to improve thread safety and performance in
added configuration checks for beta flavor in AchievementsFragment and LeaderboardFragment to improve user experience by providing feedback when beta flavour is
added access , name , and desc fields to SearchMethodVisitor to enhance the search functionality by associating access , name , and desc with the
added multiple sleep calls in IoTDBInsertWithoutTimeIT . java and modified exception handling in IoTDBInsertWithoutTimeIT . java to improve
removed unnecessary whitespace in DLNAResource . java to improve code readability and maintainability
camel - 16462 : camel - xml - dsl - add xml element name for batchresequencerconfig and streamresequencerconfig
refactor transaction management by introducing ` txnAcquired ` flag and refactoring related methods in ` TableReader . java ` to improve
flume - 1348 . use ssl . keymanager . algorithm to get key manager algorithm from the configuration property .
refactor ` getSingleSourceApplicableTest ` method to use ` TreeVisitor ` instead of ` JavaIsoVisitor ` to improve code clarity and
added exit ( ) method in Blockmania . java and modified keyboard key handling in Blockmania . java to ensure proper exit behavior when
replaced ` PACKAGE _ PRIVATE ` with ` NONE ` in multiple classes to standardize access specifier usage across the codebase
renamed the method ` unHandled ` to ` unhandled ` and updated related error handling in ` Check . java ` to improve clarity and
updated the assignment of stripes and stripeStats in OrcInputFormat . java to ensure correct handling of stripe statistics based on the orc
added a null check before proceeding in JCache . java to avoid potential NullPointerExceptions during execution
fix myhentaicomics ripper to use http instead of http
added a command - line argument to display the current jar version to enhance user experience by allowing users to specify the current jar version
fix problem with export list ( fixes # 339 )
added support for custom rotation settings in ConsoleActivity and improved input connection handling in TerminalView to enhance user experience by allowing customizable rotation settings
changed the type of ` hq ` from ` PriorityQueue < ? > ` to ` PriorityQueue < ? extends ScoreDoc > ` to
added null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerExceptions when ownerConnectionAddress is null
camel - 14650 : camel - jolokia - add option to set the headermapfactory class name for camel - jolokia
replaced closing brace with a single single quote in JavaCompiler . java and Diagnostic . java to improve code readability and maintainability
int - 1347 added parser for outbound - gateway and connectionfactory .
updated the index parameter from ` i + 1 ` to ` i + 2 ` in the ` expecting ` method call to correct the method '
added null checks and improved error logging for script engine management in AbstractScriptProcessor and InvokeScriptedProcessor to enhance error handling and ensure script
added ` org . postgresql . PGStatement ` to the proxy instances in ` PooledConnectionImpl . java ` and created a test for
flush flush mem table and refresh size estimate in test
changed log level from error to warn in AtomicRemainder . java to improve logging severity for fragment limit issues
do n ' t sort the candidate ' s min timestamp when it ' s expire
fixed - rblockingdeque / rblockingqueue / rblockingqueue . polllast ( ) and rblockingqueue . polllast ( )
[ hotfix ] [ runtime ] remove unnecessary format argument in jobinspectcommand
refactor Engine class to improve code organization to enhance maintainability and readability of the code
replace ` Stream . of ( ) ` with ` entrySet ( ) ` for sorting child values to improve code readability and maintainability by using
[ issue # 6661 ] fix aclclient to use sessioncredentials instead of rpchook
changed condition from checking numIndexDims to numDataDims to correct logical check for data dimensions in BKDWriter
[ zeppelin - 1340 ] do n ' t print stacktraces when interpretergroup be null
fix expressionnodeevaluator to use ' lt ' instead of ' funn '
removed the public modifier from the method ` verifyIdsAreStable ( ) ` and ` getNodeId ( ) ` in ` NodeIdAccessor .
server : improve error message when snapshot policy can not be create
changed access modifier of several methods from public to package - private in ItemWriter . java to enhance encapsulation by restricting access to specific methods
added a " test " parameter to the ThingImpl constructor in RoombaHandlerTest . java to provide a specific test case for the ThingImpl
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest
replaced FSDirectory with RAMDirectory for directory creation in TestNorms . java to simplify directory management and improve performance
added a check to ensure lineHeight does not exceed the defined height to prevent potential rendering issues when the text rectangle height is below the defined height
refactor WalletAppKit class to improve code readability to enhance maintainability and facilitate future updates
remove hat _ js _ hat _ id parameter from oqlengineimpl . getinitstream ( ) .
remove the chat transport menu item from the button group in ChatTransportSelectorBox . java to improve clarity and maintainability of the menu item
added methods ` resolve ` and ` replaceTokens ` to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
refactor ` setBsqBlockChainExplorer ` method to use ` Optional ` for null safety to enhance code safety by avoiding null pointer exceptions
added methods to manage session attributes in StandardSession and Session classes to enhance session management by allowing retrieval and removal of session attributes
added assertions to verify the presence of a plain bean name and along in the database to ensure that the correct properties are retrieved from the database
updated the array size from pageSize to initialPageCount in MonotonicAppendingLongBuffer . java to accommodate the new initial page count
refactor BatchCommandLineLauncher class to improve code readability to enhance maintainability and facilitate future development
added DataSource and JdbcTransactionManager beans to BatchMetricsApplication to support HSQL database integration in the application
fix checkstyle issue in net / glowroot / log / glowrootloghttpservice . java
pdfbox - 4892 : set composite before draw a image , a suggest by valerybokov
removed unnecessary synchronization in ` close ( ) ` method and added synchronization for ` deleter ` in ` DocumentsWriterPerThread ` to improve
added methods to retrieve and set additional client properties for multiple choice options , validation constraints , and constraints in UiBinding . java to enhance functionality for
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for consistency across multiple classes to improve code readability and
bugfix : only update the stored copy of the whole tree for a full save
refactor Affix class to use a more generic Pattern object instead of a String for the condition to improve flexibility in handling patterns by allowing
replaced raw type declarations with diamond operator in KrakenAdaptersTest . java to improve code readability and maintainability
added import for CharTermAttribute and retrieved its attribute from tokenStream in DefaultIndexingChain . java to streamline the code by eliminating
refactor NBJavacTrees class to improve code organization to enhance maintainability and readability of the codebase
removed unsupported data encoding check from VectorizedPrimitiveColumnReader to streamline code by eliminating unnecessary encoding validation
added import statement for slf4j and modified log message formatting in HttpSolrCall . java to enhance code clarity and ensure proper logging
added a call to destroy metadata service proxy in ServiceInstancesChangedListener to ensure proper cleanup of metadata service proxy resources
fix : defaultentityqueryrepository . max _ level _ default to 10
updated error message handling in HubChangeExecListener to include a check for the presence of a changelog to improve clarity of error messages when the
improve error message when try harder fails
replaced ` int ` with ` ProcessExecutor . Result ` in ` CxxPreprocessAndCompileStep ` and ` BuildReportIntegrationTest
refactor event handling logic in ObjectStore . java to simplify event counting logic to improve code readability and maintainability by reducing redundancy
simplified the validation logic in ValidatedLocalValidatorFactoryBean . java to improve code readability and maintainability
fix a concurrent modification issue in the world provider
removed redundant type checks for destType and destStamp in IntrinsifyArrayCopyPhase . java to streamline code for better readability and
remove unused import and set logging level to ALL in TestCoyoteAdapter . java to streamline code by eliminating unnecessary logging
replaced the ` WantedAnywhereAfterFollowingInteraction ` class with a more descriptive stack trace format and removed the ` W
added null checks for ownerAddress and keyAddress in AccountPermissionUpdateActuator , and PermissionAddKeyActuator classes to ensure contract integrity by
( chore ) camel - jbang : remove commandcomparator from scriptlauncher
fix : add ` ` v2bet ' ' and ` ` v2bet ' ' to the list of available service ( #
updated metadata property settings in BaseSingleTreeBuilder . java to improve clarity and consistency to enhance code readability and maintainability by standardizing property
updated the instantiation of AsmLoader to use the interface class loader instead of a hardcoded class name to ensure compatibility with the correct class loader
pdfbox - 4071 : avoid npe if rlineto do n ' t exist
updated the namespace formatting in Java2TypeScriptTranslator to conditionally include " declare " based on the presence of a definition scope to ensure correct
replaced the EmptyServerHandler with an AbstractHandler implementation in HttpClientTest . java to ensure that the server requests are handled correctly during the test
simplified the addition of listeners in the input manager to improve readability and maintainability of the code
added a null check for the root path in AbstractSqmPath . java to ensure the correct root path is used when the LHS is
moved multiple test classes from ` com . owncloud . android . oc _ framework _ test _ project _ test ` to ` com .
refactor BufferedImage creation and filter logic in AwtCanvas . java for better handling of byte - indexed images to improve code clarity and ensure
[ gr - 26161 ] make building libgraal configurable in the gate .
[ hotfix ] [ test ] remove dependency on dataflowportabilityapiunsupport in pardofnertest
replaced ` remove ( ) ` with ` poll ( ) ` in ` MockPhishingProtectionServiceV1Beta1Impl `
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for serialization compatibility
refactor CallStack class to improve code readability to enhance maintainability and facilitate future development
log a warning if the max size configuration for a map do not allow any data in the map
updated return statements to use " LST " instead of " AST " across multiple files to clarify the context of the LST element
threadedascousticscorer : fix indexoutofboundsexception
replace AssertionError with returning null in NetHooks . java to simplify error handling by returning null instead of throwing an exception
updated method calls from ` getServerAddress ( ) ` to ` window ( ) . title ( ) ` in ` ApplicationControllerFluentLenium
added default ` makeString ` methods for ` ParallelIterable ` , ` RichIterable ` , and ` RichIterable ` classes to provide
replaced the direct reference to Ordered . HIGHEST _ PRECEDENCE with a static final constant DEFAULT _ ORDER in OidcServices
added a new predicate ` weakAssociationRule ` to the ` WeakAssociationsAnalyzer ` constructor and updated related tests to utilize it to enhance the
refactor Deflater class implementation to improve performance and maintainability of the compression process
added a try - catch block to handle exceptions in Font . java to ensure proper resource management and prevent potential resource leaks
added a null and empty check for content in VersionTypeBinding . java to ensure that a valid version is returned when no content is provided
updated the handling of the list of places to improve clarity and consistency in variable naming to enhance code readability and ensure correct data is passed in the asynchronous task callback
fix mail converter to be case - insensitive
fix pkcs # 1 format for pkcs # 1 key
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter and adjusted related logic for folder name handling to improve flexibility
replaced specific Hibernate annotations with a wildcard import and added JPA access logging in InheritanceCacheTest . java to improve code readability
updated import statements in ConnectOAuth2RequestFactory . java and added user approval request handling in TofuUserApprovalHandler . java to ensure
fix name convention not apply to tag value ( # 645 )
make quickfix test more resilient to miss resolution
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection to ensure correct handling of cookies in the application
added a static method ` classMetadataUnsupported ( ) ` to the ` Platform ` class and updated its usage in the ` Subject ` and ` Platform
added preferences for clearing all actions in OverviewActionsView to enhance user experience by allowing users to clear all tasks based on user preferences
updated ` desiredRepoVersion ` to be ` final ` and adjusted its timeout in ` ClusterStackVersionResourceProvider ` and ` HostStackVersion
deleted the MemoryLeakTest . java file to remove obsolete test code to streamline the codebase
updated the return statement in ServletTester to use the local host ' s host address instead of a hardcoded IP address to enhance flexibility
added a condition to check if MVDWAPI is enabled before proceeding with the " MVdWPlaceholderAPI " plugin to ensure that
add cluster size assertion to abstractpartitionassignmentcorrectnesstest . testclustersize ( )
added a singleton implementation for FFIProvider and implemented JNA support in the FFIProvider class to enhance flexibility and support for JNA
added a new test method ` testHierarchicalWFileList ` to ` BatchProcessTest . java ` to validate hierarchical file list functionality to ensure
added null checks and null checks in MongoTemplate . java , and implemented new test cases in MongoTemplateTests . java to ensure robustness and
updated Position initialization to use NODE _ LIST instead of 0 for directInputCount and directSuccessorCount to ensure correct positioning based on direct
added a new field ` accTradeValue ` to the ` BithumbTicker ` class and updated its usage in ` BithumbMark
updated logging statements to use placeholder syntax for consistency to improve code readability and maintainability by using parameterized logging
replaced hardcoded parallel threads with a constant MAX _ PARALLEL _ TASKS in OverseerTaskProcessor . java to improve
replace ArrayList with CopyOnWriteArrayList for header and data readers in FixedByteMVMutableForwardIndex and FixedByteSVMutableForwardIndex
refactor multiple dictionary implementation classes to improve code organization to enhance maintainability and readability of the codebase
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions during processing
( chore ) camel - mediastest : fix the unit test failure of camelsv
updated conditional check from ` = = ` to ` > ` in ` DelegationService . java ` to ensure correct comparison of ` beginCycle
updated random value generator from 6 to 10 in JdbcExpiringCodeStore . java and modified test assertions in CodeStoreEndpointsTests . java to
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure proper matching of unique constraints in the filter
updated character encoding handling in MediaDetailFragment . java and improved language code extraction to enhance code readability and maintainability by reducing red
added catch blocks for ArrayIndexOutOfBoundsException and ClassCastException in FindBugs2 . java to improve error handling for array and class casting issues
add ` withreferencefilter ` and ` withfilter ` methods to ` ListImagesCmd ` and implement them in ` ListImagesCmdImpl `
camel - 14284 : remove unused bridgeerrorhandler property from camel - jms
added checks for " # ifndef " , " # endif " , and " # endif " in OpExclusionUtils . java to
added two return statements in DatabaseCommand . java to ensure consistent behavior by returning false
updated Politician instances in HonestPoliticianExample . java to use descriptive names to improve code readability and
replaced null and length check with StringUtils . isNotBlank in BeanShellInterpreter . java to improve code readability and leverage Apache Commons Lang
camel - 14263 : camel - restlet - fix restlet component to support port = 0
removed unused imports and added a case for WALL _ SIGN in SchematicFormat . java to streamline code and improve readability by
added a system property to set the maximum query length to 100MB in QTestUtil . java and modified session state handling in SessionState .
changed access modifiers of several fields and methods in WebServer and WebServer classes to enhance encapsulation and ensure proper server configuration handling
updated method names from " writeHdfs " and " writeKafka " to " kafkaSink " across multiple files to improve clarity and
updated the logic to check if the application name equals " spark . app . name " and modified the configuration handling in HiveSparkClientFactory
corrected the spelling of " white " to " included " in ManagedClassFactory . java to improve code readability and maintain consistency in
simonstewart : add ` ` [ maximise window ] [ windowhandle / maximize ' ' support to the selenium server
refactor methods in LocalCellProviderFactory and AbstractEmbeddedCellBuckOutInfo to use getMainCellRoot and getCellBuckPaths instead of
added an assertion to check for the presence of " entity expansions " in the error message to ensure that the exception message is not null
updated offset and length assignments in TrueTypeFont . java to mask values with 0x7FFFFFFF to ensure that table offsets and lengths are
added an assertion to verify that the form ' s customization is not null to ensure that the form ' s customization functionality is correctly validated
refactor line buffer initialization and coordinate checking in LineChartRenderer . java to improve readability and maintainability of the code
refactor flavor validation logic in AndroidBinaryDescription . java and update corresponding tests in AndroidBinaryFlavorsIntegrationTest . java to improve code
updated index variable from ' offset ' to ' i ' in LwjglGL11 . java to correct the variable name from ' offset
added two new Java files , Property . java and PropertySuper . java , along with a test class TestClassResolutionFail . java for error
do n ' t terminate the shutdown hook if the group property be set to false .
updated the class name from FilterChainProxy to FilterChjainProxy and removed the URL parameter from the VirtualFilterChain constructor to simplify the
[ hotfix ] [ table - common ] use arrays . sort ( ) instead of collections . sort ( )
added loading checks for schema loading in MetaDataBasedSQLCompletionProvider and modified MDTable initialization in QueryTypeAnalyser to ensure proper handling of
initialize baseType to null instead of creating a new MutableColumnDataType with an empty string to ensure proper handling of unknown data types during data retrieval
refactor multiple Java classes to use the ` @ link ` annotation for methods and elements to improve code readability and maintainability by standardizing
replaced instances of ` ObjectEqualEvaluator . getInstance ( ) ` , ` ObjectNotEqualEvaluator ` , and ` BooleanNotEqualEvaluator `
updated references from " osx _ x86 - 64 " to " osx _ x86 _ 64 " across multiple files to ensure consistency
added functionality to enable and disable sound effects in AllAppsView . java to enhance user experience by allowing sound effects to be played
changed the exception type in the main method from Exception to IOException to improve error handling by providing more specific exception types
added leftAxis . setGranularityEnabled ( true ) to BarChartActivitySinus . java to enable the granularity of the left axis in
refactor version comparison logic into a separate method for clarity to improve code readability and maintainability by reducing duplication
updated file path handling in ContextHandlerGetResourceTest to use MavenTestingUtils and added OS - specific checks to improve test reliability and ensure
added close ( ) method to multiple connection classes to ensure proper resource management and prevent potential memory leaks
refactor SocketRemoteTest , MockAppender , SocketServerFunctionalTest , and SocketServerFunctionalTest to use a BlockingQueue for event
[ beam - 4142 ] add a check to ensure that the resource be a directory ( # 4142 )
removed unused static imports from IsometricStaggeredTiledMapRenderer . java to streamline code and improve readability by elimin
removed duplicate call to handleService . unbindHandle ( context , item ) in ItemServiceImpl . java to streamline the code by elimin
refactor Config and Attribute classes to improve code organization to enhance maintainability and readability of the codebase
simplified conditional checks in OtherActivityTouchConsumer . java to improve code readability and maintainability
updated the handling of navigation buttons in NavbarButtonsViewController to utilize new configuration settings for dark mode to improve UI responsiveness
make sure we throw an exception if we ca n ' t find the language
updated variable names for bootstrapMethodIndex , nameAndTypeIndex , and memberIndex in ClassWriter . java to improve code clarity and ensure correct
added BlockFormattingContext parameter to findBox , findElementBox , and findElementBox methods in BasicPanel . java to enhance flexibility in
added a nullable ` launchedProcess ` field and implemented ` getStdErrorOutput ( ) ` method to retrieve standard error output to improve error handling
added null checks and improved list replacement logic in CheckedListReplaceAll . java to enhance robustness by ensuring the operator is not null before
added a new test method ` testFill ` to ` SslConnectionTest ` and modified the callback handling in ` SslConnectionTest . java `
added listener registration and management for device configuration changes in DeviceFlag . java and made defaultValue field final in FeatureFlags . java to enhance functionality and
added an import statement for JUnit ' s Ignore annotation and annotated the GatewayRSocketIntegrationTests class to mark the test as ignored due to
removed the import of MalformedURIException from StandardRequestHandler . java to eliminate unnecessary dependencies and improve code clarity
update instructorfeedbackeditpage to use focus ( ) instead of focus ( )
removed unnecessary synchronization around the subscription logic in KrakenStreamingTradeService . java to streamline the code by eliminating unnecessary synchronization
changed System . err . println to System . out . println for ignoring Class - Path entries in ChangeableUrls . java to ensure that the
added a new boolean variable ` randomAccessRows ` and modified constructors in ` SparseRowMatrix ` to use it to improve flexibility in handling
cloudstack - 6892 : do n ' t delete volume when the volume pool id be null
updated the input stream initialization to use the Hive configuration for the HIVE _ PLAN job to ensure correct path resolution based on the Hive configuration
[ beam - 10663 ] fix import of guava in udftestprovider
refactor memory call graph handling by introducing a new method ` resetInternalState ( ) ` to improve code readability and maintainability by
do n ' t try to send chat message if there be no chat operation set
bugfix : save file should not be write to a file if it can not be write .
added a new FolderSyncActivity to handle folder synchronization in DrawerActivity and implemented related functionality in FolderSyncActivity to enhance user experience by allowing
[ hotfix ] [ test ] use try - with - resources in sequentialchannelstatereaderimpltest
fix spanishtreenormalizer to handle comma and comma correctly .
replaced the method of appending point values from ` reader . pointValue ( ) ` to ` heapPointWriter . getPackedValueSlice (
added LocaleRandomizer and its tests for generating random locale values to enhance randomness of locale - related randomness in the application
added mime detection for font types in TestMimeTypes . java to ensure correct detection of various font types in the application
add 10.0 to the list of upgrade version in the installer and autoupgrade
updated the formatting of the ` run0 ( ) ` method in ` TCPTransport . java ` to improve code readability and maintain consistency in
added a default read timeout value to the socketWrapper read method in Http2AsyncParser . java to ensure the socketWrapper ' s read timeout
increased the default sleep duration from 120ms to 600ms in TimelineMetricConfiguration . java to improve the responsiveness of the
corrected a typo in the primary key constraint error message to improve clarity and consistency in error reporting
added date parsing support for Joda - Time in ThirdEyeJiraClient . java to enhance date handling capabilities for Joda -
refactor ` generatePriority ` method to accept a ` ByteBuffer ` parameter and update its usage throughout the ` HeadersGenerator ` and ` Priority
added a constant for maximum scalar replacement code size and updated the scalarReplace logic to include a check for the entire class length to ensure that the
added DATE _ TAKEN to the projectionTest array and adjusted folderSortOrder to include DATE _ TAKEN to ensure accurate sorting order for
updated image drawing parameters in TexturePacker2 . java to correct positioning to ensure correct image dimensions are used for image rendering
added ServletContextHandler to JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to improve filter management and ensure proper context handling in the servlet
added shutdown calls for validateSignService , TransactionsMsgHandler , and trxHandlePool , and modified Timer initialization in NodePersistService to ensure
added a ` RawJsonRequestBodyAnnotationProcessor ` class and integrated it into the ` echo ` and ` echo ` classes to enable processing of raw
added a new method ` newTarget ` to create a ` Target ` object using ` TargetExtension ` to facilitate the creation of
replaced direct instantiation of ListBeanContainer with a new ArrayList in BeanContainer . java and added a new test class BeanContainerTests . java
updated the metric assertion from " blockCountHitPercent " to " blockCacheCountHitPercent " in TestMetricsRegionServer . java to reflect
camel - 1889 : fixed potential resource leak in cachedoutputstream . close ( )
add teltonika device id to position ( fix # 348 )
updated the method of reading the first line in HybridProjectBuildFileParser to use Files . asCharSource instead of Files . readFirst
added a method to handle assign operations in ` Attr . java ` and created a new test class ` FailOver15 . java ` with a
added a boolean flag ` enableAccountHandling ` to control account handling in ` FirstRunActivity ` and ` BaseActivity ` to control account handling
replaced specific imports with a wildcard import and refactored the logic for finding the maximum polygon to improve code readability and maintainability by
added a path parameter to the DrillViewTable constructor and updated its usage in WorkspaceSchemaFactory to enhance flexibility in view handling by allowing
added default configurations for PooledByteBufAllocator in the constructor to enhance flexibility and control over network memory allocation settings
changed the type of ' array ' from double to short in ObjectInputStream . java and added a new class CloneArray . java with serialization tests to
added a configuration variable for LLAP IO thread pool size in HiveConf . java and updated executor initialization in LlapIoImpl . java to
added support for rerun initialization for debugging and SSL logging in Java versions 8 and 11 to enhance security configuration options for better debugging and SSL logging
updated bounds checking in LatLonGrid . java and added a new test for polygon growing in TestLatLonGrid . java to ensure correct
simonstewart : add ` ` invisibilityofelementwithtext ' ' and ` ` refreshed ' ' method to the expected
added a new parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and updated related calls to include the ` isInsertOverwrite `
added a test for the ` getOuterClass ` method in ` ReflectorTest ` to verify the behavior of the ` getOuterClass `
added a new configuration option " auto _ generate _ android _ facet _ sources " and updated its value retrieval in IjProjectBuckConfig
updated message formatting in HubChangeExecListener . java for clarity and consistency to improve readability and maintainability of error messages
added a ` properties ` field and its getter / setter methods to the ` Link ` class , and a corresponding test in ` QuickLinksConfiguration
removed @ EqualsAndHashCode annotations from InitialConfig and added a toString method in YamlConfigFileDTO to provide a clearer string representation of the D
updated generic type parameters from ` < > ` to ` < ReqT , RespT > ` in ` SimpleForwardingServerCallConfiguration . java
added CallerSensitiveAdapter annotation and modified forName and forNameHelper methods to include caller class name and caller class name to enhance security by restricting class
updated imports and method calls in RequestItemRepositoryIT . java to use isEmptyOrNullString and isEmptyOrNullString instead of isEmptyOrNullString to enhance
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to utilize ` ThreadPoolExecutorEx ` for
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other classes
replaced ` HumanTime ` with ` Calendar ` in ` TimeStepdefs . java ` and updated imports in ` TimeStepdefs .
fix spark block not be able to render on the server side . close # 1193
replaced ` ExchangeSpecification ` with ` getUri ( ) ` in proxy creation methods across multiple services to streamline proxy creation and improve URL handling
updated print statements in RecordGenerator . java for clarity and consistency to streamline output for better readability and maintainability
camel - 14284 : camel - kafka - enable auto - commit when auto - commit be enable
removed the release of the lock service in Liquibase and updated output statement handling in LoggingExecutor and StandardLockService to ensure proper lock
updated @ SuppressWarnings annotations in AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests to include " rawtypes " , " deprecation " , and "
replaced ` synchronized ( this ) ` with ` synchronized ( this ) ` in multiple classes to improve thread safety by ensuring thread safety when accessing
polish ` ` make spring - boot - auto - configuration - maven - plugin optional ' '
updated the method call from ` baseSymbol ` to ` counterSymbol ` in ` getVirtExMarketDataService . java ` to ensure
camel - 14284 : fix the build error of camel - core
updated the way the " testId " field is stored in HoneycombJdbcInterceptor to use a system property instead of a random UUID
added synchronization to date and number formatting methods in DefaultJobParametersConverter . java to ensure thread safety during date and number formatting operations
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
change height scale from 256 to heightScale in FractalHeightMapGrid . java to ensure proper scaling of the height map based on the
updated assertion from ` equals ` to ` assertNotSame ` in ` SecurityConfig ` and removed unnecessary type check in ` SecurityConfigTests `
updated the default value of ` dump - partition - id ` from ` true ` to ` false ` in ` StdoutSink . java ` to
added UTXO - related imports and setup for TronTXOutput and TronTXOutputs in UTXOSetTest . java to
[ java ] fix false positive for unused local variable .
pdfbox - 2576 : add null check before add a cosobjectable to the array , a suggest by valerybokov
added a test to verify that new job parameters override the previous restart parameters in JsrJobOperator to ensure that job parameters override the previous restart
added a protected boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ` to ` Database
removed redundant declaration of the principal variable in JaasAuthenticationHandler . java to streamline code by eliminating redundancy
replaced direct core closing with a shutdown executor using a fixed thread pool to improve resource management and ensure proper shutdown of the MDC logging context
added null check and visibility logic for mActionsView in RecentsView . java to ensure mActionsView is only visible when fullscreen
refactor parameter handling in RunIdIncrementer to use a conditional expression to improve code readability and maintainability by reducing unnecessary null checks
refactor BasicEntity and TestUtil classes to improve code organization to enhance maintainability and readability of the codebase
added multiple assertions for matched devices in SchemaRegionBasicTest . java to verify the size of the matched devices plan in the SchemaRegionTest
added error type logging for metric event invocation in MetricsEventBus . java to improve error handling and logging during event execution
added a conditional check for ` max ` before calculating ` mSumChange ` and created a new ` EigenvectorCentralityBuilder
updated registry initialization to use a random port instead of a hardcoded value and improved string formatting to enhance code readability and maintainability by
updated GeometryGenerator to use database session and modified vertex colors to use byte arrays instead of float arrays to improve data handling and ensure compatibility with the
change the Amplifier from 2 to 0 in BlockEntityBeacon . java to reset the Amplifier to zero to ensure that the
refactor TubeCalc class to improve code readability to enhance maintainability and facilitate future updates
change the default value of the ` enabled ` variable from ` true ` to ` false ` in ` HttpClientConfiguration . java ` and update the
add sanity check to validate group
added a new timeout parameter ` 8163161 ` to the ` @ Selection in ` JList ` to improve test stability and ensure proper
added daemon thread setup to the ScheduledExecutorService in StatisticsReporterComponentImpl . java to ensure that the main method returns a daemon thread for better thread
fix a bug in the lexica botania ' s lexica botania ' s lexica botania ' s lexica
added a call to ` ReflectionCheckLinker . checkReflectionAccess ( type ) ` in ` JavaAdapterFactory . java ` to enhance security
camel - 16451 : camel - jms - http : / / issues . apache . org / jira / browse / amq -
updated initIOContext method to include a RecordReader parameter across multiple classes to enhance the initialization process by allowing the RecordReader to be used for
deleted ClassLoaderHolder . java and LoaderManager . java files , and refactored VerticleManager . java to streamline the codebase by elim
added a configurationChanged method to FileStore and updated related logic in JavaLanguageServer , JavaLanguageServer , and ScanClassPath to enhance file handling
be 393afd34 : dogfood crash loop : fix crash loop by try and catch
updated index creation methods to remove the " src / test / org / apache / lucene / index / test / org / apache / l
[ hotfix ] [ akka ] make akkarpcserviceutils # createandstart a bifunction
added a retry condition to set the maximum number of map attempts in TestExportSnapshot . java to ensure that map reduce attempts are set correctly during
pdfbox - 4071 : remove null check , a suggest by valerybokov
added a new test class SslConnectionTest for verifying SSL connection behavior to ensure proper handling of SSL handshake issues in the Jetty client
added validation for address family type in InetAddress . java and NetworkInterface . java to ensure that IPv4 and IPv6 address types are valid to improve
added a test method to serialize a list of date in a collection in DefaultTypeAdaptersTest . java to ensure that date serialization functionality works correctly
refactor Message class to improve code readability to enhance maintainability and ease of understanding
added debug logging and modified the logic for determining the first update key in the PutDatabaseRecord class to improve debugging and ensure correct handling of the
updated loop condition in TableOutput . java to correct the width calculation to ensure proper handling of the maximum width in the loop
pdfbox - 4071 : remove unneeded null check , a suggest by valerybokov
added a priority variable for the " VA _ FORMAT _ STRING _ EXTRA _ ARGUMENTS _ PASSED " bug in FormatStringChecker
[ java ] localvariablecouldbefinal : add property to ignore non - final loop variable in a for - each statement .
added PDF versioning and full compression settings in PDFExporter and updated test properties in PDFExporterTest to enhance PDF export functionality and improve test coverage
added a new test class ` LdapUserDetailsMapperTests ` to validate role attribute mapping functionality to ensure correct behavior of the ` LdapUserDetails
added a configurable read timeout configuration to the LdapConfiguration class and updated the LdapContextFactory to use it to improve flexibility in configuring LDAP connection
refactor multiple test classes to improve code organization to enhance maintainability and readability of the codebase
refactor Pixmap , ManifoldPoint , TextureRegion , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to improve clarity and consistency in naming conventions
added a condition to check if the state handler is invalidated in the gesture state check to ensure that the gesture handler is only processed when the handler
updated distance calculations for folder creation and rotation arrays in Workspace . java to improve user interface responsiveness and performance during folder creation
updated imports and modified property checks in OciConfigSource . java to improve clarity and functionality to enhance code readability and maintainability by
refactor Testjsig class for improved readability to enhance maintainability and facilitate future development
fix mana stack not respect the size of the stack
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added a @ SuppressWarnings ( " serial " ) annotation to P11TlsPrfGenerator . java to suppress serialization warnings for the class
refactor tsFile validation logic to use a boolean variable for clarity to improve readability and maintainability of the code
added two new files , Switch21 . java and Switch19 . java , with methods for pattern matching and null handling in a switch statement to
updated error messages in ComparableSubjectTest . java to remove unnecessary ' method invocation conversion ' to improve clarity and maintainability of error reporting
added xmlStandalone flag to StreamHelper and created a corresponding test class TestStreamHelper to enable XML standalone functionality in XML processing operations
updated capacity validation and improved error messaging in Int2ObjectCache . java to ensure that the total capacity does not exceed the maximum array size
removed sorting of security filter chains in WebSecurityConfiguration and added a test for it in WebSecurityConfigurationTests to ensure that security filter chains are
removed the TimeInForce . GTC from the order type parameter in BinanceTradeService . java to simplify the order handling by elimin
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and update its delegate initialization to improve flexibility and maintainability of the random value
updated the KEY _ SEP character from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure
camel - 14284 : camel - jms - return documentation and json schema for camel - activemq component
added error handling for NoSuchFieldError in SourceUtils and created a new test class TestGetBound to improve robustness of bound retrieval and ensure
refactor parquet type handling into a separate method ` getLeafFilterBuilderByParquetType ` to improve code readability and maintainability
added a condition to check if the original artifact name starts with the prefix before processing to ensure that the original artifact name does not start with the
added a loop to read certificates by serial number and issuer information in HttpsSegmentFetcher . java to ensure that only valid certificates are processed by
modified the return type of getDefaultBooleanValue from boolean to String and added a new DnsFallback class for testing to improve handling of null values and
ww - 4357 add more information to the error message when fail to write a tag
changed the ` success ` field to ` url ` and updated related JSON properties in ` DepositAddress . java ` to improve clarity
refactor the drop method to use a lambda expression instead of an anonymous class to improve code readability and ensure proper resource management during the drop
removed " address " and " phone " scopes from the CommonOAuth2Provider and CommonOAuth2ProviderTests to simplify scope management by removing unnecessary
refactor the submission process in ManagedSelector to use a new Start class instead of a lambda expression to improve code readability and maintainability by
added constants for BIG _ DECIMAL _ 182 _ 04 and updated HU and saturation calculations in WLedHandler to improve code clarity and
replaced the ` isValidCaller ` method with a new ` VALID _ CALLERS ` set in ` VectorizationProvider . java ` to improve
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to facilitate the handling of JSRInst
add a transaction manager to the subscription activating subscriber so that it can be run in a transaction .
refactor SQL update statement handling in DBMSProcessor . java to use StringBuilder for improved readability and efficiency to enhance code clarity and
removed elevation variable and conditional logic for setting elevation in ContactItemInflater to streamline elevation handling for devices running Lollipop and above
rename variable ` typeInformation ` to ` identifier ` for clarity to improve code readability by using a more descriptive variable name
[ hotfix ] [ runtime ] fix permission issue in sandboxfilemanager
added support for the ` [ ] ` operator in Groovy binary handling to enhance support for the ` [ ] ` operator in the Groovy parser and
updated warning message to include the exception class name instead of the exception message to improve clarity of error reporting for better debugging
updated byte handling and variable names in RecordInputStream , UnicodeString , and HSSFWorkbook classes to improve clarity and consistency to enhance code
added a test for downloading a file with Norway characters in the name to ensure correct handling of characters in file names
replaced ` RuntimeException ` with ` CancellationException ` and implemented cancellation checks in ` AsyncResource ` and ` FingerprintScannerSample ` classes to
added a null check for the statistics before processing the cache to avoid potential NullPointerExceptions during execution
refactor MongoTemplateTests to improve code readability and add a test for removing an object from an explicit collection to enhance test coverage for the
update copyright year from 2015 to 2022 in multiple Java files to reflect the correct copyright year for the processing Foundation
( chore ) camel - coder : use % n instead of \ n
added a new boolean variable ` mIsClearAllButtonFullyRevealed ` and updated scroll logic in ` RecentsView ` and
added COMMON _ HMS _ PROPERTIES map and refactored parameter handling in HiveIcebergMetaHook and HiveIcebergSer
added a new method ` isAddressInUse ` to check if the server address is already in use to improve error handling by distinguishing between binding
added a command line argument for the test class path in TestNestmateAttr . java to enable dynamic configuration of the test class path
updated the schema text detail type from verbose to verbose _ schema in Grep . java to improve logging clarity by using a more descriptive
fix checkstyle issue in util / jcmd / jcmd / jcmd / config / config / config / config / config / config -
# 113 - enh : add support for nested transaction with savepoint
replaced integer fetchSize with ThreadLocal for better performance to improve performance by reducing the number of fetch requests
[ java ] do n ' t use backoff idle strategy in embeddedpingpong .
refactor HttpClientIntroductionAdvice to use a new handleBlockingCall method for handling blocking calls to improve code readability and maintain
added logic to retrieve and set the HDP _ VERSION configuration in SliderAppsViewControllerImpl . java to ensure the application uses the correct
added a ` loaderClass ` field and modified the ` close ` method in ` JavacProcessingEnvironment . java ` to store the loader
added DeepCloner class and modified methodBlock in ParameterizedRobolectricTestRunner and RobolectricTestRunner to utilize it
added binding for the JETTY _ SHOW _ STACKTRACE property in ResourceBase . java to ensure the stack trace is displayed when the Web
added a check for OBJECT type in NativeObject . java to return null if the object is of type JSType . OBJECT to ensure proper handling of
replaced multiple instances of ` sun . jvm . hotspot . types . OopField ` with ` sun . jvm . hotspot .
updated JwkKeyListView to use PublicKey instead of RSAPublicKey and added Base64 encoding for mod , exp , and ECPublicKey
[ gr - 20684 ] fix native image heap usage when use - only - writable - boot - image .
updated MBeanServerMXBeanUnsupportedTest . java file to improve test coverage for MBeanServerMXBean functionality
removed import of OrderClassLoaders from MavenPluginCollector . java to eliminate unused dependencies and improve code clarity
replaced the Validator ( ) method with a new getOwnerAddress ( ) method across multiple actuator classes to provide functionality for retrieving the owner address
http : / / issues . apache . org / jira / browse / amq - 4892 - add main class to demon
replaced calls to ` sendCommand ( ) ` with ` byteArrayMin [ ] ` and ` byteArrayMax [ ] ` for minimum and maximum
added checks for empty and non - empty indices in the ProtobufAnnotationSerializer and CoreNLPProtos classes to ensure proper handling of empty edge
[ java ] remove correlationid from asynccommandidset only when necessary .
added duplicate saveConflict calls in FileDataStorageManager , FileDownloader , and FileUploader classes to ensure conflicts are only saved when the file
updated type parameters to use generics in ExecutionContext and AbstractTransactionalResourceItemWriter classes to improve type safety and eliminate unchecked warnings
replaced usage of ` StrUtils ` with ` Lucene ' s ` splitFileNames ` method across multiple filter factory classes to standardize
added conditional checks for Oracle and MySQL driver properties in DatabaseFactory . java to ensure proper handling of remarks reporting and information schema for Oracle databases
updated the ` MethodInterceptor ` initialization to include a ` handler ` parameter and added a serialVersionUID to ensure that the ` mockedMethods ` field
replaced ` newOlderThan ` and ` newOlderThan ` with ` currentTime ` and introduced ` minTriggerTime
replaced instances of ` new EnvironmentInstance ( ) ` with ` wrapClassLoader ( ) ` in ` ExecutionContext ` and ` LocalExecutor `
added onBufferChanged method to TerminalView and adjusted buffer height calculations in TerminalTextViewOverlay to ensure proper handling of buffer changes in the terminal
updated processConfigFile method formatting and added pid handling in ConfigDispatcher . java to improve code readability and ensure proper handling of file names
refactor freezing and diszing logic in OperationActions and OperationRegistry classes to improve code clarity and ensure proper handling of frozen
added insecure configuration options to TlsConfig and updated TlsUtils to utilize this feature to enhance SSL configuration flexibility by allowing users to
refactor code to simplify the path handling in JavadocTool . java and add a new class T7091528 . java to improve code
updated comparison from ` nodeColumns ` to ` edgeColumns ` and introduced a new ` EdgeColumnsGDF ` class to ensure case - insensitive
added cascade option to the OneToOne association in DefaultUserInfo . java to ensure that the association is only added when necessary
replaced the ` getMessageId ( ) . hashCode ( ) ` and ` getMessageId ( ) . equals ( ) ` methods with ` Arrays
updated the response body encoding in AsyncProvidersBasicTest from " ISO - 8859 - 1 " to " ISO - 8859 - 1 "
removed the ` isKeySerializerTypeVariableSized ` method from ` RocksDBSerializedCompositeKeyBuilder ` to simplify the code by elim
added a method to retrieve the static permissions for a ProtectionDomain and modified the logic for creating a ProtectionDomain instance based on its value
fix a crash when the recipe be n ' t in the ingredient list . close # 3889
refactor parsing logic in Parser . java to streamline index assignment to improve readability and maintainability of the code
added a method to show a connection error popup in UploadMediaDetailFragment and updated error handling in UploadMediaPresenter to improve user experience by providing
added a new test file ` Issue596 . java ` and modified ` HttpHandlerImpl . java ` to include a check for ` contentType
updated bitwise operation to use ' 1L ' instead of ' 1 ' to ensure correct handling of long values in bit manipulation logic
refactor ImportLayoutStyle class to improve code readability to enhance maintainability and facilitate future updates
replaced ` GitBashConfigValue ` with ` useStdin ` and updated related logic in ` ConsoleUIService . java ` to
refactor ShadowAccountManagerTest to use TestAccountManagerCallback and simplify assertions to enhance readability and maintainability of the test code
replace the declaration of enclosingType with a direct call to wrapped . getEnclosingType ( ) to simplify the code and improve readability by elim
corrected formatting of method names in Pairs . java and InPairsExpression . java to improve code readability and maintain consistency
removed the timeout parameter from the set method call in PutAllCallable . java to simplify the setting process by directly passing the value directly
[ rocketmq ] fix nullpointerexception when consumer be empty or not
[ java ] generate source identity when create the driver driver .
added a new class TopTabAction to display a " lalal " JLabel in the desktop branding system to provide a user interface for
camel - 16458 : dynamic router should use reactiveexecutor so it can be use in the same thread .
updated AggregateItemReaderTests to use JUnit 4 annotations and added JUnit 4 annotations to improve test structure and ensure compatibility with JUnit 4
added generic type parameter ` < T > ` to the ` Procedure ` instantiation in ` AbstractObjectValueTypeMap . java ` to improve type safety
added functionality to retrieve and display Wikidata edits in AchievementsActivity and OkHttpJsonApiClient to enhance user experience by
added validation to ensure length is less than Short . MAX _ VALUE to prevent illegal argument exceptions during sorting operations
do n ' t report negative value for constant long . min _ value and long . max _ value
refactor multiple dataset classes to improve code organization to enhance maintainability and readability of the codebase
enhanced error message in ` InvalidTopologyTemplateException ` to include the value of ` credential . type ` to improve debugging by providing more context
updated random number generation logic in TestVectorUtil . java to ensure proper range of values to improve randomness and prevent potential index out - of
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and simplified the time comparison logic to improve precision
added SSL configuration to TestUtil and updated tests to use this property to enhance security by allowing SSL configuration based on system properties
danielwagnerhall : set safebrowsing to true for non - safbrowsing chrome
added null checks before setting flight configuration in BaseMotorMount . java and RecoveryDevice . java to ensure that the flight configuration is only cloned
added a condition to check if transcoding is disabled in DLNAResource . java to ensure proper handling of transcoding behavior based on configuration
updated ` DataTable . java ` to handle empty ` gherkinRows ` and ` raw ` cases in ` DataTable . java ` , and
added a static variable ` CustomIgnoreTag ` and implemented a condition to remove it from the iterator if it starts with ` CustomIgnoreTag `
camel - 16462 : optimizelockingexception to not throw runtimeexception .
fix injection of @ configurationproperties ( ` ` parent ' ' ) method with @ configurationproperties ( ` ` parent ' ' )
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and added toolbar padding adjustments to improve layout responsiveness and ensure
deleted the ClusterNodeInfo . java file to remove unused code to streamline the codebase
updated return statement formatting in ShieldedTransferActuator . java to improve code readability and maintain consistency
added debug output for standard and legacy ciphersuite chosen in ServerHandshaker . java to provide visibility into the chosen ciphersuite for debugging purposes
updated ` ChooseRichDocumentsTemplateDialogFragment ` and ` ChooseTemplateDialogFragment ` to conditionally set the template list based on the size of
added a map to track duplicate node labels and updated logging behavior to improve error handling and provide clearer feedback when a node does not exist
added a new file R2303044ListSelection . java that tests the selection of a list item to ensure that the list item is
[ java ] check if a correlation id be already in use before create a publication .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to validate the behavior of compound properties in StepScopePlaceholderIntegrationTests to ensure that
updated row count calculation in StatsRulesProcFactory . java to improve clarity and efficiency of row count computation
added path and query parameter handling in SpringBootDocBuildTemplate . java and improved stream processing in DocUtil . java to enhance API parameter
clean up some code and remove unused variable .
updated ` DistBuildSlaveExecutor ` to use ` CachingBuildEngineDelegate ` instead of ` DistBuildCachingEngineDelegate ` and added conditional
updated RuntimeException to include JSON parsing error messages to improve error reporting for JSON parsing issues
added a conditional debug log statement in WidgetsModel . java to conditionally log the filtered log message to improve performance by reducing log output
refactor Console and Scanner classes to improve code organization to enhance maintainability and readability of the codebase
updated the calculation of numTerms and numOverlap in SimilarityBase . java and added a new test for discountOverlaps in TestSimilarity
added reflection method checks for the " send " method in SimpleMailMessageItemWriterTests and MimeMessageMessageItemWriterTests to ensure compatibility with
added ' exit ' and ' quit ' methods with corresponding properties to Global . java and removed it from ScriptingFunctions . java to streamline
updated the initialization of ` LoanBrokerSharkDetectorDemo ` to use ` context . close ( ) ` instead of ` ac ` to
updated method names from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in naming conventions
[ vmware ] vmwarecontext . getservicecookie ( ) now return a cookie jar instead of string .
updated formatting of assertions in ResinAcegiAuthenticatorTests . java for consistency to improve code readability and maintainability
updated bigIntegerToBytes calls to include a length of 32 bytes to improve data handling by allowing larger byte values
corrected a typo in the system property key from " disabledMods " to " modStates " to ensure the correct property is used
refactor account selection handling by introducing a dedicated method ` showAccountChooserDialog ` to improve code readability and maintainability by encapsulating
updated IOException message to include host IP and port to improve error reporting for better debugging during connection issues
throw illegalstateexception if fail to parse empty result from validator smart contract
added null check for the root file before reading fields in TexturePackerFileProcessor . java to improve robustness by preventing null pointer exceptions
added a null check for the datasource and JNDI in the PooledConnection class to ensure proper handling of null data source and JNDI configurations
updated target MB and window sizes in TestRefprocSanity . java and added a sink object in TestRefprocSanity . java to
added null checks before writing to the current console in EditorConsole . java to avoid potential NullPointerExceptions during writing operations
[ hotfix ] [ kinesis ] set credential refresh delay to 100 second
replaced multiple instances of AlertDialog . Builder with a new method ` showInfoAlert ` to improve code readability and maintainability by central
updated method signatures in T4501661 . java to include a packing option to enhance functionality by allowing the test to run with the
updated Java version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 and modified imports in ModulesTest and TestBad
added a check for the presence of " org . opensourcebim " and " shared " dependencies before adding them to the dependencies list to
added a set to manage multiple ZipFileInputStream instances to ensure proper resource management and prevent potential memory leaks
rename ` DATAMATRIX ` to ` DATA _ MATRIX ` across multiple files to improve clarity and consistency in naming conventions
added methods to handle active and idle events in SequenceGeneratorSource . java to improve thread safety during event processing
corrected the spelling of " getCurrentyActiveConnections " to " getCurrentActiveConnections " in BlobServer . java and BlobServerGetTest
replaced multiple ` @ Override ` annotations with ` findFirst ( ) ` and ` getAnnotations ( Class < T > type ) ` methods in `
added support for additional architectures " ppc64 " and " ppc64le " in Bits . java and ByteArrayAccess . java
updated the error message in RoboMonitoringInstrumentation . java to include a link to the details for the activity resolution to enhance debugging by providing
updated waitWithDeadline parameters to use Long . MAX _ VALUE instead of COMMIT _ TIMEOUT _ MINUTES and ROLLBACK _ TIMEOUT _
replaced instances of ` Date ` with ` Instant ` for date formatting in ` DateUtilTest . java ` to improve code clarity and
refactor BytesRef class to improve code readability to enhance maintainability and ease of understanding
added a toast message when YouTube Player does not work on Lollipop yet to inform users that YouTube Player does not work on
added checks for unterminated dollar , string literal , identifier , and block comment in SQL parser to ensure proper error handling for invalid SQL syntax
added a null check for mVibrator in the conditional statement to prevent potential NullPointerExceptions when mVibrator is not present
updated table border and cellpadding settings in DotRenderer . java and modified color handling in DotRenderer . java to improve table rendering accuracy and enhance
added a new constant ENCODED _ CONF and a method to check for encoded Parers in HiveConf . java and updated SetProcessor .
pdfbox - 4892 : catch all stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class to improve code readability to enhance maintainability and facilitate future development
fix default uri implementation for wavefront config ( # 3903 )
removed the cache variable from TimeLineCursorAdapter and added methods for loading images in NetworkedCacheableImageView and TweetActivity to improve
removed the ' target ' parameter from the ` LauncherAnimUtils . ofFloat ` method in multiple classes to simplify the method signature and improve
updated controllers version handling in DependencyBank . java and BuildScriptHelper . java to ensure compatibility with the new controllers version in the build process
refactor LaunchedURLClassLoader to improve URL loading logic to enhance performance and maintainability of the code
added imports for ResultSet and DataAccessUtils , and modified JDBC query handling in DataSourceHealthIndicator . java to ensure correct column count is used for
add no - cache to layout tag so that it can be cache - control .
updated the ` warnMsg ` string formatting to use ` Locale . ENGLISH ` to ensure consistent string formatting across different locales
updated the constructor of SolrQueryParser to accept an Analyzer parameter to enhance flexibility in specifying the query analyzer
updated copyright year from 2014 - 2016 to 2017 and added licensing information in multiple Java files to ensure compliance with copyright standards and
removed an unnecessary semicolon in MainTest . java to improve code readability and maintainability
refactor TypeContributions class to improve code organization to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to return a default size when the source is VoidColumnVector
updated the method call from ` templateName ` to ` req . getName ( ) ` in ` StatementGenerator . java ` to ensure the correct variable
removed the isTypeMatch method and simplified the addConfiguration call to simplify the code and improve readability
[ java ] add timestamp to sessiondecorator . offer ( ) method .
updated method names from ` trustAllXForwardedRemoteAddressResolver ` and ` maxTrustedIndexXForwardedRemoteAddressResolver ` to ` trustAll
added a new annotation ` NoBootstrap ` and modified ` BootstrapInserter ` to check for annotations that end with ` NoBootstrap ` to
hbase - 25819 fix npe in tabledescriptorchecker when maxfilesize or flushsize be null
replace ` maxCommits ` with ` requestedCommits ` in ` BranchGraphServlet . java ` to improve clarity by using a more descriptive
added InvocationTargetException to method signatures and replaced invokeLater with invokeAndWait in bug6794831 . java to improve error handling and ensure thread
added a static final string ` BUILD _ ID ` and refactored the ` fillInOriginFromCache ` method to use it to improve code
removed unused imports of TxInputUtil and TxOutputUtil from TransactionCapsule . java to clean up the code and improve readability
removed duplicate call to markAsDone ( future , channel ) in HttpProtocol . java to streamline the code by eliminating redundancy
added a default TezConfiguration instance and a copyInto method call in TezConfigurationFactory . java to facilitate configuration management and
added a null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is null
removed redundant check for mIsVisible in CustomPlaybackOverlayFragment . java to simplify the conditional structure for better readability
added null check before stopping the most recent sound and implemented a forget method in OpenALSound to ensure safe resource management and prevent potential NullPointerExceptions
fix invalidatestate and otheroperation with discontinuity only once
added DecimalFormat instances for decimal values in NumberAxis . java to enhance precision in number formatting for better data representation
refactor TargetGraphAndBuildTargets creation to use a builder pattern to improve code readability and maintainability by reducing redundancy
removed the IndexFileNameFilter class and updated condition checks in IndexFileDeleter . java , and removed its usage in IndexWriter . java to
add option to disable texture stitching for ladders by default .
added a new constant ` DEFAULT _ COMPRESSION _ LEVEL ` and updated method signatures in multiple classes to include compression level as a parameter to enhance
added a test method to include static fields in a stub jar to ensure that static fields are included correctly in the stubbed class
added support for BYTES data type in MetricFieldSpec and related classes to enhance data handling capabilities for BYTES data types
updated string formatting in multiple error - related tests to use % n instead of % n for consistency to improve readability and consistency in error reporting
replaced direct calls to ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java `
added CacheManager dependency and a test method for updating the cache in SpringDataJPAJoinFetchPaginationTest and ForumService to enhance cache
added locale property to pronunciation model to support locale .
added a check to return a FormBody . Builder if the request body is empty to avoid unnecessary processing when the request body is empty
added a dispatcher to the ClientSideSlb class and a corresponding test in ClientSideSlbTest to ensure proper shutdown of the OkHttpClient
added conditional logic to set vertical position based on whether the texture is flipped to ensure correct vertical positioning based on the texture ' s orientation
improve error message for unknown property on discovery strategy
changed the context path variable from final to non - final and added a null check for it to ensure that contextPath is set to " NA "
[ drools - 1348 ] re - define class in projectclassloader when re - loading a class
added a new serialization header B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap . java and updated its value in SerializationHeader
added support for ` prefix _ header ` and ` precompiled _ header ` arguments in ` AbstractCxxSourceRuleFactory ` and updated related
replaced ` WeakReference < T > ` with ` AccWeakReference < T > ` in ` ImageWatched . java ` to
made the ` findNextIndex ` method private in ` ObjectSet . java ` and added a check in ` OrderedSet . java ` to
updated the initialization of the isDirect variable in VertexBufferObject . java to ensure the correct behavior of the isDirect variable
fixed an issue where the audio effect help text be not be display in the audio effect list .
changed return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 to allow access to local coordinates from
pdfbox5764 : use input . limit ( ) instead of input . capacity ( ) in randomaccessreadbuffer . read ( )
added a null check before removing the close hook in VertxImpl . java to avoid potential NullPointerException when the context is null
updated border spacing calculations in CellLayout and DeviceProfile classes to use folderCellLayoutBorderSpacingPx to improve layout consistency based on folder container type
replaced NumberFormat . getInstance ( Locale . US ) . parse ( Locale . US ) . parse ( ) with a custom ValueNumeric class to
added a condition to return a deferred response if the response is not deferred in the login or error page to enhance security by preventing unauthorized
updated command - line argument checks from " -- module - start - ini = " to " -- add - to - start " in StartArgs
added a new private variable ` HIVE _ DEFAULT _ PARTITION _ VALUE ` and modified how dynamic partition values are stored in ` DynamicPartition
[ hotfix ] [ stream ] fix npe in streamnode . getoperatorfactory ( )
refactor return statements in DefaultArtifact . java for clarity and consistency to improve readability and maintainability of the code
camel - 16462 : fixed the issue of kafkaconsumer . getoffsetstate not call twice for kafka consumer .
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to improve user feedback when dependencies cannot be found in the classpath
change the plugin name from ` ` gmail _ notifications _ enabled ' ' to ` ` enable _ gmail _ notifications ' '
doc : [ crypto ] correct the spelling of ` build _ certificate ` in the documentation
increased the expected message count in LumberjackMultiThreadTest to use a configurable concurrency level to improve test reliability by allowing
add check for player . isdead ( ) before getplayerdisplayname ( )
[ hotfix ] [ doc ] fix typo in exchange javadoc
api / secret key should be specify with apikey and secretkey in updateusercmd
replaced switch - case statements with if statements for better readability in multiple classes to improve code clarity and reduce unnecessary switch statements
updated AbstractMetaDataExportMojo . java file to improve metadata export functionality
added exception handling for SQLIntegrityConstraintViolationException in Hive . java to ensure proper dropping of tables with specific materialized view definitions
corrected the property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure the correct property
added a new class RoboExecutorService that extends org . robolectric . util . concurrent . RoboExecutorService to facilitate
added a condition to check if a group is a root and added subgroups and sort subgroups to the menu items to ensure that groups are
updated method names from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and modified the condition to check if the path
updated the handling of JVM options in TestDynamicNumberOfGCThreads . java to ensure correct execution of dynamic number of GCThreads
changed return type and method signatures from ImmutableFlavor to Flavor in CxxPlatforms . java and KnownBuildRuleTypes . java to
refactor CreateTable and CreateTableDeParser to use PlainSelect for string list handling to improve code readability and maintainability by reducing
updated the background drawable assignment in ChatViewerFragment . java to set the alpha value of the background to ensure the background color is set correctly for
test ( refactor ) : migrate ctiteratortest to junit 5 ( # 4448 )
added calls to ` token . clear ( ) ` in multiple tokenizer classes and updated references in ` DocumentsWriter . java ` to ensure proper
add a new test case that dont crash on block statement .
added checks for missing configurers in ` StateMachineConfiguration ` , ` StateMachineFactoryConfiguration ` , and ` StateMachineFactoryConfiguration `
simonstewart : remove the ` ` link = ' ' prefix from the ` ` elementfinder . findelement ( ) ' '
updated StringConverter to set maximum fraction digits for Double and BigDecimal , and modified test cases to use constants from Integer , Double , and Float to
simplify aggregatelifecyclelifecyclelistener . getcurrentscope ( ) .
updated the touchable insets setting from TOUCHABLE _ INSETS _ CONTENT to TOUCHABLE _ INSETS _ REGION to
added a check for a specific line in the FencedCodeBlockParser to return null if it does not exist to ensure proper handling of
added support for socket timeout configuration in multiple classes to enable configurable timeout settings for socket read operations
added a sleep delay of 500 milliseconds in ElementAttributeTest . java to ensure proper handling of interrupted exceptions during tests
updated BufferedReader initialization to specify UTF - 8 encoding to ensure proper character encoding for the input stream
8242327 : list spec should state that unmodifiable list implement randomaccess
added constructors to AsyncFileImpl for handling URI and Path parameters and updated error handling in AsyncFileImplTest to improve code clarity and ensure
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that the Cucumber execution context is stable
fix npe in nuagevspmanagerimpl when there be no device configure on the physical network
rename ` retryUploads ` method to ` retryFailedUploads ` and update related logic in ` FileUploader ` and ` UploadListActivity ` to
updated Java version references from ` getJavaVersion ` to ` classFileVersionJava9 ` in ` ConstantPoolTagTests . java ` to ensure compatibility
add support for compile with - xlint and recompile with - xlint
added a method to clear the client header map in AsyncHttpClient to ensure that all headers are removed from the client header map
replaced Vector with ArrayList for storing strings and removed unnecessary casting to String to improve performance and reduce unnecessary type casting
updated the default value of the DEFAULT _ GRID _ COLUMN from 4.0 f to 3 f to improve user experience by providing a more
added a condition to check if ` forViewCreation ` is false before accessing ` hasTableDefined ( ) ` in ` CalcitePlanner .
updated regex pattern and assertions in TestHS2HttpServer . java for improved readability and consistency to enhance code clarity and ensure correct
added a try - catch block around the asObject method call in GraphPrinter . java to handle potential exceptions during object retrieval to improve robustness by
danielwagnerhall : change the driver name to firefox , and add a test for it
fix byteblockpool . byte _ block _ size to be less than integer . max _ value
updated FeatureVectorEncoder to use Locale . ENGLISH for string formatting to ensure consistent string formatting across different locales
added error handling for unexpected exceptions in TcpTransport . java to improve robustness by ensuring proper resource management and handling of unexpected exceptions
suppress warning on non - serializable non - transient instance field
updated OcamlDebugLauncher to extend AbstractBuildRule instead of AbstractBuildRuleWithResolver to simplify the class hierarchy and improve code clarity
add ` ` discard change ' ' and ` ` return to the main window ' '
added validation for OAuth response types and client ID in the OAuth20DeviceCodeResponseTypeRequestValidator . java file to ensure proper access control and
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure that the index is valid before
added input format class parameter to initTableMapperJob methods in TableMapReduceUtil . java to enhance flexibility in handling input formats during mapreduce
removed redundant append method call in AbstractJRubyMojo . java to streamline code by eliminating redundancy
improve error message when no language be find .
added deprecation warnings for master reserve commit duration in ReplicationHandler . java to indicate that commit duration is not mutually exclusive for Solr 7.1
rename ` cacheVariableName ` to ` cacheForeignKey ` in ` DIHCacheSupport . java ` and update related references in ` TestCachedSql
changed the data type of the ` generateECKeyPair ` method and related calls from ` long [ ] ` to ` Object [ ] ` to
[ hotfix ] [ state ] add suspend method to statewithexecutiongraph to handle cancellation .
replaced the singleton instance of RotationTouchHelper with a direct instantiation in RecentsAnimationDeviceState . java to simplify the instantiation process
refactor port table handling in UniFiControllerCache . java to use flatMap for improved readability to enhance code clarity and
updated method parameters and variable names from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to ensure consistent thread
updated offer removal logic to check for old and new offer IDs before adding to the list to ensure that old offers are removed with the same
use constant instead of hardcoded tl version for test
updated MockitoMethodInvocationControl to handle different mock types and improved test assertions in SystemClassUserTest and SystemClassUserCases to enhance
replaced instances of ` DatabaseObject ` with ` PartialDatabaseObject ` in multiple exception classes to streamline exception handling by using the current object
removed import of DisplayUtils and added intent extra for OCFile to streamline code by eliminating unnecessary dependency on DisplayUtils
added error handling and file deletion logic in StoreDirect and StoreWAL classes to improve error management and ensure proper resource management during file renaming and
added a screenshot task execution in AbsSwipeUpHandler . java and removed it from SystemUiProxy . stopSwipePipToHomeAnimator
added functionality to manage the hidden state of command arguments in LiquibaseCommandLine and CommandArgumentDefinition classes to enhance command execution control by allowing
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to accommodate a broader range
[ geos - 6769 ] use stylegroup . getresourcepool ( ) to get catalog from the stylegroup
added permission checks for launcher activities in InstallShortcutReceiver and modified method signatures in Launcher to include PendingRequestArgs parameter to enhance security by ensuring
added ` getId ( ) ` and ` getId ( ) ` methods to multiple tile classes and updated their implementations to ensure consistent ID handling across different
refactor Manager class to improve code readability to enhance maintainability and facilitate future development
updated JDBC connection URL to include version number " V _ 0 _ 13 " and modified Session . Builder usage to ensure compatibility with the latest database
added schema and includeSchema properties to LiquibaseGenerateChangeLogMojo to enhance schema management functionality in the Liquibase generate
corrected the method name from ` putIfAbsent ` to ` put ` in ` JmxRegistry . java ` to improve code readability and maintain
planner - 1349 : log singlebenchmarkrunner exception to warn instead of error
changed the access modifier of the ` doPutRecord ` method from ` protected final ` to ` protected ` to allow subclassing of the method
fix file selector to work on window
added new test methods for handling large and slow response content in FastCGIProxyServletTest . java to enhance testing coverage for large and slow
added a new intent to start the ReadInteractionsService in MarkReadService . java to enhance functionality by allowing interactions to start the ReadInter
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to ensure warnings are logged only when the
added a default port number if the configuration manager is set to " 25 " to ensure the application uses the correct configuration for the SMTP port
added retry logic for re - creating and reloading SSL factories in TlsUtils . java to improve reliability of SSL factory renewal and
updated date format from " yyyy - MM - dd ' T ' HH : mm : ss " to " yyyy - MM - dd ' T
updated the assertion message in SpyingOnRealObjectsTest to reflect that the private class is not visible to Mockito to improve clarity of
added functionality to control the end of line with a BR tag in the InlineBoxing and LineBox classes to ensure proper handling of line end
updated filePathString initialization to handle null parent case to ensure proper formatting when the parent path is null
removed the import of DocCollection from TopicStream . java to eliminate unused dependencies and improve code clarity
replaced manual creation of ` ServletInputStream ` with a helper method and added a test for handling Windows - 1250 encoded multipart data to improve code maintainability and ensure proper handling of different character encodings in multipart forms
added a properties property to the AbstractCasEndpointTests class to enable the exclusion of web endpoints in the testing environment
added validation to ensure the current graph is a dynamic graph to ensure that the current graph is a dynamic graph before proceeding
add @ eager init annotation to allow @ scopeone to be disable
added a ` suppressExceptions ` parameter to the ` JsonPathExpression ` and related methods to enhance error handling capabilities in JSON path processing
removed duplicate creation of ControllerLeaderLocator in HelixServerStarter . java to streamline code by eliminating redundancy
updated usage messages in CLHSDB and HSDB to include " - help " to clarify the purpose of the command - line
refactored the ` configureChunkProvider ` method in ` SimpleStepFactoryBean ` and removed unnecessary listener registration in ` SimpleStepFactoryBean
[ beam - 8470 ] remove deprecate ` ` write ' ' class from beam - sdk - io
updated ` ShadowAccessibilityManagerTest ` to use ` RuntimeEnvironment . application . getSystemService ( ACCESSIBILITY _ SERVICE ) ` for
add group _ display _ id to the analytics configuration ( # 3390 )
replaced instances of ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed unnecessary ` SourcePathResolver ` parameter to simplify
refactor enum data type handling in PostgreSQLDatabaseConnector and add a new PostgreSQLEnumDataTypeHelper class to improve code organization and facilitate
updated the path in LogFileTests to use File . separatorChar instead of " logpath / spring . log " to ensure compatibility with different
corrected the spelling of " getMapRedLocalWork " to " getMapRedLocalWork " across multiple files to ensure consistency in naming con
added an import for isIndexTable and modified exception handling in HiveMetaStoreClient . java to improve error handling by throwing UnsupportedOperationException when attempting to
added visibility check and disabled state updates in RecentsView . java to ensure proper scrolling behavior when visibility is not visible
added a specific highlighter for non - Windows environments in the Repl . java file to enhance syntax highlighting for non - Windows environments
add ` ` optional local variable ' ' and ` ` xss _ request _ parameter _ tainted ' ' to cross - site scripting
updated filePathStrings to use ` toString ( ) ` instead of ` toUri ( ) . getRawPath ( ) ` for file path retrieval to
removed unnecessary whitespace in the removeCaptureListener method call to improve code readability and maintain consistency
change the value of _ metaDataComplete from true to false to disable metadata completion functionality
changed the return type of ` removeTaskTarget ` method to void and added thread pool execution in ` RecentsAnimationController . java `
added support for " PLATFORM " and " RELEASE " environment variable in JsBundleGenrule and corresponding tests in JsBundleGenrule
updated type casting logic in ` Lower . java ` and added a new class ` T6500701 . java ` with a test method
added tests for handling new lines in comments and Javadoc in AddImportTest . java to ensure correct parsing of line breaks in comments and Javadoc files
added support for hubMode in AbstractLiquibaseChangeLogMojo and a protected hubMode field in AbstractLiquibaseM
removed unnecessary null checks from conditional statements in JsrFaultTolerantStepBuilder . java and JsrChunkProcessor . java to simplify code
added error handling to check for the existence of the linkDb before adding it to the FileInputFormat to improve robustness by logging warnings when
refactor the method for setting the indexer thread pool method in LuceneTestCase to improve code readability and maintainability by using a more
removed " 5000 " from the address string in GameCanvasImplementation . java to simplify the address format for better readability
updated MapJobExecutionDao to use a copy method for job executions and added a test for persistent and non - persistent job execution handling to ensure that
added a new file ` DownloadTest . java ` to implement a test for image downloads functionality in the Gdx application
updated language handling in multiple classes to ensure consistent language normalization to improve code clarity and maintainability
replaced ` UDFArgumentException ` with ` UDFArgumentTypeException ` for argument types in ` GenericUDFRound . java ` to improve error handling
added a null check for selectedVersion before processing the version tag to prevent potential NullPointerException when selectedVersion is null
added multiple matchers to the SecurityConfig class to enhance security configuration options for better security management
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
added a conditional check for concrete class qualified name before processing parameters in BeanDefinitionInjectProcessor . java to ensure proper handling of inner class references and
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to known issues
[ openwebnet ] fix minor typo in openwebnet module ( # 10663 )
simplify code and remove unused code in aprendpoint . java
deleted the SunToolkitSubclass . java file to remove unused class to streamline the codebase
refactor translation logic in DefaultRenderableSorter and add hasRotationOrScaling method in Matrix4 to improve code readability and maintainability by
[ mybatis - 165 ] add unit test for register wrapper handler before primitive
added a method to convert alternate color space to RGB images in PDSeparation . java to enhance image conversion flexibility for different color space
updated references to CommonsApplication to use BuildConfig instead of CommonsApplication to improve maintainability by centralizing configuration references
add health check for camel - main - http component
added a null check for the block position before accessing its properties in the thorn chakram to prevent potential NullPointerExceptions when accessing the block
added a test method for altering tables with indexes extend primary keys in AlterTableWithViewsIT . java to ensure proper handling of primary
updated ` FileFloatSource ` to use ` readerContext . docBase ` for offset initialization and modified test cases in ` TestFunctionQuery `
removed the ID from the fields list in MongoRecordReader . java to clean up unused fields to improve code clarity and maintainability
added disposal and disconnect methods to YeelightHandlerBase , DeviceBase , and WifiConnection classes to ensure proper resource management and
added support for auto _ increment functionality in the parser to ensure proper handling of integer values in the database schema
added support for synchronization of shared index in the SharedInformerFactory class and updated corresponding test cases to use RESYNC _ PERIOD to improve test
cloudstack - 4892 : fix npe while save template detail in private template
updated ShadowBitmapFactory to use RobolectricBufferedImage for image handling to improve compatibility with Robolectric ' s image processing and
removed deprecated constants from LauncherSettings and removed them from LauncherProvider and LauncherProvider to streamline code by eliminating outdated constants
[ drools - 1188 ] move drools - examples to drools - examples - broker
added legendTop and legendTop variables to PieChart . java and adjusted offset logic in PieChart . java to improve legend positioning
added a check to return early if the world transform is zero to prevent unnecessary processing when the world transforms are zero
added a new file ` MaryScriptCreator . java ` that reads and prints a formatted text from a file to facilitate the
nutch - 1348 add restlistener . remote . source . host attribute to listhttpservlet
refactor compaction logger initialization and file deletion logic in LevelCompactionTsFileManagement . java to improve code readability and ensure proper resource cleanup
updated attribute keys from " xlink : href " to " href " in ComponentDescription . java to improve consistency and readability of the code
( chore ) camel - aws2 - s3 : use a constant instead of a hardcoded string
hbase - 25827 addendum log regionserver state when cluster be shut down
added null check for span before logging in Slf4jSpanLogger and improved warning messages in DefaultTracer to enhance robustness by prevent
trim whitespace from the active option before adding it to the configuration to ensure that the option is trimmed before adding it to the configuration
added depth effect preference and updated wallpaper zoom behavior based on user preferences to enhance flexibility in wallpaper zoom behavior based on user preferences
updated the assertion in OverseerTest to verify successful count of the overseer action to ensure that the success count accurately reflects
modified the return value of ` getKernelVersion ( ) ` to always return true to ensure compatibility with different kernel versions and improve code clarity
refactor ExecConstants class to improve code organization to enhance maintainability and readability of the code
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enhance screen recording capabilities during tests
added a new method ` setScanAttributeForPaging ` in ` ScanUtil ` and invoked it in ` TableSnapshotResultIterator ` to
added a conditional check before assigning the lowRange variable in Request . java to ensure lowRange is only set when it is less than 1 ,
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource . java and updated cache size estimation in Async
updated the method call from ` getUuid ( ) ` to ` getZoneUuid ( ) ` in ` HostJoinDaoImpl . java ` to ensure
[ zeppelin - 1348 ] fix miss content - type header for pmd interpreter
removed conditional check before removing a file in ZipFileSystemProvider . java to simplify the removal process by eliminating unnecessary checks
changed the type of ` obj ` from ` Object ` to ` String ` and updated related logic in ` HttpRequestBuilder ` to improve clarity
increased the polling timeout duration from 2 milliseconds to 5 milliseconds in SoftAutoCommitTest . java to allow for more time for hard commit
simonstewart : catch and log runtimeexceptions when call listener . beforeevent and listener . afterevent
refactor multiple dial - related classes to improve code organization to enhance maintainability and readability of the codebase
formatted error logging statements in SyncQueue . java for consistency to improve code readability and maintainability
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest testing
updated ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added a new
update the patchy library path and transformation path logic in FMLClientLaunchProvider . java to ensure compatibility with the latest version of the patch
[ hotfix ] [ yarn ] remove dependency on yarnclient in yarnitcase
update localmapstatsprovider to include local map stats per map
deleted the AllTests . java file to remove unused test suite to streamline the codebase
added Unicode character constants for non - breaking and zero - width spaces in AbstractWordConverter . java to ensure proper handling of special characters in string
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to ensure that large stack trace invocations do not star
updated method call from ` getResultMappings ( ) ` to ` getResultMappingsForRowKey ` in ` NestedResultSetHandler . java ` to ensure
added eventHandled flag to UIText . java to enable event handling during text processing
deleted the Controller annotation and renamed the Weldby class to WeldModule to improve clarity and consistency in naming conventions
only monitor capture group in empty check when check for group enter .
added a protected variable ` liquibaseProLicenseKey ` and removed its initialization and logging in ` AbstractLiquibaseMojo
mondrian : fix nullpointerexception in mondrian - mondrian - mondrian - mondri
add - g option to generate debug information for track node source
mondrian : fix typo find by codespell on fossies . org
added friend paths handling to multiple Kotlin - related classes to support dynamic Friends paths for Kotlin compilation
added aliases for scripts and aliases in Character . java and refactored main method in CheckScript . java to improve script loading functionality and enhance
updated equality checks in ExecutionCommand and added new utility methods in StageUtils to improve command comparison logic and enhance JSON serialization for execution commands
refactor Mockito class for improved readability to enhance maintainability and facilitate future development
refactor OCFile class to improve code organization to enhance maintainability and readability of the code
added a toString ( ) method to the SystemScope class to provide a string representation of the SystemScope instance
updated CSS parsing logic to handle percentage parameters and improved error handling to ensure parameters are within valid range and provide clearer error messaging for invalid
added unit tests for local index reverse scan functionality in LocalIndexIT . java to ensure correct behavior of the reverse range scan functionality in the index
updated imports and test context retrieval in BaseAndroidTestCase , BackupHelperTest , LanguageHelperTest , and LanguageHelperTest to use ApplicationProvider
updated string formatting methods for better localization support to enhance code readability and maintain consistency in string handling
simplified condition checks in RendererUtilities . java and added a new test case in RendererUtilitiesTests . java to improve code readability and
replaced ` askIterator ` and ` bidIterator ` with ` ArrayNode ` and added a new method ` arrayNodeItemAsDecimal ` to
added error handling for database alteration in FileContentProvider . java to improve robustness by catching potential SQLiteException when adding columns
removed debug print statement from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
updated memory size calculations to online data size and introduced a method to compute online data size to improve memory management and accuracy in map join operations
updated the ` buildView ` method to accept a ` Context ` parameter and added background resources for the ` trackView ` and ` enableRandom
added a ` withAuthentication ` method to ` SecurityMockMvcResultMatchers ` and corresponding tests in ` SecurityMockMvcResultMatchersTests ` to
vpc : set vpcid to null in gatewaymanagerimpl
[ flink - 10955 ] [ test ] ignore flink savepointtest on java 1.11
fix checkstyle issue in util / graphics / graphics2d / aspectRatioframelayout . java
refactor loop structure and condition check in Actor . java to improve code readability and maintainability
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange and modified ExchangeSpecification initialization to ensure compatibility with Bitmex
( chore ) camel - spring - data - rest : add integration test for virtual metadata
added null check for spatial before processing to avoid potential NullPointerExceptions when spatial is null
updated lastTokenFiltered to true and added position increment in FixedShingleFilter and updated tests accordingly to ensure correct behavior of token filtering and improve test
fix unsafestorenode . setstateafter for field and storefieldnode .
updated the method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to
added an assertion to check if the CAS event repository is empty to ensure that the CAS event repository is not empty before proceeding
removed the ` attributeTemplateName ` and ` attributeLine ` and ` attributeCol ` parameters from ` AuthenticationAttrProcessor ` and ` AuthenticationAttrProcessor
added null check for the specified key in MacOSXPreferences . java and created a new class RemoveNullKeyCheck . java to ensure that
added a runtime exception for setting the typeface in CodenameOneTextPaint to ensure that a runtime exception is thrown when the typeface
added open method implementations in AzurePinotFS , LocalPinotFS , HadoopPinotFS , PinotFSFactoryTest , and Pin
simonstewart : remove deprecate ` ` fail ( string message ) ' ' method from webdriverrunner
simplified the conditional check for item size in SolrRequestParsers . java to improve code readability and maintainability
replaced instances of ` ResultObject ` with direct reference to ` this ` in ` DefaultResultSetHandler . java ` to simplify the code and
updated SQL syntax in CreateTableGeneratorTest to include double quotes around the table name to ensure compatibility with SQL syntax standards
modified filtering logic in VectorizationContext . java to include a check for FILTER mode and adjusted return behavior based on the result type to enhance functionality
updated the generic type declaration for ` moveSelectorConfig ` in ` ExhaustiveSearchPhaseConfig . java ` to improve type safety and
replaced the instantiation of ReorganizeTableStatement with a direct method call to modifyDataTypeStatement to simplify the code and improve readability by
updated cluster name handling to use constants instead of hardcoded values to improve code readability and maintainability by reducing hardcoded values
updated connection handling in PeerGroup . java and improved error logging in PeerEventListener . java to enhance error handling and provide clearer logging for
added conditional checks for multiple style strings in Nano . java to ensure correct styling behavior based on specified styles
use adventure nbt converter instead of deprecated fixup method .
updated the return statement in NoToStringOnStringType . java to clarify the purpose of the return statement
updated the JVM argument from " - Xmx64m " to " - Xmx32m " in TestThreadFailure . java to support
dataprovider : retry - analysis : add test case for retry analyzer
updated the return value from ` tokens [ 0 ] ` to ` tokens [ bandwidth ] ` in ` BucketStateIEEE754 . java
simonstewart : add support for the ` ` select ' ' , ` ` deselect ' ' , ` ` capturenetwork traffic
removed the ` printWarning ` parameter from the ` doPrintEntry ` method and updated public key algorithm details to simplify the ` doPrintEntry
[ hotfix ] fix checkstyle violation in taskasynccalltest
added validation checks for dialog , frame , and dialog properties in Dialog . java and Frame . java to ensure that the dialog and dialog properties are
changed the ` state ` variable from non - final to final in ` DefaultProjectFilesystem . java ` to ensure immutability of the `
updated RedisObjectFactory to use RedisStandaloneConfiguration for sentinel and database configurations to enhance configuration flexibility for Redis connections
added support for a delayed message in the chat room ' s chat room functionality to enhance user experience by allowing users to track and manage the
replaced the instantiation of ` Callback . Adapter ( ) ` with ` Callback . NOOP ` in the ` notifyContent ` method calls to
refactor FileOperationsHelper to use OperationsService for creating share operations to improve code modularity and maintainability by centralizing operation creation logic
removed unnecessary check for ` isInjected ` in ` BeanDefinitionInjectProcessor . java ` and added ` @ Inject ` annotation in ` FieldProperty
do n ' t use min build height when plot _ bedrock = true
do n ' t swallow nullpointerexception in smackintegrationtestframework
tiff : add a readlinked flag to the exif reader , and add a test for it .
added support for ENABLED _ LS mode in VersionTargetGraphMode and updated dependency executor initialization in VersionedTargetGraphCache to improve dependency management and ensure
added checks for video format in DLNAResource . java to ensure proper handling of video formats in the resource processing logic
refactor AutoMlClient and AutoMlClient classes to improve code organization to enhance maintainability and readability of the codebase
added reflection - based loading of the ` LwjglNativesLoader ` class and modified the ` load ` method in ` Lw
added support for customizable escape options in CSVRequestHandler to enhance flexibility in handling special characters in CSV requests
added validation for the authorization grant type in ClientRegistrations and updated corresponding test cases in ClientRegistrationsTests to ensure that unsupported grant types are
enhanced error messages in ` Throwable ` and added ` initCausePlumbing ` method in ` SuppressedExceptions ` to improve clarity and
added a query to the DerivedTableIT class and modified the iterator in ClientAggregatePlan to set the limit to null in the iterator to
added RSquare metric calculation and assertion in regression tests to validate that the regression model ' s performance meets expected standards
http : / / issues . apache . org / jira / browse / amq - 4237 - add context attribute to request header
refactor code to use a local variable for MapWork to improve code readability and maintainability by reducing casting overhead
refactor image retrieval logic in PdfJndiReport and PdfSessionInformationsReport classes to use a dedicated method to improve code maintainability and
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusted issuer to improve cache management and ensure proper exception handling
updated resource existence check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test
[ cxx ] fix interop test for cxx method .
removed a redundant sleep statement in AbstractBasicMockingIntegrationTest . java to streamline the test execution by eliminating redundant sleep calls
added a new file ` KernCrash . java ` that implements a visual representation of a Kerning Crash in a specified font
added a call to fail ( ) in LinkedHashTreeMapTest . java to ensure proper failure handling during test execution
added a method to retrieve network interface IP addresses based on a prefix to enhance functionality by allowing dynamic retrieval of network interface IP addresses based on the
cancel the global housekeeper executor after shutdown
updated variable name from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in ` GroupTransferService . java ` to improve
refactor assertions in Assert . java to improve code readability to enhance maintainability and facilitate future development
added a new test class ` Issue247Test ` to validate the functionality of the ` Map ` class to ensure correctness of database operations
changed the type of ` results ` from ` Set < CategoryItem > ` to ` Set < String > ` and modified the ` doIn
added handling for leap year validation in ValidatorTest . java to ensure proper validation of maximum age fields based on date and year requirements
added GrblLookups for handling specific error codes in GrblController . java to improve error message formatting for better debugging and error
updated the return statement in Workspace . java to include a default label when nScreens is zero to improve user experience by providing a specific
removed the ` count ` parameter from the ` getTrades ` method in multiple classes to simplify method signature by removing unnecessary parameters
updated ConsoleReader to include stripAnsi method and adjusted loop conditions in MemoryHistory to ensure proper handling of null input and improve code clarity
updated the path for the jdkPath variable in JavaBuild . java to ensure the correct file path is used for the PlugIns directory
replaced calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` input . getType ( ) ` in multiple classes to simplify
updated JFCModel and Configure classes to accept a Consumer for logging warnings to enhance logging capabilities by providing more detailed warning messages
added validation to ensure tolerance is positive in MaximumInscribedCircle . java to prevent invalid tolerance values
added methods to create and drop views in TestUtil . java and a corresponding test in DatabaseMetaDataTest . java to enhance functionality for creating and
added platform - specific checks for stable floating - point and double tests in NaNTest . java to improve error handling for non - X86
added a new file ` DesktopTaskbarUIController . java ` that extends ` BaseQuickstepLauncher ` and modified ` TaskbarManager
update moditemview state when there be no task
updated file handling logic in Files . java to improve performance and maintainability of the code
refactor ` AnnotationGrpcServiceDiscoverer ` and ` GrpcServerAutoConfiguration ` to use a collection for interceptor management to improve code
removed the @ FunctionalInterface annotation from DomainAwareServicesManager and ChainingServicesManager interfaces to simplify the interface and class hierarchy for improved
log modid instead of file name for resourcepackloader # packinfo
chore : update gapic - generator - java version to 2.1 . 0 ( # 4382 )
added grow ( ) methods to Cell class to provide functionality for growing cells in the application
replaced ` currentBindings ` and ` currentBindings ` with a generic ` KeyStroke ` and ` ActionListener ` types in ` DefaultInputHandler
resolve intermittent test failure on slow ci server
replaced long arrays with byte arrays in MetricsMemoryTester . java and added memory fail count metrics in TestDockerMemoryMetrics . java to
deleted the JobParametersPrototype . java file to the functionality was no longer needed in the project
added a securityEnabled flag to the MappingsTable class and updated its usage in related classes to enable security - related functionality in the data connection
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJ
changed the value of DUMP _ TO _ FILE from true to false in TestMSPowerPointParser . java to disable file processing functionality
updated the method signature of ` codecNeedsEosPropagationWorkaround ` to accept ` MediaCodecInfo ` instead of ` codecName ` to
[ java ] use logbufferdescriptor . isconnected ( ) to check if the buffer be available before set the producer position .
added a condition to check if output options are no info in BaseFormatter to ensure proper handling of output options when no information is available
[ java ] disable ssl = false by default in presto driver uri
added DOMOutputOptions import and modified the buildDOMSubtree method to include an additional options parameter to enhance error handling by providing specific output options for
refactor assertions in Assert . java to improve code readability to enhance maintainability and facilitate future development
added topic and retain options to the Event class and updated the Event class to include topic and retain information to enhance event management by allowing users to
updated test cases in EventSerializationTest to include testCaseName to enhance test coverage by including test case names in JSON output
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
replaced the import of ` fastparse . core . Parsed ` with ` fastparse . Parsed ` in ` LatexToUnicodeAdapter .
make ssl _ ctx _ set _ timeout thread safe .
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` in ` AppModule . java ` and
replaced ` CalciteSqlDialect ` with ` AnsiSqlDialect ` in ` SqlNodeConvertContext . java ` to align with the
change log level from debug to trace in FirmwareUpdateService . java to improve logging granularity for firmware update handler availability
added unit tests for retrieving null dates and timestamps in GetObjectTest . java to ensure correct handling of null values in SQL queries
refactor string handling in StringSubject and Subject classes to use a local variable for better readability to improve code clarity and maintainability by
added unit tests for multiple team permissions in UserModelTest . java to ensure correct behavior of repository permissions for multiple teams
added a new file Test7088020 . java that includes a test method for handling incorrect argument types to demonstrate the use
replaced the ` matchAudienceRestriction ` method with a ` Set < String > ` for checking audience URIs to improve the validation logic to ensure
refactor cache update methods in AbstractDataChangedListener and update synchronization in HttpLongPollingDataChangedListener to improve cache management and ensure thread safety
updated the handling of the ` _ stderr ` variable in ` StdErrLog . java ` to check for null before printing to avoid potential NullPointerException
added a new constant ` SEPARATION _ ORDER ` in ` Warning . java ` and updated ` BasicEventSimulationEngine . java ` to
updated the parameter from offlineTableConfig to realtimeTableConfig in the optimize method call to align the query optimizer with the realtime table configuration
updated the SQL statement to include a split point string and added functionality to disable the normalization feature in the AMS HBASE site properties to enhance
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added BluetoothClass handling methods to ShadowBluetoothDevice and ShadowBluetoothDevice classes to enable testing of Bluetooth functionality in the Bluetooth
fix checkstyle issue in player / glowplayers / glowplayer . java
feat ( feel ) : improve error message when list be empty
updated the method call from ` graphModel . getGraph ( ) . readUnlockAll ( ) ` to ` graph . readUnlockAll ( )
updated coreNodeName construction to include the core name from nodeProps to ensure the correct core name is used for node processing
add backdatableobject to update the list of refresh request in chatactivity .
updated the TaggerParserPosTagCompatibilityITest class to improve test coverage for tag compatibility tests
added @ LuceneTestCase . SuppressCodecs annotation to BaseVectorSimilarityQueryTestCase . java to suppress the " SimpleText "
updated conditional check in ` mmm Types . java ` and added a new class ` ppp T7005671 . java ` with multiple
updated calculations for superTriangle and superTriangle in DelaunayTriangulator and added a seed in LwjglDebugStarter
added @ Override annotation to multiple classes to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet initialization to use builder pattern to improve readability and maintainability of the code
refactor state management in StackOverflowCheckImpl to improve clarity and maintainability to enhance code readability and maintainability by using local variables
added SQLiteDatabase and ContentValues shadow methods to Robolectric and removed deprecated methods from ShadowContentValues and SQLiteDatabaseTest to enhance testing
replaced calls to initiateGLInstances ( ) with initiateGL ( ) in LwjglAWTCanvas and LwjglGraphics
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` for byte array comparison to utilize ` ArrayUtil . getUnsignedComparator ` for
added a new parameter ` script ` to the ` Locale ` class and updated the retrieval of default locale properties to enhance functionality by allowing users to
change return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to accurately reflect the last set text alpha value
corrected the spelling of " Confimap " to " ConfigMap " in the warning log message to improve clarity and accuracy of the warning
replaced multiple test class imports with a call to ` UaaJunitSuiteRunner . allSuiteClasses ( ) ` in ` DefaultConfiguration
trim whitespace from tokens in GzipFilter . java and update initialization parameters in GzipFilterDefaultTest . java to ensure proper handling of leading and trailing
updated the assignment of _ outputType in Response . java to ensure consistency in output type assignment
updated the default value of the " nashorn . regexp . impl " property from JDK to JONI to ensure compatibility with the latest
replaced Handler and Future with Executor and FutureTask in ViewCapture . java for improved task handling to enhance code clarity and streamline
added voice style support to the feature processor , and fix a bug in the feature processor .
added a check for the existence and creation of the parent folder in GitBlit . java to ensure that the destination folder exists and is created
updated the bind IP address from " 0.0 . 0.0 . 0.0 " to " 127.0 . 0.1
camel - 14263 : camel - jbpm - workitem - do n ' t work well with camel - jbpm - workitem
pdfbox - 4071 : remove unused import , a suggest by valerybokov
updated display text in AllAppsGridAdapter and renamed WorkModeToggleContainer to WorkFooterContainer across multiple files to improve user interface clarity and
refactor multiple Java classes related to Dalvik to improve code organization and maintainability
fix : do n ' t print implicit type parameter in defaultjavaprettyprinter
added a call to free memory in the driverContext to ensure proper memory management during operations
updated string formatting in QueryByExamplePredicateBuilder . java and simplified replacement in StringQuery . java to improve readability and maintainability of the
replaced ` long evictionCounter ` with ` AtomicLong evictionCounter ` and added a ` add ` method to ` ConcurrentLRUCache `
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` and added a new method ` runAndWait
cloudstack - 6892 : fix wrong type check in networkaddressmanagerserviceimpl
added imports for RuntimeEnvironment and set data root and source root in MainFrame . java to ensure the application uses the correct database and source root
added constructors to ` AdminClientBootstrapConfiguration ` and ` MarkedServerBootstrapConfiguration ` to log successful configuration for Solon Admin client and
refactor TableEnvironment class to improve code readability to enhance maintainability and facilitate future development
replaced the ` setStatementTimeout ` method with a direct timeout setting in the ` MapperBuilderAssistant ` class to simplify the code by
removed the ` hangingTscTimeout ` parameter from multiple method signatures in several transpilation classes to simplify the method signature and improve code
added imports for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration . java to enable serialization of GeoLocationRequest and Geo
updated assertions in ` ArtifactFilesystem ` and ` ArtifactFilesystemTest ` to use ` BuildArtifact ` instead of ` ImmutableSourceArtifactImpl ` to
tika - 1357 -- add a test to verify that the jxl content be correctly parse
make sure script be not trigger concurrent modification
do n ' t try to write to the pipe if there be no data available
added checks to ensure that ` actual ` and ` expected ` values are not true in ` GuavaOptionalSubject ` to improve error reporting for
updated return statements in BackgroundAppState and ShelfScrimView to include VERTICAL _ SWIPE _ INDICATOR and modified
fix a crash when there be no component in the scene .
ggb - 1889 fix for image with absolute location
rename ErrorOccuredInOnExceptionRoute . java file to improve clarity and consistency in naming conventions
updated the scheduling method from ` scheduleAtFixedRate ` to ` scheduleWithFixedDelay ` and changed log level from info to debug to improve the
simplified the assignment of irrUnit and pemUnit in SinglePassAndImageBasedLightingLogic . java to improve code readability
added @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to mark tests as ignored due to test hangs
replaced wildcard imports with specific imports in GuiceFactoryTest . java to improve code clarity and maintainability by using specific dependencies
added methods to manage system features in RobolectricPackageManager to enhance functionality for managing system features in the application
added a new constant ` PROP _ PATH _ POSTFIX ` and refactored path property handling in ` RCAFrameworkLoader . java `
removed logging of cancellation watch dog in Task . java to streamline the cancellation process by eliminating unnecessary logging
added a null and empty check for enumerationValues in RADProperty . java to prevent potential NullPointerExceptions when enumerationValues is empty
rename ` needInline ` to ` needStartText ` and update related conditions in ` BoxBuilder . java ` and ` InlineBoxing .
added a new method ` collectAndSendTelemetryDataAsynch ` and updated the ` collectAndSendTelemetryData ` method to include
removed conditional alteration of the UPGRADE _ ITEM _ TABLE column in UpgradeCatalog260 . java to simplify the code by elimin
updated error messages in BaseTableDataManager to include available space and write - permissions for directory creation to improve user experience by providing clearer guid
refactor DatasetUtilities class to improve code readability to enhance maintainability and facilitate future updates
added a line to append the selector ID in the key to enhance the output by including the selector ID in the key
corrected string concatenation syntax in debug logging statements to improve code readability and maintainability
updated visibility of the taskbar alpha and added methods to manage taskbar visibility to enhance user experience by allowing dynamic visibility of the taskbar during
removed duplicate entries from KeyExchange . java to improve code readability and maintainability
added a type check for ` JdbcConnection ` before executing ` version ( ) ` query in ` CockroachDatabase . java ` to
updated file index handling in ServerMainTest . java to use a variable for improved clarity to enhance code readability and maintainability by
added methods to retrieve media recording MIME type in CodenameOneImplementation , MediaManager , Display , and ImageIO classes to provide access to
change the access modifier of the useShaders method from private to public in ShaderHelper . java and update its usage in RenderTile
updated the ` BindableFilter ` condition in ` DruidAdapterIT . java ` and changed the return value from 6588 to 135
removed unnecessary whitespace in ZkStateReader instantiation to improve code readability and maintain consistency
pdfbox - 4071 : disable external - general - entities and disallow - doctype - decl feature for the factory
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package
replaced a conditional check for " < script > " with a while loop in UrlHelper . java to improve readability and efficiency of the
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and modified the logic for varargs access checks to
refactor border property checks into a separate method ` borderIsSetOrBlank ` to improve code readability and maintainability
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager . java and WatchHTTPManager . java to improve logging granularity for
updated ` InternalDropAllCommandStep ` and ` HubUpdater ` classes to include ` HubRegisterResponse ` as a parameter to enhance functionality by
replaced bitwise operations with Byte . toUnsignedInt for handling unsigned byte values across multiple classes to improve code readability and maintainability by using
removed unnecessary whitespace in OpenTracingTransactionProducer . java to improve code readability and maintain consistency
updated the default cache dependency from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to ensure caching behavior is consistently applied for
change rangePannable from true to false in CategoryPlot . java to disable range pannable functionality
updated the logic for adding and removing the main activity in the AllAppsContainerView to ensure proper handling of main views based on the current active
changed access modifiers of ` glCaps ` , ` renderer ` , and ` animator ` variables in ` Visualizer2TopComponent . java
added catch block for CancellationException in FunctionTest . java to ensure proper handling of CancellationException during concurrent operations
changed constructor visibility from package - private to protected in JarFileResource and JarResource classes to enhance encapsulation and restrict access to these constructors
refactor DefaultTrackSelector class for improved clarity to enhance maintainability and readability of the code
added a loop to wait for unseq merging in LevelCompactionTsFileManagement . java to ensure proper timing during compaction operations
updated the currency assertion from AUD to BTC in BTCMarketsAdaptersTest to reflect the correct currency from BTC instead of A
added a @ Table annotation to the Post table and refactored test assertions in HibernateDTOProjectionTest and JPADTOProjectionTest to
refactor Unicode class to improve code readability to enhance maintainability and facilitate future updates
updated ` installAutoInstance ` method to accept a ` Service ` parameter and introduced ` updateHiveLLAPSettingsIfRequired ` method to
removed unnecessary whitespace in SendHeadersFirstPublisher . java to improve code readability and maintain consistency
[ beam - 10684 ] support md5 and md5 serialization of aws customer key ( # 10598 )
added support for BIG _ DECIMAL in RangePredicateEvaluatorFactory to enhance error handling for unsupported value types
updated variable names from ' inner ' to ' javac ' in TreeBackedProcessorWrapper . java to improve clarity and consistency in variable
added import for Annotation and printed annotations from genericParameterType . getClass ( ) in ParameterInfo . java to facilitate the printing of annotations
added Ac3 support to the PlaybackController and updated video seeking logic in VideoManager to enhance functionality and ensure proper handling of audio
replaced the direct return of a HttpResponse with a HashMap to store the result of a JSON response to enhance the readability of the response by
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement and DiskFileItem classes to address potential deprecation warnings related to Commons DB
added a new test method ` testSelectInto ` to ` IoTDBExtendTemplateIT ` and modified ` DataNodeTemplateSchemaCache ` to
refactor RTimerTree class to improve code organization to enhance maintainability and readability of the code
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
bug # 358 : use rounded width to avoid round error
updated the initialization of ` QueuedThreadPool ` and ` ScheduledExecutorScheduler ` to include unique names for client threads and scheduler to improve clarity
updated visibility of JScrollPane and JSplitPane in ViewResultsFullVisualizer . java to enhance encapsulation and improve layout management for better UI
added descriptions for " phone number " and " 5555555555 " in ScimUserEndpointDocs . java to enhance clarity and us
refactor classes to use public constructors and private default constructors for singleton pattern to enforce singleton design pattern to prevent multiple instances of the classes
added null checks for responseMap in JsonHttpPropertyRequest and improved error logging in URLStreamProvider to enhance error handling and provide clearer
refactor SolrRequestHandler class to improve code readability to enhance maintainability and facilitate future updates
added a condition to check if the ' DEFAULT _ PARALLEL ' value is not equal to ' DEFAULT _ PARALLEL '
fix checkstyle issue in util / logging / vmware / testvmwareMO . java and testvmware . java
added handling for SCARD _ E _ NO _ SMARTCARD in addition to SCARD _ W _ REMOVED _ CARD to ensure
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress certain systemout warnings during tests
camel - 16462 : camel - bindy - add support for list of model in camel - bindy - dataformat
change default value of ` ` useowner ' ' and ` ` usetimestamp ' ' from ` ` true ' ' to ` ` false '
updated method signatures to use ` ThrowingRunnable ` instead of ` Runnable ` to improve clarity and consistency in exception handling
updated CrawlURI . java to handle null values for ` via ` , ` viaContext ` , and ` pathFromSeed ` to improve
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from " 4.1 . 1 " to " 4.2 " and refactored object retrieval in Liquibase
change proxy . cert . validity default value from 7 to 90
added smooth delta and lastDeltaUpdate variables and adjusted return values in ThreadHandler . java to improve responsiveness and responsiveness of the
added a condition to check if paginator is not null before processing tables in HttpBatchReader and HttpScanBatchCreator to ensure proper handling of pagination
added null check for CompactionInfo client in Worker . java and implemented a test for findNextCompact method in TestWorker . java to ensure
added fragment state saving and saving functionality in ShadowFragmentActivity and corresponding tests in FragmentActivityTest to ensure proper handling of instance state during configuration changes
reformatted code for consistency and readability in BatchResourceFactoryBean . java to improve code clarity and maintainability
added a test method to validate Android color references in ColorResourceLoaderTest to ensure correct parsing of Android color references in the application
added exception handling for NoResultException in AbstractJPAQuery and created a test for uniqueResult in AbstractStandardTest to improve robustness of
improve performance of collection . getallparents ( ) and getallparents ( )
updated the instantiation of ` depthPref ` to use ` LawnchairApp ` instead of ` l ` to ensure consistent usage of the
removed unnecessary import of ProcessTools in LocalManagementTest . java to streamline code by eliminating unnecessary dependencies
refactor the ` updateTotalEnergyAverageUsage ` method to remove the ` now ` parameter and directly use the head slot to simplify the
updated ExtensionStack to handle null values and added a test for the toString method to improve error handling and ensure robustness in string representation
flowable . flatmap . cancel ( ) do n ' t dispose the inner subscriber
added connection timeout configuration to MultiGetRequest and ControllerStarter , and improved error handling in ServerTableSizeReader to enhance connection management and
reformatted the instantiation of AndroidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to reflect the new functionality of the GdxTest
removed redundant imports for SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher in EdgeSyncCursor . java and modified inlineImage method in Base
updated cache upload logic in CachingBuildEngine and added a new test for output hash calculation in CachingBuildEngineTest to ensure correct output
camel - 8271 : camel - netty - allow to specify whether to use a bytebuf or not .
updated the method call to use ` Warehouse . getQualifiedName ( ) ` instead of ` getOldName ( ) ` to ensure the correct qualified
improve error message when vertx instance be create with the prefernativetransport option set to true to create domain sockets
move colortypehandlerserializertest to typehandling package and add unit test
refactor StreamEx class to improve code readability to enhance maintainability and facilitate future development
removed specific hint settings for specQueryTimeout and specLockTimeout in SessionImpl . java to streamline query management by eliminating unnecessary timeout
added a new file ` StaticLoggerBinder . java ` that implements ` LoggerFactoryBinder ` to provide a singleton logger factory for SLF4
hbase - 26968 remove duplicate call to familymap . put ( family , list ) in append , mutation , put , and scan
added logic to check if the window orientation changes in TaskbarManager . java to ensure proper rotation handling for different screen orientations
added xml escaping for occupant ' s nickname in ChatRoomJabberImpl . java to ensure proper handling of XML characters in the occup
updated the longStackPut method signature in StoreDirect . java and added unit tests for compact and compact methods in Issue265Test . java to
added @ SuppressWarnings annotations to multiple Java files to suppress warnings related to mutable types in the code
[ zeppelin - 1346 ] add miss field to executionflowcontroltest
standardized spacing in if statements and improved argument handling in FFMpegVideo . java to enhance code readability and maintainability
updated NBWriteServlet and TestWriteListener constructors to include a new boolean parameter for unlimited behavior to enhance flexibility in handling different write limits
blockimportlight : fix incorrect totaldifficulty when import fails
simplified action assignment logic in DefaultPlaybackController . java to improve code readability and maintainability
replaced synchronized list with CopyOnWriteArrayList in NativeLibrarySupport . java and updated method parameters in SecurityServicesFeature . java to improve thread
added allocation calculations to the AllAppsView class and updated bendAngle and bendDistance in the AllAppsView . java file to improve
added a check for the presence of a colon in the key in HttpURLConnection to ensure proper handling of the presence of a colon in the key
added PrincipalResolver annotation to the CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration class to enable principal resolution for the multifactor authentication metadata
replaced ObjectMapper with ObjectBuilder and ObjectBuilder for JSON parsing in DelegationTokenResponse . java to improve compatibility with Noggit ' s JSON
added a method to remove trailing whitespace from a StringBuilder in IoUtil . java to improve handling of trailing slashes in string manipulation
added methods to check for empty patterns in the PatternsMatcher class and corresponding tests in PatternsMatcherTest to enhance pattern matching functionality and ensure
hbase - 20688 loadincrementalhfiles : improve error message when hfofdir be null
added potion event handling for WATER entities in BlockFire . java to ensure proper gameplay behavior when potion is water
updated the formatting of the method call in CellLayout . java to improve code readability and maintain consistency
refactor calculations for decreasePercent and decreasePercent in ContractStateCapsule . java and modify usage calculation in ResourceProcessor . java to improve code
added input readiness checks and logging in AsyncContentProducer and BlockingContentProducer classes , and implemented a parameterized test in AsyncIOServletTest to
added a validation check for weightField in DocumentDictionaryFactory . java to ensure that WEIGHT _ FIELD is a mandatory parameter to prevent runtime errors
added functionality to create variable expansion functions for " Info . plist " in AppleBundle . java and a corresponding test in AppleTestIntegration
add turret shooting to the turret entity , fixes # 249
updated KucoinAdapters . java to cast order to OrderCreateApiRequest . OrderCreateApiRequest to improve type safety by explicitly casting order parameters to
added a new file ` PreParseGrammarTest . java ` that tests XML grammar parsing functionality to facilitate testing of XML grammar functionality
[ doclint ] suppress doclint warning in java . desktop module
added FontManager import and overridden font settings in ExtendedEditText . java to ensure consistent font rendering across the application
added null check for currentUser in AuthorizeTag . java and implemented a test case in AuthorizeTagTests . java to ensure proper handling of null user
camel - 14650 : camel - cxf should check if the uri contain unsafe character . thanks to martin for the patch
added override for setupdata ( ) method in jdbcgeometrytestsetup
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] [ runtime ] add check for already cancel task in backendrestorerprocedure
add server . rmi . create property to make it easy to create rmi registry
use stringutils . join instead of string . join for anticompactrange log message
added display metrics retrieval and updated test cases in various classes to ensure accurate display metrics retrieval and improve test coverage
[ java ] add cluster member id to service heartbeat .
added conditional logic to set total thread allocated bytes in TestThreadMXBean based on version check to ensure proper handling of total thread allocated bytes for
updated the return statement to handle negative and positive infinity cases in CustomExpression . java to ensure correct handling of NaN and negative infinity values in the
updated debug and error logging statements in AjaxListener . java to improve logging clarity and consistency to enhance readability and maintainability of the logging
added GET and POST routes for " / authenticate " and " / authorized " in the Routes class , and created a new AuthenticityController
added assertion to check if the nextNode is alive in LoweringPhase . java and modified variable declaration in SnippetTemplate . java to ensure proper
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure proper logging context for HTTP client requests
refactored comparison logic in DefaultTrackSelector . java by removing redundant lines to improve code readability and maintainability
refactor RuntimeSerialization class to improve serialization logic to enhance performance and maintainability of the code
ggb - 2809 crop image to the crop box if the image be not crop .
refactor UnitOfWorkFactory to improve code structure to enhance maintainability and readability of the code
added a new variable ` allAppsCellWidthPx ` and updated references in ` DeviceProfile ` , ` WidgetPreviewLoader ` , and `
tika - 1348 -- add a content - type parameter to the content - type header in tika - mail . xml
updated the URI construction in ThumbnailsCacheManager . java to include the local ID instead of the remote path to improve clarity and accuracy of
added checks to mark and reset the input stream if supported to ensure proper state management during input processing
added @ Deprecated annotations to multiple Java files to indicate that these classes are outdated and should not be used in future development
added a configuration property to control the visibility of error stacks on the error page in the Ambari server to enhance user control over error
cloudstack - 4892 : add log for account deletion failure during cleanup
sparc : remove bailout check from sparcarithmeticlirgenerator . emitforeigncall
feat ( decisiontable ) : add support for legacy Drools 5 . x api
added ` waitingForResult ` to the ` onRequestPurchaseResponse ` method and modified ` responseCode ` variable to be ` final ` to ensure
increased the default timeout value from 100ms to 1000ms in UnboundedSourceSystemTest . java to allow for more time for execution
updated import statements and modified res name qualification logic in ShadowAssetManager . java to improve code clarity and ensure proper formatting of resource names
deleted two files , MrefStat . java and MrefStat1 . java , and added new classes MrefStat and MrefStat
updated scope handling in DependencyInsight . java and DependencyInsight . java to use StringUtils . isBlank for better readability to ensure consistent scope
added constants for error messages and refactored error handling in BTCETradeServiceRaw . java to improve code readability and maintainability
use hamcrest assertion instead of junit in integrations / cdi / processor2 - connector
added a method to retrieve payment request URLs in BitcoinURI and corresponding unit tests in BitcoinURITest to enhance functionality for retrieving payment request URLs
planner - 383 : improve error message for invalid annotated member and variable type
removed duplicate line setting folder info in FolderPagedView . java to streamline code by eliminating redundancy
fix race condition in jfrbuffernodelinkedlist . acquire ( )
[ hotfix ] [ test ] fix npe in basicabstracttuple
updated import statements and refactored file reading logic in LintUtility . java to utilize InputResource and improve error handling to enhance code
replace direct calls to ` updateBackgrounds ( ) ` and ` updatePaddings ( ) ` with a runnable in ` AppsContainer
update inventory . oninventorytick method to include a new index parameter to ensure proper handling of inventory tick events in the inventory processing
added a case for OCELOT _ BABY in PlayerEvents . java to handle the OCELOT _ BABY
added multiple @ PublicEvolving annotations to StateTtlConfig . java to indicate that these classes are intended to be part of the codebase
added null checks in PreparedStatement and Array classes to ensure proper handling of null values to prevent potential NullPointerExceptions during execution
[ hotfix ] [ tool ] add ` ` describe - all ' ' and ` ` describe - all ' ' option to archive tool
replaced double quotes with single quotes in append0 method to improve code readability and maintain consistency
added a new test method ` jsonSnapshot ` to ` SiteSnapshotVariationsTest . java ` and modified ` directory ` and ` propertiesFile
remove the tx and block cache from broadtest . testtransactionandblock ( )
added logic to set channel state for LensMaskOpen and LeLensMaskClose commands in AmcrestHandler and DahuaHandler
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig . java ` and ` BuildRuleFactoryParams . java ` to
refactor ChangeLogIterator constructor to accept a List < ChangeSetFilter > instead of a List < ChangeSetFilter > to improve flexibility
do n ' t swallow guest exception in polyglotlauncher .
update environment variable retrieval from ` Utils . getenv ` to ` Utils . getenvOrSystemProperty ` in ` Ec2Utils . java ` to
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for the classes
refactor space handling in SpacesVisitor to use dropParentUntil for better readability to improve code clarity and maintainability by reducing
# 1188 - ebean - cache : copy the cache option when it be off or off .
added a new test method ` testHiddenBorder ` to the ` VisualRegressionTest ` class to verify that the border is not visible on
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` to
updated variable names and exception handling from LIVE _ URI to PROD _ URI in KucoinExchange . java to improve clarity and
refactor code formatting and formatting in SpringResourceAccessor . java to improve code readability and maintainability
updated unit assertions for MICROWATT _ PER _ CUBICMETRE and MICROWATT _ PER _ SQUARE
updated method call from ` getMask ( ) ` to ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java `
deleted the Tls12SocketFactory . java file to remove unused code to streamline the codebase
improve performance of texbibentriesresolver ( # 3558 )
added a method to check for Robolectric legacy mode in ResourcesTest . java to ensure compatibility with Robolectric ' s legacy
added a check for FirebirdDatabase to return a specific DOUBLE PRECISION data type to ensure compatibility with FirebirdDatabase ' s double precision data
added null checks before initializing dataSource and transactionManager in DefaultBatchConfigurer . java to avoid potential NullPointerExceptions when dataSource and transactionManager are not
add a new package - info . java file for the unit test stubs module to facilitate the creation and usage of the stub
updated the command from " ping - c 5 www . com " to " ping - c5 127.0 . 0.1 " and
no effective change - code cleanup - use try - with - resources
updated TermScorer constructor to conditionally set PostingsEnum . FREQS to NONE based on scoreMode ' s needsScores to ensure
[ dataflow ] fix metric update in dataflow metric
bug 11002 : uservmdao - create searchbuilder a a part of dao init process ( otherwise it ' s not threadsafe )
updated DynamicPartitionPruner to use target OI instead of primitive writable ObjectInspector and added a method to find the target OI to enhance
added a method to remove build artifacts from the ArtifactFilesystem class and corresponding tests to enhance the functionality of the ArtifactFilesystem and ActionExecutionStep to
added logic to set the selected row selection interval if it is greater than zero in ThrustCurveMotorSelectionPanel . java to ensure
[ j2kt ] rename assertthrows to assertthrowsarraystoreexception and add assertthrowsarraystoreexception method
refactor PropertySource class to improve code readability to enhance maintainability and facilitate future development
added user agent support to HttpClientBuilder and HttpClientConfiguration classes to enhance flexibility in handling user agent configuration
refactor session handling in MemorySessionStore to use computeIfAbsent for improved readability to enhance code clarity and maintainability by encapsulating
updated assertions in IssueTest . java to include a descriptive message and changed results from HashSet to Object in Reporter . java to improve clarity
updated ByteArrayDataSource initialization to use a default content type if the file ' s content type is null to ensure proper handling of null content types for
send an activationrequestdenied event to the character system when an activation request be denied .
added @ SuppressWarnings ( " serial " ) annotations and adjusted calculations in GraphApplet . java to improve code readability and maintain consistency in formatting
added a method to update the snapshot radius in RecentsView and modified the visibility of the updateSnapshotRadius method in TaskView to enhance
added logging for swagger generation and modified revision assignment in StaticMicroserviceVersions . java to improve traceability of swagger generation process for 3rd party
changed return types of ` put ` and ` put ` methods from ` void ` to ` int ` in ` ArrayMap . java ` to
updated KafkaContainerCluster to use ` withStartupTimeout ( 1 ) ` and modified KafkaContainerTest to use ` GenericContainer : : start `
http : / / issues . apache . org / jira / browse / amq - 4892 - add retry option to send back
updated header checking logic in StaticServerHttpHeadersWriter and added a new test case in StaticServerHttpHeadersWriterTests to ensure headers are not
added package access check before loading a listener class in EventListenerList . java to enhance security by ensuring the package access is validated before loading the listener
added a custom adapter class and updated ApplicationsFragment to utilize it to enhance user experience by providing a custom list of applications
updated the applyIcon method to include null checks for iconView and task2 parameters to enhance robustness by preventing potential null pointer exceptions
replaced try - with - resources statements in DownloadTracker , DownloadManager , and DownloadStateCursor classes to ensure proper resource management and avoid potential
[ sqm ] fix a bug in basesqmtosqlastconverter ( # 1748 )
added JUnit @ Test annotations to multiple test classes and removed the ExecutionContext variable from HibernateCursorProjectionItemReaderIntegrationTests to improve test
added asynchronous polling functionality and improved handling of interruptions in DataInputStreamWithTimeout . java to enhance thread safety and ensure proper handling of int
added support for ENABLED _ TS in VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enhance dependency
refactor UpgradeCatalog150 class to improve code organization to enhance maintainability and readability of the codebase
rename networkparameters . testnet3 to networkparameters . oldtestnet
bugfix : update the object panel when there be only one geos
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve code clarity
replaced ` IOUtils ` with ` BufferedIndexOutput ` in ` HdfsDirectory . java ` and updated import statements to improve resource management and
pdfbox - 4892 : do n ' t set clip to null if there be no file
removed synchronization around localAddress assignment in SocketChannelImpl . java to streamline the code by eliminating unnecessary synchronization
refactor template transformation logic to use a new ` addToRow ` method to improve code readability and maintainability by encapsulating row addition logic
added a method to check if the operating system is Windows and refactored file renaming logic in Wallet . java to improve code readability and
updated character encoding constants from CHARACTER _ ENCODINGS [ 39 ] to CHECK _ DIGIT _ ENCODING in Code39Reader and Code39Writer to
added a boolean variable ` hasExecutedUnexpected ` and modified conditional checks for unexpected types in ` NodeGenFactory . java ` to improve handling of
removed unnecessary check for stored fields in IndexingChain . java to streamline the code for better readability and maintainability
fix ( sql ) : truncate nanosecond timestamp in where clause ( # 2596 )
removed unnecessary conditional check for ` postedRunnableStacktraces ` in ` LwjglCanvas . java ` to streamline code by elim
updated the description for the private storage API URL in AbstractGCSProcessor . java to improve clarity of the description of the private service connection
replaced ` assertInitialized ` method with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to ensure thread safety during connection initialization
updated directory retrieval from null to a string in CachingDirectoryFactoryTest . java and RAMDirectoryFactoryTest . java to ensure consistency in directory
updated FaultTolerantChunkProcessor to utilize filterCount instead of size and adjusted related methods to improve filter counting functionality and ensure correct data
updated method formatting and improved error handling in ` T4994049 . java ` and ` FileWithTabs . java ` to enhance
replaced multiple repeated conditional checks with a single assumeTrue method in ConsoleReaderTest . java to improve code readability and maintainability by redu
remove unnecessary check for user ' s admin in getfeedbacksessionsaction
updated calculations for newSelection and currentPosition in AllAppsView . java to correct the logic for determining if the current page should be within the
do n ' t notify client on result availability in threadinfo . initialize ( )
added loading and refresh functionality in DataModelManagerDialog , modified encryption logic in DbConnectionDialog , and improved message dialog handling in ExportPanel
renamed ` writeBufferSize ` to ` WRITE _ BUFFER _ SIZE ` and updated references accordingly to improve code readability and maintainability by using
refactor segment size calculation in DocumentsWriter and add a new test for no documents index in TestIndexWriter to improve accuracy of segment size
fix a crash when dvert = = null in armaturemodifier .
refactor FileDisplayActivity to improve code readability to enhance maintainability and facilitate future updates
replaced direct instantiation of UnsupportedOperationException with a final variable to avoid filling in the stack trace to improve code readability and maintainability by avoiding
replaced the calculation of label height by using a stream - based approach to improve performance and readability of the code
refactor RotationTouchHelper to accept a DisplayHolder parameter instead of using a singleton instance to improve flexibility and reduce dependency on MainThread
refactor quote handling logic in AVA . java to improve clarity and maintainability to enhance code readability and ensure proper handling of quoted
replace Long . valueOf ( s , 16 ) with IdConversion . convertToLong ( s ) in ServletHandlerInterceptor . java and update state current
renamed the method from ` name ` to ` testSmall ` and added a new test method ` testBig ` in ` ServerDatagram
updated the second parameter in the substring method call from ' COUNTRY _ CODE _ s ' to ' COUNTRY _ NAME _ s ' to
refactor Cache class to improve cache handling to enhance performance and maintainability of cache operations
corrected a typo in the variable name from " e " to " ev " and updated scope settings in ResourceSetRegistrationEndpoint . java
removed unnecessary imports and modified the ` doBefore ` method in ` TestUnifiedHighlighterTermVec . java ` to improve code clarity
added a new JFrame and JTextArea to test the addition of a row in the GcodeTable to ensure that the GcodeCommand
updated the configuration parameter for WEBAPP _ CONNECT _ TIMEOUT in the HostUtil check to use the configuration ' s connect timeout instead of a hard
updated various Java files to improve type safety and clarity to enhance code readability and maintainability
refactor TestMediaService class to improve code readability to enhance maintainability and facilitate future updates
removed the HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK constant from Messages . java to streamline the code by
add a new file ` marketsprinttool . java ` that demonstrates how to print currency options in a specified locale
added hostname validation and improved error handling in EndpointAddressInterceptor to ensure compliance with hostname format and prevent invalid characters in the account ID
proxy webauthn call so localhost webauthn work from any localhost
refactor ServerSpanThreadBinder class to improve code readability to enhance maintainability and facilitate future updates
updated user pointer reference from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` and modified the
updated the builder to include " the _ geom " and " number " in Csv2Shape . java to improve clarity and specificity of
replace callGasWord . longValueSafe ( ) with gasCost in VM . java and remove unused imports in Program . java to streamline code
refactor parameters handling in mmm and ppp files to improve code readability and maintainability
added setIgnoreNullValues ( true ) to MultiplePiePlot . java to ignore null values in the piePlot
refactor bundle loading logic to simplify code and improve readability to enhance maintainability and reduce redundancy in the loading process
pdfbox - 4071 : fix typo find by codespell on fossies . org
add a method to check if the action be allowed during edit .
added a userModified flag to the LoginSamlAuthenticationProvider class to enable modification of user data during authentication
added a new file ` TestSealedObjectNull . java ` that tests the behavior of the ` SealedObject ` class to ensure that
renamed the method ` onOpen ` to ` setResponse ` and added a new ` succeeded ` method in ` ConnectPromise ` to improve cl
added a static final Set for SNOW tags in BlockEventListener . java based on server version to ensure compatibility with version 1.16 . 5
added a lastTradeId field and updated Trade creation in CryptsyAdapters , CryptsyPublicTrade , and CryptsyAdapter
added a try - catch block to close the synchronized MSC connection in HiveStreamingConnection . java to handle potential exceptions during connection closure to improve
fix checkstyle issue in util / glowserver . java ( # 1748 )
added a new device profile " Nexus 5 " to the dynamic grid and updated the ICON size for the Nexus 5 device to enhance
2 . x : fix refcount . disconnect ( ) and refcount . disconnect ( ) .
replaced direct instantiation of SynthContext with ReflectUtil ' s newInstance method to improve code clarity and maintainability by using ReflectUtil for
added support for the WHITESPACE _ AROUND _ TEXTUAL _ OP in the FormatToken and FormatVisitor classes to enhance formatting options for better
added checks for non - empty and non - empty file inputs in SaveTask . java and new test cases in SaveAndLoadTaskTest .
added synchronized keyword to multiple method declarations in MLogWriter . java to ensure thread safety during method execution
added handling for MutableLogEvent in SmtpManager . java to enable serialization and deserialization of MutableLogEvent objects
changed the initialization of the PADDING constant from LengthLike to NonNegativeLengthLike to ensure that the PADDING property is always non - negative
replaced multiple calls to ` createContext ( getUser ( headers ) ) ` with ` createContext ( ) ` across multiple resource classes to stream
improve exception handling for jimple catch .
updated JUnitRunner and AndroidPlatformTarget to use Joiner for line separators and improved error message formatting to enhance cross - platform compatibility and provide
reduced the cache size from 16 to 8 in OmniNotes . java to optimize memory usage for better performance
added a condition to check if ' start ' is zero in InvocationStageTrace . java and updated test cases in TestInvocationPublishModelFactory .
added try - catch around keystore loading in ProvKeyManagerFactorySpi . java to handle potential NullPointerException when loading ks input
update UpstreamCheckUtilsTest to use a dynamic port instead of a hardcoded value and modify tests accordingly to ensure the UpstreamCheckUtils
ggb - 1885 fix layout problem in dockmanagerw
added conditional checks for shader extension checks before updating limits in GLRenderer . java to ensure limits are only added for specific OpenGL shaders
refactor PopulatorContext class to improve code organization to enhance maintainability and readability of the code
skip save - all notification if project do n ' t exist
added a method to retrieve the file encoding in ZQLJobManager and updated JSON writing to use IOUtils for encoding handling to improve flexibility in
added a check for the length of the args array before checking if it is an instance of Table to ensure that the argument is not empty before
replace hardcoded header strings with constant values in FakeOSSOHeaderDecoder . java to improve code readability and maintainability by centralizing
added @ Deprecated annotations to multiple Java files to indicate that the suffix strategy option should no longer be used and should not be used in future development
removed debug logging statements from DerbyDatabase . java to clean up the code and improve readability
danielwagnerhall : fix intermittent ci failure
replaced parallelStream ( ) with stream ( ) in PersonNameSuggestionProvider . java to improve performance by reducing unnecessary parallel processing
added a condition to check if the Liquibase hub mode is already set before updating properties files to improve error handling and provide clearer
added constants for version strings in Constants . java and implemented a test forVersionInfo method in TestDDRExtensionGeneral . java to ensure compatibility with
refactor error message construction in FontFamily . java to handle CompositeFont and create a new DebugFonts . java file to improve clarity
updated imports in ALPNNegotiationTest and NegotiatingServerConnectionFactory to handle HTTP / 1.1 negotiation to ensure compatibility with
added RateControl import and set it to NO _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to enhance HTTP2 rate control
added a new file Test6741426 . java that implements a JComboBox and JTextField using Nimbus Look and Feel to
updated the assertion in CsrfAwareEntryPointAndDeniedHandlerTest to use ex . getMessage ( ) instead of a hardcoded error message
added null checks for dbMgdPath and dbExtPath in conditional statements to ensure that only valid directories are processed to avoid potential NullPointerExceptions
added package declaration for S3CopyObjectRequest . java in the s3CopyObjectRequest . java file to improve code organization and clarity
removed accentColor parameter from setup methods in SettingsActivity . java to simplify method signatures and improve code readability
updated error message in TemporaryFolderUsageTest to include " fileAtRoot " instead of " / temp1 " to improve clarity of error
replaced instances of ClassTypeInformation with ClassTypeInformation . MAP and ClassTypeInformation . LIST in MappingMongoConverter . java to simplify code
add check for empty or null address in clientnetworkconfig # getnetworkaddress ( string , null )
added a new certificate " keynectisrootca [ jdk ] " to VerifyCACerts . java to enhance security by enforcing
simplify the compute method to return the output count instead of void .
added a condition to check if the popup is clicked before setting the mode in ModeToggleMenu . java to ensure the menu only reflects the
pdfbox - 4071 : fix arrayindexoutofboundsexception in memoryttfdatastream . read ( )
added new files ` FinalizerInfoTest . java ` and ` HeapInfoTest . java ` to implement and test the ` FinalizerInfo
replaced ` . map ` with ` . doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator `
refactor the handling of the BurningManReceiverAddress to use Optional for better null safety to improve code readability and maintainability by
refactor StringSubject class to improve code readability to enhance maintainability and facilitate future development
added JUnit @ Ignore annotation to BatchValidateSignContractTest . java to temporarily disable tests that are not ready for execution
corrected a typo in the method name from ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to improve code read
replace occurrences of " @ " with " from : " in the saveRecentQuery method call to ensure correct handling of the " from : "
removed the conditional check for forRebalance in SimulatorDiscoverer . java to streamline the code by eliminating unnecessary complexity
added a new POST endpoint for importing YubiKey accounts in YubiKeyAccountRegistryEndpoint . java to enable users to import YubiKey
updated shader options in ShaderManagerLwjgl . java and changed material data parameter from " texture " to " tex " in Font
added null check for ` cnt ` in ` paintOnTopLoop ` and enhanced safe area handling in ` SideMenuBar ` and ` Tool
refactor AbiWriterProtocol class to improve code readability to enhance maintainability and facilitate future updates
added null check for subName before setting the caption to avoid potential NullPointerExceptions when subName is null
changed data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java to align data
updated conditional checks and added null checks for sim and custom expressions in CustomExpression . java to enhance code robustness and prevent potential NullPointerExceptions
send republish request instead of requestBlindVoteListFromNetwork ( byte [ ] majorityVoteListHash ) .
add a new test method ` testCase4 ` to ` PostgresTest . java ` to validate the functionality of the ` postgresql `
replaced string literals with single quotes in SubtitleUtils . java and RemoteUtil . java to improve code readability and maintainability
replaced hardcoded line separator strings with a constant for consistency to improve maintainability and readability of the code
truffle - api : replace atomicreference with a field updater for singleimplementor .
added null checks before adding queries to the list in SimpleFacets . java to avoid potential NullPointerExceptions when excluding queries
fix ( core ) : add bridge support to thinghelper
replaced printHelp ( ) method calls with error messages in Ktab . java to provide clearer error handling for unknown commands
added a check to return the output file if it exists in ANGLELoader . java to ensure that the output file exists before proceeding
added date parsing logic for T , plus , and minus in the DateConverter class to enhance date handling capabilities in XML input processing
added a new method ` findBySlug ` in ` PostRepository ` and asserted its value in ` SpringDataJPALockTest ` to
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and added checks for ` OfflineConnection
added a static import for SimpleClientHttpRequestFactory and set connection and read timeout settings in ClientRegistrations . java to enhance HTTP request handling by
added assertions to validate file existence and name in SourceTest . java to ensure correct handling of file paths and names in source processing
replaced the static initialization of GRAALVM _ VERSION with a static block to simplify the code by directly retrieving the GRAALVM
added validity checks for access and refresh token settings in ClientAdminBootstrap to ensure proper handling of access token and refresh token validity values
updated the return statement to include the Android API version if it is greater than zero to ensure that the API version is retrieved from the Options object
refactor variable references from ' this . ' to ' startIndex ' and ' endIndex ' in PropertyPlaceholderHelper . java to improve code readability
updated the format of the subject Public Key Algorithm in Resources . java to improve readability and maintainability of the code
replaced the import of SolrTestCaseJ4 with a HashSet and CountDownLatch for managing collections in ZkSolrClientTest to improve
added BigInteger import to simpleTypes in MongoMappingContext . java to support BigInteger functionality in the mapping context
added a condition to check if the button text equals the string view before showing a toast to ensure the toast is displayed only when the button text
added a condition to check if MencoderNoOutOfSync is disabled when MencoderNoOutOfSync is disabled to ensure proper handling of audio audio
updated the default NIO event loop thread count from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to increase the event
changed access modifiers of several classes and methods from package - private to protected in CountMin4 and AdaptiveWindowTinyLfuPolicy to
added sorting functionality to the ExternalFileField class and created a new ExternalFileFieldSortTest class to enhance the functionality of the external file field
updated the error message in FetcherException from " Invalid URL " to " Connection error " to improve clarity of error reporting for better debugging
added source attribute handling for event events in OpenRocketSaver and updated FlightDataBranchHandler to include it to enhance event processing by
changed the access modifier of the ` check ` method from private to protected in ` ShapeRenderer . java ` to allow subclass access to the method
added synchronization handling for file operations in FileActivity to improve error handling for conflict scenarios during file transfer operations
updated the URI construction in ThumbnailsCacheManager to use URLEncoder for generating resized images to enhance security by using URL encoding for file paths
added null check for client property " cn1 $ infinite " in InfiniteContainer . java to prevent potential NullPointerExceptions during initialization
updated the total variable from 0 to 1 and modified its calculation logic in IntHashSet . java to ensure the total value accurately reflects the
added a conditional check for lock before updating entries in FeedRefreshUpdater . java to improve error handling for lock scenarios during entry updates
refactor conditional statements for determining user principals in SolarisAclFileAttributeView . java to improve code readability and maintainability by
replaced the list of edges with an array and simplified the creation of a new Edge object to improve efficiency and readability of the code by
added IOUtils import and closed the input stream in ZkCLI . java to ensure proper resource management and prevent potential resource leaks
fix a bug in the bibtex parser that would cause a nullpointerexception in the parser .
added strict parameter handling in the Main class and corresponding tests in MainTest to ensure proper parsing and logging of unknown arguments based on the " strict
add alwaysinvalidconstraint and customconstraintsvalidator to allow custom constraint validation
camel - 14284 : camel - http4 - use http4 instead of http for verifier to determine if a particular service work on a
added a method ` waitForThingsToLevelOut ( 30000 ) ` to ` TestCloudPivotFacet . java ` to provide a timeout
removed redundant byte writing logic in UBJsonWriter . java to streamline code for better readability and performance
refactor ApplicationTest class to improve code organization to enhance maintainability and readability of the test code
replace String with StringBuffer for string manipulation in ConnectionFactoryImpl . java to improve performance and performance of string concatenation
refactor type references from ` Type ` to ` RoboType ` across multiple files to improve code clarity and consistency by using a more
[ java ] return action . abort when dispatch complete for archive and subscription descriptor poller .
added checks for ' cacheKey ' and ' cacheLookup ' attributes in EntityProcessorBase . java and updated related tests in TestCachedSqlEntity
added a new file PutfieldError . java that demonstrates throwing an IncompatibleClassChangeError to demonstrate error handling
cloudstack - 4892 : fix a bug where we do n ' t return the public address if it ' s already in the public
add log when memtable have reach threshold
replaced the use of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` in multiple
[ hotfix ] [ table - common ] fix checkstyle violation in flyweight
refactor TestMethodResultMapBuilder to improve code readability to enhance maintainability and facilitate future development
added checks for Java Integer and RuntimeException in FindNullDeref . java to improve error handling for invalid Java exceptions during method invocation
[ hotfix ] [ runtime ] remove unused constructor in tasklocalstatestoreimpl
updated return values in ` Utils . java ` to include " m " , " h " , " d " , " d " , "
refactor conditional checks in Utilities . java and FloatingIconView . java to handle DeepShortcutView instances to improve code clarity and ensure
changed the type of the validator variable from JwtClaimValidator < String > to JwtClaimValidator < Object > and updated its initialization logic to enhance
renamed methods ` buyQuickRate ` and ` sellQuickRate ` to ` getBuyQuickRate ` and ` getSellQuickRate
added a new configuration class ` CoverageConfig ` and updated ` CoverageController ` to use ` COBERTURA _ PROJECT _ DATA _
added a check to ensure the sticky registration is only registered if it is not already registered to improve performance by avoiding unnecessary registration of the
added a check for ASCII characters before normalization in NormalizerBase . java to ensure that normalization is only performed when the input string does not exceed
[ hotfix ] [ table - common ] fix check for migration status in jobcoordinationservice
added error handling and assertions for SQL execution in SpillableGroupByIT and NoOpStatsCollectorIT to ensure SQL execution fails and provide clear
( chore ) camel - cometd : migrate camel - test - junit to junit4
added ` attrs ( AttrKind . OK , width , bgcolor ) ` and ` attrs ( AttrKind . OK , ... ) ` to
added a line break to the HTML output in HtmlCoreReport . java to enhance the readability of the HTML output
updated the calculation of ramBytesUsed to handle null scores to avoid potential NullPointerException when scores are null
added a custom ` StringHolder ` class and updated imports in ` CustomTypeAdaptersTest . java ` to enhance serialization and deserialization of ` String
added extra data handling in MergeCoordinator and created a test for it in MergeCoordinatorTest to ensure correct extra data is used from mining parameters
added a static map to track the number of parsed and output files in the DependencyParser to improve flexibility in specifying the number of file arguments
refactor PathParamServerEndpointConfig for improved clarity to enhance maintainability and readability of the codebase
corrected the spelling of ' configured ' in the variable name from ' configedThreshold ' to ' configuredThreshold ' and introduced a constant
renamed the parameter ` part ` to ` partOrList ` in the ` attach ` methods across multiple classes to improve clarity and consistency
[ drools - 4892 ] add twitterbootstrap to bootstrap . css and bootstrap . js file
remove the basiccategory ( ) method from spanish treebankpack
hhh - 15827 - add uniqueentityloader . load ( ) to abstractentityloader and deprecate loadbyuniquekey ( )
hbase - 25820 remove cancelled element from taskpool in regionserverflushtableproceduremanager and regionserversnapshotmanager ( # 24
fix setsize ( ) in pgraphicsjava2d when width or height be 0
fix checkstyle issue in util / hikariconnection / hikariconnection / hikariconnection . java ( #
removed ` assureMatchVersion ( ) ` calls and initialized ` luceneMatchVersion ` to ` Version . LATEST ` to ensure
fix aop proxy generation for abstract method with @ get ( ) and @ get ( ) .
pdfbox - 4892 : do n ' t try to match the delimiter if it ' s the first element
refactor multiple subject classes to improve code organization to enhance maintainability and readability of the codebase
added a validation check for negative payload length in WsFrameBase . java to ensure proper error handling for invalid payload lengths
refactor package structure for PublishSubscribeChannelParser , PublishSubscribeChannel , and PublishSubscribeChannel to improve organization and clarity of channel - related
updated executionId type from String to Long across multiple classes to support larger execution IDs for performance optimization
added multiple calls to ` digest . update ( ) ` with width and height parameters in ` ImageProcessor . java ` to enhance image processing functionality
removed logging of overlay version in SolrConfig . java and added imports in SolrConfigHandler . java to streamline version management and improve code cl
updated the delayUntil calculation in FileSyncAdapter . java to increase synchronization delay based on the current time to improve synchronization accuracy by reducing the
[ hotfix ] [ test ] fix checkstyle violation in segmentv1v2tov3formatconvertertest
refactor ` addPathToMTree ` method to accept a ` Path ` object instead of a ` String ` to improve code readability and
added URI handling for file paths in DefaultPackageScanClassResolver and improved error logging in DefaultPackageScanClassResolverTest to enhance URL parsing
[ hotfix ] [ table - common ] [ table - common ] [ table - common ] [ table - common ] [ table - common
added a new file ` SpringSecurityAuthenticationSource . java ` that implements ` AuthenticationSource ` to provide a way to retrieve the principal and credential
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with the latest Android
replaced autoSuggestDialog with a cached file listing dialog using SimpleFormDialog to improve performance by reducing the number of auto - suggest
added a new test method ` testNewput ` in ` TxInputUtilTest ` and updated assertions in ` StoreAPITest ` to ensure
updated the method signature of ` stream ` in ` MongoTemplate . java ` to use ` collectionName ` instead of ` collection . getName ( )
updated zoom calculation and rounding logic in MapOverviewImageMouseHandler . java to improve accuracy of zoom calculations and ensure proper handling of zoom values
added a ` Similarity ` parameter to the ` KNearestNeighborClassifier ` constructor and updated related tests to utilize it to enhance the similarity
replaced SolrQueryParser with a new ConstantScoreRangeQuery in LukeRequestHandler . java to improve query handling by utilizing a more
replaced ` toString ( ) ` method with ` getReason ( ) ` method in ` LowResourceMonitor . java ` to improve clarity by
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added mtu change handling methods in ShadowBluetoothGattTest and implemented corresponding tests in ShadowBluetoothGatt to ensure correct behavior of
refactor servlet input stream creation into a separate method ` createServletOutputStream ( ) ` to improve code organization and readability
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling by logging warnings for unsatisfied link errors
replaced HashMap with ConcurrentHashMap for mProcessingChains to improve thread safety and performance in concurrent scenarios
updated a Japanese string in the Resources _ ja . java file to use " all " and " grouped " instead of " す べ て " and " グ ル ー プ " to improve clarity and maintain consistency in terminology
updated conditional logic in JDBCTypeMapping and modified test assertions in JDBCTypeMappingTest to ensure correct handling of larger sizes and improve test coverage for
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety when accessing player methods
refactor accessibility handling in TerminalView . java to use regex patterns instead of screen reader activity checks to improve code readability and performance by
added support for the " SIDE _ NAVIGATION " behavior in the MenuBar and SideMenuBar classes to enhance user experience by
removed the Disposable declaration from the subscribe method in PoloniexManualExample . java and added disconnect handling in WampStreamingService .
updated energy limit validation logic and improved error messaging in UpdateSettingForEnergyLimitContractActuator . java to ensure that energy limits are
renamed variable ` url1 ` to ` javaUrl ` and added ` protocol ` getter and setter methods in ` UrlBean ` to improve
added getter and setter methods for namespacePrefixRef in SoapJaxbDataFormat . java to enable configuration of namespace prefix references in the Soap
added a constant for one minute milliseconds and refactored date assertions in TestRange . java to improve code readability and maintainability by central
added JettySolrRunner checks and security status verification in BasicAuthIntegrationTest . java and ZkStateReader . java to ensure proper server
added a price feed to the TradesChartsViewModel class to set the currency code based on user preferences for sticky market price
updated configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to set MASTER _ INFO _
refactor variable names and logic in NativeString . java for clarity and correctness to improve code readability and ensure proper handling of negative
added functionality to download and save files in FileDataStorageManager to enhance file management functionality during file downloads
updated the variable name from ` logChannel ` to ` raf ` and added a length setting for the file channel to improve code clarity and
added a method to check if a registry is running and a retry mechanism for deleting a file to improve reliability of registry operations by allowing retries
removed unused import statements and added startLoading ( ) call in Quick3dMain . java and TextureTest . java to streamline code and
removed unused variables and added multiple ` @ SuppressWarnings ( " javadoc " ) ` annotations to several classes to improve code clarity and suppress warnings for
added a null check for instances in TraceFeignContext to prevent potential NullPointerExceptions during execution
phoenix - 1084 set isolation level to transactional _ read _ committed or transaction _ SERIALIZABLE if transaction be disabled
added transaction attribute handling in AbstractStepFactoryBean and improved error handling in ItemOrientedStep and SkipLimitStepFactoryBean to ensure
updated CasManagementWebAppConfiguration to use DirectCasClient instead of CasClient and added a new CasManagementSecurityInterceptor class to enhance the
removed the ` menu _ add _ category ` item from the ` ListFragment ` and updated the ` NavigationDrawerFragment ` to add it to
updated method names from ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and ` FileDisplayActivity . java
pdfbox - 4071 : remove unneeded null check , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to use text size instead of font size to improve clarity and consistency in font size
added a validation check before processing the fact in ConstantAnalysis . java to ensure that the fact is valid before processing to avoid potential errors
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
replaced the return statement to create a new ArrayList instance to ensure that the returned list is immutable and avoid potential null pointer exceptions
removed locking mechanism for database change log parsing in Liquibase . java to simplify code and improve readability by eliminating unnecessary locking
added a method to set the revision in MicroserviceVersions and updated InstanceCacheChecker to set it to null to ensure that the microserviceVersions
updated the handling of foreign key and index names in TableRetriever to include hash code and index names to improve clarity of foreign key and index
camel - 15836 - camel - aws2 - * : added unit test based on user forum issue
removed currency pair handling in BitstampAccountService and added a method to retrieve user transactions in BitstampAccountServiceRaw to streamline transaction retrieval
added error handling for retrieving component instances in BlueprintContainerRegistry to improve robustness by preventing application crashes due to missing components
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 456 : push
refactor LegacyAddressTest to read from a CSV file instead of using hardcoded values to improve code readability and maintainability by reducing
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other classes
refactor push notification handling by introducing a Snackbar setup in NotificationsActivity . java to improve code readability and maintainability by
do n ' t close channel if we ca n ' t close it
updated null checks and method names in LdapPasswordPolicyEnforcer . java for consistency and clarity to improve code readability and maintainability by using
refactor DefaultAnnotationEngine and Stubber classes to improve code organization to enhance maintainability and readability of the codebase
added an @ Ignore annotation to MemoryManagerTest . java to mark the test as ignored due to issue PHOENIX - 2840
nifi - 4891 : add timezone support to the aboutdto ( ) api .
updated Splitter and StorageService to conditionally split tokens in Splitter . java and modified splitOwnedRanges method to include a boolean parameter
simplified the initialization of child and bscc objects by removing unnecessary try - catch blocks to improve code readability and reduce unnecessary exception handling
removed redundant synchronized block in CircuitManagerImpl . java to streamline the code by eliminating unnecessary synchronization
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by using IllegalStateException instead of GdxRuntimeException
[ hotfix ] [ runtime ] add source and sink property to sinkrunner and sourcerunner
updated log level from error to info in FastBindLdapAuthenticationHandler . java to improve logging clarity for user authentication failures
refactor ContainerOrderFocusTraversalPolicy class to improve code organization to enhance maintainability and readability of the code
[ freehand ] make geolocation . getpointlength ( ) return int instead of double .
renamed the parameter from ` source ` to ` source ` in the ` CasRiskBasedAuthenticationEvaluationStartedEvent ` class to improve cl
refactor database connection handling in SchemaCrawlerMain and add a new execute method in Executable to improve resource management and ensure database connections are properly closed
[ java ] add support for tl 1.2 and 1.1 in the default tl version .
corrected the spelling of " labels " and " metadata " in IllegalStateException messages to improve clarity and consistency in error reporting
modified audio stop logic to handle cases where mCurrentAudioQueuePosition is zero and adjusted ndx calculation accordingly to improve audio handling logic and ensure correct
removed unnecessary conditional check for debug logging in HttpConnection . java to streamline logging output for better readability and performance
added support for the ` @ Transient ` annotation in ` JpaPersistentPropertyImpl ` and corresponding unit tests in ` JpaPersistentPropertyImpl
updated the ` upgradeResourceProviderTest ` to compare version entities from ` repoVersionEntity2111 ` to ` repoVersionEntity2200 `
make trufflevm . eval return object instead of symbol .
changed access modifier of ` isBinaryType ` method from private to public in ` SampleResult . java ` and enhanced debug logging in ` Proxy
updated the configuration parameter for the Tez dynamic partition pruning maximum data size to ensure correct configuration for dynamic partition pruning
refactor JavaProblem and JavaEditor classes to remove unused priority handling to improve code clarity and maintainability by eliminating unnecessary priority handling
replaced ` DEFAULT _ OFFHEAP ` with ` DEFAULT ` in ` DictionaryIndexType ` and ` BloomFilterHandler ` classes to
updated string concatenation to use the system ' s line separator in TableWriterTest . java to ensure consistent line endings across different operating systems
refactor DebugHelper class to improve logging functionality to enhance debugging capabilities and maintainability
added a boolean field ` ownsTexture ` to ` ParticleEffect ` and its usage in ` ParticleEffect ` to ensure that the particle
added LDAP authentication properties to HiveConf . java to enhance configuration options for LDAP operations
datacatalog : add miss ` ` scope ' ' import to datacatalogsearch
updated DetailActivity . java to use Context . SHOW _ FORCED instead of Activity . INPUT _ METHOD _ SERVICE to improve code readability and
added a new test method to convert primitive data to an object in DataTableTypeRegistryTableConverterTest . java to ensure correct mapping of piece data
updated the size calculation in TestFileSystem from 100 , 500 , and increased the expected size from 500 to 10 , 50 to improve memory management and
update error message in ContentTypeManager . java for clarity to improve user understanding of resource closing order prior to filing a bug report
modified the ` dropSequences ` method across multiple database classes to implement the ` MigrationFailedException ` interface to ensure proper handling of migration errors in database
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
added a variable ' f ' to the createField method call in DocumentBuilder . java to ensure that the variable ' f ' is properly initialized
fix hiding icon when the node be a logical style .
added a test method to validate the ` findOneAfterUpsertForNonExistingObjectReturnsTheInsertedObject ` functionality in ` MongoTemplateTests ` to
hbase - 20650 fix the calculation of mid in hfileblockindex , bytebuffer , cellflatmap , and boundedpriorityblocking
added a method to record app launch statistics and refactored intent handling in the launcher to improve event tracking and ensure proper handling of null shortcut
added drawing and disposal of the graphics in JavaSEPort . java to ensure proper resource management and prevent memory leaks
update instructorfeedbackresultspagedata to use previous team instead of previous team
added a check for zero ID in the Inventory class and created a corresponding test case in the InventoryTest class to ensure that zero inventory IDs are
added a conditional check for the ' found ' state before breaking the ' break ' statement in ConfigDescriptionRegistry . java to ensure that the '
added a new parameter ` returnType ` to multiple method calls in ` ReloadableJavaParserVisitor ` , ` ReloadableJava17ParserVisitor `
refactor the initialization of blended tiles in TileMapRenderer to handle null values gracefully to improve robustness by avoiding potential NullPointerExceptions
removed unused sunClasses from the Classes annotation to streamline the class loading process for better readability and maintainability
fix for geotools2d . getaverage ( ) to account for the absence of the last segment
updated lockOnSync initialization and modified throttleRate assignment logic in Throttler . java to ensure proper handling of lock - on - sync state and
PipeEventBus and PipeBehaviourEmzuli classes now extend the superclass of PipeEventItem to ensure proper handling of event handlers and validate
removed the timeout value from the ZkController initialization in ZkControllerTest . java to simplify the initialization process by eliminating unnecessary timeout
added a new test method ` passcode _ with _ client _ parameters ` to ` TokenMvcMockTests ` to verify the correct handling of
added broken offsets constructors for LengthFilter , KeepWordFilter , and CharArraySet in TestRandomChains . java to ensure proper handling of specific
removed unused import of JUnit Ignore from RandomPlaneTest . java to clean up the code and improve readability
fix int / long conversion in llvmx86 _ 64bitvastart . java to account for 32 - bit value
replaced direct calls to ` btCollisionObject ` with ` btCollisionObject . getInstance ` in ` btRigidBody ` and
added a new constant ` BUILD _ COPYRIGHT ` and updated the ` OPENROCKET _ URL ` to use it in ` AboutDialog
add getdistributedobjects ( ) method to jetclientinstanceimpl and add test
added debug print statements in FinSet . java and updated variable values in MassCalculatorTest . java to enhance debugging capabilities and maintain consistency in
updated memory semaphore from TOTAL _ MEMORY to MAX _ MEMORY in SmartDexingStep . java to align memory management with the
changed exception handling from MetadataException to Exception in StandaloneSchemaFetcher . java and updated method parameter names in CreateAlignedTimeSeriesPlan . java
burningman : do n ' t check if deposit tx be activation
updated the JSON string initialization and added exception handling for big _ integer _ t in JsonLoaderTest . java to improve clarity and ensure proper
updated the limit for tableSize in ObjectSet . java from 1 < 30 to 0x40000000 to ensure that the tableSize is within
updated imports in ColumnSnapshotGenerator . java to use CachedRow and JdbcDatabaseSnapshot , and modified how decimal digits are set based on data scale
removed @ AddToRuleKey annotations from multiple fields in AppleTest . java to simplify the code by eliminating unnecessary dependencies
added a try - catch block to handle SecurityException in FileHelper . java and modified content handling in TextHelper . java to improve error handling and
added a new static final integer ` StyleWithMultipleAttributes ` and corresponding test cases in ` ShadowThemeTest . java ` to enhance the theme
updated sheet name validation in HSSFWorkbook and modified test cases in TestHSSFWorkbook to ensure correct sheet name handling and improve test
updated method call from primaryColor to elementColor in ManageAccountsActivity . java to align the theme with the new design specifications
updated the initialization of the wrapped handler to handle null replyHandler and simplified the path resolver in DefaultPlatformManager to ensure proper handling of null reply
added ` getCollateFragment ( ) ` method to ` MariaDbDbmsType ` , ` MySqlDbmsType ` , and
added a method ` whenType ` to return an ` Optional < T > ` based on the type of ` treeType ` to provide a
refactor navigation repository methods to return user view destination directly to improve code readability and maintainability by reducing redundancy
updated the return statement in FeedREST to use temporaryRedirect instead of OK to improve response handling by providing a temporary redirect to the application settings service
[ flink - 20688 ] [ kinesis ] add a more informative error message when the deserializer be not serializable
( chore ) camel - jbang - util : update copyright year to match last commit
replaced a sleep delay with a try - finally block to ensure the zkClient is closed even if it is already created to improve resource management
updated method names from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to improve clarity
replaced direct calls to ` _ endPoint . fill ( ) ` with a new ` read ( EndPoint endPoint , Buffer buffer ) ` method
replaced ` BufferUtil . allocate ` with ` ByteBuffer . allocate ` in ` ABCase1 _ 2 . java ` to standardize method
modified the ` prepareStreamsToUpload ( ) ` method to return a boolean and updated its logic to handle the presence of an additional action to
updated order comparison to use Integer . compare for consistency to improve readability and maintainability of the code
added a new file ` PicOfDayAppWidget . java ` to handle app widget updates using Picasso to enhance user experience by
set default value of internallbvmserviceofferingid to string instead of long
updated import statements and modified join condition handling in HiveParserCalcitePlanner . java to use HiveRelOptUtil and HiveRelOptUtil
[ hotfix ] [ runtime ] mark several transformation and operator a deprecate
added user and password options for remote JMX connection in NodeToolCmd . java to enhance security by allowing users to access remote JMX connections
removed duplicate BytesRef initialization in Stemmer . java to improve code readability and maintainability
updated parameters in applyFromAppWidgetProviderInfo and applyFromResolveInfo methods to use numPages instead of null to ensure proper handling of multiple
ggbapplet . getactiveeuclidianview ( ) return view _ euclidian3d instead of view
updated rotation positioning logic in GcodeRenderer . java to ensure the rotation is within valid bounds to prevent potential out - of - bounds errors
added WORKSPACE option to DAEMON in OptionEnum . java and set workspace directory in TerminalClient . java to enhance configuration options for
updated the file path from " apt " to " html " in CLIManagerTest . java to ensure the test uses the correct HTML file
updated ScimUtilsTest to use JUnit 5 annotations and assertions to enhance test clarity and maintainability by using JUnit 5 features
updated ` confimAccess ` method to accept a ` Map < String , Object > ` instead of a ` AuthorizationRequest ` to simplify the
updated assertions in HibernateIT . java to use assertTrueEventually for clearing session stats to ensure that the cache hit count is accurately
refactor EventBusHook class to improve event handling logic to enhance event processing efficiency and maintainability
refactor MultiPaintEventTest class for improved clarity to enhance maintainability and readability of the test code
removed the final modifier from the variable mNewScale in WorkspaceStateTransitionAnimation . java to simplify the code by eliminating unnecessary final modifier
refactor SyncFactory class to improve synchronization logic to enhance performance and maintainability of the synchronization process
added uniqueKey field handling in LukeRequestHandler to ensure uniqueness of keys in the request handler
added support for rounding border colors in BorderEditor and updated EditableResources to utilize this new feature to improve border color management and enhance
truffle : add miss @ truffleboundary annotation to make sure truffleboundary be not always part of compilation .
[ hotfix ] [ test ] use declarativeslotpoolbridgebuilder instead of slotpoolimpl
added logging statements to ` GatewayRSocket ` , ` GatewaySocketAcceptor ` , ` PingPongApp ` , and ` PingP
updated RecentChatFragment to implement Toolbar . OnMenuItemClickListener and added toolbar functionality to handle menu interactions to enhance user experience by providing a
updated InfoDropTarget and UninstallDropTarget to extend UninstallDropTarget and modified startDetailsActivityForInfo method to return a boolean indicating
replaced occurrences of ` add ` and ` removeTail ` methods with ` push ` and ` pop ` methods across multiple classes to standardize
updated URLs for API , IMAGE _ URL , IMAGE _ BASE , EVENTLOG _ WIKI , and EVENTLOG _ WIK
refactor index increment logic into a separate method for clarity to improve code readability and maintainability by reducing duplication
replaced usage of ` Collections . sort ( ) ` with direct calls to ` sort ( ) ` in multiple configuration classes to simplify method calls
added DateTimePatterns for date and time formats in FormatData _ hr _ HR . java to enhance date formatting capabilities for better data representation
added a call to clearFocus ( ) on the clickedView to improve user experience by ensuring the clicked view is properly closed
replaced notifyDataSetChanged ( ) with setSelection ( position ) and updated language selection logic in DescriptionsAdapter and SpinnerLanguagesAdapter to
updated time zone identifiers from " WSST " to " WSDT " across multiple language files to ensure consistency in time zone representation across the application
added native methods for registration and access fields in FastGetField . java and refactored accessFields method to improve code readability and maintain
added serialization support for UNION and NULL types in ReflectData . java and updated corresponding test cases in TestReflect . java to ensure correct handling of
increase the offer timeout from 300ms to 1000ms in the SedaBlockWhenFullTest . java file to allow more time for
added null check before remapping RClass in ResourceMerger . java to avoid potential NullPointerExceptions during resource remapping
add miss constructor for hapi - h2 , mariadb , mariadbDialect , and sqlserverdialect that
camel - 1745 : camel - http - add http connection close header to the http request header . thanks to michael
increased the socket timeout from 60 seconds to 120 seconds in BasicDistributedZkTest . java to improve test stability by allowing
added an assertion to verify that the count ( ) method returns zero for a ticket with final price cts greater than zero to ensure that the
refactor Parser class to improve code readability to enhance maintainability and facilitate future development
refactor CasProcessingFilter class to improve code readability to enhance maintainability and facilitate future development
update thymeleaf / thymeleaf / thymeleaf / parser to use dom . getfirstelementchild instead of dom
planner - 1349 : fix a bug in the look up strategy resolver when the object be an enum .
[ java ] add waitingtoshutdown ( ) method to clusternode to wait for node to be shutdown .
changed log level from warn to info for non - cached beans in ELContextCleaner . java to improve clarity of log messages for better
added a default content type for " application / octet - stream " in WebdavEntry . java to ensure the correct content type is used for
added a new method ` getQueueSize ( ) ` to ` LazyTraceThreadPoolTaskExecutor ` and created a corresponding test class ` LazyTraceThreadPool
added distance comparison logic to skip coordinates that exceed the minimum distance threshold in DistanceOp . java to ensure that the algorithm does not exceed the minimum
rename ` required ` to ` requiredLabel ` in ` AbstractUITag . java ` to improve clarity by using a more descriptive
removed the overridden ` next ` method and added a call to ` updateProgress ( ) ` in ` PurgingPartitionIterator . java ` to
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated references in ` VectorUtil ` to use it to
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide access
added validation to ensure polygons contain at least 3 points and updated localVertices assignment logic to ensure that polygons contain at least 3 points and handle potential
replaced instances of ` ObjectMapper ( ) new ObjectMapper ( ) ` with ` ObjectMappers . newDefaultInstance ( ) ` across multiple files
added a check for the polynomial condition in the GeoImplicitCurve class to ensure that the equation is not null before processing to avoid potential NullPointerExceptions
updated the data type of ` nameLength ` and ` multibyteFlag ` from short to int in ` ExternalNameRecord . java `
updated the description of the JMS Destination description in AbstractJMSProcessor . java to correct a typo in the description to improve clarity and
added login prompts handling in LoginInfoEndpoint . java and corresponding tests in LoginInfoEndpointTests . java to enhance security by allowing users to
replaced the ` remove ` method with ` removeIf ` in ` AbstractController . java ` to improve listener removal logic to enhance clarity
added a case for the actionToggleSpin action in PieChartActivity to allow users to toggle the chart ' s spinner based on their
cloudstack - 4892 : citrixresourcebase . copyvhd ( ) do n ' t kill the copy process when the
hbase - 25827 addendum fix a bug in hmaster that do n ' t have a quota
removed unused imports and added a resize method for pressure in AndroidInput . java to streamline import statements and enhance memory management by resizing pressure
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and updated the existing ` @ VisibleForTesting ` annotation to enhance
ignore test that be always fail and blocking PRs
fix the hopperhocks not be able to place the item at the end of the block .
added authentication dialog functionality using AlertDialog in SsoWebViewClient . java to enhance user experience by providing a confirmation dialog for authentication
refactor TestStressIndexing2 to improve term handling and add new delete methods for document deletion to enhance test reliability and maintainability by
[ flink - 22559 ] [ test ] ignore upsertkafkatableitcase until flink - 22559 be fix
replaced ` get ( j ) ` with ` computeIfAbsent ( j ) ` in ` ResTable . java ` to improve performance by using
added configuration for ACCEPT _ SINGLE _ VALUE _ AS _ ARRAY in DefaultEntityMapper to ensure proper handling of single - value values during deserialization
updated localization information in VersionChangeLogs . java to include additional languages to enhance localization options for better user experience
bugfix # 2262 - make configurationlogic . shortcut _ categories configurable via resourceutils
modified the ` visitExpressionInstanceOf ` method to use ` visitRelExpressionInstanceOf ` instead of ` visitExpressionInstanceOf ` and added
nifi - 1759 added mime - type attribute to gethttp to allow to specify the content - type header for flowfiles
[ rhir ] fix nullpointerexception in resourcehistorytable . toprovenance ( )
rename ` exit _ button ` to ` done _ button ` in ` HelpActivity . java ` and update ` SearchBookContentsActivity . java
refactor NatsConfiguration class to improve code readability to enhance maintainability and facilitate future development
updated the ` invalidateStalePartitions ` method to accept a ` List < PartitionNameWithVersion > ` parameter and modified its implementation to utilize
viewresultsfullvisualizer : use circularfifobuffer and unboundedfifobuffer instead of boundedfifobuffer
updated icon resources in UsersAndGroupsSearchProvider , ShareUserListAdapter , and UserListAdapter to reflect the new chat bubble icon to enhance
replaced calls to ` buffer . getLong ` with ` buffer . getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest `
updated test method names to follow Java naming conventions to improve readability and maintain consistency in naming conventions
added a new constant DATA _ SOURCE _ NAME in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator
increased the timeout duration for awaiter calls from 10 seconds to 30 seconds to improve responsiveness by allowing more time for the await
removed the ` BuckConfig ` parameter from the ` publishBuildSlaveFinishedEvent ` method and deleted the ` BuildSlaveFinishedStatusEvent `
cloudstack - 6892 : use utf - 8 encode when create vmware template uuid
added a test for deposit workspace items without a workflow test in WorkflowItemRestRepositoryIT . java and implemented a method in CollectionBuilder .
replaced ` stream ( ) . forEach ( ) ` with ` stream ( ) . distinct ( ) . forEach ( ) ` for classpathFile
removed the ` isBoxedPrimitive ` method from the ` Unbox ` class to simplify the code by eliminating unnecessary complexity
refactor argument handling in SpecificCompilerTool and add a new test for ordering of flags in TestSpecificCompilerTool to improve code readability and
modified HiveMetaStore to conditionally delete the directory based on the table ' s external status to ensure that only external partitions are deleted when necessary
increased hive server asynchronous execution thread count and added new configuration options for wait queue size and keepalive time to improve performance and resource management for asynchronous execution in HiveServer2
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog to improve stability by preventing
refactor UpgradeResourceProvider to use a constant for service and component names and update related logic to improve code readability and maintainability by central
added a new variable ` diff ` in ` OperationSetTelephonyConferencingSipImpl . java ` to store the current configuration information
update the log view to the log tree instead of the log model . update ( )
added checks for channel status and input / output status in the return statement to ensure that the return statements are only performed when the socket is not
refactor SetNullableGenerator class to improve code readability to enhance maintainability and facilitate future updates
camel - 14650 : fixed the issue of camel - example - reportincident when use the servlettransport = false option . thanks
simplified import statements and updated content type handling in NettyRoutingFilter and FormIntegrationTests to improve code readability and maintainability by
added Swagger annotations to multiple classes and modified method signatures to include a bodyParamName parameter to enhance API documentation clarity and ensure correct parameter naming in
modified the ` update ` method in ` Lwjgl3Window ` and ` Lwjgl3Window ` to remove the lifecycle
updated the FG _ FK color value from 90 to 200 to improve the visual appearance of the UI
disable mp3 audio support by default
fix secondaryindexmanagertest failure when index be empty
add a about group to the generalpreferencespage , and add a version header to the plugin .
[ hotfix ] [ runtime ] fix customserializationitcase to use optional
refactor MediaFormatUtil class to improve code readability to enhance maintainability and facilitate future updates
added an overridden method ` isCellEditable ` to return false in ` GeneralTab . java ` to ensure that the method always returns false for
added a new method ` isOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` and modified the message generation logic to conditionally
added a static integer ` tmpCount ` to ` VocalTractModifier ` and updated the value of ` vscales ` in ` V
updated import statements for BaseScalarUdfTest in TestUDFRound , TestGenericUDFConcat , and BaseScalarUdfTest classes
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper object comparison and hashing functionality
testskiptoclusterrefresh : use the new animation system ( # 1193 )
renamed ` NodeFilter ` to ` NodeCountFilter ` and updated related methods accordingly to improve clarity and consistency in naming conventions
modified the condition to check if the sync block size is less than or equal to the size of the peer to ensure that synchronization blocks are only
updated the state from 365 to 366 and modified the type assignment logic in DebugExpressionParser . java to ensure correct handling of floating - point
updated the condition for finding dependencies in ExcludeDependency . java to use streams for improved readability to enhance code clarity and maintainability by
replaced the ` tmp ( ) ` method with ` dst2 ( v ) ` and updated the ` lerp ( ) ` method
added default value to the args array in GridHubConfiguration . java to ensure a default value is used for the arguments array
updated linker argument handling in RustBinaryDescription . java and added a test for linker flags in RustLinkerIntegrationTest . java to
[ java ] fix test failure on travis and apppage
added " hive . query . name " configuration and modified logging statements in GenericUDTFGetSplits to include the external DAG name to
removed the import of ` java . io . File ` from ` TileAtlas . java ` to clean up the code and improve readability
[ netbeans - 4892 ] make escapeprocessingoutputstream and gradledaemonexecutor thread safe
updated the ` validateQuery ` method to include an additional ` arguments ` parameter to enhance error handling by providing additional context for validation failures
updated INDEX _ VERSION from 1 to 2 and refactored getTree and getField methods in LuceneExecutor . java to improve code clarity and
[ hotfix ] [ test ] add test for default kryo registration
added null check before removing a property in BlueprintConfigurationProcessor . java and updated test cases in BlueprintConfigurationProcessorTest . java to ensure robust handling
refactor Boolean handling in MetaStoreDirectSql to utilize BooleanUtils for improved type safety to enhance code readability and maintainability by
added a call to hideCustomizationDrawer ( ) in mmm Launcher . java and ppp Launcher . java to enhance user experience
refactor warning handling in TermVectorComponent to utilize a constant for warnings to improve code readability and maintainability by centralizing warning management
added a check for optimistic types and updated logging behavior based on the debug flag to improve logging clarity and ensure logging only occurs when optim
refactor Expect class to improve code readability to enhance maintainability and facilitate future development
added UnixSocketConfigurationStrategy to DockerClientFactory and created a new UnixSocketConfigurationStrategy class to facilitate testing of Docker socket access
[ java ] add flaky test for closeablestosfilter
camel - 16462 : camel - reactive - streams : add exception to log when stream have no active subscription
refactor Vectorizer and TezCompiler to use MapWork instead of MapRedTask for mapping to improve code clarity and maintainability by
updated constructors in StringAppender and LogDivertAppender to include a new boolean parameter to enable additional logging functionality for better debugging
check if guipackage be null before call updatecurrentnode ( ) .
add linkage . isweak ( ) method to support weak function .
updated multiple Java files related to XShareAuto , XShareNegative , XCheckJSig , and XCheckJSig to improve code organization
no effective change - add test for defaulttransactionthreadlocal
added a check for invalid operation handles in HiveStatement . java and introduced a new method to check for invalid operation handles to improve error handling and
rename the ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _
camel - 14284 : added unit test for camel - aws - secrets - manager
add documentation warn people not to use this class . maybe we should remove it from core ?
removed the exception message from the error response in UserREST . java to simplify the error message formatting for better readability
added a ` subTree ` parameter to the ` fromContent ` method in the ` Result ` class to enhance functionality by allowing sub - tree
updated column width calculation in Sheet . java and added unit tests in TestHSSFSheet . java to ensure correct behavior of column width calculations
added configPath parameter to the Commands . less method in Builtins . java to enhance command execution by including configuration path
replaced ` Set ` with ` Collection ` in ` DotWriter ` and ` GraphExecutable ` classes to utilize ` Collection ` instead of
updated the SSHD image retrieval from a sha256 to a specific version 1.0 . 0 to ensure compatibility with the latest SSHD image
added an assertion to check if hostId is not null to ensure that hostId is not null before proceeding
refactor the handling of single - valued columns in DefaultGroupKeyGenerator to improve clarity and functionality to enhance code readability and maintainability
updated the test method names and logic in TestMultiMMap . java to improve clarity and ensure correct handling of EOFException during seek operations
refactor BCSiliconRecipes to use a builder pattern for ingredient stack creation to improve code readability and maintainability
fix typo : put ( ) - > putobject ( )
updated visibility logic for child views in CellLayout and refactored onDragExit method in Workspace to improve code readability and maintainability by
updated the modify request handling in ModifyRequestBodyGatewayFilterFactory to use original body and added a test for empty upstream request bodies to ensure proper handling
updated visibility checks in ConstructorFinder , FieldFinder , and MethodFinder to include package accessibility checks to enhance security by ensuring only valid package -
replaced instances of ` logger . warn ` with ` logger . trace ` for several log messages in ` LoggingHandler . java ` to improve
refactor prefix extraction logic in WhiteBlackList . java and add a new test class Issue348 . java with a test case for wildcard
added options menu functionality in GalleryActivity to enhance user experience by providing quick access to gallery images
refactor MongoDBServiceFactory to use singleton instances for MongoDB services to improve efficiency by avoiding multiple instances of the same MongoDB service
added methods to prevent code formatting for boolean values in InlineConstantMutatorTest to ensure correct behavior of boolean values in the Mutant class
updated the ` decode ` method to include a ` Blackhole ` parameter and modified its usage in ` RecordTest . java ` to enhance the
fix : update gapic - generator - java with mock service generation fix ( # 660 )
[ knx ] do n ' t add group address / dpt to knx channel if it be not in the inbound spec ( #
removed the clearing of witnesses in ManagerTest . java to streamline the test setup by eliminating unnecessary witnesses
do n ' t throw prestoexception when abort
removed the " stack " property and replaced it with getter and setter methods in NativeError . java to improve code clarity and maintainability by
added a condition to check if the path name starts with " . " in DrillPathFilter . java to ensure proper handling of path names
rename ` onboard ` to ` autoload ` in the ` ThirdEyeAnomalyApplication ` and ` ThirdEyeConfiguration `
added clearIndex ( ) method to BasicFunctionalityTest . java to ensure the index is cleared before testing
updated the BOLDWEIGHT _ NORMAL constant value from 190 to 0x190 to improve the visual representation of the bold weight
changed ` fThreadGroup ` to be volatile and renamed ` fLookForStuckThread ` to ` fLookForStuckThread `
changed the visibility of the ` getValue ` and ` setValue ` methods in ` ValueResultData ` from final to non - final to allow subclass
updated hash code and equality checks in FuzzyQuery . java to ensure proper comparison of objects and avoid potential null pointer exceptions
removed debug print statements for SIMON target in PushedResourcesTest . java to clean up the code and reduce unnecessary console output
changed return types of ` removeFile ` , ` removeDirectory ` , and ` removeFile ` methods from ` SharedRandomAccessFile ` to `
updated the product version from " 2.5 . 1 " to " 2.6 . 0 " in JdbcDriverInfoRetrieverTest . java
updated the ` retrievePersonAttributes ` method to accept a new ` HashMap < > ( 0 ) ` parameter and modified the principal creation logic to
changed log level from info to warn for ZigBee and Gateway connection errors to improve logging severity for better debugging and monitoring
updated method names from ` intHash ` and ` longHash ` to ` hash ` across multiple classes to improve clarity and consistency in naming
added a constructor to ThumbnailGenerationTask that accepts a FileDataStorageManager and Account to enhance functionality by allowing thumbnail generation tasks to be executed
updated the condition in the loop to check if ` nrFound ` is less than ` count ` and ` tries < 5 ` to ensure that
added a new file ` Bug1933922 . java ` that implements a program compilation with multiple threads to demonstrate the use
removed unnecessary parentheses in conditional statements across multiple Java files to improve code readability and maintainability
updated character validation from 33 to 32 in FileResolver . java to ensure that control characters 0 - 31 are valid
added a call to requestFocus ( ) in the Display class to enhance user experience by ensuring focus is properly displayed
update instructorhomepagetest to use new test data
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
updated message handling in DetailFragment and added onPause method in MainActivity to improve user experience by providing feedback during note updates
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` in ` IoTDBSchemaTemplateIT . java ` to validate
refactor Dialog class to improve code readability to enhance maintainability and facilitate future development
refactor Process execution to use ProcessBuilder for command execution to improve code clarity and maintainability by removing JAVA _ TOOL _ OPTIONS environment
update HintedHandOffTest to use InetAddress . getByName instead of InetAddress . getLocalHost to ensure accurate monitoring of the past window based on
refactor subsystem assignment logic to use a helper method for better readability to improve code maintainability and reduce redundancy
added assumptions to tests in DaemonLifecycleManagerTest . java and InstallCommandIntegrationTest . java to ensure tests are only executed on macOS
jvmciversioncheck : use getrequiredproperty ( ) instead of validateproperties ( )
refactor Mockito class for improved readability to enhance maintainability and facilitate future development
updated TestLargePageUseForAuxMemory . java file to improve memory management during large page operations
updated ` readAllBytes ` method to use ` ctx ` instead of ` source . getSource ( ) ` and added charset handling in ` ParsingExecution
added a new enum ` MultiPartFormDataCompliance ` and updated ` HttpConfiguration ` to use it to allow configuration of the ` _ multiPart
added a new version of GradleVersion . 7.2 in GradleDistributionManager . java to support compatibility with JDK - 17
refactor type management by introducing a ` addType ` method in ` SnapshotControl ` to improve code readability and maintainability by centralizing
refactor Term class to improve code readability to enhance maintainability and facilitate future updates
updated return statement to handle null or empty cases for runWith to improve robustness by preventing potential NullPointerExceptions
http : / / issues . apache . org / jira / browse / amq - 4892 - add a test to verify that
refactor multiple audio - related classes to improve code organization to enhance maintainability and readability of the codebase
pdf417 : fix regression in blackbox test and add test case
replaced direct assignment of ` mSnapshotView ` and ` mDigitalWellBeingToast ` with a variable ` mTint
added a new file ` SumZeroFunctions . java ` and modified ` DrillAggFunc . java ` to include a new function for sum
updated SQL queries in FirstValueFunctionIT and NthValueFunctionIT to include " UNSIGNED _ LONG " and " NOT NULL " to
hbase - 25815 bucketcache . getallocationfailwarningmessage ( ) : improve logging of bucketallocatorexception
added a null check before putting properties in roleObject to avoid potential NullPointerException when propName is null
updated access modifiers and annotations in StatusBarTouchController , modified action handling in RecentsView , and modified feature flag in FeatureFlags to
add method logcontainerstream ( ) and logcontainerstream ( ) to allow stream to be open indefinitely
mvstore : add performance test for mvstore cache
updated the value of " Long " from " L " to " J " in PrimitiveType . java to align the data type with the correct
changed the access modifier of the delegatingApplicationListener method from instance to static to allow the method to be accessible from other classes
camel - 14284 : camel - rest - do n ' t set message body to null in camel - rest - bind
added new files ` FileDeletingTasklet . java ` and ` TaskletJobFunctionalTests . java ` for file deletion and functional test
update update size keep drawables on both companion and plane
refactor byte manipulation in BitUtil , Int2IntCounterMap , Int2IntHashMap , and Int2IntHashMap to use index -
updated the ` sendEventToTest ` method to accept a state ordinal instead of a string and added a new parameter for state management to enhance
added support for video thumbnail requests in multiple classes to ensure proper handling of video thumbnail requests based on the renderer ' s user agent
added error handling for text selection in scrollToErrorLine ( ) and improved error logging to enhance user experience by providing clearer error messages
added conditional layout constraints for the " menuButtonTopBool " and " menuButtonBottomBool " buttons based on the theme settings to enhance the
added preload configuration for the " libskia " library in Skia . java and updated value in Skia . java to enhance compatibility with
add ` ` com . google . bitcoin . unittest ' ' to ` ` networkparameters . getnetworkparameters ( ) ' '
added a HumanReadableException for invalid format arguments in QueryCommand to improve error handling by providing a clearer error message when no format arguments
replaced ` capacity ` and ` isPositionValid ` variables with ` length ` for better clarity to improve code readability and maintainability
added a new parameter ` srcRule ` to the ` walkRuleAndAdd ` method and updated its usage in the ` walkRuleAndAdd
[ netbeans - 4892 ] fix location of patch file when source override be enable
[ java ] remove check for protocol version when compare candidate term id .
added a conditional check for SAML authentication before setting the default policy in OwnCloudClientManagerFactory to ensure proper handling of client manager behavior based on
added null checks for mappedTableResource in ReadBatch and WriteBatch classes and corresponding unit tests to ensure that the mappedTableResource is not null
replace some try - catch block with a utility method to clean up resource .
refactor ` AnonymousAuthenticationFilter ` to utilize a deferred context for improved security context management to enhance flexibility in handling anonymous security contexts
modified the ` removeActor ` method to include an ` unfocus ` parameter to enhance actor removal functionality by allowing the removal of actors based on
replace direct usage of ` managed _ schema _ configs ` with a variable ` validConfigs ` in ` SolrCLI . java ` to improve code
added logging functionality and improved response handling in NettyHttpServer and RoutingInBoundHandler to enhance logging capabilities and ensure proper handling of response
refactor multiple classes including DatumAliases , AbstractParser , Formattable , Formatter , and Parser to improve code organization and maintainability
replaced ` update ( ) ` with ` SwingUtilities . invokeLater ( this : : update ) ` in ` CodeDependenciesPanel . java
camel - 15836 : camel - groovy - add support for cache groovy language in camel - groovy - dsl .
remove dependency on maven . maven . artifactutils in defaultpluginmanager . getmanagedversionmap ( )
[ hotfix ] [ cli ] make ` ` args ' ' and ` ` python option ' ' public .
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
added logic to retrieve and print the certificate chain from storage keys in HttpsMessenger . java to improve code clarity and provide better debugging information
simonstewart : make sure we do n ' t swallow classcastexception
changed the access modifier of the ` updateImage ` method from private to protected in ` ImageButton ` and ` ImageTextButton ` classes to
fix drop xp resource for server level ( # 6240 ) ( # 6240 )
added native methods for SpatialLocationCalculatorConfig in DataOutputQueue and depthai classes to enable retrieval and retrieval of spatial location calculations for improved
refactor multiple Java classes related to community detection and ranking to improve code organization and maintainability
refactor the ` isEmpty ` method in ` TreeTrie ` and add parameterized tests in ` TrieTest ` to improve code readability and ensure
updated method calls in AttributedStringBuilder to use a variable ' r ' instead of a variable ' col ' to improve code readability and maintain
added a conditional check for the " solr . disableFingerprint " system property in PeerSync . java and updated its assignment logic in PeerSyncTest
changed the access modifier of the ` moveFunds ` method from private to public to allow external access to the ` moveFunds ` method
updated event emission logic in MongoTemplate . java and added a new test case in MongoTemplateTests . java to improve event handling and ensure
fix settransactiontest and collectioncontainer serialization issue
tika - 1347 -- close input stream in tika - cli to prevent resource leak
solr - 10750 : fix testcollectionapis to use array instead of array
removed unnecessary whitespace in ConfigurationParser . java to improve code readability and maintain consistency
remove longfsname from log message in instructorfeedbackaddactiontest .
[ hotfix ] [ runtime ] fix checkstyle violation in io / resource / externalworkerservice . java
removed the ` step ` field and its associated getter and setter methods from ` HmDatapoint ` and ` HomematicTypeGenerator
added logging for shared and exclusive lock acquisition and write operations in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity and
removed duplicate call to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to streamline code by eliminating redundancy
danielwagnerhall : fix flaky testgettextcontent . java
refactor Logger to use ThreadLocal for logger management to improve thread safety and maintainability of logger operations
updated FunctionInitializer and FunctionInitializerTest to use MockitoJUnitRunner instead of JMockit to enhance testing capabilities and ensure compatibility with newer
added boxedTypeOrType method in Types . java and updated Infer . java and T6995200 . java to handle type
updated the logic for updating the focused task view in RecentsView and removed initialization of mDigitalWellBeingToast in
hbase - 25836 remove unnecessary stream in testflushfromclient # testflushfromclient
added logic to delete a new repository and store contract details in TransactionExecutor . java to ensure that the original repository is removed when a new contract
updated balance calculations to use dynamic properties from the dynamic properties store to ensure accurate fee values are used for withdrawal and reward transactions
refactor RealisticRenderStrategy to use URI and Texture maps instead of individual maps to improve texture management by utilizing URI - based cache management
refactor raster creation and composition in Blit . java and add a new Bug7049339 . java file to improve code cl
added ` isUnselectedStyle ` boolean and ` stringWidthUnselected ` variable to ` Component ` and updated ` Label ` and ` DefaultLook
updated ArrayList initializations and improved method calls in multiple classes to enhance memory allocation and enhance code readability
removed unused flags parameter from multiple query methods in ShadowApplicationPackageManager and added FLAG _ PRIMARY constant in ShadowUserManager to simplify method signatures and
refactor PingRequestHandler to improve request handling logic to enhance performance and maintainability of the code
add mp4 sample with increasing timestamps to android test
refactor firmware checks in TradfriGatewayHandler to use a more concise method to improve code readability and maintainability by reducing
refactor AjaxElementLocator class to improve code organization to enhance maintainability and readability of the code
updated BoxLayout to check for " table - cell " instead of " inline " in addition to " block " to ensure proper handling of table
refactor JsonDecoder logic to handle both start and end - of - array and end - of - array tokens correctly to improve readability and
updated the listener initialization to include a removalCause parameter in the releaseLocation method to improve code clarity and maintainability by reducing redundancy
added JUnit Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready for execution
added multiple @ Test annotations to DroolsMvelParserTest . java to enhance test coverage for DroolsMvelParser functionality
changed variable declarations from ` private ` to ` private final ` for ` appName ` , ` host ` , and ` port ` to ensure im
refactor ObjectHashSet and test classes to use parameterized tests for improved test coverage to enhance flexibility and maintainability of the code by allowing
added batch byte management to SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch classes to ensure data integrity by preventing excess
replaced MODE _ WORLD _ READABLE and MODE _ WORLD _ READABLE with MODE _ PRIVATE in AppSettings and UpdateUtils to
updated JdbcProxyGenerator to handle " abort ( ) " instead of " close ( ) " and added error handling for the " abort ( )
updated workspaceAnim to use mState instead of mState to improve accessibility handling based on the current state
change log level from warn to debug in ProtobufLogReader . java to reduce log verbosity and improve performance
modified the scope variable assignment in UaaTokenServices . java and added a new test case in UaaTokenServicesTests . java to ensure
updated import statements in ` SchemaRetrievalOptionsBuilderTest . java ` and renamed ` TestAvailablePlugins . java ` to ` AvailablePluginsTest .
[ drools - 5641 ] add executablecommand interface ( # 5641 )
camel - 16462 : remove jdbctableservice from camel - itest - idempotent
added methods to retrieve padding values in CellLayout and modified bitmap creation in Launcher to improve padding handling for different axis orientations in the layout
modified the initialization of the ` cands ` list to handle cases where ` sb ` is empty to ensure that ` cands ` is only
updated SamlIdPConfiguration , SamlMetadataUIParserController , SamlMetadataUIParserAction , and SamlMetadataUIParserDynamic
added a method to check for LDAP ports in LdapMockMvcTests . java to provide functionality to check for available processes using a specified port
[ log4j2 - 1343 ] fix log4j2 - 1343 - log4j2 - 1.0
updated URL handling logic in Fetcher . java and added logging in HTMLMetaProcessor . java to improve logging granularity and ensure refresh URL is only
updated SolrQuery to use " name : samsang " instead of " * : * " and modified assertions in TestSpellCheckResponse
refactor console initialization to use reflection based on parameter count to ensure compatibility with Karaf ' s Console API for improved flexibility in
made the ` getVerticesColors ` method private and updated the initialization of ` verticesColors ` to use a dynamic column name based on the
added file filtering capabilities to the HTMLReportGenerator and updated related test cases to enhance file copying functionality by excluding timestamped reports sub directories
refactor DataValidatorTest to use parameterized tests instead of individual test methods to improve code readability and maintainability by using parameterized tests
pdfbox - 4071 : remove unused method , a suggest by valerybokov
added a null check for bindStatus in FieldUtils . java to throw a TemplateProcessingException if the expression is not executed inside the adequ
removed debug print statements from JoglInput . java to clean up the code and improve readability
added allowExtractingPrivateFields feature to FieldSupport and updated readField method to accept it to enhance flexibility in handling private fields during field
added a replacement for device name in WebDataHandler . java to ensure the correct device name is used for processing
replaced direct instantiation of Lookup with a conditional lookup mechanism based on Java 8 type to improve flexibility in obtaining the Lookup constructor for Java
renamed the ` weights ` method to ` weightsByDouble ` and updated its usage in the ` ZParams ` class to improve clarity
added a Database parameter to multiple writeCustomHTML methods across multiple writer classes to enhance functionality by allowing database - specific operations
updated key retrieval logic in BTreeMap . java to remove unnecessary type casting to improve code clarity and ensure proper handling of null values
updated exception handling in CancelDeferredTransactionContractActuator , UpdateDeferredTransactionContractActuator , Manager , and TransactionTrace classes to throw ContractEx
add a system property to turn off the heap zero file by default
refactor output handling in Main . java to use sendMessage instead of println for clarity to improve code readability and maintainability by reducing
increased the buffer size from 14 bytes to 13 bytes in HortonworksEncodedSchemaReferenceStrategy . java and added a generic record
added import statements for ItemListener and ItemReadListener in multiple Java files to enable tracking of listener events in the batch processing framework
refactor code formatting for consistency and clarity in AbstractProviderModule . java to improve code readability and maintainability
updated print statements in SearchFiles . java and modified parameters in SortedSetDocValuesFacetCounts . java and MessageFilesParser . java to improve cl
refactor Test7005594 class to improve code readability to enhance maintainability and facilitate future development
updated error message formatting in ResourcesValidationProcess . java to improve clarity and consistency in error reporting
refactor TopKRollupPhaseOneJob class to improve code organization to enhance maintainability and readability of the code
server : fix npe in listvirtualmachines api when vmid be null
update gamepad to support analog trigger instead of digital trigger
updated method names and imports in IterableSubject . java and IterableTest . java to improve clarity and consistency in method naming to enhance code read
camel - 1845 : fixed the issue that camel - http do n ' t work with camel - http
added unit tests for SQL query counts in ActivityHistorySQLServerStoredProcedureTest . java to ensure correct handling of various data types in the database
added a new ` LargeValueFormatter ` class and updated ` BarLineChartBase ` and ` BarLineChartBase ` to utilize
refactor prevTwoChars initialization to use a constant for INNOCUOS _ CHAR to improve code readability and maintainability by centralizing
added @ SuppressWarnings ( " argument . type . incompatible " ) annotation to Platform . java to suppress warnings related to incompatible argument types
updated the printLir statement in TraceLinearScanLifetimeAnalysisPhase . java to correct the syntax to improve code readability and maintainability
added a TODO comment for auto - generated method stub in NullAssertionValidator . java to improve code clarity and maintainability by eliminating
added support for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to ensure proper handling of rule keys in the build process
added logic to create a system profile directory if it does not exist and improved test setup and teardown methods to ensure the system profile directory is
refactored the creation of the ThreadFactory in TestcontainersDockerCmdExecFactory . java to ensure consistent instantiation of NioEventLoopGroup
refactor HttpChannelOverHTTP and HttpReceiverOverHTTP to use a dedicated method for retrieving messages to improve code readability and maintainability by
set the " accept " attribute in the ImageFileInputDialog to " image / * " to ensure proper handling of image file access in the
updated ElasticIndexWriter and TestElasticIndexWriter to use PreBuiltTransportClient instead of NodeBuilder and replaced Headers with ShardId to improve compatibility
added detailed logging for witnesses and witness class names in ForkController . java to improve debugging and traceability of witness processing
added a new test class ` NullPointerAndEmptyArrayTest ` to validate handling of null and empty URL arrays to ensure that null and empty
removed unused imports and refactored the ` findConfiguredGeneratedSourcePathsUsingDeps ` method in ` BaseIjModuleRule . java `
updated regex pattern construction in UaaStringUtils to support multiple characters in regular patterns to enhance flexibility in wildcard matching by allowing more flexible
added validation checks for map work aliases in Vectorizer . java to ensure that only one TableScanOperator aliases are processed to improve error handling and
replaced MockitoJUnitRunner with MockitoJUnitRunner in WeatherQueryTest . java to ensure compatibility with the latest Mockito
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by logging warnings when setting firmware settings fails
replaced specific imports with a wildcard import and modified the getLangs method to return a set instead of an array to improve code readability and
removed unnecessary parameters from assertions in LazyTraceScheduledThreadPoolExecutorTests . java to streamline test assertions and improve code readability
hbase - 25814 add prepare ( ) method to disable / take table snapshot handler ( # 2692 )
[ j2kt ] add runtimemethods . createplatformisnullcall ( ) to create platform - specific null call
added a test for verifying the modification of the HTTP RPC endpoint in DockerQuickstartTest . java to ensure that the application correctly identifies and
added a volatile boolean variable ` isSuspended ` to manage thread suspension status to ensure proper handling of thread state during suspension
updated Javadoc visitor classes to use Hidden and SerialData instead of Author , since , and ReloadableJava8 classes to improve clarity and functionality
camel - 1889 : camel - service - exporter should use objecthelper . isnotempty ( ) to check if camelcontextid be
removed multiple redundant @ Override annotations from multiple security - related classes to improve code readability and maintainability
added module import handling in Java2TypeScriptAdapter and updated test assertions in EnumTests and MyComplexEnumsAccess to improve module imports and
use http : / / www . w3 . org / 2001 / xmlschema instead of xmlconstants . w3c _ xml _
added conditional logic to set content description based on badge status in BubbleTextView . java to enhance user experience by providing a more informative
added mouse wheel support to TestMouseWheelScroll . java to enable mouse wheel functionality in the scroll pane
added closing of PDDocument objects and a new test method for positioning absolute in VisualRegressionTest . java to ensure proper resource management and
updated currency pair references from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to
refactor VacuumController , VacuumFrame , and VacuumView to use String instead of Object for location
removed conditional checks for currency names in BitfinexAdapters . java to simplify code and improve readability by eliminating redundant code
replaced HashSet with TreeMap and updated field handling logic in JsonFormat . java to improve code readability and maintainability by using a unified TreeMap
removed conditional checks for array and enum types in JacksonXmlFormatMapper to simplify serialization logic for better readability and maintainability
refactor variable names for consistency and clarity in VirtualThread . java to improve code readability and maintainability by standardizing variable naming
updated DirectoryTaxonomyWriter to include a new parameter for category term and removed unnecessary NoOpCache class to enhance cache management and improve code clarity
refactor VetoableChangeSupport class to improve code organization to enhance maintainability and readability of the code
adjusted the calculation of the owner ' s Y - coordinate by subtracting the last height to ensure proper positioning of the owner ' s
pdfbox - 4071 : sonarqube peeve : remove declaration of thrown exception which be a subclass of another , but keep both in javadoc
added unit tests for setShortSupportMessage , setLongSupportMessage , and setActiveAdmin methods in ShadowDevicePolicyManagerTest . java to ensure
ggb - 1352 show menu bar and close button in inputbar help panel ( close button )
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced Thread . sleep with ThreadHelper . waitUntil for controller state checks in BackendInitializerHelper and TerminalClient to improve responsiveness and
updated the logic for setting the last update preference based on the release status to improve clarity and correctness in handling release status changes
db migration : add ` ` include generate file ' ' config option to allow migration to include a comment
updated player references from " < player > " to " < player | * > " in multiple files to enhance command functionality by allowing users to
deleted the BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused classes to streamline the codebase
updated method calls in OptionProcessor to use " optionName " instead of " nameVariableName " to improve clarity and consistency in parameter naming
added a condition to check for parallel classes in the TestNGContentHandler class to ensure proper handling of parallel classes in the test suite
http : / / issues . apache . org / jira / browse / amq - 4237 - fix npe in routeinfo
refactor : remove static import of enums in ctmethodimpl . java ( # 2296 )
added serialVersionUID to multiple Java classes to ensure proper serialization compatibility across different versions
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated the shaBase64 method to accept a CONST _ SEPARATOR parameter and added a new test for its behavior to ensure that the shaBase64
refactor parameter handling in Parameters . java to improve null safety and clarity to enhance code readability and maintainability by reducing redundancy
added a new class ` Person ` with a private field ` name ` in the ` org . apache . maven . it0074 ` package
remove unused localaddress parameter from gossiper . start ( )
changed the method call from ` indexOf ( i ) ` to ` indexOf ( i ) ` in ` AbstractClient . java ` to ensure case
added assertions for time column , timeUnit , and totalDocs in SegmentMetadataImplTest and updated segment metadata handling in SegmentMetadataImpl to ensure
updated the import statement for ` java . awt . Color ` and changed the foreground color for ` simPlotPanelDesc ` to use ` D
added a call to disconnectEmitters . onNext ( new Object ( ) ) in NettyStreamingService . java to ensure proper handling of disconnect
changed the type of scopeHierarchy from String to Class < ? extends Annotation > in DefaultBeanContext . java to improve type safety and flexibility
danielwagnerhall : add a test to check that double overflow can be auto - click
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog to improve stability by preventing
added support for custom JNDI location in JtaTransactionManager to enable flexible configuration of JNDI location based on system properties
changed the access modifier of the ` pickUri ` method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from Library . java to streamline the code by eliminating unnecessary functionality
rename variable ` enabledCiphers ` to ` result ` for clarity and consistency to improve code readability and maintainability by using a more
[ beam - 10688 ] fix timestamp type conversion in bigquery
replaced multiple null checks with requireNonNull for buffer and user credentials in Identifiers . java and DatabaseConnector . java to improve code readability and
use inputmap instead of input in coercevalueforinputobject
added bounds checking for row and column in FlightConfigurablePanel . java to ensure that the row and column indices are within the table ' s
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to enhance the visual appearance of the
[ java ] unnecessarylocalbeforereturn : false positive with memberselector
replaced ` ScriptEngineManager ` with ` ScriptEngine ` and removed null check for language in ` AbstractScriptExecutor . java ` to simplify
simplified calculations in EuclideanDistanceSimilarity and updated corresponding test assertions in EuclideanDistanceSimilarityTest to improve accuracy and accuracy of
do n ' t call incrementallybackup if it ' s not null
refactor ` relativize ` method to include checks for non - null paths before calling ` relativize ` to ensure proper handling of
updated null checks for column size and decimal digits in ColumnSnapshotGenerator . java and DataType . java to ensure proper handling of column size and decimal
updated file deletion logic in DeadLetterQueueWriterTest to skip the current writer head file to ensure that only the current writer head file is processed
changed the method from toHexString to toJsonHex in TronJsonRpcImpl . java to improve clarity and consistency in data representation
rename ErrorHandlerController to Error403Controller and create new Error404Controller and Error403Controller files to improve organization and clarify error
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in both ` UnixTerminal
[ netbeans - 4892 ] fix fix for tiny . toarray ( ) on java 11 +
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4892 . java :
updated method names from ` getDateConverter ` to ` getLdapDateConverter ` in multiple classes to improve clarity and consistency in naming conventions
pdfbox - 4892 : do n ' t try to extract the id _ tree entry from the destination name if it exist
updated error message formatting in JavassistUtils . java to include class loader context to improve clarity of error messages for better debugging
updated the handling of reader and writer exceptions in LargeStreamletTest . java to improve clarity and correctness of exception assertions
updated the page setting logic in HomeFragment to increment the extra pages based on user preferences to ensure correct handling of extra pages based on user preferences
added error handling for broken gaussian image allocation in AndroidImplementation . java to improve robustness by preventing image processing errors during image processing
added @ SuppressSubnodes annotation and modified return statements in BaseParser . java and ImplicitActionsConverter . java to improve code clarity and maintain
refactor FDFParser instantiation to use try - with - resources for better resource management to ensure proper resource handling and avoid potential memory leaks
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed for the project
added a shell command for input key event 82 in AbstractLauncherUiTest . java and removed an assertion in LauncherInstrumentation . java to
added JSON serialization to the filenameToUrl file in FileDumper . java to facilitate the writing of the output directory to a JSON
bugfix # 22626 , reset resultsnotified flag on shutdown
fix blenderhelper . loadimage ( ) method to return an image instead of texture .
updated assertions in test files to remove the " application : " prefix to ensure consistency in test case naming conventions
updated the number of isbn randomizers from " 9781797745008 " to " 9781797845005 "
updated notification sound configuration to use Uri from preferences to improve flexibility in setting notification sound based on user preferences
added a method ` reportLoopCount ` to handle loop count reporting in ` RootNode . java ` to facilitate reporting of loop
added a condition to log the finalization of the version for a cluster and modified the merge call to include a boolean parameter to ensure that the
server : fix npe in listregionidandstatesearch when regionid be null
removed duplicate call to streamManager . open ( ) in ItemOrientedStep . java to streamline code by eliminating redundancy
added a new file ` CountedLoopProblem . java ` that implements a random number generation algorithm to demonstrate the behavior of a
[ gr - 20684 ] replace metaspacemethod parameter with varargs in hotspotgraalruntime . executecompiledmethod
[ gr - 20684 ] do n ' t set pending _ failed _ speculation _ offset for long field .
updated KafkaStreamsTracing and ITKafkaStreamsTracing classes to use ValueTransformerWithKeySupplier instead of TransformerSupplier to enhance tracing capabilities for better
add ` ` total point ' ' and ` ` received point ' ' to constant sum question
replaced DynamicColors . applyToActivitiesIfAvailable ( this ) with DynamicColors . applyToActivitiesIfAvailable ( this ) in BaseApplication . java
added thread management and stack dump functionality in CloseRace . java to improve error handling and debugging for child threads
updated the return value in IntPointField to return intValue ( ) instead of a fixed value to ensure that the return value is converted to integers
updated arcSize from a static integer to a double arcSizefraction and adjusted related calculations to improve accuracy of the arc size calculation based on the
updated veryHighWidth and ratioWidth values from 768 to 640 in AddAndScaleMultiImage . java and ImageBorderCuttingWizard
rename ` minifySqlEnabled ` to ` shrinkWhitespacesInSql ` across multiple classes to improve clarity and consistency in naming conventions
removed the ` waitForStateTransitionToEnd ` method and updated its implementation in ` WorkProfileTest . java ` to streamline state transition handling
added imports for CasCoreConfiguration and CasCoreHttpConfiguration in multiple test files to enhance configuration management for CAS - related components
replace raf . readLong ( ) with DataIO . getLong ( ) for reading single byte arrays to improve performance by reducing the number of byte
camel - 17827 : camel - http - add option to pass header to camel - aws2 - http - dsl . thanks to
refactor the creation of the proxy classpath in DeclarativeHintsParser to use a builder pattern to improve code readability and maintainability by
include voice and audio in the list of scope element in the list of element in the defaultscriptscopeprovider
added methods to get and set the layer manager in AnimComposer and modified animation event handling in AnimEvent to improve layer management functionality and
added a check to return early if the queue is empty in DeferredHandler . java and removed unused method showDefaultScreen in Workspace . java to
added null checks and improved exception handling in MapRecordProcessor and TezProcessor to enhance error handling and provide more informative logging for better
refactor the center and center2D declarations in CylinderRegion . java for consistency and clarity to improve code readability and maintain
replaced manual exception handling with JUnit ' s ExpectedException rule to improve test clarity and maintainability by using a more general ExpectedException
added null check for ` SimpleQuery . NO _ PARAMETERS ` in ` QueryExecutorImpl . java ` and created a test for multi -
do n ' t customize the environment if it ' s not explicitly set
added a new parameter ` rctag ` to the API endpoint in ` ReviewInterface . java ` to enhance API functionality by allowing users to
refactor Test class to improve code readability to enhance maintainability and facilitate future development
updated PBEKeySpec to use keyLength instead of blkSize to ensure correct key length is used for password processing
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a call to writeSectionDefinition ( ) in RtfDocumentHeader . java to enhance section definition handling in the document header
added distance calculations and improved accuracy checks in GpsLoggingService . java and Maths . java to enhance accuracy and error handling for large
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 classes to improve code readability and maintainability by reducing
doc : generate sample code in the java microgenerator ( # 49 )
replace boolean fields with Reference and WeakReference for rootNameFn , sourceFilterFn , and sourceFilterFnHash in InsightFilter . java
replaced binary search with direct addition for data and added entries to streamline code and improve readability by eliminating unnecessary binarySearch operations
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` and removed the ` ThemedPreferenceActivity ` class to simplify the
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of
updated assert statement formatting in FST . java to improve code readability and maintain consistency
added an assertion to check if the security policy is a file before proceeding to ensure that the policy is a valid file before proceeding
camel - olingo2 : make it easy to override the olingo2component . getconfiguration ( )
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow for more time for recovery operations to complete
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify the logging output for better readability and maintainability
add ability to publish an image by http using xmpp .
camel - 8274 : camel - netty - do n ' t throw an exception if the producer do n ' t exist .
updated the URL template pattern in BalancedClickhouseDataSource . java and added unit tests in BalancedClickhouseDataSourceTest . java to enhance
added a system property to disable JSR199 compilation in FragmentActivator . java to enable the use of JSR199 compiler in the application
added support for null string values in CSVRecordReader and related classes to enable flexible handling of null values in CSV format
added LiquibaseService import and annotation to multiple connection classes to ensure that Liquibase services are not skipped during connection processing
updated references from ` J . CompilationUnit ` to ` JavaSourceFile ` in ` VariableNameUtils . java ` to ensure compatibility with Java source
change command and state trigger to use ' command ' / ' / ' / ' / ' / ' / ' / ' / ' /
corrected the exception type from ` BeanCurrentlyInCreationException ` to ` BeanCreationException ` in ` TraceWebAutoConfiguration . java
added deprecation comments for " zkCredientialialsProvider " and " zkCredentialsProvider " in SolrXmlConfig . java and updated test
updated the mana tablet ' s damage and display methods in ItemStack and ItemStack classes to simplify the mana tablet ' s
added a method to set the identifier collection in the mCurrentCallEvent to ensure the correct identifier collection is used for the call event
removed the import of DictionaryCompoundWordTokenFilter and its associated classes from TestRandomChains . java to streamline the code by eliminating
updated thread pool executor string from " - % d " to " " in ScryptUtil . java to improve clarity and consistency in thread
refactor GeneratedCode class to improve code organization to enhance maintainability and readability of the codebase
added a null check for the variable ' definition ' in TypeDefinitionRegistry . java to ensure that the variable ' definition ' is not null to
added visibility setting for the share with - me icon in the LocalFileListAdapter to improve user interface by hiding the share with - me icon
updated stylesheet links from HTTP to HTTPS in DefaultLogoutPageGeneratingFilter , LogoutPageGeneratingWebFilter , and LogoutPageGeneratingWebFilter classes to
updated imports and method signatures in RouterFilter , RouterServerListFilter , RouterDistributorTest , and RouterDistributorTest classes to improve code
enhanced assertion message in TestIndexWriterMergePolicy to include segment count and index to improve debugging by providing more context during assertion failures
mark multiple classes as deprecated to indicate that these classes are outdated and should no longer be used
added a null check for the context context in the CrawlerSessionManagerValve and created a new test for context awareness to ensure that the
modified the ` getJspApplicationContext ` method to return ` JspApplicationContextImpl ` based on the ` IS _ SECURITY _ ENABLED ` flag to enhance security
refactor length calculation logic in RocketComponentConfig . java to use minimum and maximum values for improved boundary handling to enhance accuracy of component
replaced ` NonceService ` binding with ` NonceService . in ( Scopes . SINGLETON ) ` in ` OpenIDAuthenticationProviderModule .
added a call to ` thenCompose ` for updating child links in ` FileWrapper . java ` to enhance the functionality of child links in the
refactor ` doExecute ` and ` buildRealURL ` methods to accept ` URI ` instead of ` String ` for improved parameter handling
increase the timeout duration from 100 milliseconds to 500 milliseconds in the publishWithDelay method calls to improve test stability by allowing more time for
add a flag to indicate whether the shift code should be always override .
[ hotfix ] [ network ] do n ' t wait for zk leader to reach out to zookeeper
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated filter condition in AbstractKerberosDescriptorContainer to use isReference ( ) instead of getName ( ) to improve accuracy in identifying reference service names
updated the ` newInstance ` method signatures to include a ` noop ` parameter across multiple cache factory classes to enhance flexibility by allowing conditional creation of
added a sleep delay before catching IOException and InterruptedException in TestListenTCPRecord . java to ensure proper handling of potential IO and interruptions
updated the handling of methodCall ' s arguments in PatchExtensionMethod . java to ensure correct assignment of original arguments to improve code clarity and
replaced ` Map ` with ` Set ` for storing multiple ` RawNativeLibraryImpl ` instances and updated related methods accordingly to improve performance and
added namespace support for ` ` apply - sequence ' ' and ` ` ignore - send - failures ' ' attribute in ` ` router ' '
removed unused x509 reference from ClientKeyPublisherMapping and JwkViewResolver classes to streamline code and improve maintainability by eliminating
refactor reader assignment logic in QueryComponent . java to ensure proper handling of single readers to improve clarity and maintainability of the code
updated the parsing logic in ValueSourceParser to use Math . max and Math . min for the " max " and " min " functions to
removed conditional check for focusable and pointer events in the return statement to simplify return logic for better readability and maintainability
removed unused imports from Highlighter , SpanGradientFormatter , and TokenSources classes to streamline code by eliminating unnecessary dependencies
cloudstack - 4892 : add uuid to the list of user to the list of user that have the same name in the list of
added conditional annotations and updated flow builder services in CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to enhance configuration flexibility
updated SQL command parameters and modified table counter management in WriteJdbcPTest . java to improve connection handling and enhance database connection management
removed conditional check for the " editor . laf " preference before setting the look and feel in DefaultPlatform . java to simplify the code
updated references from ` getDesiredStateEntity ( ) ` to ` desiredStateEntity ` in ` ServiceComponentHostImpl . java ` to
simplified margin calculations in FloatingTaskView . java to improve code readability and maintainability by eliminating redundancy
added a condition to break the loop in RootFolder . java and updated the status line in NavigationShareTab . java to improve user experience by
removed the initialization of threadId in CPUCallGraphBuilder . java to simplify the code by directly passing the thread name directly
ggb - 1889 fix the problem with the ` ` no toolbar ' ' button in the perspective
added NetworkAddressChangeListener to HomekitImpl and updated logging messages for clarity to enhance network address handling and improve logging clarity
hbase - 17446 fix flaky testhdfsseventsinkonminicluster . testhdfsseventsinkon
replaced ` Optional . < SourcePath > absent ( ) ` with ` Optional . absent ( ) ` for ` prefixHeader ` and `
added null check for the message in ExceptionHandlerRegistryFactory . java and a corresponding test in ExceptionHandlerRegistryTest . java to ensure robust handling
changed the ` nextID ` variable to be volatile and modified the ` getSize ` method to use ` nextID ` to ensure thread safety and
http : / / issues . apache . org / jira / browse / amq - 4237 - make test more resilient
updated ` AbstractThinArchiveArg ` , ` FileListableLinkerInputArg ` , ` SourcePath ` , and ` SourcePath
replaced StringBuffer with direct usage of ' from ' and ' to ' in IllegalArgumentException to simplify exception handling and improve code readability
updated ` OrdinalMappingAtomicReader ` and ` TestOrdinalMappingAtomicReader ` to include a custom index field name in ` FastTaxonomy
modified the time calculation logic in Instant . java to handle negative seconds and nanos correctly to ensure accurate calculation of milliseconds based on input values
updated attribute retrieval to use the name of the buffer type in OGLESShaderRenderer and LwjglRenderer to ensure the attribute
added block update functionality to the CopyPaste class to enhance the functionality of the CopyPaste class by allowing the removal of block update scripts
added a new file ` TestCMoveLimitType . java ` with methods for testing character movement limits to facilitate testing of character
removed redundant calls to resetTemporalAttributes ( ) in ChannelState . java and added contains ( RecorderType ) method in RecordConfiguration . java
( chore ) camel - sql : fixed checkstyle issue in camel - sql - parser
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor color handling in Main . java and add printVersion method in VersionCommand . java to improve code readability and maintainability by central
replaced the variable ` storedToken ` with ` hash ` in ` InputStreamBinder . java ` and refactored the ` validateToken `
improve error message when iib . eof be 0
added unit test to verify deletion of group member from a non - existent group .
( chore ) camel - aws2 - * : remove unnecessary array creation
deleted the V2ReplicationProtocol . java file to the protocol implementation is no longer needed for replication operations
updated references from ` ImmutableSortedSet < BuildRule > ` to ` ImmutableSortedSet < SourcePath > ` across multiple classes to improve cl
added two new demo classes , ConstructorArgsDemo . java and StrictDemo . java , and refactored StupidFinal . java to
[ geot - 5248 ] directtemplatefeaturecollectionfactory should close iterators in a threadlocal instead of a local list
updated assertion condition in WriteResponseHandler . java to include a value of 2 * DatabaseDescriptor . getReplicationFactor ( ) to ensure that the
added a null check for the index number in ItemRowAdapter . java to prevent potential NullPointerException when accessing item properties
corrected the spelling of " showAnchestors " to " showAncestors " across multiple files to improve clarity and consistency in
added a check to return early if the width is less than 12 in KBBase . java to optimize performance by avoiding unnecessary processing when the
updated equality check in ChangeLogParameters to use equals method and added a new test for parameter value equality in inner files to ensure correct comparison of
changed the ` loggers ` variable from static to final in ` LogFactory . java ` to enforce immutability of the ` loggers ` map
modify return statement to use getBasePlot ( false ) instead of getBasePlot ( false ) to ensure that the return value is consistent with the current
added an initial creation parameter to the createUploadDir method to control the creation of the upload directory based on the initial creation status
added a ` sendStatus200 ` parameter to multiple classes and updated related constructors and methods accordingly to enable control over HTTP status code handling in the
fix index out of bound exception when multiline comment have double slash comment on first line ( # 373 )
added imports and implemented file type association handling in BuckModule . java to ensure proper association management for file types in the application
replaced specific imports with wildcard imports and changed method return types from ToLong to ToInt in ComposedUtil . java to simplify import statements
added a constant for the unsupported RTM OS error and updated error message handling for JVM startup to improve error messaging for unsupported OS versions and ensure
reformatted code for consistency and clarity in AccountsActivityTest . java to improve code readability and maintainability
refactor Player class to improve code readability to enhance maintainability and facilitate future updates
added import for ChannelTypeUID and a static method mocking package import in AbstractModbusOSGiTest . java to facilit
fix checkstyle issue in util / polyglot / polyglotexceptionimpl . java ( ) .
added a new ` FontsContractReflector ` interface and a static method to reset the system context in ` ShadowFontsContract ` to
added support for time zone handling in TimeGranularity and updated time query logic in PinotDataSourceDimensionFilters and PinotDataSourceMaxTime to
added null checks and improved flow handling in ControlFlow . java and Guard . java to enhance robustness by ensuring proper handling of null values
updated assertions in Assert . java and ArrayEqualityAssertTest . java to improve error handling for array comparisons to enhance clarity and debugging by providing
added a default case for the ` default ` case in ` WindowClickLogic . java ` to ensure proper handling of default cases in ` Window
corrected the calculation of the index in MeshBuilder . java to ensure proper handling of integer values during indexing
nifi - 10650 : remove unused controllerserviceprovider field in standardprocessscheduler
added support for processing ResolvedJavacPluginProperties in KotlincToJarStepFactory to enhance support for KAPT3 plugin
updated RESCROLL _ DELAY value and refactored conditions for snapping to the next page in PagedView . java to improve
added permission checking and refreshing shortcuts based on user permissions in LauncherModel and DeepShortcutManager to ensure shortcuts are refreshed only when necessary for
added handling for the HISTORY _ SEARCH _ BACKWARD case in ConsoleReader . java to support search backwards functionality in the console
added null check for core name in CoreAdminHandler and improved error handling in CoreAdminHandlerTest to enhance robustness by preventing null
added marker selection functionality in NearbyMapFragment to ensure the bottom sheet is hidden when a marker is selected
added error handling to print stack trace in FileSyncAdapter . java to improve error reporting for better debugging
refactor test assertions in TestMemoryAwareness to use OutputAnalyzer for better error handling to improve code readability and maintainability by reducing
updated FeedQueues . java to conditionally filter feeds based on application settings to enhance the handling of feeds based on application settings for better user experience
log a warning if defaultdrmsessionmanager be access on wrong thread .
updated AndroidBinaryDescription to use Locale . US for case conversion and added a setter method for packageType in AndroidBinaryBuilder to ensure consistent behavior
updated XML MIME type from " text / xml " to " application / xml " across multiple test files to ensure correct application context is used for
updated the instantiation of ` confFile ` and ` config ` to use ` INSTANCE . confFile ` instead of ` INSTANCE . confFile `
updated the waitUntilReadyAndTimeout method call from " sleep 5 ; exit 1 " to " exit 1 " to correct the timeout duration for
updated import statements and variable types from IntMath to LongMath in HiveExpandDistinctAggregatesRule . java to improve precision and prevent potential overflow issues
added multiple checks for headless environment in mmm Toolkit . java and ppp Toolkit . java to ensure proper exception handling for head
updated the conditional check in ExoflameFurnaceHandler to include a matching check for the current recipe to ensure smelts are
add ` ` move _ thread _ count _ description ' ' to solver log output
[ rhirresourcedao ] fix npe when use rev - include with same sp name .
added a new test class ` Issue582Test ` to validate the functionality of ` BTreeKeySerializer ` in a map database to ensure
[ native ] add decimal overflow test in native - image
refactor LoadingCache class to improve caching mechanism to enhance performance and maintainability of cache management
added a new rule " AvoidNonConstructorMethodsWithClassName " to the naming rule to prevent non - constructor methods with class names in the test
simonstewart : catch staleelementreferenceexception in expectcondition . isselected ( )
refactor view existence check in ViewExistsPrecondition and add hasView method in DatabaseSnapshotGenerator and JdbcDatabaseSnapshotGenerator to improve error handling
refactor DOMUtil class to improve code readability to enhance maintainability and facilitate future development
added translation calculations for task view animations in TaskViewUtils . java and a logMatrix method in Utilities . java to enable logging of matrix values
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and RotationHelper .
added a new method ` walk ` to ` TempFSTTermsReader ` and modified ` TempTermOutputs ` to handle edge cases to improve
added SolrQueryRequest parameter to the create method across multiple factory classes to enhance request handling capabilities in the document creation process
added tests for handling null values for post content and announcement conditions in SingleTableMySQLTriggerTest . java to ensure that null values are handled correctly
refactor comparator management in FieldValueHitQueue and TopFieldCollector to use a dedicated setComparator method to improve code clarity and maintainability
updated SQL query strings in PhoenixQueryBuilderTest . java to use double quotes for column names to enhance readability and maintain consistency in
wait for spark initialization inquestertest . testinitialization ( )
added constants and methods for retrieving and saving total storage properties in DynamicPropertiesStore . java to improve code readability and maintainability by centralizing
added support for handling ` NinjaProperties ` in ` AssetsController ` and updated URL retrieval logic to accommodate dev mode for streaming files
updated the method to check if a map mark key exists in MapMarksManager . java to ensure the correct key is used for the map mark
updated methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to include TokenRewriteStream as a parameter to enhance flexibility in handling token
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` Main ` classes to
refactor file loading and error handling in JxBrowserManager and FileUtils classes to improve code clarity and handle potential exceptions during URL loading
updated image format comparison from ` = = ` to ` . equals ( ) ` and added a check for the " AppVersion " property to
updated the method call from ` getBridgeUID ( ) . getId ( ) ` to ` getUID ( ) ` in the Somf
temporarily disable flaky test on github
added SSL configuration properties to OpenWireConnectionTimeoutTest . java and removed the DefaultTrustManager class to streamline SSL configuration and improve resource management
added handling for NaN values for meter values in DynatraceExporterV2 . java to improve error logging and provide clearer feedback for
added a method to remove a session ID from the session info to ensure that the session ID is properly removed from the session info
added hostname setting for empty alerts in HeartBeatHandler . java and improved formatting in AlertReceivedListener . java to ensure proper hostname
simplified the return statement in ChannelEndPoint . java to improve readability and maintainability of the code
( chore ) camel - kjar : move kmodule . xsd from kie - api to kie - api
added a test for seekTo mode in ShadowMediaPlayerTest and implemented seekTo method in ShadowMediaPlayer to ensure correct behavior of seekTo
updated method names from ` createTask ` to ` createThrowingTask ` across multiple executor classes to improve clarity and consistency in naming con
added conditional border settings for the tab close button in CloseButtonTabbedPane to enhance the visual appearance of the tabbed pane based on
added request method and read timeout settings in TSPTimeStampService . java and refactored test assertions in TestSignatureInfo . java to improve
added new methods for creating XStream instances with ClassLoader and ReflectionProvider to enhance flexibility in creating XStream instances with specific reflection configurations
added error handling for diamond application in Attr . java and created a new DiamondRaw class in Neg12 . java to
[ calcite - 4892 ] fix checkstyle violation in reloptutil
updated validation conditions for setting id and value in Http2Settings . java to improve clarity and correctness of validation logic
deleted the MapInterfaceTest . java file to remove unused test files to streamline the codebase
removed unnecessary session insert operation on a disposed session in SessionsPoolTest . java to improve test reliability by preventing operations on dis
added root object and end object for the FeatureCollection object in GeoJsonWMSBuilder . java to ensure that the JSON object is written correctly
updated the method for setting the selected index in PopupMenuButton to use intValue ( ) instead of a getter method to improve code readability
added a method to check if the taskbar stashing can be currently unstashed in the application to ensure that the taskbar stashes
camel - 16462 : camel - core - fix camel - core - camel - xml to work with camel - jbang - camel -
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for waiting for expected events to enhance flexibility in event mismatch handling by allowing
added a new file ` HeaderFixer . java ` that implements file processing for licence headers to facilitate the processing of
added functionality to send a broadcast for the first load complete action in the launcher to enhance user experience by allowing users to choose which app to load
deleted the SuperJumperAndroid . java file to the functionality was no longer needed in the project
modified the return value of ` SystemTableScan . java ` to use ` table . isDistributed ( ) ` instead of ` true `
added interfaces KeyValuesProviderAware and ObservationConventionAware with their respective getter and setter methods to improve clarity and functionality of the Observation
added miss block to the list of resource location in the loader . processidrematches method
updated return statements in AtomicIntegerArray , AtomicLongArray , AtomicLongArray , and AtomicReferenceArray to cast ' i ' to long to ensure
added caching mechanism for formatting and format records in HSSFCellStyle . java to improve performance by reducing redundant retrieval of format strings
updated the query parameter in RemoteAuthenticationEndpointTests to include username in the response to ensure that the user ' s attributes are filtered based on the
replaced ` def . needsInput ( ) ` with ` def . finished ( ) ` in ` DeflateCompressor . java `
updated logging to include container information and page index in getStatsLogManager ( ) to improve logging clarity by including workspace and page index information
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
remove deadlocktest . java
added null checks for newInput and improved marker handling in BugContentProvider , BugGroup , and DeltaInfo classes to enhance robustness and
added a new menu item " Reopen in the Browser " and modified the server handling logic in JavaScriptEditor . java to improve user experience by
added a new error message for unsupported multi - time output in the SemanticAnalyzer class to provide clearer error handling for cases where multiple output cannot
added an ` EqualPredicate ` parameter to the ` addEntryListener ` method in ` BasicTest . java ` to ensure proper handling of null
fix coordinatearray . reverse ( ) to return early if the coord array be < = 1
updated the formatting of the setOpen method call in ToolbarPanel . java to improve code readability and maintain consistency
added a new boolean variable ` first ` and initialized it to false in ` TestPayloads . java ` to ensure proper handling of the first
replaced ` enterOverviewMode ( ) ` with ` showOverviewMode ( true ) ` in ` Launcher . java ` to simplify the
added destination setting for msgDispatch in NetworkRouteTest . java to ensure the correct destination is used for message dispatching
change the return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure that the maximum
[ java ] fix checkstyle violation in nestedarithmetictest . java
replace pending . writerIndex ( ) with pending . addComponent ( true , buffer ) in HttpClientRequestImpl . java and update buffer handling in Http
updated regex patterns in GetMavenDependenciesTask . java for improved clarity and consistency to enhance code readability and ensure correct formatting of
pdfbox - 4071 : remove unneeded code , a suggest by valerybokov
removed debug print statement from ReferenceUtil . java to clean up the code and improve readability
refactor visiblefieldpredicate to be a functional interface so that it can be use by a functional interface
added configuration options for solidity JSON - RPC settings and updated related classes to utilize it to enable or disable the JSON - RPC Solid
added a type check before removing a drop target from the drag controller to ensure that only valid DropTarget instances are removed
refactor stub jar creation logic into a separate method for clarity and maintainability to improve code readability and maintainability by reducing duplication
added new features for setup wizard , homing , and workflow helper in StartPageTopComponent . java to enhance user experience by providing guidance
remove duplicate call to ` scheduleWithFixedDelay ` from ` StorageService ` to streamline the code by eliminating redundancy
simplified the conditional check for the ' available ' variable in OnlineTestCase . java to improve code readability and reduce unnecessary type
changed the return attribute from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure that all users are returned instead of
refactor onIdleTimeout handling in HttpChannelState . java and add failure listener in HttpChannelTest . java to improve error handling and ensure
changed the CreateEndPoint class to extend Invocable . NonBlocking instead of implementing Runnable to enhance flexibility in handling non - blocking operations
refactor TableBlockParser to use a constant for table header separator and update the conditional check to improve readability and maintainability of the code
updated the return value from 32.0 f to 31.5 f in the Camera class to improve the accuracy of the camera ' s rendering
added a preference for starting on boot setup in GpsSettingsActivity and updated return values in Utilities and GeneralLocationListener to ensure compatibility with the
updated the client secret length from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to accommodate larger values for improved
updated assertion messages in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include " name " parameter to clarify the purpose of the parameter
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to mark the test as ignored due to a race condition
added exception handling to input and output pinotfs methods in SegmentGenerationAndPushTaskExecutor . java to ensure proper initialization of PinotFS
added locale check for date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure proper date formatting based on the user ' s language
added MetalLookAndFeel import and set it in bug8032878 . java to enhance the visual appearance of the UI
added a ` @ PreDestroy ` annotation and synchronized the ` sendMessage ` method in ` Bot . java ` to ensure proper resource management and prevent
removed the message from the error message in the error handler to simplify the error handling by directly passing the throwable directly
refactor method parameters from ' module ' to ' from ' for clarity to improve code readability and maintainability by using more descriptive
added handling for CmdLineException in PinotAdministrator . java to improve error logging for better debugging
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and added deprecated ` hashCode ( ) ` methods in
updated variable types from ` Boolean ` to ` boolean ` in ` CustomPlaybackOverlayFragment . java ` and ` ImageButton . java ` to
updated zoom level settings in BasicMapViewer . java to use zero values instead of a fixed value to ensure consistent zoom behavior across the application
refactor process user and group retrieval in DrillRoot . java to use ImpersonationUtil for better consistency to improve code maintainability and
replaced ` AccessController . checkPermission ` calls with ` sm . checkPermission ` in both ` UnixFileSystemProvider ` and ` WindowsFileSystemProvider ` ,
added ArgumentExtractor support to DelegatedClientAuthenticationAction and updated service resolution logic to utilize it to enhance service retrieval flexibility by allowing argument
changed the ` defaultGroup ` variable from non - final to final in ` NacosServerRegisterRepository . java ` to enforce immut
fix tile size changer cache not be destroy
removed redundant ` addInfoRow ` calls in ` CustomPlaybackOverlayFragment . java ` and streamlined the logic in ` InfoLayoutHelper .
removed the method ` cleanEntriesForFeedsWithoutSubscriptions ( ) ` from ` DatabaseCleaningService ` and added a new method ` clean
replaced instances of ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to stream
nifi - 1769 : use temporaryfolder instead of temporaryfile in filebasedclusternodetest
fix for conic point [ 1 , 1 , 1 ] , 1 , 2 , 1 , 1 , 2 , 1 ] in conic
reformatted code for consistency in RandomAccessReader . java to improve readability and maintainability of the code
added @ SuppressWarnings ( " unchecked " , " vararg " ) annotations to Fields and MockitoBeforeTestNGMethod classes to suppress unchecked warnings
refactor CImage and CPlatformWindow classes to improve image handling and array manipulation to enhance code readability and maintainability by centralizing image
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder . java ` to align with the
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple files to clarify the purpose of
replaced manual null checks with Objects . equals for equality checks in multiple classes to improve code readability and reduce boilerplate code
updated method names from ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` and added nullability annotations to improve clarity
added verification for LOCATION _ VIEW _ HTML _ BAD _ REQUEST , LOCATION _ VIEW _ FTL _ HTML _ NOT _ FOUND , and
renamed method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations in ` DeviceProfile . java `
adjusted padding height and list view position offsets in DetailFragment and ListFragment to improve layout responsiveness and ensure proper margin handling
solr - 10650 : do n ' t swallow interrupted exception in zkstatereader
added null checks for field values in HttpFields . java and implemented a test for empty headers in RequestTest . java to ensure robust handling of
added a check for the availability of static nat rules in the network elements to ensure that the static nat service is only supported in the specified network
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure the
added a method to remove extra empty screens from the workspace to ensure that extra screens are removed when necessary
added a fixedWidth property to BitmapFont and adjusted xAdvances calculation based on glyph width to improve rendering accuracy by allowing glyph width adjustments
removed the ` showTitle ` parameter from the ` createFragment ` and related methods in ` ChangeLogFragment ` to simplify the fragment creation process
added new methods for preEvent , postTransition , stateMachine , and stateMachineError in AbstractStateMachineFactory . java to enhance state management
refactor ConfigDescriptionProvider class to improve configuration handling to enhance maintainability and readability of the code
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf initialization in StorageBasedMetastoreTestBase and TestStorageBasedMetastore
added a boolean variable for sorting by count in FacetComponent . java and updated related logic in TestDistributedSearch . java to improve code read
updated the way the ` checkstyle . cache . file ` property is set in ` CheckstyleReport . java ` to use a dynamic configuration
added logic to retrieve and stop the Jetty server in the DeleteInactiveReplicaTest class to improve the reliability of the test by stopping the
added a filename parameter to the FileActionsDialogFragment constructor and updated its usage in OCFileListFragment to allow customization of the file name
added a constant for invalid direction in CellLayout . java to improve code readability and maintainability by using a consistent INVALID _ DIRECTION constant
updated API endpoint paths in InnerTransferRequest . java and AccountAPI . java to improve clarity and organization of API endpoints
fix sink stress test for job with non - transient execution id
added a new annotation interface ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package
replaced specific imports with a wildcard import and added multiple visitIdentifier methods to enhance code readability and ensure proper handling of fully qualified types in
added a method to set the action text color in AuthenticatorActivity to enhance the visual appearance of the application
added ` find ` method to multiple classes and updated imports in ` AbstractManager ` , ` StreamSupplierComponent ` , and ` MockManagerImpl
rename methods and variables from " addTestSteps " to " createTestSteps " for clarity to improve code readability and maintainability by
corrected the spelling of " noArgMethod " to " validNoArgMethod " in multiple test files to improve code readability and
added a ` cancelClient ` method to ` RpcServer ` and updated ` startDriver ` method in ` SparkClientImpl ` to handle client
added ` getImplicitPreCoercionValue ( ) ` method to multiple classes and updated handling of null attributes in ` Skylark
initialized the ` lastDisplayedUser ` variable to an empty ` Optional . empty ( ) ` to ensure that ` lastDisplayedUser `
added a new method ` findAll ` to ` QueryDslMongoRepository ` and updated its usage in ` AbstractPersonRepositoryIntegrationTests ` to
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to avoid potential NullPointerExceptions during stop operations
planner - up : do n ' t exit the warm - up loop in case of failure .
feat : add xread ( ) and xreadgroup ( ) method to multi - key pipeline ( # 3396 )
refactor ` LinkedBufferInput ` and ` StreamInput ` classes to remove unnecessary ' this ' keyword and update method calls accordingly to improve code
added EnableWebSecurity and WebSecurityCustomizer beans to CasWebAppSecurityConfiguration and updated method names in CasWebSecurityConfigurerAdapter to
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to include
added a new method ` registerProviderInternal ` to ` ShadowContentResolver ` and refactored ` ContentProviderController ` to use it to
updated the ` ClassReader ` constructor to use ` ClassFile . Version ` instead of ` Version ` to ensure compatibility with ` ClassFile . Version `
added keep - alive configuration to SingleConnectionManager to enhance connection management by allowing keep - alive behavior
[ java ] use ` ` supplier ' ' instead of ` ` supplier ' ' for flow control strategy .
g3d locus : do n ' t return false for point with no point in 2d
added concurrent map imports and improved error handling in multiple classes to enhance thread safety and ensure proper resource management during WebSocket operations
refactor WebDriver initialization to support multiple WebDriver types based on user - defined screenshots to enhance flexibility in managing Selenium WebDriver instances based on
replaced JUnit assertions with AssertJ assertions in multiple test files to improve readability and maintainability of the test code
remove trufflelanguage . getcontextreference ( ) since it be deprecate .
set ` e ` to ` null ` in ` StubberImpl . java ` and add new test classes for handling bad exceptions to ensure proper
updated error handling in Actor . java and Group . java to improve clarity of exception messages to enhance code readability and provide clearer error
refactor location permission handling in ` LocationPickerActivity ` to use ` LocationPermissionsHelper ` for improved camera position management to enhance user experience
fix for http : / / issues . apache . org / activemq / browse / amq - 4892 - add example for
added import for CookieSpecs and set it in requestConfigBuilder to standardize cookie specifications for HTTP requests
replaced a conditional check with a method call to ` overlaps ` to simplify the intersection logic for better readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and removed logging in AirspyT
added ` monitoringUrl ` parameter to ` ScrollingPanel ` and ` SystemInformationsButtonsPanel ` constructors to enhance the ` ScrollingPanel
[ hotfix ] [ k8s ] remove unused config option kubernetes . service . create - timeout
updated icon resource assignment in NearbyListFragment to differentiate between landmark , city , and empty photo icons to enhance user interface by
added a null check for the package before retrieving its name in DefaultPackageScanClassResolver . java to avoid potential NullPointerExceptions when the package is
added a new file ` PrintInlining . java ` containing a main method that prints " Passed " to demonstrate the
fix ( javadoc ) : fix nested brace in javadoc tag
[ java ] remove unused field from archivetest . java
updated the method calls from ` getEdges ( ) ` to ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTable . java `
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to streamline dependencies and improve code clarity
updated logging format in VideoManager . java to use floating - point values to improve clarity and consistency in logging output
do n ' t trigger room removal event when cluster be start .
updated the ' minimize ' attribute from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to ensure consistency in the configuration of the
added key settings for setFlipY and GenerateMips in TextureHelper . java to enhance texture management functionality for better user experience
replaced instances of ` PythonDslProjectBuildFileParser ` with ` CloseRecordingProjectBuildFileParserDecorator ` in multiple files to enhance
[ j2cl ] do n ' t execute normalization pass if it be a libraryNormalizationpass
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactoryTest
[ hotfix ] [ runtime ] fix npe in memorymanager . isfreed ( )
added JPA annotations for timestamp type in ConsoleSessionVO . java to enable serialization of timestamps in the database
added new files Hbs . java and HbsTest . java to implement TemplateEngine and handlebars in the io . jooby
added null and empty checks for HintMessage and improved message setup logic in ChatMessageAdapter . java to enhance robustness by preventing
updated the iteration method from ` keySet ( ) ` to ` values ( ) ` in ` ImportCsv . java ` to improve clarity and
danielwagnerhall : add test for waituntilalertdialogappears and waituntilconfirmdialog
added a condition to return null if distinct column indices are greater than 2 in ReduceSinkDeDuplication . java to ensure proper handling of
updated MiscUtils . java to improve path handling and error processing to enhance robustness by ensuring only valid paths are processed and improving error
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated dependencies from " websocket - server " and " websocket - client " to " jetty - websocket - server " and " jetty -
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4894 . java should
added logic to update the modified state of a sketch in the Editor class to ensure that changes are only applied when the saved program changes
replaced instances of ` new Double ( bytes ) ` and ` new Float ( value ) ` with ` return bytes ` in multiple Java files
updated method to retrieve timestamp instead of date in JdbcDataSource to ensure accurate data retrieval from the database
added a condition to check for " javax . naming . Context " in the object type of HtmlJndiTreeReport to ensure proper handling of
updated ` createDefaultDbOptions ( ) ` to return a ` Options ` object based on database name and added buffer size settings to enhance flexibility
updated edge type check from " double " to " mutual " in ImporterGEXF . java to ensure correct handling of mutual
replaced the static final integer FLAG _ SLIPPERY with a static import from WindowManager . LayoutParams . FLAG _ SLIP
truffleconstantfieldprovider : fix array dimension calculation for constant field .
added functionality to retrieve and set the Google Drive folder path in the PreferenceHelper class to enhance user experience by allowing users to customize the Google
ggb - 1881 shuffle suggestion , use enter / down instead of enter / down
added @ Nullable annotation to assertThat method signatures in Truth . java to improve null safety and clarity in method signatures
updated bitwise operations in ArrayUtil . java for better readability to improve code clarity and maintainability by standardizing return values
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to check for instrumented constructors to ensure proper error handling and
[ hotfix ] [ stream ] fix concurrentmodificationexception in streamin and streaminmanager
added ` isKeyguardSecure ` and ` setIsKeyguardSecure ` methods to ` ShadowKeyguardManager ` and updated ` ShadowKeyguard
added serialVersionUID fields to StringDialog . java to ensure proper serialization compatibility for the StringDialog class
updated regex in GrblUtils . java to replace single quotes with single quotes and added a conditional check for the length of overrideParts to
corrected the method name from " assertEmptyThrowsMutipleFailureExceptionForManyThrowables " to " assertEmptyThrowsMultipleFailureExceptionForManyThrow
modified the conditional statement in AsyncFileImpl . java and added a new test in FileSystemTest . java to ensure that drainAfterClose is called
updated LIGHTS _ NUM and LIGHT _ INTESITY from 4 to 8 and modified shader parameters and configurations in HybridLightTest
replaced instances of ` FakeProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` in multiple test files to ensure consistent retrieval of the
changed the type of ` PathWithLines ` from ` String ` to ` PathWithLines ` in the ` loadRerunFile ` method
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
removed the @ NotNull annotation from the TEST _ DIRS array in PubRoot . java to clarify that the TEST _ DIRS array
added a call to close the Shadow . directlyOn ( realObject , ParcelFileDescriptor . class ) in ShadowParcelFileDescriptor .
added a method to reset the prefix index in ` Stylesheet ` and modified ` BasisLibrary ` to use a thread - local counter to
added logging level for Jetty client connection in TestDistributedStatsComponentCardinality . java to facilitate debugging by controlling HTTP connection
added multiple calls to ` throwIfImmutable ( ) ` in ` IntList . java ` to ensure that the ` throwIfImmutable ( )
updated ` onApplicationEvent ` method to include ` @ NotNull ` annotation and improved URI handling in ` GrpcClientBuilder ` to enhance
use java . util . function . supplier instead of jline . reader . impl . defaultparser . impl . defaultparser . impl . default
fix race condition in insight . keysunchanged ( ) .
added platform detection for writing a manifest file in GenerateManifestStep . java to ensure proper handling of line endings on Windows to improve compatibility and
corrected the priority value from LOW _ PRIORITY to HIGH _ PRIORITY and added a new class RFE3531161 with a null check
added @ Nullable annotation to getConfigDescription methods in ConfigDescriptionRegistry and improved null checks in ThingResource to enhance code clarity and prevent potential
change return type of createcancellationexception ( ) from throwable to runtimeexception .
pdfbox - 4071 : do n ' t use cropbox when there be no image
refactor ManagerBase class to improve code organization to enhance maintainability and readability of the codebase
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to enable access to All Ap
refactor FragmentActivity initialization to use Robolectric ' s buildActivity method to improve code maintainability and leverage Robolectric
rename methods and variables from ` getFileCoordinates ` to ` processFileCoordinates ` and introduce ` getDecimalCoords ` method to improve clarity
rename ABCase classes from ABCase1 , ABCase1 , ABCase2 , and TestABCase7 _ 3 to TestABCase
updated parameter name from ' num ' to ' value ' in saveEnergyPriceHistoryDone method and added null check for getBlackholeAddress
modified the way the handler is set in OpenRocketViewer by introducing a variable to improve code readability and ensure the handler is properly
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` that implements a recipe to change the groupId and artifactId of a specified Maven
refactor file system initialization and add segment check in IndexingJob . java and SegmentChecker . java to improve code readability and ensure segment
updated comparison from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to ensure
refactor PreprocessorDelegate to use Supplier for managing replacement paths and source paths to improve code readability and maintainability by reducing boiler
rename JsonExamples class to Examples and update package - info . java to improve clarity and consistency in naming conventions
added debug logging statements in ViewExtractor . java for better traceability to facilitate troubleshooting and debugging during directory operations
refactor FindsByLinkText class to improve code readability to enhance maintainability and facilitate future updates
added a new file ` Main . java ` containing a main method that prints " java oop entry point hit " to demonstrate
fix potential race condition in sip account registration wizard
removed duplicate continue statements in NativeScanner . java to improve code readability and maintainability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` to organize
replaced direct usage of ` ImmutableSet ` with ` Supplier ` for ` queriedDeps ` and ` exportedDeps ` to improve performance by reducing
updated the method call from ` stream . count ( ) ` to ` size ( ) ` in ` DistBuildArtifactCacheImpl . java `
added content encoding handling in ExtractingDocumentLoader to ensure correct metadata is used for content types
cloudstack - 4892 : fix databaseconfig . setusername ( ) and setlong ( ) to use ?
added a null check for the slot in the WindowListener class to prevent unnecessary processing when the slot is - 1
add -- ignore - transitive - repositories option to maven - cli to control whether to ignore remote repository
removed duplicate injection of BackgroundJobManager in ContactsPreferenceActivity to streamline dependency injection for clarity and maintainability
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with the latest Android features and improvements
added null check before closing the selection in NIOTransport . java to avoid potential NullPointerException when selection is null
added a condition to break the loop if the matcher ' s start and end are the same and the matcher ' s start and end to ensure
added server . port = 0 to the IntegrationTest annotation to ensure the integration test runs with a specific port configuration
added a new " reverse " function in the FunctionRegistry and created a new UDFReverse class to provide functionality for reversing characters in Hive queries
updated method calls from ` getContextPathEncoded ( ) ` to ` getRequestContextPath ( ) ` across multiple files to ensure accurate retrieval of the context path
refactor Tracer class to improve code readability to enhance maintainability and facilitate future development
[ hotfix ] [ test ] ignore flaky rocksdbstatebackendreaderkeyedstateitcase
fix a test that have accidentally be check in with the conflict tag still in place in the import .
added synchronization to the ` clear ` method in ` StarTreeRecordStoreCircularBufferImpl ` and a corresponding test in ` TestStarTree
updated forecast parameters in OpenWeatherMapOneCallHandler . java to adjust forecast values to improve the accuracy of forecast calculations in the application
added timeouts to multiple @ Test annotations and introduced previousFetchRequestTime variable in AbstractPageOperationTemplateTest . java to improve test reliability by
added logging and suggestion mode functionality to RemoteTargetGluer and FloatingHeaderView classes to improve debugging and enhance user experience during task creation and
updated CucumberPropertiesParser to return a flat map instead of a collection and modified parseRerunFile method to return a stream instead of
add some of the creative tab item to the creative tab , so that it do n ' t appear in the creative tab .
updated assertions in TestRadioButtons . java for consistency to improve readability and maintainability of the test code
added support for file size options in RCFileCat . java and implemented a method to retrieve the number of rows in RCFile . java to
refactor multiple Java classes related to trading and clustering to improve code organization and maintainability
added multiple checks for various ndarray types in JnaUtils . java to ensure that the MXNet NDArray is closed before proceeding with operations
refactor BlobServer class to improve code readability to enhance maintainability and facilitate future updates
fixed bug 137045 - unusedprivatemethod no longer report false positive on static constructor
renamed variable ` lexicalScope ` to ` lexScope ` for consistency to improve code readability and maintainability
added a new test method ` testAutoStartup ` to ` InboundChannelAdapterParserTests ` to verify the auto - startup functionality of the
added methods to retrieve node level and root , root , itemBoundables , and itemBoundables in various tree - related classes to enhance functionality
modified version parsing logic to handle minor version numbers correctly to ensure correct parsing of version strings based on user input
added a check for non - empty tags before updating activeItem tags and changed log level from warn to debug in ItemRegistryImpl . java to
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and a corresponding test in ` DateTimeFunctionsTest ` to
refactor disassemble methods to use a dedicated method for cache handling to improve code readability and maintainability by centralizing cache retrieval logic
updated Log4j2ConfiguratorServlet . java file to improve logging configuration handling
removed redundant initialization of HiveException and AuthorizationException in StorageBasedAuthorizationProvider . java to streamline exception handling by directly returning the original exception
updated CGoCompileStep to use String . join for command prefix and added a new test for C++ library with prebuilt dependencies to improve
added @ Buildable annotation for io . fabric8 . kubernetes . api . builder to enable building of resources in the Kubernetes API
removed the @ Override annotation from the Only class to improve code clarity and maintainability
added TIMEOUT _ THREE _ HOURS constant and set socket timeout in HttpClientFactory to improve connection stability by allowing more time for connection timeouts
added " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _ node _ parse _
add ` ` enable everything but trace ' ' and ` ` enable all ' ' option to selenium server
removed the @ Singleton annotation from ApplicationController . java to ensure that the ApplicationController is a singleton instance for testing purposes
refactor username assignment to use OwnCloudAccount to handle potential exceptions when retrieving the username from an account to improve robustness by ensuring the
added BatchStatus import and a test for resumePausedInstance in SimpleJobLauncher and SimpleJobLauncherTests to ensure proper handling of paused job execution
added null check for cacheConfig before creating a value in HttpSyncDataService . java and modified data refresh logic in DataRefreshFactory . java
danielwagnerhall : make dockersession public and add localnode . executewebdrivercommand ( )
fix : use string . tostring ( ) instead of string . tostring ( ) . tostring ( ) in compilationunitcontext
pdfbox - 4892 : use nonsequentialpdfparser instead of pdfparser , a suggest by valerybokov
[ mahout - 4892 ] fix checkstyle violation in testdistributedlanczossolverscli
refactor HttpServerTestBase class to improve code organization to enhance maintainability and readability of the test cases
updated assertions in PortletApplicationMapTest to check for keys instead of entries to improve test accuracy and ensure correctness of map attribute handling
added a test to verify the behavior of ` NestedBeanIgnoreNulls ` in ` BeanTableSchemaTest ` to ensure that the ` @ D
add spring starter auto - configuration customizer to spring starter ( # 3448 )
updated the indexing logic in the Indicator class and added a new test class for Double conversion to ensure correct functionality of the Indicator class
added new methods ` execInContainerWithUser ` and ` execCreateCmd ` to ` ContainerState ` and ` ExecInContainerPattern `
refactor conditional checks for WebSocket listener instances to streamline code to improve readability and maintainability by reducing redundancy
added semgrex unit tests for attribute conjunction and negated attributes in SemgrexTest . java to ensure correct handling of semgrex
added a broadcast intent for the CLEAR _ PULL _ UNREAD intent in HomeFragment . java to ensure that the home button is
removed conditional logic for pre - gingerbread and overScroller initialization in TouchImageView . java to simplify the code by elimin
add a flush ( ) method to the defaultprofilevalidationsupport bean in dstu21config .
( chore ) camel - core - optimize to avoid race condition in start ( )
added FloatingActionButton functionality to manage FAB menu visibility in ShareActivity to enhance user experience by allowing users to open and close FAB
added a new InlineParslet class and updated ToDateTokenizer to handle additional parsing of tokens to improve parsing flexibility and error handling for
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading scenarios
updated German and Swedish error messages in multiple resource files to correct the spelling of " toppniv " to improve clarity
added checks to ensure the operations service is checked before binding to the operations service to prevent binding to the operations service when the server is checked
updated method calls from ` getBeginColumn ( ) ` and ` getEndColumn ( ) ` to ` getBeginLine ( ) ` and ` getEndColumn
added ` waitFor ( ) ` method to ` ManagedThread ` and invoked it in ` CxxPreprocessAndCompileStep ` to ensure proper
added a boolean field ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and implemented repository filtering in ` CoreAuthenticationUtils ` to enable
fix mapcontainer # getapproximatemaxsize to account for safe state
added support for enabling SSL protocols in NettyWebServer and SocketConfiguration to enhance SSL configuration flexibility by allowing customizable protocols
replaced ` AtomicBoolean ` with ` AtomicReference < T > ` in ` SetOnce . java ` and added a ` trySet `
updated QueryDslMongoRepository to handle null property cases and added a test for empty string handling in SpringDataMongodbSerializerUnitTests to
updated assertions and error messages in RoundRectBorderTest . java to clarify the expected behavior of RoundRectBorder to ensure correctness of
added a check for empty genesis configuration before creating nodes in Cluster . java and updated Bft acceptance test parameters in ParameterizedBftTestBase .
simonstewart : remove parallel test for selenide
updated CountDownLatch initialization to use ' min ' instead of ' cnt ' and added a validation check for the sign length to improve flexibility
updated conditional check from ` if ( windows ) ` to ` if ( ! windows ) ` in ` ProcessInformationsPanel . java ` to
refactor methods in MoreCollectors for improved clarity and consistency to enhance code readability and maintainability by standardizing method names
added null checks and improved WebSocket client extension handler in BitmexStreamingExchange and BitmexStreamingMarketDataService classes to enhance
added validation for ` lat ` and ` lon ` in ` GeoPointField ` and created a corresponding test in ` TestGeoPointField `
updated method names and logic in OozieProxyImpersonator , WorkflowFilesService , and WorkflowFilesService classes to improve clarity and
refactor ResponderId class to improve code readability to enhance maintainability and facilitate future updates
updated the ` getTableDocument ` method to include a ` withDependents ` parameter to control the behavior of the ` getTableDocument ` method based
added functionality to count consecutive uploads without coordinates in UploadActivity and UploadPresenter to enhance user experience by allowing users to control the number of consecutive uploads
added caching functionality for profile data retrieval in ProfileResources . java to improve performance and reduce contention during query processing
refactor JpaMetamodelEntityInformation to improve property value handling and add support for IdClass annotations to enhance type safety and ensure correct property
phoenix - 1346 add test to verify index timestamp for table and view
dropwizard - jersey : add the ability to register default exception mapper in jersey .
updated the ` storeFieldAction ` method call to include a ` false ` parameter to ensure that the ` storeFieldAction ` is set to
updated the ` nativeCreateNSWindow ` method to include an ` ownerPtr ` parameter and modified its initialization to include it to enhance window pointer
updated SQL command in FileContentProvider to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to improve clarity and consistency in
added support for the " Stock " tile in the Tile class and updated event firing logic to support stickering functionality in the Tile class
fixed - rbuckets . getall ( ) and readasync ( ) method throw npe if codec be null
fix findunrelatedtypesingenericcontainer and add detectorundertest annotation to findunrelatedtypesingenericcontainer
refactor LauncherBackAnimationController to utilize BackProgressAnimator for improved back animation handling to enhance the responsiveness of back transitions
changed the visibility of ` _ initialPageNo ` from final to non - final and added logic to update content limits based on page number to
fix checksum calculation in jediscluster crc16 ( # 1193 )
added comment parsing functionality in FormattedSqlChangeLogParser and corresponding tests in FormattedSqlChangeLogParserTest to enhance SQL changelog parsing capabilities
removed initialization of JarArchiver in MavenArchiver and added JarArchiver initialization in AbstractJarMojo to improve code clarity and ensure
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader to improve error handling by using a more specific exception type
refactor conditional statements in TSServiceImpl . java and add multiAggregationTest method in DaemonTest . java to improve code readability and ensure
added validation checks for format and type in GwtGL20 . java and implemented pixel reading functionality using Uint8Array to enhance error handling and
added a new test method ` testDebugInfo ` and updated method invocation in ` PrintR ` , ` VarDump ` , and ` Print
replaced ` UnmodifiableClassException ` with a ` Throwable ` for better error handling in ` InlineBytecodeGenerator . java ` to improve
[ gr - 20684 ] report class initialization trace when class initialization be enable .
http : / / issues . apache . org / jira / browse / amq - 4892 - fix typo in baser
replaced Google Guava cache imports with Caffeine cache imports and added a cache loading mechanism to enhance cache management and improve error handling
mbtiles : set pragma to off if read - only
updated the regex pattern for invalid source release in FindBuildToolFailures . java and added a fatal error compiling in FailureLogAnalyzerTest .
refactor URI construction and add location intent check in DetailFragment . java to improve code clarity and ensure location is available before displaying geos
added a null check for inheritedParameterContexts in StandardParameterContextDAO . java to avoid potential NullPointerException when accessing referencedParameterContexts
refactor ClassLoader class to improve code readability to enhance maintainability and facilitate future development
added functionality to set the origin response header in ProxyRequestHelper and created a corresponding test in ProxyRequestHelperTests to ensure that the response headers
added a new ProfileSettingDrawerItem instance to GpsMainActivity to enhance user experience by providing a custom setting drawer
added XML validation attribute handling across multiple classes to enhance security by allowing XML validation to be configurable
simonstewart : fix the firefox driver to work with the firefox driver
added a maxRows variable and modified fetch size handling in IoTDBStatement . java to ensure it does not exceed the defined maximum number of rows
refactor methods in SqlStreamTerminator to improve clarity and consistency to enhance code readability and maintainability by using more descriptive names
added event handling for node and mouse events in StandardVizEventManager to enhance event management for node and mouse interactions in the visualization framework
refactor memory setting in ManyToOneRingBuffer to use a dedicated method for clarity to improve code readability and maintainability by reducing
replaced direct assignment of xorGroup with a local variable and added getter / setter methods for XorGroup to improve code clarity and ensure
added getHeight ( ) and getWidth ( ) methods to LCDUIImageMonochromeBitmapSource class to provide access to the height and width
refactor SourcePathResolver to use a new method for retrieving absolute paths and simplify path retrieval logic to improve code readability and maintainability by
fix ( dstu2 ) : do n ' t set value for dstu2 identifier
modified the ` changeSchemeIfIsWebSocketUpgrade ` method to be static and added encoded URL handling in ` WebsocketRoutingFilter ` to enhance
rename test suite to testgcccompilation suite for clarity
refactor CxxPlatform retrieval logic in HaskellBinaryDescription . java to use a dedicated method to improve code readability and maintainability
added import statements for ` IndexReader ` , ` IndexReader ` , ` Similarity ` , and ` Field ` in multiple Java files to
updated ConcurrentLinkedStack to handle null values and added new test cases for bubbles to improve robustness of the ConcurrentLinkedStack functionality and
added ` isMatched ( ) ` and ` setMatched ( ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueueable `
added a null check for mDirectories before accessing its properties to avoid potential NullPointerExceptions when mDirectories is null
updated condition in RecentsView to check if overview state is enabled and first layout is not active to improve gesture handling logic for better user
added multiple package - info . java files for various Lucene packages to improve package documentation and clarify package structure
added a text to the visibleAutoLeveler component in AutoLevelerTopComponent to improve user experience by providing a localized text
added ` callPostOptimizeCallbacks ( ) ` method to ` DirectUpdateHandler ` , ` DirectUpdateHandler2 ` , and ` Update
updated Inflater and Deflater instantiation to include a dummy byte to 0 to ensure proper handling of compression by explicitly setting dummy byte to
added a check for user data in Shaderc . java to ensure the correct user data is used during rendering
added a check for local metadata store in RetryingMetaStoreClient . java to ensure that the retry logic handles both local and local metadata storage
[ hotfix ] fix npe in heliossolologservice . logstreaming ( ) when hoststatus be null
refactor Subject class to improve code organization to enhance maintainability and readability of the codebase
add weight and STRONG reference type to the map ( # 2590 )
updated color distance calculation in HSSFPalette . java and added a new test method in TestHSSFPalette . java to improve color
chore ( regen ) : regenerate with update license year ( # 1181 )
danielwagnerhall : add more test for findelement ( ) and findelements ( ) .
added flags parameter to several methods in ShadowApplication , ShadowContextImpl , and ShadowInstrumentation classes to enhance flexibility in managing flags during receiver
refactor FFmpegTest to use Mockito ' s Answer for resource loading to improve code readability and maintainability by leveraging Mock
added a previousInput parameter to OggInputStream and modified related classes to manage it to ensure proper resource management and prevent memory leaks during input
replaced hardcoded string " Response was null " with a constant RESPONSE _ WAS _ NULL to improve code readability and maintainability by
[ te ] do n ' t fail anomaly migration if anomaly warning count be zero
refactor ` BaseActivity ` and ` DetailActivity ` to use a new ` showToast ` method to improve code readability and provide
updated the method call in Request creation to include the request template to enhance request handling by including the HTTP method and request template
added validation for LDAP names and improved error handling in LDAPCertStore . java to enhance robustness by ensuring valid names and handle referral
refactor retain logic into a separate method for clarity to improve code readability and maintainability by reducing duplication
rename ` AdapterViewTest ` to ` ListViewTest ` and add a new test for item click handling in ` AdapterViewTest ` to
[ hotfix ] [ test ] move checkpointfailuremanageritcase to classrule
remove genericitemuiprovider since it be no longer use
add the ability to set the selected object in the sipcomm selector box .
added JUnit Jupiter ' s @ Isolated annotation to MetaInfConfigurationTest . java to enable testing of static methods in the FileSystem
added serverConnector . setHost ( HTTP _ INFO . bindAddress ) to HttpServer . java to ensure serverConnector uses the correct bind address for
updated token validity settings based on heart mode and grant types in DynamicClientRegistrationEndpoint to enhance flexibility in managing access and refresh tokens based
added a new ` CloverInstrumentationFilter ` class to determine if a class is a candidate class and updated ` SplitLogCounters ` to
added support for the Smartmi Evaporative Humidifier ( zhimi . humidifier . cb2 ) in M
fix potential infinite loop in movementhelper . plausibletobreak ( )
changed the access modifier of the setScrollRangeDelta method from package - private to public to allow external access to the method from other classes
ambari - 20619 . ambari should log error message when a repository list be empty .
modify the return condition in IntHashSet to use logical AND instead of logical AND to simplify the logic for determining missing values
added Serializable interface to RuleAdministratorImpl class to enable serialization of RuleAdministrator objects
refactor crossoriginfilter with small perf improvement ( # 4672 )
updated g3d coordinates from " g3d / cube _ anim . g3dj " to " g3d / knight .
added a check for solidifiedPosition before updating hash cache in Manager . java and improved error logging in WitnessService . java to ensure
hbase - 25817 execresult . gettype ( ) should return null when value be null ( jesus camacho ro
added a method ` hasAccess ` to check if a user is authorized and updated error handling in ` HttpServer . java ` to improve security checks and
refactor ClassMirror and StubJar to use a new method for obtaining stub class bytes to improve code readability and maintainability by central
added a new TextView for sharing internal links in the FileDetailSharingFragment to enhance user experience by providing clearer context for folder and file sharing
updated assertion to use Locale . ENGLISH in PredictionTest . java to ensure consistent formatting across different locales
changed the condition from checking if the SATURDAY is equal to checking if it is not the same as the SATURDAY to
updated the hideIme method in AllAppsContainerView and LauncherAllAppsContainerView to improve user experience by hiding the IME
[ java ] configure embedded event store in eventhandlingconfigurationtest and sagaconfigurationtest
refactor BsdFileStore to use BsdNativeDispatcher for retrieving mount point names to improve code clarity and maintainability by centralizing
add test case for issue # 1599 ( issue # 1599 )
added support for a new parameter ' x ' and ' z ' in the SpawnCommand command to enhance command functionality by allowing optional parameters for
added a constant for minimum content area dimensions and refactored methods to use this constant to improve code readability and maintainability by reducing
fix checkstyle issue in util / graph / graalcompilertest . java and hotspotCryptosubstitutiontest . java
replaced newDirectory ( ) with newMockDirectory ( ) in TestIndexWriter . java to ensure compatibility with Windows semantics in directory creation
added failed checks for plugin classes in UpgradeCheckRegistry and reformatted the addColumnsToUpgradeTable method call in UpgradeCatalog280 to ensure
refactor Environment class to improve code readability to enhance maintainability and facilitate future development
added import for LuceneTestCase and annotated the RecoveryAfterSoftCommitTest class with BadApple annotation to address issue SOLR - 74
updated home assignment logic in CodenameOneImplementation . java and removed warning handling in HashtableContent . java to ensure proper formatting of home paths
rename FLAG _ IGNORE _ HDMV _ STREAM to FLAG _ ENABLE _ HDMV _ AUDIO _ STREAMS and update
replaced specific resource imports with a wildcard import and updated resourceAccessor initialization in LiquibaseEntityResolver . java , while removing the prefer
added security property to ComHostnameVerifier and JavaxHostnameVerifier to disable TLS algorithms in hostname verification processes
updated the Immutable annotation in AbstractCxxDeps and removed the EMPTY constant from CxxLibraryDescription and CxxLibraryTest to simplify the dependency
rename ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualFullDirectory ` , respectively to improve clarity
removed unnecessary whitespace in Int2ObjectHashMap . java to improve code readability and maintain consistency
update folder name hint handling to use TextUtils . isEmpty for consistency to improve readability and maintainability of the code
updated method calls in UaaResetPasswordServiceTests to include an additional parameter for client retrieval to enhance test clarity by providing a more d
changed access modifiers of methods from public to private in ShadowSQLiteDatabase . java to restrict access to these methods for better encapsulation
updated string concatenation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to handle ` isClosed ` condition to ensure consistent behavior when accessing
refactor MimetypeIconUtil class to improve code readability to enhance maintainability and facilitate future updates
rename ` supportsViewFor ` methods to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in naming conventions
added a new test method ` negatedInstanceOf ` in ` UnnecessaryParenthesesTest . java ` and updated the ` UnwrapParenthes
added a built flag and implemented a method to teleport location objects in the Location class to ensure compatibility with the latest bukkit features and improve
replaced Base64 encoding with URL - safe encoding for modulus and exponent in multiple classes to ensure proper handling of special characters in encoded values
updated import statements and modified statistics reporting method in TranslatorManagerHelper . java to improve code organization and enhance statistics reporting functionality
rename the annotation from ContainerAnnotation to ContainedBy to clarify the purpose of the annotation ' s purpose
added a null check for the getId ( ) method in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non -
refactor the ` setUpRevampedTweet ` method to include a ` isMuffled ` parameter for better handling of retweeter
added conditional logic to display the verified text based on the addon theme settings to enhance user experience by allowing customization of the verified text based on
removed the static instance variable from the AbucoinsDigest constructor and made it private final to improve encapsulation and ensure immutability of the
camel - 14263 : added autowired option to camel - mongodb to allow to configure the mongo connection .
added sourceIndex field and related getter / setter methods in AttributeMapping and related classes to enhance the functionality of attribute mapping by allowing specification of the
log corrupted statistic when alter partition
added a call to ` UserGroupInformation . isSecurityEnabled ( ) ` in ` AuthParams . java ` to check if security is enabled for
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 8470 ] escape email in home page
move subsystem reflection to modulemanagerimpl so it can be use by the engine
updated the JoinModeller to use a variable for the number of features instead of a fixed length to improve code readability and maintainability by
pdfbox - 4892 : avoid arrayindexoutofboundsexception in algebraprocessor
added conditional checks before logging debug and trace statements in SingleNodeKafkaResumeStrategy . java to ensure logging only occurs when debug and trace level
refactor ACTION _ SET _ PLAYBACK _ SPEED to use PlaybackStateCompat for consistency to improve code readability and maintain
added support for " AUTOMATIC " , " AUTOMATIC " , " ActivationEvent " , and " AUTOMATIC
tika - 1343 -- make sure ascii name length be the same as the unicode length , not the utf - 8
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as ignored on JDK 1.7
refactor lockFile creation into a separate method in MavenDependencyResolver . java and add a test case in MavenDependencyResolverTest . java to
updated shared preferences for version 5.3 from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added
added a check to return null if the username equals FEDERATION _ USER in AuthenticationManager . java to ensure that only valid usernames are
truffleobject : do n ' t throw classcastexception if the value be not a truffleobject .
replaced ` Collectors . toList ( ) ` with ` toList ( ) ` in ` JakartaClientShutdownWithServerWebAppTest
added filterattachable and warnstatus to logbackvalve so that it do n ' t fail if the filterchaindecision be false
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
removed the import of Version from CreateIndexTask . java to eliminate unused dependencies and improve code clarity
added schema handling for missing primary keys in OracleDatabase and AbstractDb2Database to ensure proper schema management for missing primary keys in the database
added MetastoreException handling to the execute method in MsckOperation and introduced a new test for invalid partition names in TestMSCK
[ hotfix ] [ kafka ] retry kafkaproducer . committransaction ( ) in kafkaproducer
[ rocketmq - 1340 ] remove the receipt handle from the request in the flow control flow ( # 4394 )
added a ` withServices ` method to ` DockerComposeContainer ` and modified the ` runWithCompose ` method to accept a list of services
fix potential npe in export and structcontextdecorator
removed unused imports and simplified the return statement in FeedParser . java to streamline code and improve readability by eliminating unnecessary dependencies
removed conditional check for DISABLE _ ALL _ APPS in Launcher . java and updated method call in Workspace . java to streamline code
changed data types of several variables and methods from int to double in MeterRealtimeBodyDataDTO . java to improve precision in data representation for
added a new Java applet class ` bug4150029 ` to handle directory creation and destruction of the file chooser to enhance
added a boolean flag ` isSparkConfigUpdated ` and associated getter and setter methods in ` HiveConf ` , and improved resource management in
added a new method ` getLongPressIndicator ( ) ` to ` AppIcon ` , ` AppIconMenuItem ` , and ` Launchable `
added checks for empty polygons in WKBWriter and updated test cases in WKBWriterTest to include srid parameter to ensure proper handling of empty
refactor UnflavoredBuildTarget to use builder pattern and introduce interner in AbstractUnflavoredBuildTarget to improve code
added a new file MultiplyByMaxInt . java that contains a method for multiplication by a maximum integer to facilitate testing of
added a line to enable the drawer indicator for the current file in OCFileListFragment to enhance user experience by allowing navigation to the current file
updated package structure and import statements in TestRAMDirectory . java to improve organization and clarity of the code structure
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton . java ` and ` Operations . java ` to improve performance
dmn : improve error message when dmn expression be not define for a node
replaced instances of ` @ ContainedBy ( AC . class ) ` with ` @ Repeatable ( AC . class ) ` in multiple
updated the message format in AbstractController to include duration in the file sending message to improve clarity of output by including the duration of the file
added package access check before class loading in OpenMBeanAttributeInfoSupport . java to enhance security by ensuring proper package access during class loading
fix quorumresponseresolver so that it do n ' t fail if there be no response
updated the calculation of freeSize in StoreDirect . java to correctly adjust the free size based on its value
do n ' t swipe up the last finger when the last finger be up
replaced instances of SslContextFactory with SslContextFactory . Server in multiple files to ensure compatibility with the latest SslContextFactory standards
removed the PrivilegedSocket class and simplified the connection creation in PG _ Stream . java to simplify the code and improve readability by eliminating
refactor InputTest class to improve code readability to enhance maintainability and facilitate future development
updated ` finishRecentsAnimationOnTasksAppeared ` method to accept a ` Runnable onFinishComplete ` parameter and added pauseBlurs
added null check for curLatLng before adding the current location marker to prevent potential NullPointerExceptions when the latLng is null
updated the ` removeSecret ` method to retrieve client ID using ` clientDetailsService . retrieve ` to ensure the correct client ID is used for
replaced ` @ BeforeAll ` with ` @ BeforeEach ` and updated SQL query formatting in ` SqlSourceBuilderTest . java ` to
fix for http : / / issues . apache . org / activemq / browse / amq - 4237 - wait for the
added unit tests for handling unknown keys in SlidingGanttCategoryDataset to ensure correct exception handling for unknown keys in the dataset
added null check for conditionDataList before processing to avoid potential NullPointerExceptions when filtering conditions
add lightcontrol . clonefields ( ) to make it easy to clone field .
updated the logic for hiding stack traces and improved the handling of stack traces in StdErrLog . java to enhance code clarity and
replaced direct calls to ` context . publishEvent ( e ) ` with ` getContext ( ) . getContext ( ) ` in ` HttpSessionEvent
added a check to throw a SemanticException when the CREATE CQ statement has changed from v0.14 to ensure proper error handling for syntax
refactor FlinkIoTDBSink class to improve code organization to enhance maintainability and readability of the codebase
added counter for custom simplification consolidation in CanonicalizerPhase . java to improve clarity and tracking of simplified nodes in the canonicalization process
updated the ` setImageDrawable ` method to include ` context ` as a parameter to enhance functionality by allowing the context to be passed to the icon
updated ` readIdentifierWithSchema ` to use ` schema . getName ( ) ` instead of ` readIdentifierWithSchema ( ) ` to ensure
[ bigqueryio ] add support for timestamp field in bigqueryio ( # 2594 )
added ` findViewWithTag ` method implementations in ` ShadowView ` , ` ShadowViewGroup ` , and corresponding tests in ` ViewGroupTest `
replaced casting to ` Enumeration < String > ` with a generic type ` enumeration < String > ` across multiple files to improve type safety and
updated imports in IndexTool , IndexTool , and MetaDataClient classes to improve code clarity and maintainability
added JSON _ VALUE and JSON _ CREATOR constants to DocAnnotationConstants and updated enum value retrieval in JavaClassUtil to enhance code clarity and
svm : do n ' t try to create a jar if it ' s already in the classpath
updated CUDA _ R _ 16F , CUDA _ 32F , CUDA _ 32I , and CUDA _ PATCHLEVEL constants
replaced instances of ResourceLoader for resource loading to improve code clarity and maintainability by using a more
refactor getAttachedFace method to check for SimpleAttachableMaterialData before casting to BlockFace to improve type safety and ensure proper handling of
added support for VARBINARY data type in RelToStageConverter to enhance data processing capabilities for VARBINARY data types
removed unused import of DateHelper from NoteAdapter . java to clean up the code and improve readability
updated backup success messages and logic in the Backup . java and Captions . java files to improve error handling and provide clearer feedback for backup
ggb - 1889 fix position of element in web ( not relative )
updated file creation method in ShadowParcelFileDescriptor . java to use TempDirectory . create ( ) . toFile ( ) to simplify code and
replaced calls to ` getStackForThread ( ) . poll ( ) ` with ` getStackForThread ( ) . removeFirst ( ) `
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to accurately reflect the
fix canonicalization of x = = 0 to x = = 0 for x = = 0
added a static final constant STRING _ ARRAY to the TypeFactory class to improve type handling for String arrays in the TypeFactory
refactor IME hiding logic in AllAppsContainerView and update logging in LauncherAllAppsContainerView to improve code readability and
fix network issue in blockstatecontainer # setbits ( ) .
updated assertion messages in TimelineMetricCacheSizingTest and TimelineMetricCacheProvider classes for clarity and consistency to improve readability of
add an optimization to the minecraft . gl _ max _ texture _ size , and update the minecraft . gl _ proxy _
[ java ] move trystoplogrecording ( ) call outside of trystoplogrecording .
added a condition to reset ` startPosn ` to zero in ` isInTransform ` to ensure proper initialization of ` startPosn ` when the transformation
replaced the ` isStarTreeDisabled ` method with a ` isSkipStarTree ` method across multiple classes to allow users to control the
added a lockNearbyView flag and modified the refreshView and setupPlaceList methods in NearbyActivity . java to improve performance by
add maptransformer . of ( map < k , v > ) and map . of ( map < k , v > map ) .
refactor EmeddedObjects and EmbeddedObjects classes to improve code organization and maintainability
added support for loading launcher widget span information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance widget management functionality and improve user experience
replaced ` ChangeListener ` with ` EventObject ` in the ` StageSelector ` and ` StageAction ` classes to enhance event handling capabilities
added ` callingUid ` and ` reset ` methods to ` ShadowBinder ` and corresponding tests in ` ShadowBinderTest ` to facilit
refactor ExpectationFailure class to use nullable messages and cause fields instead of AutoValue to improve flexibility and maintainability of error handling
removed warning log for unsupported message deserializing in BitcoinSerializer . java to streamline logging for better readability and maintainability
refactor calculations for newW and newH in ImageReplacedElement . java to use intermediate variables to improve code readability and maintainability
added support for escaping carriage return characters in Markdown nodes and modified Markdown writing logic in tests to ensure proper handling of special characters in Markdown output
added a NEUTRAL button to the SharePasswordDialogFragment and refactored the share file handling logic into a new setPassword method to
refactor method calls in IoUtil to use a class for mapping methods to improve code maintainability and facilitate reflection - based method
updated method visibility from public to package - private in ` AbstractAssert _ describedAs _ printed _ to _ console _ Test . java ` to
added new Slider AM keytab options and updated existing options in LlapOptionsProcessor . java to enhance configuration options for Slider AM key
updated ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and added animation registration in ` ExtractionModelFrame
added a new boolean flag ` mHasLoaderCompletedOnce ` and modified related methods in ` LauncherModel . java ` to manage loader completion
replace boolean flags with final sets for ` data ` and ` isFinished ` in multiple operator classes to ensure immutability of ` data `
added a ` guid ` parameter to the ` add ` methods in ` IssueInterface ` and introduced a new ` JsonValidationReport ` class to
added a method to safely retrieve the cipher provider name and improved exception handling in RSAClientKeyExchange . java to enhance error message clarity
rename ` dynamicConfiguration ` to ` flinkConfiguration ` across multiple classes to improve clarity and consistency in naming conventions
change log level from WARNING to OFF in CCJSqlParserUtil . java to disable logging for better debugging and monitoring
updated the output formatting in AggregateLifeCycle . java to improve readability and maintain consistency in formatting
changed access modifiers of BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public in DefaultMapScaleBar . java to allow external
removed the @ Ignore annotation from CovariantOverrideTest . java to temporarily disable the test due to known implementations of covariant overrides
refactor the curly method to use a new Qtype variable for clarity to improve code readability and maintainability by reducing redundancy
camel - 17836 : camel - core - reload - strategy - allow to load route from a resource from a xml . thanks to
added spacing minimum and maximum settings for X - axis in ScatterChart . java to enhance the visual appearance of the X - axis
updated the formatting of the " as INTERVAL " string in ExpressionStringBuilder . java to ensure consistent formatting and improve readability of the code
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` , ` BaseState ` , and ` State
added a check for the presence of " UTF8 " in the properties file to ensure that a valid UTF8 key is provided to prevent runtime
updated output statements in TestReproduceMessage and LuceneTestCase to use MixWithSuiteName to improve clarity of test output and
added a new UI event for long - pressing an AllApps item in the StatsLogManager and integrated it into ItemLongClickListener to enhance
added null check for log in StoreWAL . java and created Issue112Test . java with a test case for double commit functionality to ensure
added a condition to show SectorLandInfo based on the rule ' s preset status to enhance functionality to conditionally display land information based on
updated type casting to use generics in multiple classes to improve type safety and eliminate unchecked cast warnings
refactor Enum class to improve code organization to enhance maintainability and readability of the codebase
updated the ` buildNearbyRandom ` method to accept a ` randomSelection ` parameter and added validation for the ` randomSelection ` parameter to
remove temporarycache . expireafterwrite and use cachebuilder instead
updated visibility settings for SQLViewContainer , WMSStoreInfo , and WMSLayerImportContainer in NewLayerPage . java to ensure proper
initialized the ` Availability _ availability ` variable to ` UNAVAILABLE ` to ensure that the ` _ availability ` variable defaults to ` Availability . UN
updated ` FetchInvDataMsgHandler ` , ` PbftDataSyncHandler ` , ` SyncService ` , and ` SyncService `
chore : update gapic - generator - java version to 2.1 . 0 ( # 4382 )
updated the ` _ freeSpaceReclaimDisabled ` variable to ` _ freeSpaceReclaimQ ` and modified related methods in ` DBMaker
changed ` KDCOptions ` from public to static final in ` KDCOptions . java ` and added a new class ` KdcDefault
added a null assignment for the writer in Json . java to ensure that the writer is properly initialized before use to avoid potential null pointer exceptions
standardized spacing in ProfilePager . java for consistency to improve code readability and maintainability
rename the method ` paintBackground ` to ` paintComponentBackground ` in the ` Slider ` class to improve clarity of the method '
added a method to retrieve a value from a class constant in Configuration . java to enhance flexibility in configuring object value constants by allowing dynamic
added error handling and logging in KafkaService initialization to improve error reporting and debugging for service initialization failures
replaced HashSet with ImmutableSet for RESOURCES _ TO _ ALWAYS _ ACQUIRE in InstrumentationConfiguration . java to improve immutability of
added ' auto - create - channels ' option to message bus and updated property names for ' channel ' to ' channelName ' to improve clarity
added keywords support to the HTMLDocument class and created a test for index keywords in TestDemo to enhance document indexing capabilities by allowing users to specify
updated SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
added an else block around the initialization of the _ addresses list in MemcachedSessionDataMapFactory . java to ensure that the address list is only added
replaced the instantiation of ` CorrespondenceSubclassToFactoryCall ` with the class reference ` CorrespondenceSubclassToFactoryCall
refactor Builder class to improve code structure to enhance maintainability and readability of the code
updated ISBNtoBibTeXFetcher to use " www . ebook . de . de / tools / isbn2bibtex
increase keep - alive time of polyglot limit to 10 second .
added null check for the text object before firing data change events to prevent potential NullPointerExceptions when the text is null
add a basic category to the sentiment model so that it can be use by the sentiment model .
trim whitespace from the input lines in SuffixURLFilter . java to ensure that lines are trimmed before processing
added a check for inGodmode in HandlerCombatInvocationsNotify . java to prevent processing in Godmode when in God
ggb - 1342 fix popup not be register in checkbox creation dialog
updated constructors in LinkedHashMapCache and BoundedLinkedHashMap to remove the ' accessOrder ' parameter to simplify constructor parameters and improve code readability
removed redundant calls to close ( ) in ChannelEndPoint . java to streamline code for better readability and maintainability
added null check for keyIndex in FixAcidKeyIndex and removed hardcoded values in OrcOutputFormat and OrcRecordUpdater to
added Locale import and modified exception handling in DirectUpdateHandler2 . java to ensure consistent error reporting across different locales
move guardingnode . storecheckguard to writenode .
improve performance of bciblockmapping . shouldfollowedge ( ) .
add dbcloud . getclassificationdisagreement ( buginstance ) and fix for high variance in viewfilter
removed unnecessary ` @ Value . Parameter ` annotations from multiple Java files to simplify code and improve readability by eliminating unnecessary boxing
refactor SqlRunner class to improve code readability to enhance maintainability and facilitate future development
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` File
rename ` knownApis ` to ` knownSdks ` and update related methods in ` DefaultSdkProvider ` and ` Robolectric
replace progressindicator with confidenceprogressindicator in createofferview
updated references from " Cling / " to " UMS / " in RequestHandler and related classes to ensure correct handling of " UMS /
add a force iteration to the bpt builder so that it do n ' t fail if there be no iterator
added new view type constants and modified the ` onCreateViewHolder ` method to handle different view types to improve flexibility in handling different view
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL
fix a bug in the pattern that could cause an exception when the target be a multiple of a single node .
removed the ` canvas ` parameter from the ` insert ` and ` write ` methods in ` TexturePacker . java ` to simplify the method
replaced the ` getVisitors ( ) ` method with a ` apply ( Refactor < S , T > refactor ) ` method in `
added methods to retrieve child elements by name and recursive names in Xml . java to enhance the functionality of child element retrieval in XML processing
set the Content - Charset header to " UTF - 8 " in HttpSolrServer and corresponding tests in BasicHttpSolrServerTest to ensure proper
updated SystemUiController to use @ SystemUiControllerFlags instead of a static UI _ STATE _ ALLAPPS to streamline UI state management
removed the private ClientConfigurationService field from IntrospectingTokenService to streamline service configuration management
enhanced error message in RuntimeException for Hive split creation to include offset , length , and message to improve debugging by providing more context about the error
removed the ownerId field and its assignment from NodeEntry . java to streamline the code by eliminating unnecessary fields
rename ` BackupSnapshotAferTakingSnapshot ` to ` BackupSnapshotAfterTakingSnapshot ` in ` Config . java ` and ` Snapshot
added score calculation to the merge method in TextFragment . java to ensure score does not exceed the maximum of text end position
removed the private Digester field from Md4PasswordEncoder . java to streamline the class by eliminating unnecessary dependencies
added a validation check for the maximumUnimprovedStepCount property to ensure that the maximumUnimprovedStepCount property is greater
added a check to return early if there are no currently opened edits to optimize performance by avoiding unnecessary processing when no editors are available
replaced direct calls to ` verify ( ) ` with ` Mockito . verify ( ) ` in ` BDDMockito . java `
updated the class loader retrieval in PathScanner . java to ensure the correct class loader is used for the PathScanner class
modified the ` sayHi2 ` method to return a ` CompletableFuture < String > ` instead of a string and added a new ` sayHi
add log to abstractsplitbraintransfertest to help diagnose intermittent failure
added null checks for logout settings in DefaultLoginPageConfigurer , ServerHttpSecurity , and DefaultLoginPageConfigurer to enhance robustness by
[ giac ] make sure giac do n ' t use degree ( ) if [ 0 ] = = 0
added logging functionality to DockerComposeContainer and created a new DockerComposeLogConsumerTest class to enhance logging capabilities by allowing multiple log consumers for better
removed unnecessary whitespace in the testMapping method declaration to improve code readability and maintain consistency
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a way to retrieve exceptions from a supplier
replaced a ' break ' statement with a ' return ( true ) ' statement in ConsoleActivity . java to ensure that the method returns a
camel - 16458 : camel - platform - http - http - http - http - http - http - http - http - http -
added methods to retrieve platform - specific paths in MorePaths . java and updated argument handling in CopyStep . java and AarWithLibs
added a null check before processing parameters in AuditEvent . java to avoid potential NullPointerException when authorizationContext ' s params are null
added a method ` throwExceptionIfFail ( ) ` to check if a file exists before loading to improve error handling by preventing unnecessary loading of
updated SDK version from " 4611349 " to " 4514284 " in SdkConfig . java and added new tests in ShadowText
queuetransactionlog : add ` ` transactionlogkey ' ' and ` ` transactionlogkey ' ' class to reduce memory usage
added a boolean property ` enableSqlWithoutProfile ` and its getter / setter methods to ` JdbcEnvironmentProperties ` and ` JdbcEnvironmentRepository `
added a try - finally block around the write method in ConnectHandler . java to ensure data is set to null to prevent potential memory leaks
use eventgenerator . fromfunction instead of supplier in modloadingstage . createregistry ( )
updated the variable name from ' date ' to ' calendar ' in DateUtils . java and removed an assertion in FontParsersTest . java to
updated ` getThreadInfo ` method to use ` super . getThreadInfo ( ) ` and added ` STACK _ TRACE _ DEPTH ` constant to
added a new protected field ` prevTlogOnPrecommit ` and updated sleep duration in ` LeaderTragicEventTest ` to improve
updated FastAsyncWorldEdit version from " FastAsyncWorldEdit - P2 - V6 / " to " FastAsyncWorldEdit - 1
added null checks for the output directory and input file path before creating it to prevent potential NullPointerExceptions when the input path is null
added methods to calculate normal vectors in ObjUtils and refactored the normal vector calculation in TriangulationHelper to improve code readability and
updated JdbcAuditService to use identity _ zone _ id instead of principal _ id and modified find method signature to include identity _ zone _ id
refactor SpanCollector class to improve code readability to enhance maintainability and facilitate future updates
added a null check for the getCurrSession ( ) method before accessing it to avoid potential NullPointerExceptions when SESSION _ MANAGER . getSessionInfo
refactor TransactionIsolationLevel class to improve transaction isolation level handling to enhance performance and maintainability of transaction isolation logic
rename methods and variables from ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController .
[ hotfix ] [ test ] set thread name in testsession
refactor CookieManager class to improve code readability to enhance maintainability and facilitate future updates
replaced a manual ArrayList creation with a direct return of a new ArrayList instance to simplify code and improve readability by eliminating unnecessary complexity
added a new OverviewToAllAppsTouchController to the list to enhance the visual appearance of the all apps touch controller
refactor scaleHotseatWithWorkspace method to return a float array instead of a boolean to improve code readability and maintainability by central
added a check for JUnitRule in the ` DefaultStackTraceCleaner ` class and created a test for it in ` StackTraceFilterTest `
replaced instances of ` dstBuffer ` and ` dstBaseOffset ` with ` dstByteArray ` and updated memory copying logic to improve clarity
added a private BalanceListener field and updated balance listener management in DepositListItem . java to ensure the balance listener is properly managed and removed
updated color conversion logic in RealisticRenderer to handle different edge modes to ensure correct color conversion based on edge modes
added null check for httpClientResponse in HttpClientBeanPostProcessor . java and updated log initialization in Issue546Tests . java and DefaultEndpointLocator
remove unnecessary check for pattern _ inf from gl200 protocol decoder
updated the logic for posting the last playback event time in FullDetailsActivity . java to improve accuracy of playback time checks for episode updates
refactor SpanishXMLTreeReader to improve handling of elliptic tokens and add validation for Lemmas and MWE tokens to enhance
added a condition to clear the " iso " currency in the item if it is empty to ensure proper handling of empty dc values in the item
updated the reactiveloadbalancerclientfilter to determine the override scheme based on the secure status of the response to ensure that the override scheme
use bytebuffer . duplicate ( ) instead of bytebuffer . duplicate ( ) .
make nativeimagedebuginfoprovider # fullfilepathfromclassname non - final
replaced custom Correspondence implementation with lambda expressions in ShadowBackupManagerTest . java to improve code readability and leverage lambda expressions
corrected the spelling of " NonUS " to " NonEN " in multiple files to ensure accurate identification of language support in the application
simplified the null check for redeemData in LocalTransactionSigner . java to improve code readability and maintainability
add minecraftforgeclient . renderblocks ( block , renderblocks ) and modloader . renderblocks . overridetexture ( )
added a return statement to the TxCacheDB class to ensure that the method returns early when no data is available
updated import statements from ` com . sun . xml . internal . ws ` to ` jdk . internal . org . objectweb . asm
refactor FastDictionary class to improve code readability to enhance maintainability and facilitate future development
do n ' t close the io session if it ' s already close .
updated FlightEvent constructor parameters and modified epsilon calculation in FlightEventsTest . java to improve accuracy and accuracy of flight event parameters
feat ( vendored grpc - vendored ) : upgrade to vendored grpc 1.1 . 0 import in textsource and
replace ` target . addNamespaceDeclaration ` with ` newElement . addNamespaceDeclaration ` in ` SaajStaxWriter . java ` to
update instructorfeedbackresultspagedata . getprofilepicturelink ( ) to take courseid into account
added a shortRules list to the DefaultPasswordValidator class and modified the password validation logic to allow long and numeric sequences to be allowed in long
danielwagnerhall : add a new command to control log retrieval
removed the JUnit @ Test annotation from ProxyClassSerializationTest . java to clean up the test code and improve readability
updated string concatenation syntax in DLNAMediaInfo . java to include format = bgr24 to improve readability and maintain consistency in
remove speculativeguardmovementphase and canonicalizerphase usage from test .
added checks for the presence and alias of the AUTHENTICATION _ MANAGER in the AuthenticationManagerBeanDefinitionParser to ensure proper handling of authentication
updated the handling of the forwarded host and authority in ForwardedRequestCustomizer . java to support both host and port settings to enhance flexibility
added a call to ` sb . setLength ( 0 ) ` in ` ConsoleReader . java ` to reset the StringBuilder ' s length to ensure
changed access modifiers of allowedRoles and disallowedRoles from private to protected to allow subclasses to access these lists
updated OpenIDE - Module - Specification - Version to reflect the latest specification and base versions to ensure compatibility with the latest features and improvements
hbase - 20688 set the wrap size of hbase server tl to 1024m for netty rpc server
refactor multiple Java classes related to cookie storage and socket options to improve code organization and maintainability
refactor FixedLengthTokenizerTests to use JUnit 4 annotations and improve test structure to enhance readability and maintainability of the test code
updated the OpenSamlAuthenticationRequestFactory to allow dynamic configuration of the protocol binding based on SAML constants to enhance flexibility in handling SAML authentication requests
added AttachedSurfaceControl import and modified SurfaceControl transaction handling in DepthController . java to enhance rendering performance by applying transactions on the root view
update version string from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure compatibility
updated the action from WRITE to CREATE in AccessController . java for prePrepareBulkLoad and preCleanupBulkLoad to ensure proper action is used for
updated the subList method call in TsFileManagement . java and modified measurement references in MergeTaskTest . java to improve code clarity and ensure
camel - 1770 : camel - fileconverter should convert to fileinputstream if it be a java . io . file
added login functionality to the ShardManager and DefaultShardManagerBuilder classes to enhance security by allowing login based on a boolean flag
removed unnecessary whitespace in DeleteGlobalRef method call to improve code readability and maintain consistency
updated the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to align the table name with the
added a check for marked responses before terminating the response in HttpSender to ensure that the response is only processed if it is marked as marked to
modify the condition to check if the student is a user student before verifying the response giver to ensure that only valid users are processed for
added security checks for linked profiles and updated profile path handling in BMPImageReader . java to enhance security by allowing users to disable
updated the parameter order in the ` setSimpleCuboid ` method calls from ' ex + 1 ' and ' byte ' to ' 1
added a wait message and modified the actionPerformed method to run on a Runnable to improve user experience by ensuring PMD files are checked before proceeding
refactor grid size calculations to use a dedicated method for setting grid sizes to improve code readability and maintainability by reducing duplication
change return values from false to true in ContributionsListFragment . java to ensure consistent behavior across the application
added a test for skipping a DISTINCT prefix in the test table and modified the scan condition in BaseResultIterators to push the limit to the
pdfbox - 4071 : add test for acrobat checkbox group property
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation . java to provide functionality for retrieving the last modified timestamp
added a condition to check if the " metaTable " property is valid in HiveIcebergStorageHandler to ensure that only valid metadata tables
add option to choose a currency other than the countries default currency
change catch block from IOException to Throwable in WriteFlusher . java to improve error handling by catching a broader range of exceptions
added a new boolean variable ` mStartedEnterAnimation ` and modified item notification logic in ` IconRecentsView . java ` to improve animation
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to provide a way to retrieve the active key ID for the
refactor sendmailactions to sendmailwithattachments and sendmailwithattachments to improve code readability and maintainability
changed the ` isActive ` variable to be volatile in ` SocketServer . java ` to ensure thread - safe access to the ` isActive ` variable
corrected the method name from ` isDesc ( ) ` to ` isAsc ( ) ` in multiple files to improve clarity and consistency
pdfbox - 4071 : cast charsequence to charsequence to avoid unchecked cast warning
added a check for the ownCloud app name in the Calendar date validation to ensure that the year is only checked if the application name matches the
hbase - 20619 addendum set hbase . rootdir . perms to 700 to restart the master if it ' s
updated method calls from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange ` and ` Javax
refactor Instant class to improve code readability to enhance maintainability and facilitate future updates
updated the return type of ` getStateFormat ` from ` int ` to ` String ` and added a check for ` DocCollection . STATE _
removed the ' type ' variable from the logging statement in CentralAuthenticationServiceImpl . java and modified the conditional check in AbstractTicket . java
added IllegalArgumentException to the exception type check in PDICCBased . java to enhance error handling by including additional exceptions
corrected spacing in conditional statement in AbstractFileResourceSet . java to improve code readability
mng - 4892 : pluginparameterevaluator should align file path to the base directory if it ' s a file
[ beam - 10688 ] move bytebuffercoder to extensions - protobuf module ( # 2596 )
updated JpaQueryParsingToken instantiation to include a boolean parameter and added a new test for signed numeric literals to enhance query parsing functionality and ensure
updated the ` generateLaunchLugFromRASAeroRailGuide ` and ` RailButtonFromRASAeroRailGuide `
removed the implementation of the getNonceFactory method in BitmexStreamingExchange to simplify the code by eliminating unnecessary implementation
( chore ) camel - mail : use placeholder instead of string concatenation .
[ java ] use default value for client liveness and publication timeout in driverconductortest .
changed the initialization value of ` initializeLoadedClasses ` from ` true ` to ` false ` in ` ScanSpec . java ` to disable loading
added a call to grabFocus ( ) on the search field in FullTextSearchPanel . java to enhance user experience by ensuring the search field
refactor NioParams initialization in TlsConnectionLogging . java to use a temporary variable to improve code readability and maintainability by redu
removed an assertion from the ResultSet . getDouble ( 4 ) method in StatementTest . java to streamline the test by eliminating unnecessary assertions
updated error message in TestSolrConfigHandler to include server and server base URL to improve clarity of error messages for better debugging
updated imports and mock instances in CsrfWebFilterTests . java to use ServerHttpRequest and ServerWebExchange instead of HttpMethod to improve test
updated the pattern for matching drawable density in FilterResourcesStep . java to improve accuracy of drawable formatting based on the current density
added a buttonUIID variable and refactored UIID updates to use a component prefix to improve code readability and maintainability by central
removed the densityDpi check from the rotation condition in RecentsAnimationDeviceState . java to simplify the condition for better readability and
added two new Java files , TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java , to
added import for LuceneTestCase . AwaitsFix and annotated the ReplicationFactorTest class with @ AwaitsFix annotation to address
fixed - rexecutorservice . executerunnable ( ) method throw npe if nextstartdate be null
simplified conditional checks for credential assignment in FileDownloader and FileUploader classes to improve code readability and maintainability
added null check and closing logic for StoreFileScanner in Compactor . java to ensure proper resource management and prevent potential NullPointerExceptions
replaced calls to ` get ( ) ` with ` getOrDefault ( ) ` for retrieving values in ` NetMetrics . java ` to ensure
added a nonce parameter to the token claims retrieval in TokenMvcMockTests . java to ensure that the nonce claims are correctly retrieved from the token
refactor multiple chart editor classes for consistency and clarity to improve maintainability and readability of the codebase
added width and height settings for the formLayeredPane in Form . java to ensure the form layered pane is visible based on its dimensions
added maxY method to return the height of the owner if it exists to ensure accurate height calculation based on the owner ' s height
modified the ` openDatabase ( ) ` and ` openSharedDatabase ( ) ` methods to return a boolean indicating success or failure to open the
replaced the static final string DOCKER _ COMMAND with a public constant Platform . DOCKER _ COMMAND in DockerTestUtils . java
modified the initialization of the ` initializeParameters ` method to include a null check for the input stream before processing to improve robustness by preventing
updated the ` drawLeaveBehind ` method to accept a ` color ` parameter across multiple classes to allow customization of the leave - behind
show error message when the plugin do not work with canary version of android studio
cloudstack - 4892 : check if table name be not null before try to get identity uuid
added modulePersistEnable and modulePersistDisable lists to StartArgs . java to enable and disable module persistence in the application
updated argument validation from ` args # 1 ` to ` args [ 0 ] ` in ` GeminiMarketDataService . java `
replaced HashSet with LinkedHashSet for questions in VerifyPasswordResetRequestAction . java to ensure uniqueness of questions in the flow scope
add unit test to ensure that unit test do n ' t fail on slow machine
added multiple JSP files to the AuthCheckFilter class to enhance security configuration options in the setup setup process
[ hotfix ] [ runtime ] do n ' t call postdelayed ( ) when another post runnables be queued in the sequence
updated method signatures in AbstractCommandRunner , AuditCommandRunner , and CommandRunner to use varargs instead of String [ ] to improve flexibility in
refactor character reading to check for end - of - stream before processing to improve error handling and prevent potential NullPointerExceptions
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest ` to verify that text causes overflow pages
added pivot position adjustments for the arrow in DeepShortcutsContainer to improve the visual appearance of the arrow based on the icon ' s
remove printstacktrace in case of interruptedexception
refactor updateThumbnail method to include a refreshView parameter for better control over thumbnail updates to enhance functionality by allowing refreshing the view based on
pdfbox - 4071 : fix typo in usage message
added an additional parameter to the InternetAddress constructor and improved validation check in HostnameFormatSpecifier to enhance functionality by allowing the instance of InternetAddress
removed unnecessary ' this ' references from multiple classes to simplify the code by eliminating unnecessary references to ' this '
updated ` _ maxDocId ` initialization and variable names in ` MatchEntireSegmentDocIdSetBlock ` , ` SizeBasedDocId
updated the ` promptToOpenFile ` method to accept an additional ` String ` parameter for both existing and existing files to enhance file selection prompt
updated widget and app count management in AppsCustomizePagedView . java and modified related methods in AppsCustomizeTabHost .
added caching logic for active rocket components in FlightConfiguration . java and updated component bounds in FlightConfigurationTest . java to improve component
update test to use direct : instead of seda :
added Locale . ROOT to DateTimeFormatter instantiation in TimeHelper . java to ensure consistent date formatting across different locales
[ ds - 4892 ] fix permission filter for hidden object in dspaceobjectconverter
added a new test method ` testMissingRequired ` to the ` StarTreeConfig ` class to ensure that missing required configurations are handled correctly
camel - 14263 : camel - spring - dsl - add support for dynamic and static recipient list in spring - dsl . thanks to
refactor InlineLayoutBox and HoverListener to use a loop for parent retrieval and repaint logic to improve code clarity and maintainability by
replaced DetectAuthenticationMethodOperation with a ServiceConnection for handling operations services to enhance the authentication process by integrating a new operation service
