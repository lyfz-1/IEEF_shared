updated the constructor of SocketAppender to set the remote host and port to ensure proper handling of remote host and port settings
refactor authentication header handling in BasicAuthPlugin to use a new method to improve code readability and maintainability by reducing redundancy
updated the method call from RecordDescriptor . msgLengthOffset to msgLengthOffset in ManyToOneRingBuffer . java to ensure correct handling of message
cloudstack - 4892 : fix nullpointerexception in cpuovercommitratio and ramovercommitratio
added an ` flags ` field and its getter method to ` ShadowPaint ` class and updated related tests in ` PaintTest ` to enhance the
updated the title from " Set / clear / append / rename fields " to " Manage field names & content " to improve user experience by providing
added a check for Eclipse configuration and updated error handling in DetectorsTest . java to ensure compatibility with Eclipse configuration and improve error reporting
added a condition to check if the nonce is not empty and updated realm scheme setting in NettyAsyncHttpProvider to ensure that the authentication header
added a RemoteInputListener interface to the RemoteInput class and modified the constructor to accept a remote input listener to enhance input handling capabilities by allowing
removed unnecessary whitespace in OrcEncodedDataReader . java to improve code readability and maintain consistency
[ homeconnect ] fix checkstyle violation in homeconnectbridgehandler
added null checks before adding policies in AuthorizeAdminServlet to avoid potential NullPointerExceptions when bs is null
updated assertions in DefaultTypeAdaptersTest , ObjectTest , and DefaultDateTypeAdapterTest to use ` matches ` instead of ` isEqualTo `
added JSON serialization for the DAG information in TezTask . java to facilitate the handling of DAG information in the T
updated time calculation in ComputedSummary . java and added a method to get heap time in HprofHeap . java to improve time tracking and
deleted the RxJava2Tasks class and refactored the getUploadCount method in ContributionsActivity and ApacheHttpClientMediaWikiApi to streamline the
removed redundant condition checks in MVTable . java to streamline code by eliminating unnecessary condition checks
[ issue # 1188 ] fix offset out of bound error ( # 1188 )
updated folder handling logic in Launcher . java to log messages when the folder is not open to improve debugging by providing clearer feedback when the
added a test method ` testSortOrder ` to verify that PGProperty names are sorted in ascending order to ensure that the order of PGProperties are
removed the constant for the HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN string to provide a clearer
updated ` supportsDrop ` and ` getUninstallTarget ` methods to use ` ItemInfo ` instead of ` Object ` to simplify the method signature
updated assertions in RequestBuilderTest to use isIn instead of hasMessage to improve clarity of error messages for better debugging
refactor NearbyActivity to use NearbyListFragment instead of NearbyMapFragment to improve clarity and consistency in fragment
updated the constructor parameter name from ` status ` to ` sessionStatus ` in ` FlatProfileContainerFree ` to improve clarity and consistency in
added a boolean field ` sendZeroAnomalyEmail ` and its getter / setter methods in ` EmailConfiguration ` and ` EmailReportJob `
[ hotfix ] [ kafka ] fix flinkkafkaproducerbase # open when restore state be not call
added getter methods for user , geofence , and geofence in DataManager . java to enable retrieval of user and geofences
added a constructor to BlockingResponseListener that accepts a maximum length parameter to enhance flexibility in response handling
refactor McastService and McastServiceImpl to simplify byte array handling and improve code readability to enhance code clarity and maintainability
[ hotfix ] [ runtime ] fix resource leak in multileaderserverimpl
updated assertions in LoginSAMLAuthenticationFailureHandlerTest to remove unnecessary whitespace to improve code readability and maintainability
refactor ConfigMetadataProviderTest . java for improved clarity to enhance maintainability and readability of the code
removed unused imports from ListFragment . java and modified the updateNoteReminder method in SnoozeActivity . java to streamline code
added a new ` AcceptAllFilter ` class and modified directory stream handling in ` Files ` , ` WindowsDirectoryStream ` , and ` Windows
refactor JdbcTestDataSet class to improve code readability to enhance maintainability and facilitate future updates
modified the ` lookupType ` method to throw ` ClassNotFoundException ` and added error handling in ` HotSpotJVMCIRuntime ` and `
replaced Preconditions . checkArgument with a new utility class for validating Docker image names to improve code clarity and maintainability by centralizing tag validation
replaced ` login _ failed _ username ` with ` login _ failed _ wrong _ credentials ` in ` LoginActivity . java ` to improve
added ` setAutofocus ( ) ` method calls to multiple form classes to enable autofocus functionality in multiple form classes for better user
added unit tests for SAML configuration and SAML zone properties in SamlIDPRefreshMockMvcTests to ensure proper handling of SAML zone properties in
added checks for non - whitespace before adding items in ComparableVersion . java and created a new test for milestone in ComparableVersionTest . java to
replaced ` b . topLeftMode ( false ) ` and ` b . bottomRightMode ( false ) ` with ` b . bottom
updated package structure for ParallelUniverse and ParallelUniverseTest classes from ` org . robolectric . android ` to ` org .
updated method type handling in LocalCacheFactory and NodeFactory to use a constant for FACTORY _ CALL to improve code readability and maintainability
change the stroke pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to ensure proper
added functionality to draw self loops in the ProcessingPreview class to improve rendering capabilities for self loops in the graph
updated ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY _ 059 and
rename method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve clarity and consistency in naming conventions
added translation to the drag handle indicator in AllAppsTransitionController . java to ensure the drag handle indicator is displayed in the UI
removed unnecessary log statements from CollectionViewer , CommunityViewer , and ItemViewer classes to streamline log output for better readability and maintainability
updated error messages in HiveConf . java for improved clarity to enhance readability and maintainability of the code
added an Assume . assumeTrue ( ) method to ScanningAppProviderRuntimeUpdatesTest . java to ensure that the build server has issues with
added maven bundle options to TestJettyOSGiAnnotationParser . java and diagnose bundles in TestOSGiUtil . java
[ activiti ] fix executionentitymanager # updateprocessinstancelocktime ( string ) in executeasyncrunnable
refactor Transaction class to improve code readability to enhance maintainability and facilitate future updates
added @ ExcludeFromRuleKey annotation to GenruleBuildable . java to indicate that the Genrule execution is not relevant to artifact caching to
added a method ` whichExec ` to retrieve executable files in ` AsyncExecute ` and modified ` FirefoxCustomProfileLauncher ` to use it to
added a check to ensure the hashmap does not already exist before adding it to the colFamToDynamicColumnsMapping to avoid potential null
[ hotfix ] [ runtime ] remove unnecessary @ suppresswarnings from HadoopOutputCollector and HadoopTupleUnwrappingIterator
added a condition to check if the table type is MAPPED and modified table creation logic in MetaDataEndpointImpl . java to ensure proper handling of
updated import statements and added student cascade logic in AccountsLogic . java to ensure proper handling of student attributes during email processing
removed unused import of TestCellReference in AllXSSFTests . java to streamline the code by eliminating unnecessary dependencies
added a check for block hardness in the block condition in LensPiston . java to ensure that the block ' s energy is
added a new file LongPointerPressTest3049 . java to implement network error handling for long pointer press functionality to ensure that network error
refactor inlining logic in PartialEvaluator . java for improved readability and maintainability to enhance code clarity and maintainability by
simplified conditional checks in BaseBuilder , ResultSetType , ParameterMode , and Interceptor instances to improve code readability and maintainability
simplified the indentation check in ListBlockParser and added a new test in SpecialInputTest to improve code readability and ensure correct rendering
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to extend it to improve code organization and maintainability
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to temporarily disable the test due to issue 1070
replaced ` JsPackage . GLOBAL ` with ` String . NativeString ` in the ` saveMessage ` method to simplify the method signature and
camel - 14263 : camel - core - route - startup - order - last - test - fix typo in camel - route -
added a condition to check if the video format is a video format to ensure only valid video formats are processed
added Security import and property settings for Jdk . tls . disabledAlgorithms in ComHostnameVerifier and JavaxHostnameVerifier to ensure proper security
cloudstack - 3641 : do n ' t use local storage pool if local storage pool be not managed
updated logging statements in Driver . java and QueryResultsCache . java to improve clarity and consistency to enhance readability and maintainability of the
added a new option ` skipModelUpdate ` to ` ManageDependencies ` and modified condition checks in ` AddManagedDependency ` , ` ManageDependencies
added a test method to verify intent sending with a request code in ShadowActivity and ShadowPendingIntent to ensure proper handling of pending intents and
updated graphics handling in RocketFigure3d . java to utilize a customizable FBO configuration and improved rendering hints to enhance
added synchronization to the ` controllerListeners ` list in ` HydrawiseAccountHandler ` and ` HydrawiseControllerHandler ` to ensure thread
added JUnit ' s @ BeforeClass annotation to TestCoreAdminApis . java to ensure that EasyMock does not work with Java 9
updated year retrieval logic in TimestampUtils and added LOCAL _ TIME _ FORMATTER in SetObject310Test to ensure accurate year retrieval and improve
added null check before disconnecting the connection in ProtocolProviderServiceJabberImpl . java to prevent potential NullPointerException when connection is not initialized
updated string concatenation in TxnHandler . java to use cur _ ws _ commit _ id instead of committed . ws _ table to improve clarity
refactor BufferedInputFilter to use ByteBuffer instead of ByteChunk and improve buffer management to enhance performance and ensure proper handling of buffer overflow exceptions
added a method ` toSync ` to ` CompletableFuture ` in ` AsyncUtils ` and created a corresponding test class ` AsyncUtilsTest ` to
added ActionGraphBuilder to multiple compiler factory classes and updated related imports to enhance action graph management and improve code clarity
added a new test method ` testUploadingWithHiddenFileInput ` in ` UploadTest . java ` to verify upload behavior with hidden files
removed unnecessary try - catch blocks from SQLManager . java to streamline code for better readability and maintainability
added a check to return the local Maven directory if the file does not exist to ensure the correct directory is returned when the file does not exist
ggb - 1341 show algebra label only when there be a hidden label
fix : fix npe in ctelementimpl . getmetadata ( )
replaced ` setFlags ( ) ` with ` addFlag ( C . BUFFER _ FLAG _ DECODE _ ONLY ) ` in ` Default
added a condition to check if the cached is sorted by in the isReorderingDisabled condition to ensure that the reordering logic only occurs when the
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call for verify ( mock ) here " to
added null check before logging the expire time in ContactsBackupJob . java to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` implementing a test method for instantiation of ` void ` to facilitate
added @ AddToRuleKey annotation to ToolType in ClangCompiler and GccCompiler classes to indicate that the toolType is added to
added a constant for PINCODE _ TIMEOUT and updated timestamp comparison logic to use a constant to improve code readability and maintainability by redu
added ` isSampled ( ) ` method to ` PrometheusMeterRegistryTest ` and ` PrometheusExemplarsSample ` classes to
removed @ Ignore annotations from multiple test classes to clean up the code and improve readability
http : / / issues . apache . org / jira / browse / amq - 4892 - fix test failure
added a check for artifical tables in MetaDataSource . java to ensure proper handling of artifical tables in the database
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
added null checks and null checks for session attributes in MongoSessionManager . java to improve robustness by preventing potential NullPointerExceptions
replaced fixed size setting with setSizeFromLayout ( ) for surfaceHolder to improve layout management for better user experience
replaced direct calls to ` _ stopping ` with ` CountDownLatch ` for clarity to improve code readability and maintainability by redu
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 14836 : defaultmessagehistory now calculate the elapsed time if the timestamp be null
refactor exception handling in DelayedMonoPublisherTest to use a single item directly to improve code readability and maintainability by reducing
added a validation check for WebSocketHandshakeException in WebsocketTest . java to ensure proper error handling for WebSocket handshake errors
refactor the AllAppsTransitionController class to use View . OnLayoutChangeListener for layout change handling to improve code readability and maintainability by
refactor variable names from ` theHandler ` to ` handler ` for consistency to improve code readability and maintainability
added support for setting the " default - output - channel " attribute in XPathRouterParser and updated test cases in XPathRouterParserTests to enhance
updated cacheSeconds from int to String and modified cacheSeconds handling in MessageBundleProperties , CasCoreWebConfiguration , and CasCoreWebConfiguration to
updated the OpenAPI version from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in multiple Java files
removed the append ( buffer , true ) method call from ByteBufferPool . java to simplify the code by eliminating unnecessary operations
added a warning message for detected the alt - rt . jar in the boot class path to provide clearer feedback when the alt - rt .
updated database query parameters and assertions in JdbcScimUserProvisioningTests . java to ensure consistency and correctness in user management tests
replaced ` Arrays . asList ` with ` ArrayList ` and added ` UnlockDiagnosticVMOptions ` and ` DebugNonSafepoints `
added a method ` isStreamEmpty ( ) ` to check if the stream is empty in ` WebCamInputPanel ` to ensure that
added a condition to check if the content view has a content before processing the buffer to ensure that the buffer is only processed when the content is
refactor AtmosEndpoint class to improve code structure to enhance maintainability and readability of the code
added support for " printf " and " print " methods in Java2TypeScriptAdapter . java to ensure proper handling of " println " and
added a new Java file ` TestCapacityUntilGCWrapAround . java ` to verify capacity wrapping behavior on 32 - bit platforms to ensure that
refactor package - info . java files for mmm and ppp packages to improve code organization and maintainability
added a condition to calculate the endTime based on the res stampedAtStart to ensure accurate time calculation for sampling results
added a new test class ` ErrorHandlerAdviceIssueTest ` to validate error handling behavior to ensure proper functionality and error handling in the application
improve error message for invalid icc _ profile chunk
added a new method ` shouldCauseReequipAnimation ` to ` ItemTerraPick ` , ` ItemGravityRod `
added a check to ignore configuration and environment entries in SpringModule and SpringModule to ensure that configuration and environment beans are registered only when they are
replaced ` Thread . currentThread ( ) . getContextClassLoader ( ) ` with ` container . getParentClassLoader ( ) ` in ` WebappLoader `
added handling for additional nameupdater . properties files in NameUpdater . java to streamline the processing of nameupdater . properties files for improved
added initialization of started variable in EllipsoidRegionSelector . java to ensure that the region selector is started before proceeding
replaced hardcoded URI URIs with a constant for the default codenameone protocol to improve code readability and maintainability by centralizing URI
[ geos - 4392 ] add validation for sorting by property name in getfeature
removed null check for grantTuple [ 0 ] in AbstractJdbc2DatabaseMetaData . java to simplify the code by avoiding potential NullPointerExceptions
added compatibility image handling in DiagramGenerationTest . java to ensure correct image rendering with compatible images
add a null check for sidedDelegate in FMLCommonHandler . java to prevent potential NullPointerExceptions when sidedDelegate is null
refactor DataUtilities and ReTypeFeatureReader classes to improve code organization and maintainability
refactor LockTest to use AssertTask instead of CountDownLatch for clarity to improve code readability and maintainability by using a more
added a new method ` wholeWordTokenize ` and ` joinTokens ` to the ` StringUtil ` class to facilitate tokenizing
refactor response handling in CoyoteAdapter to use sendError instead of setStatus to improve error handling and provide clearer feedback for 404 errors
refactor command handling in SystemHighlighter to use a new variable ` commandIndex ` to improve code readability and maintainability by reducing
updated version and version date from " 1.0 . 0 " to " 1.0 . 1 - SNAPSHOT " to reflect the latest
updated buffer position calculation in StarTreeRecordStoreCircularBufferImpl . java to ensure correct positioning of the buffer based on dimension size
added drag - and - drop functionality to QuickstepTestInformationHandler , SystemUiProxy , TouchInteractionService , and SystemUiProxy classes to
added unit tests for the ` SocketAppenderSocketOptionsTest ` class in ` SecureSocketAppenderSocketOptionsTest ` and ` SocketAppenderSocketOptions
added " PSK - AES256 - GCM - SHA384 + TLSv1.2 " to TestCipher . java to support TLS
corrected the method call from ` getDescription ( ) . getText ( ) ` to ` getLongDescription ( ) ` in NearbyMapFragment
added JsonProperty annotation to ScimGroupMember . java to enable serialization of the value in the ScimGroupMember class
added support for schema scoring in HqlQueryRenderer and updated test cases in HqlQueryRendererTests to enhance query parsing capabilities and ensure correct
corrected the spelling of " d " to " s " in the ObjectHelper . requireNonNull method to improve code readability and maintain consistency
refactor Parser class for improved readability to enhance maintainability and clarity of the code
updated the ` offsetStreamIndex ` method to include an ` indexStartsAtOne ` parameter and modified track selection logic to ensure correct positioning
updated byte array initialization in MagicDetector . java and updated test cases in TestMimeTypes . java to ensure correct handling of byte values and improve
[ hotfix ] [ table - planner - blink ] remove obsolete getmonotonicity method from flinksqloperatortable
added equality and hashCode methods to OneTimeTokenAccount and OneTimeToken classes to enhance the functionality of OneTimeTokenAccount and OneTimeToken
added a condition to check if the assistant is notLaunched before proceeding to ensure that the assistant is only executed when the assistant is not
added a new file SolarisShortDSA . java that implements a algorithm for generating a short - dSA private key and signature to
added a call to toggleSearchLabel ( false ) in ListFragment . java to improve user experience by disabling the search label
cloudstack - 3842 : do n ' t attempt to create a snapshot on the same volume when create a snapshot on the same volume
refactor ` FileDetailActivity ` to use a ` DetailsServiceConnection ` class instead of a ` ServiceConnection ` to improve connection management and
replaced the usage of ` getFailure ( ) ` with ` AtomicReference < Throwable > ` in ` HttpClientTLSTest . java `
removed the equals method from ConjunctionScorer . java to simplify the equals method for better readability and maintainability
added a null check for colliding items in the bindItems method to prevent potential NullPointerExceptions during item binding
cpmemberaddremovetest now wait for leader election to complete
refactor cache size calculations in DefaultCache . java for improved clarity and performance to enhance code readability and maintainability by reducing
updated API paths from " / api / v2 " to " / api / v3 " and modified order properties in CryptoFacilitiesAdapters
added a method ` empty ( ) ` to check if the size ( ) is zero to provide access to the ` empty ( ) ` method
added Optional import and updated test annotations in AsyncPageReader , TestDrillParquetReader , and TestDrillParquetReader classes to
updated the ` buildChannelName ` method to accept an additional ` SubscriptionType ` parameter and modified argument handling in ` SerumStreamingService .
added config option to disable charging animation when a item is charging on the mana pool to enable the animation when a item is char
[ java ] fix aeroncluster . connect ( ) and clusternoderestarttest . connect ( ) .
replaced ` ignore ` with ` ex ` logging in ` WaitForHelper . java ` to improve error logging for better debugging and debugging
updated assertions in DefaultServletTest to use JUnit Assume . assumeTrue instead of FS . ensureDirExists to improve test reliability by ensuring
replaced direct calls to ` StyleInjector . inject ( ) ` with direct calls to ` stylesProvider . openScreenStyle ( ) ` to
replaced ` String ` with ` FileResource ` for file handling in ` BaseLiquibaseTask ` and ` DBDocTask `
fix blockworldvector . getz ( ) to use getx ( ) instead of gety ( )
changed the visibility of ` CacheEntry ` from package - private to final in ` LongConcurrentLRUMap . java ` to enforce immutability
replaced singleElement method with a regex pattern in ReflectionProcessor . java to ensure proper handling of literal values in resource configuration
updated the cache retrieval logic in FileCredentialsCache . java and modified argument handling in EmptyCC . java and EmptyCC . java to improve cache
changed the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to reflect the
refactor ` hasSufficientPeers ` method implementations across multiple classes to improve peer checking logic to enhance clarity and maintainability of peer availability
corrected a typo in the method call from ` getId ( ) ` to ` getId ( ) ` in ` WebDriverServlet . java `
do n ' t expand " AreEqual [ X , Y ] , Segment [ X , Y ] , Segment [ Z , W ] ]
added a condition to clear pending rendering operations if the implementation is minimized to ensure that pending rendering operations are only cleared when minimized
do n ' t wait for the deadline in hazelcasttestsupport . testdeadline ( )
refactor CoalescedWriteBehindQueue to improve handling of existing delayed entries and add a setter method to improve code clarity and ensure
set the icon of the JLabel to null in GroupTreeCellRenderer . java to ensure that the icon is properly set for better user experience
updated test method names from ` testRedirectMatches _ strict ` to ` testRedirectMatches _ default ` and ` testRedirectMatches _ nonstrict
added IO closing functionality to ShutdownMonitor and modified ShutdownMonitorTest to improve socket management and ensure proper shutdown behavior
refactor fill rate calculations in RandomAccessStore . java for improved readability and maintainability to enhance code clarity and maintainability by
refactor field handling in Json . java to improve clarity and structure to enhance code readability and maintainability by encapsulating field setting logic
[ hotfix ] [ runtime ] move componentclosingutils to coordination
cloudstack - 2321 : do n ' t crash if vm be in a concurrent state
fix ipv6 range check in configurationmanagerimpl . getipv6range ( )
updated variable names from ` userDetailsManagerConfigurer ` to ` beanNames ` in ` InitializeAuthenticationProviderBeanManagerConfigurer . java `
increased the retry timeout from 15 seconds to 30000 milliseconds in the getLeaderRetry method call to allow for more time for the leader
replaced ` String ` input ` with ` Exception ` in ` errorMessage ` methods across multiple parameter classes to improve error reporting by providing clearer
updated image positioning from x and y to - x in URLImage . java to ensure proper positioning and positioning of the image
updated the field name comparison from solrDocument1 to solrDocument2 in SolrTestCaseJ4 . java to ensure accurate comparison of field names
refactor error handling in SetFunDef to use a new method ` isItemZeroHighCardDim ` to improve code readability and maintain
updated the exception handling in StreamConfig . java to include the exception parameter to improve error handling by providing more context on the exception
refactor Preprocess to use StringBuilder instead of String for improved performance and readability to enhance performance and maintainability of the code
reformatted the read method in MessagePack . java for improved readability to enhance code readability and maintainability
added a new annotation ` Mapper ` interface in the ` org . apache . ibatis . annotations ` package to provide a structured way to
added a check for FHir comments in JsonParser and created a new test for handling empty extension lists in JsonParserR4Test to
updated whitespace in artifact parsing and added null checks for external meta entries in LibraryManager . java to improve code readability and prevent potential NullPointerExceptions
added a alias for " node _ popup _ scripting " in ScriptingMenuEntryVisitor . java to enhance the functionality of the Scripting
updated hidden flag constants and improved animation duration in OverviewActionsView and RecentsView classes to enhance user experience by allowing custom animation
camel - 14263 : camel - jms - jms should use class cast instead of cast to jmsmessage
updated whitespace in multiple Java files for consistency to improve code readability and maintain consistency
deleted deprecated files ` AbstractDelegatedVerb . java ` , ` FailureContext . java ` , and ` FailureContext . java ` to remove
updated GzipHandlerTest to use final variables for content and added a MicroServlet for handling micro headers to improve code clarity and ensure proper handling
replaced ` getAndAdd ` with ` BackpressureUtils . getAndAddRequest ` in ` OnSubscribeRedo . java ` and added a
added logging functionality and improved error messages in SpeedmentImpl . java to enhance debugging capabilities and enhance debugging capabilities
added a new file LoadDSpaceOAIConfig . java to load DSpace OAI configuration from the servlet context to facilitate
hbase - 11818 storescanner . scan ( ) do n ' t call reset ( ) if the matcher . row be null
[ camel - 14836 ] camel - jbang - enable / disable jmx for camel - test
replaced double quotes with a constant CANONICAL _ PACKAGE _ SEPARATOR in SourceLineAnnotation . java to improve code readability and maintainability
added YARN binary handling and app ID retrieval in HiveConf and RemoteSparkJobMonitor classes to enhance application management and improve application ID management
added support for " maria " database name in DbConnectionManager to ensure compatibility with different database types
updated log message formatting in MasterWalManager and SplitLogManager classes to improve readability and maintain consistency in logging output
added a new test class ` ExecuteAndReturnStringTest ` to validate network error handling to ensure proper functionality of network error handling in the application
added a new file ` InvokespecialInterface . java ` that implements a interface and invokespecial interface methods to provide a way to invoke
refactor EvictingBoundedList class to improve code organization to enhance maintainability and readability of the code
refactor traversal mode and encoding manager initialization in GraphHopper . java to improve clarity and maintainability of the code
added a null check for backgroundDisabled in SelectBox . java to ensure selection is valid and prevent potential NullPointerExceptions
added a null check for the metadata in RpcServer . java to ensure that unsupported methods are thrown when the metadata is null
updated calculation of hotseatCellSize and hotseatIconCenter in TaskbarViewController . java to improve layout spacing for hotse
replaced direct string concatenation with a direct retrieval of partitionColumnIndex in ExpressionTree . java to simplify the code and improve readability by reducing
added Versioned interface to NamedTaskDecorator and updated data handling in TaskDefinition to ensure compatibility with the latest versions of the NamedTaskDecorator
updated the method call from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ReplicationHandler . java to ensure the correct
changed the default value of the ` equal ` variable from false to true in ` DisplayModeTest . java ` to ensure that the ` equal
updated UnicodeToLatexFormatter to handle special characters and added a new test for high codepoint Unicode characters to improve character formatting accuracy and ensure correct
added null checks for values and adjusted value assignment logic in OAIDCCrosswalk . java and Item . java to ensure proper handling of
simonstewart : do n ' t select a window when there be no window
added clear button functionality to StringSearchPanel , BookmarksPanel , and DataBrowser classes to enhance user experience by allowing users to clear all tables
refactor port handling in OAuth2AuthorizationRequestRedirectFilter to use a utility method for building full request URLs to improve code readability and maintain
replaced instances of ` java . sql . Date ` with ` java . sql . Dates ` and updated assertions in ` SoftAssertions
updated the adaptOrders method to include a reverse parameter and modified the order adaptation logic to enhance order adaptation by allowing reverse orders to be
added null and negative check for vartype in PrettyPrinter . java and created a new Java11Var class with a test method to improve robustness
simonstewart : remove unused import of org . openqa . selenium . testing . NotYetImplemented from multiple test files
removed unnecessary null check for Hadoop configuration properties in HiveConf . java to streamline code by eliminating unnecessary debug logging
changed the method call from ` drawChildren ` to ` draw ` in ` WidgetGroup . java ` to ensure proper rendering of child elements in
added a new test class ` FileSplitStreamingWithChoiceTest ` to validate file streaming functionality to ensure proper handling of file split scenarios with different
replaced ` System . getProperty ( System . getProperty ( ) , file . getPath ( ) ) ` with ` getCatalinaBase ( )
add unit tests for the getBestDateTimePattern method in ShadowICUTest and ShadowICU classes to ensure correct functionality of the getBestDateTimePattern
updated the size of the HashMap in PlotSquared . java from 4 to 16 and added color information to enhance the visual representation of color codes in
added ZuulProperties parameter to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enhance configuration flexibility by allowing
tika - 2243 -- set default time zone to UTC in fontparsertest
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to retrieve the build time from ` Instant
updated the calculation of xDist to use Math . abs instead of a fixed value to ensure the correct positioning of the scroller ' s
deleted the GUIRWTester . java file to remove unused code to streamline the codebase
removed nullabledecl annotations from methods in LazyMessage , StandardSubjectBuilder , and CustomFailureMessageTest to simplify method signatures and improve code clarity
corrected formatting of the message in TestStream . java to improve readability and maintainability of the code
changed package declarations from ` org . thymeleaf . templateparser ` to ` org . thymeleaf . templateparser . markup
added a new test method ` testXPathString ` in ` XPathTest . java ` and updated its usage in ` XPathTest . java `
added @ Nullable annotation to FutureUtils . java to indicate that the FutureUtils class cannot be nullable
added support for ` DynamicInvokeExpr ` in ` OnFlyCallGraphBuilder ` to indicate that ` InvokeDynamic ` is not resolved during
updated email names from " myfakeemail @ gmail . com " to " myrealemail @ example . com " in ContextTest .
refactor HTTP response handling in HttpConnectionTest . java and modify URIUtil . decodePath method in URIUtil . java to improve code cl
added the ` getColumnDataType ` method implementation in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to return the
added default methods to ` AsyncClientInterface ` , ` SyncClientInterface ` , and ` V2TestDynamoDbBaseClient ` to
refactor HSSFPictureData class to improve code structure to enhance maintainability and readability of the code
replaced ` long ` with ` Instant ` for startTime and stopTime in ` Statistics . java ` to improve clarity and consistency in time
refactor version handling in LibMediaInfoParser to utilize a new version variable to improve code readability and maintainability by centralizing version
updated the ` reflectIdeaDependency ` method to accept ` IdeaDependency ` instead of ` DefaultIdeaSingleEntryLibraryDependency
added a new file ` SerialHeap . java ` and modified ` Universe . java ` to use it in ` GenCollectedHeap `
added multiple @ SuppressWarnings ( " serial " ) annotations to $ Gson $ Types . java to suppress serialization warnings for better code clarity
refactor mouse wheel event handling to use Vector2i instead of int for consistency to improve code readability and maintainability by using a more
updated the method to handle null values in MongoQueryCreator and added a null check in AbstractPersonRepositoryIntegrationTests to ensure proper handling of null
[ hotfix ] [ table - planner - blink ] add multiset typeinfo to maptypeinfo
added ` retrieveByIssuer ` method to ` XOAuthProviderConfigurator ` and corresponding tests in ` XOAuthProviderConfiguratorTests ` to ensure that
added a check for delimiters in CMapParser and a corresponding test in TestCMapParser to ensure proper handling of whitespace in CMapParser
refactor ContactsBackupJob to use OperationsServiceConnection instead of starting and unbinding operations service connections to improve service management and facilit
refactor constraint handling in ` ForAll ` and add new classes ` T6938454a ` and ` T6938454b `
added a new method ` isConfigHidden ( ) ` in ` AccountList . java ` and implemented it in ` AccountID . java `
added a check forconsistent number of displays in DisplayController . java to ensure consistent display state and improve debugging information
updated schema removal logic in PMetaDataImpl and added a test for schema removal in PMetaDataImplTest to ensure the schema is properly removed and
simonstewart : fire the " loginpassive " event in the loginoperationw to fire the " loginpassive " event
added a new Box2DTest class and updated GDXTester and Box2DApplication to use it to enable testing of Box2D
updated string formatting in ColumnFamily . java and added debug logging in Table . java and LocalByPartionerType . java to improve code
increased DEFAULT _ BUFFER _ REQUEST _ TIMEOUT from milliseconds to minutes in HybridShuffleConfiguration . java to allow more time for buffer
added DEFAULT _ GENERATOR _ NAME and DEFAULT _ GENERATOR _ VERSION constants to SpeechSettings . java and updated package - info . java
added a help button to the OpenOfficePanel to enhance user experience by providing a more informative help message
refactor TCP _ NODELAY option to childOption in NettyAcceptor , ProtocolDecodingServer , and ProtocolPublishDecoding
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , BinanceFundingHistoryParams , and BinanceTradeService classes to
refactor class reference handling in ScanResultObject . java to improve code clarity and maintainability to enhance code readability and maintainability by
refactor connection handling in DecodeServlet to use try - with - resources instead of try - with - resources to improve resource management and prevent potential
added a new method to query DSL null handling in Querydsl . java and created a new test class QuerydslIntegrationTests . java to
added a null check for actor before processing actions in ParallelAction and SequenceAction classes to ensure actions are only processed when the actor is null
fix ( test ) : fix typo in cttypetest
added synchronization to the sfWriters lock in HDFSEventSink . java to ensure thread safety during shutdown and prevent potential memory leaks
added a new file ` Issue888 _ JavaI . java ` that implements ` Issue888 _ KotlinI ` and implemented
added support for revokeing an existing agent certificates in CertificateManager to enhance security by allowing users to revoke an existing agent certificates
added a check for no - body response codes in AbstractHttpTest and modified HTTP response handling in HttpServerTestBase to ensure proper handling of response
refactor script loading logic in ScriptTransformer . java to improve error handling and clarity to enhance robustness by providing clearer error messages for
updated the connection pooling type from " BONECP " to " DBCP " in HiveConf . java and added HikariConfig
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` in multiple test files to
added lock management functionality to the FileMenuFilter and OCFileListFragment classes to enhance user experience by allowing users to manage file locks more effectively
refactor Version class to improve code readability to enhance maintainability and facilitate future updates
clear endpoint cache when create a new keyspace
refactor wait state handling in Locks and ThreadExecutionSynchronizer classes to use a dedicated method for better readability to improve code maintainability
replaced ` getRule ( ) . getExportedName ( ) ` with ` context . deps ( ) ` in ` SkylarkDescription
simplified the interface ` LocalStorage ` and ` SessionStorage ` from ` java . util . Set ` to ` java . util .
added null check for existingView before checking for view creation in PlanExecutor . java and updated test cases in CreateViewStatementTest . java to
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error handling clarity and ensure proper exception handling
added a null check for the query string in SpellCheckComponent . java to prevent potential NullPointerException when the query string is null
added validation for header values in Headers . java to ensure proper handling of illegal characters and whitespace in header values
replace instanceSize with arrayBaseOffset in HybridLayout . java and update related methods in HostedInstanceClass . java and UniverseBuilder
refactor ` setContainsComment ` method to use ` AbstractApexCommentContainerNode ` instead of ` ASTCommentContainer ` to improve code
hhh - 51050 - add ` ` fetch = ' join ' ' and ` ` lazy = true ' ' to fetchoptionshelper
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter to extend AbstractSpecFilter instead of implements SwaggerSpecFilter
added assertions in TestCompactionTxnHandler and set database name and tablename in TxnHandler to ensure correct comparison of database and table names in the
added Suspendable interface to TimerConsumer and created a new TimerGracefulShutdownTest class to facilitate graceful shutdown of the timer
added a condition to check if the block is processed before adding traces to ensure traces are only added if the block is processed before adding them to
replaced ` contains ` method with ` CollectionUtils . contains ` in ` ProviderManager ` and added unit tests in ` ProviderManagerTests ` to
removed exception handling for PostgresDatabase in InsertOrUpdateGeneratorPostgres . java to simplify the code by eliminating unnecessary exception checks
added query assertions and handling for local index limit in multiple classes to ensure correct handling of query results and improve query performance
added a check to ensure that a collection with the same name and a different type is used in the past to prevent adding a collection with the
updated cursor calculations in VDUBuffer and vt320 classes to ensure correct positioning and positioning based on screen base to improve accuracy of cursor
removed the static final String constant USE _ RETRIES from HttpShardHandlerFactory . java to streamline the code by eliminating unnecessary
updated the version number formatting in JavaVersion . java and added a new test case in TestJavaVersion . java to improve code readability and
added a check for empty input gates in StreamTask . java to prevent processing when there are no input gates available
added a new test method ` test ( ) ` in ` TestReceivingMessageSourceParserTests . java ` to facilitate testing
added null check for properties in RemoteCluster . java to avoid potential NullPointerException when properties is null
replace throwing of IOException with a new instance of IOException to improve error handling by providing a more informative error message
ambari - 1187 . fix javadoc error in ambari - core ( jesus camacho rodriguez ,
added a new TxConfidenceListener instance and updated the confidence update logic in TxIdTextField . java to ensure that the confidence listener is properly
added a constant for the G1 Perm Gen name in JmxSupport . java to facilitate testing of the G1 Perm Gen
removed unnecessary imports and simplified the return statement in NearbyController . java to streamline code and improve readability by eliminating unnecessary
pdfbox - 4892 : make cloneutility public , a suggest by valerybokov
added a condition to check if the activity type is not home before processing the gesture state to ensure that the gesture state is only checked when the
rename ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and update related methods to improve clarity and consistency in naming con
changed method names from ` shouldGiveNetworkCountryIso ` to ` shouldGiveNetworkCountryIsoInLowercase ` and ` shouldGet
removed the setUnfreezeAmount method call from the UnfreezeBalanceV2Actuator class to streamline the code by eliminating unnecessary
updated descriptions in ConferenceSchedulingXlsxFileIO . java to use " per match " instead of " per minute " to improve clarity
replaced ` Files ` with ` FileUtils ` and updated the ` copyModel ` method to use ` FileUtils ` instead of ` Files ` to
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
refactor Observable class to improve code readability to enhance maintainability and facilitate future updates
updated the ` pushAll ` method in ` Update ` and added multiple test cases in ` MongoTemplateTests ` to enhance functionality and ensure correct
added a null check for the randomUUID before setting the hubChangeLog ID to avoid potential NullPointerException when randomUUID is null
added hover event handling in InputConsumer and OverviewInputConsumer classes to handle hover events more effectively to improve user experience by enabling quickstep
updated the initialization of ` boostrapConf ` in ` CoreContainer . java ` to ensure proper handling of the ` bootstrap _ conf `
camel - 16400 : camel - netty - allow consumer to specify the max header size .
hbase - 13535 increase client retries from 5 to 15 in HBaseTestingClusterAutoStarter . java to allow for more than 15
replaced ` toPath ( ) . toFile ( ) ` with ` getAbsolutePath ( ) . getAbsolutePath ( ) ` in ` SourceSnippetHelper . java
refactor EncodedGraphCacheTest to initialize the callTarget variable and improve graph caching logic to enhance code readability and maintainability by reducing
updated query command from " customer _ count " to " all _ tables " and added a new test for query over output to improve clarity
added currency handling for Kraken assets in KrakenAdapters . java to ensure accurate currency metadata for Kraken assets
added a ` toString ( ) ` method to ` AnyOf ` class and a corresponding test class ` AnyOf _ toString _ Test ` to
[ java ] : fix npe in alerttaskrunnerv2 when there be no dimensions
[ beam - 26022 ] enforce non - blank measurement influxdbpublisher ( # 2249 )
renamed ` doTransform ` method to ` downcast ` across multiple converter classes to improve clarity and consistency in method naming conventions
added a new method ` isUniqueLocalAddress ` to check for unique local addresses to ensure that unique local addresses are only considered for local addresses
refactor column name handling in DataTextFormatter to use a new method ` quoteColumnNames ` to improve code readability and maintainability by central
added methods to set system properties and methods in WrapSystem , StrUtils , and ClassWrapper classes to enhance functionality for setting system properties and improve
added a constructor to UpdateRequest that initializes the Request class with a POST method to enhance request handling capabilities by allowing POST requests
renamed the enum declaration from static to instance in ProtoTypeAdapter . java to improve clarity and consistency in naming conventions
added a new method ` addExperimentalFormatWarning ` to the ` RequestHandlerUtils ` class to indicate that the response format is experimental in the
updated debug logging format in JpmsUtil . java to improve clarity of debug output to enhance readability and maintainability of the logging
added a method to retrieve the default label font in UITools . java and updated rowHeight calculation in AttributeRegistryTable . java , ConditionalStyle
[ hotfix ] [ broker ] remove unnecessary null check in defaultbrokerheartbeatmanager
refactor partition size and count calculations in CqlInputFormat . java to improve clarity and consistency to enhance code readability and maintainability
simplified the condition in JUnitTestsShouldIncludeAssertRule . java for improved readability to enhance code clarity and maintainability
added equals and hashCode methods to RuleTerminalNodeLeftTuple class to ensure proper equality and hash code generation for rule agenda items
added a check for HIVESTAGEIDREARRANGE in the TezCompiler to resolve StageIDsRearranger based on configuration settings
corrected the package name from " org . apache . cassandra . concurrent : type = MESSAGING - SERVICE - POOL " to " org
added a check for total memory before processing in LotsOfOutput . java to improve memory management and provide clearer output for consume operations
added import statements for Document and updated default DimConfig initialization in multiple facet classes to enhance documentation clarity and maintain consistency in document handling
updated ` LdapAutoConfiguration ` , ` LdapProperties ` , ` LdapAutoConfiguration ` , ` LdapProperties ` , and ` LdapAutoConfiguration
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
changed the access modifier of the EchoInputDoFn class from public to private to restrict access to the EchoInputDoFn class for better encaps
added ` finishMocking ` method to ` MockitoSession ` and modified ` DefaultMockitoSession ` , and ` StubbingWarnings
refactor ` GoTestDescription ` and ` GoTestIntegrationTest ` to use ` params . withDeclaredDeps ( ) ` instead of `
refactor SPDYAsyncConnection , HTTPSPDYAsyncConnection , SPDYAsyncConnection , and HTTPSPDYAsyncConnection
replaced ` BlockLiquid . getStaticBlock ( material ) ` with ` BlockLiquid . getFlowingBlock ( material )
updated background class handling in AndroidLocationPlayServiceManager and BackgroundLocationHandler to utilize Uri for improved URL handling to enhance user experience by
refactor AprEndpoint class for improved clarity to enhance maintainability and readability of the code
[ hotfix ] [ cli ] handle streamingplan in optimizerplan
refactor item hash calculation in CraftingManager . java to improve clarity and efficiency to enhance code readability and maintainability by reducing
[ hotfix ] [ test ] fix checkpoint failure in testfilechannelrestart
refactor whitespace checks in TabsAndIndentsVisitor . java to improve readability to enhance code clarity and maintainability
added regex pattern matching for " pg _ temp _ . * " in NeuteredLinesFilter . java to ensure proper handling of temporary file
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added conditional checks for " INTERVAL " and " NCLOB " data type in DataTypeFactory and ColumnSnapshotGenerator to ensure correct handling of
added a method ` isPublishingHistogram ( ) ` to ` WavefrontDistributionSummary ` and modified metrics handling in ` WavefrontMeterRegistry
updated the handling of ` handleAdd ` and ` upstreamHost ` in ` ShenyuClientRegisterSpringCloudServiceImpl ` to
added a new method ` registerListener ` to ` ShadowSensorManager ` to enhance the functionality of the ` registerListener ` method
added SSL test methods in HttpServerTestBase and SelectChannelServerSslTest classes to improve error handling and logging for SocketException in tests
added null check before closing Ignite component and improved logging in AbstractFeatureTest , AbstractFeatureTest , and CamelIgniteTest
added a condition to handle cases where the total line number is zero and isReachEnd is set to improve error handling and provide clearer feedback
pdfbox - 4892 : catch unsupportedflavorexception instead of ioexception
added unit tests for the ` setDisplayHdrCapabilities ` method in ` ShadowDisplayTest . java ` to ensure proper handling of supported HDR capabilities
set classloader to null in JavacInMemoryStep . java to ensure proper resource management and prevent potential memory leaks
updated error messages in SemanticAnalyzer . java and added a toString method in SemiJoinHint . java to improve clarity of error messages and
added a constructor to the Message class to provide a way to initialize the Message instance
added a boolean variable ` isGUIClass ` and updated bug priority handling in ` SerializableIdiom . java ` to ensure proper handling of
updated PhoenixDecimalObjectInspector and PhoenixObjectInspectorFactory classes to utilize PrimitiveTypeInfo instead of DecimalTypeInfo to improve
updated CompressionFilterTestServlet and CompressionResponseStream to check if the response is committed before setting the Content - Encoding header to ensure proper output stream
corrected the spelling of " WWWAuthenticate " to " authenticateHeader " in the Authenticator class to improve code readability and maintain consistency
added a condition to check if the directory name starts with " EJS " and " _ " in the DCD class to ensure proper handling
updated ThreadLeakTest to use a separate method for retrieving the thread group name to improve code readability and maintainability by centralizing thread
refactor afterPropertiesSet method to use logging for security interceptor checks to improve code readability and maintainability by reducing redundancy
updated package name from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools ` to
removed the import of Lombok . ToString in RegisteredServiceChainOperatorTypes and ChainingRegisteredServiceDelegatedAuthenticationPolicy classes to streamline
cloudstack - 4892 : add iso path to the list of iso disk for a user vm
refactor SignalHandler handling in SigInt . java and SigIntTest . java to improve clarity and consistency to enhance code readability and
replaced ` ArrayUtils . isEmpty ` with ` ArrayUtils . isEmpty ` in ` NodeTool . java ` to improve code readability and maintainability
updated AxonAutoConfigurationWithSpringCloudTest to use Spring Boot and HibernateJpaAutoConfiguration instead of ContextConfiguration to streamline
added multiple @ Override annotations to ColorRGBA class to improve code clarity and maintainability
removed the resetInitializedPlanningEntities property and its getter / setter methods from multiple classes to streamline the code by eliminating unnecessary configuration
updated the TwoLevelArtifactCacheDecorator and CachingBuildRuleBuilder to include build time milliseconds and modified the build time calculation in multiple classes to
refactor field handling in GroupByOperator to use a ArrayList for improved readability to enhance code clarity and maintainability by centralizing
added null checks before adding block appearances in Wallet . java to avoid potential NullPointerExceptions when block is null
added support for CNC currency pairs in the BTCE and TickerDemo classes to enhance currency handling capabilities for CNC and BTC
updated the skewAllowance value from 5 to 15 and modified related classes to use CasConfigurationProperties for better configuration management to enhance flexibility in
updated sorting logic in SongListActivity and Utils to use ItemSortBy instead of null to improve clarity and consistency in sorting functionality
removed unused imports and modified the readBodyToBytesIfNecessary method in Utils . java to streamline the code and improve readability by eliminating
refactor LegacyBaseBlockWrapper to extend LegacyBaseBlockWrapper instead of BaseBlock to simplify the codebase by eliminating unnecessary dependencies
updated IcebergBranchExec and TestHiveIcebergBranchOperation to check for tag existence before retrieving snapshot ID to improve error handling
replaced ` newArrayList ` with ` Collections . singletonList ` in ` AbstractLdapMockMvcTest . java ` to improve the handling of external groups
updated the ` boxesSsboBinding ` variable in ` HybridDemoSsboInstancing . java ` and ` Phot
added a check for ` requirePasswwordChangeRequired ` in ` IdentityProviderEndpoints . java ` and improved error handling in ` Identity
added a check for initialization in constructors in UnreadFields . java to ensure that notInitializedInConstructors are only removed when assumeReflective is
updated SQL connection URL handling in JdbcExecutor . java to ensure proper URL generation based on the connection state
added a new test method ` testRequiredBody ` in ` SpringmvcClient . java ` to verify user data and user names to ensure
updated regex patterns for user and password in CredentialInjector . java to ensure consistent pattern matching across different operating systems
added " Item4 " to the menuItems array in ActionListenerCalledTwiceTest . java to support additional menu items in the application
updated print statements in TestCoreParser . java for improved clarity and consistency to enhance readability and maintainability of the test output
simplified the equality check for children in SimpleNode . java to improve code readability and maintainability
changed the access modifier of the PopulatorContextStackItem class from public to package - private to allow access to the PopulatorContextStackItem
updated the retrieval of the number of documents in MoreLikeThis and added a test for small sample from corpus in TestMoreLikeThis to
refactor event handling in QuestManager . java for improved readability to enhance code clarity and maintainability
[ hotfix ] [ test ] make networkbufferpooltest a static final
replaced instances of ` new BasicDBObject ( " $ gt " , 0 ) ` with ` append ( " $ lt " , upperBound
added a new method ` unsafeGetLong ` to the ` CompilerDirectivesSubstitutions ` class to facilitate native unsafe retrieval of long
replace " Asia / Amman " with " EET " in multiple time zone names to ensure consistency in time zone representation across the application
updated the ID from 90000010 to 90000011 in DeprecationLogger . java to reflect the latest version of the DeprecationLogger
hhh - 14703 - fix sessionimpl . getsessions ( ) to return null if we do n ' t have access to the
refactor suffix handling in DownloadExternalFile . java for improved clarity and consistency to enhance code readability and maintainability by reducing
added macOS support for the ` updateUI ( ) ` method in ` FreeplaneMenuBar ` to ensure the ` useScreenMenuBar
added a new test method ` piecewiseIntegration ` in ` GeoGebraCasIntegrationTest . java ` to verify the functionality of `
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods from private to protected
added a test for setting the modWhiteListPattern in HiveConf and implemented a test for configuration white list in TestJdbcWithSQLAuthorization to
removed duplicate entry mapping for invalid classes in EntryLoader . java to improve code clarity and maintainability
updated the method call from ` Team . sharded ` to ` player . team ( ) ` in ` MobileInput . java ` to ensure
updated the cookie domain from " comp1 " to " domainHelper . getHostName ( ) " in CookieImplementationTest . java to ensure the
added nullable validation logic to ` MissingColumnChangeGenerator ` , ` MissingTableChangeGenerator ` , and ` Column ` classes to ensure proper handling
refactor multiple security token service classes to improve code organization and readability to enhance maintainability and facilitate future development
added a new query and modified variable names in CustomCollectionTest . java and CompositeIdRouter . java to improve code clarity and ensure consistency
added snapshot management functionality to ExecutablePreparedStatementBase and updated dependenciesChangeLog and blobChangeLog in PostgreSQLIntegrationTest to improve snapshot management and ensure correct
added checks for max _ cached _ files and max _ cached _ file _ size and max _ cached _ file _ size in DefaultServlet .
added drag - and - drop event handling in JabRefFrame . java to ensure proper handling of drag - and - drop events in the
updated ` ExecutionUnitRunner ` and ` ExecutionUnitTest ` classes to use ` Description . createTestDescription ` instead of ` Description . create
updated the condition to check for non - empty strings before checking if myVersion and buildTimeString are not empty to improve code readability and
changed access modifiers of several methods from public to package - private in TimeUtils . java and related tests in GitBlitSuite . java to
updated security frame handling logic in RefectionMHTests to use VersionCheck for improved compatibility to enhance security frame handling and maintain compatibility with
updated file extension check from " jpg " to " jpeg " in PreviewImageFragment . java to ensure compatibility with different file formats
updated method handling in NativeImageDebugInfoProvider to handle HostedMethod instances correctly to ensure compatibility with HostedMethod instances and improve type conversion
added ` getIcon ( ) ` method to ` Data ` and modified ` ClassDisplayed ` initialization in ` DataTableTopComponent ` to improve icon
added a check for the last index before retrieving the name in CounterRequestAggregation . java to avoid potential null pointer exceptions when retrieving the name
refactor replacement logic in FindAndReplace and add a new test for dollar signsTolerated in FindAndReplaceTest to ensure correct
refactor connection handling in SmackPacketDebugger and ProtocolProviderServiceJabberImpl to improve clarity and consistency to enhance code readability
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a method ` copyDir ` to ` IO ` and refactored the ` copyDir ` method in ` SpecWebAppTest `
added error handling for unknown datum class in JacksonUtils to improve robustness by throwing a AvroRuntimeException for unknown data types
refactor build rule handling in DefaultJavaLibraryBuilder to improve clarity and maintainability to enhance code readability and maintainability by reducing
simplified height calculation in SelectBox . java by removing unnecessary padding calculations to improve code readability and maintainability
added normalization for dbName and tableName in ObjectStore . java to ensure proper normalization of identifiers for database and table names
updated database type checks and table retrieval logic in DbSqlSession . java to ensure schema is set when oracle database is used and schema is not
removed the Logout method call from the HomeFragment class to simplify the code by eliminating unnecessary logout logic
[ hotfix ] [ test ] update mockstreamingruntimecontext to 1 instead of 0
added null check for candidates in FastImportAction . java to prevent potential NullPointerException when candidates are null
updated the condition in ContainerLifeCycle to check if the bean is managed and updated assertions in ContainerLifeCycleTest to improve clarity and ensure
rename ` IExecutionAttributesDialect ` to ` IExecutionAttributeDialect ` across multiple classes to improve clarity and consistency in naming conventions
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure that the metadata is properly cleared
added null checks for the loc variable in CmdGetTime . java to avoid potential NullPointerExceptions when loc is null
added null check for measurement in TabletInsertionDataContainer and refactored disruptor queue handling in DisruptorQueue to improve robustness
deleted the Session2Token . java file to the codebase was no longer needed
volumeserviceimpl : do n ' t delete dest volume when create a new volume
added a new ` Install ` class to ` SystemShortcut ` and implemented web UI support in ` PopupDataProvider ` and ` InstantAppResolver
added a NullAuthoritiesPopulator to the LdapAuthenticationProvider class and updated its usage in LdapAuthenticationProviderTests to ensure that null authorities
added a check for the existence of the retrolambda jar in the Executor and CN1BuildMojo classes to ensure compatibility with Android and
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to improve code readability and maintain
refactor the ` sortLiveDocs ` method to use ` Bits ` instead of ` MutableBits ` to improve code readability and maintainability
added a method to handle null results in JMESPathExtractor to improve handling of null results during path extraction
added null and empty list checks for user authorities in AuthorizeTag . java to ensure that empty list is returned when no authorities are provided
updated assertions in multiple test classes for consistency and clarity to improve code readability and maintainability
[ flink - 2249 ] [ runtime ] fix typo in vmsnapshotmanagerimpl error message
refactor annotation handling in RobolectricTestRunner and related tests to improve clarity and consistency to enhance code readability and maintainability
replaced ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner . java ` to align with the latest Jetty
added a method to compare partition keys in HiveAlterHandler and updated partition key comparison logic in TestHiveMetaStore to improve partition key comparison
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to enable the visibility of the icon
simplified the condition in SimulationStatus . java for better readability to improve code clarity and maintainability
replaced ` SharedBlockingCallback ` with ` Callback ` in multiple classes to simplify the code and improve readability by using a more descriptive
added workspace listener functionality to PreviewControllerImpl and updated graph building logic in PreviewUIController to improve workspace management and ensure proper graph management during workspace
updated conditions in ReflectionFactory and ReflectUtil to check for VM anonymous classes to ensure proper handling of anonymous classes and improve code clarity
refactor TransportHelper class for improved readability to enhance maintainability and clarity of the codebase
updated file path formatting in CatalinaAcegiUserRealm . java to improve code readability and maintainability
ambari - 1748 . add log for startup actionmanager ( jesus camacho rodriguez )
added null checks for initialization and modify in JSONWriter . java to ensure proper handling of null values and prevent potential NullPointerExceptions
refactor method signatures in SliderAppsViewControllerImpl . java for improved clarity and consistency to enhance code readability and maintainability
added a check to ensure the backgroundManager is not attached before attaching to avoid potential null pointer exceptions when the background manager is not attached
added setCurrentTab ( 1 ) and updateAdjacentPagesAlpha ( ) logic in multiple classes to ensure proper positioning and positioning of pages
added null check for the URL parameter in BaseDataSource and created a test for it in SimpleDataSourceTest to ensure that the URL is invalid and
added JUnit 5 condition and modified PebbleTemplateEngine initialization in PebbleModuleTest . java to ensure compatibility with newer JRE
refactor FileDisplayActivity to use EditNameDialog instead of EditNameDialog to improve user experience by providing a dialog for creating a new directory
added support for toggling bar borders in multiple activities to enhance user experience by allowing customizable border widths in the chart
updated the SSL URI from " www . okcoin . com " to " www . okex . com " in OkCoinExchange . java
refactor test methods in AcceptedForagerTest to use a new method ` createStepScope ` to improve code readability and maintainability
replaced FileChannel with SeekableByteChannel in Files . java and added byte reading in BytesAndLines . java to improve performance and ensure
refactor getFlattenFieldTransferPair method to accept FieldReference as a variable and improve type safety to enhance code clarity and maintainability by
rename MockHandler to MockHandlerImpl in multiple files to improve clarity and consistency in naming conventions
updated conditional checks in SerializationConfigurationParser to improve clarity and consistency to enhance readability and maintainability of the code
added imports for ActivityManager and modified watch heap limit in QuickstepProcessInitializer . java to improve performance by limiting watch heap limits based on
refactor sumWithCompensation calculation in Collectors . java for improved readability to enhance clarity and maintainability of the code
log4j2 - 1343 fix test failure in abstractloadbundletest
modified the condition for serialization of the top - level deletion in PrecompactedRow . java to ensure proper serialization of the top - level deletion
updated return statements in ICC _ Profile , ColorConvertOp , and added a new InvalidRenderIntentTest class to improve code clarity and
added MeterRegistryLifecycle to manage MeterRegistry lifecycle lifecycle in MetricsAutoConfiguration to enhance monitoring capabilities for MeterRegistry lifecycle lifecycle
change log level from warn to info in ConfigurationUtils . java to improve clarity of log messages for better debugging
added error handling for certificate generation in CertificateFactoryTest . java to improve robustness of certificate generation process
camel - 1649 : camel - simple - allow to parse a predicate with ambiguous binary operator .
removed redundant code and added onFocusChanged method in EditorActivity and IDEEditor classes to improve code clarity and ensure Windows dismissed
updated error logging to include the user ' s name in the error message to include the user ' s name based on the current user ' s
updated file paths in SkeletonModelGpuSkinningTest . java and modified animation time calculation in OgreXmlLoader . java to improve
removed InterruptedException from the createOrThrow method signature to simplify the method signature by eliminating unnecessary exception handling
added @ Deprecated annotations to UpgradeResponse . java to indicate that these methods are outdated and should no longer be used
added d . ts file generation options to JSweet CommandLineLauncher and JSweetTranspiler classes , and implemented declaration generation functionality in JSweet
added a new test method ` testKinesisFetchTimeout ` to ` StreamConfigTest ` and modified the fetch timeout value in ` StreamConfig
updated the timestamp format in StreamingDataflowWorker . java to include an HTML file to enhance data processing capabilities for better user experience
increased the maximum number of metastore server threads from 100000 to 1000 to increase the maximum number of metastore threads for better
changed the return type of the onTaskSnapshotChanged method from void to boolean to enable the method to return true when the onTaskSnapshotChanged
updated the method call from ` mMaxShadowRadius ` to ` shadowRadius ` in ` SwipeUpAnimationLogic . java ` to ensure
added aggregatorInput annotation and a test for chainNestingAndAggregation in ChainParserTests . java to ensure correct handling of aggregator inputs and validate
updated loop condition in MarketSellAssetActuatorTest . java to use end instead of limit to improve error handling and provide clearer
changed the condition from ` isInternal ( ) ` to ` isInteractive ( ) ` in ` PolyglotContextImpl . java ` to
added a null check for previousCachedFilePath in CreateKeytabFilesServerAction . java to avoid potential NullPointerException when previousCachedFilePath is null
updated LauncherPreviewRenderer to use DisplayController instead of WindowManagerProxy to ensure compatibility with the new DisplayController implementation
removed redundant conditional checks for root directories in MetalFileChooserUI and SynthFileChooserUI to streamline code by eliminating unnecessary
updated screenSize retrieval from getToolkit ( ) to getDefaultToolkit ( ) to ensure consistent screen size retrieval by using the default toolkit
[ hotfix ] fix typo in recognise ( ) method
refactor JPASQLBase to replace assertEquals with assertEquals and add unit tests for entity handling to improve code clarity and ensure
simplified drag index handling in FreeformFinSetConfig . java to improve code readability and maintainability
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " to reflect the latest version of the mo
updated error message formatting in Runtime . java to improve clarity and maintainability of error reporting
updated error messages to include ` nerror ` in multiple files to improve error reporting for better debugging and clarity
added @ Deprecated annotation to Weights . java to indicate that the class is outdated and should no longer be used
refactor ` registerUnsafePlugins ` and ` StandardGraphBuilderPlugins ` to use a new method ` registerPlatformSpecificUnsafePlugins ` to improve
added Hint annotations to AndroidAppModularityDescription , AndroidGraphEnhancerArgs , and created corresponding test cases in AndroidBinaryModular
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to set mCenterPagesVertically to
[ hotfix ] [ table - planner - blink ] fix npe in migrationrequestoperation
rename ` HOST ` to ` BASE _ URL ` in multiple classes to improve clarity and consistency in naming conventions
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy ` to
updated test table creation and query handling in TestJdbcWithMiniLlap . java and LlapBaseInputFormat . java to improve database
added a new test method ` testCaseInsideBrackets ` in ` CaseExpressionTest . java ` to verify SQL parsing and deparsing behavior for
added functionality to start the copy mode in ConsoleActivity based on SDK version to improve user experience by ensuring the copy mode is only started when the
refactor ` writeXmlOutput ` method to use ` DocumentBuilder ` for XML parsing to improve code readability and maintainability by reducing
added null check for exchange in AbstractListAggregationStrategy and created a new test class for CustomListAggregationStrategyEmptySplitTest to ensure robustness
( chore ) camel - aws2 - aws2 : use exceptionhelper instead of exchangehelper . createexceptionmessage
removed unused imports from BasicConfigurator . java and SocketMin . java to streamline code by eliminating unnecessary dependencies
added a condition to check if the target VN has a PHI _ NODE flag in TypeQualifierDataflowAnalysis to ensure that the target
removed the import of SharedStringSource from TestXSSFRichTextString . java to streamline the code by eliminating unnecessary dependencies
added a static method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to provide a way to invoke a method for method invocation
refactor multiple classes related to BoxAndWhiskerCalculator , BoxAndWhisker , DefaultBoxAndWhiskerXYDataset ,
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit 5
replaced the class ` NormUpdate ` with ` static ` in ` InstantiatedIndexReader . java ` and updated comparison logic in ` Memory
changed the visibility of the IndexFileNameFilter class from public to private to restrict access to the IndexFileNameFilter class for better encapsulation
refactor IfStatementTest to utilize a new PluginDefinition instance and streamline vertex validation logic to improve code readability and maintainability by
updated method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java `
removed null handling for Gson type adapters in TypeAdapter . java and StreamingTypeAdaptersTest . java to simplify the code and improve readability by
updated the size check from 12 to 13 in BundledDistributionTest . java to ensure the test accurately reflects the expected size of the
added a new file EXIFReader . java and modified ImageProcessingService . java to include metadata processing to enhance image processing capabilities for improved
updated the ` toStandardUnit ` method to return ` NONE ` instead of ` UNKNOWN _ TO _ SDK _ VERSION ` and added a new
added parameter handling in ApplyPmmlModelCommand and updated method calls in PMML4DataFactory to ensure correct instantiation of parameters based on
updated error message formatting in FluentProtocol . java for clarity to improve readability and maintainability of the code
added a check to return early if the bubble bar is visible to avoid unnecessary processing when the bar is not visible
[ gr - 15656 ] fix typo in substrateaarch64backend . buildlabeloffsets ( )
added a try - finally block around the initialization of JDKXRLogger and implemented a test for concurrent logging in XRLogTest to ensure
added the ` find ` method to ` TicketCatalog ` , ` DefaultTicketCatalog ` , and ` HazelcastTicketRegistry ` classes , and
removed the static final variable ` HS2 _ HTTP _ AUTH _ MODE ` and updated SSL connection initialization in ` TestSSL . java `
[ hotfix ] [ table - planner - blink ] fix thread safety issue in sortmergeresultpartition
replaced instances of ` new Read ( ) ` with ` new Write ( ) ` in ` JmsIO . java ` to improve performance by
updated ` PluginHandleController ` , ` PluginHandleDTO ` , and ` PluginHandleDO ` classes to include ` type ` and ` sort
replaced ` nextSpan ( ) . name ( ) ` with ` start ( ) ` in ` DefaultSpanCreator . java ` and `
added GLKViewDrawableColorFormat and GLKViewDrawableDepthFormat and GLKViewDrawableStencilFormat to IOSGraphics and updated
replaced multiple calls to ` sendKeys ( ) ` with ` attemptLogin ( ) ` in ` LoginIT . java ` to streamline
refactor PtNDArray initialization to check for a specific handle before creating new PtNDArray instances to improve error handling for unsupported operations
refactor conditionals in SynchronizationStatistics . java for improved readability and maintainability to enhance code clarity and maintainability while ensuring
refactor Implements and ShadowPicker classes for improved clarity to enhance maintainability and readability of the code
refactor HttpClientOptions creation to use a dedicated method for improved clarity and maintainability to enhance code readability and maintainability by central
added a check for both DynamicStruct and DynamicArray classes and improved type handling in SolidityFunctionWrapper to enhance type validation and ensure
added a new boolean parameter ` true ` to the ` getTextProperty ` method in ` InlineLayout ` , ` FontUtil ` , and `
added a ` Path ` parameter to the ` CopyStep ` constructor and a corresponding test in ` CopyStepTest ` to enhance functionality by allowing
fixed - rsemaphore . acquire ( ) and rsemaphore . addpermits ( ) do n ' t throw exception if addperm
camel - 14663 : camel - dsl - use getprocessor ( ) instead of getprocessor ( ) in test .
added a new ` FlavorParser ` class and updated ` BuildTargetParser ` and ` FlavorParserTest ` to utilize it to
replaced ` List < String > ` with ` List < ByteString > ` in ` WitnessScheduleStore . java ` to use ` ByteString
added a check to ensure resultsMeta is not empty before printing it to avoid printing unnecessary output when resultsMeta is empty
refactor ConcurrentLinkedQueue to improve node removal logic and introduce a new RemoveLeak class to enhance reliability and maintainability of the
added a boolean parameter ` addSpecialTokens ` to the ` encode ` and ` batchEncode ` methods in ` HuggingFaceTokenizer .
[ hotfix ] [ runtime ] replace ArrayList with Collections . nCopies for resourceprofiles
updated chunk data handling in LoadSingleTsFileNode . java to use alignedChunkData instead of pageIndex2ChunkData to improve data handling
added a new constant for session storage context in BrowserSessionStorage and updated its usage in DuoSecurityMultifactorWebflowConfigurer
added a new test method ` testSchemaValidation ` in ` TestJspDocumentParser . java ` to validate XML schema validation to ensure proper validation
added a constructor to TypeAdapter and modified the @ Ignore annotation in Java17RecordTest and ReflectionAccessTest classes to allow initialization of TypeAdapter
refactor SuspendedEvent instantiation to use a single SuspendedEvent instance and add a prepareKill method to improve event handling and ensure proper termination
refactor AntPathRequestMatcher class for improved clarity to enhance maintainability and readability of the code
refactor createResourcePolicy method signatures to remove unnecessary null parameters to simplify method signatures and improve code clarity
added null check for _ deflaterEntry before release it in GzipHttpOutputInterceptor . java to avoid potential NullPointerExceptions when _ deflaterEntry
added JUnit @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure tests are executed after each execution
updated the MD5 calculation to use Normalizer for normalization to ensure proper handling of invalid unicode characters in checksum calculations
refactor command handling in Example . java for improved clarity and consistency to enhance code readability and maintainability by reducing redundancy
changed the visibility of the keyListener variable from private to final and added multiple @ Override annotations in BasicProfilerState and BaseAppState classes to
replaced ` T ` with ` DBObject ` in ` MongoTemplate ` and added a test for saving JSON strings in ` MongoTemplateTests
added a check for multiple remote addresses in RequestUtils and a corresponding test in RequestUtilsTest to ensure correct handling of remote addresses in the request
updated ` getJobArgs ` method to return ` ObjectBuilder ` instead of ` String ` for consistency to improve code readability and maintainability by
added a method to retrieve the local host address and refactored connection handling in CookieManagerTest . java and UnmodifiableMaps . java to
updated glyph handling logic in GlyphLayout . java and added a new text test in BitmapFontTest . java to ensure proper handling of wrapped runs
[ hotfix ] [ pulsar ] allow pulsar partition split to be pause or resume .
added HIVESCRIPTIDENVVAR configuration to ScriptOperator and updated environment variable handling in HiveConf to ensure compatibility with the updated script operator ID
refactor ` getListedTermCounts ` method to utilize ` SimpleImmutableEntry ` for sorting term counts to improve code readability and maintain
added a new action class ` UseSeparateStepSizeAction ` for managing step size options to enable users to control the use of step size
refactor ` FileMenuFilter ` to use ` AccountManager ` for clarity and consistency to improve code readability and maintainability by central
hbase - 2267 fix the issue of roundrobintableinputformat . split ( tablename , regionlocation , regionname )
updated HTTP request header values from " false " to " 0 " and " 1 " in HttpClientRequestAdapter . java and HttpClientRequestAdapterTest
pdfbox - 4892 : use ioutils . closeifnull instead of null
refactor GwtApplication and GwtGraphics to use native methods for fullscreen mode management to improve code readability and maintainability by central
updated WebfingerIssuerService to use URI instead of String for parameter names and added error handling for URI parsing to improve flexibility in resource
add a new test class SoulApacheDubboClientConfigurationTest to validate the configuration of SoulApacheDubboClient
replaced ` Gdx . files . internal ( ) ` with ` resolve ( fileName ) ` in ` SkinLoader . java ` to
updated logging levels in ChainingAttributeReleasePolicy and OidcDefaultJsonWebKeystoreCacheLoader to use info instead of warn to improve logging
replaced direct calls to ` lock ( ) ` with ` lockInterruptibly ( ) ` in multiple classes to improve thread safety and prevent potential
refactor package declaration in Compiler . java to improve code readability and maintainability
added a check for CodeException in the NullDerefAndRedundantComparisonFinder class to ensure proper handling of code exceptions in JSR
updated ` DashRendererBuilder ` to use ` DefaultHttpDataSource ` instead of ` String ` for ` MediaPresentationDescription ` to improve
added a new configuration property ` EXECUTION _ SCHEDULER _ MAX _ STATEMENTS _ PER _ CONNECTION ` and a getter method
rename ` WritableConfig ` to ` Configuration ` across multiple files to improve clarity and consistency in naming conventions
removed the checkErr method from AutoScalingHandler . java to streamline error handling by eliminating unnecessary code
renamed CombinedDataset class to improve clarity to enhance code readability and maintainability
replaced the usage of ` buf ` with ` b ` in ` InflateIn _ DeflateOut . java ` to simplify
added a method to remove cryptography restrictions in Utilities and BitsquareApp classes to enhance security by preventing unnecessary cryptography restrictions from being removed
refactor loop condition checks and schedule a delayed task for chunk generation to improve responsiveness and responsiveness during chunk generation
added a new test method ` testPageMarginsLongTextTransform ` in ` TextVisualRegressionTest . java ` to verify page margins functionality
refactor vectorization context handling in Vectorizer . java to improve code readability and maintainability
updated the speed calculation in WialonProtocolDecoder to adjust the position ' s speed to ensure that the position ' s speed is rounded to
hbase - 11818 make default _ metric _ user _ enabled _ CONF configurable in metricsuseraggregatefactory .
added a method ` isEmpty ( ) ` to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to ensure that the ` JsonObject `
changed variable names from ` mUserPresent ` and ` mVisible ` to ` mAttached ` and added a conditional check before unregistering the
refactor AsyncFile , HttpClientRequest , HttpServerResponse , NetSocket , and ReadStream classes to improve code organization and maintainability
added the ' params ' parameter to the zadd method call in PipelineBase . java to include additional parameters for the zadd operation
updated assertions in multiple classes to use UTF - 8 encoding for consistency to ensure compatibility with UTF - 8 encoding in metadata handling
rename ` TestAsyncMessages ` class to ` TestAsyncMessagesPerformance ` to improve clarity and consistency in naming conventions
added a method to retrieve the Optional < TargetNode < ? , ? > > in VersionedTargetGraphBuilder and updated Arg to implement HasTests
updated time zone seconds from 31 to 31 _ 556 _ 889 _ 832 _ 715 _ 999L and - 31 _ 5
change return value from 4 to HEADER _ SIZE in EscherBlipRecord . java and added a new test class TestOLE2Embed
changed the variable ` row ` and ` column ` from ` 0 ` to ` 0 ` in ` JSONParser . java ` to ensure proper
replaced ` JavaType . FullyQualified ` with ` Pattern ` in ` FindTypes . java ` and added a new ` isAssignableFrom `
updated DETAIL _ THUMB _ HEIGHT from 200 to 300 and added handling for local trailers in BaseItemDetailsFragment to improve
added a native method ` removeGlyphInfoFromCache ` in ` CStrike ` and ` CStrikeDisposer ` classes to manage glyph
act - 1343 : fix terminateendeventactivityBehavior and terminateallbehaviour method in executionentitymanagerimpl
camel - 1649 : camel - xml - dsl - add support for xml - root element in type name strategy
updated the URL from " http : / / apereo . org / scottb . html " to " https : / / abc
added a new BooleanOption ` defPrefs ` and registered it in ` JabRef . java ` to reset all preferences to ensure that
changed access modifiers of several fields from private to protected in ThriftMetrics and ThriftServer classes to enhance encapsulation and allow subclass access to these fields
[ danfossairunit ] remove deprecated channel ' manual _ fan _ speed ' .
replaced ` assertEquals ` with ` assertThat ` in ` TestEndpoint . java ` to improve code readability and maintainability by using
removed unnecessary whitespace in TweetActivity . java to improve code readability and maintainability
added equals and hashCode methods to PartitionPanel and implemented equals and hashCode methods in PartitionFactory to ensure proper handling of null values and hash code generation
added a check to set the root disk size in the custom parameters to ensure the correct disk size is used in the VM management configuration
updated visibility logic in PredictionRowView to check for suggested apps based on preference settings to improve user experience by providing clearer visibility based on
[ geos - 4394 ] fix invalid bbox parameter in feature service ( # 4394 )
added validation methods for value and position parameters in LibrustzcashParam . java to ensure proper validation of value and position parameters in
added a deprecated annotation to IThrowableEntity . java to indicate that the method is outdated and should no longer be used
added initial values for x and y in NodeDataImpl . java to ensure proper positioning of the NodeDataImpl instance
updated the ` validateRefreshToken ` method to ` validateRefreshToken _ happycase ` and added a new test method ` validateRefreshToken _ should _
refactor JavacStep to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
updated the VERSION constant from " 0.9 . 1 " to " 0.9 . 2 " to reflect the latest version of the application
added a condition to check for DEEP _ SHORTCUT itemType in LoaderCursor . java to ensure proper handling of DEEP _ SHORTC
added a hashCode method to TimeGranularitySpec class to ensure consistent hash code generation based on type and column types
changed visibility of several classes from private to protected in BooleanQuery and DisjunctionMaxQuery classes to restrict access to these classes for better encapsulation
added a boolean flag ` useProxyResponseCode ` to manage the behavior of ` useProxyResponseCode ` to ensure proper handling of proxy response
refactor AArch64MacroAssembler and AArch64Move to use a ScratchRegister for memory management to improve memory management
cloudstack - 3391 : fix memory allocation in vm listupbyhostid ( )
added a null check for ` docs . getMaxScore ( ) ` in ` JSONResponseWriter . java ` and implemented a query in ` Test
updated the audio recoder from 22050 to 44100 in AudioRecorderTest . java to accommodate a more accurate audio recoder
updated the calculation of newOriginX in RocketFigure . java to ensure correct positioning of the new origin based on subject bounds
[ calcite - 3842 ] fix nullpointerexception in druidquerybasedinputformat
added a new parameter ` ORIGINAL _ TYPE ` and updated regex pattern in ` CustomProperty ` and ` CustomPropertyTest ` classes to
added a static method ` create ( Table parent , Map < String , Object > data ) ` to the ` Index ` class to provide a
simplified the return statement in Dates . java for clarity to improve code readability and maintainability
updated schema compatibility handling in SchemaCompatibility . java and added new test cases in TestSchemaCompatibility . java and TestSchemaCompatibilityTypeMismatch . java
added support for persistent attribute types in QueryUtils and modified join logic in EclipseLinkNamespaceUserRepositoryTests to enhance attribute management and ensure proper
replaced multiple instances of ` MutableSpan ` with ` ArrayList ` and added synchronization in ` TestSpanHandler . java ` to improve thread safety
updated parameter types from ` List < Object > ` to ` List < ? > ` across multiple classes to ensure type safety and avoid potential type
replaced error logging with debug logging for exception handling in ViewContextImpl . java to improve logging clarity and provide more detailed error messages for
refactor OAuth2AccessTokenEntity class to improve code organization to enhance maintainability and readability of the code
updated error messages in SCBEngine , TestInvocationFactory , TestHighwayServerInvoke , TestInvokerUtils , and HighwayServerInvoke to
added new project files for iOS data and moe resources in GdxSetup . java to enhance the project structure for iOS data and moe
replaced specific imports with a ConcurrentMergeScheduler in TestSearcherManager . java to utilize ConcurrentMergeScheduler for merging to improve performance and
added a condition to check if the session state is zero and modified the handling of the list in GenericUDTFInline to ensure that the
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
added multiple calls to ` e . preventDefault ( ) ` in ` SpreadsheetKeyListenerW . java ` to ensure proper handling of prevent
added persistence and session factory services to HibernateBundleActivator and improved test cases in OsgiTestCase to ensure proper resource management and
updated the calculation of timeout in HikariPool to use connectionTimeout instead of elapsedTimeMs to ensure accurate time calculation for connection timeouts
refactor the creation of the component file in VoiceCompiler to use a non - packaged resources directory to improve clarity and maintainability of
refactor file name handling in Compat . java and FileOpener . java to improve clarity and consistency to enhance code readability and
changed the return type of the ` row ( ) ` method from ` Cell < T > ` to ` void ` in ` Cell . java
added port clash checks and corresponding unit tests in BesuCommand and corresponding tests to ensure that multiple ports are provided to prevent potential parameters
added nullMask functionality to WebSocketClient and modified WebSocketConnectionD12 constructor to use FixedMaskGen to enhance flexibility in masking for WebSocket
updated the return type of the genUDTFPlan method to return a Pair < RelNode , RowResolver > instead of a RelNode
added bucketedPreferredNodeSelectedCount and non - preferredNodeSelectedCount counters to NodeScheduler , NodeScheduler , and TopologyAwareNodeSelector classes
added a new file ` Person . java ` that defines a ` Person ` class with a name property to facilitate the creation of
refactor owner pointer retrieval logic in CPlatformWindow . java to improve readability and maintainability to enhance code clarity and maintainability by
added clock display and animation functionality in PlaybackOverlayFragment . java to enhance user experience by integrating clock display
simplified updateComparatorOutputLevel calls across multiple classes to improve code readability and maintainability
added exception handling for SecurityException and default class loading in SegmentReader . java to improve robustness by providing clearer error messages when loading SegmentReader
replaced direct instantiation of ` Cell ` with a direct call to ` SwingUtilities . invokeLater ` in ` SudokuGridEvent `
removed unused ` INET _ ADDRESS _ ADAPTER ` and ` COLLECTION _ TYPE _ ADAPTER ` from multiple
added null checks for double , long , boolean , and string values in the Series class to ensure that the Series class correctly handles null values and
updated audio time stretch option from " -- no - audio - time - stretch " to " -- audio - time - stretch " to ensure that
updated conditions in GeoRelationUtils and GeoUtils to use ` Math . max ` instead of ` Math . min ` and ` Math . max
[ vmware ] fix checkstyle issue in vmserviceofferingimpl
added JUnit cleanup annotations to HazelcastTest . java to ensure proper resource management and cleanup of Hazelcast instances
added handling for NoSuchPaddingException and NoSuchProviderException in BlockCipherTest . java to ensure correct handling of AES cipher modes in tests
added logging statements for operations logs in QFileClient . java to enhance debugging capabilities for operations logs
added new interfaces ` ChildIntroduction ` and ` InjectParentInterface ` to the ` BeanDefinitionInjectProcessor ` and ` AbstractBean
added a null check for currentConnectionAddress in ProtocolProviderServiceSipImpl . java to prevent potential NullPointerException when the current connection address is null
replaced ` Math . addExact ( demand , n ) ` with ` MathUtils . cappedAdd ( demand , n ) ` to
replaced direct file deletion with try - with - resources for better resource management to ensure proper resource management and prevent potential NullPointerExceptions
replaced ` TvApp . getApplication ( ) . showSearch ( ) ` with ` startActivity ( intent ) ` in multiple fragments to
refactor the ` toString ` method in ` SchemaCrawlerCommandLine ` , ` GrepOptions ` , and ` MutableIndexColumn ` classes to
added OsgiConfiguration class and modified WebConsoleStarter to register Jmx and JMS services to enhance the application ' s configuration for the O
added an @ Autowired annotation to the RepositoryIndexCreationIntegrationTests class to enable the repository functionality in the integration tests
updated stop method signature from Exception to InterruptedException in UIServer . java and updated log message in TestVertxUIManual . java to
refactor case statements in BlockCactus . java for improved readability to enhance maintainability and clarity of the code
refactor mouse event handling in ThemeSelector . java to use MouseMotionListener for improved mouse event handling to enhance mouse responsiveness and
refactor AbstractMinMulticastFlowControl to extend AbstractMinMulticastFlowControlRhsPadding instead of AbstractMinMulticastFlowControlFields
added alignment and alignment parameters to the editStringAt method in IOSImplementation and IOSNative classes to enhance the functionality of the editString
updated exception handling in StatTokSentAnnotator to throw IllegalArgumentException for null modelFile and multiWordRulesFile to improve robustness by throwing an
added a check for distinct queries in ClusterIntegrationTestUtils and modified group column handling in QueryGenerator to ensure correct handling of group columns based on
[ gr - 24934 ] add method to getcloselylinkage to jninativestringage . getclosely
updated the declaration of ` languageProperties ` in ` JSyntaxTextArea . java ` to improve code readability and maintain consistency in property loading
added a null check for children before iterating over its children to avoid potential NullPointerExceptions when children is null
added tokenPosition and currentPosition fields to MessagePackParser and updated JsonLocation initialization in MessagePackParser to ensure proper handling of token position and position
added a ` @ AfterClass ` method to set the default locale in ` AbstractSolrMorphlineTestBase . java ` to ensure the locale
removed unnecessary conditional check for DrawerActivity in LauncherFragment . java to streamline code for better readability and maintainability
added a new test class MetricsReporterTest to validate metrics registration and counter registration to ensure proper functionality and functionality of the MetricsReporter functionality
camel - 16400 : remove unused typecachemap from camel - osgi
added equals and hashCode methods to the Rectangle class to ensure proper equality and hash code generation for rectangle objects
[ hotfix ] [ kafkaproducer ] fix test failure on non - exist topic
updated prime strength checks in DSAParameterGenerator . java for improved clarity and consistency to enhance code readability and maintainability by redu
added a new configuration variable LLAP _ DAEMON _ AM _ USE _ FQDN and updated related methods to utilize it to
fix clientoutofmemoryhandlertest . testclientnotinmemory ( ) to not fail if the client be shutdown
updated method calls to use ` getCmoObjectId ( shapeId ) ` instead of ` setObjectId ( shapeId ) ` across multiple shape classes
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of the query with
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
added support for binding and unregistering ExtensionAdapter in ManagedKubernetesClient to enhance flexibility in managing extension adapters in the Kubernetes client
replaced ` baseItem . getOfficialRating ( ) ` with ` Utils . getInfoRow ( baseItemDto ) ` in ` Details
updated JUnit annotations from @ Before to @ AfterEach in TestAuthHandlerBoot . java and TestRSAProviderTokenManager . java to ensure
refactor the ` generateSummary ` method in ` BugCollectionBugReporter ` to handle IOException and TransformerException to improve error handling and provide clearer
removed unnecessary parameters from intPool and bytePool in TermsHash . java to streamline the reset process by eliminating unnecessary parameters
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
added a new ` WindowSessionDelegateU ` class to handle TIRAMISU API level in ` ShadowWindowManagerGlobal . java `
updated URL scheme validation logic in UrlHelper . java and added a new test in UrlHelperTest . java to ensure proper handling of non -
updated conditional logic in AddForeignKeyConstraintGenerator to use MSSQLDatabase instead of OracleDatabase to ensure compatibility with MSSQL - specific database
hbase - 17466 fix typo in hstore . replacestorefiles ( )
removed unnecessary print statements in ContainerEmzuliPipe _ BC8 and modified PipeBehaviourEmzuli and PluggableLens classes to
simonstewart : make the html identifier logging configurable
replaced ` getProducedTableSchema ( ) . getFieldDataTypes ( ) ` with ` getTableSchema ( ) . getFieldNames ( )
refactor listener handling in ` SimpleBasePlayer ` , ` ListenerSet ` , and ` ExoPlayerImpl ` classes to improve thread management
updated schema name assignment in SequenceSnapshotGenerator to use CatalogAndSchema instead of a hardcoded string to improve code clarity and maintainability by
updated color calculations in SpriteBatch , SpriteCache , LwjglDebugStarter , and LwjglDebugStarter
fixed - redissonconnection . getbatch ( ) return empty batchpromise instead of empty batchpromise
added base URL replacement for HttpSolrClient and added a check to ensure statistic year cores are only added to the list of statistic year cores to
refactor launchTask methods to use ` launchTaskFromView ` instead of ` launchTask ` to improve code clarity and maintainability by
updated MorfologikFilter to accept a dictionary resource instead of a wildcard import and added a loadDictionaryResource method to enhance flexibility
updated sorting options from " stars " and " communityRating " to " communityRating " in GridFragment . java to align sorting options with the
added import statements and visibility logic for ListRow in CustomListRowPresenter . java to ensure proper visibility of the header view when the item is
refactor client handling in StressAction . java to ensure proper resource management to improve resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability to enhance maintainability and facilitate future updates
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof ` in ` CatalogAndSchema ` and ` CatalogComparator ` classes to
added support for JavaTimeModule in StandardJavaScriptSerializer to enable serialization of JavaTime classes for JSON serialization
replaced the import of ` org . apache . log4j . MDC ` with ` org . slf4j . MDC
replaced ` TypeBearer ` with ` Type ` casting in ` PhiTypeResolver . java ` to simplify type merging logic and improve code
updated import statements and modified method signatures in CoinbaseTransaction . java to improve code clarity and maintain consistency in naming conventions
added a method to retrieve build targets in BuckConfig and updated related classes to include a method to force building with Buck targets to enhance
replaced System . gc ( ) with a call to BusySpinIdleStrategy in Ping . java to ensure proper garbage collection of idle
replaced ` ContentProvider ` with ` ContentResolver ` in ` OCFile ` and updated related methods to use ` ContentResolver ` to
simplified conditional checks for selection events in ReportPanel . java to improve code readability and maintainability
[ hotfix ] [ test ] fix nullpointerexception in testinglogicalslot
added a new file ` RemoveCallsToSystemGc . java ` that implements a recipe for removing garbage collection invocations to facilitate
removed unnecessary super ( ) calls from multiple exception classes to streamline the code by eliminating unnecessary super calls
added a setUIID method to the ScaleImageLabel class to set the UI ID for better user experience
replaced ` foundEntry ` with ` update ` in ` FeedUpdateService . java ` to improve clarity and consistency in variable naming
added support for the " - cp " argument in the classpath validation logic to enhance flexibility in handling command - line arguments
updated the ` compiler ` variable in the ` link ` variable in ` avutil . java ` to ensure compatibility with the new ` compiler `
changed the initialization state from ` initialized ` to ` initialized ` in ` StorageService . java ` to ensure proper initialization of the storage service
refactor Test7196045 . java file to improve code readability and maintainability
updated density and decay values from 1.5 f to 1.0 f and adjusted decay values in ShaderParametersLightShaft . java
added ` withState ` and ` stateData ` fields to ` OidcConfiguration ` and modified state handling in ` OidcRedirectActionBuilder
updated unique constraint handling in BaseTableDdl to include null checks and nullable checks to enhance code clarity and ensure proper handling of nullable columns
updated user query logic in UsersAndGroupsSearchProvider and EditShareFragment to utilize FileDataStorageManager for federated sharing to improve user
added a method ` needsDocValues ( ) ` to the ` TestBBoxStrategy ` class to check for document values to ensure that document values
refactor BufferAlignmentAgent and BufferAlignmentInterceptor to improve clarity and consistency to enhance readability and maintainability of the code
added a method ` intForEach ` to handle null values in ` IntObjConsumer ` and updated imports in ` Int2ObjectHashMapTest
fix the worldserver multi scoreboard save data ( # 9649 )
changed the return type of count ( ) methods from Long to long in QueryDslMongoRepository and QueryDslPredicateExecutor classes to ensure
updated timestamp checks in MManager . java to include debug logging for MTree snapshot creation to improve logging clarity and ensure proper handling of m
updated the calculation of the dot product method in VectorUtil and added assertions in TestVectorUtil to improve accuracy of the dot product calculation and ensure
added a constant IRREVERSIBLE _ THRESHOLD and methods in DynamicPropertiesStore , and updated the last confirmed block number handling in Manager to
refactor locale setting methods in GpsMainActivity , MainPreferenceActivity , MainPreferenceActivity , Systems , and MainPreferenceActivity to utilize
added a condition to check if the new database is created in LauncherClings and integrated it into LauncherProvider to ensure that the new
replaced direct usage of ` Assert . notNull ` with ` Assert . notNull ` in ` BasicAclEntryAfterInvocationCollectionFilteringProvider . java
updated conditional check for the ` is64Bit ` variable in ` Constants . java ` to ensure correct handling of the ` is64Bit `
added a check to prevent processing of the current thread in TestIndexWriterDelete . java to avoid unnecessary processing when the current thread is not in
changed the access modifier of the closeDatabase method from private to protected to restrict access to the method for better encapsulation
updated imports from ` apiclient . model . dto ` to ` sdk . model . api ` in ` FullDetailsActivity . java `
added attribute setting for SVG elements in BatikSVGDrawer . java to ensure proper handling of imported attributes in the document
added a try - catch block to handle IllegalArgumentException in ConsoleKeys . java to improve error handling for user configuration parsing
added a check for " WaitForResult " in CodenameOneActivity and modified the waitingForResult assignment logic in CodenameOneActivity
replaced the ` prepopulate ` boolean parameter with a ` Supplier < T > ` for sentinel objects in multiple queue classes to improve flexibility
added functionality to display and display widget descriptions in WidgetCell . java to enhance user experience by providing clearer widget descriptions when available
added a maximum attribute count check in the Attribute class to ensure that registered attribute count exceeds the maximum attribute count
updated package structure and import statements in PredicatesTest . java to improve organization and clarity of the codebase
camel - 14284 : add a case - insensitive header name to the default header filter strategy
refactor inline handling logic in InlineLayout and Breaker classes to improve clarity and maintainability to enhance code readability and maintainability by
added null checks and improved layout inflation logic in ShareUserListAdapter . java to enhance robustness by preventing potential NullPointerExceptions during
removed unused imports and modified the ` shouldInstrument ` method in ` Setup ` class to streamline the code by eliminating unnecessary imports and
added a condition to return the index of columns based on insert destination before source to ensure the correct index is returned when the association is inserted before
added a method to retrieve the memory limit file path in CmdModifierTest . java to enable testing of memory limits based on the Cgroup version
updated ` AbstractCxxDeps ` and ` CxxLibraryDescription ` to use ` EMPTY _ INSTANCE ` instead of ` EMPTY _ INSTANCE `
added a null check for the rule in JavaTestRule . java to ensure that the source under test dependencies are not among its dependencies to prevent
added proxy support for Minecraft 1.9 . 4 and improved version handling in the Botania class to enhance flexibility in
removed a check for negative index in StringUtils . java to simplify the code by eliminating unnecessary checks
increased the timeout timeout duration from 100 milliseconds to 500 milliseconds in TimeoutTest . java to improve test reliability by allowing more time for
refactor TaskOverlayFactoryGo constructor to accept AssistContentRequester instead of TaskThumbnailView to improve flexibility in handling assist content requests
replaced ` StringUtil . createReadableString ( ) ` with ` StringUtil . encode58Check ( witnessAddress ) ` in ` VoteWitnessProcessor
refactor DefaultMethodRegressionTests to improve test coverage to enhance reliability and maintainability of the code
refactor WorkloadManagerMxBean class to improve code organization to enhance maintainability and readability of the code
replaced ` KafkaProducerException ` with ` KafkaException ` in ` KafkaOutboundAdapterParserTests . java ` to ensure consistency in exception handling
added a call to close the loader in DesktopGeneratorController to ensure proper resource management and prevent memory leaks
added a clear method to ` ExceptionThrowingTaskletStub ` and corresponding test cases in ` FaultTolerantExceptionClassesTests ` to
[ hotfix ] [ config ] improve error message in configbuilder
added an ` extraProperties ` parameter to multiple ` TableConfigTunerUtils ` and ` TableConfigTunerUtils ` classes to support additional
added a check for in - progress instances in the PinotRealtimeSegmentsManager class to ensure that segments are only added when in - progress
added a condition to return null if the touchable is disabled to prevent potential null pointer exceptions when the touchable is disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` in ` PrecompiledHeaderIntegrationTest . java ` to ensure
added a null check for cacheConfig in AbstractCacheAllPartitionsRequest . java to ensure that the cache configuration is not created before proceeding with
refactor JSweetTranspiler to use a new method ` isNodePackageInstalled ` for module installation to improve code readability and maintainability
added ManagedObject annotations to MBeanContainer and Destroyable classes to facilitate management of component management in the MBeanContainer and Destroyable classes
modified the condition in LongClickableSpan . java from a conditional statement to a conditional statement to improve readability and maintainability of the code
updated equality checks in EspMilightHubDiscoveryService and EspMilightHubHandler to use " . equals ( string )
updated the condition in mmm Types . java and added new classes T6558559a and T6558559b
updated player print statements in WorldEditListener . java for consistency and clarity to improve readability and maintainability of the code
( chore ) camel - kafka : add shutdown ( ) method to shutdown the kafka consumer
removed the default implementation of the examples ( ) method from Schema . java to simplify the code by eliminating unnecessary default implementation
[ java ] do n ' t interrupt the thread if it be not alive .
removed dataset time column from dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to streamline the removal process for dataset configurations
added a condition to check if the shard length is 1 in the FacetComponent . java file to ensure that only one shard is present in the
replaced linker . getParseTimeDeps ( ) with CxxPlatforms . getParseTimeDeps ( ) in RustBinaryDescription and
added ` name ` field to ` JdbcAuthenticationProperties ` , ` AbstractLdapProperties ` , and ` NtlmProperties ` classes to manage
added logging statements and improved error handling in CFGPrinterObserver and IdealGraphPrinterDumpHandler to enhance debugging capabilities and ensure proper resource management
phoenix - 1649 add support for small scan for point lookup ( phoenix )
reformatted the return statement in RetryGatewayFilterFactory . java for improved readability to enhance clarity and maintainability of the code
refactor widget call calls in LineReaderImpl . java to improve code readability and maintainability
refactor ` onOverviewShown ` method calls to use ` DiscoveryBounce . showForOverviewIfNeeded ` instead of ` T ` to improve
refactor null checks in CheckIndex . java and add a test for deleting all point documents in TestPointValues . java to improve code cl
updated the publish method call from ` true ` to ` updateLastState ` in ` ZkController . java ` to ensure the correct state
corrected the spelling of " STRING _ LIST _ VALUES " in MetastoreDirectSqlUtils . java to ensure proper formatting of string
removed the addition of 0 to null in SpliteratorCollisions . java to streamline the code by eliminating unnecessary operations
simonstewart : allow text condition to be case - insensitive
removed duplicate while statements in ManyToManyConcurrentArrayQueue . java to improve code readability and maintainability
# 1343 - add support for forward - only fetch size ( # 1343 )
added exception handling for ClosedChannelException in HttpServerMultiplexChannelHandler . java to ensure proper resource management and prevent potential memory leaks
pdfbox - 4892 : use the size of beads , a suggest by valerybokov
updated window radius calculation in QuickstepAppTransitionManagerImpl . java to utilize supportsRoundedCornersOnWindows method to improve flexibility
refactor ` DesktopTaskView ` to use ` View ` instead of ` ShapeDrawable ` and ` PagedOrientationHandler ` to improve
refactor properties initialization in UpstreamCheckServiceTest . java to improve clarity and consistency to enhance code readability and maintainability
added a conditional check for ` _ dftMaxIdleSecs ` before logging warnings in ` AbstractSession ` and ` AbstractSessionManager ` to
replaced error logging with return statements in ZooKeeperHiveLockManager . java to simplify error handling and improve code clarity
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
added a boolean variable ` containsCustomData ` and modified the MIP map generation logic in ` FileTextureArrayData . java ` to ensure
updated test cases in DefaultMaskingFormatterTest to use a single quote instead of a single quote to ensure compatibility with the correct character encoding for
added selectable property and methods to manage selection and not - selected items in the List class to enhance user experience by allowing users to control the selection
added a check to return false if the value count is zero in LlapArrowBatchRecordReader . java to ensure proper handling of empty vector
added a ` File . separator ` property to the ` PolicyContext ` class and updated string indexing in ` PolicyContext ` to enhance file separator
changed the type of ` flatQueries ` and ` expandQueries ` from ` HashSet ` to ` List ` in ` FieldQuery . java `
refactor TLSRestrictions class for improved readability to enhance maintainability and facilitate future updates
added a Runnable to close the producer before closing it to ensure proper resource management and prevent potential memory leaks
added a new parameter ` ignorableNodeValues ` to the ` assertNodeStateProvider ` method and modified the ` assertNodeStateProvider `
added a lock file to the RocksdbMavenPomCache class to ensure that the lock is deleted before proceeding to avoid potential
updated NIOServerCnxn . Factory initialization to use InetSocketAddress instead of a hardcoded client port to ensure compatibility with the correct client port
refactor the ` getResponse ` method in ` RestClient ` to improve error handling and logging to enhance clarity and maintainability of the code
updated the array initialization to use ` segmentTarURIStrs . toArray ( ) ` instead of ` segmentTarURIs . toString ( ) `
updated loginStudent method calls to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to ensure
added a null check for mCurrentItem in EnhancedBrowseFragment and StdBrowseFragment to avoid potential NullPointerExceptions during activity execution
increased the number of strings from 500 to 100 in TestSpecialOperations . java to accommodate a maximum number of strings for better
replaced ` ByteArrayInStream ` with ` ByteArrayInStream ` and removed the ` hexToBytes ` method from ` ByteArrayInStream ` to
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers . java ` to improve clarity
added a method to check if a transition is a direct substates in AbstractStateMachine to ensure that only direct states are considered in the transition
added handling for ListMultimap and SetMultimap types in MultimapSubject and corresponding unit tests in MultimapTest to enhance functionality for handling Multimap
added a JoinOperation interface to the PostJoinOperation class to support multiple operations in the PostJoinOperation class
added a new test method ` testDataIssue258 ` in ` AdditionalPostgreSQLTest . java ` to verify the execution of PostgreSQL tests
http : / / issues . apache . org / jira / browse / amq - 5035 - fix test failure in amq -
refactor AvaticaDatabaseMetaData class to improve code organization to enhance maintainability and readability of the code
replaced ` lifeTime ` and ` idleTime ` with ` maxWaitTime ` in ` MongoDbConnectionPoolProperties ` and ` MongoDb
updated the method call from ` null ` to ` SipActivator . getMediaService ( ) ` in ` SdpUtils . java ` to
refactor ` FacetProcessor ` to use ` evalFilters ( ) ` instead of ` handleFilters ( ) ` and ` handleDomainChanges (
added a enabledTimeout property and updated the timeout handling logic in ShuffleHandler . java to enhance control over the idle state based on the enabled
replaced the initialization of ` mQuickStepStartingRotation ` with a constant ` QUICKSTEP _ ROTATION _ UNINITIALIZED `
updated logging statements in XPathBuilder and XQueryBuilder to improve clarity and consistency to enhance readability and maintainability of log messages
updated InputStreamReader to use DataResource for resource loading to ensure compatibility with the latest DataResource implementation
add a new test class EdgeCasesTokenizerTest for tokenizer functionality to ensure proper handling of escaped back slashes in GoTokenizer
added a check for the presence of the " atlas " property in AtlasTmxMapLoader . java to ensure that the atlas property is not
camel - 1745 : remove propertyplaceholder from support component that be not in use .
close the database in BlockchainTest and close the database in KafkaTest to ensure proper resource management and prevent potential memory leaks
refactor CoreMarkdownNodeRenderer to use a new method ` getLines ` for better readability and maintainability to improve code clarity and
refactor import statements in WebServiceInboundGatewayParserTests . java to improve code readability and maintainability
replaced ` ImmutableList . Builder ( ) ` with ` List < Object > ` in ` ProjectableSQLQuery ` and ` SQLBindings `
added a check for the " OpenJDK " VM name in the VirtualMachine . java file to ensure compatibility with OpenJDK devices in the
added a keepAlive option to the baseUrl in ReactorClient . java to enable the client to keep the client alive
updated shader attributes in MD5Renderer and ObjLoader classes to use ShaderProgram . POSITION _ ATTRIBUTE and TEXCOORDS _ ATTRIBUTE to
camel - 14836 : camel - core - add support for property component in defaultcamelcontext
updated null check for accountCapsule before accessing it in UnfreezeBalanceActuator . java to improve robustness by preventing potential NullPointerExceptions
updated the version number from Release to Alpha in XMPPServer . java to reflect the latest release status of the server
replaced direct calls to ` t ` with ` t . unannotatedType ( ) ` in ` Types . java ` to improve code
updated assertions in StorageGroupProcessorTest . java to streamline code and improve clarity to enhance readability and maintainability of the code
added ` DumpableCollection ` to ` Server ` , ` Environment ` , and ` ServletContextHandler ` , and ` WebAppContext ` classes to
added a new parameter ` waitbeforestart ` to the ` FFMpegVideo ` class to set the wait time for video playback to prevent
removed the ` skipCorrupt ` parameter from the constructor in ` OrcEncodedDataConsumer ` and updated its usage in ` GenericColumnVectorProducer
refactor AccessorsTest to remove unused imports and add test methods for list index retrieval to improve code clarity and maintainability by elimin
added a new method ` compileMethod ` in ` GraalCompiler ` and modified ` LIRGenerator ` to return a ` FrameMap `
replaced JUnit @ Ignore annotations with ConditionalIgnore annotations in DynamoDbTicketRegistryTests , BaseAuthenticationRequestRiskCalculatorTests , and
updated the position calculation in ItemBoat . java to use BlockWater instead of a fixed value to ensure correct positioning based on the target
updated the ` toString ( ) ` method in ` Directory ` and added a ` getLockID ( ) ` method in ` RAMDirectory ` to
removed the ` allowExperimentalOptions ( ) ` method from ` Launcher . java ` to simplify the code by eliminating unnecessary method
added methods for handling Path and AssertProvider in BDDAssertions . java to facilitate testing of Path assertions in BDDAssert
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5371 :
updated logging level from debug to warn for Kubernetes config files to improve clarity of log messages for better debugging
added functionality to handle file upload status changes in the UploadListActivity to enhance user experience by allowing users to cancel and retry uploads based on upload
refactor ProviderLoader and TerminalManager classes to use a dedicated ProviderLoaderListener interface to improve code organization and maintainability by centralizing provider installation
updated import statements to use TraceMessageHeaders instead of Span in StreamEnvironmentPostProcessor . java and StreamEnvironmentPostProcessorTests . java to align
updated the SelectFromDatabaseChangeLogStatement instantiation to include a column configuration to enhance the functionality of the SelectFromDatabaseChangeLogStatement by allowing
hhh - 14836 - fix schema update in postgresql dialect
updated import statements and modified partition count calculation in InternalPartitionServiceImpl and InternalPartitionServiceLiteMemberTest to ensure dataMembersSize is non -
added error handling and scheduler start logic in ` ExecutionScheduleManager ` , ` ExecutionSchedulerImpl ` , and ` ExecutionSchedulerImpl ` classes to
refactor InlineBox initialization and conditional checks in BoxBuilder . java to improve code readability and maintainability
updated error messages in StatisticMap . java for clarity to improve readability and maintainability of the code
updated the StagedRectSlideEnd method from 383 to 500 in TabletSplitToConfirmTimings . java to reflect the new slide end
updated button names from " Random " to " Core . bundle " in WaveInfoDialog . java and PlacementFragment . java to improve clarity
added a condition to check if the plot area is owned in KILL _ ROAD _ ITEMS to ensure that the plot area is
added a new test method ` setTouchExplorationEnabled ` to ` ShadowAccessibilityManagerTest ` and modified ` ShadowAccessibilityManager
pdfbox - 5328 : fix a bug in fontbox 5328 , a suggest by valerybokov
refactor method calls from ` getPropertyAsString ( TestElement . NAME ) ` to ` getName ( ) ` across multiple classes to improve code read
replaced instantiation of NPOIFSFileSystem with POIFSFileSystem . create in TestNPOIFSFileSystem . java to streamline
added import statements and modified plot area retrieval logic in Move . java to enhance functionality to retrieve plot absolute coordinates for better user experience
updated version matching logic in TestWebHCatE2e . java to ensure compatibility with the latest version specification
updated the condition from ` count ` to ` count < 1 ` in the ` Filters . java ` file to ensure that the count is less
( chore ) camel - kafka : fix npe in kafkaproducer
replaced the use of ` util . IsolatedClassLoader ` with ` util . IsolatedClassLoader ` in ` JavacCompiler . java
refactor repaint logic in EuclidianView and DrawList classes to improve clarity and functionality to enhance code readability and maintain
camel - 14263 : camel - spring - batch - fix npe in springbatchproducer
added a method ` isAnimationFinished ` to check if the animation is finished to provide functionality for determining if the animation is finished
added a new test method ` testCustomFavIcon _ With _ LineBreaks ` in ` LoginMockMvcTests . java ` to ensure
added null check for otherUrl and updated refreshing text formatting in TimeLineCursorAdapter and HomeFragment to improve robustness by preventing potential
updated the ` stopEditing ` method to use ` newValue0 ` instead of ` newValue ` in ` RadioButtonTreeItem . java ` to
refactor ObjectHashSet class for improved readability to enhance maintainability and clarity of the code
refactor null checks in DataUtilities to use Arrays . equals for improved readability to enhance code clarity and maintainability by reducing
added a patch to prevent deletion of enchanted books , MC - 12770 , allow for deletion of enchanted books
added a new test class ` AsyncResourceTest ` for testing asynchronous requests to ensure correct functionality of asynchronous requests in the application
rename target - flat - headers . hmap to target - user - headers . hmap in ProjectGenerator . java and ProjectGeneratorTest .
added logging for send failures and improved error handling in MailService . java to enhance debugging capabilities and provide clearer error messages for better debugging
replaced calls to ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskHolder . java `
added unit tests for retrieving partitions based on batch and equal / unequal size batches in TestHiveMetaStoreClientApiArgumentsChecker to ensure
added a comment to the FileListListAdapter class to improve code readability and maintainability
changed the type of ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile . java ` and ` OC
adjusted the position of the removeViewInLayout from the first child to the last child to correct the position of the view in the layout
removed " org . eclipse . jetty . servlet " from JavaxWebSocketConfiguration . java and JettyWebSocketConfiguration . java to
updated the parameter of the S3Request constructor in S3Request . java to use false instead of true to ensure that the S3Request
added a null check for timeline before initializing components in JFXRadioButtonSkin . java to prevent potential NullPointerExceptions when timeline is null
added a check for zero splits in DeweyNumber . java and created a corresponding test in DeweyNumberTest . java to ensure
refactor category set string handling in MwVolleyApi . java to improve code readability and maintainability
removed unnecessary whitespace in assertion messages in WebSocketClientTest . java to improve code readability and maintain consistency
added null check for classLoader in WebappLoader and updated assertions in TestVirtualWebappLoader and TestVirtualWebappClassLoaderWeaving to ensure
refactor conditional checks for mapped superclass classes in PersistentAttributeTransformer . java to improve readability and maintainability of the code
pdfbox - 4892 : avoid npe if the number be a number , a suggest by valerybokov
added a new test class TestPorterStemFilter to validate the PorterStemFilter functionality to ensure that the PorterStemFilter functionality works
added a success parameter to the ` postBatchMutateIndispensably ` method and modified the ` postBatchMutateIndispens
changed package declarations from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . core
added synchronization to chatPanels in ChatWindowManager . java to ensure thread safety during chat panel operations
replaced multiple calls to ` Sys . touch ( ) ` with direct calls to ` Sys . touch ( ) ` in multiple Java files to
added " - mardu " to the UNTRACKED _ FILES _ COMMAND list and updated the untrackedFiles method in H
camel - 14836 : camel - netty - allow to use hashedwheeltimer instead of hashedwheeltimer .
added final modifier to several fields in DirectionalLight , PointLight , SpotLight , and SpotLight classes to enforce immutability of the
updated width and height calculations in X11GraphicsConfig and WGLGraphicsConfig classes to ensure consistent rendering behavior across different graphics configurations
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` , ` DelegatingSecurityContextCallable ` , and ` DelegatingSecurityContextRunnable
added a new class ` AnnoFilterTreeSet ` and modified ` findClassesThatExtend ` methods in ` ClassFinder . java ` to
modify the calculation of newLength in BytesColumnVector to increase the maximum size of the next element length to ensure proper handling of integer overflow and
replaced assertEquals with assertTrueEventually in WriteBehindMapStoreWithEvictionsTest . java to improve test reliability by
modified the ` uninstallListeners ` method signatures in ` MotifScrollPaneUI ` and ` XTextAreaPeer ` classes to ensure proper method
added a method ` isEqual ` to the ` PolyFunction ` class and implemented the ` isEqual ` method in ` GeoFunction ` to enhance functionality
added a null check before setting the column class in SynthTableUI to avoid potential NullPointerException when table is not initialized
added a try - catch block to handle ClassCastException in CustomChangeWrapper . java to improve robustness by catching potential ClassCastException during class loading
added support for always materialize whitelist in DistBuildConfig and updated related classes to utilize BuckConfig instead of ConfigPathGetter to enhance
updated the ` isDoubleEntryEnabled ` method to return false instead of a default value in ` GnuCashApplication . java ` and added
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to temporarily disable the test due to an issue that could lead to
change return type of doJoin method from void to boolean in JoinTemplate , JoinWorker , and MergeJoinBatch classes to ensure proper handling of
removed the ` getAutodeps ( ) ` method from ` JavaLibraryDescription . java ` to simplify the code by eliminating unnecessary
updated intent flags in LauncherTimelineCursorAdapter . java to include FLAG _ ACTIVITY _ NEW _ TASK to ensure proper handling of activity
added a method checkPagingOrderBy ( ) to SpiQuery . java to enhance query performance by allowing paging by criteria
updated assertions from ` repositories . get ( 0 ) ) . getUrl ( ) . toString ( ) ` to ` repositories . get ( 3 )
added a new class ` AffiliationTask ` for creating a new ` NodeAffiliate ` instance to facilitate the creation of
added URI normalization and error handling for invalid URIs in TagLibraryInfoImpl . java to improve robustness of URI validation and provide clearer error messages
changed the access modifier of the buildUserProfileByClassCompleteName method from private to public to allow access to the method from other packages
added array handling for object updates in CacheKey . java and updated related tests in CacheKeyTest . java to improve performance by reducing unnecessary
refactor getextmntent method to use FileSystemProvider for file type detection to improve compatibility with Unix filesystems and enhance file type detection
added a call to ` wsSession . close ( ) ` in ` TestWsWebSocketContainer . java ` to ensure proper resource management and prevent
replaced ` getParams ( ) ` method with ` getVirtualSensorCallback ( ) ` in ` ShadowVirtualDeviceManagerTest . java ` and
added a condition to check if the context object equals before execution in HttpSessionSecurityContextRepository to ensure that the session is removed from the session if the
replaced the initialization of ` lch ` with ` loopback ` in ` NetUtil . java ` to ensure loopback addresses are only returned when
replaced ` BUF _ SIZE ` with ` DEFAULT _ BUF _ SIZE ` and modified buffer initialization in ` Zlib . java `
added secure validation checks and improved exception handling in KeyInfoReferenceResolver , XMLSignatureInput , and XPathError classes to enhance security by ensuring
added a boolean flag ` iconChangeListenerInstalled ` and modified the icon listener handling in ` Label . java ` to ensure the icon listener is only
added " ru " to the Language class to support Russian languages in the application
hhh - 14836 fix duration conversion in sqm to sql
disable frame state verification in SubstrateGraphKit . java to ensure proper state verification during graph processing
added methods to reset system properties in RobolectricTestRunnerTest and TestUtil to ensure proper handling of SDK settings and resources mode during
added a system class name " org . slf4j . " to the ViewClassLoader and a corresponding test in ViewClassLoaderTest to ensure
updated conditional checks in ChangePackaging . java and added a test for removing default packaging in ChangePackagingTest . java to ensure proper
updated file download method to use withExtension ( " txt " ) instead of byText ( " forbidden \ " characters in name " ) to
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to clear the buffer for
replaced ` setDefaultUnits ` with ` setPreferredUnits ` in ` JogService ` and updated related methods to use it to improve clarity
updated the expected string format in DatePatternConverterTest to use UTC timezone to ensure accurate date formatting based on the current time zone
removed unnecessary whitespace in the return statement to improve code readability and maintain consistency
updated error messages in FileSystem , LocalFileSystem , DistributedFileSystem , LocalFileSystem , LocalFileSystem , and DistributedFileSystem classes to improve clarity of error
replaced ` ScheduledExecutorService ` with ` TimerTask ` in ` JabRefFrame . java ` to improve thread management by utilizing a
[ flink - 2249 ] [ ftp ] fix ftp reconnect attempt server stop test
changed the serialVersionUID from 340322233548L to ConcurrentSkipListMap in KeyedProperties . java to align with the new
added ` ignore ( Throwable ignored ) ` methods to ` JavaUtilLog ` , ` Logger ` , and ` StdErrLog ` classes to
added a null check for runningTaskView before proceeding to avoid potential NullPointerExceptions when runningTaskView is null
removed unnecessary casting from item and contents in BukkitWorld . java to simplify code and improve readability by eliminating unnecessary casting
added a call to GraphicsUtil . cleanImage ( img ) in PanelManager . java to clean the image before processing
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing MMapDirectory and SimpleFS directories to enhance directory management capabilities for improved
added null check for cleanUpColor before creating it to avoid potential NullPointerExceptions when ic is null
updated the query equality assertion in QueryEqualityTest from " field1 " to " field1 _ s " to ensure correctness of the query
refactor ExtendedOperatingSystemMXBeanImpl class to improve code organization to enhance maintainability and readability of the code
added support for installing left commands in SideMenuBar to enhance user experience by allowing users to install the right command on the top of the
added a boolean field ` advanceWindowed ` in ` AppSettings ` and modified window setup logic in ` TweetActivity ` and ` User
added support for SybaseDatabase in DropPrimaryKeyGenerator to ensure compatibility with Sybase databases
refactor Client class for improved clarity to enhance maintainability and readability of the code
[ java ] do n ' t reset lastrecordingposition if the leader have a position .
updated BubbleTextView to call setCellLayoutPressedOrFocusedIcon ( ) instead of invalidate ( ) in BubbleTextView . java
added a return statement to the NearCachedClientMapProxy class to improve performance by avoiding unnecessary processing
refactor package - info . java files for mmm and ppp packages to improve code organization and maintainability
added error handling for the shutdownHttpServer method in ListenHTTP . java to improve robustness by catching exceptions during server startup
camel - 14836 : camel - aws2 - s3 - stream - upload - add support for s3 request and response
[ hotfix ] [ runtime ] remove unused parameter from taskmanagermetricshandler
added a method to drop keys that don ' t exist in 2.2 . 7 version of the DB to ensure that only unique keys are
added a new test class TestThriftCLIServiceSecurity to validate password validation in TOpenSessionReq to ensure that the password string does not contain
added a maxEnergyLimit variable and updated energy fee calculation logic in VMActuator . java to ensure accurate energy fee calculation based on constant
added maxInMemorySize property and its getter / setter methods to HttpClientProperties and updated webClientPlugin to accept properties to enhance flexibility in
refactor Cache class implementation to improve performance to enhance performance and maintainability of cache management
added new test classes ` RunCucumberTest ` , ` StepDefinitions ` , and ` RunCucumberTest ` , and `
added error handling for parsing double values in TypeJsonUtils . java and updated test cases in TestArrayOperators . java to improve robustness by
updated hex string length from 656469746564 to 8080656469746564 in Utf8StringBuilderTest . java
added a check for parameter sets in Params . java and modified path handling in RestInvocationHandlerTest . java to improve parameter handling and ensure correct
camel - 1748 : add maximum number of output to loadbalancer and circuitbreakerloadbalancer to allow to specify maximum number of output
updated the maximum buffered documents configuration in TestIndexWriterExceptions . java to ensure correctness of document frequency assertions based on configuration settings
replaced calls to ` putUnencodedChars ( ) ` with ` update ( hasher ) ` in multiple files to improve code clarity and
removed static final methods from AsmRuntime . java to streamline code for better readability and maintainability
[ biome ] add biome tag to biome tag ( # 1187 )
refactor AsyncImageLoader to use a fixed thread pool for better resource management to improve performance and reduce memory usage during image loading
changed access modifiers of several fields from private to protected in BaseTableUpsertMetadataManager . java to enhance encapsulation and ensure proper initialization of segment
updated Unicode characters in FormatData _ ar _ JO , FormatData _ ar _ LB , and FormatData _ ar _ SY files
replaced ` equals ` method with ` hasImageEqualTo ` in ` AbstractSunSecureRule . java ` to improve code readability and
camel - 1649 : camel - jbang - add -- repos = true option to run - dcamel . jbang . version
added handling for NaN scores in CrawlDbReader . java to improve error handling and logging for NaN scenarios
added a cleanup method to delete target and rolled files in OnStartupTriggeringPolicyTest . java to ensure that the target and rolled files are
replaced focus request method with requestFocusInWindow ( ) in FilterConditionEditor . java and added focus handling in FindAction . java to
[ hotfix ] [ runtime ] refactored CheckpointsCleaner to implement AutoCloseableAsync and added synchronization in SchedulerBase to improve
added a new file ` XPathWhiteSpaceTest . java ` that tests the XML schema initialization to ensure that the XML schema is correctly validated and validated
added a check for empty trie log before persisting the block header in BonsaiPersistedWorldState . java and created a new test
refactor FilledNewArrayInstruction class to improve code structure to enhance maintainability and readability of the code
increased the timeout duration from 60 seconds to 60 seconds in SimpleNetworkTest . java to allow for more time for test execution
updated the return statement in OCFile . java to use endsWith instead of substring to improve clarity and correctness of parentPath handling
added a print statement for loading the skin file in JavaSEPort . java to facilitate debugging and debugging during skin loading
added markDirty ( ) and isValid ( ) methods to LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to ensure proper
added a static final Result constant in ` Result . java ` and updated the return statement in ` TestStep . java ` to use it to
updated assertions in TestTransactionCallback to use NullPointerException instead of PersistenceException to improve error handling by providing a null pointer exception
added IdentifiedDataSerializable interface to UploadJobMultiPartOperation and refactored response handling in UploadJobMultiPartOperation to enhance data serialization
added IOException handling for recovery failures in MessageDatabase and JobSchedulerStoreImpl to improve error handling and provide clearer feedback on recovery failures
added methods to initialize SummaryLevels with a NodeModel parameter and updated child nodes handling in VerticalNodeViewLayoutStrategy to improve flexibility by allowing
updated the ` DataOutput2 ` class to include a ` sizeMask ` variable and modified the ` ensureAvail ` method to improve performance
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to temporarily disable tests that are not
simplify the assignment of targets and endpoints in StorageProxy . java to improve code readability and maintainability
updated the parameter name from ` bufferedIo ` to ` lazyCreate ` in ` FileManager . java ` to improve clarity and consistency in
updated transformation function types in TransformFunctionType and TransformFunctionFactory to include additional strings to enhance clarity and maintainability of the transformation process
added getSimpleName ( ) and getEnclosingElement ( ) methods in VariableElement . java and package - info . java files to enhance code clarity
updated RFC3280 to RFC5280 in multiple Java files to ensure consistency in RFC - 5280 format across the codebase
updated version number from 2.17 . 3 to 2.17 . 4 in Recaf . java and SearchAnnotationVisitor . java to reflect
refactor the handling of selected items in ListActivity and NoteAdapter to use SparseBooleanArray instead of HashMap to improve performance and reduce memory usage
updated conditional statements in DirectUpdateHandler2 . java for consistency to improve code readability and maintainability
refactor path handling in ConfigFileApplicationListener to utilize ResourceUtils for URL validation to improve code readability and maintainability by utilizing Resource
updated PreviewPositionHelper initialization to accept a Context parameter and modified position calculations in TaskViewSimulator and TaskThumbnailView to enhance flexibility in
[ java ] use termentry instead of timestamp for new leadership term .
add errorstreamlog to pmdcoveragetest to avoid test failure
refactor ByteArrayInputStream logic and add a new Skip class with a method to skip bytes to improve input stream handling and provide a way to skip bytes
refactor the condition for prompting updates in UpdaterTask . java to improve readability and maintainability of the code
changed the access modifier of MAX _ HEADERS from final to public in HeadersMessage . java and modified the block chain download logic in Peer .
added " rt . jar " to the STANDARD _ LIBRARIES list in ModClassLoader . java to support additional jar files in the application
refactor connection handling in AbstractHandshakeHandler to improve clarity and consistency to enhance code readability and maintainability
updated GranuleDescriptor , RasterManager , GTDataStoreGranuleCatalog , and GTDataStoreGranuleCatalog classes to improve error handling
added a condition to check if the response is already committed before sending errors to improve error handling by logging warnings when response is already committed
added a check for ` hold ` in ` pendingElements ` and ` connectionQueue ` in ` HttpSession . java ` to ensure proper handling of
updated fadeOutFakeTaskView method from true to false and added background color settings for hotseat icon views to improve responsiveness and
updated logging levels in PrefabFormat . java and PrefabSerializer . java to improve clarity and consistency to enhance code readability and maintain
replaced the initialization of JdbcScimGroupExternalMembershipManager with a direct addition of external group sets in LdapMockMvcTests . java to
updated the calculation of thirtyDays in FreezeBalanceActuator . java and added a validation check in TransferActuator . java to ensure
updated the index calculation in FileResolverTestBase . java to use File . separator instead of a hardcoded slash to ensure proper handling of file
simplified the setKeyboardButton method and improved null checks in LatexTreeItem and RadioTreeItem classes to enhance code readability
updated GpsMainActivity and AnnotationViewFragment to use session description instead of a hardcoded string to improve clarity and maintainability of the
added a conditional check for the number of pages before saving a PDF file to ensure that the PDF file is written correctly when the number of pages
replaced ` AndroidBufferAllocator ` with ` AndroidNativeBufferAllocator ` in ` OGLESContext . java ` and added a new `
added logic to handle flag names starting with " ! " and modified flag comparison logic in PrimaryItem . java to ensure correct handling of flag names
added a NOPMD comment to the file executeQuery method in JDBCHistoryCache . java to improve code readability and maintainability by
updated condition in BattlePassManager to use equality comparison instead of equality to improve readability and maintainability of the code
updated the loop structure in QueuePriorityTest and added a toString method in PriorityElement to improve code readability and maintainability by using a more
refactor AffinityApiUnitTest to use AffinityGroupDao for creating and deleting affinity groups to improve code clarity and maintainability by
added null check for main . command and modified argument handling in Main . java to enhance robustness by preventing potential NullPointerExceptions during command execution
updated LightOutputStream initialization from ` LightOutputStream ( ) ` to ` LightOutputStream ( 5 ) ` in multiple classes to ensure the output stream is
changed the visibility of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a boolean flag ` showBlank ` in ` ClassWriter . java ` and created a new class ` T8032819 . java `
removed the assertion for the length of the Person class to streamline the code by eliminating unnecessary assertions
added a null check for the file extension in VirtualFile . java to prevent potential NullPointerException when the file extension is not available
replace return statement with continue statement in ContactRightButtonMenu . java to improve code readability and maintainability
[ hotfix ] [ runtime ] fix bug in slotsharinggroupassignment and simpleslot
updated the loop logic in InstallShortcutReceiver . java to correctly calculate the screen position to improve accuracy of screen positioning based on the presence of
refactor socket handling in PlainSocketImpl to ensure proper resource closure to improve resource management and prevent potential memory leaks
added functionality to clear and manage removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve user experience by ensuring removed items are
updated log message from " center of element " to " in - view center point " to clarify the purpose of the log message for
added a new file ` bug4865918 . java ` implementing a ` TestScrollBar ` class for testing scrollbar block increment to ensure
replaced the usage of ` VelocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler . java ` to simplify the code by
updated import statements and added group triggers message handling in QuestCommand . java to enhance user experience by providing clearer feedback on group triggers
refactor code to use a new method ` startXmlFileChooser ` in ` GncXmlHandler ` and ` AccountsActivity ` to improve
added Lombok ' s ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to enhance logging capabilities for better debugging and debugging
updated the configuration URI in CloudService from " io : openhabcloud " to " io : openhabcloud " and added a
removed the setViewportComponent and setJScrollPane in BrowserPanel . java to streamline the code by eliminating unnecessary components
replaced ` LwjglInput . KEYCODE _ DEL ` with ` KEYCODE _ FORWARD _ DEL ` and updated
added a conditional check for indexMimeTypeParts in MoreIndexingFilter . java to ensure correct handling of MIME type parts based on configuration
added a pattern for matching author comments in JSDoc . java to enhance the functionality of author handling in the JSDoc class
updated metrics constants in MetricsConstant . java and TestMetaStoreMetrics . java to include new constants for CREATE _ TOTAL _ DATABASES ,
updated HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient for managing tables and schema configurations to improve flexibility
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` parameter and added error handling to enhance
added " Islamic Umm al - Qura Calendar " to " Hijrah - umalqura " and updated
added a condition to check if the browser is not firefox in WebAudioWrapper . java to ensure only supported features are supported for IE and
added a method ` appendInterceptor ` to ` GrpcServerBuilder ` and modified ` InterceptorConstants ` constructor in ` GrpcServerBuilder `
added a default charset parameter to the CREATE TABLE statements in TestCompatibility . java to ensure compatibility with the default charset for testing purposes
replaced multiple calls to kill ( false ) with a call to allocateOutgoing ( ) in WriterRecordBatch . java and StreamingAggTemplate .
[ hotfix ] [ runtime ] fix typo in executiongraph . getallocationtimeout ( )
added a ` hasFrom ` property and its getter / setter methods to the ` Delete ` class and updated related test cases in ` DeleteDe
refactor SynchronizeFolderOperation to use isMultiStatus instead of isSuccess for handling multi - status status to improve code clarity and maintainability by
refactor tests handling in RecipeScheduler to use a utility method for applicable list tests to improve code readability and maintainability by centralizing
corrected a typo in the logLine string format to ensure correct formatting of log lines for better readability
( chore ) camel - aws2 - integration : disable integrationtest if application credentials be not provided
fixed - rsearch . getmax ( ) return 0 instead of minexclusive
refactor license handling in CCLicenseStep . java to improve clarity and consistency to enhance code readability and maintainability by reducing
added a null check for the global ID before adding it to the guidIndex to avoid potential NullPointerException when accessing the global ID
updated the comparison logic in OptionalAssert to use objects . getComparisonStrategy ( ) instead of equal to improve clarity and maintainability of the
simplified the initialization of ` lmb ` in multiple classes to improve code readability and maintainability by reducing redundancy
added a new file TestArrayCopyToFromObject . java containing a test method for array copying to an object to facilitate testing of
refactor path insertion logic in BuckPythonProgram . java to improve readability and maintainability to enhance code clarity and maintainability by
updated conditions in AjpAprProtocol , AjpNioProtocol , and AjpProtocol to use ` ! = ` instead of `
updated the ` findFiles ` method to include a ` defaultUnfoundRoot ` parameter and modified its usage in ` CraftingHelper . java
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to mark the test case as unstable to temporarily disable the test case
added a null check for the client ' s doRequest ( ) method in TestInternalInputBuffer . java to ensure that the client correctly handles null
refactor autoloadCall method to accept a lower name as a lock in Environment . java and SplClassLoader . java to improve flexibility in loading
removed server version comparison logic from CustomPlaybackOverlayFragment and PlaybackController classes to streamline version comparison logic and improve code clarity
replaced instances of ` new OneKDC ( etype ) . writeJAASConf ( ) ` with ` new OneKDC (
added a boolean flag ` jsr250AttributeFound ` and modified return logic in ` Jsr250Voter . java ` , and created
refactor import statements in MP4Parser . java for improved clarity and consistency to enhance maintainability and readability of the code
added a new constant for HS2 _ PROXY _ USER and modified session parameters handling in ConnectionFactory . java to improve session parameter handling and
camel - 14263 : camel - hdfs - add snappy support for camel - snappy compression
added a sleep duration to the HttpClientTest class to improve responsiveness during test execution
updated XSSFCell and XSSFSheet classes to set cell type and modified cell deletion logic to improve clarity and functionality of cell
updated glyph offset calculations in GlyphLayout . java and modified text formatting in BitmapFontTest . java to improve font rendering accuracy and clarity in
[ fabric8 ] remove istioproxy integration test from fabric8 istiotit
replaced ` ReportPlaybackStartAsync ` with ` ReportPlaybackProgress ` in ` PlaybackController . java ` and ` Utils . java `
refactor file input stream handling in SimpleAuthority . java to use BufferedInputStream for improved resource management to ensure proper resource management and prevent memory leak
added checks for existence in memory in PutFromLoadAllBackupOperation , PutFromLoadAllOperation , DefaultRecordStore , and RecordStore classes
change return value from LENGTH _ BIT & ERROR _ BIT to LENGTH _ BIT | ERROR _ BIT in ResponseFlag . java to ensure correct handling
[ ds - 4892 ] fix default policy for read in dspace
added a concurrent reference to the ConcurrentHashMap for the CompositeFont in FontUtilities . java to ensure thread - safe access to the CompositeFont instances
updated the calculation of prefHeight in Tree . java to ensure prefHeight is initialized to zero to avoid potential null pointer exceptions
[ dmn ] add error message for invalid dmn expression
removed unused imports from multiple Java files to streamline code and improve readability by eliminating unnecessary dependencies
changed access modifier of ` finishRunningRecentsAnimation ` method from private to public to allow access to ` finishRunningRecentsAnimation ` from
added null checks for node ID and edge type in ImportContainerImpl . java and updated edge handling in ImportContainerImpl . java to improve robust
[ beam - 1746 ] fix npe in function api control client ( # 1746 )
updated Bin initialization in BinFiles . java and added a new test for flow file larger than the bin limit in TestMergeContent . java to
simplified the logic for finding the closest CoreBuild in Teams . java to improve code readability and maintainability by reducing red
added a check for the presence of the CONTENT _ LENGTH header in RestTemplateCopyHeaderFilter and created a corresponding test in TestRestTemplateCopy
updated handling of string literals in Java2TypeScriptTranslator and modified error handling in SyntaxTests to improve code clarity and ensure correct handling of
updated dimensions and sample sizes in multiple classes for consistency and clarity to improve code readability and maintainability by standardizing sample size settings
hbase - 11818 canary : allow all region to be run in regionserver mode
removed the NodeModule import and modified the ImmutableMap initialization in TestCassandraConnector . java to streamline the code by eliminating unnecessary dependencies
reset cursor position in KahaDBStore to ensure proper cursor position management during database operations
added minimum size settings for Frame dimensions in CallDialog and OneToOneCallPanel to enhance user interface responsiveness by allowing dynamic frame dimensions
fix loss of state information during world gen
refactor TestHTTPSamplersAgainstHttpMirrorServer to use static imports and improve test setup setup to enhance flexibility and maintainability of
added a dependency injection for KerberosPrincipalHostDAO and updated entity removal logic in KerberosPrincipalDAO and KerberosPrincipalHostEntity to improve
updated the parameter of ` getTableSnapshot ` method from ` true ` to ` false ` in ` StatsOptimizer . java ` to ensure the method
refactor error handling in AprEndpoint . java to improve error logging to enhance clarity and maintainability of error logging during poller execution
updated error message in AndroidGradleBuilder to clarify the purpose of the licenseKey build hint to clarify the purpose of the
updated the method name from ` getName ( ) ` to ` getDisplayName ( ) ` in ` DLNAResource . java ` and removed unnecessary
refactor relative package name handling in KieBuilderImpl . java to improve clarity and maintainability to enhance code readability and maintainability
added a Assume . assumeFalse method to CheckIndexTest . java to ensure tests are only executed on the latest version of the test
removed the ` Context ` parameter from the ` assignTargetsForSplitScreen ` method in ` AbsSwipeUpHandler ` and ` RemoteTarget
refactor LeaderLatch class to improve code structure to enhance maintainability and readability of the code
added methods to retrieve and initialize ZKSNARK parameters in SolidityNodeHttpApiService to enable dynamic configuration of ZKS
refactor TransactionConfidence to use a new method ` getDepthFuture ` for clarity to improve code readability and maintainability by reducing
added a new method ` createMediaRecorder ` to ` CodenameOneImplementation ` , ` Location ` , and ` MediaManager ` classes
changed the default value of platformName from " ios " to " ios " to ensure the platform name is set to " ios " for better
refactor PageEditClient class to improve code readability to enhance maintainability and facilitate future updates
updated conditional checks for ` mozDash ` and ` webkitLineDash ` in ` Graphics2D . java ` to improve code readability
refactor CreateVisibleSignature class to improve code structure to enhance maintainability and readability of the code
added error handling for outgoing frames in AbstractExtension . java to improve robustness by handling potential exceptions during frame processing
replaced the try - catch block with a privileged action for clarity to improve code readability and maintainability by using privileged actions
added logic to set the parent of a category in the feed category database to ensure that the category is only updated when they are not in the
updated the title generation logic in ContributionManagerDialog . java to improve clarity and consistency to enhance user experience by providing a clearer title
added a ` vwap ` field to the ` Ticker ` class and updated its constructor to include it to enhance the functionality of the
added a ` TextView ` parameter to the ` SearchAndRecommendationsScrollController ` and modified the ` updateBottomInset ` method to
added a new file ` RenderGraphAPI . java ` and updated ` WorldRendererImpl . java ` to implement the ` RenderGraphAPI `
set the primary color of the NCFirebaseMessagingService to ensure the NCFirebaseMessagingService reflects the primary color for better
refactor ShadowUsbManagerTest . java for improved readability to enhance maintainability and facilitate future development
updated calculations in AbstractDifferenceRecommenderEvaluator and RMSRecommenderEvaluator to use evaluationPercentage instead of trainingPercentage and added logging for user preferences
added a call to update the selected configuration in Rocket . java to ensure the selected configuration is updated correctly
updated the calculation of ` bounds2 . width ( ) + 2 * strokeWidthUpperBound ` to use ` Math . max ( 1 , int
replaced HashMap with LinkedHashMap for options and result in multiple classes to improve performance and reduce memory usage in the code
replaced ` ClosureManager ` with ` ClosurePool ` in ` NativeClosureFactory . java ` to improve closure management by utilizing a more
camel - 1649 : migrate camel - test to junit5 ( # 1649 )
added new files WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java for testing WebSocket connections to enable testing of the ingress
added a generic type set ' RecordType ' in AbstractImportMetadataSourceService and implemented a corresponding test in DSpaceServiceManagerTest to ensure
added a new method ` areAuthenticationsEssentiallyEqual ` to the ` AbstractCasWebflowEventResolver ` class to ensure that
added a check for the system property " jnr . ffi . compile . x86asm " in X86MethodGenerator . java to ensure
replaced ` getType ( ) ` with ` callNodeType ` in the ` CodeGenerator ` class to improve code clarity and maintainability by
added a new annotation ` @ Insecure ` and modified ` MessageBuffer ` class to include @ Insecure annotations to enhance security by enforcing secure message
added new configuration variables for Hive configuration in HiveConf . java to enhance configuration flexibility for Hive operations
replaced instances of ` Set ` with ` HashSet ` in ` ResourceSet ` and added a null check in ` DefaultResourceSetService `
changed the visibility of ` decrefOnClose ` and ` readerFinishedListeners ` from ` boolean [ ] ` to ` Collection < ReaderFinished
updated multiple Java files related to SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , and Test3 to
simonstewart : add a setup method to the InputFieldTest class and refactored test cases for the selenium ' s clear
refactor ` getFirstTypeArgument ` method to use ` ParameterizedType ` instead of ` ParameterizedType ` for better type safety to improve code clarity and
changed method names from Set < Integer > to Collection < Integer > in Int2IntHashMap . java to improve clarity and consistency in naming
added duration property and setter methods for bgColor and bgColor in FlipTransition . java to enhance flexibility by allowing customization of duration
removed unnecessary logging statement for subsAreValidForStreaming in DLNAResource . java to streamline the code by eliminating unnecessary logging
update majorVersion and minorVersion from 8 to 9 in ForgeVersion . java to reflect the latest version of the application
replaced System . err . println with LowLevelLogUtil . log for warning messages in StackLocator . java to improve logging clarity and
refactor Java15Validator and Java16Validator classes to include Java15PostProcessor and Java16PostProcessor classes to enhance code organization and support
updated the padding setting logic in ExpansionViewHelper . java to accommodate both 1 and last replies to ensure proper padding adjustments for
added a check for callback presence before V3.9 in AbstractPartitionPrimaryReplicaAntiEntropyTask . java to ensure proper handling of callback
added metadata management methods to SeedUrl , SeedResource , and SeedUrl classes to enhance the functionality of metadata retrieval in the SeedUrl and Seed
added a null check for the declaration before creating a new Pattern instance to avoid potential NullPointerException when accessing the declaration
[ hotfix ] [ test ] fix typo in testcoprocessorwhitelistmasterobserver
added package name handling in AnnotationActionValidatorManager and updated test assertions in AnnotationActionValidatorManagerTest to improve clarity and ensure correct package name
updated the ` containsAllOf ` method to use ` Arrays . < Object > ` instead of ` asList ` and added a new test for
added stream ( ) and parallelStream ( ) methods to MapIterable , PrimitiveObjectMap , and corresponding test cases in MapIterableTestCase to
modified the return statement to clone the notifInfo object to ensure that the notifInfo is always cloned before returning it
refactor command key comparison logic in AppW . java to use commandConstants instead of commandConstants to improve code readability and maintainability by
refactor AEADBlockCipher class to improve code structure to enhance maintainability and readability of the code
added ` isVariableLocal ` methods to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap `
added null check and legacy resource name handling in PackageResourceTable . java and updated default resources in RobolectricTestRunner . java to
added a conditional check for empty fields in TrueTypeFont . java to ensure metrics are only set when both size and position are zero to improve
updated SignPlugin constructor to accept a List of HttpMessageReader objects instead of a static list to enhance flexibility in handling message readers in the
refactor Int2ObjectCache class for improved performance to enhance performance and maintainability of the code
removed the validation check for MavenDeployer in StandardMavenAuthenticationProvider . java to simplify the code by eliminating unnecessary validation checks
refactor AudioNode class to improve code structure to enhance maintainability and readability of the code
added SSL context initialization and improved exception handling in LinkyHandlerFactory . java and EnedisHttpApi . java to enhance security by ensuring
refactor HiveFunctionRegistry to utilize a new map for SQL standard operator tables and streamline the registration process to improve code readability and
http : / / issues . apache . org / jira / browse / amq - 2696 - fix the issue of jmx
updated the ` getBuildTargetForAlias ` method to include a ` possiblyFlavoredAlias ` parameter and modified the return statement in ` B
added a check for empty ODataFeed before returning the processed result to ensure that only processed results are processed when there are no feed entries
added a new map for EQUIVALENT _ VERSIONS and modified the version return logic in MetaStoreSchemaInfo . java to
cloudstack - 3392 : fix bug where vm expunge do n ' t fail if vm expunge fails
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should not be used in future development
refactor ONDashClockExtension , AlarmReceiver , AlarmReceiver , and AlarmReceiver classes to utilize a new method to
updated GoogleAuthUserConfigTable and TotpEndpointIntegrationTests to use " nvarchar / varchar " instead of " varchar " to ensure
replaced ` commit ( ) ` method calls with ` apply ( ) ` method calls across multiple classes to simplify code and improve readability by
added a new test class ` TestIdleListener ` to the ` StandardSession ` instantiation to enhance session management by providing a idle listener for better
updated the string representation of the testBigQueryTable in BigQueryIOIT . java to improve readability and maintainability of the code
added background resources and reset the icon in HotseatPredictionController and BubbleTextView to improve UI responsiveness by resetting the
rename the method ` getFlushAfterQuery ` to ` FlushAfterQuery ` to improve clarity and consistency in naming conventions
add unit tests for ` AbstractTestNativeSystemQueries ` and ` TestPrestoNativeSystemQueries ` classes to ensure correct behavior of system queries
added a check for all outputs before retrieving active features in LIMEExplanation . java and updated test assertions in LIMEColumnarTest .
added support for command - line arguments in AppleSimulatorController and InstallCommand to enhance command - line argument handling for Apple targets
replaced direct calls to getArea ( ) with a direct call to area . getCurrentLineStartInParargraph ( ) to
added a check to check if the pipeline ' s lifecycle state is available in ContainerBase and StandardContext classes to ensure that the pipeline ' s
added a background clipping to the outline of the QSB widget to enhance the visual appearance of the QSB widget
added flags and plots processing logic to SQLManager , BlockTypeListFlag , and PlotArea classes to improve flag conversion accuracy and provide clearer
updated the FloatingTextRenderer to conditionally enable depth testing based on the floating text status to ensure proper rendering behavior based on whether the floating
changed class declarations from ` Target _ com _ oracle _ truffle _ nfi _ backend _ libffi _ LibFFIContextLinux
added a propagationBehavior field and its getter and setter methods to JdbcAggregationRepository to allow dynamic configuration of the propagation behavior for transaction templates
added support for L1Regularization and L2Regularization in the LayerValidation class to enhance layer validation capabilities by allowing different regularization types
added exception handling to the ` readWrite ( ) ` method and refactored exception handling in ` AbstractChecker . java ` to improve error
changed the visibility of the ` colorStack ` variable from static to instance variables to allow access to the ` colorStack ` variable from other classes
updated method calls from ` false ` to ` true ` in ` Configuration . java ` to ensure consistency in statement mapping logic
updated the method to convert tradableIdentifier to lowercase in BTCEPollingMarketDataService . java to ensure consistent depth retrieval across different
updated the channel state assertions from " 0.312716 " to " 0.322700 " in ChannelStateTests . java to
removed the ` versionedHashes ` field and its getter and setter methods from multiple test classes to simplify the code and improve readability by elimin
added functionality to set the trigger price text in the MutableOfferView to ensure that the trigger price text is displayed in the UI
added error handling for student feedback redirection in StudentFeedbackSubmissionEditSaveAction . java to improve user experience by providing clearer feedback feedback
removed debug print statements from I18NPageController . java to clean up the code and improve readability
added a condition to check if the result is not null before logging debug messages to ensure that debug logs are only logged when the result is true
# 1188 - fix bug in savemanybeans that do n ' t have change property on new bean
added a boolean field ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator . java ` to control the behavior of
added new methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to provide functionality for
replaced specific imports with wildcard imports and added visibility handling in LWChoicePeer . java to improve code readability and ensure proper visibility management
removed redundant null check for insert in StressProfile . java to simplify code and improve readability
replaced direct calls to ` asScalaIterable ` with a static method ` collectionAsScalaIterable ` in multiple wrapper classes
added null check for requests before processing in MockServerEventLog . java and improved logging in HttpForwardObjectCallbackActionHandler . java to
added warning log for unable to load properties file in DefaultEnvironment . java to improve error handling and provide clearer feedback when properties file is not
replaced the try - with - resources statement with a try - with - resources statement to ensure proper resource management and prevent potential memory leaks
added a condition to check for multicast support in the SetOutgoingIf class to ensure proper handling of multicast connections based on network capabilities
updated the initialization of sqlCommand to include a length parameter to ensure proper handling of command length in the SQL command
replaced ` setLatestConsumeTime ` and ` setLatestConsumeTimeForEnergy ` with ` setLatestConsumeTimeForEnergy `
added a new method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class to allow customization of the ` InvalidSessionStrategy
updated error message in ProtobufAnnotationSerializer to include the empty index and original labels to improve clarity of error messages for better debugging
added a new test class ` MapAssert _ containsKeys _ Test ` for assertion checks in ` MapAssert ` to ensure proper functionality of assertions
added a new interface JDBC4TemporaryPreparedStatementMethods and implemented setter methods in JdbcProxyGenerator . java to enhance proxy generation functionality for improved functionality
added a method ` ensure ` to ` ServerWebSocketContainer ` and updated related tests in ` DirectUpgradeTest ` to improve WebSocket container initialization and
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags . java ` to simplify the code and improve readability by
pdfbox - 4892 : fix nullpointerexception in getcurrentpoint ( )
replaced the initialization of hooks array with a static final EMPTY array in MethodHook . java to simplify the initialization process and improve code clarity
added a grantAccess flag to MockAuthenticationManager and modified the return logic in MockAuthenticationManager to allow users to grant access to the authentication manager
updated method names from ` afterJob ( ) ` to ` afterJob ( JobExecution jobExecution ) ` across multiple classes to improve clarity and
added a condition to check if the file canExecute ( ) is true in SharedLibraryLoader . java to ensure that the file can be executed
added ` hasTimeSeriesQueryLanguage ` method to ` TimeSeriesQuery ` and ` TimeSeriesQueryOrBuilder ` classes to enhance the functionality of the ` has
rename ` SampleResult ` to ` SampleEvent ` in ` ResultCollector . java ` and update related methods in ` SaveService . java `
added new constants for Battery , ANNOTATION , and TIME _ WITH _ OFFSET , and PROFILE _ NAME in BundleConstants . java and
changed the return type of the applyRule method from Hashtable to Map in SearchExpression . java to improve type safety and maintainability of the method
rename ` movedGeoWidget ` to ` movedObject ` in ` EuclidianController . java ` to improve clarity and consistency
updated JoglGraphics and ProjectiveTextureTest to use Format . RGB565 and modified texture filters in ProjectiveTextureTest to improve
refactor the ` setResourceToDelegate ` method to return a ` File ` instead of a ` void ` to improve code clarity and ensure
camel - 14284 : camel - property - intercept - from - endpoint should use property placeholder . thanks to michael for
updated the condition in ActionScheduler to check if the current time is greater than or equal to the expected value to ensure that the current time is
added a null check for debug _ log before setting it in dbg _ zip to avoid potential NullPointerException when debug _ log is null
replaced ` WorldRendererImpl ` with ` RenderingDebugConfig ` in ` RenderingDebugConfig ` and added a configuration binding in ` NotificationOverlay
added a resetGate method to the Pipe class and modified the markBlockNeedsUpdate method in BlockGenericPipe . java to ensure that the pipe
replaced direct instantiation of TestSupplementary with a try - finally block to ensure the default locale is set to improve resource management and prevent potential
updated the randomness of the team color in Team . java from 0.8 f to 0.4 f to ensure the team color is
replaced HashSet with Collection for activeMatchedStates and added logging statements in SequenceMatcher . java to improve performance and enhance logging clarity during state
updated the condition to check for null and non - null annotation in SoftAsserts . java to ensure proper handling of null and non - null annotation
updated error message formatting in StorageResources . java and added exception handling in StoragePluginRegistryImpl . java to improve clarity of error messages and
replaced multiple calls to ` ReportUtils . report ` with a new method ` toCsvFile ` to improve code readability and maintainability
added null checks for note and noteTmp in DetailFragment . java and WidgetProvider . java to improve robustness by preventing potential NullPointerExceptions
updated the calculation of loaded and fractional loaded based on the peakTasks variable to ensure accurate tracking of loaded and fractional loaded based on the peakTasks
simonstewart : allow firefox to enable native event on window
added constant names for " nutch . score " and " nutch . fetchInterval " in Injector . java and refactored
updated import statements from ` org . apache . commons . collections . collections . ListUtils ` to ` org . apache . commons . collections4
added a new method ` isShareSchema ( ) ` to ` CoreContainer ` and implemented a test for schema sharing in ` TestCoreContainer
updated size calculations in multiple classes to use a boolean parameter for better flexibility to enhance flexibility in size representation for segment sizes
updated assertions in VersioningTest . java to include null checks for Version1 _ 2 to ensure that Version1 _ 2 is not null to
updated SQL queries in Field . java and added a new test for null domain columns in AbstractJdbc2DatabaseMetaDataTest . java to ensure proper
[ java ] do n ' t append leadership term event if there be no leadership term .
removed the ` buildMediaType ( ServerWebExchange exchange ) ` method from ` WebClientPlugin . java ` to simplify the code by elimin
replaced ` fillUsingLengthPrefix ` and ` fillUsingLengthPrefix2 ` methods with ` fillAndGetIndex ` and ` fillAndGetIndex
added a check for non - compacted base in AcidUtils and implemented a test for cleanupAfterIOW and MajorTableCompaction to
update storageScheme and qualifierEncodingScheme assignments in PTableImpl . java to use NON _ ENCODED _ QUALIFIERS instead of
added new classes PojoProducersCustomized and RestProducersCutomized to extend PojoProducers and RestProducers to enhance
updated cache section name from " http _ client _ tls _ cert " to " http _ client _ tls _ key " in ArtifactCacheB
replaced direct registration of AesGcmSivProtoSerialization with direct registration in AesGcmSivKeyManager . java to
added a replacement for the " slabWood " item in the OreDictionary to enhance the functionality of the Wooden slab in the
refactor multiple session - related classes to improve code organization to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in the ` UndefinedSymbolsLinkerScript ` class to simplify the
updated the version number in JMeterVersion . java from " 3.2 - SNAPSHOT " to " 3.2 " to reflect the
hhh - 14386 - remove unnecessary @ skipfordialect annotation from denyizedtablephoneduleconstrainttest
corrected the positioning of the draw method in HelloWorld . java to ensure correct positioning of texture elements in the sprite batch
updated the loop logic in PlayerFunctions . java and added a toString method in PlotId . java to improve code readability and maintainability by
added a deprecated version constant for LUCENE _ 8 _ 5 _ 0 to indicate that the version is outdated and should no longer be
removed unnecessary whitespace in the print statement in SSLSocketImpl . java to improve code readability and maintain consistency
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to verify SQL parsing and deparsing of signed
replaced String dependenciesType with SemanticGraphCoreAnnotations . DependenciesType in CoNLLUOutputter . java and added a new enum
refactor methods in NoSuchBuildTargetException and ParseContext to use a new makeTargetDescription method to improve code readability and maintainability by central
updated the test method call from ` testFromMain ( ) ` to ` test ( ) ` in ` TestOutOfMemory . java ` to
increased the array size of configBlocks from a length of 256 to a 256 - bit array to optimize memory usage and improve performance by
refactor logging statements in BukkitMain . java for improved readability and maintainability to enhance code clarity and maintainability by
updated SQL escaping logic in AbstractSQLChange and added unit tests in AbstractSQLChangeTest to ensure correct escaping of escaped SQL statements for Postgres
added methods ` ofAll ` and ` withAll ` to the ` MutableBagFactory ` and ` MutableBagFactoryImpl ` classes to enhance
added validation for file names and attributes in BuildNavAndPDFBody . java to ensure proper handling of HTML escape codes and improve error handling for
updated MqttBrokerConnection initialization to include a new boolean parameter to ensure compatibility with the new connection settings
added null check for the changeLog before retrieving the ChangeSet to prevent potential NullPointerExceptions when the changeLog is not initialized
( chore ) camel - rocketmq : fix typo in output ( )
added HiveMetaStoreClient to drop database in TestHiveMetaStorePartitionSpecs . java and implemented logging in TestObjectStore . java to
added a new parameter " order _ currency " to the BithumbAuthenticated and updated the API key in BithumbAccountServiceRaw to
deleted the SSEFluxWebConfig . java file to remove unused configuration properties to streamline the codebase
added checks for void return values in JsonBuildHelper , IDocBuildTemplate , and SpringBootDocTemplate classes to ensure proper handling of void
added a new method ` listYamls ` to retrieve YAML objects based on an ID parameter to enhance functionality by allowing users to list YAML
rename ` equals ` and ` hashCode ` methods from ` public ` to ` public ` in ` Marker . java ` to improve clarity and
refactor the thread factory to use a lambda expression for awaiting termination to improve code readability and maintainability by encapsulating awaitTermination method
added unit tests for the ` PersonWithAList ` class in ` MongoTemplateTests ` and created a new class ` PersonWithAList
[ geogebra - 1562 ] fix the bug that appear in the euclidian view .
updated toolbar visibility logic in DrawerActivity to use a delayed Runnable to ensure that the toolbar is shown after a delay to improve responsiveness
refactor firstPageReader initialization and deserialization logic in SeriesReader . java to improve readability and maintainability of the code
server : do n ' t attempt to save password for vm on router
added initialization of usingOutputStream , usingWriter , and isCharacterEncodingSet in Response . java to ensure proper handling of character encoding and output stream
added a warning for assignment side effects in GroupDialog . java to ensure proper handling of assignment side effects during group operations
refactor JSON and JSONObjectConvertor classes for improved clarity to enhance maintainability and readability of the code
updated the condition in FileUploadApiController to use maxWidthWithMargin instead of maxHeightWithMargin to ensure proper handling of icon width and height based
refactor ` fetchPublicKey ` method to return ` StringUtils . EMPTY ` instead of ` EncodingUtils . encodeBase64 ` and ` JwtToken
updated import statements and added a check for MIME types in Basic . java to ensure proper handling of Windows - specific MIME types in the application
replaced JZlibDecoder and JZlibEncoder with JZlibDecoder and JZlibEncoder in NettyConnection . java to
added a static method ` doesClassLoaderDescendFrom ` in ` Util ` and refactored conditional checks in ` MethodHandles ` to streamline
refactored the ` connect ` method in ` ChannelProvider ` and ` ProxyChannelProvider ` classes to improve code readability and maintainability
added a new test method for handling empty final columns in TextReader and implemented a test for the empty final column in TestCsvHeader to ensure
added compass gravity and margins for NearbyMapFragment to enhance the visual appearance of the NearbyMapFragment
added unit tests for interpolation and distance calculations in GeoPathTest . java to ensure correct interpolation behavior and accuracy in path calculations
added exception handling to the ` getLeafFilterBuilderByType ` method and modified exception handling in ` ParquetFilterPredicateConverter ` to improve error
added a condition to set the current audio track ' s language if it is blank to ensure that the current audio track ' s language is set
added a warning log for compatibility issues in MicroserviceRegisterTask . java to indicate that schemas in new version are less than the old version to
refactor array handling in multiple array classes to use addAll method to improve code readability and maintainability by reducing redundancy
refactor closing logic in DataSourceProxy . java for improved readability to enhance code clarity and maintainability
refactor InMemoryClientRegistrationRepository to accept a Map < String , ClientRegistration > instead of a List < ClientRegistration > to improve flex
added a method ` resetUIState ( ) ` to the ` SchemaUpgradeHelper ` class to ensure UI state is reset based on the cluster
added handling for pending exceptions in JUnitReporter and corresponding tests in JUnitReporterTest to improve test reliability and ensure proper handling of pending
added a new file ` PlayerSelector . java . patch ` containing a new class ` PlayerSelector . java ` to facilitate entity
added Closeable interface to the Selector class to ensure proper resource management and prevent potential memory leaks
updated MaxConcurrentStreamsTest to use MultiplexConnectionPool for connection pooling to improve connection management and enhance test reliability
added multiple calls to stringType ( ) in CoreOptions . java to ensure proper handling of string types in the application
added null checks for character and parameter in HqlQueryRenderer and removed unused methods in EclipseLinkUserRepositoryFinderTests to improve robustness
updated status checks in HttpGenerator , HttpChannel , HttpChannelState , and Response classes to use HttpStatus . NOT _ SET _ 000 instead of
pdfbox - 4892 : fix typo , a suggest by valerybokov
refactor HikariCPCollectorTest to use StubConnection and set maximum pool size for connection creation to improve code clarity and ensure proper
added methods to expand and expand Parquet file metadata in ParquetFormatPlugin and ParquetGroupScan classes to enhance file selection functionality and improve
updated the ` isSuccess ` variable from ` false ` to ` true ` and modified the compilation logic in ` Jsr199Javac .
added a BaseTableModelListener to handle table model changes in DefaultSortedTableModel to enhance event handling for table changes in the model
updated the minimum value of POSITIVE from 49152 to 65535 in ServerConfig . java to ensure that the number is less than or equal to 65535
added document provider authority handling in AuthenticatorActivity , AccountRemovalJob , and DocumentsStorageProvider to ensure proper handling of root URIs in Kit
removed logging start method call from MainApp . java to clean up the code and improve readability
refactor exception handling in FilterChainProxy to utilize ThrowableAnalyzer for better error handling to improve robustness by ensuring proper exception handling for wrapped
replaced ` length ` with ` this . length ` in ` StringBuilder . java ` to improve code readability and maintainability by using a
pdfbox - 4892 : throw an exception if the filter list be empty , a suggest by valerybokov
added a new file ` TbStopWatch . java ` that implements stop methods in the application to facilitate monitoring and monitoring of stopwatch
removed unnecessary whitespace in PListStore . java to improve code readability and maintain consistency
added @ Deprecated annotations to multiple Continuation classes to indicate that these classes are outdated and should not be used in future development
added a context class loader to the Thread ' s context class loader in RemoteInterpreterServer . java to ensure the correct context class loader is used
do n ' t use entity . getentity ( ) in commandsourcestack
updated the minimum SDK version from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to align
updated method signatures in DeadlineTimerWheel . java to use tickArrayIndex instead of indexInTickArray to improve clarity and consistency
# 1188 - add simple name to bean descriptor ( # 1188 )
updated response paths from " wro / all . js " to " static / all . css " and added a new WroSass
added a new test method ` showLatestTimeseriesTest ` to ` IoTDBMetadataFetchIT ` to verify the functionality of the ` show
rename ` appContextLocation ` to ` contextConfigLocation ` in multiple test files to improve clarity and consistency in naming conventions
added type checking for CertPathValidatorException in OCSPChecker . java to ensure proper exception handling for invalid OCSP requests
added writeOutputSolutionEnabled property and its getter / setter methods in ProblemBenchmarksConfig . java , and updated SingleBenchmark . java to enable
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added a new file ` Issue _ 815 . java ` that implements a test for slice size reopening in the map database to ensure that
added a shapeless recipe to the GameRegistry in BuildCraftTransport . java to enhance the flexibility of the shapeless recipe
[ mahout - 2242 ] fix sequentialaccessvector . iteratenonzero ( ) for non - zero element .
added handling for Shulker and Shulker entities in BukkitMain , EntitySpawnListener , and PlayerEvents classes to ensure
added ` getDebugLogger ( ) ` method to ` DIHWriter ` and ` SolrWriter ` classes to provide access to the ` DebugLogger
updated imports and added maximum file name length checks in IOHelper . java and MultiKahaDBPersistenceAdapter . java to ensure correct handling
added a check to see if a tag matches the specified tag in UpToTagChangeSetFilter to ensure that only matching tags are processed in the
updated variable names from ` T ` to ` T2 ` in multiple Java files to improve clarity and consistency in naming conventions
refactor BrokerRoutingManager to improve code structure to enhance maintainability and readability of the code
updated volume and upPaint values from gray to green in CandlestickRenderer . java to improve visual consistency and clarity in the
replaced ` FrameLayout . LayoutParams ` with ` LayoutParams ` and modified layout parameters handling in ` InsettableFrameLayout . java ` to
added a new ` duration ` parameter to the ` BuildTargetDurationListener ` class and updated its usage in ` BuildTargetDurationListenerTest `
replaced ` @ Profile ( " hsqldb " ) ` with ` @ System . getProperties ( ) ` in multiple migration test files to
added a null check for the user before processing claims to prevent potential NullPointerException when the user is not initialized
camel - 1748 : camel - test - add support for replace from endpoint in camel - test
replaced ` ConcurrentSkipListSet ` with ` NonBlockingHashSet ` in ` CassandraConnection . java ` to improve performance by using a more
api : list public ip address by source network id ( # 413 . 0 )
added tests for the ` isIgnoringBatteryOptimizations ` method in ` ShadowPowerManager ` and implemented it in ` ShadowPowerManager `
updated the version variable from " 9.4 . z - SNAPSHOT " to " __ buildProperties . getProperty ( " version " ) "
added unit tests for invocation verification in NumberOfInvocationsInOrderVerifier to ensure correct verification behavior for different invocation types
refactor debug evaluation logic in TRegexExecNode . java to improve clarity and consistency to enhance readability and maintainability of the code
added " - foreground " parameter to the startProfile method call in NewProfileExtensionConnection . java to specify the foreground configuration for profile execution
replaced ` executor ` with ` executorCloser ` in ` MiniSolrCloudCluster . java ` to improve code clarity and maintainability by
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` in ` MetadataIndexer
updated log message from ` getFile ( ) ` to ` getName ( ) ` in ` CodeEditorView . java ` and added null checks in
updated skippedEntries format in ClassFileReader . java and modified warning message in JdepsTask . java to improve clarity of skipped entries and provide
refactor Fetcher and FetcherMain classes to utilize LinkStorage for improved storage management to enhance code clarity and maintainability by
updated the ` populateBubble ` method to include an ` existingBubble ` parameter and modified the ` populateBubble ` method to include
updated logging messages to throw an IllegalArgumentException instead of throwing an exception to improve error handling by providing clearer context when no stop or suspend times are
renamed the method ` buildRpcExt ` to ` buildRpcExtJson ` for clarity to improve code readability and maintain consistency in
[ java ] use nak _ multicast _ delay _ generator instead of nak _ max _ backoff _ default and nak _ group
updated Gson initialization and added error handling for JSON serialization in ClientInformationResponseView . java to improve code clarity and ensure proper handling of client
added a condition to check if the field amount is not zero before adding it to the limitOrders list to ensure that the average price is only
renamed the method ` rawExecutionReports ( ) ` to ` executionReports ( ) ` in ` BinanceStreamingMarketDataService .
added a new method ` fail ( Exception e ) ` to ` LdapTimeoutTest . java ` and modified timeout checks in ` ReadServerTimeout
added checks for existence of user dictionary files in MaryClientUser , JPhonemiser , and Mary classes to improve error handling
updated password handling logic in AmbariServerConfigurationHandler and updated test cases in RootServiceComponentConfigurationResourceProviderTest to improve clarity and
added a check for already parsed segment in ParseSegment . java and modified the SegmentChecker . isParsed method in SegmentChecker . java to improve
[ hotfix ] [ yarn ] add yarn . application - attempt - failures - validity - interval configuration option
do n ' t unload the h2 driver if it ' s not included
hbase - 11818 add support for snapshot - based inputformat . scanner . readtype ( # 11818 )
added fixed height and width parameters to the LoginInstanceRequest class to support dynamic configuration of instance login options
updated the ` update ` method signatures to include a ` cornerRadius ` parameter in multiple classes to enhance the handling of corner radius in the animation
updated the COMMANDS _ TO _ REMOVE string and added warning filters in QFile . java to enhance the functionality of the COMMANDS
refactor connection retry logic in TxnHandler to use a dynamic retry mechanism to improve reliability by allowing retries on a connection from the pool
fix ( core ) : add txncheckreserve ( ) and txnensurebackupreserve ( ) to queuecontainer
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class to facilitate the handling of character arrays in the
updated DELETE ROWS and CLIENT SELECT statements in CostBasedDecisionIT . java and added a new ExplainPlanTextTest class for testing explain
added handling for SocketException in BaseServiceException and corresponding test cases to ensure that the exception is retryable when insufficient data is written
added ` rapidInstallTypes ` parameter to multiple classes and updated related methods to include it to enhance flexibility in handling rapid install types
updated the regex pattern for the SeedPattern in SortTest . java to ensure correct pattern matching for random seed values
refactor ` MultimapSubject ` to use ` Factory ` for handling iterable values and string representation to improve code readability and maintainability by
updated return statement in Workspace . java to ensure correct display size calculation based on device orientation to improve accuracy of display size based on device orientation
added a new boolean field ` transmux ` and updated related methods in ` Transformer ` , ` TransformerInternal ` , and ` TransformerEnd
added localize functionality to the Picker class to enhance localization functionality for better user experience
camel - 2342 : camel - cxf - fix npe in camel - cxf
hhh - 14836 - postgresql81dialect . buildsqlstateconverterdelegate do n ' t use lock acquisition and lock
added null checks and improved query ID retrieval in TestJdbcDriver2 . java and HiveStatement . java to enhance robustness by preventing
add useunboundedpcollections category to pardo test
updated HTML formatting in GpsSimpleViewFragment . java for improved readability to enhance maintainability and clarity of the code
[ java ] remove the ` leadershiptermid ` parameter from the ` joinLogAsFollower ` method and update related references accordingly to
replaced direct assignment of ` HttpExchange ` with a private variable ` exchange ` to improve code clarity and maintainability by encapsulating the
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
rename ` token ` to ` apiToken ` in ` AppOpticsPropertiesConfigAdapter ` to improve clarity and consistency in naming conventions
added ` @ EqualsAndHashCode ` annotation to ` Recipe ` , ` Markers ` , and ` NamedStyles ` classes , and `
change the return type of getFontSizeAsFloat ( ) from float to double in CharacterRun and XWPFDefaultRunStyle classes to support
changed the type of ` email ` from ` String ` to ` String [ ] emails ` in ` AddressBookDoCoMoResultParser .
refactor exclusions handling in RawMavenResolver to utilize a HashSet for group artifacts to improve flexibility in handling group artifacts based on task
updated DSXAdapters , DSXPairInfo , and DSXBaseService classes to utilize it for handling DSX exchange information to improve
refactor TestBlockingIO , TestParsingTable , and TestValidatingIO classes to improve code organization and maintainability
[ drools - 90 ] use kbase1 / r2 instead of r1 / r2 for incremental compilation
replaced the initialization of ` copy ` with a conditional check for ` sobj . has ( k ) ` before creating ` copy ` to
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code readability and maintainability
refactor error handling in HostFieldDesc . java to improve clarity and maintainability to enhance code readability and maintainability by reducing
added a new parameter annotation for the CompletableFuture and NullnessAnnotation in DefaultNullnessAnnotations . java to enable the handling of CompletionStage in the
updated the calculation of mFreezeCheckPoint in PlaybackController . java to adjust the adjustment of the freeze check point to ensure the
added Whitebox annotation handling in AbstractCommonPowerMockRunner and removed unused run method in PowerMockRunner to streamline annotation management and improve code
updated the method call from ` typeCode ` to ` realType ( ) ` in ` AnyImpl . java ` to ensure compatibility with the
added indentation handling for MethodInvocation elements in TabsAndIndentsVisitor . java to ensure proper indentation formatting for method invocation elements
replaced ` LuceneTestCase ` with ` TestCase ` in ` TestSingleTokenTokenFilter . java ` to align with the latest
updated the HTML output format in HtmlProcessInformationsReport . java to include wrappedText class to enhance the display of the wrapped text in the
refactor ExecutionContext management in JdbcStepExecutionDao , MapStepExecutionDao , and MockStepDao to improve code clarity and ensure proper
added a condition to check if the new media folder is hidden before adding it to ensure that the folder is only added if the configuration is not
added null checks for the actor before setting and removing widgets in SplitPane . java to improve robustness by preventing potential NullPointerExceptions during widget
added handling for parameterized Java types in RemoveUnusedImports . java to ensure correct handling of type parameters in the package
updated logging statement to use this . getVersion ( ) instead of this . getModInfos ( ) . getModInfos ( ) . getVersion
changed the logger variable from ` this . getClass ( ) ` to ` static final ` in ` TicketGrantingTicketImpl . java ` to
updated the SQL string format in PhysicalPlanTest . java from SNAPPY . RLE to SNAPPY . RLE . 81 +
added a method ` isValue ` to check for value pairs in ` AttrData . java ` and updated scrollbar constants in ` Converter . java `
added functionality to check for locale and character modifier keys in the CPlatformResponder and LWCToolkit classes to ensure proper handling of character
[ java ] add aeron _ publication _ connection _ timeout to test media driver .
added a check to return false if the request URI starts with " / css " , " / images " , and " / favicon "
added an assertion to verify the installation of the APK device in TestUtil . java to ensure that the device is rooted before proceeding
# 1188 - ignore oracle test for oracle ( # 1188 )
updated test assertions in TestSimpleBodyHandler . java and TestVertxTLSBuilder . java to use Mockito ' s Mockito ' s Multi
updated the path format in DiffRuleKeysScriptIntegrationTest . java from e3506ff7c11f638458d08
added a new boolean variable ` mIsDismissHapticRunning ` and modified the conditional check in ` TaskViewTouchController . java
add projectile source handling in MixinEventWorldExplosion . java for improved error handling to enhance clarity and maintainability
removed unused imports and implemented getItemId method in SymbolInputAdapter to streamline code by eliminating unnecessary dependencies
updated API path parameters in Bitfinex and BitfinexPollingMarketDataService to use QueryParam instead of a hardcoded value to improve flexibility
added a check for single quotes in the result string in StaxConverterTest . java to ensure proper handling of single quotes in the result
[ hotfix ] [ runtime ] add toString ( ) method to KubernetesLeaderElectionDriver and ZooKeeperLeaderElectionDriverTest to provide clearer context
refactor SqlSessionFactoryBean for improved session management to enhance performance and maintainability of session management
refactor method handling in TripleInvoker to use RpcUtils for better readability to improve code clarity and maintainability by reducing redundancy
replaced Gdx . app . error with GdxRuntimeException in PolygonRegionLoader . java to improve error handling by throwing an exception instead of
added a method ` isStarted ( ) ` to check if the thread local Deadline is started and registered it in ` RawStoreProxy ` to
added handling for ClosedChannelException in NettyRequestExecutor to provide clearer error messages for closed channels
added null check for genres before setting text in ItemListActivity to avoid potential NullPointerException when genres is null
[ hotfix ] [ checkpointing ] fix master hook reset in region recovery
added a new ` MappedContainerComponent ` class and modified ` EntityDataJSONFormat ` , ` EntityDataJSONFormat ` , and ` Protobuf
[ iotdb - 3391 ] fix npe when there be no active memtable in checkpointmanager . getoldestunpinned
updated the handler handle method in Endpoint . java and added a test for retry logic in HttpTest . java to ensure proper handling of callback failures
removed unnecessary whitespace in package - info . java files to improve code readability and maintain consistency
added a new test class ` SQLServerEscapeQuestionCharacterTest ` for SQL server escape functionality to ensure proper functionality and functionality of the escape question
( chore ) camel - jooby : fix npe in joobybeanrepository . findbean ( )
replace synchronized block with Util . wait for the loop in JavaFXSEPort . java to improve thread safety and enhance code readability
updated package structure for ParameterFlags from ` com . kenai . jaffl ` to ` com . kenai . jaff
replaced instances of RegionDecoderCropBehaviour and BitmapCropBehaviour with a new method for creating CropperBehaviour to improve code
removed appName parameter from configure methods in InputRC and LineReader classes to simplify method signatures and improve code clarity
add unit tests for Install and Uninstall components with ignored and broken dependencies in CatalogInstallTest and UninstallTest to ensure correct behavior of installed
replaced ` setHeadless ( true ) ` with ` addArguments ( " -- headless = chrome " ) ` in multiple test files
replaced ` value ` assignment with ` value . intern ( ) ` in ` VersionedValue . java ` to ensure consistent representation of the value
added support for " MOVE " status in the status check to ensure proper handling of MOVE status in the connection
updated ISO8601 _ PERIOD _ MONTH _ DAY _ YEAR2 _ TIME and US _ MONTH _ DAY _ YEAR4 _ TIME timestamps to
replaced ` org . apache . curator . shaded . com . google . common . collect . Lists ` with ` com . google
[ hotfix ] fix nullpointerexception in hssubpartitionmemorydatamanager . startspilling ( )
updated permission checks in Visit . java to include a plot flag for untrusted visits to ensure that untrusted visits are only sent when
added a check to return early if the service is registered to avoid unnecessary processing when the service is not registered
updated conditional checks in BasicURLNormalizer and added a new test forCurlyBraces in TestBasicURLNormalizer to ensure proper normalization of brackets
changed access modifiers of methods in QuickstepTransitionManager from protected to private to restrict access to these methods for better encapsulation
added comparison for lock rate in EncodingConfiguration to ensure consistent comparison of lock rate values
added ` getProjectPath ( ) ` method to ` ProjectGenerator ` , ` SeparatedProjectsGenerator ` , and ` ProjectCommand ` classes
updated the logic for setting the zero digit in HostLocaleProviderAdapterImpl . java to ensure the correct calendar type is retrieved based on the locale
added a new file MSwingUtilities . java to implement functionality for managing image scaling to enhance user experience by providing clearer error messages for
camel - 1649 : camel - mail - producer should use asyncproducer instead of defaultproducer so that it do n ' t
added @ RefreshScope annotation to CasCoreWebConfiguration , PasswordlessAuthenticationConfiguration , and CasCoreWebConfiguration classes to ensure proper refreshing of
add unit test for onexceptionhandleandthrownewexception
added a new file ` Main . java ` and ` ScriptRenderer . java ` and updated ` SchemaCrawlerMojo . java ` to implement
added a condition to check if the input state is not __ NONE before processing the FORM _ ENCODED content type to ensure proper handling of
added checks for glyph width and height in BitmapFont and updated touch focus handling in FlickScrollPane to ensure proper handling of glyph dimensions and improve
replaced ` reportFailure ` with ` runCloseHooks ` in ` DeploymentManager ` and added a new test in ` DeploymentTest ` to
refactor stackToString method to accept a forceIgnore parameter and modify the return statement to improve flexibility in string representation for better readability and
increased the sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to improve responsiveness by allowing more time
updated import statements in LoincHandler . java to use wildcard imports and added a check for non - blank display to improve code readability
replaced ` ClasspathURLStreamHandler ` with ` System . err . println ` in ` JollyDayHolidays . java `
added a new file ` FieldUtils . java ` that implements utility methods for retrieving accessor and setter fields in a class to facilitate
updated assertion logic in DeferredAttr . java and added a new class DoubleStaticImport . java with holdsLock in DoubleStaticImport . java to
updated layout inflation from workspace _ custom _ content to workspace _ screen and added padding settings for custom content to improve layout consistency and ensure proper
added an ` updateSettingsWithSaveLastAccount ` method to ` XabberAccountManager ` and modified subscription handling in ` AccountAddFragment
added a new method ` setvar ` to handle command - line arguments in ` Commands . java ` to facilitate command - line
added a new patch for CatEntity . java and modified animal tame event handling in ForgeEventFactory . java to ensure proper
added handling for unsigned range values in WindowFrame . java to improve error handling and provide clearer context for invalid range values
added a collection of font names in TestCreateSignature . java to verify the presence of the HELV font in the field to ensure the correct
added a method to set the application ' s mode to the application ' s mode to ensure the application uses the correct mode for better user experience
added support for handling Docker file arguments in ImageFromDockerfile . java and created a new DockerfileBuildTest . java file to enhance image
added a null check for threadInfos [ threadId ] before creating it to avoid potential NullPointerException when threadInfos [ threadId ] is null
updated the condition in PieChartRenderer to use Utils . FLOAT _ EPSILON instead of 0.00001f to ensure proper handling of
[ hotfix ] [ runtime ] add debug log in singlecheckpointbarrierhandler
added new schema fields for SYNONYM , ALIAS , AUXILIARY , and HIERARCHY _ TABLE ,
refactor FuzzyQuery and FuzzyTermEnum classes to accept a minimumSimilarity parameter and update related methods to improve flexibility in query
replaced ` addActionsView ( ) ` with ` setActionsView ( ) ` in ` RecentsView . java ` to improve
updated LayoutWrappingEncoder and LayoutInsteadOfEncoder to use OutputStreamAppender instead of IOException to improve flexibility in handling immediate flush properties within the
updated the AutoConfigureAfter annotation from " org . springframework . cloud . autoconfigure . RefreshAutoConfiguration " to " org . spring
added null check for the component before removing it in JLayer . java and created a new test class bug6875716 . java to
replaced ` avro . shaded . com . google . common . base . Function ` with ` com . google . common . base .
refactor BciBlockMapping and GraphBuilderPhase to manage return and unwind blocks more efficiently to improve code clarity and maintainability
added a new method ` isLegacyRenderer ( ) ` and ` setLegacyRenderer ( ) ` to the ` Label ` class to enhance the
replaced ` intToFourBytes ` method with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and ` Abstract
added a null check for mObserver before returning it to avoid potential NullPointerException when mObserver is not initialized
updated the implementation of the ` thenComparing ` method in ` Comparator ` and added a new ` Department ` class in ` TypeTest
refactor DocIdSet class for improved clarity to enhance maintainability and readability of the code
updated the setEndTimeUtc method from null to bucketMillis in UserRuleAnomalyFunction . java to ensure the correct timestamp is set for
added a try - catch block to handle NumberFormatException in VisualScoreTagTest . java to ensure that NumberFormatException is thrown when parsing values
updated naming policy and classloader settings in MockFactory . java and MockFactoryTest . java to improve clarity and maintainability of the code
added a new OriginalFormat class for formatting and parsing in ConverterWithEnumFormat . java to enhance the functionality of the OriginalFormat class for better
replaced the hardcoded date format with a constant for YYYY _ MM to improve code readability and maintainability by reducing redundancy
refactor JAWTRenderer class to improve rendering performance to enhance performance and maintainability of the rendering process
camel - 15836 - camel - aws2 - lambda : remove auto - discover client from camel - aws2 - lambda
cloudstack - 1748 : uservmmanagerimpl : do n ' t generate a valid mac address in the network if it ' s
removed the check for " Authorization " header in ProxyServlet . java to simplify the logic by eliminating unnecessary checks
updated method call from ` submit ` to ` execute ` in ` TraceableExecutorService . java ` to improve clarity and consistency in method execution
added ` getDetails ( ) ` methods to ` Authentication ` , ` AbstractAuthenticationToken ` , and ` UsernamePasswordAuthenticationToken ` classes to
updated the initialization of the randUsePoints variable to check for a non - zero value to ensure the correct number of points is used for better
replaced calls to ` appendDot ( ) ` with ` endSentence ( ) ` in multiple classes to improve clarity and consistency in naming
updated the ` formatForConsole ` method to accept ` Locale . US ` instead of ` Ansi ` to enhance flexibility in formatting console
added imports for wildcard imports and modified import statements in GroovyParserVisitor . java and GroovyPrinter . java to improve code readability and maintainability
added bounds checks for bottomInsetPx and leftInsetPx and rightInsetPx in Border . java to ensure correct positioning of
added a static final ` DEFAULT _ STATE ` constant and refactored gesture state creation logic in ` TouchInteractionService . java ` to improve
replaced ` DateTime ` with ` Instant ` in ` LlapServiceDriver . java ` to use ` DateTimeFormatter . BASIC _ ISO _
refactor openblas and openblas _ nolapack files to improve code organization and maintainability
replaced ` IOUtils . closeQuietly ` with ` IOException . close ` in ` TorrentsStorage . java ` to ensure proper resource management and
added synchronized keyword to the initTxnMgr method to ensure thread safety during initialization
increased the timeout duration from 120 seconds to 480 seconds in waitForRecoveriesToFinish and set the socket timeout in AbstractFullDis
added a new file ` SearchResults . java ` that implements a class for managing search results to facilitate the retrieval of search results
refactor thread CPU refresh handling in CPUSamplerSupport . java to streamline refresh logic to improve code readability and maintainability by redu
updated the initialization of the primitives array in BytecodeNode . java to ensure proper initialization of the primitives array when it is null
added new version strings " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " to TestBack
updated feature flag " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD in FeatureFlags . java
added a new API endpoint to retrieve tenant pools for the current instance to enable retrieval of tenant pools for the current instance
refactor ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix ` methods in ` TopFieldCollector ` to
updated InlineBytecodeGenerator and InlineByteBuddyMockMakerTest to use ` isToString ( ) ` instead of ` isNative ( )
added logging statements to CxxCompileStep and CxxPreprocessStep to improve error handling and debugging capabilities during command processing
added a method ` removeCharacter ` to the ` StringUtil ` class and updated the ` Util ` class to utilize it to improve character removal
updated parameter key from METADATA _ SERVICE _ PORT _ KEY to METADATA _ SERVICE _ PROTOCOL _ KEY and improved logging messages to enhance clarity
added a new interface DataTransformer with compile and transform methods to facilitate the processing of data expressions in the application
updated the type of the distribution array from Object [ ] to Number [ ] [ ] in DistributionGraph . java to improve type safety and ensure
removed conditional check for interesting state in FormatStringChecker . java to simplify code logic and improve readability
removed unnecessary whitespace in SolrCore initialization to improve code readability and maintain consistency
refactor ITestDbTxnManager to improve transaction management functionality to enhance performance and maintainability of transaction management
refactor connection handling in DatabasePlatformFactory to use try - with - resources for improved resource management to ensure proper resource management and prevent potential
added unit tests for the ` MapModel ` in ` CodeFirstPojoClient ` and ` CodeFirstPojoIntf ` classes to
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
added null checks for selection and scaleOffsets in ScaleDialog . java to improve robustness by preventing potential NullPointerExceptions
change method name from ` updatePlayerStepStatus ` to ` tickBelt ` in ` ItemTravelBelt ` and related classes to
pdfbox - 4892 : do n ' t throw ioexception if there be no appearance stream
change the order of keys from SortedSet to LinkedHashSet in ExecuteSqlCommandStep . java to improve the order of keys in the execution process
updated the TIME _ BETWEEN _ TOUCH _ AND _ DRAG value from 1500 to 1000 in CancelEventTimer . java and added
updated the preload value from " libdc1394 - 22 " to " libdc1394 - 25 " in dc1394 . java
added a conditional check for agentSupport before setting setAllConstructorsToPublic in MainMockTransformer . java and created new MockStaticWithPrivateCtorTest
pdfbox - 4892 : fix checkstyle violation , a suggest by valerybokov
added a method to define AWT _ CLASS string for the window title in MainFrame . java to enhance functionality by allowing customization of the
updated the depth calculation logic in XRSurfaceData . java to conditionally set the depth based on the color model ' s pixel size to
added error handling for response body reading in OkHttpDataSource . java to improve robustness by providing clearer error messages for unsuccessful responses
added a static method ` exit ` in ` TopLogging ` and refactored error handling in ` TopThreadGroup ` to improve error handling
updated the calculation of the start index based on the regexp ' s global state to ensure that the start index is always zero when the regexp is
[ planner - 468 ] ignore optaplanner test when upgrade to optaplanner 6.3 . 1
[ hotfix ] [ runtime ] fix typo in defaultallocator
added a method ` cleanEntriesWithoutFeeds ` to ` DatabaseCleaner ` and ` FeedEntryDAO ` classes to handle deletion of entries
changed the return type of appendToLabel method from void to return this to allow the method to return the instance of AtomicCounter
added a new ` NoOpIdleStrategy ` class and updated ` BusySpinIdleStrategy ` and ` LowLatencyMediaDriver ` to
added status checks to CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure that cache control headers are only written when not modified
rename ` SpliceInstrumentListener ` to ` ToolEvalNodeFactory ` for clarity to improve code readability and maintainability by using a
removed the paintTabArea method from SynthTabbedPaneUI to simplify the code by eliminating unnecessary complexity
updated ` getKrakenDepth ` and ` KrakenMarketDataServiceRaw ` to accept an additional ` Object . . args `
added methods to handle file separator and isAbsolute in FileEndpoint , GenericFile , RemoteFile , and RemoteFile classes to enhance file handling capabilities and
added a new method ` build ` to ` JavaProvenance ` and modified ` MavenProjectParser ` to include dependencies and test dependencies to enhance
added trace logging statements to HiveFunctionRegistry and modified type checks in TestInbuiltHiveUDFs to improve traceability and ensure correct
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test reliability by allowing more time for
replaced ` UnserializableColumnFamilyException ` with ` UnknownColumnFamilyException ` in ` ColumnFamilySerializer ` and added error handling for
added a condition to check if the output file is writable before executing the command to ensure that the output file is only writable when the test is
added error handling for package info retrieval in LauncherModel . java to ensure that the application info is not enabled when the application is not enabled
cloudstack - 410to420 : do n ' t throw a cloudruntimeruntimeexception if the database do n ' t exist
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet and FaultTolerantChunkOrientedTaskletTests
replaced ` startsWith ( completed ) ` with ` regionMatches ( Option . CASE _ INSENSITIVE ) ` in ` LineReaderImpl .
replaced the use of ` RecipeIntrospectionUtils . dataTableDescriptorFromDataTable ` with ` ListUtils . concatAll ` for data table
added import for Overview and dismissAllTasks method in TaplTestsTaskbar . java to ensure that all tasks are dismissed
added a new interface ` DbUpgradeSystemVmTemplate ` and modified ` DatabaseUpgradeChecker ` to implement it to enable updating system VM templates based
changed the variable ` conn ` from ` null ` to ` final ` in ` LdapClient . java ` to improve code clarity and ensure
refactor index handling in SequenceAction . java for improved readability to enhance code clarity and maintainability
add a thread - local access level for login and curKeyspace in CassandraServer . java to ensure proper handling of login and set keyspace in the
added a check to skip processing for synthetic fields in ReflectUtils to ensure proper handling of synthetic fields in the ReflectUtils class
added LoggerProvider to the Configuration and ApplicationController classes to enable logging functionality for the Ninja application
updated the type of ` builder ` and ` value ` from ` String ` to ` Integer ` and ` Object ` in ` ServerStatusCommand
added a deprecation warning to the SpringFactory class and updated error handling in SpringFactoryTest to improve clarity of warning messages and ensure proper error
added a new method ` deepStart ` to the ` Startables ` class to facilitate the creation of ` Startable ` objects
removed the ` reservePrimitiveExtensionArray ( ) ` method from ` Shape ` and implemented it in ` ShapeImpl ` to streamline the method
updated BlockLaserTable to implement ILaserTargetBlock and modified TileLaser to check for ILaserTargetBlock instead of I
refactor object name validation logic in AbstractJdbcDatabase . java to improve readability to enhance code clarity and maintainability
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
updated the expiration message period setting in MemoryLimitTest . java to ensure proper handling of expiration messages during tests
removed unnecessary null checks for handlerName in RequestHandlers . java to simplify code and improve readability by eliminating unnecessary null checks
updated the way the logger name is replaced with a trailing slash in the getServletName ( ) method to ensure that the logger name starts with a
refactor Python environment handling in ProjectBuildFileParser . java to improve clarity and maintainability to enhance code readability and maintainability by
updated audio format handling and error handling in DirectAudioDevice . java and Toolkit . java to improve robustness and error handling for invalid frames
added null check for enums in ElasticSearchStringLookupService . java to avoid potential NullPointerException when enums is null
updated error message format format in CommitLogReader . java to improve clarity of error messages for better debugging
added a policy assignment for the container scope in WebSocketSession . java to ensure proper handling of WebSocket policies in the container scope
removed conditional checks for static fields in Java2TypeScriptTranslator to simplify the code and improve readability by eliminating unnecessary logic
added a webroot parameter to the createContext method call in UserService . java to allow dynamic configuration of the webroot parameter
( chore ) camel - spring - dsl - api : migrate junit5 to junit5 ( # 2692 )
refactor JpsProxy to utilize MonitoredVmUtil ' s isAttachable method for improved error handling to enhance code clarity
rename ` printHeaderObject ` method to ` createHeader ` across multiple formatter classes to improve clarity and consistency in naming conventions
updated import statements in VircurexTradeService . java to use a wildcard import and added a method to place stop orders to stream
added buffer . reset ( ) calls to ReduceRecordProcessor . java to ensure proper resource management and prevent memory leaks
added null checks for mOriginalForeground and mOriginalBackground in FloatingWidgetBackgroundView . java to avoid potential NullPointerExceptions when mOriginalForeground
updated conditional checks in FloatingDecimal . java and added a new ToString . java class for testing to improve code readability and ensure proper string
updated property type check in PropertyDescriptor . java and added a new test class Test7189112 . java with introspection checks to ensure correct
removed the variable ` maxVersion ` and updated version retrieval logic in ` RealTimeGetComponent . java ` to simplify the code by elimin
added a check for the origin header before setting it in NettyRequestFactory to ensure that the origin header is only set when the URI is
updated visibility and animation settings in RecentsView , TaskView , and LayoutUtils classes to improve animation responsiveness to enhance user experience
updated error messages in ORCRecordReader . java for clarity and consistency to improve readability and maintainability of the code
updated sample URLs in DemoUtil . java for improved clarity to enhance maintainability and readability of the code
removed unused imports and added READ _ ONLY _ METHOD constant in PersistenceProvider . java to improve code clarity and maintainability by eliminating
hbase - 1349 use org . apache . hadoop . ipc . rpcengine instead of class to make it easy to use the
added logging for diagnostic reporting for union and fixed fields in TestSpecificCompiler . java and created a new Position . java file to improve debugging capabilities
refactor WebSocket session creation logic in WebSocketEndpoint . java and add a test for session closing in WebSocketIT . java to ensure proper handling of
increased random delay from 1 to 5 and modified method names in multiple service classes to increase random delay for better clarity and consistency in
updated XML configuration mappings in XmlConfigurationProvider . java and LocationAttributes . java to use Apache Struts for XWork versions to ensure compatibility with
added conditional stop handling in WebCamInputPanel to ensure video tracks are stopped only when stop is true to improve user experience by preventing
updated ` chartData ` to ` ArrayList < BittrexChartData > ` and added a new ` BittrexChartDataPeriodType
simplified import statements in GMLExamples . java to improve code readability and maintainability
updated the method call from ` substream ( 200 ) ` to ` skip ( 200 ) ` in ` TargetType58 . java ` to
hhh - 10956 - add getidentifiergenerator ( ) method to simplevalue and abstractentitytuplizer
rename ` FindFullTextAction ` to ` DownloadFullTextAction ` across multiple files to improve clarity and consistency in naming conventions
refactor URI registration logic in URIRegisterExecutorSubscriber and ShenyuClientRegisterDefaultServiceImpl to utilize ArrayList for host and port
renamed WebSocketMapping and WebSocketUpgradeFilter classes to improve clarity and consistency in naming conventions
added a check for non - blank OSDb hash before retrieving information from the path to avoid potential NullPointerExceptions when the hash is blank
added token transfer functionality to the RuntimeImpl class and implemented token transfer functionality in MUtil to enhance contract validation capabilities for token transfers in the deposit
( chore ) camel - ftp : do n ' t delete file if stepwise
updated the method call from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration . java ` to correct the
updated join logic in MapJoinOperator and HybridHashTableContainer to handle empty result sets more effectively to improve error handling and ensure proper join
updated HTTPSPDYAsyncEndPoint constructor to accept an additional AsyncEndPoint parameter and added local and remote address retrieval methods to enhance flexibility in
added intent . putExtra ( " id " , tweetId ) to TweetPager , TimelineArrayAdapter , and TweetFragment to
added proxy authentication handling and refactored disconnect logic in HttpURLConnection . java to improve proxy management and ensure proper response code management
updated the ` _ numChildren ` initialization in ` TraceContext ` and modified the ` NUM _ CHILDREN _ PER _ REQUEST ` to
updated JWT and response types from " JWT " to " JWT " in multiple Java files to ensure consistency in JWT handling and improve code clarity
changed the test configuration from enabled to false in ValueTypeTests . java to disable the test for better control over the behavior of NullPointerExceptions
replaced the ` ResourceFactoryServiceImpl ` class with ` KieResources ` in the ` ResourceFactoryServiceImpl ` class to streamline
replaced ` PredicateType . IN ` with ` PredicateType . NOT _ IN ` across multiple predicate classes to improve clarity and consistency in
replaced ` AccountUtils . AccountNotFoundException ` with ` Exception ` in ` FileActivity . java ` , ` Preferences . java ` , and
added null check for witnessService before validation to avoid potential NullPointerException when witnessService is null
updated the method for obtaining the expression string in JoinDesc . java to improve clarity by using the method ' s expression string representation
added a check to ensure the item ' s javadoc is not present before setting it to ensure that the item ' s Javadoc is only set when
replaced ` holderMethod ` and ` holderKlass ` with ` holderMetadata ` and added a new class ` RedefineInterfaceCall `
simplified the revalidate ( ) method calls in Tabs . java to improve code readability and maintainability
[ hotfix ] [ kafka ] remove unused metricgroup from serializationschemaadapter
updated the calculation of the y coordinate in Polygon . java to ensure correct positioning of the polygon ' s positioning
changed the type of the createCache method from a null to a Configuration < Object , Object > in CacheConfigTest . java to ensure compatibility
added a check for empty stringConstant in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java file to
refactor ShadowCookieManager class to improve cookie management functionality to enhance performance and maintainability of cookie management
added support for disallowing an external table in the Hive configuration to ensure proper authorization checks for managed tables during storage operations
updated condition in Stage . java and adjusted drawing logic in ProgressBar . java to improve code readability and ensure correct rendering behavior
added ` getPlatformByteOrder ( ) ` method to ` BasicPlatformCapability ` , ` LLVMLanguage ` , and ` PlatformCapability `
updated PING _ TIMEOUT _ PROPERTY _ NAME from " namedpipesocketprovider . timeout " to " windowsprovider . timeout " to align
updated the ` initWebViewLogin ` method to accept a baseURL parameter and modified the ` initWebViewLogin ` method to accept a valid
corrected a typo in the exception message from " parameterArray . Paramter " to " parameter " to improve clarity of error messages
updated request parameters in AuditEventsMvcEndpoint and added a new test for the " after " parameter in AuditEventsMvcEndpointTests to ensure proper
rename ` ExponentialTimer ` and ` ExponentialTimerBeanInfo ` classes to ` PreciseThroughputTimer ` and ` PreciseThroughputTimer
removed the softBody object from the dynamics world to ensure that the softBody is properly removed from the dynamics world
changed interfaces from ` SinkFunctionProvider ` to ` SourceFunctionProvider ` , ` OutputFormatProvider ` , and ` InputFormatProvider ` to
updated logging statements in ZeppelinHubClient , ZeppelinWebsocket , and ZeppelinhubClient to
added a new test class ` JingleTest ` for validating the ` noRedundantNamespace ` functionality to ensure that the Jingle content is
refactor conditional logic in BuildCraftEnergy . java and BCStatCollector . java to improve code readability and maintainability to enhance
added HTTP _ 2 _ HEADER _ PREFIX to BareResponseImpl and modified HelidonConnectionHandler to extend HttpToHttp2Connection
refactor UUID removal logic in Remove . java to use getTrusted ( ) and getDenied ( ) methods instead of getTrusted ( ) to
updated delimiter formatting and formatting in SimpleReport . java to improve readability and maintainability of the code
removed the option ' - XDignore . symbol . file ' from JavapFileManager and added a new T6863746
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed the ` TickerDemo ` class from the ` TickerDemo
refactor exception handling in Runtime . java for improved clarity and consistency to enhance code readability and maintainability
do n ' t create input3d if we do n ' t want to re - create it
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are no longer needed
refactor parsePayload method to return false instead of throwing ParserException to simplify error handling and improve code clarity
changed the method name from ` getRepositoryFactoryClassName ` to ` getRepositoryFactoryBeanClassName ` in ` JpaRepositoryConfigExtension . java ` to
refactor getExecutableCommand methods to return List < String > instead of String for better type safety to enhance code readability and maintainability by
refactor assignments in IOSGLES20 . java for improved readability to enhance maintainability and clarity of the code
deleted UploadPathActivity . java and removed UploadPathActivity . java from ComponentsModule . java to streamline the codebase by eliminating unnecessary
updated return statements in SimpleTextFieldsReader . java to conditionally return - 1 based on indexOptions to ensure correct term frequency calculation based on
fix ( constructor ) : add implicit constructor to superclass ( # 1188 )
added a database parameter to the ` populateValidateNullableIfNeeded ` and ` populateValidatePrimaryKeyIfNeeded ` methods in ` ColumnSnapshotGenerator . java `
refactor Database class to improve code readability to enhance maintainability and facilitate future updates
refactor SpringApplicationBuilder to improve code readability to enhance maintainability and facilitate future updates
removed the ` IndexOptions ` parameter from the iterator initialization in ` PointInSetQuery . java ` to simplify the iterator initialization by elimin
removed the substring from the SchematicHandler . java file to simplify the code by eliminating unnecessary substring length
added a switch statement for various collections in AbstractCollectionAssert . java and updated the return statement in CollectionAssert _ isUnmodifiable _ Test . java
removed the static modifier from the Option enum in ProcessExecutor . java to improve encapsulation and encapsulation of the Option enum
refactor dialog handling in Compose . java and ComposeActivity . java for improved readability to enhance user experience by providing clearer
removed the ` toggleKeepInSync ( ) ` method from ` FileDetailFragment ` and ` OCFileListFragment ` to streamline file
replaced DatatypeConverter with Java ' s Base64 decoding method in ImageUtil . java and added unit tests in ImageUtilTest . java to
added new files ` ControllerCounter . java ` and ` DBCallback . java ` to implement the ` ControllerCounter ` and ` DBCallback `
changed the visibility of the deleteTicket method from package - private to final in EhCacheTicketRegistry . java to ensure that the method is
added a new file ` FlywayMigrationRunner . java ` to create a new file ` FlywayMigrationRunner . java ` to
replaced ` isEmpty ( ) ` with ` size ( ) = = 0 ` in ` HashMap . java ` and added a new ` Override
updated the version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the latest version
added @ Nullable annotation to the modify method in CompressionCodec and WriterImpl classes , and added a warning log statement in ZlibCodec to improve
added null check for mainValue and modified jar creation logic in LauncherHelper , Arrrghs , and TestHelper to improve error handling and
rename test classes from " BasicErrorControllerIntegrationTest " to " BasicErrorControllerIntegrationTests " and " SampleDataGemFireApplicationTest
updated method names and methods in HotSpotMethodData and HotSpotProfilingInfo to improve clarity and consistency to enhance code read
refactor CellCopyPolicy to accept an instance of CellCopyPolicy instead of implementing Cloneable to enhance flexibility in copying properties from other classes
added a method to reset the icon load result in FloatingIconView to ensure proper resource management and prevent potential memory leaks
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure
updated orientation handling in IconRecentsView to clear all item view landscape bottom margin based on configuration settings to improve user experience by preventing
deleted the AddAdapter . java file to the functionality was no longer needed in the project
simplified the handling of empty constructor code in NonStaticLifter . java to improve code readability and maintainability
removed the ` processSortCols ` variable from the ` OpTraitsRulesProcFactory ` class to simplify the code by eliminating unnecessary variable
refactor TestLogWatcher to use a separate looper method for message registration to improve code readability and maintainability by reducing redundancy
added a print statement to the Java2TypeScriptTranslator class to enhance type safety for better debugging
updated the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to ensure compatibility with the latest
added a condition to set the SPRING _ AOP _ PROXY _ TARGET _ CLASS to true in TraceEnvironmentPostProcessor . java to
removed the singletonLock variable from TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary locking logic
renamed ` responseClassCallback ` and ` forwardClassCallback ` methods to ` responseClassCallbackWithClass ` and ` forwardClassCallbackWith
added a boolean parameter to the ` writeFile ` method and modified its usage in ` Utils ` , ` SuiteHTMLReporter ` , and `
updated MavenExecutionContextView and MavenRepositoryMirror to check for null mavenSettings before returning it to ensure correct handling of Maven repository mirrors and
added a name field and its getter methods to BuildRuleSourcePath , PathSourcePath , and PathSourcePath classes , and updated related classes
updated the service client matching logic in OAuth20CallbackAuthorizeEndpointController . java to ensure that the service client matches the correct redirect URI to improve
replaced instances of ` EMPTY _ ANNOTATION _ ARRAY ` with ` AnnotationParser . toArray ` in multiple classes to improve code clarity and
updated return statements in UserManagerCompatVL . java to use ` getBadgedIconForUser ` and ` getBadgedLabelForUser `
updated the default value of the " OS default " property from " OS default " to " Line separator ( LF or CRLF ) for output to
updated the method from ` isImplementingInterface ` to ` isDerivedClass ` in ` ConfigurationManagerUtils ` and added assertions in ` CM
sanitize the input in the model to ensure that the model correctly handles multiple characters in the input
chore : update java and python dependency ( # 438 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to throw an IOException and modified the ` buildFileNamesCanBeDifferentCross
refactor CountersReader class to improve code readability to enhance maintainability and facilitate future updates
refactor methods in AllAppsRecyclerView , UserEventDispatcher , DeepShortcutsContainer , and DeepShortcutsContainer to improve clarity and
hbase - 11303 remove deprecated config key from bytebufferallocator ( # 1187 )
refactor SQL query assertions in AbstractTestNativeJoinQueries and AbstractTestNativeWindowQueries to improve clarity and consistency to enhance readability and
added methods to retrieve all generic parameter types in Executable . java and updated method calls in Parameter . java to improve handling of parameter types based on
refactor TestFSTs class to improve code readability to enhance maintainability and facilitate future development
updated method names from ` getLabelTop ( ) ` to ` getLabelTop ( ) ` and ` getLabelTextHeight ( ) ` across multiple classes
hbase - 16400 hbase . increasing . policy . initial . size should be set to 0 for initial size ( # 118
removed loading of loaded state and loader settings in LauncherClings . java to streamline the loading process by eliminating unnecessary state management
simplified the initialization of keys and updates in ManagedSelector . java to improve code readability and maintainability
added support for excluded datasource configurations in SpringDataSourceBeanPostProcessor to enhance flexibility in managing Spring datasource configurations
replaced a null check with a call to storeUndoInfo ( ) in TableValuesView . java and removed a null check in TableValues
( chore ) camel - aws2 - kinesis : use clientconfigurationfactory instead of clientconfigurationfactory . getConfig ( )
refactor channel handling in VelbusSensorHandler to use a loop for improved channel masking to enhance code readability and maintainability
updated conditional statements in LocalCacheSelectorCode . java and modified delayable condition in BoundedLocalCache . java to disable unfavorable benchmark
added a test for illegal database names in IoTDBSessionSimpleIT and implemented a test for illegal database names in PartialPath to ensure that illegal
added a call to resetNewFiles ( ) in GarbageCollector . java to reset new files before processing
updated ` desiredWorkspaceLeftRightMarginPx ` and ` desiredWorkspaceLeftRightMarginPx ` to ` desiredWorkspaceHorizontalMarginPx ` and modified
refactor character normalization logic in CharTokenizer . java to improve code readability and maintainability to enhance code clarity and maintainability
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated the constant name for XENSERVER _ NETWORK _ LABEL from " xenservernetworklabel " to " xennetworklabel " to align
updated libgdxVersion and libgdxNightlyVersion from " 1.5 . 5 " to " 1.5 . 6
added a private field ` metricNames ` and its getter method to the ` SolrCore ` class to provide access to the ` metricNames `
replace URI usage with Path usage in MavenManifestFactory . java to improve code readability and maintainability by using Fs . fromUrl
added a static final boolean variable ` IS _ MAC ` and updated the conditional check to use it to improve code readability and maintainability by
refactor JdbcAggregationRepository to improve code structure to enhance maintainability and readability of the code
added clear and addAll methods to the slotList in Frame . java to ensure that the slotList is added to the other ' s slotList
initialize m _ predCount to - 1 in PredicatedNodeTest . java to ensure proper initialization of the predCount variable
added mergeProperties method to manage configuration properties in ConfigurationSpringInitializer to enhance configuration management by merging configuration properties
update setupLogging method to use org . slf4j . Logger instead of the default logger to ensure compatibility with the Liquibase
replaced HashMap with LinkedHashMap for aliasToWork in multiple classes to improve performance and reduce memory usage in the codebase
added logic to handle class hierarchy in TypeHandlerRegistry to ensure proper handling of class hierarchy in TypeHandlerRegistry
added debug logging statements to multiple item writer classes to improve debugging capabilities during item writing operations
refactor Locale . LanguageRange parsing to handle the last character of the wellformed string to improve code readability and maintainability by reducing
updated the handler context handling in Http2ServerResponseImpl and added context assertions in Http2Test to ensure proper context management and ensure proper context
changed the visibility of the ` _ uBook ` variable and added a ` getTableCache ` method in ` SXSSFEvaluationWorkbook `
updated schema text detail type from VERBOSE to BASIC and refactored conditional checks in BaseSchemaTextFormatter . java to improve clarity and
replaced ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to improve compatibility with
replaced HashSet with LinkedHashSet for roots and leaves in SparkWork . java to ensure consistent ordering of elements in the collection
refactor table scan cloning logic in SkewJoinOptimizer . java to ensure that the operator tree is properly cloned before proceeding to improve
added a null check for the client ID before retrieving the registered client in DynamicRegistrationClientConfigurationService . java to ensure robustness by preventing
added a new field 187981 _ e clear the AchievementList ' s field _ 187981 _ e to the StatList
initialize userName and productName to " " and " " in MutableDatabaseInfo . java and MutableJdbcDriverInfo . java to ensure default values
rename link _ share _ read _ only to link _ share _ view _ only in QuickSharingPermissionsBottomSheetDialog and SharingMenuHelper
added support for reading long arrays in ByteBuffersDataInput and ByteBuffersIndexInput to enhance data handling capabilities for long data reading
updated UnixFileAttributes and Basic classes to include sec and nsec parameters for file time conversion to improve accuracy of file time representation based on specified
added a new file TestNoEagerReclaimOfHumongousRegions . java that implements a garbage collection of humongous regions
added a conditional check for the visibility of the search bar in AllAppsContainerView to ensure the search bar is visible based on user preferences
updated the method call from ` router ( ) ` to ` routes ( ) ` in ` EnvRouterFeature . java ` to ensure the correct
added a null check for cur and next in LineChartRenderer . java to prevent potential NullPointerExceptions during rendering
added a new ` ReloadPageAction ` class to handle the reloading of the ` currentDisplayed ` page to enhance user experience by allowing
change log level from info to warn in SQLManager . java to improve log level for better debugging
update MIN _ SPRING _ VERSION from " 3.2 . 7 . RELEASE " to " 3.2 . 8 . RE
added a null check for the currentClusterConfigForService in UpgradeHelper . java to ensure that the configuration type does not have a selected version
replaced Iterator with ServiceLoader for loading SPI extensions in GeoServerExtensions . java to streamline extension loading process and improve code clarity
added a finalize method to close the table in HiveHBaseTableInputFormat to ensure proper resource management and prevent potential memory leaks
added a ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` and updated logging in ` HiveViewImpl ` to ensure that the
simplified feature settings in DocumentFactory , XMLSAXHandler , ComplexElementHandler , and ElementHandlerFactory classes to improve code readability
updated JdbStopThreadidTest to use JdbCommand ' s contToExit method instead of JdbCommand ' s wait for application
added a ` getType ` method to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to enhance type retrieval functionality for content
replaced instances of ` runnable ` with ` entry ` in ` ExpressionThreadPoolManager . java ` to improve clarity and consistency in future removal
updated the default HTTP port from " port " to " vertx . httpPort " in HttpTestBase . java to ensure compatibility with the
replaced ` addCaptureListener ` with ` addListener ` in ` Dialog . java ` to improve clarity and consistency in listener registration
increased the default batch size from 10 to 3 in NewSessionQueueOptions . java to optimize memory usage by using available processors instead of
added error handling for establishResourceManagerConnection in TaskExecutor . java to improve robustness by logging exceptions when establishing Resource Manager connection
added null check for classFile and modified return logic in LambdaRewriter . java to improve robustness by preventing potential NullPointerExceptions
updated error message formatting in ProgressBar . java to improve readability to enhance clarity of error messages for better debugging
updated onMessage method signatures to include ' owner ' parameter for better clarity to enhance code readability and maintainability by using a more descriptive
added new interfaces ` Cursor ` , ` Database ` , and ` Row ` in the ` com . codename1 . db ` package to
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
added setBeanId method implementations in EbeanServer , DefaultServer , and TDSpiEbeanServer classes to ensure proper handling of entity beans
replaced " tools / xslt / add - menu - to - site - descriptor . xsl " with a method call to getAddToSite
added a new list of request matchers to the HttpSecurity class to improve the handling of request matchers in the security context
added hashCode and equals methods to ContactResource class to enhance hash code and equality checks for ContactResource objects
refactor request and response handling in AbstractProcessor , AbstractAjpProcessor , AbstractHttp11Processor , and AbstractHttp11Processor to streamline
updated log messages in FileManager . java for improved clarity to enhance readability and maintainability of log messages
reset mock control in TestJdbcDataSource and add tearDown ( ) method in TestIndexSearcher to ensure proper cleanup of mock control and
updated method calls from ` { } ` to ` { } ` in ` SyntaxTests . java ` for consistency to improve code readability and
refactor ConnectionModel and ModeledConnection classes to improve code organization to enhance maintainability and readability of the codebase
tika - 1343 -- use fallback parser instead of empty parser
updated the condition for determining the calling class and its parent context in FMLSecurityManager . java to ensure proper handling of class contexts based on
updated variable names and variables in AccountUtils , IndexedForest , and CustomPopup classes to improve clarity and consistency in variable naming
updated method calls from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME method in CoreApi
added a new test method ` testJsxComment ` in ` JsLexerJsxTest . java ` and modified conditional checks in ` Parser
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality in the project
added a new test method ` printsErrorWhenBuckConfigIsMissing ` to ` BuildEndToEndTest ` , ` CxxEnd
added physical memory validation to TestStringBufferAndBuilderGrowth . java to ensure that the machine does not exceed the specified physical memory limits and
added a ` ConversionService ` field to the ` MapToLocalDateConverter ` class and updated its usage in ` MapToLocalDateConverter
added a success variable to HiveMetaStoreClient . java to ensure the client correctly handles successful operations
updated conditional check for " * " in ResourceReferenceInfo . java and modified bundle construction in Dstu2BundleFactoryTest . java to
updated tweet text checks in TimeLineCursorAdapter and TweetActivity to include " amp . twimg . com " in TweetActivity to
mark AreaReference class as deprecated to indicate that these classes are outdated and should no longer be used
refactor ElementType and Target classes to improve code organization to enhance maintainability and readability of the codebase
updated assertions in MemberName . java and added handling for REF _ invokeStatic and REF _ invokeSpecial references in MemberName . java to improve
changed the default value of submitKeyUpdates from " false " to " true " and added synchronization around the runChange method to ensure thread safety
simplified the conditional check for mouse event type in EditNodeTextField . java to improve code readability and maintainability
camel - 1748 : camel - core - add support for dynamic bean type lookup .
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
reformatted exception handling in AgentRunnerTest . java for clarity to improve code readability and maintainability
added descriptions for Maven project properties in multiple classes to provide clearer information about the specified Maven project properties in the pom . xml
refactor face addition logic in ObjLoader . java to improve clarity and maintainability to enhance code readability and maintainability by reducing
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate future updates
replaced instances of ` ReentrantLock ` with ` lock . lock ( ) ` and ` lock . unlock ( ) ` in multiple
added mavenPackaging parameter to getBomReference method and updated its usage in PrintMavenAsCycloneDxBom . java to enhance
updated back method call to use evt . getComponent ( ) instead of evt . getComponent ( ) to improve clarity by using the component '
refactor certificate verification logic in SASLAuthentication . java to improve readability and maintainability to enhance code clarity and maintainability
changed type parameters from @ Nullable [ ] actual to @ Nullable [ ] in ObjectArraySubject and StandardSubjectBuilder classes to improve type safety and
updated variable name from NutchConf . get ( ) to getConf ( ) in Fetcher . java , Generator . java , and Injector
replaced ` removeBoardsPane ( ) ` with ` tab . deselected ( ) ` in ` SheetAssembly . java ` and
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to provide access to the session ID associated with the Remote
added null checks before setting time interval in ImportContainerImpl . java and updated test cases in ImporterGEXF2Test . java to
updated command argument from " - logLevel INFO - serverPort " to " - serverPort " in MockServerContainer . java to ensure proper logging
updated error logging to include the exception message as a parameter to improve error reporting by providing more context for resource loading errors
replaced the use of ` RobotsHonoringPolicy ` with ` CrawlMetadata ` in the ` DispositionProcessor ` class to
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are no longer needed
camel - 14836 : camel - jbang - test should use file separator for camel - scan . xml
added a method ` alternativePath ( ) ` to the ` ExpectNewDemo ` class to provide a way to retrieve the alternative path from the
updated input initialization method in LogEntryParseTester to use getFirstFilter ( ) instead of init ( ) to ensure proper initialization of the first filter
added protectionDomain parameter to BufferAlignmentAgent . java to enhance security by allowing additional protection domains
added dispose ( ) method to WaterRipples class to ensure proper resource management and prevent memory leaks
added a new configuration variable ` HIVE _ DISABLE _ UNSAFE _ EXTERNALTABLE _ OPERATIONS ` and implemented semi - join
updated the authorization description in TokenKeyEndpointDocs . java from " base64 " to " no authorization is required for requesting public keys to improve
updated wallpaper offsets from - 30 to 0 in Launcher . java and Workspace . java to adjust wallpaper positioning for better user experience
updated SybaseASADatabase . java and SequenceSnapshotGenerator . java to handle both SybaseASADatabase and SybaseASADatabase
updated the autocommit mode description in PutSQL . java and added a test for commit handling in TestPutSQL . java to ensure consistency in
added directory creation checks for parent directories in SnapPuller and corresponding tests in TestReplicationHandler to ensure proper directory creation and error handling for
updated AppTargetId reference from " id : launcher " to " launcher : launcher " in AppEventProducer . java to ensure consistency with the
refactor frame methods to return void instead of ByteBuf for consistency to improve code readability and maintainability by reducing redundancy
refactor constructors in OAuth2LoginAuthenticationFilter and OAuth2AuthorizationRequestRedirectFilter to improve clarity and consistency to enhance code readability and
updated the description of the ` GenericUDFStringToMap ` class to clarify that key - value pairs and key - value pairs are
replaced the static final string INSTANT _ STAMPLE with ChronoUnit in PlainFormatter . java and updated the formatInstance method in PlainFormatter
[ java ] do n ' t wait for the agent to be close .
hhh - 14819 remove privatelookupin method from classloadingstrategyhelper
refactor Mockito class for improved clarity to enhance maintainability and readability of the code
changed the logging message from Closing to New in HiveProtoLoggingHook . java to clarify the purpose of the logging message
added JUnit @ Ignore annotation to SamplingNamingTest . java to temporarily disable tests that have at least one sample result
updated the exception message from " then " to " greater than zero " in GridLayout . java to clarify that rows and columns must
updated string concatenation in DecisionNode . java and added error handling in WagonCART . java to improve code readability and ensure proper
added sorting functionality for BoundSheetRecords in XLS2CSVmra . java and implemented sorting functionality in BoundSheetRecord . java to enhance functionality
refactor calculations for avgImpulse and endInstImpulse in ThrustCurveMotor . java to improve clarity and consistency in
replaced the initialization of InputSystemJme with a new instance of InputManager to improve flexibility by allowing input manager to be set
refactor hash code field offset handling in UniverseBuilder . java to improve readability and maintainability to enhance code clarity and ensure correct
removed deprecated methods from Block . java to streamline the code by eliminating unused dependencies
[ hotfix ] [ yarn ] fix npe in yarnapplicationmanagerrunner and yarntaskmanagerrun
added a new option ` EMPTY _ WORD _ OPTIONS ` to the ` LineReader ` and modified matchers logic in ` LineReaderImpl ` to
added a condition to check if writeCommitLog is non - null before pushing view replica updates to ensure that the pushViewReplicaUpdates method
refactor display contents handling in CaptureActivity and add default button ID handling in PreferencesActivity to improve code readability and maintainability by reducing
added a new test method ` testBatching ` to ` JoinedTableTest ` for batching operations in ` Hibernate ` to ensure
added a check for EntityExistsException before logging error messages in JpaPersistenceService . java to improve error logging for duplicate timestamps during item persist
updated CucumberOptions and RuntimeOptions classes to use a new plugin instead of a deprecated format option to ensure compatibility with the latest Cuc
removed the save ( ) method call from PMS . java to streamline the code by eliminating unnecessary updates
simplified the keyboard handling logic in ExtendedEditText . java to improve code readability and maintainability
updated the calculation of newCapacity in AbstractStringBuilder and added a new Capacity class with a test for capacity checks to ensure that the capacity of a StringBuilder
replaced ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to streamline
added endnote functionality to XWPFDocument and updated related classes to support handling of endnote relationships in the XWPF document
updated CasAuthenticationTransactionSuccessfulEvent to include clientInfo parameter to enhance event publishing capabilities by providing client information
added a test method ` testVersion ` in ` BridjOGRDataStoreTest . java ` to verify the functionality of the GDAL
added a new file ` Lifecycle . java ` that implements network error handling in the system to provide a UI for handling network errors in the application
updated the URL handling in DeviantartRipper . java to include a cookie and improved error logging to enhance user experience by
removed unused imports from BodyTubeShapes . java and RocketFigure . java to streamline code by eliminating unnecessary dependencies
added support for the RETINA flag in PJOGL . java and modified surface scaling logic in PJOGL . java to improve rendering
updated settings component handling in FlutterCreateAdditionalSettingsFields and added a method to set initial values in FlutterCreateParams to enhance user experience
refactor DiskDocValuesConsumer to use BlockPackedWriter instead of PackedInts to improve code readability and maintainability by reducing
replaced ` Collection < StatusRoute > ` with ` SortedSet < StatusRoute > ` in ` DefaultRouteBuilder ` and ` DefaultStatusRoute
removed unnecessary data handling in GoAwayTest . java to streamline the code by eliminating unnecessary data management
added support for ` FluentSetterBean ` in ` ReflectionUtils ` and created a new ` FluentSetterBean ` class in ` EasyRandomTest `
replaced ` ByteStreams ` with ` Callable < HttpResponse > ` in ` BlockingHttpEndpoint ` and ` HttpEndpoint ` to enhance response handling
refactor file URL construction in FileSortByExpressionTest and FileSortByIgnoreCaseExpressionTest to improve clarity and consistency to enhance code read
updated print statement to use ` getLastAppearedTaskTargetId ( ) ` instead of ` mLastAppearedTaskTarget ` to
added support for writing and writing image scaling information in RtfDocumentSettings to enhance functionality by allowing dynamic configuration of image scaling information
added a check for aggregate function name before adding paths in TSServiceImpl . java to ensure proper handling of aggregate functions based on the execution context
replaced ` LuceneTestCase ` with ` WithNestedTests ` in multiple test classes to utilize ` WithNestedTests . AbstractNested
added functionality to set the xCapEnableBox and set the xCapServerUri value based on the presence status to enhance user experience by allowing
added a new constant for the STRUTS _ HANDLE _ EXCEPTION and modified error handling logic in the Dispatcher class to improve error handling and
added stopTextEditing methods to CodenameOneImplementation , Display , and AndroidImplementation classes , and implemented it in CodenameOneImplementation
[ flowfile ] fix npe in controlrate when group name be null
updated the ` showDialog ` method to include a ` isNewComponent ` parameter and added a checkbox to always open the preset based on the component
added error logging for chat errors in ChatAnnotation . java to improve error handling and debugging capabilities during message sending
added a check for Windows OS type in HTMLDataFlavorTest . java to ensure that the test is only used for MS Windows to prevent
added SQL _ SERVER _ SNAPSHOT parameter to the SERIALIZABLE statement to enable SQL server snapshoting in the transaction isolation level
added a loop to check if the recid is offered before adding it to the new recids list to ensure that the recid is
replaced ` JreCompat . getInstance ( ) . jarFileNewInstance ( ) ` with ` java . util . zip . ZipFile ` in
added null check for command class before creating RegisteredServiceImpl to avoid potential NullPointerExceptions when command class is not set
updated disk failure policy from best _ effort to ignore in Config . java and added a new case for ignore in CassandraDaemon . java to improve
reformatted method signatures in RipperInterface . java and RipStatusHandler . java to improve code readability and maintainability
updated filter condition to check for " fromAddr " instead of " abc . equals ( " 127.0 . 0.1 " ) "
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner . java to clean up the code and improve readability
updated import statements in PinotSegmentRebalancer . java and modified computePartitionAssignment method to include ClusterDataCache to enhance data cache management for
simplified the delete method in DockerProtocol and added a auto - removal option to improve code readability and maintainability by centralizing container
refactor DefaultSeleneseCommand to improve input parsing and error handling to enhance code clarity and ensure proper handling of invalid input lines
added MultipleAttemptsRule to CreateGlossaryTests to enable multiple attempts for testing purposes
updated references from ` allOfRef . getName ( ) ` to ` oneOfRef . getName ( ) ` in ` ModelResolver . java
replaced instances of ` deleted ` with ` source ` in ` EntityDeletedEvent ` and updated related assertions in ` IdentityZoneEndpointsMockMvc
added support for the " gop " field in FormatConfiguration and updated related logic in DLNAMediaInfo and LibMediaInfoParser to
added a new Java file ` TestProfileReturnTypePrinting . java ` implementing testing methods for type printing to facilitate testing of return
refactor configuration handling in ParseConfigUtils to use a lock for locking to improve thread safety and prevent potential memory leaks
refactor operator handling in MinMaxValueBasedSelectionOrderByCombineOperator to use a try - finally block for acquireing and releaseing columns segment
removed the @ Ignore annotation from FirefoxProfileTest . java to clean up the test code and improve readability
updated return statements in HasAndroidDeviceDetails . java to include a return statement to improve code clarity and maintainability by using a more d
updated import statements in ProjectStats , SAXBugCollectionHandler , SortedBugCollection , and Filter classes to improve code clarity and maintainability by
bugfix # 118188 , disable shadow and foreground label in import panel
removed multiple redundant @ Override annotations in CacheControlImpl . java to improve code clarity and maintainability
added a check to return a date in the future when there are no week actions in the future to ensure that the scheduled action ' s date
refactor upload button and action menu handling in ShareActivity to improve code readability and maintainability by encapsulating menu item management
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
added ` loadMetaData ` method to ` MeXBTExchange ` and ` RippleExchange ` classes to enable loading of exchange metadata from
added JSON serialization support for Writable in CrawlDbReader . java to enhance JSON serialization capabilities for better data handling
removed unused imports and implemented the TesterRequest class in TestJaspicBasicAuthenticator . java to streamline the code by eliminating
added configurationPid to MDNSDiscoveryService in MDNSDiscoveryService . java to provide configuration for MDNS discovery functionality
added a null check before scrolling the message item in ChatViewerFragment to avoid potential NullPointerException when messageItem is not initialized
replaced the instantiation of ForkJoinPool with a new ForkJoinWorkerThread in TestBPIndexReorderer . java to improve thread management
removed unnecessary assertions in RoleCommandOrderTest . java to clean up the code and improve readability
added a method ` restoreLocalInfoFromTableInfo ( ) ` to ` PartInfo . java ` to ensure that the ` tableInfo ` is
simplified conditional checks in JvmUtils , LikeCondition , and AbstractOperationGenerator classes to improve code readability and maintainability
added matrix transformations and modified logo sprite rendering in BitmapFontTest . java to improve sprite rendering accuracy and ensure proper rendering of the logo
added a condition to check if the aggregate is not built in in StreamPhysicalPythonGroupWindowAggregateRule . java to ensure that the aggregate is
replaced the ` hasPendingEcho ` boolean with a ` markPendingEcho ` method across multiple classes to improve clarity and maintainability of
added a method ` getUnreachableTokenOwners ( ) ` to the ` Gossiper ` class and updated methods in ` StorageProxy
mondrian : use unwrap ( ) instead of cast to expressionnode . isvariable ( ) . isvariable ( ) . isvariable
added null check and content type handling in FormAuthenticator and SavedRequest classes to ensure proper handling of content type and avoid potential null pointer exceptions
added null checks for ` localEnv ` and ` device ` in ` XToolkit . java ` to ensure the ` display ` variable is
refactor RecommenderJob and AbstractJob classes to improve code organization to enhance maintainability and readability of the codebase
replaced ` metaLock ` with ` metaReadWriteLock ` and ` metaWriteLock ` in ` EnvironmentImpl . java ` to improve
added a new test method ` testReadIdentityProviderInOtherZone _ Using _ Zones _ Token ` in ` IdentityProviderEndpointsMockMvcTests
updated job handling in ObjectTypeNode and added null checks in PointInTimeTrigger to improve job scheduling accuracy and prevent potential NullPointerExceptions
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ issue # 1188 ] send heartbeat to all broker when rebalance change ( # 1188 )
added detachedMkDirMode property and its getter / setter methods in PropServerConfiguration , CairoConfigurationWrapper , and TableWriter classes
[ java ] add a test for remaining stable follower when there is a slow follower .
updated the LABEL _ PATTERN from " authors3 [ year ] " to " auth [ year ] " in JabRefPreferences . java to
refactor DBinaryDescription , DLibraryDescription , and DTestDescription classes to utilize CxxPlatforms and ImplicitDepsInferringDescription
removed the ` initialized ` flag and refactored the ` dispose ` method in ` GoogleCloudAPI ` and ` GoogleTTSService `
camel - 14836 : camel - core - file - consume - dynamic - done - filename should not be delete if the file name be
added a new boolean flag ` reopenReaders ` in ` SolrConfig ` and modified the conditional check in ` SolrCore ` to include it to
added a new constant ` DIALECT _ VERSION ` in ` FreeplaneVersion . java ` and modified ` MapWriter . java ` to
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance functionality
added a new method ` dup ` to ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor Condition interface to simplify code and improve readability to enhance maintainability and clarity of the Condition interface
replaced instances of ` Term ` with ` ConstantScoreQuery ` and updated the expected value in ` TestFacetsCollector . java ` to
removed unnecessary " java . lang . invoke . AbstractValidatingLambdaMetafactory " , " java . lang . invoke . InvokeDynamic " , and
added support for direct nearby upload preferences in CommonsApplicationModule to enhance user experience by allowing direct preferences for uploads
added support for handling " SYSIBM " and " SYSDUMMY1 " tables in the Database and Mode classes to enable handling of
updated logging statements in TraceGatewayEnvironmentPostProcessor . java and added conditional properties in SamplerAutoConfiguration . java to improve logging clarity and
added lastPid field and its getter method in POIXMLProperties and updated its implementation in POIXMLProperties to improve property management and ensure
[ geot - 4321 ] fix float32 _ neg _ infinity nodata ( # 4321 )
updated import statements and added error handling in CliDriver . java and SessionState . java to improve code clarity and ensure proper resource management and
replaced ` Executor ` with ` Scheduler ` in ` MockRestAdapter ` and updated its usage in ` MockRestAdapterTest ` to improve
updated the ` selectByRuleIdSet ` method to accept a ` List < List < List < String > > ` parameter and added a
refactor exit status handling to use a method for adding exit descriptions to improve code readability and maintainability by reducing redundancy
added a condition to check if the entity player is the the player before clicking the current multiblock to ensure proper handling of the current
rename ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand ` to improve clarity and consistency in naming conventions
removed unnecessary import of Collections in getRangeLength method to streamline code by eliminating unnecessary dependencies
refactor DefaultIOSInput to use UIAlertController instead of UIAlertView to improve UI responsiveness by using UIAlertController instead of
updated the method call from ` params . getBuildTarget ( ) ` to ` nativeLinkable . getBuildTarget ( ) ` to ensure compatibility with
changed the return type of the ` ofArray ` method from ` arrayValue ` to ` values ` in the ` ofArray ` method to
removed assertion for null message in AdvServiceTest . java to simplify the test by eliminating unnecessary assertions
replaced the method ` potentiallyConvertMapKey ` with ` potentiallyEscapeMapKey ` in ` MappingMongoConverter . java ` to improve key
updated the formatting of the Timber log message in NearbyMapFragment . java to improve code readability and maintain consistency in logging
camel - 1649 : camel - core - fix typo in camel - core - defaultcamelcontext
updated FuzzyLikeThisQuery to handle null fields and added a test for non - existing fields in FuzzyLikeThisQuery to improve robust
updated the ` writeApplicationsLinks ` method to include a ` tabularList ` parameter and modified the ` writeApplicationsLinks ` method to include a
log4j2 - 1343 : use dspace . identifier . factory . getinstance ( ) instead of dspace . identifier .
replaced ` bytes . length ` with ` bw . getLength ( ) ` in the ` assignBytes ` method calls to ensure the correct length
removed the abstract method ` getDisplayScript ` from the ` getDisplayScript ` method to simplify the method signature by eliminating unnecessary abstract instantiation
replaced keyToPress and keyToRelease with sequence in RemoteWebDriver . java and updated test annotations in BasicKeyboardInterfaceTest . java
pdfbox - 4892 : use the size of the list instead of a hardcoded value , a suggest by valerybokov
added synchronization for active interfaces in NetworkConfigurationWatcher and implemented null checks in NetworkManagerListenerImpl to ensure thread safety and prevent potential NullPointerExceptions
refactor HSSFWorkbook to use a separate method for retrieving embedded objects in a separate method to improve code readability and maintainability by
removed import of Shdr from ShaderNodeLoaderDelegate . java to streamline the code by eliminating unnecessary dependencies
updated roleParams initialization from " hostParams " to " roleParams " in AmbariManagementControllerImpl . java to ensure consistency in role
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of symbol fonts
replaced GlStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to ensure
updated LiveTvGuideActivity to use a local calendar for mCurrentGuideStart and modified conditions in ProgramListAdapter to improve code clarity and
replaced ` getDeclaredMethod ` with ` Whitebox . getMethod ` in ` MockGateway . java ` and added new classes ` CommonParentTest
added dlopen calls for " libfreetype . so " and " libfontmanager . so " files in JREUtils . java
refactor function parsing logic to use a new method ` inverseOrPower ` for handling dummy arguments to improve code readability and maintainability by
refactor loop limit checks and introduce floating guard handling in LoopSafepointEliminationPhase and LoopBeginNode classes to improve loop
refactor instance type handling in TypeFrameModelingVisitor to improve code clarity and maintainability to enhance readability and maintainability of the
added a new ` LocalizedString ` class and modified ` Formattable ` , ` Attr ` , and ` T6758789b
added a boolean field ` disableClasspathSearch ` and its getter / setter methods in ` ServerConfig ` , and updated condition in ` DefaultContainer
replaced instances of ` formats ` with ` Arrays . copyOf ` in ` DataLine . java ` to improve code readability and maintainability
updated the default retries value from 0 to 2 in Reference . java and updated corresponding test assertions in AnnotationPropertyValuesAdapterTest . java to ensure
added JSON handling and settings handling in TexturePacker . java to ensure proper handling of settings and improve code clarity
added uploadedImagesTextview and imagesUsedByWikiTextview to AchievementsFragment and updated progress bar text handling to improve user experience
added mock and logger methods for annotation processing and parsing in TranslatingJavacPhaseTracerTest . java to enhance test coverage for annotation processing
added ` CategoryInfo ` and ` CategoryInfo ` methods to ` MwQueryPage ` and ` MwQueryPage ` classes to provide
updated assertion messages in AuthzAuthenticationRequest . java for clarity to improve code readability and maintainability
added accessibility support for content control in TaskbarStashController to enhance user experience by allowing users to hide content control timeouts
added a check for an already thrown NoSuchElementException in GenericSignatureParser . java to ensure proper exception handling for unexpected characters in signature parsing
updated access flags in ClassVisitorDriverFromElement and added tests for generic interface and abstract enums in StubJarTest to ensure proper access control and
replaced direct assignment of ` in ` with ` Objects . requireNonNull ` in ` IntervalFilter . java ` and added null check in ` Low
added unit tests for the ` testEntrySetIteratorLastHashNext ` and ` testEntrySetIteratorLastNext ` methods in ` MapInterface
added a serialVersionUID field to the TreeMap class to ensure proper serialization of the TreeMap class
updated the createdAt calculation from ` Instant . ofEpochMilli ` to ` Instant . ofEpochSecond ` in ` ImageData . java ` to
updated the SINGULAR _ LIB _ GROBCOX array to " grobcovF2m " and modified locus command
added import for EncryptionUtils and updated deleteKeyForAccount method calls in AccountRemovalJob . java to utilize the correct EncryptionUtils for account
replaced hardcoded " keep - alive " with a utility method ` keepAliveHeaderValue ` in ` JDKAsyncHttpProvider ` and ` AsyncHttp
added a check for empty interceptor list in PostJoinMapOperation . java and created a corresponding test in PostJoinMapOperationTest . java to
added new inlining processing processors for TEXT , JAVASCRIPT , and CSS in StandardDialect . java to ensure proper processing of inlining
removed the spillEnabled parameter from multiple classes to simplify the code by eliminating unnecessary parameters
refactor EnvironmentVariableHelper to use ` processEnv ( ) ` instead of ` System . getenv ( ) ` for improved readability to
updated import statements and modified method signatures in DefaultActionMapper . java to enhance code clarity and maintain consistency in import statements
added SerializableMode import and modified the closing brace in PluginSwitch . java to enhance serialization support and improve code readability
added handling for nullable field values in AbstractBeanDefinition to ensure proper handling of nullable field values in dependency injection
refactor isolation clause parsing in ` Parser . java ` and add isolation level handling in ` Mode . java ` to improve database compatibility checks and
replaced hardcoded constants for HTTP path and transport mode in HiveConnection . java to improve maintainability and readability of the code
added a method ` isCacheable ( LeafReaderContext ctx ) ` to the ` GlobalOrdinalsWithScoreQuery ` class to ensure
added a new file TestStrangeControl . java that tests the behavior of the StrangeControl class to facilitate testing of Str
updated build path format from " % s . json " to " % s . jsfile " and " % s . jslib " to
added selection start and end properties to ShadowEditText . java to enhance the functionality of the selection functionality
refactor startGRPCServer method to use a try - with - resources statement for resource management to ensure proper resource management and prevent potential resource leak
added a path parameter to the use method in Jooby and updated related tests in Router and JoobyTest to ensure proper
added a null check for the variable ' fst ' in FreeTextSuggester . java to ensure that a lookup is not supported at this
updated output handling in T4975569 . java and T6729471 . java to improve line separator handling and error reporting to ensure
added a check for the existence of the ABI writer class in JavacInMemoryStep . java to ensure that the ABI writer
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings for BooleanMethodIsAlwaysIn
added a check for the ` isStopped ( ) ` state before scheduling the pull request in ` PullMessageService . java ` to ensure that
refactor EnergyEndpointer class to improve code structure to enhance maintainability and readability of the code
refactor the handling of displayed column keys in ComponentPresetChooserDialog . java to improve code readability and maintainability to enhance code clarity
removed unused imports from BazaarRepository , CVSRepository , and IndexDatabase classes to streamline code and improve readability
fix switch / cases indentation see GoogleSheetsEndpoint . java to improve code readability and maintainability
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and updated related classes to use it to improve
deleted the files Constants . java and DistanceUtils . java to remove unused files to streamline the codebase
refactor key splitting logic in RandomPartitioner for improved readability to enhance code clarity and maintainability by reducing redundancy
[ gr - 24936 ] fix npe in jdk . internal . foreign . abi . fallback . fallback . fail - build -
added a new test method ` testCreateInline ` in ` RoleBindingTest . java ` and modified the ` create ` method in ` Role
added logging statements for session cookie configuration in UaaSessionCookieConfig . java to enhance debugging capabilities for session configuration
updated file name calculation in HotseatFileLog . java to use Calendar . DAY _ OF _ YEAR instead of LOG _ DAYS to
[ hotfix ] [ runtime ] fix typo in ObservableBlockingSubscribe . java
added error handling for invalid javap options in JavapTask . java and created a new class T8033711 . java to
replaced ` collect ( Collectors . toList ( ) ) ` with ` toList ( ) ` in multiple classes to improve code readability and maintain
updated logging level from error to warn for better clarity and added conditional checks for shutdown state to improve error handling and ensure proper handling of shutdown
[ hotfix ] [ network ] add tiered storage option to inputgatespecutils . default _ max _ required _ buffers _ per _
replaced the constant ` SUCCESS _ CODE ` with a method ` isNotSuccessStatus ` in multiple service classes to improve code readability and maintain
added gl20 configuration to Cuboc . java and modified the LwjglApplication constructor in CubocDesktop . java to enable
refactor conditional checks in JimpleBody . java for improved readability to enhance code clarity and maintainability
replaced ` DefaultSourcePathResolver ` with ` SourcePathResolver ` and added a new ` AddToRuleKey ` method in ` Output
corrected the spelling of " assertNoJobsLeftEventually " from " assertNoJobsLeftEventually " to " assertNoLight
added a newline to the input file path check in MergeWordsListTask . java to ensure proper handling of build paths in the input file
[ # 1188 ] instructor : fix instructorfeedbackresponsecomment load page ( # 1188 )
simplified the return statement in the Container class to improve code readability and maintainability
added a new Java file ` TestEscapeThroughInvoke . java ` containing a test class ` A ` to test escaping functionality to ensure that escaping
replaced stream . skip ( 0 , length ) with IOUtils . read ( ) in FilePreviewService . java to improve performance by avoiding
updated the ` init ` method in ` ConnectionPool ` , ` JdbcInterceptor ` , and ` DataSourceProxy ` classes , and added error handling
change catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching more specific exceptions
added checks for eviction status and overhead in LruBlockCache . java and created corresponding tests in TestLruBlockCache . java to improve
removed unnecessary null check for taskCount in RecentsView . java to simplify code by eliminating unnecessary logic
increased the sleep duration from 1000ms to 5000ms in HelixBrokerStarter and HelixServerStarter to improve respons
added a new interface ` CoinmateStatic ` and ` CoinmateMetadataServiceRaw ` in ` CoinmateExchange ` and `
refactor ` DefaultModelValidator ` and ` DefaultModelValidatorTest ` to improve error handling and clarify system path reference validation to enhance
pdfbox - 4892 : fix nullpointerexception in coswriter . getkey ( )
[ beam - 3232 ] add transform . setdisplaydata ( list < itemspec < ? > > displaydata ) to ptransform .
replaced instances of ` new DefaultSubject ( Truth . THROW _ ASSERTION _ ERROR , null ) . that ( " foo
removed security property " jdk . certpath . disabledAlgorithms " from ClientJSSEServerJSSE . java to clean up the code and
updated error messages in OptionData . java for clarity and consistency to improve readability and maintainability of the code
refactor module - info . java files for mmm and ppp modules to improve code organization and maintainability
added error handling for server errors in IOSImplementation . java to improve error handling and provide clearer error messages
removed redundant whitespace in LauncherInstrumentation . java and added finally block in LogEventChecker . java to improve code readability and ensure proper
refactor exception handling in FileSinkOperator and add close methods in SortedDynPartitionOptimizer to improve error logging and ensure proper resource management during file
updated the return value of the task call in SchemaGenerator . java to print diagnostics information to improve error reporting for better debugging and debugging
replaced instances of ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by
refactor DataSourceMonitorTests for improved readability to enhance maintainability and facilitate future updates
refactor ClasspathMethodScanner to check for loaded resource paths before scanning methods to improve performance by avoiding unnecessary processing of resource paths
updated the retrieval of the test instance in TestServiceUtil . java to handle null values gracefully to improve robustness by avoiding potential NullPointerExceptions
refactor response handling in RoutingInBoundHandler to handle null cases more gracefully to improve robustness by preventing potential NullPointerExceptions during response processing
added a ` natIp ` field and updated logging messages in ` EkeyConfiguration ` , ` EkeyUdpPacketReceiver ` , and
replaced ` io . netty . buffer . asynctaskcopylocaljars ` with ` io . netty . handler . http .
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added validation for header and body buffer in HttpConnection . java and created a new test in RFC2616BaseTest . java to ensure proper
refactor Subscription handling in MultiTimeout . java to utilize AtomicReference for upstream and requestedInitial to improve code clarity and maintainability by
refactor compaction handling in LeveledManifest . java to improve clarity and efficiency to enhance code readability and maintainability by encapsulating compaction
added @ Test annotation to TestOrcTimezone1 . java to enhance test coverage for OrcTimezone1 functionality
added a new method ` findMatch ` and modified ` parseMetricAndTimerSystemProperties ` to include ` metricsSubstrings ` and ` timers
added error handling for JSON serialization in PinotSegmentRestletResource . java and modified return statements in TraceContext . java to improve robustness
added null check for columnClass before retrieving the default renderer in JTable . java and created a new Test6888156 . java file
added a check for the existence of the SHELL directory before adding it to the args list to ensure that SHELL and BUSYBOX
updated the deleteWithoutSubscriptions method from 10 to 1 in DatabaseCleaningService . java to increase the number of deleted feed subscriptions for improved
replaced LinkedList with LinkedHashSet in MockitoExtension . java and added a new ClassWithDependency in JunitJupiterTest . java to
refactor FieldMonitor class to improve code structure to enhance maintainability and readability of the code
added transactionDisable ( ) and modified fileMmapEnableIfSupported ( ) calls in BTreeMapTest . java to ensure proper handling of
updated the iterator initialization logic in SortedIntList . java and added a new test class SortedIntListTest . java to improve iterator management and
added JMXHelper . unregister ( ) method to DefaultRemoteProxy and modified exception handling in JMXHelper . java to improve error handling and ensure proper
updated the default writebuffer size from ' 4MB ' to ' 64MB ' in RocksDBConfigurableOptions . java to accommodate
removed the boolean parameter from the constructor call in Style . java to simplify the code by eliminating unnecessary parameters
updated the argument name from " message " to " addArgumentNoEncoding " in FacebookShare . java to ensure proper handling of the " message "
added JSON graph configuration to the SamzaRunner class to enable dynamic configuration of the pipeline ' s JSON graph
replaced Vector3f . ZERO with Vector3f . ZERO and added MouseInput . BUTTON _ LEFT in HelloAudio . java to improve
refactor LoopRotateBadNodeBudget class to improve code readability to enhance maintainability and facilitate future updates
updated the ` convertToMongoType ` method to accept a ` TypeInformation < ? > ` parameter and added null checks for type information in multiple classes
simplified the handling of imaginary units in GeoInputBox to improve code readability and maintainability
simplified the copyright year and added a new test class for the SendKeyToActiveElement functionality to improve code readability and ensure correct
added methods to calculate and scale images based on target dimensions in AddAndScaleMultiImage . java to enhance image scaling capabilities by allowing different transparency
removed the extendArgumentCheck ( ) and extendWrapStore ( Engine engine ) methods from DBMaker . java to streamline the code by elim
added a call to updateShiftStateNow ( ) in AnySoftKeyboard . java to ensure shift state updates are updated correctly
removed the ` DETECTED _ ACTIVITY ` constant and updated related methods in various classes to streamline the code by eliminating unnecessary
updated import statements from ` org . eclipse . websocket . extensions ` to ` org . eclipse . jetty . websocket . protocol `
removed import of Buildable from AaptPackageResources . java to streamline the code by eliminating unnecessary dependencies
added comments to the ` file . readUnsignedShort ( ) ` method and ` file . readUnsignedShort ( ) ` methods in multiple classes to improve code read
updated the exception message in WebSocketUpgradeHandler to include the status code to improve clarity of error messages for invalid upgrade protocols
pdfbox - 4892 : fix typo , a suggest by valerybokov
refactor Mockito class for improved clarity to enhance maintainability and readability of the code
refactor UUID assignment logic in Merge . java to streamline permission checks to improve code readability and maintainability
removed deprecated getConversationID methods from HttpContentResponse , HttpRequest , and HttpResponse classes to streamline code and improve maintainability by eliminating
replaced ` com . sun . speech . freetts . PhoneSet ` with ` de . dfki . lt . mary .
refactor ` stripQuotes ` method in ` BaseSemanticAnalyzer ` and ` PlanUtils ` to use ` PlanUtils . stripQuotes `
refactor rendering handling in DLNAResource and Request classes to improve clarity and functionality to enhance code readability and maintainability by redu
added repositories to the DefaultPluginManager to include the remote artifact repositories to enhance plugin management by including the project ' s remote artifact repositories
camel - 15836 : camel - cxf - client - factory - cache - test should close the applicationcontext before test .
renamed PhysicsClient class to improve clarity and consistency to enhance code readability and maintainability
added JUnit @ Ignore annotation to SessionTest . java to mark the test as ignored due to frequent failure scenarios
added a file initialization to the ZipFile class to ensure that the file is properly managed by the ZipFile class
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the ` handleAll ( ) ` method
added a new test class ` ChannelTest ` and updated the ` uid ` field in ` Channel ` class to ensure that the ` uid `
added a new ` StackTraceUtils ` class and modified ` GenericDAOImpl ` , ` ForumServiceImpl ` , and ` ForumService
removed the @ Test annotation from FormLoginIntegrationTests . java to clean up the test code and improve readability
added a check for a single argument before unparsing in FunDefBase , ParenthesesFunDef , and BasicQueryTest classes to
updated SQL query parameters and improved error logging in CheckDatabaseHelper . java to enhance clarity and maintainability of configuration selection logic
replaced ` supressWarnings ` with ` suppressWarnings ` in ` UnsafeAutomaticSubstitutionProcessor . java ` and added conditional checks for Java
updated JsonTreeReader to include additional JsonToken checks and added a test for nextJsonElement in JsonElementReaderTest to enhance error handling for unexpected JSON
added a new option ` -- " " to ` TestCommand ` and a test for extra arguments in ` ExternalTestRunnerIntegrationTest ` to
added dedup and indexSolr methods to SolrDeleteDuplicates and SolrIndexer classes to enable deletion and indexing of Solr URLs in the application
[ hotfix ] [ examples ] support blink planner in streaming mode
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure proper database management during tests
updated progress handling in Progress . java and RSSReader . java to use showPercentage instead of false and added disposal logic in RSSReader .
added a check for the existence of the parent file before proceeding with it to ensure that the parent file does not exist before proceeding with
added methods for writing and closing POIDocuments in IOUtils . java to improve resource management and resource management in the IOUtils class
reformatted print statements in JavaBuild . java for improved readability to enhance code readability and maintainability
updated ITextRenderer to use BlockBox instead of Box and added getter methods for root box and dotsPerPoint to improve code clarity and
updated the custom query handling in CustomQueryFilterFactory and added port 10636 for LDAP authentication to improve user authentication handling and enhance test coverage
added port handling functionality to the NettyHttpServer and DefaultRouter classes to enable dynamic port management for routes based on server and http ports
refactor SnmpTargetHandler and SnmpTargetHandlerTest to use ThingStatusDetail instead of ThingStatusDetail to improve code clarity and
add check for instructors with submit privileges in the list in InstructorFeedbackEditPageAction . java to ensure that only instructors
added @ Incubating annotation to AvailableSettings . java to mark the class as deprecated and mark the class as deprecated
refactor file path handling in FileResolverImpl . java and add WarFileResolverTest . java for improved test coverage to enhance code
updated the formatting of the newFlushedSize string in DocumentsWriterPerThread . java to improve code readability and maintainability
updated the method call from ` func _ 149739 _ a ( ) ` to ` getUnlocalizedName ( ) ` in ` Example
update stripWhitespaceX and stripWhitespaceY conditions from " stripWhitespaceX " to " stripWhitespaceY " in ImageProcessor . java to ensure
increased the lock delay in FeedRefreshUpdater from milliseconds to milliseconds to improve thread management by allowing more time for concurrent access
updated the ` deserializeFrom ` method to include ` exactSearch ` in ` TsFileSequenceReader . java ` and added a test for the
removed the ` DateFormat ` parameter from the ` makeResultFromDelimitedString ` method to simplify the method signature and improve readability
added a Dimension import and adjusted the preferred size of the pane in NavigationShareTab . java to ensure proper layout of the pane based on user
replaced ` OffsetAttribute ` with ` State ` in ` BeiderMorseFilter ` and added a test for custom attributes in ` Test
rename UpnpAudioSinkReg , UpnpHandler , and UpnpServerHandler classes to improve clarity and consistency in naming conventions
replaced direct call to setBlockPos with a new BlockPos instance to improve code clarity and maintainability by using a more descriptive
test : migrate jsontest to junit 5 ( # 1369 )
refactor MutableContextDataSupplier to improve code structure to enhance maintainability and readability of the code
replaced ` Exception ` with ` Throwable ` in ` CoreContainer . java ` to improve error handling by providing a more descriptive error message
added a https parameter to the KubernetesMockServer constructor in KubernetesServer . java to allow dynamic configuration of the Kubernetes service
refactor ForeignCallNode creation to use ForeignCallDescriptor instead of ForeignCallNode to improve clarity and maintainability of the code
updated HTTP request handling in DefaultServlet and DefaultServletTest to use POST instead of METHOD _ NOT _ ALLOWED to ensure proper handling of HTTP
tika - 1343 -- use locale . us instead of locale . us
replaced ` throw new SolrException ` with ` rsp . setException ` in ` ShowFileRequestHandler . java ` and added a test for 404
added try - catch handling methods to ReflectorClassWriter and implemented a test for exception handling in ReflectorTest to improve exception handling and ensure
added a ` clamp ` method to the ` Vector ` class and implemented the ` clamp ` method in ` Vector2 ` to allow clamping
added imports for ClientDetailsEntity and updated OAuth2 authentication creation in ChainedTokenGranter . java to enhance OAuth2 authentication handling and
refactor BC _ instanceof class to improve code readability to enhance maintainability and facilitate future updates
replaced the method call to setSaveFlags with a logger variable to improve code readability and maintainability by encapsulating save flags
updated UaaUrlUtilsTest to use JUnit 5 annotations and added JUnit 5 annotations to enhance test coverage and ensure compatibility with JUnit
hhh - 14836 - fix classcastexception in nativequery and nativequeryimplementor
added aatInfo management to manage font data in SunLayoutEngine to improve performance by reducing unnecessary updates to font data retrieval
replaced ` IntBigArray ` with ` IntArrayList ` and updated the initialization of ` blockPositionByHash ` to use ` IntArrayList
replaced " HTML _ UNIT _ JS " driver with " REMOTE " in multiple test classes to standardize driver naming conventions and improve code
refactor BrokerRequestUtils class for improved request handling to enhance code maintainability and readability
refactor InjectorBuilderImpl to use a single instance map for improved efficiency to enhance code efficiency and maintainability by reducing redundancy in
replaced ` getAbsolutePathToBuildFile ` with ` getBasePath ( ) ` in ` BuildTargetToRawTargetNodeTransformer . java ` to
added null check for ` val ` before parsing to avoid potential NullPointerException when ` val ` is null
removed unnecessary connection removal in OperationSetPersistentPresenceJabberImpl and added a keepAliveManager variable in ProtocolProviderServiceJabberImpl to
changed the default LOAD _ FACTOR from 0.67F to 0.67 in IntHashSet . java to ensure the default LOAD _ FACT
added methods to retrieve all data type physical variations in VectorizationContext and Vectorizer classes to enhance functionality by allowing dynamic representation of physical variations
updated package names from ` com . google . zxing ` to ` com . google . zxing . client . j2se
refactor conditional logic in OverviewState . java for improved readability to enhance code clarity and maintainability by reducing redundancy
added @ Entity annotation to BaseActivityEventEntity . java to enable entity management in the BaseActivityEventEntity class
added tracing functionality to NavBarSwipeInteractionHandler , TouchInteractionService , and modified SYSTEM _ TRACE to false in TouchInteractionService to
added a new file ` InvalidOptions . java ` that implements a test method for testing javap options to facilitate testing of options
added a check forconsistent number of displays in DisplayController . java to ensure consistent display state and improve debugging information
replaced ` getClientIdAndClientSecret ` method with ` OAuth20Utils ` in ` OAuth20UsernamePasswordAuthenticator ` and ` OAuth20Utils
change the default value of ` _ unwrapServletException ` from false to true in ` ErrorPageErrorHandler ` and ` AsyncContextTest ` to
added a conditional check to set the status of the PackageUpdatedTask to DEFAULT to ensure proper handling of the status of the PackageUpdatedTask based
camel - 15836 : added support for default unbounded queue size in seda component
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods to Kernel and App classes to ensure proper handling of batch updates in the application
added HttpClient configuration to ThirdEyeApplication to enable dynamic configuration of the HttpClient in the application
updated JpaJobPersistenceImpl to include a Sort parameter and added getter and setter methods to JobInstanceFetchRequest to enhance the flexibility of
refactor CryptoFacilitiesTradeService to utilize OpenOrders and CurrencyPair for order cancellation to improve code clarity and maintainability by central
ggb - 1343 hide the keyboard when the browser be click .
refactor memMove method to use NativeFunctionHandle for improved memory management to enhance memory management flexibility and maintainability by utilizing a
refactored method signatures in BindLdapAuthenticationHandler . java and ResolverTestConfig . java to improve code readability and maintainability
added a blockToolTip property and corresponding getter and setter methods in ToolTipManagerW . java , and updated ModeToggleMenu . java to enable
updated DefaultDateTypeAdapter to use getDateTimeInstance ( ) instead of DateFormat . DEFAULT and added dateStyle and timeStyle parameters to enhance date handling
updated player set string formatting in ListCommand . java to improve readability and maintainability of the code
added a check for empty list in List . java to ensure proper handling of empty list elements
added exception handling for InvocationTargetException in ParametricCallable . java to ensure proper exception handling for CommandException instances
updated the ` getLikeExpression ` method to include a boolean parameter for regular expressions based on the condition to enhance flexibility in expression handling based
added start ( ) and stop ( ) methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to provide a way to start
added locale handling in runChild method in LuceneTestCase . java to ensure consistent locale management across tests
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
refactor context handler initialization into a separate method ` initContextHandler ` to improve code readability and maintainability by encapsulating context initialization logic
added a new test method ` testRouteBuilderRef ` to the ` OSGiBlueprintTestSupport ` class to verify the handling of the
updated assertions in TestExecuteStreamCommand to include a check for the presence of " execution . error " attribute to ensure correct handling of flow file
refactor return type substituting methods in Types . java for improved readability and maintainability to enhance code clarity and maintainability by
added throttle type enum and modified throttle handling in TestExecutor . java to enhance flexibility in handling throttle types based on configuration
updated the assignment of the argb variable in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to
refactor Annotation and AnnotatedElement classes to improve code organization to enhance maintainability and readability of the code
added a new interface ` Model ` and removed ` extends java . lang . Object ` from ` Sheet ` and ` Workbook ` classes to
camel - 1649 : camel - http - filter should use filter pattern instead of regex in filter pattern
added a clearEntityManager property and its getter / setter methods to JpaItemWriter and JpaItemWriterBuilder classes to enable dynamic management of
added null checks for shortcut info in InstallShortcutReceiver and LauncherModel classes to ensure robust error handling and prevent potential NullPointerExceptions
updated TwoDimensionalCollectionValuedMap instantiation to include an additional parameter to enhance flexibility in managing multiple collectionValuedMap instances
updated exchange host and exchange name from " btc - e . nz " to " wex . nz " and " btc - e " to
added null checks for columnReaders and reader in OrcEncodedDataConsumer . java and modified null check in EncodedTreeReaderFactory . java to
added null check for segments files in SegmentInfos . java and created a test for closing the IndexReader in TestIndexReader . java to ensure
updated date handling in HSearchSortHelperImpl and modified FhirResourceDaoR4SearchWithElasticSearchIT to implement ITestData
updated the return statement to handle negative and negative percent values in DeviceHandler . java to ensure proper handling of negative and negative percent values in the
replaced ` limit < 1 ` with ` limit < = 0 ` in ` RangeInputStream . java ` and ` RangeReader . java `
camel - 14836 : camel - routes - add debug log for additional route builder from pattern
updated the ` getNextChunk ` method signature and variable assignments in ` HlsChunkSource . java ` , ` HlsMediaPlaylist . java ` ,
replaced ` TestCase ` with ` LuceneTestCase ` in multiple test classes to align with the new Lucene framework standards and
added a new StatefulMapper2 class and updated output handling in OutputHandler and StatefulOperatorTest to improve state management and ensure proper handling
remove redundant null check for fill and stroke in Area . java and Line . java to simplify code by eliminating unnecessary null checks
removed the ` dbExists ( ) ` method from the ` Blockchain ` class and updated imports in ` BlockchainTest ` to streamline
trim whitespace from the group string in SQLPlusSupport . java to ensure that the string is trimmed before processing
set socket . setasync ( true ) to false in Http11AprProtocol . java to ensure proper handling of asynchronous socket operations
removed conditional logic for setting the divider location in DockSplitPaneW . java to simplify the code by eliminating unnecessary logic
added new metrics for controller health check in ControllerMeter and modified checkHealthLegacy method in PinotControllerHealthCheck to enhance health check capabilities for better
added visibility to the sharedAvatars view in LocalFileListAdapter . java to ensure that the sharedAvatars view is visible regardless of
updated the source paths in MebisResources . java from " mow . scss " to " mow - toolbar . scss
replaced instances of ` > = ` with ` < = ` for length checks in multiple classes to improve code readability and maintainability by
added logging functionality based on logging level in LogInterceptor . java to ensure proper execution of command execution based on logging level
replaced CountDownLatch with assertWaitUntil for span completion in EventBusTracingTestBase . java to improve code clarity and ensure span
refactor QueryParser to use Locale . getDefault ( ) instead of a static constructor to improve code readability and maintainability by centralizing locale
replaced ` Arrays . asList ` with ` Collections . singletonList ` in ` EntryCustomizationDialog . java ` and ` FieldSetComponent .
refactor ` RuleBaseImpl ` and ` RuleBaseImpl ` classes to improve clarity and consistency to enhance code readability and maintainability
added a new class ` OCSPUnauthorized ` and modified ` OCSPResponse . java ` to include a new file ` OCSPUnauthorized .
added a static volatile int serverState and modified the sleep duration in SSL . java to ensure proper handling of server failures and prevent potential issues during
http : / / issues . apache . org / jira / browse / amq - 4892 - add open connection count to source
changed access modifiers of ` execute ` methods in ` ExecutionStrategy ` , ` ExecutorServiceExecutionStrategy ` , and ` GraphQLInterfaceType ` classes to
refactor the ` createDefaultJavaPackageFinder ` method to return a ` Set < String > ` instead of a ` ImmutableSet < String > `
replaced ` OutputWriter ` with ` PrintWriter ` in ` ScriptExecutable . java ` to improve code readability and maintainability by using a
[ hotfix ] [ test ] fix test failure in filesourcetextlinesitcase
added support for DataTable in JRubyStepDefinition to ensure proper handling of DataTable instances in JRuby execution
updated visibility of author and refactored image retrieval logic in ApacheHttpClientMediaWikiApi . java to improve user interface visibility and enhance code read
renamed ReadSentimentDataset class to improve clarity and consistency to enhance code readability and maintainability
updated error message formatting in FormulaParser . java to improve clarity of error messages for better debugging
added getter and setter methods for ` _ bindAddress ` in ` WebSocketClient . java ` and refactored the ` WebSocketFuture ` class
[ java ] remove aeron directory from the clustered media driver so that it do n ' t exist .
refactor width and height handling in WidgetGroup . java to improve clarity and functionality to enhance code readability and maintainability by reducing
changed the return type of ` sessionFixationAttribute ` from ` Boolean . valueOf ( ) ` to ` Boolean . valueOf ( ) ` to
refactor LALogicLinesFragment to use edgeOption instead of parameters for starting channelLA to improve code clarity and maintainability by
added backoff logic to the ChromeBinary class and invoked it in ChromeDriver to improve backoff handling for Chrome binary operations
added URI template attribute handling in TraceExchangeFilterFunction and updated ClientResponseWrapper constructors to include URI template attribute to enhance flexibility in handling URI templates
updated the assignment of the ` compacted ` variable in ` PrecompactedRow . java ` to use Integer . MIN _ VALUE instead of
updated return statements in ICC _ Profile , ColorConvertOp , and added a new InvalidRenderIntentTest class to improve code clarity and
[ # 1188 ] add support for ` ` not noture ' ' option ( # 1188 )
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
added SuppressFBWarnings annotation to KafkaExactlyOnceSink and removed Serializable interface from KafkaRecord class to improve code clarity and eliminate unnecessary serialization
added support for PGConnection in PooledConnectionImpl and implemented a test for PGConnection in BaseDataSourceTest to enhance connection handling capabilities and ensure
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
change log level from warn to info in TokenAuthenticationHandler . java and change log level from warn to trace in TokenAuthenticationHandler . java to
removed the @ Deprecated annotation from Hazelcast . java to indicate that the method is outdated and should no longer be used
updated command reporting logic in AmbariManagementControllerImpl , AbstractServerAction , FinalizeKerberosServerAction , and FinalizeKerberosServerAction
refactor NamedListCodec to improve iterator handling and tag writing to enhance code clarity and maintainability by encapsulating iterator handling
added a null check for the state before attempting to assign LOST partitions to avoid potential NullPointerExceptions when state is not initialized
added schema inclusion rule to options in ApiExample . java to enhance the flexibility of schema inclusion in the API
updated the expected value of the mean and var in StreamExpressionTest from 3.0 to 7.0 to correct the expected value for the
added coordinate sequence validation in SDO . java and corresponding test cases in SDOCreateTest . java and SDOCreateTest . java to
added methods to retrieve base and dimension names from the ConstantPool class to enhance the functionality of the ConstantPool class for better resource management
added setDebugEvaluationOutputForNextEval method to HSSFFormulaEvaluator , SheetUtil , and XSSFFormulaEvaluator classes to enable
refactor : disable junit 5 test for java 8
updated the condition in the ExoPlayerProfile initialization in LegacyMediaManager . java and modified the condition in PlaybackController . java to ensure
added a return statement to the DynamicStyleBar class to ensure proper handling of the return statement
added logging statements in Utils . java for setting and resetting properties in Utils . java to improve debugging capabilities and ensure proper state management during database dump
refactor ReactiveAuthorizationManager class for improved readability to enhance maintainability and facilitate future updates
added a check for boolean types in MethodEmitter . java to ensure proper handling of boolean types in object types
rename LLVMObjectNuller to LLVMAddressNuller and update related nullification methods to improve clarity and consistency in naming conventions
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
add a new test class CaffeineCacheDefaultConfigurationTestSuite for testing CaffeineCache configuration to ensure that the cache configuration
added a method ` calculateBoundingBox ( ) ` to calculate bounding box for vertices in ` Mesh . java ` to provide a way to calculate bounding
added a target - hash - function enum and updated its usage in TargetsCommand . java to allow users to specify the target hash function for better
refactor DefaultConfigurationProperties class for improved clarity to enhance maintainability and readability of the code
added high light color and alpha settings in ListViewMultiChartActivity and modified highlight paint logic in BarChart to enhance the visual appearance of
remove duplicate pgSgPathPlanMap entry from pgSgPathPlanMap to streamline code by eliminating redundancy
corrected the spelling of " 2 " to " - 1 " in InfinispanRemoteProducerIT . java to improve code clarity and
added functionality to remove artifact files from localRepositoryDir and modified lock file handling in MavenArtifactFetcher and MavenDependencyResolver to improve artifact management and
updated the fragment shader string format in SpriteBatch . java to include a conditional declaration for GL _ ES to ensure compatibility with GL _ ES
updated RSGroupInfo and related classes to use Set instead of SortedSet for servers and tables to enhance type safety and improve code clarity
added a try - catch block to load the WebXmlConfiguration class and updated logging level in TagLibConfiguration . java to improve error handling and
updated version handling in CustomAnalyzer and added a test for version aware filtering in TestCustomAnalyzer to improve version validation and ensure compatibility with Lucene
added a test method to verify the handling of package archive information in ShadowPackageManager to ensure correct behavior of package archive information retrieval in ShadowPackage
updated method invocation methods to use MethodUtil for package access checks to enhance security by ensuring proper access control during method invocation
updated import statements and added progress update types in GradleBuildService and Main classes to utilize a new method for updating progress updates to
removed synchronized block from AndroidWebDriver . java to ensure thread safety during synchronization
updated initialization fail timeout logic in HikariConfig . java and modified exception handling in HikariPool . java to ensure proper handling of
updated the method signature and added error handling in Net . java to improve code clarity and ensure proper handling of HTTP responses
changed the type of ` isNative ` from ` boolean ` to ` transient ` in ` JMethodIdTable . java ` to ensure that the
updated error message formatting in CEntryPointCallStubMethod . java to improve readability to enhance clarity of error messages for better debugging
rename ` RuleEnableHandler ` to ` RuleEnablementActionHandler ` in ` CoreModuleHandlerFactory ` and ` RuleEnableHandler ` to
renamed variables and variables in TagSupport . java and TagSupport . java to improve clarity and consistency in naming conventions
updated logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of debug messages and enhance logging clarity
updated KafkaDynamicTableFactoryTest to replace ` options1 ` and ` sinkOptions ` with ` sourceOptions ` and ` sinkOptions ` to
added a null check for the repository before determining the owner of a registrant to avoid potential NullPointerExceptions when accessing the repository
added support for " . otf " and " . OTF " names in Font and SunFontManager classes to ensure proper handling of font
refactor type matching logic in AnnotationMatcher . java for improved clarity and consistency to enhance code readability and maintainability by reducing
updated error message from " OFF " to " SEVERE " in Grep . java to improve clarity of error reporting for better debugging
added a conditional check before logging debug messages in FaultTolerantChunkProcessor . java to avoid unnecessary logging when debug is enabled
replaced instances of ` includes ` and ` excludes ` with ` excludes ` in ` SurefirePlugin . java ` to improve clarity
added a condition to check if the home intent is moved to the default screen on the home intent to enhance user experience by allowing users to move
increased the maximum bitrate value from 110 to 30 in PMS . java to increase the maximum bitrate for better performance
removed the ` getOptions ( ) ` method from the ` CommandLineParser ` class to simplify the code and improve readability by eliminating unnecessary
trim whitespace from the return statement in MutableDatabaseProperty . java to ensure consistent formatting of the description
updated the filename path in XOMParserTest . java from " / JDK8022548 . out " to " / JDK8022548
removed the ' pid ' parameter from the error log message in ProcessBesuNodeRunner . java to simplify log output by eliminating
added getLoadedMusic and getLoadedSound methods to MusicLoader and SoundLoader classes to provide access to loaded music , sound ,
removed unnecessary imports and simplified type retrieval in OnBeanCondition . java to improve code readability and maintainability
added ScreenRecord annotation to RequestPinItemTest . java to enable screen recording functionality in the test
added null check for lrPauseButton in CPUFeature and MemoryFeature to prevent potential NullPointerExceptions when lrPauseButton is not selected
refactor ` createAccountsCheckboxPreferences ` and ` createAddAccountPreference ` methods to use ` mAccountsPrefCategory ` instead of ` accounts
corrected the spelling of " AVAILABLE " to " AVAILABLE " in the sendPacket method call to ensure correct handling of the presence
replaced the initialization of StringBuilder with a dynamic initial capacity based on utflen to ensure proper capacity handling for UTF - length input
added property values for " spring . metrics . export . statsd . enabled " in WebEndpointsAutoConfigurationIntegrationTests . java to disable the
refactor InterruptedException class to improve code readability to enhance maintainability and facilitate future updates
refactor ServiceTicket class to improve code structure to enhance maintainability and readability of the code
refactor ConnectionCheckOperation to use a boolean variable for SSL connection handling to improve code readability and maintainability by reducing redundancy
added a conditional check for the type of the value in ArgumentArrayMessageMapper to ensure proper conversion logic for map types in the conversion service
refactor conditional checks in SolrServiceCommunityCollectionItemFilterPlugin . java for improved readability to enhance code clarity and maintainability
replaced ` sExemptOfPasscodeActivites . add ` with ` FLAG _ ACTIVITY _ REORDER _ TO _ FR
removed deprecated annotations from PatternParameterConfigurator . java to streamline code by eliminating unnecessary dependencies
changed the return type of the beginDraggingWidget method from void to boolean and added a null check for the image getDrawable to ensure
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable the test due to LUCENE - 4488
added null check for root in DynamicStyle . java to avoid potential NullPointerExceptions when root is null
added confusion matrix handling in MaxentTagger and TestClassifier classes to enable writing and writing confusion data to the TestClassifier and TestSentence classes
refactor JMeterThread to use ` lastSampleOk ` instead of ` lastSampleInError ` for better clarity to improve code read
added unit tests for connected and disconnected Bluetooth devices in ShadowBluetoothHeadsetTest . java to ensure correct behavior of BluetoothHeadset
corrected the spelling of " # autowire " to " # autowired " in PropertyBindingSupportTest . java to ensure
added a new constant " clone " and modified the method handling logic in ResultObjectProxy . java to improve code readability and maintainability by
added null checks for Counters objects in IntegrationTestBigLinkedList . java to ensure proper logging and error handling when counters are null
added a new class ` REFERRING _ OBJECTS ` and modified the reply handling in ` DebuggerConnection ` and ` JDWP
updated the service filtering logic in SamlIdPServicesManagerRegisteredServiceLocator to check if the registered service matches to ensure that the service matches
added a null check for the activity before executing the Runnable in PhotoFragment . java to prevent potential NullPointerException when the activity is not initialized
updated logger variable names from ` LOGGER ` to ` logger ` for consistency to improve code readability and maintainability
added a ` _ stringType ` field and its getter / setter methods to ` DatabaseAdaptor ` , ` SessionTableSchema ` , and `
updated assertions in UIMAUpdateRequestProcessorTest . java to use " suggested _ category : * " instead of " language : english "
refactor thread name handling in CliDriver , SessionState , and HiveSessionImpl classes to improve clarity and maintainability of thread name management
[ hotfix ] [ doc ] fix typo in taskletadapter javadoc
[ trisotech - 2200 ] [ dmn ] add test for negative dmn
updated TextureMap . java and SplashProgress . java to use glFlush ( ) instead of glFlush ( ) to ensure that texture map creation
added a tooltip text to the showCGCP checkbox in RocketPanel . java to enhance user experience by providing a clearer tooltip for the
replaced ` getTypes ( ) . add ( e ) ` with ` addType ( e ) ` in ` EnumFactory ` and ` InterfaceFactory
updated ` FlutterRetargetAction ` , ` HotReloadFlutterApp ` , and ` RestartFlutterApp ` classes to include
[ geos - 4768 ] fix spelling of spreadsheet label ( # 4769 )
change the value of the BRIGHTNESS _ FACTOR from intValue ( ) to doubleValue ( ) in BindingConstants . java to ensure the
refactor SSCMHistoryParser to improve formatting and readability to enhance code readability and maintainability
added a new parameter ` isAdmin ` to the ` createUser ` method and modified the ` listUsers ` method to accept a boolean parameter to enable
added null checks for indexedWriteMethod and writeMethod in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor classes to ensure proper handling of void
[ synatracev2 ] remove unnecessary collect ( ) method from dynatraceexporterv2
refactor method signatures in Context . java and Response . java to improve code readability and maintainability to enhance code clarity and maintainability
added a method to deserialize NBTTagCompound in the MixinItemStack class to ensure proper handling of capabilities from NBTTagCompound
updated the execution ID assertion in LifecycleUtilsTest from " default " to " binding . getExecutionId ( ) " to ensure consistency in the execution
added validation for CreateSmartContract and TriggerSmartContract in Wallet . java and updated GetContractServlet . java to ensure correct contract creation and validation
added package - info . java files for ` Image . java ` and ` com . ibm . dtfj . runtime ` and ` com
refactor the ` add ` method in ` DocumentsWriterDeleteQueue ` to improve clarity and maintainability to enhance code readability and
added a check for duplicate JavaFileObject in JavadocTool and modified the runTest method in T7091528 to ensure that duplicate files are
updated the STRIP _ IPV6 property from " true " to " false " and modified the substring logic in HostPort . java to
added support for adding a new user for OAuth token password grant in the LoginServerTokenEndpointFilter constructor to enhance security by allowing users to add
added a check for CPP language type in LanguageFactoryTest and modified language comparison logic in LanguageFactory to ensure compatibility with CPP languages and
replaced instances of ` MoreFutures ` with a new ` MoreExecutors ` class and added a new ` MoreExecutors ` class to
added cache control and expiration headers to the LoginService and FormAuthenticator classes to ensure proper handling of cache control and expiration headers in the response
updated error message formatting in VoiceManager . java to include the error message to improve clarity of error messages for better debugging
updated HSSFTests and TestEmptyDocument classes to use TestSuite instances instead of AllHSSFUtilTests to improve clarity and
refactor FetchHTTP2Test , FetchHTTPTestBase , and FetchHTTP2Test classes to improve code organization and maintainability
added null check for the output before retrieving the class directory to prevent potential NullPointerException when accessing the output file
added imports for ExternalResourceControlPriority and updated access controller settings in Java2DRenderer . java to ensure proper access control behavior during rendering operations
added error handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure compatibility with JDKs on Windows machines
changed the visibility of ` mbean ` and ` main ` methods in ` GetInternalThreads . java ` to be ` final static ` and added
updated conditional checks in TabsAndIndentsVisitor to check if comments are not empty before checking for the last whitespace to ensure that comments are
updated assertions in SimDistribStateManager and TestTriggerIntegration to use 100 % instead of 5.0 in TestTriggerIntegration to improve test
replace ` equals ` with ` equalsIgnoreCase ` in multiple classes to ensure case - insensitive comparison for changeSet IDs
removed the ` getString ` method from the ` ShadowBundle ` class to simplify the code by eliminating unnecessary null checks
updated date and time formatting logic in TweetActivity . java to ensure accurate formatting based on user - defined locale settings
added a check to return an empty list if the connections list is empty to ensure that the process session handles empty connections gracefully
refactor focus request logic in DetailFragment to use a separate method for better readability to improve code clarity and maintainability by centralizing
added a check for empty paths before setting the extra class path in the main class path to ensure that the class path does not contain a space
made the solve method synchronized and modified matrix initialization logic in CoordMatrix . java to ensure thread safety and prevent potential memory leaks
added import statement for Message in GenericMessage . java to enable the use of the Message class in the integration framework
refactor SQL query to use a join method for better readability and maintainability to improve code clarity and maintainability by centralizing join
added a check for the file filter before setting the selected item in AquaFileChooserUI to ensure that the filter is only applied when
fix thread safety issue in p2ptransportmanager
updated ArrayPtg to return a boolean value and added a new test for toFormulaString in TestArrayPtg to ensure correct handling of
test : migrate pgtokenizertest to junit 5
refactor variable handling in Java2TypeScriptTranslator and add unit tests for nested anonymous classes to improve code clarity and ensure correct handling of
updated the handling of PostgreSQL auto - increment columns in AddAutoIncrementChange . java to ensure compatibility with PostgreSQL ' s auto - increment sequences and
refactor byte reading logic in DataInput . java for improved readability and consistency to enhance code clarity and maintainability by reducing
removed unnecessary assertions for " Dimension VerticalPhysicalPixelSpacing " and " HorizontalPhysicalPixelSpacing " in ImageParserTest . java to streamline test
replaced direct assignment of the parent variable with a direct call to getParent ( ) to improve code readability and maintainability
updated import statements in multiple files for consistency and clarity to improve code readability and maintainability
replace ` ENGINE _ finish ` calls with ` ENGINE _ free ` calls in ` NativeCryptoTest . java ` to ensure proper resource management and
added functionality to handle iteration events in InterleaveControl and updated related classes to improve iteration event handling and ensure proper event management during iteration operations
release resources in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent memory leaks
added a call to deleteLogs ( ) in TestRecovery . java to ensure logs are properly deleted during recovery
added a check for " twitter : / / " URLs before loading the web view in BrowserActivity . java to ensure that the web view is
[ hotfix ] [ test ] await host status in deploymentgrouptest
updated logResult from false to true in VisibilityController . java to accurately reflect the visibility of labels allowed
increased the maximum retry retries from 0 to 25 in RestTemplateRetryTests . java to increase the retry limit for better resource management
removed the System . out . println statement from TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java to
added support for the " fraction " resource type in ` PackageResourceLoader ` , ` ResType ` , and ` Converter ` classes , and
removed conditional check for file writing in BasicFrame . java to simplify the code by eliminating unnecessary checks
added assertions for tagGroupId and tagArtifactId in UpgradePluginVersion . java to ensure that tagGroupId and tagArtifactId are not null to
hbase - 11313 throw quotaexceedexception instead of donotretryioexception
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
refactor TestFuzzPreLoop class to improve code readability to enhance maintainability and facilitate future development
added a check to set f0 to 0.0 in HTSVocoder . java to ensure f0 is non - negative to prevent
added a null check for pkColumn before adding foreign key columns in SchemaRetriever and TableRetriever to avoid potential NullPointerExceptions when pkColumn is null
replaced the ` clearEncoders ( ) ` method with a ` SynchronizedStack < B2CConverter > ` in multiple classes to
added shared preferences support for empty page scenarios in Workspace . java to enhance user experience by allowing users to disable empty page scenarios
added a warning log for deprecated cucumber - needle in NeedleFactory . java to indicate that cucumber - needle is outdated and
updated theme handling in ShadowThemeTest , ShadowArscAssetManager , ShadowArscAssetManager , and ShadowArscAssetManager to improve
updated error messages in VerifyFast . java to use ` Arrays . toString ( ) ` instead of ` Arrays . toString ( ) ` to improve
# 1188 - remove system _ versioning _ alter _ history from ebean ( # 1188 )
updated property handling in CodeGenerator , Global , ScriptObject , and ScriptObject classes to improve type safety and encapsulation to enhance code clarity
updated the shuffle method in TestFilterDirectoryReader to use a random value to improve randomness by using a random value for improved readability
added conditional logic to retrieve displayName based on user ' s shareWith parameter to ensure displayName is only assigned when the user ' s shareWith is
updated the path formatting in CookieRetrievingCookieGenerator to use StringUtils . defaultIfBlank ( path ) instead of a hardcoded value to ensure
removed unnecessary braces in multiple Java files to improve code readability and maintainability
changed the variable declaration from ` getBackupCount ( ) ` to ` getTotalBackupCount ( ) ` in ` AbstractCacheService . java `
updated the condition in ValidationResult to check if pageNumber is not equal to ve . pageNumber to ensure that pageNumber comparison only occurs when pageNumber is not equal
added a null check for the focused widget in UIDropdown . java to prevent potential NullPointerExceptions during highlighting
refactor playSoundAtLocationExcept and playSoundPitchRange methods in SoundUtil . java to improve code readability and maintainability
refactor ` getPlatformFlavorsOrDefault ` method to use ` getAppleCxxPlatformFlavorDomain ( ) ` instead of `
added a new SQL query in ClickHouseStatementTest . java to verify the functionality of the ` show ololo ` command to ensure the
changed the method name from onConnect to onAccept in ServerSessionListener and AbstractHTTP2ServerConnectionFactory to clarify the purpose of the
refactor EnglishPTBTreebankCorrector class to improve code organization to enhance maintainability and readability of the code
added a new file TestGetLoggerNPE . java to test logging functionality for Java AWT access to ensure proper logging behavior and error handling
added a data field and updated the implementation of the ` getData ( ) ` method in ` PathSharingContext ` and ` ScriptedDecide
refactor method handling in EspressoRootNode . java and StaticObject . java to improve readability and maintainability to enhance code clarity
added a regex pattern for the " NEXT VALUE " pattern and modified the NextValExpression constructor to accept an image parameter to enhance flexibility in
[ gr - 11818 ] add more info at substratevm / resources . md to the error message
added a threshold check for write buffer size in BoundedLocalCache . java and created a test for clearing pending writes in BoundedLocalCache
added support for Leverage _ Level parameter in QuoineExchange and created a new order direction property in QuoineNewMarginOrderRequest
added boundInitialization method in PropertyDescriptor . java and created a new Test7192955 . java file for property binding functionality to ensure proper initialization
renamed ` failsafeWidth ` and ` failsafeHeight ` to ` SetDisplayModeCallback ` in ` LwjglGraphics `
added null check for buttonsAwatingRelease in Tabs . java to prevent potential NullPointerExceptions when buttons are not initialized
replaced direct calls to ` snappedLeftInset ( ) ` with ` getWrapWidth ( ) ` in ` LineCell . java
corrected the spelling of " L ' ' argomento del parser " in XSLTErrorResources _ it . java to ensure consistency in
changed the type of ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper
refactor string formatting methods to use String . format for consistency to improve code readability and maintainability
simplified the namespace retrieval logic in StaxXmlPullParser . java to improve code readability and maintainability
added a new boolean field ` nestedJoins ` in multiple test classes to control the behavior of nested joins based on configuration settings
updated the condition for checking the account type in QueryManagerImpl . java to ensure that only root accounts can be specified by admin only
updated the ` CompletionTaskProcesor ` constructor to accept a ` cursor ` parameter and modified the constructor to accept a ` cursor ` parameter
added Hive configuration variables for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to
replaced ` Assert . assertThat ` with ` MatcherAssert . assertThat ` in ` KuduIOIT . java ` and `
updated MetadataRenderer and TextRenderer classes to use @ Nullable annotations instead of @ Nullable to improve code clarity and ensure proper handling of null values
updated offsetMemSize calculation from SIZE to BYTES in SymbolMapReaderImpl . java and added a test for symbol file mapping in LineTcpConnection
removed unnecessary print statements for termFilter and otherTermFilter in TermFilterTest . java to clean up the code and improve readability
removed the ` Reflection ` class and its imports from ` Jooby . internal . guice ` and ` TypeConverters . java `
refactor ThreadlessExecutor to improve thread - safe execution logic to enhance code readability and maintainability by reducing redundancy
updated error handling in DateTimeFormatter . java and added unit tests in TestDateTimeParsing . java to improve error handling and ensure correct parsing of null values
rename CHUNK _ LENGTH to CHUNK _ LENGTH _ KB and update related methods to use CHUNK _ LENGTH _ KB instead of CHUNK _ LENGTH to improve
added a new class T7034495 with interfaces A , B , and C in mmm Types . java and ppp Types .
refactor loop structure in LotsOfEvents . java for improved readability to enhance code clarity and maintainability
refactor conditional checks in TransclusionDecideRule . java for improved readability to enhance code clarity and maintainability
removed the ` printMicronautVersion ` method and updated imports in ` Micronaut . java ` to streamline the version
added unit tests for the Area3DPtg formula in the workbook to ensure correctness of formula representation in the workbook
updated MindIconFactory to include a description if the name starts with a slash to ensure proper formatting of the MindIcon description based on
updated the ` onHomeIntent ` method to accept an ` internalStateHandled ` parameter to ensure that the ` onHomeIntent ` method is
replaced direct calls to ` getPreferDependencyTree ( ) . orElse ( false ) ` with a boolean variable ` preferDependencyTree ` to
added methods to show file details in multiple activities to enhance user experience by allowing users to display file details for better user experience
updated method names from ` $ apply ` to ` apply ` in multiple Java files to improve clarity and consistency in naming conventions
added a randomization mechanism for the minimum symbol size in MinimalEncoder and updated related assertions in HighLevelEncodeTestCase to improve randomness
updated formatting of header descriptions and parameters in SourceBuilder . java to improve readability and maintainability of the code
added a call to notifyDataSetChanged ( ) in FolderSyncActivity to ensure the adapter is notified when the data is changed
removed the static method ` setDefaultWALSyncMode ` from ` ShadowSQLiteConnection ` to streamline the code by eliminating unnecessary
updated type checks in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to enhance type safety and ensure correct removal of elements in
remove unused methods from DefaultS3CrtAsyncClient . java to improve code clarity and maintainability
updated the error message in the doDudPasswordTest method from " ef677 " to " ef677 " and " 28ce
updated assertion message in HazelcastTestSupport . java to include the content of the collection to improve clarity of error messages for better debugging and
fix graphbuilderphase . appendgoto ( truesuccessor , falsesuccessor ) to avoid npe
ggb - 1343 use a maximum size of 300 , 300 , 200 , and 3d image for the pen image .
refactor SQLXML class to improve code structure to enhance maintainability and readability of the code
added a limit parameter to the getOrderBook method and modified the order book adaptation logic in YoBitMarketDataService to support additional
replaced ` GotWrongOOMEException ` with ` HeapOOMEException ` in multiple classes to standardize exception handling for better performance and
added StreamReadConstraints import and set maxStringLength to Integer . MAX _ VALUE in StandardDataFlow . java to enable maximum string length for
updated the method of obtaining the engine string from a configuration object to an empty string to improve code readability and prevent potential NullPointerExceptions
refactor TimerWheel and TimerWheelTest classes to use WheelIterator instead of FullIterator to improve code readability and maintainability
added error handling for generating customized bug messages in BugInstance . java to improve robustness by providing a clearer error message when generating customized bug
increased the timeout duration from 3 seconds to 10 seconds in LocalChunkProviderTest . java to improve test reliability by allowing more time
changed the visibility of the uncomplete check lists menu from true to false to ensure the menu is shown only when the uncomplete check lists are
refactor DefaultResultSetHandler to replace ` ResultMap ` with ` String ` constructorColumnPrefix ` and introduce a new ` Contract ` class
added null checks for defaultHome and unregistration logic in OverviewComponentObserver . java to prevent potential NullPointerExceptions when defaultHome is null
removed the import of VertxGen from PumpImpl . java to streamline code by eliminating unnecessary dependencies
replaced direct casting of ` ( FileDisplayActivity ) ` with ` mContainerActivity . getFileOperationsHelper ( ) ` in multiple fragments to
remove unnecessary trimming of whitespace in ConfigAttributeEditor and add a new test for StripsTrailingAndLeadingSpaces in ConfigAttributeEditorTests to
refactor ClassUsingAnotherAuxiliary and SelfClassWithAux classes to improve code organization and maintainability
svm : make singlemodulereference public and add getunnamedmodule ( ) method
added checks for " pg _ " prefix before setting the relation kind to " TABLE " based on the presence of " pg _ " to ensure
removed deprecated TIER _ ENTERPRISE _ PLUS _ VALUE annotations in Agent . java and AgentProto . java to streamline the code and
updated RQST _ FIELD _ DESC and modified case handling in HiveHiveMetastore . java and HiveMetaStore . java to
added a new module - info . java file containing module exports for the com . speedment . runtime . core module to facilitate
added flush state handling and fill state management in SslConnection . java to ensure proper handling of encrypted output during flushing and fill operations
refactor Log4j2LogDelegateFactory to use LogManager ' s logger retrieval and add a new NoExceptionInInitializerErrorTest class
updated conditional checks in ExecutionEnvironment . java and TestHelper . java to include client VM checks to enhance test reliability and ensure compatibility with server
refactor ExecutableFindOperation , MongoOperations , and ReactiveMongoOperations classes to improve code organization and maintainability
changed the default value of " org . postgresql . ssl . LibPQFactory " from null to " org . postgresql . ssl .
updated the @ Test annotation in TestInterProcessSemaphoreEdges . java to temporarily disable the test due to failing scenarios
added sorting functionality for resource names in EditableResources . java to ensure consistent ordering of resource names based on their order
added a new file ` OSvTerminal . java ` and updated ` TerminalFactory . java ` to support the operating system ' s OSV
updated the condition to check for both " . gs " and " . grs " files in ClassType . java to ensure proper handling of
replaced HashMap with TreeMap for combinedVectors in DrillTestWrapper . java to improve performance and readability of the code
added a condition to check if the index is within the range of names and values to ensure that only valid names and values are processed
refactor WebSocketPolicy class to improve code readability to enhance maintainability and facilitate future updates
changed access modifiers of ` readPhoneStatePermissionGranted ` and ` accessWifiStatePermissionGranted ` methods from static to instance variables across multiple
added a new method ` resolveMessage ` to ` StandardMessageResolver ` and updated null checks in ` resolveMessage ` to enhance message resolution flex
replaced instances of ` Class . forName ( " org . objectweb . asm . util . TraceMethodVisitor " ) ` with ` as
added LoggingAuditService and UaaAuditService interfaces for user authentication and audit logging to facilitate user authentication and audit logging for better
added null checks for Temperature objects and improved temperature handling in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to enhance
updated the condition to check for abstract methods in BeanDefinitionInjectProcessor . java to ensure proper handling of abstract methods in the proxy type
camel - 1748 : camel - http - add support for proxy host and port in camel - http
update MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " to reflect the latest version of the application
added a call to jdk . internal . util . StaticProperty . jdkSerialFilter ( ) in the System . java file to enable
camel - 1745 : add more information about pool size to reduce jvm object allocation .
replaced ` forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in multiple animations to simplify the code by elimin
updated the ` ensureRealtimeClusterIsSetUp ` method to use ` RawRealtimeTableConfig ` instead of ` TableConfig ` to enhance
added methods ` isError ( ) ` and ` error ( ) ` to ` ValidationReport ` and updated error handling in ` DisallowValidator `
replaced System . arraycopy with closestProfile . inlineQsb and added new constants for inline QSB in InvariantDeviceProfile . java to
updated the ` createClassPath ` method signatures to throw ` Exception ` and modified URL decoding logic to improve error handling and ensure proper URL encoding for
updated regex patterns for method parameters in TransformSteps . java to ensure proper handling of characters in method parameters
added null checks for retinaProp and modified fillRect logic in PGraphicsJava2D to improve robustness by preventing potential NullPointerExceptions
[ java ] add timeout to faulttolerancetest to avoid race condition .
refactor package - info . java files for mmm and ppp packages to improve code organization and maintainability
added a method to set the Docker image URL in Environments . java to enable dynamic configuration of the Docker image in the application
[ hotfix ] [ test ] fix npe in knowledgeagenttest
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
refactor copyFile method to use a new copy copyFile method to improve code readability and maintainability by centralizing file copying logic
refactor methods in AsyncOperationDocProvider , OperationDocProvider , and SyncOperationDocProvider to use ` getDescription ( ) ` instead of `
[ fix ] [ pytorch ] fix npe in mxndmanager . checkdevices ( )
added a check for ` Xml . Document ` before visiting indent statistics in ` Autodetect . java ` to ensure proper handling of
refactor NotesHelperTest and ReminderHelperTest classes to use JUnit4 runner instead of InstrumentationTestCase to improve compatibility with Android
replaced instances of ` new ProofOfWorkRule ( ) ` , ` new GasLimitRule ( ) ` , ` DifficultyRule (
changed the visibility of the setupData method from public to private in BaseAssumptionsRunnerTest . java to restrict access to the setupData
replaced ` autocommit ` with ` runInTransaction ` in ` ChangeSet ` and updated related methods in ` XMLChangeLogHandler `
added null checks for endStream and listener in TripleServerStream . java to ensure proper resource management and prevent potential NullPointerExceptions
[ hotfix ] [ doc ] fix documentation for failover strategy
added a new test method ` testIssue154 ` in ` SelectTest . java ` to validate SQL parsing and deparsing to ensure that SQL
refactor Common class to improve code structure to enhance maintainability and readability of the code
refactor event handling in Launchable . java to use try - with - resources for better resource management to ensure proper resource management and prevent potential
[ hotfix ] [ doc ] fix typo in streamexecdeduplicate javadoc
[ hotfix ] [ kafka ] log warning when send kafka message to topic
added ` setPersistentPropertyAccessorFactory ` and ` isImmutable ` methods to ` SimpleElasticsearchPersistentEntity ` and ` SimpleElasticsearchPersistentProperty `
added a method to return boolean values for setCoord in GeoCoordSys1D and GeoSegment3D classes to ensure correct behavior of set
added logging statements to AskGestureEventsListener for scrolling on X and Y axis to improve debugging capabilities and ensure proper scrolling behavior based on event
refactor comparison logic in NGramEstimator . java for improved readability to enhance clarity and maintainability of the comparison logic
changed import statements from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` in multiple Java files to
added methods to retrieve folder icons from label state and label information in StatsLogCompatManager . java to enhance functionality by providing access to folder icons
updated the method call from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to
added a new file TestSkeletonPredicates . java containing a new test class TestSkeletonPredicates . java to test the functionality of the ` IRNode
refactor equals and hashCode methods in SelectionHighlighter . java to improve clarity and maintainability to enhance code readability and maintainability by
added a new class ` StringResultConverter ` and modified ` AsmUtil ` , ` AsmUtil ` , and ` AsmRuntime
camel - 19751 : camel - aws2 - aws2 - aws2 - aws2 - aws2 : disable camel - aws2
changed the condition from ` WaitForSingleObject ` to ` WaitForSingleObject ` in ` JansiWinSysTerminal . java ` to ensure
refactor buffer handling in BufferUtils . java for improved readability and consistency to enhance code clarity and maintainability by reducing red
updated the data directory path from " data / " to " File . separator " in TestSolrDiscoveryProperties . java to ensure correct file path
updated OS version checks in AutoUpdaterServerProperties . java to improve compatibility with Windows and macOS environments to ensure compatibility with different operating systems and
replaced ` File ` with ` String ` for lock names in ` Lock ` class to improve clarity and consistency in naming conventions
updated variable name from ` appIcon ` to ` allApps ` for clarity to improve code readability and maintainability by using a more
updated method calls in ClientDatagramEndPoint to use ` ClientDatagramEndPoint . this ` instead of ` this ` to improve clarity and
updated GET _ STEP _ EXECUTIONS string to include " order by STEP _ EXECUTION _ ID " to ensure accurate tracking of step execution
changed return value from Buttons . LEFT to - 1 and modified button handling logic in LwjglInput . java to improve button handling
added tests for approve , reject , and reason in TaskRestRepositoriesIT . java to ensure that approve and reject tasks are properly validated
replaced transient logger initialization with static final logger in multipleServiceResponseBuilder classes to improve code maintainability and readability by centralizing logger initialization
updated method visibility from public to package - private in SsoAccessTokenProvider . java and added unit tests in SsoAccessTokenProviderTest . java
[ geos - 5767 ] fix test setup for macos - github
added new method overrides for alarm suppression requests in GreetResourceMockedTest and OciMetricsCdiExtensionTest to enhance functionality and
reformatted code in JFrame . java for consistency to enhance readability and maintainability of the code
added a null check for the MediaDatabase before executing the ANALYZE SAMPLE _ SIZE 0 command to avoid potential NullPointerException when accessing the MediaDatabase
updated metricsContext initialization in SuggestComponent to use solrMetricsContext instead of metricsContext to improve clarity and maintainability of the metrics context
refactor output assignment logic in OCFileListFragment . java for improved readability to enhance code clarity and maintainability by reducing
changed the default value of HashKnownHosts from " yes " to " no " in ScpServerTestSupport . java and modified the load
refactor SourceVersion class to improve code structure to enhance maintainability and readability of the code
added a new test class ` ThreadFactoryTest ` for testing the ` ThreadFactory ` functionality to ensure that the ` MyThreadFactory ` class
refactor lock period retrieval logic in DelegateResourceActuator and ProposalUtil to use a dedicated method to improve code readability and maintainability by
added a new instance of TicketModel in EditTicketPage . java to initialize the ticket object for better user experience
changed the default value of " ENABLE _ PREDICTION _ DISMISS " from false to true to allow the option to dimiss
replaced direct calls to ` super ( actual ) ` with ` super ( actual , Class < S > selfType ) ` in multiple assertion
added MENU _ QUOTE and MENU _ QUOTE constants to TweetActivity . java and modified menu item handling in TweetActivity
removed unnecessary lock statements in JMeterThread . java to improve code readability and maintainability
rename ` codecPassthroughFormat ` to ` decryptOnlyCodecFormat ` in ` MediaCodecAudioRenderer . java ` to improve clarity
added a conditional check for the result before offering failures in ServerHTTP2StreamEndPoint . java to ensure failure handling only occurs when the result
updated the option Q string from " Stiller Modus " to " Silent - Modus " in XSLTErrorResources _ de . java
added ThreadSafe annotation to CheckpointsCleaner class to ensure thread safety during cleanup
replaced ` Observer ` with ` Subscriber ` in ` MockRestAdapter ` and ` RestAdapterTest ` classes to simplify subscriber handling and improve
reformatted formatting in ComponentPresetManager . java for improved readability to enhance code readability and maintainability
added a new configuration option ` HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES ` and refactored column qualifier assertions
removed a boolean variable ` bFirstTime ` and refactored the item listener in ` MaryGUIClient ` to streamline the
added validation for the session ' s last accessed time in Session . java and created a corresponding test in SessionHandlerTest . java to ensure that
deleted the ExceptionHelper . java file to the utility class is no longer needed in the project
updated keyPairGenerator initialization from 256 to 255 in JceX25519Domain . java to improve randomness by using a larger value of 255
added codec setting for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene41Postings
[ hotfix ] [ runtime ] add logging for empty header list
added support for RSA / ECB / OAEPPadding algorithms in OperatorHelper . java to ensure correct handling of RSA / ECB /
replaced ` DARWIN _ AARCH64 ` with ` MACOS _ AARCH64 ` across multiple files to ensure compatibility with the
refactor exception handling in DebugSourcesResolver to improve clarity and error logging to enhance code readability and maintainability by providing clearer error
updated return statements in AbstractTest . java to improve clarity and consistency to enhance code readability and maintainability
updated FileUploadUtils and ControllerConf to set JERSEY _ ADMIN _ IS _ PRIMARY to true and modified file handling in ControllerConf
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` across multiple classes to ensure consistent memory management across different buffer types
changed the USE _ PIPELINE _ DOWNLOADER constant from false to true in FastSyncChainDownloader . java to enable streaming functionality for
updated date formatting logic in SimpleDateFormat and added a new Bug7130335 class for testing date parsing to improve date parsing accuracy and ensure correct
refactor icon count handling in AllAppsView . java to improve code readability and maintainability to enhance code clarity and maintainability by
refactor hypervisor handling logic in VirtualNetworkApplianceManagerImpl . java to improve readability and maintainability to enhance code clarity and maintain
refactor StringBuffer class for improved readability to enhance maintainability and readability of the code
added a new variable ` ruleUID ` in ` RuleResource . java ` to set the rule ' s UID to ensure the rule ' s
added a null check before unsubscribeing the listener in RegistryProtocol . java to prevent potential NullPointerException when listener is not initialized
added a new property ` PRETTY _ PRINT ` and modified JSON conversion logic in ` JoltTransformJSON . java ` to enable pretty
change access _ table access modifier from private to public in InstrumentBranchesPhase . java to allow access to the ACCESS _ TABLE array to be accessible
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests to include " No resources were found at location " to improve clarity of error messages
refactor the ` doRun ` method in ` TcpTransport ` and ` XmppTransport ` classes to use ` IOExceptionSupport . create (
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
added a new parameter ` skipFailure ` and ` isUpgradeSuspended ` to the ` AmbariManagementControllerImpl ` class to enhance
updated copyright year in FindsByCssSelector . java to improve clarity and maintainability of the codebase
removed the initialization of wfields from the writer to streamline the code by eliminating unnecessary variable assignments
added a constructor to OAuthProperties for encryption and signing keys to enable customization of encryption and signing keys for improved security
hbase - 2269 add column family count to htable ( # 2269 )
replaced the usage of AllowedResourceAliasChecker with a lambda expression in the addAliasCheck method to improve code readability and maintainability by
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and package - info files to improve code organization and maintainability
[ java ] add a reset method to the cluster interface and implement it in the clusteredserviceagent interface .
updated the incrementing of the currentChunkID in ChunkedWriter . java to ensure that the currentChunkID is correctly assigned to the sequence
added a new abstract class ` AbstractJobExecutor ` that implements ` JobExecutor ` to facilitate execution management in the batch execution process
refactor replay logic to use replayFuture instead of replay to improve clarity and maintainability of the replay process
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in
added a method to retrieve service IDs in AbstractConsulClient to ensure proper handling of service IDs during consul discovery
replaced ` Float . floatToIntBits ( ) ` with ` SecureRandom ( ) . nextInt ( ) ` in the ` catPut `
added validation for runtime compilation framestates during bytecode parsing in RuntimeCompilationFeature . java and implemented a help option in RuntimeCompiledMethodSupport .
removed redundant assignments for currentStart and baselineStart in TimeOnTimeComparisonHandler . java to streamline code by eliminating unnecessary complexity
added checks for abstract methods in CallsRealMethods and created tests in CreatingMocksWithConstructorTest to ensure correct answering behavior based on method
refactor package access checks in NashornScriptEngine and Context classes to improve code readability and maintainability to enhance security by ensuring proper
updated ContextPathPluginTest to extend AbstractPluginDataInit and added error configuration setup in ContextPathPluginTest to enhance plugin data initialization and ensure
replaced ` dtm ` with ` model ` in ` ContributionListPanel . java ` and updated font handling in ` JTable . java
added support for the ` has - touch - interaction - service ` request in ` QuickstepTestInformationHandler ` and ` TestInformationHandler `
refactored error handling in ConnectAction . java to improve code readability and maintainability to enhance code clarity and maintainability while ensuring
rename ` showOptions ` to ` BuildTarget ` in multiple files to improve clarity and consistency in naming conventions
added new classes ` ArrayUtils ` , ` Asserts ` , ` NativeRegExp ` , and ` Objects ` to the ` javaemul `
added handling for home and end operations in the Less . java file to enhance functionality for handling home and end lines in the terminal
removed unnecessary synchronization in PlotHandler . java to streamline code by eliminating unnecessary synchronization
refactor intent creation in Utilities . java to use a chooser to improve code readability and maintainability by centralizing intent creation
changed the access modifier of the constructor from public to package - private to allow access to the constructor from other packages
added basic constraints to cert generation in TestUtils . java to enhance certificate generation flexibility by allowing basic constraints
added a new test method ` testFixedNestedTransform ` to the ` TextVisualRegressionTest ` class to ensure that the ` fixed -
replaced ` field . multiValued ( ) ` with ` sf . max _ value ` in ` TrieDateField . java ` and `
deleted the TaskbarStateHandler class and updated its usage in BaseQuickstepLauncher . java to streamline the codebase by eliminating unnecessary
added a new file ` ArrayLength . java ` that tests the ` getFields ( ) ` method to validate the behavior of ` getField ( )
added logging functionality to the tearDown method and implemented a wait for the Hazelcast process to improve error handling and ensure proper cleanup of the
replaced ` @ Singleton ` with ` @ PostConstruct ` and added a ` init ` method in ` ApplicationSettingsService . java ` to
change assertion from ` < 0 ` to ` < 1 ` in ` Safepoint . java ` to ensure proper handling of negative values
updated threadNameField to use " Ljava / lang / String ; " instead of " charArray " to ensure compatibility with Java ' s
updated DEFAULT _ RAND _ SEED from 0 to 42 in Lucene90HnswGraphBuilder and HnswGraphBuilder to
added strokeObject field and font object handling in PGraphicsJava2D . java to enable customization of stroke objects based on the specified font
[ calcite - 4392 ] fix expand dynamic star expression in sqlvalidatorimpl ( # 4392 )
added a method ` findInterestingChildren ( ) ` to ` Comment2000 ` and implemented the ` findInterestingChildren ( ) ` method
added import for Messages and set the status code in HTTPServer to indicate a warning icon to improve user experience by providing clearer feedback on the
updated modifiers handling in PSurfaceAWT , MouseEvent , and PSurfaceJOGL classes to use getModifiersEx ( ) instead of getModifiers (
update node cycles from CYCLES _ 6 to CYCLES _ 3 in AMD64CountLeadingZerosNode and AMD64Count
camel - 14836 : camel - as2 - add null check for content - transfer - encoding in entityparser
refactor Locale class to improve code readability to enhance maintainability and facilitate future development
added a ` clearLog ` method to ` ErrorConsoleController ` and updated its usage in ` ErrorConsoleViewModel ` to improve logging management
removed unnecessary whitespace in mRecentsAnimationController initialization to improve code readability and maintain consistency
replaced ConsolePlayer with LocaleHolder and updated method signatures to use Set instead of HashMap to improve code clarity and maintainability by using a
added connection pooling functionality to multiple test classes to improve resource management and ensure proper resource management
[ java ] add support for opera blink to the session .
updated exception handling in ManageJournalsPanel . java to include a message dialog for download failures to improve user experience by providing clearer feedback
added new product identifiers for LIFX Mini White to Warm , Switch , and Color in LifxProduct . java to enhance the product
added async ID handling to the OverseerCollectionProcessor and CollectionsAPIAsyncDistributedZkTest to enhance asynchronous replica creation process and ensure
refactor ` PGSQL _ PK _ BYTES _ LIMIT ` to ` PGSQL _ PK _ BYTES _ LIMIT ` and update its usage in
updated LogPanel initialization to use repositoryModel ( ) . HEAD instead of null for repository ID to ensure correct repository ID is used when the repository
updated the calculation of parentTail from UNIT _ Y to UNIT _ XYZ in SkeletonInterBoneWire . java to ensure the parentTail
added a browserDestroy method to the AndroidImplementation class and refactored deinitialize and destroy methods to improve code clarity and maintainability by
added a wait for active collection " readApiTestViolations " in AutoScalingHandlerTest . java to ensure that readApiTestViolations is
refactor screen terminal handling in ScreenTerminal . java and Tmux . java to improve code readability and maintainability to enhance code cl
updated SoftResetAction . java to include controller state checks to ensure proper handling of controller states in the soft reset process
disable on - disc stream cache to speed up texture pack reloading .
added conditional logic to retrieve the parent folder in Request . java and RequestV2 . java to ensure the correct parent folder is retrieved when the
cloudstack - 3641 : fix npe in networkofferingvo . ispersistent ( )
added close ( ) method to FileOutputStream in AndroidImplementation . java to ensure proper resource management and prevent potential memory leaks
added error handling for RestClientException in StandardGitHubRepository . java to improve robustness by handling 403 responses gracefully
log4j2 - 1344 added getoriginal ( ) method to MessageFactory2Adapter and updated logger test to check if the actual
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , SizeTest , and SizeTest classes to
updated regex format for version numbers in Version . java to ensure compatibility with updated version numbers
added initial and dismiss delay settings for ToolTipManager in ExtractionModelFrame . java to improve user experience by allowing dynamic responsiveness of
refactor ProjectCommand to use TargetGraphAndTargets instead of options for improved clarity to enhance code readability and maintainability by redu
added timezone setting and assertion in TimeTest . java to ensure correct formatting of time values in tests
refactor MediaSessionConnector class to improve code readability to enhance maintainability and facilitate future updates
replace JSSEFactory with endpoint . getHandler ( ) . getSslImplementation ( ) in Http11NioProcessor . java to improve compatibility with
updated accuracy display string formatting in GpsLoggingService . java to improve clarity and consistency in accuracy display
added a new constant for Futures enabled in BinanceExchange and refactored methods in BinanceAccountService and BinanceTradeService to
rename ` accounts ` and ` instructorCoursesTable ` to ` instructorAccountsTable ` and ` instructorCoursesTable ` to
added connector . setAcceptQueueSize ( maxWorkerThreads ) to the ThriftHttpCLIService to ensure proper handling of queue size for improved
replaced direct retrieval of the class name with a constant for the DISABLE _ WATCHER property to improve code readability and maintainability
added a check to return true if the composite data scheme is " ssl " to ensure proper handling of SSL scheme in JmsFactory
replaced ` parseError ( e ) ` with ` validationError ( e ) ` in ` DrillSqlWorker . java ` and updated
updated the calculation of duration in GCInspector . java to ensure that the duration is zero for a really fast collection
refactor comment handling in NodeWithJavadoc and add a new test for Javadoc handling in NodeWithJavadocTest to improve code clarity and ensure
replaced the ` reserveMemory ` method with a ` readReservedMemory ` method in ` ReserveMemory . java ` and updated the `
added calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure that regions are
changed the visibility of procId from private to protected and updated return statements in HBaseAdmin . java to allow subclasses to access the procId field
updated reflection to use ` Object . class ` instead of ` null ` in ` CxfEndpoint . java ` and added a constructor in `
refactor YamlChangeLogSerializer to use a map for database change logs instead of a string concatenation to improve code readability and maintainability by
updated print statements in SchemaPrinter . java for better readability to improve code clarity and maintainability
updated DebugRoadRegen and SchematicHandler to utilize C . NOT _ IN _ PLOT instead of ChunkLoc to
updated the initialization of ` nowPlaying ` and ` footer ` rows to use ` getActivity ( ) ` instead of ` getContext ( ) `
added ` @ GeneratedValue ( strategy = GenerationType . AUTO ` , generator = " native " ) ` to multiple Java classes to ensure compatibility
removed the ` country ` parameter from the ` getSystemTimeZoneID ` method to simplify the method signature and improve readability
updated the write method to include position and remaining parameters in BZip2Codec . java and adjusted ByteBuffer initialization in TestBZip2Codec .
added logging functionality to the ` GeoGebraLogger ` class and refactored logging initialization in multiple classes to enhance logging capabilities and improve code
added a new constant VALUE _ TYPE _ EMPTY and updated the type initialization logic in Value . java to improve code clarity and maintainability by
replaced ` = = ` with ` = = ` for group equality checks in ` GroupManager . java ` to improve code readability and
renamed Liquibase and LiquibaseDropAll classes to improve clarity and consistency in naming conventions
refactor SimplexNoise class to improve code structure to enhance maintainability and readability of the code
replaced instances of ` TargetGraphFactory . newInstance ( ) ` with a new method ` newInstanceExact ` in ` TargetGraphFactory ` to
removed redundant ` getMinRowCompactedSize ( ) ` and ` getMeanRowSize ( ) ` methods from multiple Java files to simplify code
added ArtifactVersion support to MetadataCollection and modified parentMod and childMods to be transient in ModMetadata to ensure proper serialization of artifact versions
added logic to handle previous and current state of the object in NativeArray . java to ensure proper handling of previous and current state in the object
replace storageManager . saveNewFile ( files [ i ] ) with mStorageManager . getFileByPath ( remoteParentPath ) to improve file
added a new file ` UTF8ReaderBug . java ` to validate XML parsing functionality to ensure proper handling of supplementary characters in XML input
add unit test for the proxybuilder to verify the behavior of the sayHello method
updated the ` BinanceIntegration ` and ` BinanceUsIntegration ` classes to include ` depth20 ` instead of ` buildSubscriptionStreams2
added resetAllocation ( ) method to SimpleParallelizer and resetAllocation ( ) method in Wrapper to ensure proper allocation management during parallel operations
removed unused import of AssertTree in AmbariManagementControllerTest . java to streamline code by eliminating unnecessary dependencies
added synchronization to configProps and properties in Agent . java and created a new AgentCMETest . java file for testing to ensure thread safety
refactor ModelUtils class to improve code structure to enhance maintainability and readability of the code
refactor AbstractDoubleArrayAssert to improve code structure to enhance maintainability and readability of the code
updated width and height calculations for labels in Legend . java to ensure that only valid labels are displayed in the Legend class
added delay and abort methods to CodeFirstSpringmvcIntf , TestResponse , and SpringMvcIT classes to facilitate
replaced ` get ` method with ` getValues ` in ` MoreLikeThis . java ` and modified the condition in ` MoreLikeThis .
replaced the use of ` ruleResolver . requireRule ( ) ` with a direct instantiation of ` BuildTargetSourcePath ` to simplify the
added a ENABLED flag to disable versioning in CommandDownloadLatest . java to enhance user experience by allowing users to disable versioning functionality
updated ` Collection ` to ` List ` and ` numberOfFiles ` in ` MediaFolder ` , ` MediaProvider ` , and ` FolderSync
updated command line argument format in AidlStep . java and GenAidlTest . java to improve clarity and consistency in command
added a new test class ` Issue79Test ` and modified ` ObligationAnalysis ` and ` Issue79 ` classes to implement a test
added a todo comment to the FakeHttpLayer class to improve code clarity and maintainability
[ hotfix ] [ runtime ] remove redundant error handling in embeddedleaderservice
refactor flowable stream handling in CompositeDiscoveryClient . java to use Single instead of Maybe to improve code readability and maintainability by redu
replaced ` applySystemConfiguration ( ) ` with ` applyQualifiers ( ) ` in ` ParallelUniverse . java ` and ` Bootstrap
[ hotfix ] [ doc ] add description for jobmanageroptions
replaced ` updateNoWidgetsView ` with ` updateRecyclerViewVisibility ` in ` WidgetsFullSheet . java ` to improve clarity
added error handling for WstxInputFactory and WstxOutputFactory in XmlUtil and MultiVersionXmlParserTest to improve robustness
refactor test methods in AuditAliasCommandIntegrationTest to use a setup method to improve code readability and maintainability by encapsulating setup logic
removed logging statements related to header view height in WidgetsFullSheet and WidgetsRecommendationTableLayout to streamline logging by eliminating
( chore ) camel - cxf : disable the test from the parent class
added error handling for periodical refresh in CachedStore . java to improve robustness by logging exceptions when periodical refresh fails
refactor ChainingAuditPrincipalIdProvider and CasCoreAuditConfiguration to use a new method for adding providers to improve code readability and maintain
refactor background fill checks in HSSFCellStyle and HSSFPalette classes to improve code readability and maintainability to enhance code
refactor ZonedDateTimeFormatterBenchmark to improve code readability to enhance maintainability and facilitate future updates
added a new method ` shouldBufferUpdate ` in ` DistributedUpdateProcessor ` and created a new test class ` DistributedUpdateProcessorTest ` to
added a condition to check if the rocket ' s stage is null before proceeding with the motor to ensure that the motor and stage is
updated command strings and modified item handling in WorldEdit . java to improve clarity and functionality to enhance readability and maintainability of the code
refactor ExtendedMasterSecretExtension class to improve code organization to enhance maintainability and readability of the code
changed the declaration of the ` processor ` variable from ` final ` to ` final ` to ensure immutability of the ` processor ` variable
added error handling for writing failures in WritableKeyProcessor to ensure proper handling of end - of - stream errors during writing
added a new column " CUBE " to the MySQLDatabase class to support CUBE database functionality
added a try - catch block around the rm operation in TestReplicationHandler . java to handle potential IOException to ensure proper resource management and prevent potential
renamed ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and updated related methods to
refactor method calls in DefaultOkHttpClientFactoryTest for improved clarity and functionality to enhance code readability and maintainability by reducing
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the os variable in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions during execution
added new constructors and methods in EuclidianPen , RecoSegment , Inertia , and Inertia classes , and modified draw
added a boolean parameter ` fromCli ` to the ` jailerMain ` method and modified the ` jailerMain ` method to
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future updates
added shared preferences for pull unread status in TalonPullNotificationService to enhance user experience by allowing users to reset pull unread state
added a check for the kind of the parent object before processing the piStamp input to ensure proper handling of null values in IsNullNode . java
updated world step time and memory calculations in Box2DTest . java and OrthographicCamera . java , and modified OrthographicCamera
refactor layout management for comments RecyclerView in ViewPostDetailFragment . java to improve code readability and maintainability to enhance maintainability and
change log level from trace to warn in CLIService . java to improve log clarity by using warn instead of trace
added print statements for method instance flags in JimpleBodyBuilder . java to ensure proper handling of abstract methods in the receiver type
simonstewart : do n ' t call invokeLater on pointerupcallback on ie10plus
updated the ` getNotificationUsers ` method to include ` deviceId ` parameter and modified the return type of the ` getNotificationUsers ` method to
updated the URL from " http : / / droppr . org / srtm / v4.1 / 6 _ 5x5
updated MotifFileChooserUI to remove file chooser properties and added a new bug6520101 class to improve user experience by ensuring
replace void with boolean for handle methods in HollowDiffUIRouter , HollowHistoryUI , and HollowUIRouter classes to ensure proper
refactor ` getRuleOptional ` and ` getRuleOptionalWithType ` methods to use ` Optional < T > ` instead of ` fromNullable `
added visibility logic for transportSpinner in HostListActivity to ensure transportSpinner is visible based on makingShortcut state
added null check for attributes _ field before augmenting lint assignment to avoid potential NullPointerExceptions when attributes _ field is null
modified backPressed methods to return a boolean indicating success in multiple fragments to ensure proper handling of back button behavior in multiple fragments
added support for long - view index support in QueryServices and QueryServicesOptions to enhance flexibility in retrieving view index data type based on query
pdfbox - 4892 : fix typo , a suggest by valerybokov
replaced direct message containing privateKeyPath with a clean path using StringUtils to improve code readability and maintainability by using a clean path
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method in ` MTable . java ` to simplify the method signature and
updated IndexWriter and IndexWriterConfig parameters to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the
hbase - 11818 add support for no - strict column family check in importsv
[ java ] change logrecordingchannel to logsubscriptionid in archive . startrecording and archive . extendrecording .
replaced calls to ` startActivity ` with ` startActivitySafely ` and added voice button proxy visibility in ` Launcher . java `
added a conditional check to return early if the first element is a " i " in the JSON node to improve performance by avoiding unnecessary processing
refactor Procedure class for improved readability to enhance maintainability and clarity of the code
updated ResourceBundle initialization to use Locale . getDefault ( ) instead of CoreResourceBundleControl . getRBControlInstance ( ) and Window . java to ensure
added a new class ` NormalizeArrayCreationsKotlin ` to handle normalization of array literals in ` Backend . java ` to enhance array
added checks for zero count in PerSegmentSingleValuedFaceting . java to ensure correct handling of zero counts and prevent counting errors
replaced ` Optional . fromNullable ` with ` Objects . firstNonNull ` in ` ModMetadata . java ` to improve code clarity and
added a new test class ` OSGiTest ` for handling sun . misc imports in ` com . google . gson . regression ` to
refactor isDependentServiceEnableable method to improve service management logic to enhance code clarity and maintainability by encapsulating service enabling logic
hbase - 11875 htable . clearbufferonfail should not be set to false in testasyncprocess .
fix ( refactor ) : fix bug in ctscanner . scan ( ifelement . getthenstatement ( ) )
added ` hasUserData ( ) ` method to ` SimpleFeatureImpl ` and corresponding test cases in ` SimpleFeatureImplTest ` to ensure that
removed unnecessary ` throws HiveException ` from method signatures in ` DDLPlanUtils . java ` and ` ExplainTask . java ` to simplify
refactor RelyingPartyRegistration class for improved clarity to enhance maintainability and readability of the code
removed the enableLogging method from JavaCompiler . java to streamline logging process by eliminating unnecessary logging
added a new file ` InJavaSourceSet . java ` to handle Java source sets in the Java search process to facilitate the
added a new file path for the GDAL file in TestGDALParser . java to verify the existence of the GDAL file to ensure
added a static method ` createGetter ` to the ` ReflectionHelper ` class to facilitate the creation of a getter based on an
simplified the conditional check for external storage in DirectUpload . java to improve code readability and maintainability
added a new constant ` INDEXER _ NO _ COMMIT ` and modified ` IndexingMapReduce ` , ` IndexerOutputFormat `
api : do n ' t allow disk offering id to be pass whilst create volume
updated content assignment in ToHtml . java and modified assertions in BaseTestCellComment . java to improve code clarity and ensure proper handling of
added null checks for ` amountToAdd ` and ` amountToSubtract ` instances in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime `
added a new test class ` Issue382 ` for handling specific error types in ` Routes . java ` to ensure that specific error types are
replaced ` RuntimeException ` with ` Integer . signum ` in ` PositionUtils . java ` to simplify code and improve readability by reducing
added a conditional check to set the text visibility of the holder to GONE to improve user interface responsiveness by allowing the holder to be
fix ( jdt ) : fix classcastexception in ctimportimpl . getimportkindfor ( )
simonstewart : remove unnecessary method call from xpidriverservice . getprofile ( )
added a new ` LiquidBlock ` class and updated its properties in ` LiquidBlock . java ` to implement ` BucketPick
http : / / issues . apache . org / jira / browse / amq - 2902 / browse / amq - 2902
updated time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure accurate time
refactor ` existingObservation ` and ` newObservation ` methods in ` DistinctErrorLog . java ` to improve code readability
updated ` systemPropertyAsBoolean ` calls to include ` TestGroup . class . getAnnotation ( TestGroup . class ) . enabled ( ) `
replaced the ` createLogger ` method with ` getOrCreateLogger ` in ` SQLEditorSupport . java ` and updated logger initialization
added imports for Class , Method , and Proxy , and denyAccess methods in GraalContext . java to enhance security by restricting access denied
refactor raster handling in PGraphics2 . java to improve code readability and maintainability to enhance code clarity and ensure proper handling of
updated the method call from ` table . getSd ( ) ` to ` partition . getSd ( ) ` in ` HiveAbstractReader .
refactor overlay scrolling logic in Workspace . java to improve code readability and maintainability to enhance maintainability and clarity of overlay scrolling logic
added new classes UnmodifiableBatchBuilderImpl and UnmodifiableBatchBuilderInitiator to handle batch creation and service initialization to enhance batch management capabilities for
replaced instances of ` shouldNotReachHere ( ) ` with ` shouldNotReachHere ( ) ` in multiple classes to improve clarity
added a new test class ` MockWithStaticStateDemo ` and created a test class ` PartialMockingRetainsStateTest ` to verify
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to verify SQL parsing and deparsing behavior
added null check for ` ugi ` before calling ` doAs ( action ) ` in ` SecurityUtil . java ` to improve robustness
updated error handling in OpenALMusic . java to include an error code variable to improve error reporting for better debugging and debugging
camel - 14836 : camel - core - optimize endpointhelper to use resolveparameter instead of reslovestringparameter
refactor precision and scale handling in RexNodeConverter . java to improve precision and scale handling to enhance code clarity and maintainability by
updated the retrieval of vendor and device properties from ` getVendorProperties ( ) ` to ` getDeviceProperties ( ) ` in ` WebAuthn
updated the assertion in WalletTestAccount003 to use Long . toString ( now ) instead of " testName " to ensure correct handling of the
replaced ` AxialStage ` with ` RocketComponent ` in ` BasicFrame . java ` and refactored selection handling in `
added @ Getter and @ Setter annotations for long - running - time in Args . java to enable dynamic configuration of the long running time
updated equality checks in FindRefComparison and added a new class for Ideas _ 2012 _ 05 _ 21 to improve code clarity and ensure
updated imports and modified method signatures in HttpServerProvider , HttpsServer , and ScriptEngineManager to use ServiceLoader for loading ScriptEngineFactory to
replaced ` toString ( ) ` with ` toPlainString ( ) ` in ` XSDecimalBinding . java ` and refactored
updated assertions in TestRestClientRequestImpl . java to improve clarity and consistency to enhance code readability and maintainability
added a condition to check if the reference database is equal to the comparison database to ensure that the comparison database does not already exist before proceeding
refactor Android properties handling in IjProjectTemplateDataPreparer to improve clarity and functionality to enhance code readability and maintainability by
replaced calls to ` assertEquals ( ) ` with ` await ( ) ` in ` DuplicateCookieTest . java ` and ` SessionRenew
added user - arguments to the ImmutableMap in ChromeTraceBuildListener and updated test cases in ChromeTraceBuildListenerTest to include daemon information to enhance
svm : use modulesupport . getresourcebundle ( ) instead of resourcebundle . getbundle ( ) .
corrected the spelling of " match limit " to " match order " in HepPlanner . java to ensure consistency in logging output
added a new file TheRockMetaDataDemo . java to display exchange metadata from the TherockExchange to facilitate the demo
changed class names from ` FloatingDecimal ` to ` strictfp ` and added a test for strictness in ` FloatingDecimal ` and
removed unnecessary unparseing of column identifiers in ColumnStatsSemanticAnalyzer . java to simplify column name handling by eliminating unnecessary identifiers
added a test method to replace variable declarations in JavaTemplateContextFreeTest . java and modified context free template generation in BlockStatementTemplateGenerator .
added a check for synthetic methods in InstantiateStaticClass and introduced a new test method for ISC _ INSTANTIATE _ STATIC _ CLASS
removed the call to projectFilesystem . getPathForRelativePath in WorkspaceAndProjectGenerator . java to simplify the path retrieval process by eliminating unnecessary
added pending rescue handling in IkStepDefinition . java to ensure proper handling of pending rescues during message processing
refactored ` equals ` and ` hashCode ` methods in ` AbstractType ` , ` BigintType ` , ` Boolean ` , `
added a new static method ` getSyncLevel ` to retrieve the SyncLevel from a string to provide a way to retrieve the SyncLevel from
[ hotfix ] [ test ] use try - with - resources in controlcommandstest
added a condition to check if the slice state is not in the recovery strategy to ensure that the recovery strategy only checks if the slice state is
updated the method call from ` create ( ) ` to ` create ( ) ` in ` opencv _ core . java ` to ensure
added ` sdkPath ` to ` AppleBundle ` and ` SwiftStdlibStep ` classes and updated ` makeProcessExecutorParams ` method
updated the ` TransientBlobCleanupTask ` constructor to accept a ` BiConsumer < JobID , TransientBlobKey > ` instead of a ` File
change log message from " 1 - 1 NAT " to " static NAT " in NetworkManagerImpl . java to clarify the purpose of
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code readability and maintainability
added conversion methods for sort and union types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct row type
refactor BetterBlockPos class to improve code structure to enhance maintainability and readability of the code
updated the proxy method to use the class loader instead of the original ServletContext to ensure compatibility with the correct class loader for the ServletContext
refactor version handling in MainWindow , ConnectionSettingsPanel , and startup classes to improve clarity and consistency to enhance code readability and maintain
updated SQL statement handling in LoggingExecutor , JdbcExecutor , and LoggingExecutor to handle both OracleDatabase and OracleDatabase instances to ensure proper handling of
added a new constant ` UNKNOWN _ VALUES _ ARE _ NSP ` to the ` IsNullValueAnalysisFeatures ` class to support assumens
added a port variable and modified the HTTP request in MainTest . java to ensure the correct port is used for testing purposes
updated BLOB _ SIZE and PLAY _ MARGIN values from 7 and PLAY _ MARGIN and SLIDER _ M
added a new configuration for the duo security principal multifactor authentication provider bypass to the bypass configuration to ensure the correct authentication provider is
updated method signatures in MaxRectsPacker . java to improve clarity and consistency to enhance code readability and maintainability
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
added help page management methods to PMS , HelpTab , and LooksFrame classes to enhance user experience by providing a clearer help page
added new interfaces ` GeocodeProviderFactory ` and ` Constants ` to the ` it . feio . android . omninotes .
replaced ` util . CharArraySet ` with ` analysis . CharArraySet ` in ` LuceneAnalyzerUtil ` and ` Lucene
refactor exception handling in OptionTest , ResourceManagerImplTest , and ResourceManagerOptionsTest classes to improve test reliability and ensure proper exception
[ py4j ] do n ' t delete entry point object when delete the gateway server .
updated conditional checks in SegmentsInfoRequestHandler and added new document fields in CollectionsAPISolrJTest to improve code clarity and ensure correct document
updated the calculation of numPredictiveAppCols based on phone mode to improve accuracy in determining the number of apps columns based on phone mode
added a new method ` hasScalarSubqueryInput ` in ` JoinUtils ` and updated related imports in ` DrillJoinRelBase `
added a new abstract class BlockBuildCraft to handle block removal in the buildcraft core to enhance the build process by allowing dynamic inventory
updated gravity calculations and layout parameters in DeviceProfile . java to improve layout consistency and ensure proper layout management
replaced the call to ` run ( ) ` with a call to ` start ( ) ` in ` YahooSession . java `
initialized ` ms ` and ` metaStoreClient ` to null in ` HiveMetaStore ` and ` HiveMetaStoreClient ` to ensure proper
updated getDisplayScript method to use Category . DISPLAY instead of Locale . US in Locale . java and added a new test for Locale . java to
removed unnecessary imports for BASE _ URL _ PROP and CORE _ NAME _ PROP and CORE _ NAME _ PROP in Replica . java to
replaced ThreadLocalRandom with a Random instance in StoreDirectTest . java to improve randomness and maintainability of the code
added a check for the launcher ' s ready state before updating backup keys in LauncherBackupHelper . java to ensure the launcher is properly initialized
updated error messages in Cell . java for clarity to improve readability and maintainability of the code
added unit tests for ` ResiliencePooledRouteOkTest ` in ` ResiliencePooledRouteOkTest ` to ensure proper
changed variable names from ` setBodySpace ` to ` setBarSpace ` across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code structure to enhance maintainability and readability of the code
refactor FileMessageHistoryTest to use JUnit ' s TemporaryFolder class instead of creating a new File instance to improve test clarity and
added logging levels for express , quartz , reflections , and mongodb driver in Grasscutter . java to improve debugging capabilities and
replaced instances of ` highlightCnstScrRngQuery ` with a static method ` highlightCnstScrRngQuery `
updated conditional checks in Launcher . java and added a getState method in Workspace . java to ensure proper state management and improve code clarity
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
updated conditional logic in SnippetTemplate . java to conditionally notify new templates based on args ' s cacheable flag to ensure proper handling of template
added a new constant SCOPE _ SOLR _ CORE and updated related classes to support solrcore scope management to improve code clarity and
updated the CREATE TABLE measurement to include primary key in DatabaseMetaDataTest . java to ensure that the measurement data is correctly retrieved from the database metadata
rename ` -- permissions - config - path ` to ` -- permissions - config - file ` in the ` PantheonCommand ` class to
refactor session creation logic in HttpSessionContextIntegrationFilter . java to improve code readability and maintainability to enhance code clarity and maintainability
added a new file ` TestIfWithDeadRegion . java ` that tests the ` getString ` method with a ` Supplier < String > `
corrected the spelling of " english _ USD " to " English USD " in DependencyParserITest . java and DependencyParser
replaced direct calls to ` HighResolutionTimer . enable ( ) ` with a try - finally block for concurrent access tests to ensure thread safety
added a staticUi flag in AppSettings and modified the toast bar visibility logic in MainFragment to ensure the toast bar is displayed based on
modified the return statement in WindowsSecurity . java to use a try - finally block to ensure proper resource management and prevent potential memory leaks
updated parameter handling in SamlRedirectLogoutHandler and WhitelistLogoutHandler to use ` setParameterIfAbsent ` instead of ` setParameter ` to improve code
updated message dialog parameters in MEncoderVideo , NavigationShareTab , and PluginTab to include error messages to enhance user experience by providing clearer
tika - 1343 -- add test for xls and vnd . openxmlformats - officedocument
refactor Runner and FeaturePathFeatureSupplier classes to utilize FixJava for handling glue paths and improve logging clarity to enhance code readability
( chore ) camel - eip : remove unnecessary system . lineSeparator ( )
added a synchronized method to remove the version information from an endpoint and updated migration logic in MigrationCoordinator and StorageService to improve thread safety and ensure
refactor debug logging statements in DeviceConfiguration . java and PortAudioAuto . java to improve code readability and maintainability to enhance debugging capabilities
added WebsocketConfig to ShenyuConfig and updated WebSocketPluginConfiguration to accept ShenyuConfig to enhance WebSocket configuration flexibility
updated CacheValidationListener to implement ISuiteListener and added tests for invoked methods to enhance testing capabilities and ensure proper handling of invoked methods in tests
added a check for empty content length before adding it to the document to ensure that content length is only added when it is not empty
replaced synchronized block with a private method solvingTerminated in DefaultSolverJob . java to improve code readability and maintainability by encapsulating
added error handling for PathAlreadyExistException in the internalCreateTimeseries method to improve robustness by handling potential PathAlreadyExistException when concurrent
added a new method ` check ( boolean result ) ` to the ` Authz ` class to provide a way to check if a boolean is
changed access modifiers of several methods from public to protected across multiple classes to restrict access to these methods for better encapsulation
cloudstack - 3641 : fix vmware vmware vmware vmware fail if vmware be allocate or reserved .
updated HttpParser to return an empty string instead of an empty string to simplify the code and improve readability by eliminating unnecessary null checks
refactor thread initialization logic in J9VMInternals . java and Thread . java to streamline initialization process to improve code readability and
added a method ` getExternalStoragePublicDirectory ` to ` ShadowEnvironment ` and a corresponding test class ` EnvironmentTest ` to facilitate
[ drools - 1342 ] add a test for mvel type coercion in the knowledge base configuration .
removed unnecessary import of FileUtils and improved error handling in LoggingConfig . java and DbgPacker . java to streamline code and enhance
added error message to the logging statement in ActionNode . java to provide more detailed error information for better debugging
added a conditional check for " tel : " in the toNumber assignment to ensure that the toNumber starts with " tel : " in the
refactor visibility logic for shared file in FileListListAdapter . java to improve readability and maintainability of the code
removed the deprecated HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf . java and updated TestTxnCommands3 . java to use it
refactor ExecuteStatementOperation , Operation , and SQLOperation classes to improve clarity and consistency to enhance code readability and maintainability
refactor BTCMarketsStreamingAdapters , BTCMarketsWebSocketSubscriptionMessage , and BTCMarketsStreamingService classes to improve code
updated method calls from ` getName ( ) ` to ` getTypeName ( ) ` in ` OGRDataStoreTest . java ` to ensure consistency in
removed the onErrorInStep method from StepListenerSupport . java to streamline error handling by eliminating unnecessary code
refactor Wallet class to improve code structure to enhance maintainability and readability of the wallet implementation
camel - 8859 : camel - netty - allow to specify the port and host for camel - netty
replaced ` System . out . println ` with ` log . info ` in ` TestNonBlockingAPI . java ` to improve logging cl
added a check to return false if the row does not exceed the size of the connection list to ensure that the database connection does not exceed the
added a new file ` MethodWithSameNameAsEnclosingClass . java ` to handle method declarations with same name as the enclosing class to enhance
added ExtendedPlatformComponent to manage MBean instances in ManagementFactory and created a new ExtendedPlatformComponent class for managing MBean instances to improve management management and
added spaces to SQL statements in BasicQueryTest . java to ensure proper escaping of single quotes in SQL queries
updated response classes from " Bleutrade " to " org / knowm / xchange / bleutrade / dto / " in
refactor TextEscapeUtils class for improved readability to enhance maintainability and clarity of the code
added a filter parameter to the AbstractSpatialFieldType class and modified the FilteredQuery instantiation to include a filter parameter to enhance query functionality by allowing
updated progress handling in GpsLoggingService and added post method in AutoEmailHelper to improve user experience by providing user feedback during email sending
replaced ArrayList with HashSet and modified iterator methods in Inlinks . java and LinkDbReader . java to improve performance and maintainability of the
added synchronization around the stopScan method in TradfriDiscoveryService to ensure thread safety when removing OLder results
updated the ` testFilterForPartition ` method to include a ` filterAtServer ` parameter and modified the ` testFilterForPartition ` method
added Abandoned status to request and bug workflow lists in TicketModel . java and TicketsPage . java to enhance workflow management by enabling
removed the ` columnAliasPrefix ` variable from multiple platform - related classes to simplify the code by eliminating unnecessary assignment
updated LlapRowRecordReader , LlapRowInputFormat , and SemanticAnalyzer classes to use BytesWritable instead of Text to improve data handling
added a new NonNativeJVMDetector class to check if the JVM architecture is non - native to provide a warning for running on a 64
refactor conditional checks for key and type in PdfCopy . java to improve readability and maintainability of the code
added a new option ` DAEMON ` to the ` RESET _ ALARM ` command and implemented a web pendant UI in `
added a new file ` FlushIndexTask . java ` that implements the ` PerfTask ` class to facilitate the flushing of
updated the ` createFlushWriter ` method to accept an ` estimatedSize ` parameter and modified the ` getFlushPath ` method to accept a
updated conditional checks for expected output in MediaLibraryFolder . java to include SEASONS to ensure correct handling of SEASONS output
added a new file ` LocalSocketAddress . java ` that checks if IPv6 is available in network interfaces to facilitate testing of IPv
updated grid size points in GridSizeMigrationTask . java to ensure consistent positioning of grid size steps
removed unnecessary method calls from SerializerPojo . java to streamline code by eliminating unnecessary method calls
added READ _ ONLY flag to the Context class and modified transaction transaction handling to ensure proper handling of read - only objects during transaction operations
refactor LookAndFeelCommand class for improved readability to enhance maintainability and clarity of the code
updated the calculation of ` lastRunEnd ` in ` BlockBoxing . java ` to use ` ceiling ` instead of ` floor `
added EOFException and EofException imports in GracefulStopTest . java to ensure proper exception handling for closed channel exceptions
refactor NetJavaImpl to use synchronized methods for connection management and listener management to improve thread safety and maintainability of the code
refactor NetworkParameters class for improved readability to enhance maintainability and clarity of network parameters
removed conditional check for account asset optimization in DynamicPropertiesStore to simplify the code by eliminating unnecessary logic
added a new constant J9 _ GC _ POLICY _ NOGC and initialized it to 0 to disable the GC policy for improved performance
added error handling for InvalidProtocolBufferException in TransactionCapsule . java to ensure proper handling of InvalidProtocolBufferException during transaction processing
deleted the ExceptionTypeChecking . java file to remove unused code to streamline the codebase
updated resource retrieval from " helpPre " to " en / " and added logging for missing localization available to improve user experience by providing clearer
added a new file ` ProcessorInfo . java ` to retrieve and determine available processors based on the system ' s US - ASCII character set to
added stylesheet handling in PrintingBugReporter to enable HTML output generation based on user - defined options
refactor LogbackLoggingSystem to use a non - nullable logbackXmlLocation instead of Optional to improve flexibility in handling logback location
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to use a dedicated updateDataOfCluster method to improve code clarity and maintainability
added a conditional property " spring . sleuth . propagation . tag . whitelisted - keys " to the SleuthTagPropagationAutoConfiguration
refactor rustDepType assignment logic in RustCompileUtils . java to improve clarity and consistency to enhance code readability and maintain
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` parameter and added error handling to enhance
hbase - 11818 hfilereader . getfirstkey ( ) do n ' t seek to the first kv when seek to the
hhh - 14386 - upgrade to hibernate 6.2 and add @ deprecate annotation . timing ( )
added a new test method ` testLayerNormNan ` in ` TestLayerOpValidation . java ` to verify layer normalization functionality to ensure correct
replaced direct calls to ` showShareFile ( ) ` with ` getFileOperationsHelper ( ) . showShareFile ( ) ` in multiple
added a new test class LiquibaseUpdateMojoExecutionTest to validate the Liquibase update configuration to ensure correct functionality of
updated the method to convert the " proxyType " to uppercase to ensure the proxyType is correctly converted to lowercase
added a new class ` mod _ MinecraftForge ` and modified ` mod _ MinecraftForge ` to extend ` Base
added caching logic for all table columns in JdbcDatabaseSnapshot to improve performance by reducing unnecessary cache operations
added a container with a border and a label for the landscape theme in CSSBorderTest . java to enhance the visual appearance of the
changed the access modifier of ` RetryAutoConfiguration ` and ` RetryInterceptorAutoConfiguration ` to public and added a new ` RetryInterceptorAutoConfiguration
replaced ` LayoutParams . FILL _ PARENT ` with ` LayoutParams . MATCH _ PARENT ` in ` CellLayout . java ` to align layout
updated the calculation of parentTaskName from nanoTime to currentTimeMillis in PinotHelixTaskResourceManager . java to ensure the parent task name is
added error handling for UncheckedIOException in ServiceResourceProvider . java to improve robustness by providing clearer error messages when parsing input
refactor conditional logic in IndexDatabase . java for improved readability to enhance code clarity and maintainability
[ giac ] fix ggbround ( x [ 0 ] , x [ 1 ] , x [ 0 ] , x [ 1 ]
refactor AnonCipherWithWantClientAuth class for improved clarity to enhance maintainability and readability of the code
added multiple @ Deprecated annotations to ProducerTemplate . java to indicate that these methods are outdated and should not be used in future development
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
replaced sleepAtLeastSeconds with assertTrueAllTheTime method in EvictionTest . java to improve test reliability by allowing more time for
replaced ` encodeInternal ` with ` encodePassword ` in ` Md5PasswordEncoder . java ` to simplify the code and improve read
replaced ` viewTreeObserver ` with ` mTaskRecyclerView . getViewTreeObserver ( ) ` in ` IconRecentsView . java
refactor Response class implementation to improve code readability and maintainability
changed the type of ` maxTimestamp ` from ` Long . MIN _ VALUE ` to ` Long . MAX _ VALUE ` in ` SST
set preferred size of callparticipantpanel to 60 to improve user interface responsiveness
added null and empty checks for replies in multiple classes to enhance robustness by preventing potential NullPointerExceptions when compressReplies is enabled
replaced ` ToStringBuilder ` with ` Objects . equals ` and ` hashCode ` methods in ` HitbtcBalance ` class to improve
updated column handling in SqlCodeGenerator and added a new test for where clause handling in SqlParserTest to improve code clarity and ensure correct
replace the return statement with a call to ` addrs . toString ( ) ` in ` RetriesExhaustedWithDetailsException . java `
refactor OpenCookie handling in EditGcodeFile . java to utilize OpenCookie lookup to improve code readability and maintainability by central
updated import statements in JsonToGrpcApplicationTests . java for improved clarity and consistency to enhance code readability and maintainability by
pipePowerWood : use minimum energy for battery . getEnergyStored ( ) instead of getEnergyStored ( ) to ensure
added a check to delete the temporary output file if it exists to ensure that the temporary output file is deleted before proceeding
updated the ` BitstampWebSocketTransaction ` parameter name from " id " to " id " in ` BitstampWebSocketTransaction ` and added tests
added expiration checks in ReplayProcessor and ReplaySubject classes and corresponding tests in ReplayProcessorTest and ReplaySubjectTest to ensure that
corrected the spelling of " [ 1 ] B . Smith " in the expectedCitation string to ensure correct formatting of the expected
updated SQL insert statements to use a new SQL query for video formatting to improve code readability and maintainability by reducing unnecessary database operations
g3d - 255 : show only definition for equation in exam in feature .
added a null check for the component in SIPCommTextFieldUI . java to prevent potential NullPointerExceptions when the component is null
added caching configuration for scanning in MetaReader . java to improve performance by reducing unnecessary scan processing
updated the init script from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql
refactor Math and StrictMath classes for improved code organization to enhance maintainability and readability of the code
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to provide functionality for enabling a transient taskbar
refactor AccessExecution , AccessExecutionVertex , ArchivedExecutionVertex , and ArchivedExecutionVertex classes to improve code organization and maintainability
added a conditional check to set the density value based on the scale value to ensure the density is set correctly based on the scale value
rename ` optional ` to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in naming conventions
added a new Exception ( ) parameter to the log statement in RegionStateStore . java to improve error handling by providing a more informative exception
updated assertions in TestClusterUpgradeUtils to use ` toString ( ) ` instead of ` assertTrueEventually ` to improve clarity of assertions
updated logging messages in AsyncHttpConnection and modified related test classes to use LocalConnector and SelectChannelConnector to improve logging clarity and ensure proper
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` class to control the visibility of the ` title ` and ` subtitle
updated lock mode handling in Database . java and removed the testSetMode method in TestRowLocks . java to ensure compatibility with MVStore
added a test for Linux and AMD64 platforms in BigEndianTest . java to ensure that tests are only executed on Linux and AMD64
added handling for Integer , StringValue , IntValue , and IntValue types in Scalars . java to ensure proper handling of integer and integer values
added checks for empty and multiple PRIMARY KEY aliases in CreateTableStatement . java to ensure that only one PRIMARY KEY is provided and provide clearer
added conditional drawable checks for various UI components in CellLayout , Hotseat , and Setting components in Launcher to enhance user experience by
added exception handling for Flutter views query and improved exception handling in VMServiceManager . java to enhance error handling and provide clearer feedback
added methods for content type options , xssProtection , cacheControl , and frame options in HeadersConfigurer . java to enhance header configuration flex
refactor ObjectEnumerableAssert class to improve code readability to enhance maintainability and facilitate future updates
rename ` SmokeTest ` and ` DistributedCdpTest ` classes from ` SmokeTest ` to ` DistributedCdpTest ` to
added type = " type " to the @ AggregateRoot annotation in EventSourcingRepositoryTest . java to facilitate testing of
added support for prebuilt libraries in Python binary descriptions and corresponding tests to enhance functionality for handling prebuilt libraries in the Python inPlace binary
added support for setting the client authentication in NetServerOptionsConverter and updated clientAuth initialization in HttpServerOptions to enhance flexibility in handling client authentication
updated ` REPLDIR ` and ` REPLCMDIR ` paths in ` HiveConf . java ` and ` MetastoreConf .
refactor task view handling logic in RecentsView . java to improve clarity and functionality to enhance code readability and maintainability by
increased the timeout duration from 60 seconds to 60 seconds in AmqpTransformerTest . java to allow for more time for the test execution
removed the clearAll ( ) method from DataTableTopComponent . java to clean up the code and improve readability
rename ` controller ` to ` flowController ` in multiple processable classes to improve clarity and consistency in naming conventions
[ hotfix ] [ runtime ] fix excesssumnum assignment in operatortreegenerator
added ClassLoaderHandler to the module - info . java file to enable the use of ClassLoaderHandler in the module - info . java file
added methods to set the best solution and planning problem in SolutionBusiness and SolverAndPersistenceFrame classes to improve clarity and functionality of
added JsonIgnore annotation to ApplicationSettings . java to mark the application as ignored
changed the condition from checking if ` throwable ` is not null to checking if ` throwable ` is not null to ensure that ` throwable ` is
removed unnecessary null check for queryInfo in QueryTimeManager . java to simplify the code by eliminating unnecessary null checks
updated the visibility of deltaProgress from NONE to GUI _ ONLY in TileAutoWorkbenchBase . java to improve the visual appearance of the
added a check to ensure the parser is not empty before validating the HDOP value in Gl200TextProtocolDecoder . java to avoid potential
renamed timeColumnName and timeFieldSpec variables to incomingTimeColumnName and incomingTimeColumnName in AvroRecordToPinotRowGenerator . java to
removed redundant calls to HttpMethed . waitToProduceOneBlock in HttpShieldTrc20Token004 . java to streamline
added a new interface ` Initializable ` and modified the ` ContainerBuilder ` class to handle initializable factories to enhance the flexibility of container initialization
refactor TimerObservationHandler to use a wildcard import and streamline error handling in MeterRegistryCompatibilityKit to improve code readability and maintain
changed the type of SYNC _ DELTA _ RATE from float to double and modified time calculations in AdaptiveFetchSchedule . java
added logging for deprecated fragment expressions in AbstractStandardFragmentInsertionTagProcessor and updated computeFragment method to include template name and line and column parameters to
changed the type of the _ attributes variable from HashMap to ConcurrentHashMap to ensure thread safety when accessing the attributes map
http : / / issues . apache . org / jira / browse / amq - 4892 - add some debug information to the
added new color constants for main and secondary colors in ColorExtractionAlgorithm . java and modified the extractInto method to handle dark text color hints to
added functionality to handle accessibility of data folders in SketchBuilder to ensure srcFolderPathList is only added when the data folder is accessible
updated the ` appendContent ` method to include a ` includeTitle ` parameter and modified the ` includeTitle ` flag in ` NotesHelper `
removed the initialization of the SessionRegistry instance in ConcurrentSessionControllerImpl . java to simplify the code by eliminating unnecessary instantiation
[ hotfix ] [ network ] log connection reconnection failure in nettystreamingservice
replaced the use of ` Factory ` with ` JavassistProxyFactory ` in multiple test files to ensure compatibility with the latest Java
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve thread management performance by using a
refactor exception handling in SocketExceptions and ExceptionText to use String . join for better readability to improve code clarity and maintainability by
added a check to check if the view directory is under the repository directory in ProjectView . java to ensure that the view directory is under the
added drag - and - drop functionality to the tab header area in JabRefFrame . java to enhance user experience by ensuring proper handling of
added multiple " - XX : + UseCompressedOops " and " - XX : + UseCompressedClassPointers " test files to
added a condition to check if the update log is in ACTIVE or REPLAYING state to ensure that the update log is not in ACTIVE
deleted the ConnectionHook . java file to remove unused code to streamline the codebase
solr - 12313 : remove unused testinjection . waitforinsyncwithleader ( )
camel - 16400 : fix typo in parameterassert . isofarraytype ( string )
updated ApexLanguageModule to use current external version and added a new method hasNamespaceGuardedAccess in TestAccessEvaluator to ensure compatibility with
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
refactor AggregateEngine to use IoTDBThreadPoolFactory for improved thread management to enhance performance and resource management during aggregate operations
updated the constructor of WebSocketAsyncConnection to use ByteBufferPool instead of StandardByteBufferPool to improve memory management by utilizing a consistent buffer pool for
added LinearLayoutManager scrolling behavior in UploadActivity to ensure proper scrolling behavior based on the index range
added a condition to check if the column index isQuiet before adding it to the selectMetadata to ensure that the metadata is only added when the
refactor animation handling in LauncherAnimUtils and LauncherStateTransitionAnimation classes to improve code readability and maintainability to enhance maintainability
added a condition to disable the default HTTP client user agent if it is enabled to ensure that the client disables the default user agent based on configuration
added a check for pubsubhubbub in FeedRefreshUpdater and implemented getter and setter methods in ApplicationSettings to ensure proper handling of pubsub pubsub
changed the visibility of the finalize method from public to protected to allow subclassing of the finalize method
updated the ` isAnonymousOrLocalClass ` method to use ` isAnonymousOrLocalOrSyntheticClass ` instead of ` isAnonymousOr
added a new file ` DSpaceWebapp . java ` that extends ` AbstractDSpaceWebapp ` to implement a DSpaceWebapp
added logic to retrieve the table alias containing column in CalcitePlanner and implemented a method to retrieve the table alias containing columns to ensure that
updated the identity key format in JobGenerator . java to include a space to improve readability and maintainability of the code
refactor logging statements in Wallet . java for improved clarity and consistency to enhance code readability and maintainability by using more descriptive
updated import statements in BasicMapTest . java for consistency and clarity to improve code readability and maintainability by aligning import statements with
hive - 14836 : disable rcfile writer by default ( ashutosh chauhan via ashutosh chau
added a new enum TlsClientCertPolicy and updated related methods in Constants . java and GitBlitServer . java to utilize it
added debug logging for subscription failure in KrakenFuturesStreamingService to improve logging clarity and maintainability of the subscription process
added support for the Sec - WebSocket - Protocol header in the ProxyWebSocketHandler class to enhance WebSocket handling by allowing customizable WebSocket protocol settings
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to facilitate debugging and tracking of fetch requests
corrected formatting of dimension names in HolidayEventFormatter . java to improve code readability and maintain consistency in formatting
modified the ` FinalizePrivateFieldsTest ` and ` FinalizePrivateFields ` classes to handle inner class fields to ensure proper handling of inner class fields
[ hotfix ] [ javadocs ] fix typo in unexpectedjobexecutionexception
deleted the file ` AquaLookAndFeel . java . extra ` and removed the ` shouldUseOpaqueButtons ( ) `
updated maxFreq and maxCost handling in DrillSidewaysQuery and DrillSidewaysScorer classes to improve clarity and consistency in
added a classRegsitry . put ( GeoDegeneratePath . class , 36 ) to the classRegsitry map to
removed the preFill parameter from several pool constructors in several classes to streamline the pool initialization process and improve code clarity
added a condition to update the state for the app in TaskbarLauncherStateController and modified the state mask in TaskbarStashController to
added null check for getDefaultStyle ( ) and adjusted style removal logic in CascadeDeleteVisitor . java to prevent potential NullPointerExceptions during style removal
refactor GuiUtil and StatusTab classes to utilize setSize and setMaxWidth methods for better layout management to improve code readability and maintain
updated file icon handling in FileTreeViewHolder . java to utilize TreeFileExtension for better file organization to improve code clarity and maintain
replaced ` isEqualTo ( ) ` with ` contains ( ) ` in ` ParallelUniverseTest . java ` to improve clarity and
added synchronization around results retrieval in XMLReporter . java to ensure thread safety during test execution
added a new file ` TestNativeProbabilityFunctionQueries . java ` that implements the ` AbstractTestNativeProbabilityFunctionQueries ` class to facil
added deregistering of the ShutdownThread in ClientContainer . java to ensure proper resource management and prevent potential memory leaks
added a method ` dropTemporaryTableAfterUse ( ) ` to the ` SybaseASE15Dialect ` class to provide a way to drop
simplified the return statement in HtmlUnitWebElement . java for consistency and clarity to improve code readability and maintainability
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
refactor LinksIndexingFilter to improve code structure to enhance maintainability and readability of the code
updated hexadecimal string formatting in VirtualAllocCommitUncommitRecommit . java to include 1024KB for test to improve readability and maintainability of
refactor ad playback state management in AdTagLoader and AdsMediaSource classes to improve clarity and ensure correct handling of skipped ad groups
refactored the equality check in MultimapSubject to use a boolean variable for better readability to improve code clarity and maintainability by
updated the method call from ` deg _ text ` to ` unit _ hz ` in ` WaveGeneratorActivity . java ` to ensure the
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
simplified the initialization of the TreeMap in TestLabelOptions . java to improve code readability and maintainability
refactor vertex format handling in VertexLighterFlat . java to use a static final NORMAL _ 4F instance to improve code clarity and
added tagging for grpc . message _ sent . visible and grpc . message _ received . visible in multiple interceptor classes to enhance traceability and
replaced ` ZoneId . of ( ) ` with ` TimeZone . toZoneId ( ) ` in ` ScheduledTrigger . java ` to
added new classes AsyncBucket and InMemoryExtension , and modified LocalBucketBuilder to implement asAsync and isCustomTimeMeasurementSupported methods to enhance
refactor class directory handling in resexhausted003 . java to improve clarity and functionality to enhance code readability and maintainability by
changed variable names from ` _ maxIdleTime ` and ` _ lowResourceMaxIdleTime ` to ` _ soLingerTime ` and
refactor OngoingStubbing class to improve code structure to enhance maintainability and readability of the code
updated the ` getValidWebServerPort ` method to include a ` Optional < WebServer > ` parameter and refactored related logic to improve
replaced ` productConstructor ` with ` constructor ` in ` HttpClientUtil ` and added a static import in ` SolrTestCaseJ4 `
added error logging for thread allowlist utilised and cleared it in ParametersInterceptor . java to improve error handling and ensure thread allowlist is cleared
updated the method call from ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to ensure the correct
added a condition to check if the HitPolicy is COLLECT before executing findGaps and findOverlaps in DMNDTAnaly
added a new test method ` testSlidingWindowsCombine ` in ` CombineTest . java ` to verify the functionality of the ` Combine `
updated logging statements in Launcher and LauncherModel classes to check for allAppsDirty before binding all apps to improve logging clarity and ensure
removed the assertion for the " Running " attribute in ManagedFileWatcherReloadStrategyTest to simplify the test by eliminating unnecessary assertions
refactor import statements in the Solution class for improved readability and maintainability to enhance code readability and maintainability
replaced the static method ` getPrivSysProp ` with direct access to ` AccessController . doPrivileged ` in ` AquaMenuBarUI
added a new parameter ` fall ` to the ` setRawLocation ` method and modified its behavior in multiple classes to allow users to set the location
refactor query handling in SimpleJpaRepository to improve clarity and functionality to enhance code readability and maintainability by reducing redundancy
updated the setDifficulty method to include timestamp , parentHash , nonce , and number parameters in BlockUtil . java to enhance the configuration of
replaced ` LoopSafepointInsertionPhase ` with ` SafepointInsertionPhase ` in multiple classes to simplify safepoint insertion
added null and empty checks for children in RSGroupInfoManagerImpl and ZKProcedureMemberRpcs to improve robustness by preventing potential
changed access modifiers of ` ArtifactResolver ` and related methods from package - private to public in ` ArtifactResolver . java ` to allow access to
stop the thread in ClientConnectionHandler and add disposal logic in BulletPhysics and ChunkProcessingPipeline to ensure proper resource management and
added a check to ensure maxBufferedDocs is greater than 1 to prevent illegalargumentexception when processing documents
added functionality to manage the login state in the LoginActivity to improve user experience by enabling the login process based on the state state
added null checks for ` next ` and ` valueExtractor ` in ` Pump ` and created a test for UUID comparisons in ` Pump
refactor access modifiers and methods in HttpShardHandlerFactory , LBHttpSolrServer , and LBHttpSolrServer to enhance encapsulation
updated the order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added unit tests for DefaultAuthenticationServiceSelection
added Server and ContextHandlerCollection imports to TestJNDI . java to enable testing of server context handlers in the JNDI server
updated condition checks in SortedDynPartitionOptimizer . java for improved clarity and consistency to enhance code readability and maintainability while ensuring proper
changed the return value from NioEventLoop to true in FileStreamChannel . java to ensure proper handling of NioEventLoop instances
updated the calculation of ` oldNumNulls ` and ` newNumNulls ` in ` StatsUtils . java ` to ensure that ` newNum
camel - 16400 : camel - dsl - add support for kamelets in the export command
replaced ` OkHttpOAuthConsumer ` with ` AuthorizationState ` and updated access token handling in ` OSMJob . java ` to improve
removed debug print statements from multiple test classes and added a main method in BasicPTXTest , BasicPTXTest , and PTXBackend
added a clientAuth property and its getter / setter methods to IoTDBRestServiceConfig and updated related classes to enable dynamic configuration of client authentication
updated mock candidate injection logic in PropertyAndSetterInjection . java and added a new test class ChildWithSameParentFieldInjectionTest . java to
refactor BloomFilter64bit and BloomUriUniqFilter to use InitializingBean instead of BloomFilter32bitSplit to
replaced ` getCursorAdapter ( false ) ` with ` getCursorAdapter ( true ) ` in ` HomeFragment . java ` and added
updated intermediate header height ratio from 1f to 75f to improve layout responsiveness for better user experience
updated ` RuntimeEvent ` and ` RecompilationEvent ` classes to utilize a new ` RecompilableScriptFunctionData ` class
added support for ` host _ sys _ prepped ` configuration in ` ExecutionCommand ` , modified ` Configuration ` , ` AmbariCustom
added a boolean parameter ` logEveryUnknownFileFormat ` to the ` include ` method and updated its usage in ` DatabaseChangeLog . java
added a loop to delete trailing slashes from the location in DefaultServlet . java to ensure proper handling of trailing slashes in the location
added properties to the StaticPipeline class for parsing entities and scores based on their properties to enhance the flexibility of the pipeline by allowing configuration of
refactor filename handling and configuration handling in Frame . java , Utils . java , and WhoopsModule . java to improve clarity and
[ geos - 5767 ] catalogrepository . getcatalog ( ) should return null if the datastore do not exist
refactor Assert class to improve code readability to enhance maintainability and facilitate future updates
added new test classes for MultiLineGridlikeTextTests and MultiLineJaggedTextTests to enhance testing capabilities for multi - line text
camel - 16400 : camel - jms - do n ' t wait for a message to be send on same topic .
[ iotdb - 1347 ] fix tsfilewritealignedwithtsrecord and tsfilewritewithtablet bug ( # 119
updated loop structure and memory usage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to improve clarity
updated the regex in LoggingOptionsTests to use slf4j - reload4j - . jar instead of log4j - log4
[ hue ] fix test failure in huebridgehandlerosgitest
changed package declarations from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities ` across multiple activities
added JUnit @ Ignore annotation to KieContainerSolverFactoryTest . java to temporarily disable tests related to DROOLS - 1276
added a constructor to PullRequestMergedEventsStream that reads the Avro schema from a file to facilitate the creation of PullRequestMergedEventsStream
refactor AbstractExpressionPart class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ doc ] fix typo in taskslot javadoc
replaced ` addListener ( FIRE _ EXCEPTION _ ON _ FAILURE ` with ` addListener ( CLOSE ) ` in ` NettyWebSocket . java
added error handling for unlocking locks in MoveTask . java to improve robustness by handling potential LockException during lock release operations
refactor property loading in JRubyBackend to use ResourceBundle for better resource management to improve code readability and maintainability by reducing redundancy
replaced the static final byte array ZERO _ ADDRESS with a static final byte array EMPTY _ BYTE _ ARRAY in the Transaction class to simplify
refactor code formatting in ClassGraphClassLoader . java to improve readability to enhance maintainability and readability of the code
added unit tests for blob storage directory creation and deletion in JobManagerStartupTest . java to ensure that the blob storage directory is properly created and
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added a Bundle instance to set the extras of the FileDisplayActivity to enhance the functionality of the FileDisplayActivity by providing additional extras
simplified the break statement in ParticleEmitter . java to improve code readability and maintainability
updated expect times from 2 to 3 in AmbariManagementControllerImplTest and AmbariManagementControllerTest to increase test coverage for cluster
removed nullable parameter from the @ Column annotation in TransientSessionTicketImpl . java and added handling for NoResultException in JpaTicketRegistry .
updated Bug4823811 . java file to improve code clarity and maintainability
refactor argument handling in RmStep to use a path relativizer for pattern deletion to improve code readability and maintainability by
updated requestFullState method to accept a boolean parameter for initial request to enhance flexibility in handling full state requests
refactor ShibbolethCompatiblePersistentIdGenerator to use JsonProperty for attribute management to improve code readability and maintainability by reducing
corrected the spelling of " @ Inject " in RequestValidationService . java to improve code readability and maintain consistency
added a new variable ` STATS _ LOGGER _ KEY ` and refactored message handling in ` UiThreadHelper . java ` to improve
removed unnecessary whitespace in FileNodeProcessor . java and added clear methods in MManager and MTreeTest . java to improve code readability and
refactor NavigableMap and NavigableSet classes for improved clarity to enhance maintainability and readability of the code
added a new test method ` testSlurpFile ` to ` IOUtilsTest ` to verify the functionality of ` slurpFile `
added @ FunctionalInterface annotation to multiple classes in GrpcChannelProperties and GrpcChannelProperties classes to enhance functionality by allowing functional interfaces for
refactor span handling in TraceWebFluxTests to use a new method ` spanWithName ` to improve code readability and maintainability by
added date conversion functionality to ETypeConverter and HiveSchemaConverter to enhance date conversion capabilities for Parquet
updated the parsing of the style string to use Patterns . COMMA _ SEPARATOR instead of a hardcoded string to improve code readability and maintain
[ geogebra - 1767 ] fix stringparser error message for invalid input
refactor column count handling in SemanticAnalyzer . java for improved readability to enhance code clarity and maintainability by reducing redundancy
refactor assertions in WANDScorer . java for better readability and maintainability to enhance code clarity and maintainability while ensuring correct
refactor Correspondence class to improve code readability to enhance maintainability and facilitate future updates
updated import statements in PaintSetEnabledDeadlock . java to improve code clarity and maintainability
updated the ` curPixVal ` variable in ` XRSolidSrcPict . java ` and added a new ` WhiteTextColorTest .
replaced ` List < Type > subTypes ` with ` Collection < Type > supertypes ` in ` BiomeDictionary . java `
replaced ` withinTolerance ` with ` exceedsTolerance ` and updated conditional checks in ` BoundedLocalCache . java ` to improve clarity
added test stability rules for LOCAL and PLATFORM _ POSTSUBMIT in TaplTestsLauncher3 . java to enhance test st
refactor package - info . java files for mmm and ppp packages to improve code organization and maintainability
added a check for empty log file suffix in SnippetUtils . java to ensure that the log file suffix is not empty before processing
refactor PythonBuckConfig class to improve code structure to enhance maintainability and readability of the code
added unit tests for ` addSystemSharedLibraryName ` and ` clearSystemSharedLibraryName ` methods in ` ShadowPackageManager ` and `
refactor MeiligaoProtocolDecoder and MeiligaoProtocolDecoderTest to use Position and StringBuilder for improved formatting to enhance code
fix nullpointerexception in powerdiode . getbatterystored ( ) when tile be null
changed the visibility of the ` delete _ cache ` preference from final to final and added a new ` TrimCache ` class to enhance cache management
updated import statements from ` com . google . api . client . util . Lists ` to ` com . google . common . collect . Lists
updated return values in BasicAuthAccessControlFactory , ZkBasicAuthAccessControlFactory , and BasicAuthAccessControlFactory to throw NotAuthorizedException instead of false to
added a new abstract method ` schedulePeriodically ` to the ` Scheduler ` class and updated its usage in the ` Scheduler ` class to enhance
updated the call to ` getListOfFilesFragment ( ) . onItemClicked ( operation . getRemotePath ( ) ) ` in ` FileDisplay
added a check for multiple input streams and improved error handling in StreamUtil . java to enhance robustness by ensuring only one input stream is
refactor create _ table and create _ table methods in SessionHiveMetaStoreClient and HiveMetaStoreClient to use CreateTableRequest to
added an ` aborted ` flag to the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker ` to ensure thread
added indent checks for 4 blocks in multiple parser classes to ensure proper handling of indents during parsing
added new classes ` NetworkWifiStatusReceiver ` , ` ChangeWifiStatusEvent ` , and updated ` Infinity . java ` to
refactor condition in FrameGenerator . java for improved readability to enhance code clarity and maintainability
added visibility setting for the collapse handle in the WidgetsBottomSheet to ensure the collapse handle is visible for better user experience
added new files ` Issue475 . java ` and ` XSS . java ` with tests for HTML , JavaScript , and HTML escape functionality
added a conditional check to return early if the unitsToScroll is zero to avoid unnecessary processing when the unitsToScroll is zero
updated condition in Manager . java to check if the size of the contract list is not 1 to ensure that the contract list is not equal to
added methods ` add ` and ` put ` to ` JsonArray ` , ` JsonObject ` , and corresponding tests in ` JsonArrayTest ` , and
added hashCode ( ) method to IPPPrintService and created a new test class TestRaceCond to ensure consistent hash code comparisons for print
replaced ` getIVersion ( ) ` with ` getVersion ( ) ` in ` DB2iDialect ` and ` DB2zDialect `
added a condition to check if the transaction ' s platform fee is greater than zero to ensure that the connection is only enabled when the platform fee
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
refactor input buffer handling in MediaCodecRenderer . java for improved clarity and consistency to enhance code readability and maintainability while ensuring
changed access modifiers of several classes from public to package - private for consistency to enhance encapsulation and maintainability of the codebase
added import statement for Retrofit in Part and PartMap classes to enable Retrofit functionality in the Part and PartMap classes
refactor JsonBuildHelper and ParamsBuildHelper to improve parameter handling for JAVA _ OBJECT _ FULLY to enhance code clarity and maintainability
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the AbstractFloatingView . java file to enhance the functionality of the taskbar ' s
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated alpha calculation logic in ClipAnimationHelper and added hasRecents flag in RemoteAnimationTargetSet to improve animation responsiveness based on
updated the method call from ` createRenderScript ( true , true ) ` to ` createRenderScript ( true , true ) ` to ensure
refactor PMD class to improve code readability to enhance maintainability and facilitate future updates
updated ` PluginListCellRenderer ` , ` PluginListCellRenderer ` , ` PluginManagerActivator ` , and ` PluginTableModel `
[ hotfix ] [ spark ] remove unused import in integrationtestsparkbulkload
replaced ` 0.001 ` with ` LOW _ FALSE _ POSITIVE _ RATE ` in ` KeyChainGroupTest . java
refactor configuration selection logic in Overview . java for improved clarity and functionality to enhance code readability and maintainability by reducing
refactor agentAttache retrieval to use a final variable for clarity to improve code readability and maintainability
added null check before adding data to entrySet to avoid potential NullPointerExceptions when accessing values
kvm : add error message to discoverer if the machine do n ' t have KVM enabled
updated string concatenation for NO _ NAME and NO _ VALUE in ParamAction . java to improve readability and maintainability of the code
updated constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to use Object instead of InvocationContainerImpl to improve
refactor method parameter handling in LocationOpener . java to use a static method stripMethodParams to improve code readability and maintainability by
updated VERSION _ NAME and VERSION _ CODE from " GreatVoyage - v4.2 . 1 - 56 - gaff23
replaced List with HashSet for allowedCommands in OutputFilter . java to improve performance by reducing the number of allowed commands
refactor symbolizer options in SymbolMBLayer . java for improved readability and maintainability to enhance code clarity and maintainability by
ggb - 1343 fix popup size when overlap feature be set
updated error messages in ValidationSuite . java for clarity and consistency to improve readability and maintainability of the code
added a new ` StartingWindowListener ` class and modified the initialization of ` mStartingWindowListener ` to use it to improve flexibility in
added doc comment inherited from MBeanServerConnection in MBeanServer . java to improve code clarity and maintainability
updated exception messages in CheckPackageAccess . java to include PackageAccess and PackageDefinition to improve error handling by providing clearer error messages related to
increased the awaitTermination duration from 30 seconds to 90 seconds in ThreadSafetyTest . java to improve test reliability by allowing more
changed the loggingEnabled variable from a boolean to a Boolean and added a null check for loggingEnabled before setting it to ensure logging is enabled only
added JsonIgnore annotation to the Schema class to indicate that these fields are not included in JSON output
increased timeout from 5000ms to 10000ms in TestNonTxIndexBuilder . java to increase test timeout for improved performance
refactor train method signatures and variables in SimpleNaiveBayesClassifier . java to improve clarity and consistency to enhance code readability
replaced ` CheckHelperModule ` with ` CheckHelperControllerModule ` and ` CheckHelperAuditModule ` in ` CheckDatabaseHelper . java
refactor methods in Prototype class to improve code organization to enhance maintainability and readability of the code
added a null check for tableIsTransactional in SemanticAnalyzer . java to ensure tableIsTransactional is set correctly when the table is not
[ java ] remove unused writefragment method from recordingwriter .
updated CeaDecoder and CeaSubtitle to use Format . OFFSET _ SAMPLE _ RELATIVE and modified return values in CeaDecoder
updated data point group name from " ASC " to " alias " in KairosDatastoreTest . java and added an getAlias method in Datastore
updated currency pairs in VaultOfSatoshiBaseService to use " USD " instead of " CAD " and " DOGE "
hhh - 14836 - fix resource leak in unit test
updated import statements for KafkaSender in ZipkinKafkaSenderConfiguration . java and ZipkinAutoConfigurationTests . java to align with the latest
added new files GwtBinaryIntegrationTest . java and A . java to implement integration tests for GWT binary building to ensure that GWT
added a null check for getQueryBuilderDialog and refactored the loadingCauseLabel visibility logic in BrowserContentPane . java and SQLConsole . java
updated the range of random value values in EnhancedRandomImpl . java and EnhancedRandomImplTest . java to ensure accurate random value retrieval
added XML _ SECURITY _ PROPERTY _ MANAGER constant to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to enable configuration of XML
added new interfaces ` InterfaceWithDefaultMethod0 ` and ` InterfaceWithDefaultMethod1 ` , and created a new file ` InlineDefaultMethod . java
updated return statements in SqliteFieldPredicateView . java to use GLOB instead of LIKE and LIKE to ensure correct handling of GLOB queries
[ dmnassembler ] change access modifier of getDMNProfiles method from private to protected to allow access to getDMNProfiles
fixed - script load can not be run on slave node . # 2329
updated print statements in EspressoLanguage . java and refactored static object . setWordFieldVolatile method in StaticObject . java
updated logging statements to use ` size ( ) ` instead of ` size ( ) ` for improved clarity to enhance code readability and
fmloutboundhandler : do n ' t retain the payload when send a proxy .
added a constant for HTTP _ JETTY _ SERVER _ HANDLERS and updated thread pool configuration to use it to improve flexibility in
refactor shortcut management logic in LauncherModel . java for improved readability and performance to enhance code clarity and maintainability while ensuring
simplified the conversion logic in DefaultHttpClientBinderRegistry for improved readability to enhance code clarity and maintainability
removed the case for the home button in DetailFragment . java to streamline the navigation process by eliminating unnecessary navigation functionality
added a condition to check if the Android Market is present in the play services condition to ensure that play services are only included when the Android
updated TableBlockParser to handle whitespace and zero - length headers correctly to ensure proper rendering of table pipes on outside whitespace and zero - length headers
added a bridgingHeader field and its getter / setter methods in NewNativeTargetProjectMutator , AbstractAppleNativeTargetBuilder , and
refactor PotentiallyDeadCode to utilize a set for unused methods and improve source path handling to enhance code clarity and maintainability by
added diamond finder functionality in Attr . java and created new classes for handling diamond arguments to enhance the handling of diamond
replaced direct calls to ` startSend ( ) ` with ` onStartSendRequest ( ) ` in multiple classes to simplify the code by
removed debug logging from SolrCacheHolder . java to streamline the registration process by eliminating unnecessary logging
added exception handling for AuthenticationException in LdapCtxFactory . java to improve error handling for authentication errors
updated the calculation of zero in Float . floatToRawIntBits from a static float to - 0.0 f to ensure correct handling of
added a localFile ( " conf " , " logback . dev . xml " ) in JoobyMojo . java and Main
added a new file ` JaasEventCheck . java ` that implements ` ApplicationListener ` for handling Jaas authentication failures and success events to
replaced direct instantiation of ` currentPage ` with ` viewsToAnimate ` in ` QuickstepTransitionManager . java ` to improve code read
updated string distance comparison logic in ConjunctionSolrSpellChecker . java and added a new test class ConjunctionSolrSpellCheckerTest .
changed the type of the ` fetchers ` variable from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to
updated log messages in DefaultLeaderElectionService . java for consistency to improve clarity and maintainability of log messages
changed the access modifier of the setAuthentication method from public to package - private to allow external access to the setAuthentication method
cloudstack - 1748 : add a timeout property to wait for the ready command to wait for the storage pool to complete .
updated JDBC _ TABLE and JDBC _ SCHEMA parameters in AbstractJDBCConnectorProvider . java to ensure the correct JDBC schema is used for table parameters
renamed ` sqlUpdateAUP ` to ` sqlUpdate ` across multiple files to improve clarity and consistency in naming conventions
replaced WeakHashMap with synchronizedMap for schemaTypeCache to ensure thread safety during schema creation
refactor header handling logic in StaticServerHttpHeadersWriter to improve readability and maintainability to enhance code clarity and maintainability by redu
added JUnit @ Ignore annotation to LatticeDemo . java to temporarily disable tests that relies on files available from within CMU
added a mkdirs ( ) method call in TestCollector . java to ensure the storage directory is created before proceeding
set chunked streaming mode to 1024MB in StarTreeJobUtils . java to improve performance by reducing unnecessary streaming operations
added new syntax checker classes for BasicSyntaxChecker , MultipleTypeSyntaxCheckerTest , and SingleTypeSyntaxCheckerTest to enhance syntax validation capabilities for
hbase - 11341 update protobuf package to use org . apache . hbase . hbase . thirdparty instead of google . protobuf
added unit tests for the ` BeanPopulatorTest ` class and created a ` Node ` class with recursive structure must not cause stack overflow exception
added IOException to the getRemoteName method signature in AccountingTransceiver . java to ensure proper handling of IOException during remote name retrieval
updated exception handling to include IllegalArgumentException in UserAccountManagerImpl . java and added HTTP client creation in ClientFactoryImpl . java to improve error handling
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for AspectJ mode with protect - pointcut definitions in GlobalMethodSecurityBeanDefinitionParser . java to enhance security support for aspect -
refactor SSL connection handling to use a dedicated method for hostname verification to improve code readability and maintainability by centralizing hostname verification logic
modified the ` remove ` method in ` OHLCSeries ` and added a new ` remove ` method in ` OHLCSeriesTests ` to
updated method calls from ` invoke ( ) . joinInternal ( ) ` to ` invokeUrgent ( ) . joinInternal ( ) `
refactor joint handling logic in World . java to streamline joint edge management to improve code readability and maintainability by reducing redundancy
added a null check for filterPattern and filterString in SearchFilter . java to avoid potential NullPointerExceptions when filterString is null
[ hotfix ] [ test ] move sourcereadertestbase to testutils . source . reader
refactor error handling in DocumentsStorageProvider to use try - with - resources statement to ensure proper resource management and prevent potential resource leaks
added a new interface ` HookDefinition ` and ` JavaHookDefinition ` and corresponding test class ` JavaHookTest ` to facilitate
refactor buffer flush logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability
updated the ` setExoOptions ` method to include a ` allowTs ` parameter and modified the ` setExoOptions ` method to
remove a user identifier from the identifier collection in DMRDecoderState . java to ensure that the user identifier is only removed when a user is
added an ` INVISIBLE ` constant to the ` Color ` class and modified the ` toString ` method in ` RailButtonShapes ` to
updated the null handling logic in CountAggregationFunction and added a new test for null handling in NullHandlingIntegrationTest to ensure correct handling of query
initialize ` deep ` to - 1 in ` InternalTransaction . java ` to ensure proper state management during transaction operations
replaced direct string concatenation with StringUtils . escapeForXML for name formatting to ensure proper handling of XML characters in the output
updated the initialization of ` workDir ` to use ` config . get ( " work . dir " ) ` instead of ` " work "
added a deprecated attribute check in RuleSetFactory and a corresponding test in RuleSetFactoryTest to ensure that the rule ' s deprecated state is
replaced the usage of ` Label ` with ` Opcode ` in ` AMD64DirectCallOp . java ` to streamline the code
added constants for minimum and maximum timestamps in TimeRange . java and created a new test for range construction in TestTimeRangeTracker . java to
refactor BitDocIdSet class to improve code structure to enhance maintainability and readability of the codebase
updated the ` emitMetricsJson ` method to accept a ` String jsonData ` parameter and refactored connection handling to improve code readability and
refactor mime type checks in DetailFragment and GalleryActivity to improve code readability and maintainability to enhance code clarity and maintainability by
added a conditional check for the world ' s remote state before filling the tank to ensure that the tank ' s fill operation only occurs
updated the handling of RuleAnalysisLegacyBuildRuleView in CsharpLibrary . java to handle both CsharpLibrary and PrebuiltDot
http : / / issues . apache . org / jira / browse / amq - 4892 - add support for get pep
added a null check for runtime in IntrinsificationPhase . java to prevent potential NullPointerException when runtime is null
removed unnecessary conditional check for active in MetricTrackingWindmillServerStub and StreamingDataflowWorker to simplify the code and improve readability
pdfbox - 4892 : fix parsing of eof marker , a suggest by valerybokov
added a constructor to LwjglApplet that initializes the LwjglAppletApplication to initialize the LwjglAppletApplication to
simplified the string representation of DockerClientConfig in EnvironmentAndSystemPropertyClientProviderStrategy . java to improve code readability and maintainability by
refactor LDAP password policy handling in LdapAuthenticationHandler and AccountStateHandler to improve clarity and functionality to enhance code readability and maintainability
refactor Int2ObjectCache class for improved performance to enhance performance and maintainability of the code
added a private String field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated the ` LdapUtils ` to use it to
refactor Readable class for improved readability to enhance maintainability and readability of the code
pdfbox - 4071 : use testsupport . WITH _ FONT instead of java . nio . charset
updated the menu icon from " share _ menu _ item " to " ic _ menu _ share " in CaptureActivity . java to ensure the
updated JVM _ MAJOR _ VERSION and JRE _ IS _ MINIMUM _ JAVA9 to use StringTokenizer for parsing JVM specification version to
replaced direct calls to ` getNetworkTimeout ( ) ` with ` getNetworkTimeout ( ) ! = Integer . MIN _ VALUE ` in ` Pool
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced HashSet with ArrayList for filteredSet and filteredList in Enclosed . java to improve performance and readability of the code
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , and AbstractCasProtocolValidationSpecification classes to ensure proper method overriding
updated the variable name from ` png ` to ` jpg ` and ` gif ` in ChartProvider . java to improve clarity and consistency
replaced ` getPath ( ) ` with ` getParent ( ) ` in ` ImportMenuItem ` , ` AppendDatabaseAction ` , and ` Open
updated the return statement in JavacParser . java and added a new ExtraSemiTest . java file to improve code clarity and
added date handling for user creation in JpaQueryCreator and modified User class to utilize a timestamp for user creation to enhance user query functionality
refactor Test15FloatJNIArgs class for improved readability to enhance maintainability and facilitate future development
removed unused imports and updated version formatting in mmm plugin . java to streamline code and improve readability by eliminating unnecessary dependencies
updated the substring index from 2 to last in MockProcessContext and added a new test for encryption and decryption in TestMockProcessContext to ensure
[ java ] throw aeronexception if call be not permitted during callback .
added null check before merging dependencies in OpProcFactory . java to avoid potential NullPointerExceptions during dependency merging
added a timeout parameter to the @ Test annotation in SslBytesServerTest . java to allow more time for the test execution
refactor Peer class to improve code structure to enhance maintainability and readability of the codebase
added ` getRealtimeSegment ( ) ` and ` toHistoricalIndexSegment ( ) ` methods to ` RealtimeIndexingCoordinator ` , and
added a null check for exportedData before writing to the output to avoid potential NullPointerException when accessing the viewCaptureDataSupplier
refactor popup handling in RecyclerViewFastScroller to use getScrollThumbRadius ( ) and improve touch position calculations to enhance user experience by
updated string formatting in BuckWSServerPortUtils . java and added a check for tool window instantiation in BuckEventsConsumer . java to
added a check for Windows platform before setting the preventSleep checkbox in GeneralTab . java to ensure the preventSleep checkbox is only enabled for Windows
replaced ` javax . servlet . ServletException ` with ` jakarta . servlet . HttpServletResponse ` in ` HttpConfigurationAuthorityOverrideTest .
added cropping support for vertical bar layout in QuickstepAppTransitionManagerImpl . java and adjusted window dimensions in FloatingIconView . java
added ` setFullScreenExclusiveModeState ` method to ` XWindow ` , ` XWindowPeer ` , and ` X11GraphicsDevice
add unit tests for UMSUtils in StringUtil . java and created UMSUtilsTest . java to ensure correct parsing of played duration strings
added credentials handling for DAG credentials in DagUtils and TezTask classes to enhance credential management for DAGs in the application
camel - 1649 : use map . entry instead of map . keySet ( ) instead of map . keySet ( ) .
trim whitespace from the current thread ' s name from the string to ensure that the thread ' s name is trimmed before setting the current name
updated the description message from " Not yet " to " Not yet " in GpsMainActivity . java to clarify that the description
refactor Job class implementation to improve code readability and maintainability
added a new abstract static class ` Unused ` and a test method ` testUnusedType ( ) ` to the ` Main ` class to
updated the key for " HBASE _ MASTER " from " hbase _ master _ host " to " hbase _ master _ hosts "
deleted the EventReaderDeserializer , EventWriterSerializer , and EventReaderSerializer interfaces to remove unused interfaces to streamline the codebase
renamed ` GenericRecord ` to ` List < GenericRecord > ` and updated the ` performJoin ` method to return a list of `
updated the maximum delegate lock period handling in ProposalUtil , CommonParameter , and DynamicPropertiesStore classes to allow more than 10512000 milliseconds to
change the type of ` networkRateMbps ` and ` networkRate ` from ` int ` to ` Integer ` in ` Nic
added initialization and applySpecification method to CmcExchange class to ensure proper handling of exchange specifications in the CmcExchange class
added a check for the presence of the " seed . node . ip . list " configuration in the GossipLocalNode class to ensure that the
added a new property ` hazelcast . client . tpc . enabled ` and created a new test class ` ClientTpcConfigTest `
update swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 in multiple classes to reflect the latest version of
refactor the division logic in MutableBigInteger and add a new ModInvTime class for modular inverse calculations to improve code clarity and ensure
refactor key assignment logic in NamedObjectList . java to improve readability and maintainability to enhance code clarity and maintainability by reducing
updated cleanupEmptyDir and MmMajorQueryCompactor and QueryCompactor classes to use cleanupEmptyTableDir instead of cleanupEmptyDir to
refactor AsyncCache and Cache classes to improve code organization to enhance maintainability and readability of the codebase
added import for RCFileInputFormat and registered RCFileInputFormat in SerializationUtilities . java to enable processing of RCFileInputFormat in the
added methods to retrieve Java types and category of a Column in TypeMapperComponent . java to enhance functionality for handling column types in the application
added error handling for invalid host header parsing in Request . java and updated test cases in RequestTest . java to improve robustness and ensure proper
updated ShadowTimeZoneFinderTest and ShadowTimeZoneFinder to include maxSdk = P and improved time zone lookup functionality to enhance test coverage and ensure
modified the ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in ` StandardOp . java ` to improve the handling of outgoing values
changed variable names from ` core . segment ` to ` si . name ` in ` SegmentCoreReaders . java ` and ` SegmentReader .
added ` hasMainThreadProfile ` methods to ` AggregateDao ` , ` AggregateDao ` , ` TransactionDao ` , and ` TransactionCommon
added a check to ensure annotation definitions are not allowed in a Buck rule with required _ for _ source _ abi = True to improve error
replaced " greekLowerCase " and " irishLowerCase " with " greekLowercase " in multiple filter factory classes to
refactor HSSFSheet and Sheet classes to improve code organization to enhance maintainability and readability of the code
updated imports for LuceneSearchRequestProcessor and DiscoverySearchRequestProcessor in multiple servlets to ensure compatibility with DSpace 4.0 and improve
added a list to manage the list of UUIDs in BasicDateTime . java to enhance the functionality of the list of UUIDs in the application
updated SurfaceSyncGroup instantiation to include the " TaskBarController " parameter to enhance the synchronization capabilities for the taskbar controller
datamongo - 2392 - add integration test for gridfs file store and find by uuid
added unit tests for ` getTotalSize ` and ` bytesSoFar ` in ` ShadowDownloadManager ` and ` ShadowDownloadManager ` to ensure correct
refactor character validation logic in TextField . java to improve clarity and functionality to enhance readability and maintainability of the code
added a check to return early if the target is equal to prevent unnecessary processing when the target is equal
modified the ` afterSetStatements ` method in ` Lower ` , ` BlockLexicalContext ` , and ` BlockLexicalContext ` classes
added hashCode ( ) method to IntervalXYDelegate and modified hashCode ( ) method in XYSeriesCollection to use HashUtilities for improved hash code
refactor ClientQueueDisruptionTest to use JUnit ' s After annotation and improve cleanup method naming to enhance code clarity and maintainability
refactor variable names and method signatures in CloudWatchAppender and CasPersonDirectoryConfiguration to improve code readability and maintainability
replaced ` serializeSpecialDoubleValues ( ) ` method with ` serializeSpecialFloatingPointValues ( ) ` method in ` Gson . java `
added waitToProduceOneBlock and waitProduceNextBlock calls in HttpTestZenToken007 and WalletTestZenToken007
added null checks for subtag and privateuse in Locale and LanguageTag classes to improve robustness by preventing potential NullPointerExceptions during language tag
added a configuration option to specify whether or not the management server is allowed to SSH into KVM Agents to enhance security by allowing users to
[ hotfix ] [ runtime ] remove public access modifier from SchedulerWhen . java
removed unused import of PagerSlidingTabStrip from EmojiKeyboard . java to streamline code by eliminating unnecessary dependencies
added a condition to check if the input string contains " - " in the filter to ensure that only valid input strings are processed in the filter
updated sort columns in BrowserContentPane and DataBrowser classes to use " Natural column order " instead of " natural order " to ensure
removed unnecessary array copying from Utils . java to streamline the code by eliminating unnecessary array copying
updated the write method to use htmlEncodeButNotSpace instead of htmlEncodeButNotSpace to ensure proper handling of space characters in the output
updated the topic check from " / " to " smarthome / items / " in ItemStateTriggerHandler . java to ensure the topic
removed unnecessary synchronized blocks in FastHttpDateFormat . java to improve code readability and maintainability
added thread pool management for file move operations in Hive . java to improve resource management and ensure proper resource management during file move operations
added a new ` trigger ` method to the ` WrapTimer ` class to provide a timer task based on a specified period to facilit
added support for ` LOCAL _ DATE ` and ` LOCAL _ DATE ` types in ` TypeStringUtils ` and created corresponding test cases in ` Type
added a verbose flag to the error logging in AbstractStatusReporter to control the verbosity of error messages based on the execution options
updated ClickStartHandler initialization to include a new boolean parameter for menu visibility in Header . java and ItemControls . java to enhance user experience by
added validation to ensure vpn connection can be esitablished between same account and customer gateway to ensure that the vpn connection can be esit
refactor error handling in CursorReadingTask and add unit tests for error handling in CursorReadingTaskUnitTests to improve code clarity and ensure
added logging for encrypted PDF files in PDFBoxThumbnail and PDFFilter to improve error handling for thumbnail and text extraction issues
refactor CuratorZookeeperClient to utilize a single thread executor for child listeners to improve resource management and ensure proper resource management during child
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest files to improve code organization and maintainability
updated the ` deleteItem ` method to use ` id ` instead of ` getSelectedItemPosition ( ) ` in ` HostsList . java `
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
updated the ` replaceOrderBulk ` method to return a list of ` BitmexPrivateOrder ` instead of ` Collection < ReplaceOrderCommand
modified the ` enterDefault ` method to ` enterIdentNode ` and added a new ` enterFunctionNode ` method in ` FindScopeDepth
added a new file ` J9ConstantHelper . java ` and modified ` ObjectHash . java ` to use it to utilize a static
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` for testing concurrent invocation behavior to ensure that concurrent modification exceptions are
added methods to notify the roster offline and resource management in the BaseTransport and TransportSessionManager classes to enhance user experience by allowing users to
updated method calls to use ` getOverlayedProperties ( ) ` instead of ` getProperties ( ) ` in ` MapOperator . java ` and
removed unnecessary whitespace in the loadHandle method call in CodeGenerator . java to improve code readability and maintain consistency
added null check for extTypeCustomDesers before initializing the ExtensionTypeCustomDeserializers and modified the copy method in MessagePackFactoryTest to
added a warning log level to the mock server in the Main . java file to provide more detailed logging for debugging purposes
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and improve readability
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline the code
changed the type of ` scoreMap ` from ` Map < Float , Float > ` to ` Map < String , Map < Float , Float
updated the condition to check for negative values in U64 . java to ensure that the data is less than or equal to zero to prevent potential
updated the headline style for the MainViewModel to enhance the visual appearance of the MainViewModel
added a boolean variable ` didSupportDarkText ` to the notifyChange method to include a condition to check if the dark text is
[ hotfix ] [ runtime ] fix checkpointrequestdecider # choosequeuedrequesttoexecute when there be too many pending
updated MAX _ POOL _ SIZE and KEEP _ ALIVE _ TIME _ MILLISECONDS to CORE _ POOL _ SIZE and modified
updated filter logic in AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver to use ` anyMatch ` instead of ` filter ` to improve clarity
added test requirements for notWindows ( ) and notArm ( ) in OpenCVImageFactoryTest . java to ensure that tests fail on Windows
http : / / issues . apache . org / jira / browse / amq - 4892 - add option to prefetch prefetch to
[ py4j ] make getreturnvalue ( string , Gateway gateway ) throw throwable instead of null
added @ Repeatable annotation and @ Target annotation with @ Issues annotation to enable processing of Issue objects in the application
updated user properties key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor and BlueprintConfigurationProcessorTest
updated socket connection logic to use a null check for the " socksProxyHost " property to improve robustness by preventing potential null pointer
[ hotfix ] [ javadocs ] fix typo in slotstatus
removed unnecessary import of ClassUtils in ReflectionUtils . java to streamline code by eliminating unnecessary dependencies
replaced ` HashSet ` with ` LinkedHashSet ` for ` _ excludeProtocols ` , ` _ excludeCipherSuites ` , and ` _ excludeCipher
added a static variable ` systemResource ` and updated its assignment logic in ` Resources . java ` to improve code readability and maintainability by
updated the ` PLAINTEXT _ SEGMENT _ EXTRA _ SIZE ` constant in ` StreamingAeadDecryptingChannel ` and ` StreamingA
added a test for handling invalid fallback exceptions in ServerMvcIntegrationTests to ensure proper handling of invalid fallback URIs in circuit breaker routes
refactor SSL connection handling in AppPage . java to use a new SSLConnectionSocketFactory for improved security to enhance security by enabling
replaced the call to resetBytesReadCounter ( ) with a call to resetBytesReadCounter ( ) in PerformanceTest . java to
added a new boolean field ` preferAES ` and its getter / setter methods in ` ProtectionPolicy ` and ` StandardProtectionPolicy ` classes
camel - opentelemetry : use log instead of system . out instead of system . out
[ ec2 ] remove elbintegrationtest # testloadbalancerinstanceoperations from ec2
renamed the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to clarify the
added error handling for file creation in DiacriticTest . java to improve robustness by handling potential InvalidPathException during file creation
hhh - 14813 skip timeout on oracle 11 when use a driver other than ojdbc6
updated texture file handling and exception handling in TextureUnpacker . java to improve error handling and ensure accurate file path resolution
refactor AmbariManagementControllerImpl to improve thread safety and lock management to enhance code reliability and maintainability while ensuring thread safety during
refactor FilterChainProxy , DefaultFilterInvocationMetadataSource , and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a new test method ` testResultSetShouldNotCloseStatement ` and modified ` HiveQueryResultSet ` and ` HiveStatement ` classes to ensure
refactor InputStreamBodyGenerator and ChunkingTest to improve input stream handling and test cases to enhance code clarity and ensure proper handling of input
refactor database retrieval logic in ClusterSchemaManager to use a list of pre - deleted databases to improve code readability and maintainability by central
added a check for the presence of " chunkedWriter " in the pipeline before writing the res to ensure proper handling of chunked responses by removing unnecessary
updated item deletion logic in EnhancedBrowseFragment and added deleteButton functionality in FullDetailsFragment to enhance user experience by providing a confirmation button for
refactor CSSBank and RuleParser classes to implement a new interface for rule management to improve code organization and maintainability by centralizing rule management
added a try - catch block around the initialization process in JcaTlsCrypto . java to handle potential exceptions to improve error handling and provide clear
added a new Java file ` TestMonomorphicObjectCall . java ` and ` Object . java ` with tests for object finalizeing to
replaced multiple calls to ` removeMetaDataSource ` with ` toFront ( ) ` in ` DataBrowser . java ` and ` Desktop
hbase - 17446 fix nullpointerexception in defaultmemstore . shouldseek ( )
[ hotfix ] [ runtime ] fix typo in taskmanagerconfiguration . getlocalstatedirectories ( )
updated AlterTimeSeriesStatement to accept a boolean parameter and modified its initialization in AlterTimeSeriesStatement to improve flexibility in handling time series statements
updated regex pattern in Condition . java and added a new MatchTextConditionTest class to improve text matching functionality to enhance flexibility in regex matching
added a try - catch block around the retrieval of the RoutingTableBuilder in HelixBrokerStarter . java to handle potential exceptions when accessing
refactor parameter map handling in HttpClientIntroductionAdvice . java to improve clarity and consistency to enhance code readability and maintain
( chore ) camel - jms : use char [ ] instead of String for password
bugfix # 2327 , do n ' t invalidate session if the path be not recursive
removed the methods ` toSortedListWithCounts ` and ` isUniformDistribution ` from the ` Counter ` class to streamline the code by
updated the ` initialize ` method to return a ` original ` SimulationStatus ` instance instead of creating a new instance to improve clarity and
added a method to retrieve the current time in LLVMAMD64SyscallClockGetTimeNode to improve code readability and maintainability
updated JSON object deserialization method in PrettyPrinter . java to use " var " instead of " vartype " to improve code clarity and maintainability
added null check for indexToNode [ currSize ] before initializing it to avoid potential NullPointerExceptions when indexToNode [ currSize ] is null
refactor DatagramSocket to simplify filtering logic and improve read / receive logic to enhance code clarity and maintainability by encapsulating filtering logic
test : migrate testquerydns to junit 5 ( # 1369 )
added a new file NutchServerInfo . java that defines date and configuration fields for NutchServerInfo to facilitate
replaced ` OffsetAttribute ` and ` PositionLengthAttribute ` with ` AttributeSource ` in ` EdgeNGramTokenFilter . java ` to
added timestamp handling in CqlInserter , ThriftInserter , SettingsColumn , and SettingsColumn classes to enable timestamp generation based on
updated prime strength checks in DSAParameterGenerator . java for improved clarity and consistency to enhance code readability and maintainability by redu
replaced ` floatToIntBits ` method with ` floatToIntBits ` and ` floatToLongBits ` methods in ` NumberUtils ` and `
updated the mask check in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking and ensure correct
added handling for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper to improve error handling for SQLException and DataIntegrityViolationException
removed redundant parameters from method signatures in ConsumerManageProcessor . java and RemoteBrokerOffsetStore . java to simplify method signatures and improve code clarity
added a new method ` addTab ` and ` insertTab ` to the ` Tabs ` class and refactored related methods to improve
replaced the size of ` toArray ( new Object [ 0 ] ) ` with ` toArray ( new Object [ 0 ] ) ` in multiple
[ hotfix ] [ runtime ] expose taskmanagermanagerruntimeinfo in mockenvironment
refactor conditional checks in MavenVisitor . java for improved readability to enhance code clarity and maintainability
updated test cases in ZookeeperDataChangedListenerTest to use " MOCK _ APP _ SECRET2 " and " MOCK _ NAME
added a new file FormatCheckingTest . java that tests the Java process builder to verify that the class name is illegal to ensure that the Java
updated the line number assignment logic in CodeGenerator . java to ensure correct handling of line numbers during method execution
added a try - catch block to handle potential exceptions when adding the service property to the list to improve robustness by preventing potential NullPointerExceptions
added methods to create a RadioButton with specified text , icon , and command options in RadioButton . java to enhance user interface functionality by allowing
increased the cache size initialization in LRUCache and changed the CHUNK _ METADATA _ CACHE _ SIZE from 100000 to 10000 to improve cache
change visibility of DEFAULT _ CAPACITY from private to public in SimpleChannel and ChannelParser classes to allow external access to the DEFAULT _ CAPACITY
added null check for symbolicName before retrieving its value to avoid potential NullPointerException when the symbolicName is null
updated logging messages to include a string representation of the usemode property and added external argument handling in ModeContribution . java to improve clarity
added error handling for adding and removing shutdown hook in IOManager and updated sleep duration in YARNSessionFIFOITCase to improve robustness
rename ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` to improve clarity and consistency in naming con
added a null check for notPropagatedHeaders in AbstractMessageProducingHandler and updated header propagation logic in AbstractReplyProducingMessageHandler to
refactor CompareMode class to improve code readability to enhance maintainability and facilitate future updates
added HasTests interface implementation to RustBinaryDescription and RustLibraryDescription classes to enhance functionality by allowing tests to be retrieved based on dependency
updated placeholder and error drawable resources in FileMessageVH . java to improve clarity and consistency in drawable resources
refactor OnExitTest class to improve code readability to enhance maintainability and facilitate future development
added a onUserPreferenceChanged method to recreate the taskbar when the user preference changes to ensure the taskbar is refreshed when the user preference
added handling for Ibm VM and heap dump functionality in HeapDump . java to ensure compatibility with Ibm VM and improve memory management
http : / / issues . apache . org / jira / browse / amq - 4892 - ensure proper resource cleanup
simonstewart : change the driver name from FIREFOX to IE in SingleTestSuite . java and add new methods for
updated the ` DN _ IteratorToFor ` and ` SAFE _ COLLECTION _ METHODS ` to use Java 5 for - loop
set the application state to UNAVAILABLE in JmxApplicationProvider . java to ensure the application is not in use by the application ' s state
refactor buffer position and limit calculations in ByteBufferAs , Direct , Heap , and StringCharBuffer classes to improve code readability and maintainability
replaced ` toUri ( ) ` with ` toUri ( ) . toString ( ) ` in ` ConditionalResolverMergeFiles . java `
updated array deletion logic in NativeArray , ArrayData , ArrayFilter , DeletedArrayFilter , ObjectArrayData , and SparseArrayData classes to
changed enum visibility from package - private to public in VirtualAuthenticatorOptions . java to allow external access to the enum for better encapsulation
updated document handling in TestMultiPhraseQuery . java to use a new Document instance and modified assertions in TestMultiPhraseQuery . java to improve
updated the ` assignTickets ` method in ` ReservationController . java ` and modified the filtering logic in ` TicketHelper . java ` to
added a thread reference to the onTimeout thread in HttpChannelState . java to ensure thread safety during timeout handling and prevent potential memory leaks
updated logging levels in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , TrackingSocket , and ServerTimeoutsTest to improve
refactor package - info . java files for mmm and ppp packages to improve code organization and maintainability
updated the read method to include a conditional check for consistencyForPaxos in StorageProxy . java to ensure proper consistency handling for local serial
added a condition to check if the model name contains " Home " and included a serial number property in HeosDiscoveryParticipant . java to ensure
added a new ` Wait ` class and modified ` PlainSelect ` , ` SelectDeParser ` , and ` SelectDeParser ` classes to
refactor node and edge data handling in Neo4j to use AttributeController for better attribute management to improve code clarity and maintainability
added a null check for the from variable in SessionManager . java to avoid potential NullPointerExceptions when the from variable is null
nifi - 1746 : move rocksdb . metronome to controller . repository instead of rocksdb
updated the method to retrieve the " IS _ GRANTABLE " value from the results object to ensure the correct retrieval of the IS _ GR
updated the condition to check if the URL starts with " javascript : " to ensure that the URL does not start with " javascript : " to
added a condition to check for the " java . awt . headless " system property in CxfMtomConsumerTest . java to ensure
added a check for the presence of a column descriptor before adding it to the admin to ensure proper handling of column modifications based on the presence of
added import for Disposable and implemented it in Texture class to enable disposable functionality in the Texture class
added null checks for ` tldBundleLocation ` and modified ` WebBundleDeployerHelper ` to use ` WebBundleDeployerHelper ` to
refactor GoQuorum compatibility checks to use a new method ` checkGoQuorumGenesisConfig ` and improve error handling to enhance code clarity
replace IOException with Throwable in HttpInput . java to improve error handling and provide clearer error messages
added a condition to check if the country is not " JP " in the list to ensure proper handling of change in era causes issues during
updated ApiOperation annotations to use ` HostResponse . HostResponseWrapper . class ` instead of ` Wrapper . class ` to ensure consistency in API
updated equality checks in FilteredQuery to use getBoost ( ) instead of query to ensure correct comparison of query and filter values based on
removed unnecessary whitespace in the constructor parameter in FileMenuFilter . java to improve code readability and maintain consistency
[ geogebra ] fix texteditadvancedpanel to show geogebra debug
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that CMS class unloading
added a check for empty entities before returning it in SpongeForgeEventFactory . java to ensure that the event is only returned when
renamed ` KeyMappingPreparedStatementSetter ` to ` ItemPreparedStatementSetter ` across multiple classes to improve clarity and consistency in naming conventions
replaced ` Range ` with ` AbstractBounds ` in ` CompactionsTest . java ` to improve code clarity and maintainability by using
added null check for the ' type ' attribute in MiniAapt . java and created a corresponding test in MiniAaptTest . java to
added a new ` SpELJudge ` class and modified ` LIKE ` and ` SPEL ` operator handling in ` OperatorEnum `
[ hotfix ] [ runtime ] fix checkstyle violation in localexecutionplanner
replaced the usage of ` Service . providers ( Profiler . class ) ` with ` Lookup . getDefault ( ) . lookup ( Profiler . class
added import statement for assertEquals in ConscryptTest . java to improve code readability and maintainability
updated attribute resolution logic in AttributeResolution9 . java and changed start _ offset and length variables in ShadowArscAssetManager9 . java to
updated the number of source and target options from " 1.5 " to " 6 " in the fullOptions list to ensure compatibility with the
[ calcite - 3842 ] add support for only metadata in push project into table source
added imports and sorted localized names in AboutActivity . java to ensure proper sorting of localized names based on language look up table
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a conditional check for live streaming before posting the shared preferences to ensure that the shared preferences are only refreshed when live streaming is enabled
added an exception parameter to the MappingException constructor in AuditConfiguration . java to improve error handling for better debugging
[ hotfix ] [ test ] fix flaky test of fileconsumerpollstrategystoponrollbacktest
replaced instances of ` AbstractType [ ] ` with ` AbstractType < ? > ` in ` SchemaLoader ` and ` DynamicCompositeType
added support for transport - based URLs in GitClientApplication and refactored RepositoryUrlPanel to use it to enhance flexibility in managing transport
added a new ` getDelegatorName ( ) ` method to the ` TouchInteractionService ` class and implemented it in multiple input consumer classes
updated version handling logic in ChangeParentPom . java to check for null mavenMetadata before retrieving available versions to improve robustness by preventing
added a check for " Disabled " in TestLargePageUseForHeap . java to ensure that the test correctly handles cases where " Disabled "
cloudstack - 218to22 : do n ' t skip event migration if the db do n ' t exist
http : / / issues . apache . org / jira / browse / amq - 4892 - fix test failure on window
removed the requireInitialized ( ) method from ObjectStreamClass . java and created a new test class TestObjectStreamClass . java to streamline
updated condition checks in ZoneAwareDiscoveryFilter to check for null values before proceeding to improve robustness by preventing potential null pointer exceptions
change log level from error to warn in OpenTracingTracer . java to improve clarity and consistency in logging output
added a toString ( ) method to the Generator class to provide a clearer representation of the number of registered generator instances
refactor URI handling in URI . java and add new test cases in Test . java to improve code readability and ensure correct handling of URI
added null and empty checks for resources in ClusterControllerImpl . java and created a new test for resource retrieval in ClusterControllerImplTest . java
refactor AccepttoApiUtils to improve null checks and error handling to enhance robustness by preventing potential NullPointerExceptions during API response processing
updated vertex buffer allocation logic in VertexBufferObject . java to ensure compatibility with Android version 5 and improve performance
refactor SybaseASADatabase class to improve code organization to enhance maintainability and readability of the codebase
added a ` forceProjection ` flag to the ` HashJoinInfo ` constructor and updated related methods to allow for backward compatibility with the ` Hash
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to the ` sd ` variable for better
added FLAG _ ONE _ SHOT , FLAG _ MUTABLE , and FLAG _ IMMUTABLE , and modified PendingIntent creation logic
added methods to set and append read column IDs in HiveFileFormatUtils and HiveInputFormat classes to improve handling of column ID configurations and ensure
replaced ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper . java
added a new ` DisplayTemporaryToast ( ) ` method to display temporary toast in ` SavedExperiments . java ` to enhance
added a version check in ServiceModule and a corresponding test in ServiceModuleTest to ensure the service version is correctly set when the service is resolved
added a new test class ` RawSerializationTest ` to validate JSON serialization functionality to ensure correct serialization of JSON strings in Gson functionalities
rename ` SeleniumServer ` to ` SslCertificateGenerator ` across multiple files to improve clarity and consistency in naming conventions
added a loop to iterate over the list of replies in ExpansionViewHelper . java to ensure that the statusView is only displayed when there
increased the timeout duration from 3 seconds to 60 seconds in ExpiringUrlCacheTests . java to improve test reliability by allowing more
added a new test method ` testNGramFilterPayload ` to validate the behavior of ` DelimitedPayload ` and ` NGram
refactor AclImpl class to improve code readability to enhance maintainability and facilitate future updates
refactor test methods in EasyRandomTest for improved clarity and consistency to enhance code readability and maintainability by consolidating test cases
added exception handling for RebootAnswer , StopAnswer , and updated connection initialization in CitrixResourceBase to improve error handling and ensure proper connection
http : / / issues . apache . org / jira / browse / amq - 4892 - use a thread - local thread
replaced direct calls to ` parent ` and ` actor ` with a new method ` ancestorsVisible ` to improve code readability and maintainability
added logging for rolling - update failures in RollingUpdateOpFactory . java to improve error handling for deployment group failures
[ hotfix ] [ table - planner - blink ] fix nullpointerexception in sinkprovider
added error handling for BadCredentialsException in DaoAuthenticationProvider and created a new ` AuthenticationFailureUsernameNotFoundEvent ` class to handle authentication failures
refactor AtMostXVerificationTest . java for improved readability to enhance maintainability and facilitate future development
updated the default QType assignment from OldLuceneQParserPlugin . NAME to QParserPlugin . DEFAULT _ QTYPE in QueryComponent . java
added Locale . US to the SimpleDateFormat instantiation in WeekDateTest . java to ensure consistent date formatting across different locales
added ` isInitialized ( ) ` method to ` ILanguageServer ` and implemented a new ` Main ` class in ` LocalsCompletionTest _
updated the ` clientAPITokenIntegrationTest ` to use ` shouldHaveIdToken ` instead of ` idToken ` to improve clarity and
added beginTransaction ( ) and setTransactionSuccessful ( ) methods to DatabaseAdapter and endTransaction ( ) methods in DatabaseAdapter to improve transaction management and
refactor byte array handling in MimeType . java to use ByteArrayOutputStream instead of byte array to improve performance and readability of the input stream
refactor exception message handling in MessagingTemplate . java to improve clarity and consistency to enhance code readability and maintainability by reducing red
added a method ` isAcceptable ( SourceFile , P p ) ` to the ` AutoFormatVisitor ` class to check if the source
updated TestIndexWriterMergePolicy to set maximum buffered documents and RAM buffer size to improve performance and memory management during index writing operations
added a new test method ` updateWits ` to ` Manager ` and ` ManagerTest ` classes to ensure that the ` WitnessCaps
added error handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by handling potential NoSuchElementExceptions
[ hotfix ] remove log4j . level from flumenode and flumeshell
added authentication credentials and refactored HTTP request assertions in BasicAuthIntegrationTest . java and DaemonStream . java to improve test reliability and
replaced HashMap with LinkedHashMap in DependencyUtil . java to improve performance and reduce memory usage
added InternalErrorMapper to JerseySupport and updated related imports in JerseySupport . java to enhance error handling and provide
refactor header validation logic in Http2TestBase . java to use a new method to improve code readability and maintainability by reducing
updated system property handling in System . java to handle different Java versions to ensure compatibility with different Java versions and improve compatibility with newer Java versions
changed method names from ` String ` to ` CharSequence ` in ` StringSubject ` , ` StringTest ` , and ` StringBuilder ` classes to
added a new method ` toBeInvestigated ` to the ` CheckGraalIntrinsics ` class and event writer in ` CheckGra
rename IntUtilsTest class to PrimUtilsTest in IntUtilsTest . java to improve clarity and consistency in naming conventions
updated the connection factory property to use a variable for compaction to improve code readability and maintainability by reducing redundancy
refactor DeploymentOptions class to improve code readability to enhance maintainability and facilitate future updates
updated the ` updateTextButtonWithDrawable ` method to use ` Drawable . ConstantState ` instead of ` Drawable . ConstantState ` to improve
replaced ` ByteArrayInputStream ` with ` StringReader ` in ` XmlParser . java ` and ` YamlParser . java ` to improve resource management and
added support for handling coalescing child expressions in RexNodeConverter and SqlFunctionConverter to enhance the handling of coalescing
camel - 16400 : camel - hl7 - remove unused test method from camel - dataformat
refactor JavassistProxyFactoryFactory to use the current context class loader instead of a hardcoded one to improve code clarity and
added synchronized keyword to DefaultDateTypeAdapter constructor and updated constructor parameters accordingly to ensure thread safety when accessing the DateFormat instance
refactor method signatures in DocumentUtil . java for consistency and clarity to improve code readability and maintainability
refactor HttpClientRequestBase to simplify URI handling and query parsing to improve code readability and maintainability
added a filterOldEntries method to filter old entries based on the size of entries to ensure that entries are only processed when there are no entries
change log level from fatal to warn in FSHLog . java to improve log clarity for better debugging
refactor NodeMap class to implement Iterable < T > instead of an Iterable < T > to improve type safety and maintainability of the Iterable
updated import statements and refactored predicate handling in DiscoveryClientRouteDefinitionLocator . java to improve code clarity and maintainability by using a
added a null check for fields before adding operations in MongoRecordReader and modified return logic in RexToMongoTranslator to ensure that fields are
added a check to add a new JID if the admin list is empty before adding it to the list to ensure that the admin list is
replaced ` MultiFields . getFields ( ) ` with ` getSlowAtomicReader ( ) ` in multiple files to ensure proper handling of null
updated the return statement to use ObjectHelper . className ( bean ) instead of ObjectHelper . getIdentityHashCode ( bean ) to improve clarity and
removed line number check from GroovyParserVisitor and simplified the return statement in GroovyParserVisitor . java to improve code clarity and maintainability by
svm : remove unused code from frameinfoqueryresult and javalangsubstitutions
increased timeout values from 100ms to 300ms in SedaBlockWhenFullTest . java to improve test reliability by allowing
added a new file ` org . apache . lucene . core . testresources ` to the package - info . java file to provide a
updated the calculation of read length in MessageUnpacker . java to ensure the position does not exceed the buffer size to improve performance by avoiding
updated import statement from ` io . micrometer . common . lang . Nullable ` to ` io . micrometer . core
updated the SQL query to include the user serial parameter in IconDB to ensure that the database queries correctly include the user ' s serial number for
http : / / issues . apache . org / jira / browse / amq - 4358 - fix the issue of the default
added a new boolean parameter ` isClassfileOnly ` to the ` addWhitelistedResource ` method across multiple classes to ensure whitelisted resources are only
added a method ` fixBaremetalForeignKeys ` to ` Upgrade410to420 . java ` to fix foreign key constraints in the
removed the IJava2DRenderer interface from the Java2DRenderer class to simplify the codebase by eliminating unnecessary interfaces
added onTearDown method to handle offload buffer emptying when the audio sink is closed to ensure proper handling of buffer emptying when
refactor UpstreamCacheManager to use a scheduled thread pool for improved delay handling to enhance performance and maintainability of the upstream management process
refactor StreamType class for improved readability to enhance maintainability and clarity of the code
updated assertions in Recording . java to include a more descriptive message to improve clarity of assertion messages for better debugging
replaced ` @ RequiresAdminRole ` with ` @ RequiresAdminRole ` in ` FilestorePage ` and ` RootPage ` classes
camel - 15836 : camel - elasticsearch - disable test that be fail due to camel - elasticsearch
added a condition to check if the class is the Lifecycle class before processing the method to ensure that the method is only invoked when the class is
replaced " leftButtonAltcoin " and " rightButtonFiat " with " buyAltcoin " and " sell
camel - 1748 : camel - restlet - add test for invalid url .
refactor methods in createNextBlock for consistency and clarity to improve code readability and maintainability
updated BTreeMapJava and JSR166Test classes to use serialBytes2 and serialCloneNoCatch methods instead of serialClone to improve
added null check before logging error messages in RuleEngineImpl . java to improve robustness by preventing potential NullPointerExceptions
updated conditional statement in Main . java to improve readability to enhance code clarity and maintainability
replaced ` mFilesAll . indexOf ( file ) ` with ` mFiles . indexOf ( file ) ` in ` LocalFileListAdapter .
deleted the PlainVerifier . java file to remove unused JWSVerifier . java to streamline the codebase
added a condition to close system windows when triggered from AltTab is triggered to ensure proper resource management and prevent potential memory leaks
updated dialog handling in DialogFragmentIT and OCFileListBottomSheetDialog to use BottomSheetBehavior instead of BottomSheetBehavior to improve user experience
added a deprecation warning to the MimeUtil . parseCharset method in RestAdapter . java and MimeUtilTest . java to suppress deprecation warnings for
added a call to the super . deinitialize ( ) method in TextField . java to ensure proper initialization of the TextField instance
replaced instances of ` LogFormat ` with ` TestUtilities . serialised ` in ` LogFormatTest . java ` to streamline serialization
[ geot - 7767 ] fix group by ( [ 8 , 737 ] ) sql parsing error
added a check for negative array size in JAXWSExceptionBase . java and modified argument handling in JAXWSExceptionBase . java to improve error
test : migrate ctunresolvedimporttest to junit 5
increased the join duration from 10 seconds to 60 seconds in T6567415 . java to increase the join duration for better performance
[ hotfix ] [ test ] change default task manager option from legacy to region
added a title field and its getter and setter methods to ShadowActivity and removed it from ShadowAlertDialog , ShadowDialog , and ShadowToast
replaced Apache Commons logging with POILogFactory and POILogger in POIFSFileSystem . java to utilize POILogger
refactor alarm handling in InstarHandler to use string literals for better readability and maintainability to improve code readability and maintainability by
fix ( localmap ) : increment remove latency for delete message
changed the return type of the ` Type ` enum from ` PARAM ` to ` HEADER ` in ` Response . java ` and modified the status
added a method to find the Java file location in CheckResourceKeys . java to improve code readability and maintainability by reducing redundancy
updated FlutterModuleBuilder and FlutterCreateAdditionalSettings to be final and added project name handling in FlutterCreateAdditionalSettings to ensure that
added a new test class ` DeprecatedStubbingTest ` for deprecated stubbing functionality to ensure that the stubbing functionality behaves as expected and
updated import statements in ITBraveServletFilter . java to use javax . servlet instead of org . eclipse . jetty . server
updated EnglishGrammaticalRelations . java and added new test cases in EnglishGrammaticalStructureTest . java to ensure compatibility with
added a boolean property to allow RSA key exchange in FipsUtils to enable flexible configuration of RSA key exchange settings based on the system property
replaced ` output _ reader ` with ` reader ` in multiple files to ensure proper resource management and prevent potential memory leaks
renamed ` oAuthFactory ` and ` oAuthServiceHandleId ` to ` oAuthServiceHandleId ` across multiple classes to improve clarity and
updated the animation interpolator from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView . java
added support for updating region location in ConfigPhysicalPlan and updated logging messages in ProcedureManager , RegionMigrateProcedure , and DataNodeInternalRPCService
added a new file ` FileDialogLeakTest . java ` that tests the behavior of the ` FileDialog ` to ensure that the `
hbase - 11818 move testopentableincoprocessor from org . apache . hadoop . hbase to org . apache .
svm : do n ' t handle uninterruptible annotation in trufflefeature
[ hotfix ] [ table - planner - blink ] fix typo in protobuf file
added a null check for the disi variable in DrillSidewaysScorer . java to ensure that the disi variable is not null
added synchronization to the ` setNewSourceInfo ` method across multiple test classes to ensure thread safety and prevent potential memory leaks
added JVM _ MAJOR _ VERSION and JVM _ MINOR _ VERSION in Constants . java and updated related logic in Helper . java to
updated the ` FileReporter ` constructor to cast ` String ` and ` File ` to ` File ` to ensure proper type casting for ` File
changed the return value of ` getEndToEndEncryptionKeysExist ( ) . isFalse ( ) ` from ` isFalse ( ) ` to
added functionality to display the home button in the action bar to enhance user experience by allowing users to navigate to the home button
updated PROTOCOL _ VERSION from 5 to 6 and added user retrieval logic in RpcServlet and RpcUtils to enhance user management capabilities and improve error handling
added a EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL . java to enable compatibility with AMD64 and x86 _
replaced the variable ` startClass ` with ` originalStartClass ` in the notFound method call to improve code clarity and maintainability by
updated exception message formatting and improved local management in DexBody . java to enhance readability and maintainability of the code
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl
fix look and feel for nimbus nicer
updated the version string replacement in AppPage . java to ensure proper formatting of the version string
refactor animation listeners in LauncherAppTransitionManagerImpl . java to improve clarity and consistency to enhance code readability and maintainability by
updated exception message from " base58 " to " version " in DumpedPrivateKey . java to clarify the error message for missing network
updated the method call from ` offerPayload . getExtraDataMap ( ) ` to ` newOfferPayload . getExtraDataMap ( ) ` to ensure consistency
replaced the initialization of ` milestoneParameters ` with a conditional check for ` isOpen ( ) ` and ` repositoryOpen ( ) ` to improve
updated the battery value from 640 to 80 in PipeItemsWood . java to accommodate larger battery values for improved
updated the ` getStateMachineClusterInstance ` method to include blueprintName and blueprintRev parameters to enhance the clarity of the retrieval of the cluster
updated the ` downgradeAllowed ` variable to true in ` UpgradePack ` and added a corresponding test in ` UpgradePackTest ` to ensure
updated attribute type references from ATTRIBUTE to ATTRIBUTENAME across multiple classes to ensure consistency in naming conventions for XML processing
added a new configuration for emulation system loading in Configuration . java and modified library loading logic in Library . java to improve flexibility in loading
replaced ` sCollator ` with ` getWidgetNameComparator ` in ` AppsCustomizePagedView . java ` and ` Launch
replaced ` out . putEntry ( new ZipEntry ( entryName ) ) ` with ` closeEntry ( ) ` in ` DefaultPlatformManager
updated method signatures in TestSecretKeyCredentialHandler . java to improve clarity and consistency to enhance readability and maintainability of the code
camel - 1748 : camel - spring - dsl - remove unnecessary dependency on springcontextaware
updated description messages in MetricOptions . java for consistency and clarity to improve readability and maintainability of the code
hbase - 11818 testfulllogreconstruction fail if dfs . support . append = true and dfs . socket . timeout =
added a ` reuseAddress ` property to ` DatagramSocketOptions ` to allow dynamic reuse of socket options based on network options
corrected the spelling of " Server shutting down " to " getShutdownMessage ( ) " in GlowServer . java and ServerConfig
deleted the Locatable interface from the internal package to the interface is no longer needed in the codebase
updated error messages in VersionInfo . java to include searchable , retrievable , and stored fields to enhance clarity of error messages for better debugging
refactor StarTreeIndexOperator to use predicateColumns instead of equalityPredicateColumns for improved clarity to enhance code readability and maintain
refactor code formatting in HandshakeHandler . java to improve readability to enhance code readability and maintainability
updated formatting in Navigator . java to improve readability to enhance code clarity and maintainability
changed access modifier of ` DEFAULT _ AVRO _ RECORD _ READER _ CLASS ` to ` DEFAULT _ CSV _ RECORD _ READER _
added case handling for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL queries in MongoQueryCreator and corresponding unit tests in Mongo
[ calcite - 2576 ] fix group by expression in sql parser ( # 2576 )
updated MappedByteBuffer and FileChannelLinesSpliterator to utilize AtomicInteger for buffer mapping and unmapping to improve performance and ensure proper resource management during
replaced instances of ` l . getValidator ( ) ` with ` validator . getValue ( ) ` in ` LdapUtils . java ` to improve
[ hotfix ] [ test ] make circuitbreaker . schedule ( ) a scheduledfuture
removed unnecessary FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from the intent flags set in Launcher . java to simplify
updated the property name from " ajax " to " progressbar " in SubmissionController . java and FileUploadRequest . java to align with the
added JUnit @ Disabled annotation to the TableExtRetrieverTest class to temporarily disable the retrieval strategy for column privileges
added synchronized keyword to addExportedCount and getExportedCount methods to ensure thread safety when accessing exported count
removed the deprecated ` IntRangeUtil1 . requireNonNegative ` from the import statement to streamline the code by eliminating unnecessary dependencies
updated character validation logic in HttpParser . java and added a test for encoded HTTP headers in HttpParserTest . java to ensure proper handling of
updated layout resource from " trends _ activity " to " configuration _ activity " to align the layout with the new configuration activity
updated print statements in SLWTTextListing . java to include the position of the SLWT in the document to improve clarity
refactor ` ForceLeaderTest ` and ` HttpPartitionTest ` to use ` useTlogReplicas ` instead of ` onlyLeaderIndexes `
refactor Thread class to improve code readability to enhance maintainability and facilitate future updates
refactor template file suffix handling in AbstractConfigurableTemplateResolver . java to improve clarity and maintainability to enhance code readability and maintainability
camel - 15836 : camel - cxf - add xmlns : soap = ' ' http : / / schemas . xmlsoap . org
removed unnecessary whitespace in YamlRepresenter . java to improve code readability and maintain consistency
updated string formatting in ToChar . java to use String . format for date formatting to improve readability and maintainability of the code
added validation checks for TXNS and WRITEIDS in GenericUDTFGetSplits . java to ensure proper configuration for transaction and write IDs in
removed unnecessary length checks for columnNameProperty and columnTypeProperty in JsonSerDe . java to improve code readability and maintainability by eliminating
added null checks for bookpath and modified logging in DataHolder . java to enhance robustness by preventing potential NullPointerExceptions during sheet loading
refactor SSTDeserializer and TestSSTDeserializer classes to improve code readability and maintainability to enhance maintainability and clarity of the
added a constant ` DEFAULT _ GRID _ COLUMN ` and modified the return logic in ` AppPreferencesImpl ` and ` ExtendedListFragment `
updated formatting in Platform . java and ComparisonFailureWithFieldsTest . java to include line contents match and line break characters to enhance clarity of
added a new boolean field ` waitingForKeys ` in ` DecoderInputBuffer ` and updated related methods in ` ClippingMediaPeriod `
updated API endpoint paths from " / api / margin / v3 / accounts " to " / api / margin / v3 / accounts /
updated calculations in LineUtilitiesTests to include both x1 , y1 , and x2 to ensure correct calculation of the result based on the
added error logging for varargs and old array syntax in JavacParser . java and created new classes for varargs and old array syntax to improve
( chore ) camel - drm : allow defaultdrmsessionmanager to be accessed before setplayer ( )
added methods to the VariableContext class and corresponding tests in TestVariableContext to enhance functionality for handling method calls and ensure correct handling of member access
added unit tests for invalid compilation unit and profile string JSON parsing in ExperimentParserTest . java to ensure correct handling of invalid compilation units and profile
updated buffer limit logic in Piece . java and SharingPeer . java to ensure correct handling of buffer position and buffer capacity in Sharing
added ` HttpClientProperties ` to the ` NettyRoutingFilter ` and ` RetryGatewayFilterFactory ` classes to allow customizable response timeout settings
refactor ` getNativeLinkTargetGroup ` and ` getNativeLinkTargetInput ` methods in ` CxxLibraryFactory ` and ` NativeLinkTarget
add unit tests for the MainRestConfiguration class to ensure proper functionality and functionality of the RestConfiguration class
added support for RexFieldAccess in ASTConverter and RexNodeConverter to enhance field access handling in the Hive cluster
replaced direct usage of ` QueryLogEntry . values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES ` to
added a method ` relativizeNoProxy ` to ` WebClientRequestBuilderImpl ` and modified URI construction logic in ` WebClientRequestBuilderImpl
refactor certificate retrieval logic in PKCS12KeyStore and StoreSecretKeyTest to improve clarity and consistency to enhance code readability and maintainability by
added reflection access checks and security checks in NativeObject , ReflectionCheckLinker , and ReflectionCheckLinker classes to enhance security by ensuring proper
removed the public access modifier from CollisionMap constructors in CollisionMap . java to improve encapsulation and encapsulation of the constructor
updated the ` getRawInputFromTransactionInput ` method to be deprecated and added a null check for ` TransactionInput ` to indicate that the method
refactor log level handling in ConfigurationValueConverter and Main classes to use a switch statement to improve code readability and maintainability by reducing
cloudstack - 1341 : remove unused import and update sql statement in configurationserverimpl
added support for Encryption unsupported Old Excel files in OldExcelExtractor and created a corresponding test in TestOldExcelExtractor to ensure compatibility with encrypted document
add extra image build option to mx _ java _ benchmarks . py to make it easy to build native image .
removed the conditional statement for setting the visibility of the holder ' s image to simplify the code and improve readability
increased the sleep duration from 10 seconds to 50 seconds in BatchingStateChangeUploadSchedulerTest . java to allow for more time to avoid
refactor directory creation logic in ShadowContext and add a new method for deleting directories in ContextTest to improve code clarity and maintainability by
refactor exception factory initialization to use Class . forName for better error handling to improve code clarity and maintainability by using a more descriptive
increased the WAIT _ TIME _ MS from 10000 to 60000 in LauncherInstrumentation . java to increase the waiting time for better
added support for the " azp " extension in the ConnectOAuth2RequestFactory and updated the JWT claims initialization in ConnectRequestParameters to enhance
remove default value of ` breakOnFirstError ` from ` kafkaConfiguration ` to simplify the configuration by eliminating unnecessary default value
added a new constant selectableItemBackground to the R . java file to provide a visual representation of the selectable item background
replaced specific trade DTO imports with a wildcard import and added a method to place stop orders in GatecoinTradeService to streamline import
change event type assignment from ADDED to UPDATED in TxnSetOperation . java to ensure correct event type handling when record is null
added a new file ` ResumableRandomAccessFileListener . java ` that implements ` RandomAccessFile ` and modified ` ResumingExternalDownload .
updated the class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " to align class loading with
added functionality to set the number of formats in HSSFDataFormat and updated test assertions in TestWorkbook to improve data format handling and ensure
[ hotfix ] [ kafka ] deprecate flinkkafkaproducer and flinkkafkaproducer
updated the calculation of compressedChunkLength to use maxCompressedLength ( ) instead of CHECKSUM _ LENGTH to ensure the correct chunk length is used
camel - 7892 : camel - redis - add idempotent repository for camel - redis
added patch annotations and modified conditional logic for metadata handling in ContainerRepair . java to improve code clarity and ensure correct metadata handling in the
added a conditional check for the " local " repository layout in LegacyLocalRepositoryManager to ensure correct artifact path resolution based on the layout type
added initialization checks and logging for TaskManager initialization in LocalInstanceManager , LocalTaskManagerThread , and TaskManager classes to improve error handling and
added indentation for artifact resolution options in AbstractArtifactResolutionException . java to improve user experience by providing clearer information about the deploy process
replaced direct calls to ` FileStorageUtils . getTemporalPath ` with ` getInternalTemporalPath ` in ` UploadFileOperation . java `
added a method to retrieve FeedEntryStatus by entries and a subscription in FeedEntryStatusDAO . java to enhance the functionality of retrieving FeedEntry
added execution logic for the Vertx thread in ContextImpl . java and refactored BlockedThreadCheckerTest . java to improve execution flow
updated the ` instantiate ` method to accept a ` String ` parameter and added null checks for ` ctorArg ` in ` FormatterConverter ` to
added compatibility check for Android version in LoadContactsTask . java to ensure compatibility with newer Android versions and improve code readability
replaced instances of ` setRemoteAddress ` and ` setRemoteHostname ` with direct assignment of ` getRemoteAddr ` and ` getRemoteHost `
added null check for realClass in Robolectric . java to ensure shadowClass is not annotated with @ Implements to prevent runtime errors
added a check for ` configuration . tlsMutualAuthenticationRequired ( ) ` in ` NettySslContextFactory ` and ` ExampleNettySsl
updated import statements in BasicHttpTest . java to use ISO _ 8859 _ 1 and added a test for handling SSL exceptions to ensure proper
[ hotfix ] [ kafka ] add consumer and producer methods to abstractkafkaresumestrategy
refactor event handling in PageChangeListener and FrameRenderer to improve code readability and maintainability to enhance maintainability and clarity of widget event
updated warning message from " email " to " SMS " in CommunicationsManager . java to clarify the purpose of email and from settings
# 1745 - add optimisation for query optimization ( # 1745 )
added error handling for resource temporarily unavailable in MultipartBody . java to improve robustness by preventing potential resource leaks
fix : arrayindexoutofboundsexception in java . lang . arrayindexoutofboundsexception
refactor multiple EndpointConfiguration , SpEL , MainSupport , and SSLContextParameters classes to improve code organization and maintainability
refactor file directory handling in AttachFileAction . java to improve clarity and consistency to enhance code readability and maintainability by reducing
added LoadOptionsBuilder to the SchemaCrawlerOptionsBuilder and modified the instantiation of SchemaCrawlerOptions to use it to enhance schema crawling options
updated package structure and modified test methods in TestLoadLegacyLibrary . java to improve organization and clarity of test cases
replace throwing an exception with returning null in TestReader . java to improve error handling by returning null instead of throwing an exception
added methods to set name , enabled , and expanded properties in ProjectProperty . java to enhance property management capabilities for better user experience
refactor connection handling in AbstractDbmsOperationHandler to use a try - with - resources statement to ensure proper resource management and prevent potential memory
[ hotfix ] fix typo in datastreamjob javadoc
replaced the try - with - resources statement with a try - with - resources statement to ensure proper resource management and prevent potential memory leaks
( chore ) camel - cxf : fix npe in cxfendpoint . getserviceclass ( )
added a condition to check if the protocol is " h2 - 14 " in HTTP2ServerConnectionFactory to ensure proper handling of H2 -
refactor LambdaToMethod and ClassFileVisitor to use ListBuffer for parameter symbols and improve conditional checks to enhance code readability and maintainability by
updated regex pattern syntax in CoordinationTransformer . java to improve readability to enhance code clarity and maintainability
increased the maximum file size from 5000 to 60000 in DL4JInceptionV3Net . java to accommodate
added a call to set the phrase Slop in the MQ query to ensure the MQ query uses the correct phrase Slop
increased the sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to allow more time for the long press
update metricsServers from 8188 to 6188 in FlumeTimelineMetricsSink . java and HadoopTimelineMetricsSink . java to ensure
refactor ` GameScheduler ` and ` ScreenGrabber ` to use ` Mono . using ` instead of ` Mono . using `
updated visibility conditions for compound in EditShareFragment . java to ensure only relevant options are displayed when they are available
updated progress calculation in DepthController . java to ensure progress is within a minimum of 1.1 f to improve the accuracy of progress in the
removed the ` packetReceived ` method from ` ClientSession ` and ` ComponentSession ` classes to streamline the code by eliminating unnecessary
replaced UnauthorizedAuthenticationException with debug logging in DefaultCasDelegatingWebflowEventResolver and refactored response handling in DelegatedAuthentication
added null check for service before checking its presence in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and modified service access checks in Saml
added a hidden flag to the PantheonCommand class to control the visibility of account level permissions via smart contract to enhance user experience by allowing
added a call to doNotInstrumentClass ( " androidx . room . CoroutinesRoom $ Companion " ) in AndroidConfig
modified the ` isSupported ` method in ` NegotiateAuthentication . java ` to use the current context class loader to ensure thread safety during authentication
removed the setInitScript method from InitializingDataSourceFactoryBean to simplify the code by eliminating unnecessary initialization
camel - 14263 : fix a bug in camel - core - queue - queue - add bean name to the queue manager .
refactor AuthenticationProvider and TargetObject classes to improve code organization to enhance maintainability and readability of the codebase
added functionality to open and close MC blocks in the PdfDocument class to ensure proper handling of tags in the document
log4j2 - 1344 add test case for patternselector
simonstewart : do n ' t throw an exception if the hta mode do not support running selenium tests under Selenium RC
updated the ` thank ` method to extend ` MwThankPostResponse ` and added a new ` Result ` class with methods to
added a new interface ` SocketBased ` and modified ` ChannelEndPoint ` and ` SslConnection ` classes to implement it to enhance socket handling capabilities
removed redundant revokingStore initialization and updated maximum size setting in Manager . java to streamline code and improve readability by eliminating
added unit tests for implicit join functionality in HQLTest . java to ensure correct handling of call and timestamps in the query execution
refactor expected and actual strings in NonVisualRegressionTest . java to improve readability and maintainability of the test code
replaced direct reference counting with a collection of files to commit in IndexWriter . java and added assertions in MockDirectoryWrapper . java to improve
added @ Final annotation to multiple method signatures in BaseError . java to improve code clarity by eliminating unnecessary final modifiers
added validation for user resource percent in ConsumeUserResourcePercentActuator . java to ensure that percent values are within range 0 or 100 to prevent
added a condition to check if the old login is displayed in AuthenticatorActivity to ensure proper handling of login display based on user preferences
rename StreamNetworkThroughputBenchmarkTests class to StreamNetworkThroughputBenchmarkTest to improve clarity and consistency in naming conventions
removed the conditional statement for setting the response page in EditTeamPage . java to simplify the code by eliminating unnecessary logic
updated debug log message to include exception details to improve clarity of error messages for better debugging
added error handling for closing the server socket channel in ConnectionManager . java to ensure proper resource management and prevent potential resource leaks
refactor Rocket class to improve code readability to enhance maintainability and facilitate future updates
refactor conditional logic in BaseSemanticAnalyzer to use a new method for creating dynamic partitions specifications to improve code readability and maintainability by
refactor round - half - up factor handling in StringTemplate and Kernel classes to improve code clarity and maintainability by reducing redundancy
added visitDirectory method to handle directory entries in JarDirectoryStep and DirectoryTraversal classes to ensure that already added entries are added to the correct directory
added a new file JWKSetEditor . java that extends PropertyEditorSupport to handle JWKSet parsing to enable customization of JWKSet properties in
refactor term handling in OrdsBlockTreeTermsWriter and BlockTreeTermsWriter to use PendingTerm instead of BytesRef to improve code cl
truffle : fix for ljdk / jfr / internal / instrument / throwabletracer ; add miss @ cached annotation
changed the default value of byIP from true to false in Fetcher . java to disable the IP address based on the configuration settings
removed unnecessary conditional check for queryTimeout in StatementUtil . java to simplify the condition for better readability and maintainability
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest . java to ensure proper hash
refactor ReplicaPosition class to improve code structure to enhance maintainability and readability of the code
cloudstack - 4392 : fix npe when update network usage stats update task
updated interpolator settings in QuickstepAtomicAnimationFactory , AllAppsTransitionController , and Interpolators to use FINAL _ FRAME instead of IN
updated swipe length calculation in Background . java to ensure proper rendering of the nav bar based on display density
added a new module - info . java file for the Jetty HTTP3 server and updated imports in multiple Java files to enhance module dependencies and
updated JsonType to handle null values and added constants for MY _ JSON _ OBJ and BIG _ JSON _ OBJ in JsonTest to
removed unnecessary null check for context in the InitialContext initialization to simplify the code by eliminating unnecessary null checks
[ hotfix ] [ runtime ] fix typo in checkpointconfig and executioncheckpointingoptions
refactor ` reportInnerClassReferences ` method to accept ` Element topElement ` instead of ` TypeElement ` for better type handling to improve type
added a space to the command string in TimestampCheck . java to ensure proper formatting of command line arguments
replaced ` FluentIterable ` with ` MoreCollectors ` in ` ChromeTraceBuildListenerTest . java ` to improve code readability and
[ dubbo ] add support for config . register ( ) .
added security OTR mode handling in SettingsManager and modified session end handling in OTRManager to improve security handling and ensure proper session management during
added outline size and transparency properties to PreviewProperty and updated rendering methods in NodeLabelRenderer to enhance the visual representation of node label components based on
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
added a new boolean variable ` true ` to the ` Win32FontManager ` class to enable the functionality of the font management functionality
added null check before visiting the tree in TreeVisitor . java to avoid potential NullPointerException when v is null
added error handling policy for no classpath in JDTBatchCompiler to ensure proper error handling when no classpath is specified
added contentAlignmentPoint and textAnchor fields to LabelBlock and corresponding tests to enhance label rendering capabilities by allowing alignment and text alignment
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the codebase
refactor IndexReader class to improve code structure to enhance maintainability and readability of the code
replaced boolean isLoopback with Boolean isLoopback and added null checks for networkInterface to improve robustness by preventing potential NullPointerExceptions
added Locale parameter to the ` fromRfc1123DateString ` method in ` DateUtils ` and ` Rfc1123DateDeserializer ` classes to
updated the download method in FileDownloadViaProxyTest to include the extension " . pdf " to ensure that the download method correctly handles missing files
add output _ no _ hits property to abstractjsonqueryelasticsearch and abstractpaginatedjsonqueryelasticsearch
refactor methods and variables in QuotaManagerImpl . java for improved clarity and consistency to enhance code readability and maintainability by
refactor switch statements in Election . java to use a try - with - resources statement for better readability to improve code clarity and
refactor ReadFilesP , StreamFilesP , and StreamFilesP classes to improve clarity and consistency to enhance code readability and maintain
refactor widget handling logic in PageChangeListener . java to improve readability and maintainability to enhance code clarity and maintainability by reducing
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` FileSharingRecord ` , and ` HSSFWorkbook `
added error handling for unregisterInvalidatedSessions in PluginMonitoringFilter . java to improve robustness by logging exceptions during session unregistration
refactor CategorizationFragment class to improve code organization to enhance maintainability and readability of the code
corrected the spelling of " reachable = false " to " not reachable " in the updateStatus method to improve clarity and consistency in
added a loading flag and a getter method for the loading state in FMLClientHandler . java and created a new GameSettings . java file
updated return statements in UI and BlockInventoryFragment to include " unit . millions " and " unit . thousands " in BlockInventory
refactor MessagePackParser to use a switch statement for type handling and add a new BinKeyPojo class to improve code readability and
added unit tests for using reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure that queries with reserved
added unit tests for JSON serialization and deserialization of a nested map in MapTest . java to ensure correctness of JSON serialization and deserialization of a
added bounds checking for x2 and y2 offsets in GeometryUtils . java to ensure correct positioning of coordinates in the GeometryUtils class
refactored sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to improve code readability and maintainability to enhance maintainability and
added error handling for empty TestPlan in StandardJMeterEngine . java to ensure that the test plan is not found before proceeding
updated method names from " dbmsName " to " dbmsName " and " dbmsOperationHandler " in GeneratedEntityTranslator . java
added a check for non - strict mode identifiers before adding them to the parameters list to ensure proper handling of non - strict identifiers and prevent potential
updated the default protocol from " SSL - HTTP / 1.1 " to " SSL - HTTP / 1.1 " to ensure compatibility with
set displayVolume to true in VolumeVO . java to allow dynamic display of the volume
updated the ` version ` method to accept a ` boolean ` parameter and added a new test class ` VersionTest ` to enhance functionality by allowing
refactor conditional checks in ChangeLogParameters . java for improved clarity and functionality to enhance code readability and maintainability by reducing
change log level from warn to debug in JtaTransactionManager . java to improve log verbosity for better debugging
hhh - 14819 skip test that cause exception during formatting of sql string
replaced direct calls to ` startHandshake ( ) ` with ` setSoTimeout ( ) ` in ` Connection . java ` to streamline
added a condition to check if the action bar is not a popup in multiple fragments to ensure that the action bar size is only displayed when the
changed the ` CHA ` option from ` false ` to ` true ` in ` EspressoOptions . java ` and ` DefaultClass
http : / / issues . apache . org / jira / browse / amq - 4892 - add debug log for current thread
refactor JodaTimeRangeRandomizersTest to use a wildcard import and update related test methods to improve code readability and maintainability by
added a conditional check for the SERVLET _ MAJOR _ VERSION before loading xsd resources in WebDescriptor . java to ensure compatibility with
fix readiness . isready ( ) to return false if the item be an instance of a node
replaced instances of ` liveEndpoints ` with ` handler . endpoints ` in ` StorageProxy . java ` to improve clarity and consistency in
added a null and empty check for creationStatements in IdTableHelper . java to ensure proper handling of null and empty creation statements
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the latest version of the RPC
added a null check for the security manager before checking package access checks in ObjectStreamClass and ObjectStreamField to avoid potential NullPointerExceptions when security
changed visibility of UGSCommandCount from private to private in Utils . java and XLCDCommunicator . java to allow access to
change the visibility of the ` sanitizeUrlTemplate ` method from private to protected in ` DefaultMetricsTagProvider . java ` to enhance encapsulation
removed unnecessary whitespace in the addTestSuite method call to improve code readability and maintain consistency
change default level from OFF to ERROR in Launcher . java to improve error handling for better debugging
changed variable declarations from private to final in IconNormalizer . java to ensure immutability and improve code clarity
added a boolean flag ` firstCallPrepareDo ` to the ` PrepareInterceptor ` class and updated prefixes handling in ` PrepareInterceptorTest ` to
refactor workspace and overview mode handling in Launcher . java to improve clarity and functionality to enhance code readability and maintainability by redu
replaced instances of ` asEagerSingleton ( ) ` with ` @ Singleton ( ) ` in ` AuthWithStoreFeature . java `
added a boolean parameter ` ignoreInvisibleAssociations ` to the ` incomingAssociations ` method in ` GraphicalDataModelView . java ` to allow
cloudstack - 4392 : fix nullpointerexception when remove a private ip capacity
added a warning message for empty diagram and linux 4.6 in ProfileServlet . java to provide clearer feedback for empty diagram and linux 4
added a new class ` RequiredRefFieldModel ` and created a new class ` RequiredFieldModelTest ` to handle ref fields to ensure that
renamed ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreStandaloneBootstrapConfiguration ` classes to ` CasCoreConfigurationAutoConfiguration ` to
refactor FeatureFlags class to improve code readability to enhance maintainability and facilitate future updates
updated StringBuilder initialization and improved unique identifier handling in ConfigStore and CommonSetup classes to enhance clarity and maintainability of the UUID generation process
added picture loading logic in TimeLineCursorAdapter and TimelineArrayAdapter to reset the image drawable when the picture is set to false to ensure
updated error messages in HiveConf . java for clarity to improve readability and maintainability of the code
added a null check for the storage path before checking the isDown ( ) method to prevent potential NullPointerException when accessing storage path
refactor resize conditions to use a checkResize method for improved clarity to enhance code readability and maintainability by reducing redundancy
refactor LDAPConnectionService class for improved readability to enhance maintainability and readability of the code
marked the ` @ XmlAttribute ` as deprecated in ` AggregateDefinition . java ` to indicate that these attributes are outdated and should not be
added debug tracing logs in TouchInteractionService , RecentsAnimationDeviceState , and RecentsAnimationDeviceState to improve debugging capabilities and
added a condition to check if the class name starts with " com . intellij . rt . junit . 37 " to ensure
updated assertions in TestMultiSearcher from hits . length ( ) to hits2 . length ( ) and hits3 . length ( ) to
added a new file LucenePackage . java that implements a static getter method for the Lucene package to provide a way to access the package
corrected the calculation of sizeInBytes in RAMDirectory . java to ensure correct handling of sizeInBytes in addition to existing sizeInBytes
updated calculations in StatsRulesProcFactory , GenericUDAFBloomFilter , and BloomKFilter classes to improve evaluator estimate accuracy and ensure
added a null check for the getDrawerToggle ( ) before performing animation updates to prevent potential NullPointerException when getDrawerToggle ( ) is
removed the ` @ SuppressWarnings ( " unused " ) ` annotation from the ` convertToAuthentication ` method to improve code clarity and eliminate unnecessary warnings
added logic to scan modules based on override classpath and classloader settings to enhance flexibility in classpath scanning based on class loader settings
updated the ` getAuthors ` method to include a ` fieldName ` parameter and modified its usage in ` MSBibConverter . java ` to
added a method to cancel core recovery logic in CoreContainer . java to ensure core recovery is only executed when zookeeper is aware
replaced direct calls to ` System . currentTimeMillis ( ) ` with direct calls to ` currentTimeMillis ( ) ` in ` bug5070081 .
removed debug print statements and simplified the click logic in RepoEditView . java to streamline the code and improve readability by eliminating
updated error messages in PGProperty . java for clarity and consistency to improve readability and maintainability of the code
added imports and updated SecurityEvaluationContextExtension to utilize AuthenticationTrustResolver and PermissionEvaluator for role hierarchy and default role prefix to enhance security context
added a check to set exponentSize if it is zero in DHParameterGenerator to ensure exponentSize is correctly initialized based on primeSize
replaced instances of ` new File ( mAccount . name ) ` with ` FileStorageUtils . getUsableSpace ( ) ` in multiple
updated DistinctSqlAggregation to accumulate objects and added a new test for combine operations in DistinctSqlAggregationTest to improve aggregation functionality and ensure
added a new test method ` calling _ login _ should _ execute _ post _ login _ activities _ for _ user _ on _ successful _
refactor ExtractorSpanishStrippedVerb initialization to include a path parameter for improved clarity to enhance code readability and maintainability
updated code and length handling in CharArraySet . java and added a new test class in TestCharArraySet . java to improve code clarity
updated track count validation logic in MuxerWrapper . java to ensure track count changes after adding track formats to improve clarity and correctness of
replaced ` JsBundleAndroid ` with ` AndroidPackageable ` in ` JsBundleGenrule ` and updated asset directory handling in tests to
updated character encoding handling in StringDictionary and added a test for UTF - 8 character encoding in DictionariesTest to ensure proper handling of UTF -
updated case names from " Logical Analyzer " to " Logic Analyzer " in InstrumentsFragment . java to improve clarity and consistency in
added instanceClassName and instanceClass fields to AbstractVector . java to ensure proper handling of vector instances based on its class name
removed the call to syncMetaLeader ( ) in CMManager . java to streamline the sync process by eliminating unnecessary calls
refactor response and no response HTML formatting in FeedbackContributionQuestionDetails . java to improve code readability and maintainability
added TestLoggingExtension import and annotated TestLoggingExtension in DiagramRendererTest . java to enable logging functionality for testing purposes
updated the ` applyAutomaticMappings ` method signatures to include a ` mapUnderscoreToCamelCase ` parameter in multiple classes to enhance property naming consistency
added support for the VIOMI Internet electric water heater 1A ( 60L ) in MiIoDevices . java to enhance
updated variable names from ` getSslSessionData ( ) ` to ` SslSessionData ` in ` SecureRequestCustomizer . java ` to
added a new file ` CreateNewSpreadsheet . java ` to implement functionality for creating spreadsheet sheets to facilitate the creation of spreadsheet
renamed ` ttl ` to ` timeToLive ` and updated related methods in ` CacheProperties ` , ` RedisCacheConfiguration ` , and `
updated content URI references from CONTENT _ URI to CONTENT _ URI _ NO _ NOTIFICATION in LauncherBackupHelper and LauncherModel classes to
updated the version of the testCompile group from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to reflect
replaced ` lucidaFontName ` with ` this ` in ` SunFontManager . java ` to ensure thread safety when accessing
added a condition to check if the character is ' < ' in the conditional statement to ensure proper handling of invalid characters in the code
updated the return statement to use String . format instead of String . format to improve readability and maintainability of the code
added import for Liquibase ' s Scope and sent a message for no validation errors to enhance user experience by providing clearer feedback when
refactor IntegrationTestContextLoader to utilize DefaultResourceLoader and FileSystemResourceLoader for WebMergedContextConfiguration to improve resource configuration flexibility and
modified scroll logic in Component . java and added handling for pointer events in Container . java and JavaSEPort . java to ensure proper scrolling behavior
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new class ` ClientStat ` and modified ` StatsService ` , ` DefaultStatsService ` , and ` StatsService ` classes to
updated regex patterns in CellContentConverter . java to replace " $ 1 " with " $ \ n1 " in the expression to ensure proper
simplified regex patterns in SeleneseTestCase . java for improved readability to enhance maintainability and clarity of glob matching
refactor MondrianProperties class for improved clarity to enhance maintainability and readability of the code
added stack trace printing functionality in ProcessTools . java and updated launcher permission handling in CustomLauncherTest . java to improve debugging capabilities and ensure proper
removed the testEmbeddedImage method from TumblrRipperTest . java to clean up the code and improve readability
added a check to ensure the symbol has a slot for the storeType before converting it to ensure that the storeType is only converted when the
refactored initialization logic in ContainerMediaChunk and InitializationChunk classes to improve code readability and maintainability
added UTF - 8 encoding handling in BaseLockFactoryTestCase . java to enhance compatibility with UTF - 8 encoding in IndexWriter configuration
tika - 2321 -- add dynamic configuration option to tika - config to allow dynamic service load
added imports and modified package - info handling in DocLint and DocLintTester classes to improve code clarity and ensure proper handling of package
added a new constant IMPORT _ CMD in DataImportHandler . java and modified conditional checks in DataImporter . java to include a new import command
added a new test method ` doesNotModifyInnerClassesIfIgnoreDefinitionTrue ` to ` ChangeTypeTest . java ` to ensure inner classes
removed unused import of android . util . Log in JettyService . java to streamline code by eliminating unnecessary dependencies
updated the ` checkItemPlacement ` method to accept a ` ArrayList < Long > workspaceScreens ` parameter and modified related logic to include
added a new KillSwitchServlet class to handle the " / quitquitquit " servlet in Jetty7AppServer to facilitate
refactor the handling of transformed rows in LLRealtimeSegmentDataManager to use a transformed list instead of a single collection to improve performance and
added a check to skip testing for Teredo devices in Windows to ensure compatibility with Teredo devices in the application
added a warning dialog when the protocol provider is not registered in AddContactDialog . java to improve user experience by providing a warning when the contact
updated the registration of the USER _ DETAILS _ SERVICE _ FACTORY bean in AuthenticationConfigBuilder . java to ensure that the service factory is
updated drawing bitmap parameters in FastBitmapDrawable . java to include null parameters to improve rendering performance by avoiding potential null pointer exceptions
updated date formatting in MeitrackProtocolDecoder and TotemProtocolDecoder to ensure consistency in date formatting across different protocol implementations
changed access modifiers of ` getFontPath ` and ` getPlatformFontPath ` methods in ` SunFontManager ` and ` X11FontManager `
added @ Deprecated annotations to EnhancedRandom . java to indicate that these classes are outdated and should not be used in future development
replaced ` ReachedMaxSizeException ` with ` ExecutionException ` in ` ClientMapStoreTest . java ` to ensure that ` ExecutionException ` is
added a boolean flag ` keepEmptySentences ` to ` DocumentPreprocessor ` and updated related classes to allow users to control whether to control
updated the ` createArtifactSubdirectory ` method to return a boolean instead of void to improve error handling and provide clearer error messages for better
removed unused imports and refactored the IDELazyTreeLoader implementation in ReusableCompiler , JavaLanguageServer , and JavaCompilerService to
added a null check for the answer in DirectAgentAttache . java to prevent potential NullPointerExceptions during resource return
refactor sendEmail method to throw a MessagingException instead of a try - catch block to simplify error handling and improve code readability
added a new API package - info . java and modified PipeItemsObsidian . java to return early if contained and stack are null to
updated the ` getDateMathParser ( ) ` method to accept ` Locale ` instead of ` " UTC " to enhance flexibility in parsing date
added a boolean field ` includeDecals ` and its getter and setter methods in ` StorageOptions ` and ` StorageOptionChooser ` classes to
added a null parameter to the generateDocumentation method in Liquibase . java and modified the getImplementedDatabases method in Liquibase
updated HiveProtoLoggingHook to set the queue configuration and modified assertions in TestHiveProtoLoggingHook and TestHiveProtoLoggingHook to
updated log message from " Begining " to " Beginning " in SolrIndexConfig . java to clarify the purpose of the log
updated class file version validation in ignoreRecordAttribute . java and recordReflectionTest . java to ensure compatibility with the latest version of the class file
added a new file ` LdapPasswordAuthenticationTest . java ` to validate LDAP password authentication functionality to ensure correct behavior of LDAP user attributes in the
updated import statements in TaskCompiler . java to use BasicStatsNoJobTask instead of OrcInputFormat to improve performance by avoiding unnecessary
added Project and Editor fields to FlutterReloadManager and updated related methods to handle saving notifications to improve the handling of saving events based on the
refactor VisibleAdvance class to improve code structure to enhance maintainability and readability of the code
refactor ` start ` method to include a ` reconnect ` parameter and improve error handling in ` Reflector ` to enhance code clarity and
added a condition to check if a column is a dynamic number in EdgeDataTable and NodeDataTable to enhance functionality by allowing dynamic number columns to be
added null checks for groupId , artifactId , and version in RawPom . java to ensure proper handling of null values and prevent potential NullPointerExceptions
added null check for apiInfo in V2HttpCall . java to prevent potential NullPointerException when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code readability and maintainability
added lightlighting functionality to PhotoPanel and FlameRenderer classes , and implemented shader management in PhotoPanel and FlameRenderer to enhance the
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 520 : add
added a condition to check if the index is within the length of the character before processing to ensure that only valid characters are processed in the CSS
added a check for the " isLookAndFeelDecorated " property in UIServiceImpl . java to enable look - and - fe
removed unnecessary assignment of ` this ` in ` HostRoleCommandDAO . java ` to simplify the SQL query and improve code readability
updated F2 _ TEST and F5 _ TRANSPONDER _ TEST constants to F6 _ TRANSPONDER _ TEST _ COMMAND and F
refactor swipe handling logic in WindowTransformSwipeHandler . java for better clarity to improve code readability and maintainability by reducing
replaced ` HostDatabase ` with ` ColorStorage ` in ` ColorsActivity . java ` to enable color storage functionality for better user experience
refactor string handling methods in String . java to improve code readability and maintainability
removed unused logger imports from multiple Java files to streamline code and improve maintainability by eliminating unnecessary dependencies
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to provide access to the ` getGlobals `
added assertions to verify the sendcoin method for blockingStubFull in MultiSign34 . java to ensure that the sendcoin method correctly handles blocking
test : migrate CUFilterTest to JUnit 5 version to ensure compatibility with the latest JUnit 5 version
added a constant for the path separator in JavadocReport . java to ensure consistent path handling across different operating systems
changed the visibility of the augmentSuccessViewModelObjects method from static to instance to restrict access to the method for better encapsulation
added assertions for " id " and " Person " fields in InheritanceTest . java and updated field retrieval in TestUtil . java to ensure
removed the ` conf ` parameter from the ` Outlink ` instantiation across multiple parser classes to simplify the code and improve readability by elimin
removed the LexicalContext parameter from the ` ensureUniqueNamesIn ` and ` copyFinally ` methods across multiple files to simplify method signatures and
added imports and modified return statements in UseLambdaForFunctionalInterface . java and TypesInUse . java to ensure proper handling of unused imports and
replaced ` appendClassSelector ( createFileSet ( ref ) ) ` with ` createFileSet ( ref ) ` in ` TestNGAntTask
removed the check for the root input type in HiveCardinalityPreservingJoinOptimization . java to simplify the code by eliminating unnecessary
added a ` IForgeRegistry < T > pool ` parameter to the ` Mapping ` constructor and updated its usage in ` RegistryEvent `
refactor variable assignments for x3 and y3 in Intersector . java to improve code readability and maintainability
added default methods ` sbeDecodedLength ` , ` sbeLimit ` , and ` sbeLimit ` to ` MessageDecoderFly
refactor ` ElasticsearchContainerTest ` to use a constant ` ELASTICSEARCH _ VERSION ` and add a new test method ` restClientCluster
[ java ] use ByteBuffer . wrap for buffer copy to avoid memory leak .
added VERSION = " HDP - 1.2 . 0 " and updated cluster definition handling in ClusterDefinition and GSInstallerClusterProvider classes
[ hotfix ] remove unused setconfiguration ( ) method
zeppelin - 1746 : set status to READY and setErrorReason to null in interpretersetting
updated the handling of local variables in the Gen class and added a new NoLocalsMustBeReservedForDCEedVarsTest class to
added a check for basic constraints in ForwardBuilder . java and created a new class BuildEEBasicConstraints . java to ensure proper handling of X
added database connection initialization logic to JdbcPostgresqlDAO to ensure values with the same time are upserted when the database version is greater than 9
added a maximumMessageSize parameter to the WebSocket client and modified the input buffer size handling in AbstractWebSocketConnection to ensure that the input buffer size
refactor SegmentReader to simplify deletion logic and add a new test for undeleting functionality to improve code clarity and ensure correct handling of
added null check for scopes before checking for empty in ClientRegistration . java and updated test cases in ClientRegistrationTests . java to enhance robustness
added null check for orderBy before adding it to the expression and explanation to avoid potential NullPointerExceptions when orderBy is null
[ hotfix ] [ test ] use hamcrest assertion instead of junit in clusterentrypointtest
cloudstack - 3641 : do n ' t delete snapshot if backup be not in kvm mode
added debug logging for initLog4jMessage in HiveServer2 . java to facilitate debugging by logging the initialization of the Hive
added a check to ensure tasks are not empty before processing to prevent potential NullPointerExceptions when tasks are empty
refactor deleteNode method to return a boolean instead of void to improve clarity and functionality of the deleteNode method
refactor KvEntry handling in multiple classes to improve clarity and consistency to enhance code readability and maintainability by using a more d
added error handling for empty barcode results in Code128Reader , Code39Reader , and FalsePositivesBlackBoxTestCase classes to ensure that
replaced TreeSet with LinkedHashSet in SSLContextImpl . java and SystemPropCipherSuitesOrder . java to ensure consistent ordering of cipher suites across different environments
updated character validation logic in Escaper . java and InternationalizationTest . java to improve character validation to ensure correct handling of control characters
added a check for CharSequence type in ` ProviderSqlSource ` and updated method invocation logic in ` SqlProviderTest ` to ensure proper handling of
updated import statements and added null checks for aliasChildren in InternalMNode . java to improve code robustness and prevent potential NullPointerExceptions
added a method to calculate the layout transition offset for a page in PagedView . java and updated scrollDelta calculation in Workspace . java to
rename ` synthetic ` to ` pruned ` in ` JavaTemplate . java ` to improve clarity and consistency in naming conventions
added a setAccessible check for the method in WidgetInterceptor . java to ensure the method is accessible before proceeding
added a condition to check if the fieldConfig ' s default value is not equal to " database . server . id " before setting it to
updated the Mozilla version from " Intel MacOS X 10.7 " to " Win64 " in AbstractRipper . java
added a web interface menu item to the popup in BasicSystemUtils . java to enhance user experience by allowing users to navigate to the specified host
replaced the usage of ` AtomicReference < ValueType > ` with a static variable ` actualValueName ` and introduced a new variable ` actual
added error handling for ArrayIndexOutOfBoundsException in EncryptedSlideShow . java to improve robustness by handling potential ArrayIndexOutOfBoundsException
[ hotfix ] [ table - planner - blink ] fix debug log message in queue
replaced direct call to loadBattlePassManager with a call before avatar postLoad to avoid null pointer exceptions to avoid potential null pointer
updated Docker image version from 1.0 . 0 to 1.1 . 0 and modified command line options in PortForwardingContainer . java to
added a new bigObject array and refactored gc method calls in ThresholdTest . java to improve memory management and ensure proper garbage collection behavior
updated conditional checks in StdErrLog . java and added new logging assertions in StdErrLogTest . java to ensure proper logging behavior based on
fixed - rremoteserviceloader . getremoteserviceloader . getremoteserviceloader . getremoteservicelo
added ` isSelected ( ) ` and ` setSelected ( boolean b ) ` methods to ` MultiButton ` class to enable the selection of the emb
updated the import statement for UpNextActivity and NextUpActivity in CustomPlaybackOverlayFragment . java to align the code with the new package structure
removed unnecessary whitespace in BrokerController . java to improve code readability and maintainability
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection instead of ReactiveServerCommands to improve connection management and ensure proper resource closure
refactor background color handling in ProgramGridCell and Utils classes to improve code readability and maintainability by reducing redundancy
rename ` participantTransportAddressChanged ` to ` peerTransportAddressChanged ` across multiple classes to improve clarity and consistency in naming conventions
removed unnecessary type adapter registration in ToolingApiLauncher . java to streamline the code by eliminating unnecessary dependencies
updated TestPayloadCheckQuery from 55 to 655 in TestPayloadCheckQuery . java to ensure compatibility with different data formats
replaced the ` putChar ` method with a ` print ` method in ` ConsoleReader ` and added a new test in ` ConsoleReader
added user authentication and command line formatting in BaseCommand . java to enhance user experience by providing clearer feedback on the exit status
update package names from ` org . graalvm . compiler . test ` to ` org . graalvm . compiler . api . test
[ hotfix ] [ test ] remove unused parameter in slotsharinggroup
added a condition to check if the streamexemulateJava8 is enabled and updated the dropWhile logic in StreamExInternals . java
updated texture paths from " data / wheel . png " to " data / sys . png " across multiple test files to ensure compatibility with the
replaced direct registration of ` mCloseSystemDialogsReceiver ` with direct unregistering of ` mCloseSystemDialogsReceiver ` to simplify
updated import statement for Cluster in HostsRemovedEvent . java to ensure consistency in import statements
added support for introspection functionality in ClientDetailsEntity and updated related classes to enhance client responsiveness by allowing introspection behavior based on client
replaced calls to ` write ( ) ` with ` htmlEncode ( ) ` in ` HtmlSessionInformationsReport . java ` to improve
added ` @ link ` annotation to ` PhrasePrefixQuery ` and ` PhraseQuery ` in the ` Query . java ` file to
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` in ` CommentsInserter . java ` and ` comments
replaced the ` isLiteralString ` method with ` isThisElementAnOperandInABinaryStringConcatenation ` for better type checking to
updated method names from ` A ` to ` Object ` across multiple classes to improve clarity and consistency in method naming conventions
replaced ` ThrowingFunction ` interface with ` ThrowingFunction < T > ` in ` JwtPlugin . java ` and updated package structure
refactor ` getUploaderBehaviour ` and ` setUploaderBehaviour ` methods in ` AppPreferences ` , ` PreferenceManager ` , and
fix ( prettyprinter ) : do n ' t return final field in constructor
updated ShadowDrawable to use Robolectric for Bitmap instantiation to enhance compatibility with Robolectric ' s Robolectric ' s
updated method names from ` isValidSEnding ` to ` isValidEnEnding ` and added a new character variable to improve clarity and consistency in
updated the page indicator resource from " ic _ pageindicator _ add " to " ic _ pageindicator _ current " to align with the new
added a volatile integer variable ` reinvocations ` and modified logging messages in ` BasicInvocation . java ` to ensure accurate tracking of reinv
update topPadding calculation to use getInnerHeight ( ) instead of getHeight ( ) in DefaultLookAndFeel . java to ensure correct height calculation
added a break statement in the Recognize class to ensure proper handling of break cases in the recipe process
added Haptic feedback functionality for lock home screen in multiple classes to enhance user experience by providing feedback when the home screen is locked
added support for text and numeric formula in ExcelBatchReader and created corresponding test cases in TestExcelFormat to enhance functionality for text and numeric formula
added a test for assignment in anonymous inner class method in ImmutableFieldTest . java and implemented a dump method in ASTClassOrInterfaceBodyDeclaration
added a private String field ` userAgent ` and modified the user agent assignment logic in ` HttpGetter . java ` to ensure the user agent is
added ` required = true ` to ` @ XmlAttribute ` annotations in ` AvroDataFormat ` and ` BarcodeDataFormat ` classes to
change log level from info to debug in Utilities . java to improve log granularity for better debugging
rename QueueTest class to QueuedPipeTest to improve clarity and consistency in naming conventions
refactor version check logic in BukkitMain . java to use a method for getUniqueID to improve code readability and maintainability by
camel - 14836 : camel - core - defaultroutescollector do n ' t handle empty include pattern
added a vertexColor property and modified color handling logic in PShape3D . java to enable dynamic coloring based on whether a vertex is
updated the ` printForeignKeys ` method to accept a ` isPkColumnFiltered ` parameter and modified related logic in ` SchemaDotFormatter ` to
removed the import of Shadow and simplified the method call in ShadowMotionEvent . java to streamline the code by eliminating unnecessary dependencies
changed package structure from ` com . facebook . buck . parser . api ` to ` com . facebook . buck . parser `
refactor class handling logic in GroovyEngine . java to simplify the code and improve readability to enhance code clarity and maintainability by redu
updated package structure from ` io . hawt . web ` to ` io . hawt . branding . plugin ` and added
removed unnecessary print statements in NativeCodeGenerator . java to streamline output for better readability and maintainability
replaced calls to updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) in FlightConfiguration . java to improve
added unit tests for the ` hasCause ` method in ` ThrowableAssert _ hasCause _ Test . java ` to ensure that ` ExpectedException
updated variable names for flattening and packing in AutomaticDependencies . java to improve clarity and consistency in naming conventions
updated variable name from ' requestedScopes ' to ' allowedScopes ' in ClientDynamicRegistrationEndpoint . java to improve clarity and consistency in variable
added unit tests for Firefox options and capabilities in MarionetteTest . java to ensure correct behavior of Firefox options and capabilities are set in
added methods to retrieve and set the route description in multiple classes to enhance the handling of route descriptions in the application
refactor JavacTreeMaker class to improve code structure to enhance maintainability and readability of the code
added a call to set the weight of the edge in ImporterCSV . java to ensure that the edge ' s weight is set correctly for
refactor cost per hour calculation in QuotaManagerImpl to use current month instead of a hardcoded value to improve clarity and maintainability
updated SQL query execution to use a byte array instead of null for adrelid and adnum to ensure compatibility with adsrc and adnum
added a null check for Binarized sentences in SentimentAnnotator . java to ensure proper error handling when binarized sentences are not
added debug information to the user ' s toString ( ) method in User . java to improve debugging capabilities and provide clearer information about authorities
added null check for message body in MessageHelper . java to improve robustness by preventing potential NullPointerExceptions
[ hotfix ] [ runtime ] rename execution . getexecutionvertex to execution . getexecution ( )
refactor ` canSubscribe ` and ` isGroupVisible ` methods to use ` owner ` instead of ` subscriber ` and ` subJID
added a path reference for " maven . test . classpath " in AbstractJRubyMojo . java and removed unchecked suppression in C
refactor MethodHandle handling logic in MethodHandleImpl . java and add a userMethod method in MethodHandlesTest . java to improve code cl
added import statements for StopFilterFactory and NamedSPILoader , and HTMLStripCharFilterFactory in multiple Java files to improve code clarity and
updated width and height checks from ` > ` to ` ! = ` in ` URLImage . java ` to ensure that dimensions do not exceed
added a condition to check if the class name starts with " META - INF / " and modified the logic for appending unique names to ensure that
modified the ` createImageToFileSystem ` and ` createImageToStorage ` methods to check for edits state before repainting the target list to ensure proper
updated the expected number of values and log messages in StackWalkerTest . java to ensure compatibility with version checks and improve logging clarity
changed the access modifier of the addViewportJob method from protected to public to allow access to the method from other classes
refactor SimpleWordCount and RBKTimeSlidingTest classes to improve clarity and consistency to enhance code readability and maintainability
removed server restart settings and error handling in TestDatabase . java to streamline server startup process and improve error handling
added null and empty checks for block in NodePathsConvertOperator and modified return logic in SchemaQueryMergeOperator to ensure proper handling of null and
added functionality to retrieve the total harvesting time in multiple classes to enhance user experience by providing accurate tracking of the total harvesting time
updated drawing parameters in ParticleEditor . java to include additional dimensions to enhance visual appearance and maintainability of the rendering process
added handling for the " hadoop - env " configuration in UpgradeCatalog240 . java and updated test cases in UpgradeCatalog240Test . java to
added import for java . awt . Color and set a transparent color in SvgViewerFactory . java to improve the visual appearance of the
removed the @ Config annotation from ShadowKeyguardManagerTest . java and ShadowKeyguardManager . java to simplify the code by eliminating
updated the ` containsExactly ` method to accept an additional ` varargs ` parameter in the ` containsExactly ` method to enhance flexibility
updated the Bandwidth builder to include capacity and added a validation check for the key in AsyncBucketProxy to ensure that the bucket configuration does not
added comments to GermanAnalyzer , GermanStemmer , and WordlistLoader classes to enhance code readability and maintainability
added hooks to the Generator class and modified transformations in QueryProperties . java and SemanticAnalyzer . java to enhance query processing by allowing materialized view
added exception handling for NoClassDefFoundError in REngine . java to ensure proper handling of NoClassDefFoundError in the application
refactor TraceWebFilter to use SpanAndScope instead of Span . class for better span management to improve clarity and maintainability of span
added a null check for the cause before setting the exception message to avoid potential NullPointerExceptions when accessing the exception
replaced ` SolrServerException ` with ` getBaseURL ( ) ` in ` CommonsHttpSolrServer . java ` to improve error handling by
updated the landscape setting logic in HSSFPrintSetup . java to ensure correct handling of landscape values based on the presence of the
added a null check for the object before returning null in JavaVoidObjectInspector . java to ensure robustness by preventing potential NullPointerExceptions
added a validation check for argument names in ArgDesc . java to ensure that invalid argument names are handled correctly
added background location listener handling in AndroidLocationPlayServiceManager to manage location updates based on the activity context to ensure proper handling of location updates during
changed the condition from checking if the primitive type is not GL10 . GL _ POINTS to comparison to ensure correct handling of primitive types
trufflestring : do n ' t use length ( ) instead of length ( )
added command list functionality to the ComboBox class to enhance user experience by allowing command list selection
nifi - 1746 : escape alias filename in pem file on window .
updated command names in ZkCLI . java for consistency and clarity to improve readability and maintainability of the code
[ wemo ] fix checkstyle violation in wemo light handler
added a conditional check for remoteGrpcStatus before posting the build event to avoid unnecessary posting when remoteGrpcStatus is OK
refactor method signatures in XYItemRenderer and related classes to improve code readability and maintainability
added a new entity ID to the tick ' s ticket type in ForgeChunkManager to ensure that the tick ' s entity ID is added
added a method to retrieve error messages in GLSurfaceViewAPI18 . java to improve error reporting for better debugging and debugging
added a method to retrieve supported locales in FeatureRegistry and updated InfoRequestHandler to use it to improve locale handling and provide clearer error messages for
updated server URI handling in RFC2616BaseTest . java to use " http " instead of " server . getServerURI ( ) " to
added a method to add a helper list to the Construction class to enhance the functionality of the Construction class
pdfbox - 4892 : skip escape sequence , a suggest by valerybokov
added security permissions and refactored context class loader management in Transport and TCPTransport classes to enhance security by ensuring proper context class loader management and
added null checks for the file path and folder in ReceiveExternalFilesActivity . java to ensure that the folder is not null before proceeding to
added a null check for m _ serviceLoaderClassLoader before loading ITestNGListener to avoid potential NullPointerException when m _ serviceLoaderClassLoader is null
removed debug logging from BarrowmanCalculator . java and adjusted the calculation in TubeCalc . java to streamline code by eliminating
added type checks for ` obj instanceof Node ` and adjusted column assignment logic in ` TimelineControllerImpl . java ` to ensure proper handling of
added registerExtraComponents method to BaseBrokerStarter to ensure proper registration of extra components for broker admin applications
added a new test method ` testBug4658 ` to verify the functionality of the ` MultiCfQueryExecIT ` to ensure correct
refactor PeerGroup to use LinkedList instead of ArrayList and improve version checking logic to enhance code readability and maintainability by eliminating unnecessary
added variables and calculations for previous and unchanged cycles in TileAbstractBuilder . java to ensure proper handling of state changes during the build process
updated ConfigNodeConfig to accept a Supplier < RatisConfig . RatisConsensus > instead of a long value to enhance flex
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
added a null check for the ManagedService annotation before unregistering the JMXHelper to prevent potential NullPointerExceptions when the ManagedService annotation is not present
tika - 1357 -- hanlde non - Unicode zip entry name in packageparser .
added a new file TestSplitThruPhiDivMod . java containing tests for division and division operations to facilitate testing of division
added methods to lookup generic type types and superclasses in TemplateRegistry . java to enhance functionality for handling generic type types and superclasses in the
increased the size of the ByteArrayOutputStream from 512 to 1028 in ByteArrayOutputStream . java to improve performance by reducing the size of the ByteArrayOutputStream
updated the language excluded list in PlayerSettingsScreen . java to include a todo message when symbols are not available to enhance user experience by providing clear
refactor byte array handling in TransferCompletionHandler to improve readability and maintainability of the code
updated visibility methods in SelectAvatarMenu , SIPCommMenu , and SIPCommPopupMenu to use WindowAdapter instead of WindowFocusListener
added a null check for the source node before throwing an error message to improve robustness by preventing potential NullPointerExceptions
added scaling functionality for aabb in SkeletonRenderer . java to enhance the rendering of aabb based on the specified scale
added a method to retrieve the Solr home path in DistributedClusteringComponentTest and BaseDistributedSearchTestCase to provide access to the Solr
added ComponentScan annotation to SpringWebConfig to enable component scan functionality in the application
removed the getAccount method from UserListItem . java to streamline the code by eliminating unnecessary method calls
added a new test method ` installPackage _ defaults ` to ` ShadowPackageManagerTest ` and modified package assignment logic in ` ShadowPackageManager
refactor AvailableSettings class to improve code readability to enhance maintainability and facilitate future updates
added constructors and methods for TransactionCapsule and ReceiptCapsule in TransactionTrace . java to facilitate the initialization and finalize of transaction
added a new property for shuffle member list in ClientProperties and updated the ClusterListenerSupport constructor to accept a boolean parameter to enhance flexibility in
changed the type of ` val ` from ` Text ` to ` CrawlDatum ` in ` SegmentReader . java ` to improve clarity
refactor JsonDeserializer class to improve code readability to enhance maintainability and facilitate future updates
updated the ` CONFIG _ NAME ` string and modified the ` fetchSize ` variable in ` QueryProcessExecutor ` and ` OverflowQueryEngine
rename " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to clarify the purpose of the trunc
removed the import of ExecutionContext from TaskletStep . java to streamline the code by eliminating unnecessary dependencies
set the default value of the title variable in Lwjgl3WindowConfiguration . java to an empty string to ensure that the title is
added empty body handling in AsyncHttpClientCall and a corresponding test in AsyncHttpClientCallTest to ensure that the response body is not null in the
added a new interface ` EmbeddedServerInstance ` to the ` io . micronaut . runtime . server ` package to indicate that the
added error handling for MacAdapter registration in JabRefFrame . java to improve robustness by providing clearer error messages when registering mac events
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update its usage to improve clarity
updated the return statement in HandlerLibrary . java to use a direct return statement to improve code readability and maintainability
changed the visibility of the ` hideUnprivilegedObjects ` variable from private to final to ensure that the ` hideUnprivilegedObjects `
updated logging level from info to fine in ThreadedAcousticScorer . java and modified batch file handling in AudioDataSourcesTest
added a check to save Giphy Android 11 if the device is Android Q to ensure compatibility with Android Q and newer Android versions
[ activiti ] fix deserialization of variableinstanceentity in servicetaskvariablestest
refactor EhCacheTicketRegistry , GoogleAccountsService , SamlService , and SamlCompliantUniqueTicketIdGenerator classes to improve
refactor logger retrieval logic in MavenLoggerFactory to use computeIfAbsent for better readability to improve code clarity and maintainability by reducing
deleted the DataOutputOutputStream . java file and modified the import statements in HbaseObjectWritableFor96Migration . java to streamline the codebase
updated the configuration for the " hive . stats . column . autogather " property in TestAcidOnTez . java to ensure correct
change log level from info to debug in MavenEnhancePlugin . java to improve log verbosity for enhanced classes
added ` getDefaultProviderName ( ) ` method to ` Platform ` , modified ` PROVIDER _ NAME ` to use ` Platform . getDefaultProviderName (
added imports for Captor and Captor annotation processing in MockitoBeforeTestNGMethod . java to enhance functionality for processing Capt
added checks for onlyRun and testMethodNames in TestSuiteBuilder . java to ensure proper error handling for missing test cases
updated import statements and modified prefix computation logic in GroovyAutoComplete . java , GroovyLanguage . java , and GroovyLanguage . java to improve code
updated GraphHopper initialization to use GraphHopperOSM instead of GraphHopper to ensure compatibility with the latest OSM features
simonstewart : use the default configuration for the client in the handlesession . java file
changed the visibility of mHideSysUiScrim from final to non - final and added shadow visibility handling in PreferenceManager2 to improve
renamed the ` enqueue ` method to ` enqueue ` and added a ` canceled ` flag in ` OkHttpCall ` to improve clarity
refactor swipe handling logic in WindowTransformSwipeHandler . java for better clarity to improve code readability and maintainability by reducing
replaced the interface ` RequestMatcher ` with a extend ` org . springframework . security . web . util . matcher . RequestMatcher `
added a new abstract class ` ImplicitLambdaConsideredForApplicabilityTest ` and created a new abstract class ` ImplicitLambdaConsider
refactor test methods in Main . java for better clarity and consistency to improve code readability and maintainability
added unit tests for ` applyQualifiers ` and ` setDimensions ` methods in ` DeviceConfigTest ` and ` DeviceConfig ` classes to
updated class declarations in ExternalViewReaderTest , PinotDataTypeTest , and PluginClassLoader to use System . currentTimeMillis ( ) instead of LocalDateTime to
updated the icon resource from logo to mipmap . ic _ launcher in RootCursor . java to align the icon with the new mip
added content text setting for error builder in FileUploader . java to improve user experience by providing clearer error messages
refactor ConcurrentHashMap class for improved performance to enhance performance and maintainability of the code
added methods to adapt UserTrades and UserTrades to the AbucoinsAdapters and AbucoinsTradeService classes to enhance trading
updated condition checks in PlotSquared . java and added new case statements in Delete . java and Delete . java to improve plot handling logic and ensure
simonstewart : add support for proxy and internet explorer in the htmlunitdriver
added support for handling VARBINARY types in BlobType . java to enable handling of VARBINARY data types in the database
refactor cookie version handling in SetCookieSupport . java to improve clarity and consistency to enhance code readability and maintainability by reducing
added synchronization around simpleTypeMap array creation in LibFFIContext . java to ensure thread safety when accessing the language ' s cache type
replaced Vertx context handling with ContextInternal and VertxThread in InboundBuffer . java to improve thread safety and ensure proper context validation
modified the ` waited ` variable and added a new test method ` deadServerNoTimeout ` in ` LdapTimeoutTest . java ` to
updated usage message from " UniocdeData . txt " to " UnicodeData . txt " to clarify the purpose of the
camel - 14284 : camel - cxf - add inout header to camel - cxf
refactor multiple UI classes for consistency and clarity to improve maintainability and readability of the codebase
added support for BoosterSet in ComponentAssemblySaver and modified BoosterSet return value in BoosterSet to enhance flexibility in handling
added authentication support for proxy requests in JabRef . java to enhance security by allowing proxy authentication based on user and port settings
refactor MetricsUtil methods to use a dynamic time variable instead of a hardcoded value to simplify code and improve readability by eliminating
updated error handling in Class . java to return false instead of throwing an InternalError to improve error handling for JEP 359 support
updated imports and logging in TestIPCUtil . java for improved logging clarity to enhance code readability and maintainability by using a
removed chunked transfer handling from NettyRoutingFilter . java to simplify the code by eliminating unnecessary chunked transfer handling
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure proper attribute management during processing
added a polling period parameter to the ` VerificationAfterDelayImpl ` constructor and updated error handling in ` VerificationAfterDelayImpl ` to enhance verification
added a compaction check in SQL standard authorization configuration and modified conditional logic in SemanticAnalyzer and QueryCompactor classes to ensure proper handling of compaction state
refactor DockerInterpreterProcess to use a list of jar files instead of hardcoded paths to improve code readability and maintainability by reducing
hbase - 11818 hbaseadmin # gettableregions ( byte [ ] tableName ) do n ' t throw ioexception if table
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable tests that are no longer needed
removed unnecessary calcXBounds method calls in BarLineChartBase , CombinedChartRenderer , and Renderer classes to streamline rendering logic by elimin
added error handling for XML reader parsing in SimpleSAX . java to ensure proper resource management and prevent memory leaks
release the header buffer in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and refactored ` Java17TypeSignatureBuilderTest ` to
added null and closed check before closing the ResultSet in JdbcExecutor . java to ensure proper resource management and prevent potential NullPointerExceptions
update driverVersionMajor and driverVersionMinor from - 1 to 10 and 6 in DerbyDatabase . java to ensure driverVersionMajor and driver
added a new test descriptor for handling empty literals in UseStringBufferLengthTest . java and modified the return condition in UseStringBufferLength .
removed error logging from RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary logging
updated the createDb method to return a Connection instance instead of void to improve resource management and ensure proper resource management
refactor CreateCustomMetric , ListResources , and ListResourcesTest files to improve code organization and maintainability
hbase - 11818 compaction . max . size . offpeak should be use by hbase - hstore . hstore . compaction
updated the handling of the " address " property in BitstampDepositAddress . java and added DepositAddressJSONTest . java to
replaced ` throw new IllegalStateException ` with ` response . abort ( ) ` in ` BufferingResponseListener . java ` to improve error handling
updated the method call to convert the linkPath to absolute path to ensure proper handling of absolute paths in deleted directories
replaced ` Event ` with ` MetricsEvent ` in ` InvocationFinishedEvent ` and updated related methods in ` DefaultMetricsRegistry ` to improve
refactor NetworkInterface handling in OptionsTest . java to use a while loop for multicast support to improve code readability and maintainability by reducing
removed redundant code for checking validCheckSums in ChangeSet . java to streamline code for better readability and maintainability
added a clone method to the BufferedChecksumIndexInput class to ensure that the Clone method does not throw an UnsupportedOperationException
updated the return condition to check for radius in the Circle class to ensure that the radius is within the correct bounds of the circle ' s radius
modified frequency band assignment logic in P25Channel . java and added overridden methods in P25ExplicitChannel . java to ensure proper handling of frequency
renamed tapSquareSize and inTapSquare to tapRectangleWidth and tapRectangleHeight in GestureDetector . java to improve clarity and
changed the default value of DEFAULT _ REPLICATE _ ON _ WRITE from true to false to disable reuse on write operations in CFMetaData .
added a ` lastFillTime ` parameter to the ` CryptoFacilitiesAuthenticated ` class and modified the ` Util ` class to include it to
added ` getDelegate ( ) ` methods to ` TraceCallable ` , ` TraceRunnable ` , and corresponding tests in ` TraceCallableTests `
refactor error handling in FileActivity and FileDisplayActivity to improve clarity and error message handling to enhance user experience by providing clearer feedback
added quiche _ conn _ stream _ writable method to ForeignIncubatorQuicheConnection and JnaQuicheConnection classes
added a new boolean parameter ` true ` to the ` JavascriptContext ` class to control the behavior of the ` JavascriptContext ` class
refactor TableCell initialization to use a custom OutputFormat parameter to improve code readability and maintainability by reducing redundancy
added a new file ` TracingAutoConfiguration . java ` that implements auto - configuration annotations to enable tracing functionality in the application
updated the method of adding a Para to the second P paragraph in Submissions . java to improve clarity and maintainability of the code
updated the ` getPrunedQueryableSegments ` method to accept a ` List < IndexSegment > ` parameter and adjusted segment decrement logic to
refactor VertxBufferTest . java for improved readability to enhance maintainability and facilitate future updates
add a new test class for reading message date extra hyphen submission chunks in MessageSubmissionChunk . java and update AllHSMFTests . java to
changed the visibility of mContext from private to protected to allow subclasses to access the mContext variable
removed unused imports from ShowTablesOperation and ShowViewsOperation to streamline code by eliminating unnecessary dependencies
added a new class ` MongoDataIntegrityViolationException ` and modified ` MongoTemplate ` to throw ` DataIntegrityViolationException ` for better error handling to
[ hotfix ] [ runtime ] remove unnecessary return statement in jobcoordinationservice
refactor ` bitsToHumanReadable ` and ` bytesToHumanReadable ` methods to use ` mimeType2HUmanReadable ` instead of
refactor merge policy creation in TestUpgradeIndexMergePolicy and add a new test method in TestMergeOnFlushMergePolicy to improve code cl
added a condition to return early if the overview state is not enabled to optimize performance by avoiding unnecessary processing when the overview state is disabled
updated error message format in CpuNDArrayFactory . java to include a link to the API documentation to improve clarity and maintainability of the
updated the ` loadSettingModels ` method to accept an ` InputStream ` parameter to enhance flexibility by allowing input stream for setting model loading
added null checks for incoming fields , Terms , and DocsAndPositions enum in FilterLeafReader . java to enhance robustness by preventing
added a SecretKeySizeProvider for key size retrieval in JceCRMFEncryptorBuilder . java and created a corresponding test in AllTests .
updated IOException handling in NetSocketReader and removed redundant constructors in SoftEndOfStreamException to streamline exception handling and improve code clarity
removed unnecessary @ Inject annotations from multiple Java files to streamline the code by eliminating unnecessary dependencies
updated test size from 9 to 10 and added assertions in BundledDistributionTest . java and PostgreSQLTest . java to improve test accuracy and ensure
[ hotfix ] [ stream ] add pipeline . name option to streamexecutionenvironment
updated scale calculation logic for two panels in OverviewState . java to ensure correct scaling based on device layout settings
updated IcePlainsBiome class to extend SnowyBiome instead of GrassyBiome and added PopulatorTree to
refactor methods in DataUpdateManager and StorageUtils to improve clarity and consistency to enhance code readability and maintainability by standardizing method
added a new boolean field ` isQualified ` and its getter and setter methods in ` ThisReference ` and ` CompilationUnitBuilder ` classes to
updated regex pattern in XhamsterRipper . java to include additional characters to ensure proper handling of characters in the gallery URL
refactor entity handling in GlowWorld . java to use a temporary ArrayList to improve performance and maintainability of entity management
updated the tableName assignment logic in OracleDialect . java to conditionally set the table name based on the schema to ensure that the table name is
corrected the spelling of ` pathPart ` to ` part ` in ` FlutterConsoleFilter . java ` to ensure correct handling of
added a new variable ` mNumberOfAllFiles ` and modified the ` FileMenuFilter ` constructor to include a ` numberOfAllFiles ` parameter
[ java ] change termwindowlength to termlengthmask for network publication .
refactor GuildUpdateOwnerEvent class to improve code readability to enhance maintainability and facilitate future updates
added conditional logic to increment the inPortalTicks based on creative status to ensure that the inPortalTicks is only incremented if the creative is
added compression functionality to the chart pane in ClusterMonitorTileSkin . java to enhance the visual appearance of the chart pane based on the specified
refactor ResponseTemplate , TransactionalListCodecTemplate , TransactionalMapCodecTemplate , and TransactionalSetCodecTemplate classes to improve code organization and maintainability
updated the calculation of ` lengthDataBits ` to use ` long ` instead of ` int ` for improved clarity to enhance code read
updated the condition for checking if the renderer is null in RendererConfiguration . java to ensure proper handling of null renderer configurations
cloudstack - 3842 : add support for new disk offering change on vms with custom service offering
updated import statements in HitbtcAdapters . java and modified Order . Builder to use LimitOrder . Builder instead of a wildcard import to
replace idleCount with consecutiveIdleCount in LLRealtimeSegmentDataManager . java to improve performance by reducing the number of consecutive idle counts
updated the description of the JRuby Scripting service from " automation : jruby " to " automation : jrubyscripting " to align
updated variable name and display name handling in ConfigCategory . java to improve clarity and consistency in variable naming conventions
added a condition to check if the exchangeAmount is greater than or equal to - 0.000001f to ensure proper handling of precise
removed the loop condition from FeedUtils . java to streamline the processing process by eliminating unnecessary loop
added a new test method ` testHDF4 ` in ` HDFParserTest . java ` to verify the functionality of the ` HDFParser
added a new constant CALCITE _ 6092 _ FIXED and modified time value validation logic in SqlOperatorTest . java to ensure proper
removed redundant whitespace in IDEEditor . java to improve code readability and maintain consistency
added a method ` quietCloseAll ` to handle null closeables in ` CloseHelper ` to improve robustness by preventing potential NullPointerExceptions
updated confirmation button name from ` posBtn ` to ` common _ yes ` in ` RemoveFileDialogFragment . java ` to improve clarity
added a null check for srcWidth and dstWidth in the drawImage method to avoid potential NullPointerExceptions when srcWidth and dstHeight are non -
replaced ` ReflectionHelpers ` with ` java . security . ProtectionDomain ` in ` UnsafeAccess . java ` to improve compatibility with Java
updated regex pattern format in GUIUtil . java and added validation tests in GUIUtilTest . java to improve regex validation accuracy and ensure correct validation
updated the ` conflicts ` variable and logic in ` CachedRowSetWriter . java ` to use a long instead of a boolean to improve performance
updated version handling in SdkConfigurationNotificationProvider and FlutterSdk , FlutterSdkUtil , and FlutterSdkUtil classes to ensure compatibility with
modified the reference handling in ReferenceMemory . java to include a conditional check before returning the reference to ensure that references are only returned when the reference
added file input handling and logging for seed injection in Injector . java to improve error handling and provide clearer logging for missing seed files
added a condition to hide the original view in FloatingIconView . java to ensure that the originalView ' s visibility is only set when
updated the calculation of maxNodes and modified the condition in DefaultLoopPolicies . java to ensure that the maximum node count does not exceed the maximum
added support for texture coordinate type support in CombinedTexture and UVCoordinatesGenerator classes to ensure texture data is covered only if the texture coordinate type
added error handling for file deletion in EncodeActivity , SupplementalInfoRetriever , DecodedBitStreamParser , and MatrixUtil classes to improve robust
added seek and close methods to TracingConsumer and TracingProducer classes to enable proper handling of seek and close operations in the TracingProducer
updated substring handling in HandleDAOImpl . java to use newPrefixLength instead of substring length to ensure correct handling of prefix values based on the
removed the addition of the collection in the convertedValsList initialization to simplify the code by eliminating unnecessary addition
added a deprecated constructor to the AbstractTimer class to indicate that the constructor is deprecated and should no longer be used
added a warning message for nightly build in MainWindow . java to provide clearer user feedback when the version of Universal Gcode Sender
added a condition to check if the email is a generated team and modified the getResponsesSortedByRecipient method to include a sortByTeam parameter to
corrected the return value in UnnecessaryThrows . java from " Remove unnecessary throws " to " Remove unnecessary ` throws ` declarations . "
deleted the CacheApplication . java file and updated related imports in CommonsApplication . java and ShareActivity . java to streamline the codebase by
replaced instances of ` getApplicationContext ( ) ` with ` RuntimeEnvironment ( ) ` in ` ShadowContextImpl . java . vm ` to
refactor StatisticsServlet class to improve code structure to enhance maintainability and readability of the code
updated RuntimeEnvironment to update configuration based on SDK version to ensure compatibility with KitKat and newer Android versions
added a constant for the version definition ` / stack _ repo _ update _ link _ exists ` and a corresponding test in ` StackManagerTest
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
added a null check for oldIndexName in CFMetaData . java to prevent potential NullPointerExceptions when the oldIndexName is null
added " com . sun . org . apache . xml . internal . resolver . helpers . " and " com . sun . org . apache
rename ` save ` method to ` add ` and ` updateExecutionContext ` across multiple classes to improve clarity and consistency in method naming
added handling for LoopExitNode instances in GraphUtil . java to ensure proper input processing for loop exit nodes
refactor SearchAndRecommendationsScrollController to use WidgetsRecyclerView instead of RecyclerView for improved layout management to enhance user experience
added a check to ensure the terminal is not available before proceeding to avoid potential errors when the terminal is not available
updated time handling in CloudExitableDirectoryReaderTest and LBHttpSolrClient to use Integer instead of Long to improve flexibility in time
added session validation check in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure that session data is validated before proceeding with the
added null check for columnNames before setting column names in ChangedIndexChangeGenerator . java to prevent potential NullPointerException when columnNames is null
replaced ` java . util . Vector ` with ` ArrayList ` for managing buttons in ` ButtonGroup . java ` to improve performance and maintain
refactor UserManagerCompat , UserManagerCompatVL , and UserManagerCompatVN to extend UserManagerCompatVM instead of UserManager
added getDatabaseMajorVersion ( ) and getDatabaseMinorVersion ( ) methods in MockDatabase , AbstractDatabase , and HibernateDatabase classes to return the
refactor ActionGraphCache to utilize a new method for improved clarity and maintainability to enhance code readability and maintainability by
added LockDatabaseDesc and UnlockDatabaseDesc classes to manage lock , mode , queryId , and unlock database properties to enhance functionality for managing database
updated RankingTopComponent and RankingUIModel to utilize a new instance of RankingUIModel to streamline the
added disconnection handling for disconnect messages in HandshakeHandler . java and modified logging in NodeImpl . java to ensure proper handling of disconnect messages and
added a test method for setting and deleting storage groups in IoTDBAuthorizationIT . java and implemented it in IoTDBAuthorizationIT . java to
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 ( # 260 )
updated type validation logic in Assertions . java and added new methods in FindMissingTypes . java and TypeValidation . java to improve type validation
added multiple methods for afterTestClass and beforeTestClass in StepScopeTestExecutionListener . java to enhance test execution functionality for better test execution
[ java ] update countermanager to use utf - 8 encoding for metadata buffer .
removed the ` @ Override ` annotation from the ` toString ( ) ` method in ` MultiSteps ` and ` SendEmail ` classes to simplify
added a null check for joinKeys in JoinDesc . java to ensure that the joinKeys array is cloned when necessary
updated WebAuthnConfiguration to use a custom PrincipalResolver for authentication handler registration to enhance security by allowing customization of principal resolvers
added a new parameter ` searchPaths ` to the ` addSettingsFromFile ` method and modified the ` addSettingsFromFile ` method to accept a
changed variable declarations from ` final ` to ` final ` in Oracle . java to enforce immutability and enforce immutability of variable declarations
[ hotfix ] [ runtime ] exclude unaligned checkpoint from executioncheckpointingoptions documentation
[ calcite - 4392 ] fix unsupportedoperationvisitor in queryparser ( # 4392 )
refactor print statements in CompileTheWorld . java to use a dedicated println method to improve code readability and maintainability by reducing red
removed a check for LocalVariable type in LambdaRewriter . java to simplify the code by eliminating unnecessary exception handling
added support for MySQL databases in CreateTableGenerator . java to ensure proper handling of null values for MySQL databases
added context class loader management in EnvConfiguration . java to ensure proper resource management and prevent potential memory leaks
added a condition to set the motor easing delay based on the stageNr parameter to ensure the motor configuration reflects the current stage number before proceed
rename FunctionalRunnerConfig to BeanDefinitionOrderRunnerConfig in SpringApplicationTests . java to improve clarity and consistency in naming conventions
refactor TransactionUtil2 class to improve code readability to enhance maintainability and facilitate future updates
replaced ` getIssuer ( ) ` method with ` resolveIssuer ( Optional < OAuthRegisteredService > service ) ` in multiple token signing services
added null check for collection before printing them in ClusterState . java to improve robustness by preventing potential NullPointerExceptions
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` in `
added support for foreign database and schema names in ForeignKeyColumn and AbstractRelationalDbmsHandler classes to enhance functionality for managing foreign database and schema names
[ java ] do n ' t fail to join catchup and live log if a follower fail to join .
replaced the static import of Shadows . shadowOf with a private method shadowOf in ShadowActivity . java and ShadowBluetoothDevice .
added checks for null or empty root in FileSelection . java and implemented a new test for DRILL - 4192 in TestBugFix
deprecated onInventoryTick and onArmorTick methods in IForgeItem and IForgeItemStack classes to indicate that onInventoryTick
refactor ZipOutputStream and ZipOutputStream in Export . java and IOUtil . java for improved file handling in IOUtil . java to enhance
added null check before calling invalidateOptionsMenu ( ) in SingleUploadFragment . java to avoid potential NullPointerException when getSherlockActivity is not initialized
refactor widget binding logic in AppsCustomizePagedView and Launcher classes to improve flexibility in binding widget options based on user
added new CAPABILITY _ AIR _ PRESSURE , CAPABILITY _ AIR _ QUALITY , and CAPABILITY _ VOC
simplified formatting and formatting in OperationSetServerStoredContactInfoFacebookImpl . java to improve code readability and maintainability
added " AAPT " and " AAPT2 " environment variables to Genrule . java and corresponding tests in GenruleTest . java to
[ gr - 11818 ] disable instrumentation dump when trufflecompileroptions . truffleinstrumentBranches be true
added null check before disposing the message object to avoid potential NullPointerException when message is null
changed the access modifier of ` db ` from private to public and added a new ` initCache ` method in ` TronStoreWithRev
sLF4j : disable logwatching if log4j be not implemented
replaced printStackTrace ( ) calls with fail ( ) for cloning failures in CategoryPlotTests . java to improve error handling and provide clearer
added null check for ` n ` before calling ` ByteArrayOutputStream ` and ` SmallByteArrayOutputStream ` in ` IOSImplementation . java ` to
replaced HashMap with IntMap for attribute retrieval in OGLESShaderRenderer , Shader , and Screenshots classes to improve performance
updated the connection string from " territory = en _ US " to " shutdown " in AbstractDIHJdbcTestCase . java to ensure
added null checks for ` firstExchangeTimestamp ` and ` lastExchangeCompletedTimestamp ` in ` RouteInfo . java ` to ensure robustness by
updated language handling in TestHtmlTag and added new output checks in TestUseOption and C1 classes to improve code clarity and ensure correct
added a condition to check if the result is incomplete in CompletionProvider . java to ensure proper handling of incomplete items in the CompletionProvider
updated the time column name handling in HybridClusterIntegrationTestCommandLineRunner . java to improve clarity and consistency in command line usage
updated output format handling in multiple test classes to use " svg . html " instead of " svg . html " to ensure compatibility with the latest
updated condition in DeviceProfile . java to check if the QSB is not enabled before adjusting the bottom space to ensure proper handling of Q
added ` equals ` and ` hashCode ` methods to ` AnimationList ` , ` GltfModelKey ` , and ` Gltf
added a ` _ date ` variable and its getter and setter methods in ` AbstractGenerator ` , ` Generator ` , and ` HttpGenerator `
replaced ` Adler32 ` with ` CRC32 ` in the ` Store . java ` file to streamline the code by using a
change the default value of XenHeartBeatInterval from " any # of seconds " to " null " to ensure that the heartbeat
added a new constant ZERO _ AREA _ FIN and modified warning handling in FinSetCalc . java and FinSetCalc . java to improve
refactor JSON serialization in ElasticsearchIO to use StdSerializer for better serialization to improve performance and maintainability of the JSON serialization process
hhh - 14703 - add support for date _ trunc function in h2dialect
added a check for " Memory Pool not found " error in MetricUtils . java and updated error handling in MetricUtilsTest . java to ensure
modified UserTests , UserContext , FileAccess , and FileTreeNode classes to include a boolean parameter for JavaScript usage to enhance functionality by allowing JavaScript
refactor ValidationTask to use RUNTIME _ OBJECT _ TYPE instead of ConfiguredBy for clarity to improve code readability and maintainability
updated BACKFILL path from " / generateAnomaliesInRange " to " / replay " in DetectionResourceHttpUtils . java to
replaced instances of ` new DataWord ( ) . getData ( ) ` with ` new DataWord ( 1 ) . getData ( ) `
refactor app handling logic in AllAppsContainerView to improve clarity and consistency to enhance code readability and maintainability by using a more
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated method calls in ResourceService and ResourceHandlerTest for better clarity to improve code readability and maintainability
removed conditional check for custom drawing identifier in Cling . java to simplify the logic by eliminating unnecessary logic
removed assertion for lookupModule in TruffleJDKServices . java to simplify the code by eliminating unnecessary assertions
added JUnit @ Ignore annotation to ` shadowInvocationWhenChildIsInstrmentedButUnshadowed ` method in ` ClassicSuperHandling
removed unused import statements from ItBitDemoUtils , ItBitOrderBookDemo , ItBitTradesDemo , and ItBitTradesDemo
updated parameter handling in ProfilingActivationInterceptor and ScopeInterceptor to improve type safety to enhance code clarity and maintainability by using a more
changed class visibility of Utils , ApplicationUtils , AsyncSocketFactory , and Whois classes from public to final to enforce immutability and enforce
add try - with - resources to avoid resource leak
replaced instances of ` o . getClass ( ) . getName ( ) ` with ` java . util . Vector ` and ` java . util
updated log message to include tableNameWithType as a parameter to improve clarity of error messages for better debugging
trim whitespace from fragmentList in QueryExecutorImpl . java to ensure proper handling of empty fragments
replaced ` path . toFile ( ) ` with ` modFile . getFilePath ( ) . toFile ( ) ` in ` ResourcePackFileNotFoundException
removed unnecessary nodeTransformerGroup and edgeTransformerGroup references from the PartitionToolbar class to simplify the code and improve readability by eliminating unnecessary
refactor conditional checks in RecentsView . java to improve code readability and maintainability to enhance readability and maintainability of the
replaced ` Map < String , String > ` with ` BMIViewObject ` in multiple classes to streamline the calculate method signature and
simplified the comparison logic in QueryCommand . java to improve code readability and maintainability
fix wrong damage when damage be 0.8f
refactor environment variable handling in WindowsProcessAddressSpace . java and J9DDRImageProcess . java to improve code readability and ensure
added support for custom plugin properties in OptionsParser to enhance configuration flexibility for custom plugin properties
added a check for empty hashTable in HashJoinBatch . java to ensure that the hashTable is not null and is not empty before proceed
added a condition to check if the timestamp timestamp is within a valid range and modified test methods in TimestampTest . java to improve accuracy of timestamp
[ java ] remove unnecessary variable ` archiveCtx ` from ` connect ` method in ` ClusteredServiceAgent . java ` to streamline code
added a condition to check if the compilation condition is not compiled before validating the invokerType to ensure that the invokerType is correctly validated when the
added new test methods for image management in multiple test classes to enhance testing capabilities for better testing capabilities
added NAMESPACE _ LAUNCHER and TAG methods to TogglableFlag . java and modified method signatures in BaseFlags . java to
updated logging messages in DockerClientFactory . java for clarity to improve readability and maintainability of the logging output
added a condition to return early if the current platform is ANDROID to avoid unnecessary processing when the application is in the ANDROID environment
refactor assertions in RoutesTest to use assertThat instead of assertEquals to improve readability and maintainability of the test code
added two interfaces ` BytePredicate ` , ` FloatPredicate ` , and ` ShortToLongFunction ` to the ` com . speedment . common
updated getSubsColor method to return a String instead of an integer to improve flexibility in handling subtitle color values
added a conditional check before deregistering the invocation registry in Invocation . java to avoid potential NullPointerExceptions when completing the future
replaced the creation of ` ControlFrameBytes < Void > ` with ` output ( null , close . asFrame ( ) ) ` to
added a check for the " redirected " flag before starting the WelcomeActivity in LoginActivity and SignupActivity to ensure proper handling of redirect
added a new ` ShadowCheckedTextView ` class and modified ` Robolectric ` to implement a ` CheckedTextView ` class to
added Serializable interface to ParserState and modified access modifiers in AccessorProperty and Property classes to ensure proper serialization of the ParserState class and improve
added " identrustdstx3 [ jdk ] " to VerifyCACerts . java to enhance security by enabling IDentr
replaced calls to ` context . setAttribute ( TEMPDIR _ CONFIGURED , null ) ` with ` context . setAttribute ( TEMPDIR
added import for StringUtils and updated nick parsing in Occupant . java and added an assertion in MultiUserChatTest . java to improve
removed the ` context ` parameter from the ` QuicSession ` constructor and related classes to simplify the constructor and improve code clarity
replaced instances of ` writer . setMergeScheduler ( ) ` with ` writer . getConfig ( ) . setMergePolicy ( ) ` and
refactor ICU4JImpl . java and TextPosition . java to improve code readability and maintainability to enhance code clarity and maintain
added imports for ComputedDateValue , ComputedNumericValue , and ComputedNumericValue , and updated default value assignment logic in AddDefaultValue
rename NbtScoreboardIoService . java file to improve clarity and consistency in naming conventions
updated SAML2Configuration and SAML2FileSystemMetadataGenerator to check if the service provider metadata resource is a writable resource to ensure that the metadata is
changed the visibility of the ` printer ` variable from private to protected and modified the ` createPrinter ` method in ` GraphPrinterDumpHandler `
added import for BigDecimal and updated average price calculation in HuobiAdapters . java to improve code clarity and ensure accurate average price calculation
refactor fields handling in ProjectionOperation , TypeBasedAggregationOperationContext , and TypeBasedAggregationOperationContext classes to improve clarity and consistency in
added a check for the collection of players in the FakePlayer class to ensure that the player ' s viewers are not added before proceeding
added null check for layout in Workspace , FolderAdaptiveIcon , ShiftedBitmapDrawable , and ShiftedBitmapDrawable classes to ensure robustness
refactor connection handling in SPDYClient to use AsyncSPDYConnection and AsyncSPDYConnection to improve code clarity and
fix nullpointerexception in protostuffobjectoutput . writeobject ( null )
pdfbox - 4892 : fix typo , a suggest by valerybokov
refactor BarrowmanCalculator class to improve code structure to enhance maintainability and readability of the code
added a condition to return early if no axes are present in the DrawAxis class to improve performance by avoiding unnecessary processing when no axes are
replace filter and wrap methods with unsafeSetFilter and unsafeSetWrap in Texture . java to improve code readability and maintainability by using unsafe
removed unnecessary whitespace in the returnToWorkspace method call to improve code readability and maintain consistency
added support for HTTPS connections in CustomUrlJob . java and created a new class CustomUrlTrustEverything . java to enhance security by allowing
refactor clock rate string representation in EncodingConfigurationTableModel and MediaFormatImpl to improve clarity and consistency to enhance code readability and maintain
refactor TextureAtlas class to improve code organization to enhance maintainability and readability of the code
replaced ` getProductNameForBuildTargetNode ` with ` getModuleName ` in ` ProjectGenerator ` and added a method to set the module
[ hotfix ] [ test ] fix thread safety issue in testslot
# 1181 - fix query . findids ( ) with inheritance ( # 1181 )
replaced the usage of ` closeFrame ` with ` rbuf ` in ` WebSocketServletRFCTest . java ` to improve clarity
[ wasm ] fix nullpointerexception in wasmfunctionnode . pushreference ( )
added a new ` setTtl ` method to ` ClickHouseLogCollectClient ` and integrated it into ` ClickHouseLogCollectConfig
updated serialization types for NESTED _ OBJECT and NAMED _ FIELD in CustomChangeWrapper , CustomPreconditionWrapper , and XMLChangeLog
replaced ` QueuedThreadPool ` with ` Handler ` for server startup and stop methods in ` DeploymentExceptionTest . java ` to improve server
added error handling for initialization and initialization in CommonsApplication , NearbyController , and VectorDrawableCompat to improve robustness by catching
added null and empty check for objectName in PostgresDatabase . java to avoid potential NullPointerException when objectName is null or empty
updated error message in UserDataException to include the error message instead of a hardcoded string to improve clarity of error messages for better debugging and
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner -
updated X500Name initialization and added null checks for subject name in KeyTool . java and Resources . java to improve robustness by preventing
added a deprecated annotation to RuntimeOptions . java to indicate that the method is outdated and should no longer be used
replaced ByteBuffer usage with a method to retrieve byte values from a string to simplify code and improve readability by using a more descriptive method
added a new interface ` PermissionEvaluator ` in the ` org . springframework . security . expression ` package to facilitate permission evaluation
added a new option ` ERASE _ LINE _ ON _ FINISH ` to the ` BRACKETED _ PASTE ` and
modified the condition to check if the server is not already in the onlineServers list to ensure that the server is not in the onlineServers list
updated exception types from CALC _ MERKLE _ ROOT _ FAILED to BLOCK _ MERKLE _ ERROR in multiple files
refactor JarFile and InputStream handling in ExpandWar . java for improved clarity and consistency to enhance code readability and maintainability by
refactor error handling in DefaultHttpClient and FullNettyClientHttpResponse to use Throwable instead of Exception to improve error handling and provide clearer error
updated the calculation of the wrapper from center to centerAbsolute in Picker . java to ensure the wrapper reflects the absolute position of the spinner
refactor memory segment recycle logic in NetworkBufferPool and add a test for memory segment requests in NetworkBufferPoolTest to improve memory management and
refactor MBeanServer initialization to use a static variable for better clarity to improve code readability and maintainability by reducing duplication
replaced ` RunWith ` with ` RetryTestRule ` in ` AbstractIT . java ` to utilize a new ` RetryTestRule
replaced ` autoCommit ` boolean with ` transactionManager . getRequiredTransactionId ( ) ` in ` CallTask . java ` and ` Query
updated import statements in CsvFieldType , CsvTable , CsvTableScan , and CsvTest classes to align with the new package - info . java
added support for " javax . microedition . khronos . opengles . GL " in the InstrumentationConfiguration class to
[ hotfix ] [ test ] fix typo in streamtasktimertest
refactor URI retrieval logic in Request . java and add a new test for CONNECT requests in RequestTest . java to improve clarity and ensure
updated the access modifier of KEY _ LAST _ SEEN _ VERSION _ CODE from private to public and added a method to retrieve legacy storage points
added methods ` sessionAvailable ` and ` sessionUnavailable ` to ` SessionManager ` for session availability and unavailability to enhance session management capabilities by
added a method to add the " liquibase . pro " package to the ServiceLocator class to enhance the functionality of the Liquib
replaced the ` deleteSyncFolders ` method with ` deleteOtherSyncedFolders ` in the ` MainApp ` and ` SyncedFolderProvider
updated the ` loadWithNewGlobal ` method to accept an additional ` Object [ ] ` parameter to enhance flexibility in handling global arguments and
refactor relative path handling in FastPathResolver . java for improved readability and maintainability to enhance code clarity and maintainability by
replaced ` length ( ) ` with ` getRetainedSize ( ) ` in ` HiveClientModule . java ` to ensure accurate size
rename ` isExceedRandomizedType ` to ` hasAlreadyRandomizedType ` across multiple classes to improve clarity and consistency in naming conventions
[ calcite - 3596 ] support lead function ( < value expression > , 1 ) in window frame ( # 3596 )
clear the headers in AbstractProxyServlet from the proxyRequest to ensure that the proxyRequest headers are cleared before processing
added a check for the SA attach in CompressedClassSpaceSizeInJmapHeap . java to ensure that the test does not fail due
added null checks for bgColor in GraphicsDevice . java and created TranslucentWindow . java to ensure robustness by preventing potential NullPointerException
added null checks for user information and improved error message handling in UserInfoActivity . java to enhance robustness by preventing potential null pointer exceptions
added custom serialization support for PrecompiledHeaderData and updated PreprocessorDelegate to check for leadingIncludePaths to ensure that precompiled headers are properly
[ hotfix ] [ table - planner - blink ] make update - mode configurable
added a new test class ` MultipleOutputsIntegrationTest ` for testing named output groups and source files to ensure correct behavior of named output groups and
updated regex pattern in FileSettings . java and added content assignment logic in FileSettings . java to improve code readability and ensure proper handling of
refactor variable handling in StatelessFlow and related classes to improve clarity and maintainability to enhance code readability and maintainability by central
replaced ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests . java
added a @ TaskbarModeSwitch annotation to TaplTestsQuickstep . java to manage taskbar mode for improved performance monitoring
added new device command entries for " leaving - dock " and " energy - save - mode " in DeviceStatus . java to enhance device management
[ model ] fix itemloadingexception in modelloader
removed unused imports and added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are no longer needed
added a conditional check for 2X graphics before retrieving the current surface scale to ensure that the current surface scale is only returned when the graphics is
refactor RussianLowerCaseFilter class for improved readability to enhance maintainability and clarity of the code
replaced serverProps and clientProps with EMPTY _ PROPS in CsvBulkLoadToolIT . java and QueryUtil . java to streamline configuration
added separator character replacement for displayName in FileDisplayActivity to ensure consistent display name formatting across different operating systems
changed access modifiers of ` in ` , ` in ` , and ` inRead ` from private to protected and added a ` ResettableInputStream
added a new boolean field ` repeatFirstLineIndent ` and updated the ` setIndent ` method to accept a boolean parameter to control the indentation
changed the type of the ` oid ` variable from ` Object ` to ` Object ` to ensure type safety and prevent potential ` ClassCastException `
removed redundant code for setting metrics and health check registry in HikariPool . java to streamline code and improve readability by elimin
replaced ` ControlFlowAnchorNode ` with ` ControlFlowAnchored ` in ` LoopEx . java ` to align with the new
added focus painting functionality to the buttons array in WindowsPlacesBar . java to improve user interface responsiveness by preventing unintended
added support for ` UniqueConstraint ` and ` ForeignKey ` fields in ` DatabaseSnapshot . java ` to ensure proper handling of ` backingIndex `
added a deprecated method ` getAccountLedgersWithParams ` in ` KucoinAccountServiceRaw ` and implemented a new API endpoint in ` Account
[ 3.0 ] do n ' t process dc . title mdv when create admin group
refactor GapInsertionDetector to return a new HypothesisUtterance object instead of throwing an error if no words are
added a new test class RubyScriptTextTest for testing script engine reusability to ensure proper handling of cached and reusability of script
updated thread retrieval from ` getBackgroundThreads ( ) ` to ` getDatabaseUpdateThreads ( ) ` in ` FeedRefreshUpdater . java ` and
increased the FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 in RecyclerViewFastScroller . java to increase the
updated the SystemClassName initialization to use " Ljava / lang / System " instead of " Ljava / lang / System " to ensure compatibility
hhh - 13644 fix nullpointerexception in procedurecallimpl . getresultstream ( )
added a null check for APIProperties in RestSwaggerSupport . java to avoid potential NullPointerException when accessing API properties
added BinaryFrameGenerator and TextFrameGenerator classes to handle binary and text frames in the WebSocket generator to ensure proper handling of binary and text frames
simonstewart : use ` WebDriverWait ` instead of ` findElement ( By . id ( " peas " ) ) `
simplified the creation of lat and lon calculations in RandomGeo3dShapeGenerator . java to improve code readability and maintainability by
added a method ` keepAlive ( ClassLoader loader ) ` to the ` ResourceBundle ` class to prevent potential memory leaks during resource loading
change return value from false to true in SQLiteDatabase . java to ensure correct behavior of SQLiteDatabase functionality
refactor the handling of concurrent signatures in FindJSR166LockMonitorenter . java to improve code readability and maintainability
added MkdirStep instantiation to AndroidAar , AppleBundle , AppleBundle , ApplePackage , and FatBinary classes to enhance
refactor error handling in MeshLeveler . java for improved clarity and consistency to enhance readability and maintainability of error messages
[ drools - 3390 ] skip jpmml dependency from classpath when applypmmlmodelcommand require removal of jpmml
change locationMode to thermalStatus in ShadowPowerManager . java to ensure correct handling of thermal status in the PowerManager
updated temporary directory creation logic in MountableFile . java to conditionally use OS _ MAC _ TMP _ DIR to ensure compatibility with different
added a new constant ` USE _ MEMORY _ MAPPED _ BUFFERS ` in ` PrjFileReader . java ` and modified geometry
added a null check for the model organization in PluginManager . java to ensure that Plugis are required to have an organization in the pom
removed copyright notice from SepPostingsWriterImpl . java to clean up the codebase and improve readability
deleted the TerminateWebSessionListener . java file to remove unused code to streamline the codebase
updated the method call to use the system property " java . class . path " instead of a hardcoded string to ensure compatibility with the system
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` in ` KM200Device . java `
added a new test method ` dontChangeJavadoc ` to ` AddLicenseHeaderTest . java ` to ensure that the ` rewriteRun ` method
changed LAUNCHER3 _ PHYSICS from false to true to enable the LAUNCHER3 _ PHYSICS
added a ` noPrint ` element to the ` HtmlThreadInformationsReport ` class to indicate that ` noPrint ` is displayed in the
updated LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and updated version constants to reflect the
added symbolicator and task fields to BsdDebuggerLocal . java and modified platform detection logic in PlatformInfo . java to enhance debugging capabilities for
add weakreference to fml : inboundpacket to prevent memory leak
add debug log for connection reset by peer
[ java ] do n ' t initialize admin buffer if there be no admin buffer .
added a break statement in TouchImageView . java to ensure proper handling of the break condition
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
removed unnecessary SSLHandshakeListener handling in FeedableBodyGenerator . java to streamline SSL handshake process and improve code clarity
added logic to check if both Java types are assignable to bounds in TypeUtils . java to ensure correct handling of variable assignments in type bounds
replace NonBlockingHashSet with ConcurrentSkipListSet in memtablesPendingFlush to ensure thread safety during memory flushing
added null check for tree . errs in MemberEnter . java and modified return conditions in JavaCompiler . java and Erroneous . java to
replaced SWT . NO _ BACKGROUND with SWT . NONE in BugInfoView . java to improve the visual appearance of the browser
updated the method call from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java ` to ensure
modified the calculation of newLowerBound and newUpperBound in IntegerStamp . java and added a new test cases in IntegerStampTest . java to ensure
added a method to read a stream from an InputStream in ITextUserAgent . java to improve performance by reducing unnecessary URL reading
refactor CaseStmtToken to improve variable variable handling and scope management to enhance code clarity and maintainability by encapsulating variable variable handling
added error handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by providing clearer error messages when the cipher provider is
updated the variable name from " Kernel32 . lib " to " psapi . lib " in the WinGammaPlatformVC10 . java file
updated StringUtils and StringUtilsTest to use a newline property for comment and totalLine to ensure consistent formatting of SQL statements based on the system ' s
added compatibility and encoding settings in TemplateEngineFreemarker and updated alert statements in ApplicationController and ApplicationControllerTest to ensure compatibility with
refactor byte array handling in CRDGeneratorTest . java for improved readability to enhance code clarity and maintainability by reducing
corrected the declaration of ` holdSamples ` and ` type ` from ` private static ` to ` final ` in ` SampleSenderFactory .
added a null check for the ` testngEmailableReporter ` property before adding ` EmailableReporter ` to avoid potential NullPointerException when ` test
added a quoted flag to the CommandLineBuilder and updated assertions in CommandLineBuilderTest to ensure proper handling of quoted characters and improve test coverage
changed access modifiers of interfaces from public to package - private in multiple files to allow access to these interfaces from other classes
added job . setNumReduceTasks ( numFetchers ) to FreeGenerator . java to set the number of reduce tasks in the job
refactor field handling in SchemaGeneratorHelper to use ` getFieldDefinitions ( ) ` instead of ` getObjectFields ( ) ` to improve clarity
updated the FILEVERSION constant from " 505365 " to " 532077 " to reflect the new version of the file
added support for " GL _ RGBA32F " and " GL _ ARB _ texture _ float " extensions in FloatTextureData . java
added synchronized methods to write and close files in FileServer . java and updated JMeterVersion . java to improve file management and ensure proper resource
added a null check for outputDirectory and jarStream before setting the output directory to avoid potential NullPointerExceptions when outputDirectory and jarStream is null
replaced direct call to ` getFuture ` with ` PerfStatsCollector . getInstance ( ) ` in ` ShadowSQLiteConnection . java
replaced ` getCurrentJDKTool ( " jmap " ) ` with ` getTestJDKTool ( " jmap " ) ` in
add a new enum ResourceErrorHandling to handle resource error reporting to enhance error handling capabilities for better debugging
updated buffer position calculation in RAMInputStream . java and added a test for EOFException in TestRAMDirectory . java to ensure buffer position is within
updated error handling in DefaultServlet and JspServlet to include a message for missing resources to improve error reporting by providing clearer context for missing resources
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag and added AccessControlContext class for security checks to enhance thread
updated CHECK _ EVERY _ N from 10000 to 0xFFFF and added logging for HardRefCache and Clear HardRefCache to improve
hbase - 11818 testsplittransaction . testopenhregion ( ) do n ' t call openhregion ( ) ( #
added null check for currentSelectionArea before setting the selected object to avoid potential NullPointerException when currentSelectionArea is not initialized
added a new test method ` provideEnvironmentsToTest ` to ` DemoModulesTests ` for testing JAAS demo functionality to ensure that
added a condition to check if spanX and spanY are both 1 and 1 in CellLayout . java to ensure correct calculation of cell boundaries
refactor CacheOffHeap class for improved performance to enhance performance and reduce memory usage
added support for handling tables with higher table IDs in CreateTable . java and corresponding test cases in TestCases . java to ensure compatibility with different
added conditional logic to handle extra XML gid values in TiledLoader to improve error handling and provide clearer feedback for corrupt XML gid values
added synchronized keyword to the setWorkingSet method to ensure thread safety when accessing the setWorkingSet method
added a new Java file ` Solution . java ` implementing a algorithm that calculates the minimum and maximum steps to facilitate the calculation of
added a new interface ` AddressChecker ` and refactored ` TrackerRequestProcessor ` to use it to improve address validation logic for better
removed redundant conditional check for rendering type in ForgeHooksClient . java and MultiLayerModel . java to streamline code by eliminating
refactor tag removal logic in GuiConfigEntries . java to use a new method ` removeTag ` to improve code readability and maintain
change ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType . java ` and ` Capability . java ` to
added a null check for recieptents before sending messages to avoid potential NullPointerExceptions when recieptents is null
refactor ` isSingle ` method to use a private method ` isSingle ` to improve code readability and maintainability
added a ` failFast ` boolean parameter to the ` DockerClient ` class and updated profiler logging in multiple classes to improve flexibility in docker
added a resourcesMode parameter to the ` AndroidMetadata ` constructor and modified its constructor to accept it to enhance metadata management by allowing dynamic resource management
refactor date handling in HistoricProcessInstanceQueryImpl to use Calendar instances instead of DateUtils to improve code readability and maintainability by
updated the import method from ` importProject ` to ` importProjectCore ` in ` OpenAndroidModule . java ` to ensure compatibility with the
added error handling for CommandFailedException in LiquibaseCommandLine . java to improve error reporting for better debugging and debugging
refactor TreeMap class for improved readability to enhance maintainability and clarity of the code
added methods to enable and disable asynchronous stack traces in the Display class to enhance error handling capabilities in the application
added a method to set the glow color in BubbleTextView and updated the Glow color in Folder to enhance the visual representation of
added link and desc styles for file row text in LinkedFilesEditor . java to ensure the file row text is displayed in the editor
updated the return statement in ` AbstractJdbc2ResultSetMetaData ` and added a test for class matching in ` ResultSetMetaDataTest ` to ensure correct
removed unnecessary IOUtils usage in Lucene40LiveDocsFormat . java and SimpleTextLiveDocsFormat . java to streamline code by elimin
added null check for _ info before determining upgrading state to prevent potential NullPointerException when _ info is null
added a constructor to ShadowLocation that accepts a String provider to enable customization of the provider in the ShadowLocation class
updated the condition to check if the deviceRam is within a valid range to ensure that the maximum RAM is increased based on deviceRam
refactor LocalMapStatsProvider to replace EMPTY _ LOCAL _ STATS with EMPTY _ LOCAL _ MAP _ STATS and add a method to
added logging functionality to FileProfileActivator for file existence and missing checks to improve user experience by providing clearer feedback on file existence and missing
updated the parameter name from " noname1234 " to " invalid _ " in the addToBody method to clarify the purpose of the
replaced Collectors . toList ( ) with Collectors . toSet ( ) in GuildImpl . java to ensure proper handling of roles in the application
updated the return value from - 1 to 1 in ExpandableUploadListAdapter . java and modified the condition for obtaining the number of uploads
added assertions for delete operations in DashboardUserMapperTest . java to ensure correct behavior of delete operations in the database
[ instructor ] fix typo in instructorfeedbackresultspagedata
added methods to execute a LlvManagedPointer and refactored address handling in various node classes to improve memory management and enhance address management functionality
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the ` bufferSize ` variable for better
added usage help for the " terasology " command in Terasology . java to enhance user experience by allowing users to specify the standalone
refactor action bar title formatting in DrawerActivity . java to improve readability and maintainability to enhance code clarity and maintainability by
refactor CommandLineParserTest . java for improved clarity to enhance maintainability and readability of the code
added imports for ALL _ APPS , SCRIM _ OPAQUE , and VISIBLE animations in QuickstepAtomicAnimationFactory and Por
updated method call to use javaNameFromExternal instead of Character : : toUpperCase to improve clarity and consistency in handling external names
removed native methods related to Rectangle2D in CWrapper . java to streamline code by eliminating unnecessary native methods
added a check for constant elements in the Checker class and created a new ValueTest class for testing constant value validation to ensure that constant values are
refactor MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen classes to improve code organization and maintainability
removed null check for constructors in PojoUtils . java to simplify the code by eliminating unnecessary null check
refactor JiraConfiguration class for improved configuration handling to enhance maintainability and readability of the code
updated string formatting for error and coverage failures in UploadBuild . java to improve readability and maintainability of the code
updated bounds calculations to use getSearchBarTopOffset ( ) instead of zero for edgeMarginPx and defaultWidgetPadding to ensure correct positioning of
updated logging messages in PulseAudioAudioSource . java and added conditional logic in PulseaudioSimpleProtocolStream . java to improve logging cl
replaced direct calls to ` getLauncher ( ) . runOnUiThread ( ) ` with ` getLauncher ( ) . run
removed the ` getSourceGroupOptional ( ) ` method from ` AppleSource . java ` to streamline the code by eliminating unnecessary
increased the timeout duration from 220000ms to 320000ms in TestSimTriggerIntegration . java to increase the timeout duration for better
updated RunLengthEncodedBlock instantiation from outputPositionCount to positionCount in FloatSelectiveStreamReader . java to ensure compatibility with the correct position count
added null checks for ` startNode ` and ` bestSoFar ` in ` AbstractNodeCostSearch . java ` to improve robustness by preventing
added a check to skip processing for " Form " and " Dialog " components in ResourceEditorView . java to ensure proper handling of component types
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView . java ` and ` FloatingIconView . java
added a null check for commitPoint in ReplicationHandler . java to ensure commitPoint is set when it is null
added tests for the ` getImei ` and ` getMeidForSlot ` methods in ` ShadowTelephonyManager ` and `
added debug request handling in SimpleHostRoutingFilter to improve debugging capabilities for HTTP requests
added ` destory ( ) ` methods to ` OfflineResourceDataManager ` , ` IndexSegment ` , and ` BitmapInvertedIndex `
[ issue # 1188 ] fix test failure in normalmessenderandrecvit
replaced ` Charset . forName ( " UTF - 8 " ) ` with ` StandardCharsets . UTF _ 8 ` in ` StatVisualizer .
hbase - 11818 bulkload fail if multi - h file do n ' t exist ( krisztian kasa
added the ` commission ` field to the ` DefaultWithdrawFundsParams ` constructor and updated the constructor to include it to enhance the
removed the import of StreamTerminator from AutoClosingReferenceStream . java to streamline the code by eliminating unnecessary dependencies
removed duplicate catch blocks in LoadSolrBuilder . java and SolrLocator . java to improve code readability and maintainability
added null checks for method body in Java2TypeScriptTranslator . java and updated tests in OverloadTests . java to ensure proper handling of
added StacklessLogging with a try - with - resources statement in TestFileSessions . java to ensure proper resource management and prevent potential memory leak
updated ` MutableColumnDataType ` , ` SqlDataType ` , ` Entities ` , and ` MutableColumnDataType ` classes to use ` Serializable `
rename SubExactLConstantTest and SubExactLNonConstantTest files to improve clarity and consistency in naming conventions
added null check for claimRequestString in ConnectOAuth2RequestFactory . java to improve robustness by preventing potential NullPointerExceptions
updated ` HiveFilterSetOpTransposeRule ` to use ` RelBuilderFactory ` instead of ` FilterFactory ` to improve compatibility with ` Rel
refactor type handling in UpdateMapper and add unit tests for null values in UpdateMapperUnitTests to improve code clarity and ensure correct handling
updated CoreAdminRequest to use CoreStatus instead of CoreAdminResponse and added a new method to retrieve core status to improve code clarity and
replaced ` transformers ` and ` transformers ` with ` locators ` in ` ModDirTransformerDiscoverer . java ` to ensure proper initialization
updated error message formatting in AbstractQuerydslProcessor . java to improve readability to enhance clarity of error messages for better debugging
refactor PEGraphDecoder to use ` getCallStack ( ) ` instead of ` getCallerBytecode ( ) ` for better stack trace
replaced instances of ` setOf ` with ` copiedSetOf ` in ` RestTemplateBuilder . java ` to improve clarity and consistency
camel - 1566 : fix the issue of mailmessage . dumpmessage ( ) and mailmessage . getIdentityHashCode ( ) .
http : / / issues . apache . org / jira / browse / amq - 4892 - fix npe in prefetchsubscription
update getIdentifierName ( ) to use setIsPropertyName ( ) instead of getIdentifierName ( ) to ensure proper property name handling
added a new ` WaveGeneratorActivity ` class and modified ` InstrumentsFragment ` to start it in ` InstrumentsFragment ` to enhance the
added logging functionality to KeyedProperties and modified sheet retrieval logic in SheetOverlaysManager to improve error handling and provide clearer feedback when no
added tests for logging and executing commands in PodIT . java to ensure proper logging and termination of shell operations in the kubernetes client
added a new test method ` testNoWriter ` to the ` TestReplicationHandler ` class to ensure that the ` MockDirectoryFactory ` is
added a conditional call to dispatchMethodKernelOkra in GraalKernelTester . java to ensure proper dispatching of method kernel okra
added Comparable interface to DefaultDnsClient and implemented compareTo method in DefaultMxRecord to ensure consistent ordering of records based on their priority
refactor thread creation in XToolkit to use a privileged action for improved clarity to enhance code readability and maintainability by
added validation and dropdown selection functionality in SelectBox and UITest classes to ensure proper validation and user experience in the user interface
replace IllegalStateException with Collector . printStackTrace in JobGlobalListener . java to improve error handling by providing stack trace information for better debugging
updated the ` createState ` method to include a ` SplitState ` parameter and modified state handling in ` FlowBuilder ` and ` SplitState
changed the ` connectionState ` variable from ` int ` to ` volatile int ` in ` SSLSocketImpl . java ` to ensure thread safety
updated DEFAULT _ POLLING _ PERIOD from 10 to 1000 in AbstractPollingEndpoint and added PeriodicTrigger property in EnableIntegrationTests to improve
replaced instances of ` ByteBuffer ` with ` MemoryUtil ` for handling ASCII and UTF - 16 characters to simplify memory allocation and improve performance by
added exception handling for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractBuilder classes to improve error reporting and
replaced ` ASTClassOrInterfaceDeclaration ` with ` ASTEnumDeclaration ` in ` UnusedModifierRule . java ` to improve clarity
updated method calls from ` > ` to ` : : : add ` in multiple classes for consistency to improve code readability and maintainability by
added a new parameter name " ssl = { 0 } " to the @ Parameterized . Parameters annotation to provide a clearer configuration for SSL connections
refactor error handling in TransformationHelper to improve clarity and error messaging to enhance code readability and provide clearer error messages for better debugging
updated variable name from ` userPermissions ` to ` activeConnectionPermissions ` in ` ActiveConnectionRESTService . java ` to improve clarity and
updated equality comparison logic in Point . java to use EqualsBuilder for improved clarity to enhance code readability and maintainability by using a
added null check for outputRoot in FileProcessor . java to avoid potential NullPointerException when outputRoot is null
added a ` AnnotationFilter ` interface and updated ` PDFPage ` , ` PDFRenderer ` , and ` PDFRenderer ` classes to support annotation
refactor StackTraceCleaner class for improved clarity to enhance maintainability and readability of the code
updated content type handling for CSS and JavaScript files in PluginServlet . java to ensure correct content type is used for CSS and JavaScript files
added Hibernate dialect imports and @ SkipForDialect annotation to CriteriaLiteralInSelectExpressionTest . java to skip test cases related to Hibernate
updated the upgrade method signature and added null checks for stats in ForkController . java to improve clarity and prevent potential NullPointerExceptions during version upgrade
added getStats ( ) methods to AbstractDataImportHandlerTest , Context , and AtomicLong classes , and updated docCount and deletedDocCount to
[ scb - 1342 ] add option to enable long polling for kie client
replaced calls to ` PagedView ` with ` scroll ` in ` BaseOverview ` and modified gesture handling in ` LauncherInstrumentation
replaced the instantiation of UnlocksDialog with a new instance of UnlocksDialog and added a button for unlocks in PausedDialog to
added a call to clear the drop list in PlayerEventListener . java to ensure the drop list is cleared before processing events
added a new constant DEFAULT _ PARAM in StreamResult . java to provide a default value for the input name
changed the exception type from MalformedURLException to IOException in the testNormalizeOrder method to improve error handling and clarity in error handling
updated printlnBoth method to include chunk type in TsFileSketchTool . java and modified strBuffer flipping in LocalTsFileInput . java
added functionality to exclude Swift headers in UmbrellaHeader and updated test assertions in ProjectGeneratorTest to ensure that Swift headers are excluded from
removed unnecessary whitespace in the onHttpError method signature to improve code readability and maintain consistency
added encode ( ) method call to RequestPlugin . java to ensure proper encoding of the request object
updated SQL expression handling in RolapNativeSql and RolapNativeTopCount classes to support DB2 - specific dialect checks to ensure correct expression
added null or blank password validation in LdapAuthenticationProviderImpl . java and created a new test class TestLdapAuthenticationProviderImpl . java to ensure
pdfbox - 4892 : fix typo , a suggest by valerybokov
added a condition to clear complexWriters in ProjectRecordBatch . java to ensure complexWriters are cleared before processing
added @ SuppressWarnings ( " serial " ) annotations to multiple cache classes to suppress warnings related to serialization functionality
removed the ` public ` modifier from ` ClassGraphClassLoader ` from the ` ClassGraphClassLoader ` class declaration to simplify the class loading logic and
added a check for " _ errors " in the ErrorResponseException class and modified the return statement to handle empty location errors to improve error handling by
added a constructor to EventSourcingRepository that accepts an EventStore and snapshotTriggerDefinition , and repositoryProvider to facilitate the
refactor symbol assignment logic for binary nodes in Attr . java to improve code readability and maintainability
refactor text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder for improved readability to enhance code clarity and ensure
refactor command handling in NuvoConnector and NuvoHandler classes to improve clarity and consistency to enhance code readability and maintainability by
tmi - tiff : use baseline . planarconfig _ CHUNKY instead of extension . planar
added a call to ` is . close ( ) ` in ` ItemListTag . java ` to ensure proper resource management and prevent resource leak
added a new utility class ` AverageUtil ` and refactored ` TileLaserTableBase ` to utilize the ` AverageUtil `
added new classes ` SigInt ` and ` SigIntBarrier ` with thread - safe signal handling in ` agrona - concurrent `
refactor graph handling in ExporterGEXF . java to use HierarchicalGraph and EdgeIterable instead of Graph to improve code clarity and
refactor TCTLSeparatedProtocol to use Text instead of byte array for string processing to improve performance and maintainability by reducing
added initialization and validation logic for Rubric question details in FeedbackRubricQuestionDetails and FeedbackRubricResponseDetails classes
updated the condition to check for ORIGINAL _ CASE instead of DB2Database to ensure compatibility with the original schema and catalog cases
refactor methods in BrowserMobProxyTest for improved clarity and consistency to enhance maintainability and readability of the test code
updated error message formatting in ModelRepositoryImpl . java to use Integer . toString ( ) for line and column to improve code readability and maintain
removed redundant call to mTextWatcher . reset ( ) in InPlaceEditView . java to streamline the code by eliminating unnecessary
refactor InternalByteArray and TruffleString classes to improve code organization to enhance maintainability and readability of the codebase
[ hotfix ] [ table - planner - blink ] fix typo in graph . foreachedge ( )
refactor multiple Java utilities to improve code organization to enhance maintainability and readability of the code
deleted the ClassA . java file and created a new DiacriticTest . java file to streamline the codebase by eliminating
[ java ] use cyclicbarrier instead of countdownlatch for cluster membership test
added error handling and improved workspace reader management in DefaultMaven . java and DefaultGraphBuilder . java to enhance robustness and ensure proper
updated the SSL scheme check in ServiceRegistryConfig and modified the test assertions in TestServiceRegistryConfig to ensure correct handling of IP port values and
refactor Mockito class for improved clarity to enhance maintainability and readability of the code
removed unnecessary whitespace in Jdbc3Connection constructor signature to improve code readability and maintain consistency
added a synchronized method ` ensureInstance ( ) ` to ` ServletHolder ` and refactored the servlet initialization logic to improve thread safety and
added logging functionality and modified deltaServerTime calculation in BinanceExchange and BinanceBaseService classes to improve traceability and ensure accurate server time
added a condition to check if the binding starts with " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) " to ensure
added null check for the component form before deregistering animation to prevent potential NullPointerExceptions when the form is not initialized
added options parameter to the ` decodeResource ` and ` drawBitmap ` methods in ` ShadowBitmapFactory ` and ` ShadowCanvas ` classes to
[ java ] use configuration . number _ of _ messages as a constant to improve code readability and maintainability
added functionality to prevent next click events in TimelineArrayAdapter to enhance user experience by allowing more control over click events
added " text " to the list of data types in PostgresDatabase and updated related logic in NumberType and ColumnSnapshotGenerator to enhance data
updated EntryProcessorBouncingNodesTest to include @ After annotation and modified setup and teardown methods to enhance test reliability and ensure proper cleanup
updated state checks from ` isHardDeletableState ( ) ` to ` isRemovableState ( ) ` in ` AmbariManagement
[ mielecloud ] fix npe in createbridgeservlet when bridge reconfiguration fails
refactor ` isRobotsExpired ` and ` isValidRobots ` methods in ` PreconditionEnforcer ` and ` CrawlServer ` classes
added null checks for display names in multiple classes to avoid potential NullPointerExceptions when display names are null
added a default shader parameter to SpriteBatch constructors and modified the constructor to accept a default shader to enhance flexibility by allowing customizable shader
added a new property " - c synchronous _ commit = on " to the properties in TestUtil . java to enable the execution of synchronous commit
added TypeCoercer to coercing sorted sets in SortedSetTypeCoercer and updated fillSortedSet method to handle duplicate elements to
updated message string assignment logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve clarity and functionality to enhance user experience by providing clear
updated the condition to check if the character is within a valid range to ensure that the character is within a valid range to avoid potential errors
updated the port handling in UserContext . java to use a dynamic port and adjusted fragment storage registration to improve flexibility in porting and ensure
updated the expect statement in HostResourceProviderTest to return an empty map instead of an empty list to ensure the test correctly reflects the correct
[ hotfix ] [ yarn ] remove logging from yarnentrypointutils . loadconfiguration ( )
refactor SIPCommFrame to improve initialization and repaint methods to enhance code readability and maintainability by reducing redundancy
deleted the ShadowHtml class and updated its usage in RobolectricBase . java and HtmlTest . java to streamline the codebase by
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` that implements the ` StarTreeRecordStoreFactory `
updated logger configuration from " org . eclipse . jetty " to " org . eclipse . jetty . http3 " and "
updated the visibility of the ` addListeners ` method in ` MockSettingsImpl ` and added a new test for listener validation in ` MockSettings
refactor StateHandleStore class to improve code structure to enhance maintainability and readability of the code
updated import statements in HttpAuthMethodPriorityTest , HttpBasicAuthComponentConfiguredTest , and HttpBasicAuthTest to use the correct Jetty security constraint
updated section handling to use constants instead of " None " for better clarity to improve code readability and maintainability by using constants instead of
refactor InputStream initialization to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
camel - 1145 : add a test to verify that the port be available before the test be run .
added ` buildTarget ` and ` androidLibraryBuildTarget ` parameters to multiple Java library classes to enhance the flexibility of library management by allowing
corrected the spelling of " validating - cerficates " in TrustEverythingTrustManager . java to ensure compliance with the latest
removed the getPageSizeVal method from ListCapacityCmd . java to simplify the code by eliminating unnecessary complexity
added handling for CLOSED cases in IteratingCallback . java to ensure proper handling of closed states in the callback
added a new boolean field ` isAuthorized ` and updated its assignment logic in ` AccessControlContext ` and ` ProtectionDomain ` classes to ensure
refactor event handling in OSGiDeployer to ensure proper handling of instances of AbstractOSGiApp to improve robustness by ensuring
added handling for " tiff " codec and container in DLNAMediaInfo . java to ensure proper handling of TIFF types in the
refactor argument profile logic in OptimizedCallTarget . java to improve clarity and consistency to enhance code readability and maintainability by redu
added a new file ` CubocDesktop . java ` and refactored ` Map . java ` and ` MapRenderer . java `
updated file paths in PolicyMonitorTest . java to use " test - classes / monitor - test - 2 " instead of " test - classes
added a call to removeAllFiles ( ) in TrashbinActivity . java to ensure all files are removed from the trashbin list
updated the package reference from ` org . eclipse . jdi . Bootstrap . allConnectors ( ) ` to ` com . sun .
refactor ` doWrite ` and ` doCheck ` methods in ` LLVMCheckGlobalVariableStorageNode ` and ` Runner ` classes to
updated the ` createLauncherEvent ` method to accept an ` Intent ` parameter and modified the ` dispatchUserEvent ` method to accept an additional
updated the maximum burn amount calculation in BurningManPresentationService to use a constant for better clarity to improve code readability and
refactor UniqueConstraintSnapshotGeneratorSnowflake to use wildcard imports and add a snapshotObject method for retrieving unique constraints to improve code readability
modified the item assignment logic in DMLTransformer . java to handle empty insert statements to ensure correct selection of namedValues and valueList based on
updated import statements and method signatures in ServiceValidateControllerTests . java to improve code readability and maintainability
added a boolean parameter ` isStatement ` to the ` getDefaultValidFunctionName ` method and modified its usage in ` Parser . java ` to enhance
refactor JarLauncher class to improve code structure to enhance maintainability and readability of the code
replaced instances of ` BlockingQueue ` with ` ResultHolder ` in multiple classes to improve type safety and clarity in type safety
updated DeviceConfiguration and CallGTalkImpl to implement Dimension and added a conditional check in OperationSetVideoTelephonyJabberImpl to
added a new test method ` testUpdateWithPGobject ` to ` ResultSetTest . java ` to verify the functionality of the ` updateWith
updated PasswordResetEndpoints to return UNPROCESSABLE _ ENTITY instead of BAD _ REQUEST and added a test for creating APasswordResetWhen the user
simplified the retrieval of the propertiesElement from the XML document to improve code readability and maintainability
refactor Cache class implementation to improve performance to enhance performance and maintainability of cache management
rename ` timeInSec ` to ` timeMillis ` in ` Isochrone ` and update corresponding references in ` SPTResource `
added a check for a valid binding before processing the light relay to ensure that the lightRelay is valid before proceeding to avoid potential errors
added a new class ` Chainer ` and ` and ( ) ` with a chained item in ` CollectionSubject ` and ` CollectionTest `
refactor Model class to improve code readability to enhance maintainability and facilitate future updates
increased the recordedTime calculation from 619315200000L to 619315200000L to ensure accurate tracking of recorded time
added a check to resize the status if the terminal type starts with ` AbstractWindowsTerminal . TYPE _ WINDOWS ` to ensure the status is
updated host version setting logic in UpdateDesiredStackAction . java and adjusted repository version state in RepositoryVersionState . java to ensure proper state management
updated directory paths in IntegrationTestCase , JsInteropRestrictionsCheckerTest , NativeSourcesErrorTest , and NativeSourcesErrorTest classes to improve
replaced HashSet with LinkedHashSet in multiple Java files to ensure consistent ordering of artifacts and improve code clarity
removed exception handling around the operation assignment in OperationServiceImpl . java to simplify the code and improve readability by eliminating unnecessary exception handling
simplified the method call in KnativeEnvironment . java to improve code readability and maintainability
updated the thread pool name from " commitlog _ archiver " to " CommitLogArchiver " to clarify the purpose of the
added a new test method ` connect ( ) ` to ` CloudSolrClient ` and updated ` TestCloudSolrClientConnections ` to ensure proper
added synchronized blocks around bindings adding and removing in Breakpoint . java and DebuggerSession . java to ensure thread safety when adding and removing bindings to
refactor file handling in RobolectricTestRunner and ShadowContext classes to improve code readability and maintainability to enhance maintainability and
added imports for LinkedHashSet and TreeMap in SecureXStream . java and created a test for styles in XStreamPersisterTest . java to ensure proper
added KieModuleModel support to InternalKieBuilder and KieHelper classes to enable dynamic configuration of KieModuleModel in the K
refactor condition checks for Farmland data in BlockEventListener . java to improve clarity and functionality to enhance the robustness of the
added a default method ` getLocalIp ( ) ` to the ` FinishedSpan ` class to provide a default implementation for retrieving the local IP
updated JDBCStepExecutionDao to use SerializationUtils for serialization and added a test for storing integer values to ensure proper serialization and validation of integer values
updated integer calculations in AbstractDictionary , BigramDictionary , HHMMSegmenter , and WordDictionary classes for consistency and clarity to improve code
updated resource paths in python and tensorflow classes to include " python " and " python37 " to ensure consistency in resource management and improve compatibility with
refactor PluginTab . java to use a refresh method for retrieving plugins to improve code readability and maintainability by encapsulating the refresh logic
change log level from info to warn in DefaultHistory . java to improve log clarity for better debugging and debugging
cloudstack - 4892 : fix npe in vmwarestorageprocessor when no vm be find
set sshd . stop ( true ) to true in SftpServerTestSupport . java to enable graceful shutdown of the sshd instance
refactor ExperimentalMockitoJUnitRunner class for improved clarity to enhance maintainability and readability of the code
added a check for the presence of the Build . SERIAL option and updated related logic in GpsSettingsActivity , Session , and HttpUrl
refactor SwapGBuffers class to improve code organization to enhance maintainability and readability of the code
added null checks for spatial and skeletonControl in AnimControl . java to prevent potential NullPointerExceptions when spatial is null
added a new test method ` setSmartReplies ` to ` ShadowRankingTest ` and updated ` ShadowRanking ` to use it to
[ java ] do n ' t remove the prefix from archive directory if it do n ' t exist .
updated variable name from ` getConfigDir ( ) ` to ` getResourceDir ( ) ` in ` CarrotClusteringEngine . java ` to
added null check for ` testRect ` in ` WindowsTreeUI . java ` and created a new class ` bug8004298 .
updated method names from ` buildStdArgs ( ) ` to ` buildStdArgs ( ) ` and ` args [ ] ` in ` Script
updated return statements to throw TasteException instead of null in RecommenderMapper . java and added null check in CacheTest . java to improve
added ClientInfo initialization and setup methods in SurrogateAuthenticationEventListenerTests . java to enhance test coverage and ensure proper client information is retrieved
added isUserView = false to CardPresenter . java to disable user view functionality in the application
corrected the spelling of " guru . nidi . graphviz . engine . diagram " to " guru . nid
refactor histogram creation in LogDispatcherThreadMetrics to improve code readability and maintainability to enhance maintainability and facilitate future modifications
added a new file ` com . speedment . runtime . connector . sqlite ` to the ` com . speedment . runtime . connector .
added a delay to the Thread . sleep in StreamResetTest . java to improve responsiveness during test execution
removed conditional check for " api " in the permissionsManager initialization to simplify the code by eliminating unnecessary conditions
refactor DateParser and TestDateParser classes for improved clarity to enhance maintainability and readability of the code
added a method ` getDepth ( Context context ) ` to the ` SpringLoadedState ` class to provide a depth of the state based on the
updated BinaryDecoder to use Arrays . copyOfRange instead of System . arraycopy for data length validation to improve code readability and maintainability by redu
[ hotfix ] [ doc ] fix typo in executiongraph javadoc
remove the notification from the notification activity and remove the notification from the NotificationRenderer to streamline the notification handling process and improve user experience
updated exception handling logic in DefaultExceptionConverter and improved test cases in ExceptionsTest to ensure proper handling of null exceptions and enhance test coverage for
replaced @ Setter with @ NotNull and modified lock handling in GlowContainer . java to improve null safety and ensure lock is not null
replaced ` MethodHandle ` with ` getDeclaredMethod ` for setter retrieval in ` ProxyMaker . java ` to improve code clarity and maintain
updated the calculation of integer values in MathTest . java to use Integer instead of int to ensure correct handling of integer values during query execution
updated string concatenation from " metrics " and " datasets " to " - " in BaseEmailContentFormatter . java to improve clarity and consistency
added a simple panel to the layout provided panel in LayoutPanel . java to enhance user interface by allowing customizable layout options
added a null check for location in the condition in ServerCallable . java to prevent potential NullPointerException when location is null
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added null check for key parameters in BasicChecker . java to prevent potential NullPointerExceptions during key generation
refactor the ` shouldIgnore ` method in ` MediaTypeRequestMatcher ` to use a new method ` shouldIgnore ` to improve code readability
refactor task number handling in LlapBaseInputFormat . java to improve clarity and consistency to enhance code readability and maintainability by
updated SpringBootTest properties in EventServiceTests . java to allow bean definition overriding to enhance test flexibility by allowing bean definition overriding
added null check before closing the indexReader in DeleteDuplicates . java to prevent potential NullPointerException when indexReader is not initialized
rename ` BTCMarketsStreamingService ` and ` BTCMarketsStreamingExchange ` classes to ` package info . bitrich . x
added a new test method ` issue151 ` in ` FencedCodeBlockParserTest . java ` to verify rendering behavior to ensure that
added a new file ` CompatibilityTest . java ` that tests XML property loading to ensure proper functionality and validation of XML properties in the
added new utility classes for PushUtils , PushUtils , and SecurityUtils to implement functionality for handling push registration and security keys in the application
refactor numReplicas calculation and add instance state map checks in TableRebalancer . java and TableRebalancerTest . java to improve clarity
updated version numbers from " 2.6 . 1 " to " 2.7 . 0 " in ExoPlayerLibraryInfo . java to
[ log4j2 - 1343 ] fix line separator in test
added socket timeout handling in AjpAprProcessor . java to ensure proper handling of timeout conditions in AjpProcessor
updated friction , restitution , density , and isSensor fields to zero in FixtureDef . java to ensure proper initialization and
updated method signatures to include anomalyFunctionSpecMap in multiple classes to enhance functionality by allowing scaling factors instead of aclinging factors
removed exception handling for broadcast idle command in LauncherInstrumentation . java to streamline the broadcast idle process by eliminating unnecessary execution
added unit tests for fontTagWithAttributes and linkTagWithAttributes in ResourcesTest . java and modified span calculation in ResStringPool . java
added src _ work / src _ base / common / net / guistatscomponent . java to the GuiStatsComponent . java file to
added permission handling for CALL _ PHONE in Launcher . java and integrated it in Utilities . java to enhance user experience by allowing users to
updated the return value from 32 to 36 in SimulationPanel . java and modified the PlotDialog . java to include FlightData parameter to
changed the visibility of BUF _ SIZE _ LONG from public to private and modified the fromBytes method in GeoEncodingUtils to enhance encapsulation
added a synchronized method ` isDockerAvailable ( ) ` to the ` DockerClientFactory ` class to ensure that the ` client ( ) `
removed the static final String VPX constant from CodecTypes . java to clean up the code and improve readability
added coordinator address option to DistBuildFactory and updated the getCoordinatorAddress method in AbstractDistBuildExecutorArgs to allow dynamic configuration of the
added a new method ` match ` in ` FsUtils ` and refactored timer scheduling in ` WrapTimer ` to improve path matching functionality
added a conditional check for non - negative value before adding labelValues to ensure labelValues are only added when the value is greater than zero to
added null checks for result and improved error message formatting in App . java to enhance robustness by providing clearer feedback when the result is
removed the @ Test annotation from TestPerfBenchMarkDriver . java to clean up the code and improve readability
added materialization time setting in ObjectStore and a corresponding test in TestObjectStore to ensure correct handling of materialization time in the object store
added error handling for missing native dependencies in VoskSTTService . java to improve robustness by providing a clearer error message when
added property removal for ` JMSSampler . IS _ ONE _ WAY ` in ` JMSSamplerGui . java ` and
updated return logic in GlyphView . java to handle cases where the break weight is not equal to the current position to ensure correct behavior when the
refactor sync handling in RCFile . java for improved readability and performance to enhance performance and maintainability of the synchronization process
remove @ AwaitsFix annotation from AutoAddReplicasPlanActionTest . java to clean up the code and improve readability
replaced direct retrieval of steps and processors with a linked list of unwound strings to improve code readability and maintainability by encapsulating
replaced the method ` keysToDataFlavorArray ` with ` setToSortedDataFlavorArray ` in ` DataTransferer ` to
hbase - 15555 add - infoport to testthriftservercmdline . testthriftservercmdline . testth
added a check for EOF in the RegExpScanner class to ensure proper handling of EOF characters in the regex scanner
added null checks for enabledMetrics and enabledTimers in Debug . java to improve robustness by preventing potential NullPointerExceptions when accessing system properties
added a null check for the nickname before comparing the message to avoid potential NullPointerException when the nickname is null
added null and empty check for filename in PApplet . java to ensure that the file name is not empty and prevent potential NullPointerExceptions
refactor refresh token creation logic into a separate method ` createRefreshToken ` to improve code readability and maintainability by reducing redundancy
updated error message formatting in BuckConfig . java to improve clarity of error messages for better debugging
[ hotfix ] [ yarn ] remove unnecessary lock in yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ( ) ` to the ` ShadowNativeImageReaderSurfaceImage ` class to ensure thread safety
updated the SSL URI for polling market data service in BTCChinaExchange . java to ensure proper handling of the BTCChina exchange
refactor writer creation to use a method to retrieve the output directory based on the project ' s base directory to improve code readability and maintain
added new classes OauthController and Oauth2PluginTest for testing OAuth2 plugins to enable testing of OAuth2 functionality in the application
refactor SemgrexPattern class for improved readability to enhance maintainability and clarity of the code
added flatMap methods to AbstractStreamEx , StreamEx , and StreamEx classes , and added a test for flatMap in EntryStreamTest
updated error logging message from " Parameter is { } . Message is { } . " to " Message is { } . " in RestCodec
updated the condition in RobolectricClassLoader to include " org . specs2 " and " scala . " to ensure compatibility with Maven
updated the condition to check if the receiver is not already in the transmittableAudioEncodings list to ensure that the receiver does not contain the
updated the type of ` defaultValue ` from ` SequenceNextValueFunction ` to ` DatabaseFunction ` in ` CreateTableGenerator ` and added a
added methods to check the location of the Station _ GML31 and Station _ GML32 in NormalizedMultiValuesTest .
added a volatile boolean flag ` wasInvoked ` and updated related methods in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest ` to
added a check for configuration before calling ` expandRegexMapping ` in ` ColumnarDataSource ` , ` RowProcessor ` , and ` BinaryResponse
refactor the ` splitIntoThirtyParts ` method to ` splitIntoThirtySecondsParts ` and add a new method ` getSeek
added new classes XLCDCommunicator and XLCDController in GrblCommunicator and FirmwareUtils to implement a
refactor KieModuleMarshaller to use a new method for loading XML schemas and oldSchema to improve code readability and maintainability by central
added retry times assertions to ` EventQuery ` and ` EventQuery004 ` classes to ensure that ` retryTimes ` is greater than zero to
refactor WorkerProcessPoolTest to use a constant for thread join and improve thread state management to enhance code readability and maintainability by redu
refactor equals and hashCode methods in DelegatingMethod . java and add corresponding unit tests in DelegatingMethodTest . java to improve code cl
updated the number of UNFREEZE _ V2 and UN _ DELEGATE _ V2 values in EnergyCost . java to
updated command method signature and configuration handling in DownloadPlugins . java to improve error handling and ensure proper configuration management
deleted the SpringTransactionHooks . java file and modified SpringTransactionHooksTest . java to use AbstractSpringTransactionHooks to streamline the codebase
refactor AbstractClassAssert to improve code structure to enhance maintainability and readability of the code
added a new file ` GetUninitializedStringValue . java ` implementing a test class for handling uninitialized string values to facilitate testing
added provided dependencies query handling in AndroidLibraryDescription and updated related test cases in GraphEnhancementQueryEnvironment to improve dependency resolution and ensure correct
added a new BooleanFlag ` ENABLE _ KEYBOARD _ TRANSITION _ SYNC ` to the FeatureFlags class to enable keyboard synchronization
replaced the system anomaly message retrieval with a boolean variable ` sSavedBugreport ` to improve code readability and maintainability by redu
added support for the " cinepack " format in FormatConfiguration . java and updated LibMediaInfoParser . java to support Cinepack
added hand movement animation functionality to the Player class to enhance user experience by allowing customization of hand movement animations
replaced ` data . describe ( ) ` with ` digest . toString ( ) ` in ` GrpcCasBlobUploader . java `
deleted the HSQLDBServerFilesFilter . java file and refactored file listing in TestUtility . java to streamline the codebase by
added a condition to check if restoreFromSeed and restoreFromKey are not null to ensure that the restoreFromSeed and restoreFromKey are
update latestVersion assignment to use APIUtils . getApiDataSeriesVersion ( ) instead of APIUtils . getApiDataVideoVersion ( ) to ensure
added a method ` visitMethodInvocation ` to handle method invocation type existence in ` HasTypes . java ` to ensure proper handling of method invocation types
replaced manual array size with a constant NUM _ VALUES in AmbientCubemap . java to improve code readability and maintainability
added profiler dialogs for setting the current mode in MethodsFeature and ObjectsFeature classes to enhance user experience by providing user feedback when the mode is
added checks for zero values in GenericUDFMask , GenericUDFMaskFirstN , and GenericUDFMaskShowFirstN classes to
refactor BoundedOverheadBlockStoreTest and DerbyBlockStoreTest to use TemporaryFolder for temporary files to improve test reliability and
added methods to check if the item stack is damageable and get has subtypes in ItemStack . java to enhance functionality by allowing
added a new file ` RenderState . java ` that initializes ` LineState ` with a ` OptionalDouble ` parameter and modified ` LineState
simonstewart : set the ` ` browser . startup . page ' ' preference to ` ` 0 ' ' in firefoxdriver
added a condition to check if the request method is CONNECT or GET in Http1xClientConnection . java to ensure proper handling of HTTP connection
updated task name from " compile " to " process - classes " in JoobyMojo . java to clarify the purpose
replaced the shutdown method with a closeIdleConnections method in HTTPHC4Impl . java to ensure proper resource management and prevent potential memory leak
added a condition to check if the aggregate function suffix is not present in AmbariMetaInfo . java to ensure that the metric is only
added a method to set fullscreen parameters in TaskOverlayFactory and updated method calls in TaskThumbnailView to ensure proper handling of fullscreen parameters
added a new Java class to calculate the number of frequencies from a specified number to facilitate testing of the number of frequencies in the
set the ` ch1 ` variable to null in ` ClusteredAgentManagerImpl . java ` to ensure the ` ch1 ` variable is
rename MutisignOperationerGodicTest . java file to improve clarity and consistency in naming conventions
added error handling for NoSuchElementException in StaxEventItemReader . java and created a corresponding test in StaxEventItemReaderTests . java to
replaced specific imports with wildcard imports and modified return statements in ShadowTextView . java , and added null handling in TestAttributeSet . java
updated imports from ` com . nimbusds . jose . shaded . json ` to ` net . minidev . json
updated OS name checks to use " AIX " instead of " Linux " to ensure compatibility with different operating systems
cloudstack - 3641 : use routercontrolip instead of router . getprivateipaddress ( )
added a method ` invokeWithoutBlockingWithResultSync ` to the ` CN ` class to provide a way to invoke RunnableWithBlockingWithResult
deleted the PresenceMessageComboTests . java file to the test class is no longer needed in the project
updated calculations in PortraitPagedViewHandler . java to use Math . round for calculations to improve code readability and maintainability by
removed unnecessary parameters from KMeansDriver . run calls in TestClusterDumper . java to simplify the code and improve readability by elimin
updated alignment logic in KeyValue . java to use ClassSize . ARRAY instead of ClassSize . OBJECT to improve code readability and maintainability by
camel - 1640 : add service to defaultcamelcontext so that it do n ' t throw an exception
added import for ConditionalTask and dispatching tasks in SparkCrossProductCheck . java to handle conditional tasks in SparkCrossProductCheck . java to
refactor action handling in Launcher and LauncherAppState to improve clarity and consistency to enhance code readability and maintainability
updated conditional logic in LoginInfoEndpoint and added tests for account chooser and discovery in LoginInfoEndpointTests to ensure correct handling of JSON response
added a new method ` toDescriptiveString ( ) ` to the ` AssignmentManager ` class to provide a detailed string representation of region state
replaced ` message ` with ` msg ` and ` result ` in ` HuobiAccountInfo ` and updated related methods in ` H
added a new method ` addReservedWords ` to ` MariaDBDatabase ` and a corresponding test in ` AddColumnGeneratorTest ` to
[ beam - 2841 ] add default environment option to portablepipelineoptions
added detailed messages for Android 7.1 shortcuts in VersionChangeLogs . java to provide clearer feedback about changes to the dictionary loading mechanism for
updated the visibility of NUM _ MILLIS _ IN _ DAY from private to public in IndexExpressionIT . java and TestUtil . java to
removed debug print statement from ImageResourceLoader . java to clean up the code and improve readability
[ java ] use aeron . conductoragentinvoker instead of invoke aeron . conductorclientinvok
updated validation logic in mmm Attr . java and added a new class NoWarnOnImplicitParams . java with generic interfaces to improve type validation
refactor ` FileMenuFilter ` to use ` showMenuItem ` and ` hideMenuItems ` methods to improve code readability and maintainability
added reserved0 and BTC _ deposit to BTCETransHistoryResult and updated assertions in BTCETransHistoryJSONTest to
replaced List with Set for series and exceptions in RetryFilterFunctions . java to improve performance and maintainability of the code
added @ Deprecated annotation to PluginLoader . java to indicate that the class is outdated and should no longer be used
added a condition to check if the end time is greater than the sequence time in LastQueryExecutor . java and created a new test in IoT
corrected the spelling of " \ r \ n " in the request string to ensure proper formatting of the request string
added a static block to set the " org . slf4j . simpleLogger . log . org . apache . http . wire "
added a safe area setting for the title bar in the Sheet class to ensure that the title bar is properly displayed in a safe area
modified the loop to iterate over the first element of TimeSeriesChunkMetaDataList to ensure that the first element is not empty before iterating over the first
added SQL query construction in AlterTest . java to ensure proper parsing and deparsing of SQL statements
changed the access modifier of the copyState method from package - private to public to allow access to the method from other classes
fixed - rexecutorservice . executecallable ( taskparameters ) return asyncfuture . tocompletableFuture ( )
added a new constant ` SUFFIX _ SPLIT _ FILE ` and updated file extension handling in ` FileLister ` and ` FileSystemSplit `
rename OrcBatchReader , OrcRowInputFormat , OrcTableSource , and OrcTestFileGenerator classes to improve clarity
refactor conditional statements in CompareFunctionsProcessor . java for improved readability to enhance code clarity and maintainability
updated the ` reduceScopeForLimitedSpace ` method to accept a ` expectedSize ` parameter and modified disk space checks in ` Compaction
added ` toString ( ) ` methods to ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to
added null check for mLastGestureState in AbsSwipeUpHandler and unregistering TaskStackListener in TaskAnimationManager to ensure proper
added methods to retrieve and set the lock timestamp in AppPreferences and PreferenceManager classes to improve code readability and maintainability by centralizing preference
refactor audio track artist retrieval to use a dedicated method to improve code readability and maintainability by centralizing artist retrieval logic
added a null check for remoteMessage before checking its data to avoid potential NullPointerExceptions when remoteMessage is null
added null checks and null checks for splitInfo and headerFlowFile in SplitText . java and created corresponding tests in TestSplitText . java
added support for keystore loading in HttpsConnectorFactory to ensure compatibility with Windows - specific key store types
updated DEFAULT _ CHECK _ TIMEOUT from 400 to 1 _ 000 in RestTemplateSenderTest . java and WebClientSenderTests . java to increase
added a conditional check for the remote folder status in FileSyncAdapter . java to ensure that the remote folder is ignored when the remote folder is
added animate functionality to the Slider class to enhance user experience by allowing custom animation options
updated assertions in LineSeparatorProcessorTest . java for consistency to improve code readability and maintainability
updated maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to optimize memory usage for texture packing
added a new test method ` negatedTernaryNotUnwrapped ` to ` UnnecessaryParenthesesTest ` and modified the condition in `
camel - 16400 : fix npe in hazelcastqueueconsumer when body be null
added a new test class ` TextFeedbackTest ` and refactored ` TestRunner ` to use it in ` AllTests . java `
replace math . round with Float . compare in DefaultSolrHighlighter . java to improve performance by using Float . compare for score comparison
updated dpi handling in AddAndScaleMultiImage and ResourceEditorApp to use try - with - resources for FileOutputStream to ensure proper resource management and
added a new method ` arrayClassElementOffset ( ) ` to ` HotSpotReplacementsUtil ` and modified the initialization of ` destElem
refactor condition checks in DefaultLogPublisher to use a boolean variable for processing stage total to improve code readability and maintainability by reducing
added remoteScmSupported property and its getter / setter methods in Configuration , RuntimeEnvironment , and Indexer classes to enable remote SCM support
added a condition to check if the on - off state is already in the on - off state to ensure that the on - off state is
replace ` StatsLogCompat ` with ` SysUiStatsLog ` in ` StatsLogCompatManager . java ` to improve clarity and consistency
updated logging variable name from " log " to " LOG " in LocalZookeeper . java to improve clarity and consistency in logging output
added unit tests for ProjectGenerationEvent finished and started events in EventSerializationTest . java to ensure correct serialization and deserialization of ProjectGenerationEvent instances
[ geogebra - 2321 ] fix selectionmanager . getspecpoints ( ) to return prerelease instead of select _ to
refactor JavaCompiler class to improve code structure to enhance maintainability and readability of the code
added error handling for non - positive remainingTime in IntegrationTestTimeBoundedRequestsWithRegionReplicas . java to ensure that the amount of data
updated multiple Java files related to DumpHeap , TimSortStackSize2 , and JMapHeapConfigTest to improve code organization and maintainability
added " -- gc - sections " option to the LDFLags list in NdkCxxPlatform . java to enhance configuration flexibility
refactor URI handling in SpringCloudCircuitBreakerFilterFactory to utilize ServerWebExchangeUtils for expanded fallback URIs to improve code readability and
refactor multiple test classes for consistency and clarity to improve maintainability and readability of the codebase
added null checks for URI and localName in ReadOnlySharedStringsTable . java to improve robustness by avoiding potential NullPointerExceptions
added a method ` getAccountNet ` to ` HttpMethed ` and a corresponding test in ` HttpTestAccount001 ` to facil
added a check for availTextWidth before returning clipString in SwingUtilities2 . java and improved error handling in Test6635110
refactor FlatteningIterator initialization and improve iterator handling in FileResourceIterator and FlatteningIterator classes to enhance code clarity and maintainability by
updated the string replacement for title and body in NotificationUtils . java to ensure proper HTML formatting for better readability and maintainability
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added a method to reload and delete existing question links in InstructorFeedbackEditQuestionsUiTest . java to ensure that a new question is
updated return values in HSSFSheet . java and added assertions in BaseTestSheet . java and BaseTestSheet . java to ensure correct
added permission checks for launcher and PendingAdd components in InstallShortcutReceiver and Launcher classes to ensure proper handling of malicious intents in the
[ java ] use clustersession . state ( ) instead of clustersession . state ( ) . state ( ) .
refactor hashCode methods in AbstractParquetMapInspector for improved clarity and consistency to enhance code readability and maintainability by reducing
added a check for remotely closed state before flushing the buffer in HTTP3StreamConnection to ensure proper resource management and prevent memory leaks
changed the SplitReader interface to extend AutoCloseable and modified the close method to extend AutoCloseable to ensure proper resource management and prevent potential
removed the deepCopy ( ) method from GsonBuilder . java to streamline the code by eliminating unnecessary copy operations
replaced null return statements with a static final NOT _ FOUND constant in LLScanner . java to improve code clarity and maintainability by
refactor file opening and closing logic in RestClientRequestImpl . java to improve code readability and maintainability by reducing redundancy
removed unnecessary whitespace in dispatchStatusString method call to improve code readability and maintain consistency
replaced ` MockFactory . class . getClassLoader ( ) ` with ` SearchingClassLoader . java ` and added a new class ` Searching
added a new file TestRefreshFlagBug . java that implements a simple application with a refresh flag to facilitate testing of refresh flag
updated condition to include LEFT _ SEMI _ JOIN type in ConstantPropagateProcFactory . java to ensure proper handling of LEFT _ SEMI
refactored condition checks in HttpReceiver and HttpSender to use HttpStatus . CONTINUE _ 100 instead of boolean to improve code clarity and
replaced arrayLengthOffset with arrayOopDescLengthOffset in multiple Java files to standardize array length calculations for better performance
http : / / issues . apache . org / jira / browse / amq - 4392 - add default policy to broker test
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
added a check to ensure the app context is stopped before stopping it to prevent unnecessary execution when the application is not running
refactor the ` drawItem ` method to return a ` GlyphLayout ` instead of a void to improve code clarity and maintainability by
updated SpringmvcClient and CodeFirstSpringmvc to use MetricsPublisher for metrics retrieval to improve metrics management and ensure proper error handling
removed the static final long SAFE _ ACCOUNT _ AGE _ DATE constant from AccountAgeWitnessService . java to simplify the code by
refactor switch statements in StructureHeader . java and StructureReader . java to improve code readability and maintainability to enhance code clarity and
added ResourceUrlProviderExposingInterceptor to CasWebflowContextConfiguration and updated related classes to enhance the handling of resource URLs in the application
added a new class ` DexReturnInliner ` and modified ` DexBody ` and ` DeadAssignmentEliminator ` to
updated ` RuleResource ` and ` EnrichedRuleDTO ` to use ` getProperties ( ) ` instead of ` getConfiguration ( ) ` to
updated the return statement in PathResource . java and added a new symlinkDir argument in AliasCheckerSymlinkTest . java to improve clarity and
[ hotfix ] [ table - planner - blink ] remove sqldialect from executionentry and executioncontext
refactor ` rDotJavaPackages ` and ` rDotJavaPackagesSupplier ` to use ` hasRDotJavaPackages ` instead of `
add a new test class ASTPackageDeclarationTest to verify the existence of a package info node to ensure the correctness of package information in the
added configuration property for minimum cross compaction unseq file level in IoTDBDescriptor to enhance flexibility by allowing configuration of minimum cross compaction unseq
[ hotfix ] [ runtime ] move ` ` active ' ' to ` ` active ' ' package
changed the method name from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify the
updated URI handling in ZipResource . java and added unit tests in ZipResourceTest . java to improve URI handling and ensure correct parsing of feature
updated the ` rightButton ` and ` rightButton ` listeners in ` ExpandableUploadListAdapter . java ` to improve thumbnail management and ensure
refactor configuration handling in RobolectricTestRunner and add new tests in RobolectricTestRunnerTest to improve clarity and
replaced direct instantiation of ` Block ` and ` Item ` with ` Iterables . filter ` in ` ModelLoader . java ` to improve code
refactor ` AbstractDataChangedListener ` and ` WebsocketDataChangedListener ` to extend ` AbstractDataChangedListener ` and update related methods
refactor JSONPojoConvertor to handle enum types and improve color handling in JSONPojoConvertorTest to enhance code clarity and
added a deprecation warning for ` -- view ` option in ` IjProjectCommandHelper . java ` to indicate that ` -- view ` option
replaced ` String ` with ` byte [ ] ` in ` GWTRequestWrapper . java ` and updated the handling of ` originalPayload `
updated GyroControl . java to implement OrientationCorrectionListener and modified mouse positioning logic to enhance sensor event handling based on device orientation
updated BIOME _ LIST _ SIZE from 256 to length of BiomeGenBase . getBiomeGenArray ( ) . length to
updated method names from ` Foo ` to ` Foo ` and ` Foo2 ` in ` GetInterfaceTest . java ` to improve clarity
updated the initialization of the Environment variable in FileCompilerConfig . java to ensure consistency in variable naming conventions
added a new interface ` ByteToLongCollector ` in the ` com . speedment . common . function . collector ` package to provide a way
added a preload parameter to MMapDirectoryFactory to turn off the map directory based on user preferences
added custom metrics for worlds , economy , economy , and mysql components in BukkitPlatform . java to
refactor QuickConnectREST class to improve code organization to enhance maintainability and readability of the code
added aspect ratio and default card image in CardPresenter . java to enhance the visual appearance of the default card image
do n ' t attempt to login a page url if authentication method be implicit
updated VectorHashKeyWrapper to use EMPTY _ LONG _ ARRAY and EMPTY _ DOUBLE _ ARRAY for longValues , doubleValues , and byteValues to
added unit tests for System . nanotime ( ) in TimeChangeTest . java to ensure correct handling of system . nanotime (
added trimming of whitespace in MultiPartFilter and modified line assignment logic in MultipartFilterTest to improve robustness by preventing null pointer exceptions
fix living experience drop event . close # 316
[ openuv ] update error message when quotaexceeded
[ calcite - 3842 ] remove unsupportedoperatorvisitor from beamqueryplanner
refactor GraphEnhancementQueryEnvironment to utilize RdepsFunction for target graph retrieval to improve dependency management and enhance code clarity in
refactor Character class to improve code readability to enhance maintainability and facilitate future updates
added a flag to scale the entire rocket in ScaleDialog . java to ensure that the selection option is only selected when the rocket is
replaced ` Arrays . toString ( ) ` with ` Arrays . getBytes ( 4 ) ` in ` UpdateableResultTest . java ` to
refactor time boundary handling in BaseBrokerRequestHandler to use a static method for attaching time boundary to improve code readability and maintainability by
refactor AjpAprProcessor and Http11AprProcessor to use a boolean flag for poller addition to improve code readability and maintain
updated regex pattern in EightmusesRipper . java and modified URL handling in EightmusesRipper . java to
replaced direct calls to ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` in multiple test files to improve
added phone profile checks for vertical bar layout in QuickstepLauncher to ensure proper layout behavior for phone and landscape scenarios
replaced calls to ` getValue ( query , PROPERTY ) ` with ` unwrap ( QueryImpl ) ` in ` PartTreeJpaQueryIntegration
replaced the method ` readAllLines ` with ` readMatchingLines ` in ` SubSystem . java ` to improve code readability and ensure
removed the dynamic check for the " getResultStream " method in JpaQueryExecution . java to simplify the logic by eliminating unnecessary dynamic
added a null check for entity in PhysicsProcess . java to prevent potential NullPointerExceptions during entity processing
added a new test method ` entry _ processor _ with _ predicate _ clears _ map _ when _ value _ attributes _ are _ indexed `
added methods to ` OperationSetJitsiMeetToolsJabberImpl ` and created a new ` OperationSetJitsiMe
updated color assignment logic in Utils . java and modified HTML message formatting in UtilsTest . java to ensure correct color representation and improve clarity in
added EasyBind subscriptions for text input control and normalize names in DefaultMenu , EditorMenus , and DefaultMenu classes to enhance user experience by allowing
updated the path format for the link tree in Aapt2Link . java to improve clarity and maintainability of the codebase
replaced instances of ` Capture . newInstance ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java
ggb - 1343 update selection in euclidiancontroller and algebracontrollerd
added handling for MarkedYAMLException and EmptyStackException in YsldValidator . java to improve error handling and provide clearer context information
added isCanceled ( ) method implementations in BehaviorCall , Calls , and OkHttpCall classes to ensure proper cancellation of calls and improve code cl
removed the ` isAnnotationPresent ` method signatures from multiple classes to simplify the code by eliminating unnecessary null checks
added a default method ` removeAllWidgets ( ) ` in ` UILayout . java ` to ensure that the ` removeAllWidgets ( ) `
[ hotfix ] [ yarn ] fix log4j2 test failure
update output size calculation to use Math . max instead of Math . min to ensure correct output size calculation based on input length
added conditional logic to set useDirectProfile based on video width in PlaybackController . java to ensure transcoding of high - res content is
[ hotfix ] [ table - planner - blink ] use spark - sql - execution - datasources - v2 - relation instead of
replaced Date with a wildcard import and modified listener removal logic in GpsLoggingService . java to improve code readability and maintainability by
updated putString method to accept byte [ ] instead of boolean [ ] and added support for EastAsianWidth in Relay . java to
added import for BaseItemDragListener and updated item initialization in FolderIcon . java to enhance drag - and - drop functionality for better user experience
added ` createEmptyArtifact ` methods to ` RepositoryConnector ` , ` AbstractRepositoryConnector ` , ` FileSystemConnector ` , and ` TagConnector
updated configuration parameters in RabbitMQPublisherImpl . java to improve clarity and consistency to enhance code readability and maintainability by standardizing configuration
removed unnecessary condition checks for afterAug1 in VideoViewerActivity . java to simplify the code and improve readability
added a method to compact the destination path in SftpOperations . java to ensure that the destination path is correctly formatted for FTP operations
( chore ) camel - baseweather : increase test timeout to 20 second
updated variable name from groupSortStr to sortWithinGroupStr in QueryComponent . java to improve clarity by using a more descriptive variable
fix blockdoubleplant . getboundingbox ( ) and blocktype . getboundingbox ( ) . getboundingbox (
replace focusable with setRequestFocusEnabled in TranscodingTab . java to enable request focus functionality for better user experience
added exception handling in VirtualMachineManagerImpl . java to ensure proper exception handling during VM operations
added a new method ` acceptLicense ( ) ` to ` DB2TestSystem ` and modified conditional checks in ` DockerDatabaseWrapper ` to
refactor DoubleModel and GeneralOptimizationDialog to use a dedicated setUnitGroup method to improve code readability and maintainability by centralizing
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to establish a new currency pair for ZMW
added a check to set the number of samples before setting the fpp ' s numSamples to ensure that the fpp ' s numSamples
updated test variable names from " step1 " to " step2 " and " step3 " in StepWithSimpleTaskJobParserTests .
changed variable declarations from ` final ` to ` final ` in ` CentralAuthenticationServiceImplTests . java ` to ensure immutability of
replaced ' ggbabs ( ) ' with ' ggbabs ( ( ) ' in ExpressionNode . java to improve code readability
added multiple calls to ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer . java ` and refactored error handling in
[ drlx ] add support for BigInteger . class in object creation expression .
added " org . eclipse . jdt . " to the WebAppContext class to hide the JDT used by Jetty to improve user
removed the call to super . useAuthCache ( ) in NegotiateAuthentication . java to simplify the code by eliminating unnecessary cache
replaced the assignment of the namespace variable with a capitalize method to ensure consistent namespace naming across different operating systems
camel - 1649 : added directconsumernotavailableexception to allow for backwards compatibility
added null check for zooKeeper before closing it to avoid potential NullPointerException when zooKeeper is not initialized
corrected a typo in the step message from " Initializing mods Phase 2 " to " Initializing mods Phase 2 " to ensure correct
replaced direct calls to ` mVibrator . vibrate ( ) ` with a dedicated method ` runOnUiHelperThread
added a method to update the last remote stream ID in HTTP2Session . java to ensure that the last remote stream ID is updated in the
updated Graphics2D rendering hint settings in EditorHeader , EditorToolbar , and Preferences classes to ensure consistent rendering hints for text antialiasing
[ java ] remove unused termwindowsize and termoffset from driverconnection and publication .
refactored import statements and variable names in CtAnnotationImpl . java to improve code readability and maintainability
refactor ExoPlayer class to improve code readability to enhance maintainability and facilitate future updates
replaced the native method ` getRGBPixelImpl ` with a direct call to ` getRGBPixels ` to improve code readability and maintain
added a new method ` newPrintStream ` to handle UTF - 8 encoding in ` System . java ` to enable proper handling of character encoding
updated the vibrate value from 1 to 25 in TouchableMovementMethod . java to increase the vibrate duration for better movement
updated import statements in AppEngineSqlCloudSession . java , FlybushDataClearer . java , and TestEnvironment . java to
updated constructors in WebSocketClient to include an additional Executor parameter to enhance flexibility by allowing custom executor parameters
corrected the spelling of " / selenium - server / tests / html / test _ i18n . html " in I18n
replaced ` handleIllegalArgumentException ` with ` handleLoadConstantException ` in ` BytecodeParser ` and ` SharedGraphBuilderPhase ` to improve
added a call to restoreAuthSystemState ( ) in XmlWorkflowServiceIT . java to ensure proper management of authentication system state during tests
added a new ` LowercaseComparator ` class and modified the constructor in ` CoNLLUFeatures . java ` to use it to improve
refactor JavadocTool to use a separate method for parsing JavaFileObject objects to improve code readability and maintainability by reducing redundancy in
danielwagnerhall : ignore test that fail if the option be not in a multi - select
removed the condition for checking the length of keys in HighestKvno . java to streamline the code by eliminating unnecessary exceptions
added error handling for retrieving attributes in HDF5BatchReader to ensure only Huge objects BTrees with 1 record are supported to improve robustness
[ beam - 1561 ] fix writeresult . in ( ) method to return pdone . in ( )
updated XML root element name from " copySnippetRequestEntity " to " createTemplateRequestEntity " and added ApiImplicitParams annotations in ProcessGroup
added a new file TestMultiANewArray . java that tests the functionality of the MultiANewArray class to verify the functionality of the
updated the UseSecondaryStorageVm method from " Advanced " to " secondary . storage . vm " to clarify the behavior of secondary storage
refactor block ID handling in SyncBlockChainMsgHandler to improve clarity and consistency to enhance code readability and maintainability by reducing
added theme setting for preview tab content in PreviewTabView to enhance user experience by providing clearer theme settings
added a null check before closing the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leaks
added a new test method ` setIdleTimeout ` in ` ConnectorTimeoutTest . java ` and modified ` ServerConnectorTimeoutTest . java `
add dcoref . dictlist , dcoref . dictpmi , dcoref . signatures property to dcoref ( #
refactor ` readIdentifier ( ) ` to ` readTagName ( ) ` and add a new method ` readTagName ( ) ` to improve
updated JpaPagingItemReader and JobLaunchingGatewayParserTests to improve type safety and consistency to enhance code clarity and maintainability
change log level from warn to debug in DistributedQueue . java to improve log verbosity for better debugging
refactor ColorExtractionService to use a method for retrieving hotseat palette and hotseat palette to improve code readability and maintainability
replaced ` DefaultDataTableEntryTransformer ` and ` DefaultDataTableCellTransformer ` with ` TableCellByTypeTransformer ` in ` TypeRegistry ` to
added an assertion to check if newAvailableShared is greater than initShared to ensure that newAvailableShared is greater than initShared to avoid unnecessary
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
removed the ` projectGenerated ` field and its getter and setter methods from ` ProjectGenerator ` and ` WorkspaceAndProjectGenerator ` to streamline
updated condition in DriverUtils . java to improve clarity and consistency to enhance code readability and maintainability
added contactForm and postContactForm methods to the Routes and ApplicationController classes to enhance form handling for contact data in the application
guacamole - 521 : use simpleobjectpermissionset instead of permissionset for simpleuser
updated the RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest version of the icon cache
[ hotfix ] fix typo in setmode method
rename ` findWhereNameLikeAndActive ` method to ` findWhereNameOrAliasLikeAndActive ` across multiple files to improve clarity
replaced ` IOUtils . closeSafely ( true , perDocConsumers ) ` with ` IOUtils . closeSafely ( true , perDoc
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener for the overflow button in ExpansionViewHelper to ensure the menu is shown when the overflow button is clicked
replaced ` failWithoutSubject ` calls with ` failWithoutSubject ` for null and non - null references to improve clarity in failure messages
update the line height of the help button in AlgebraViewW and update it in InputTreeItem to improve user experience by ensuring the help
updated package structure in ProtoBufferUtilitiesTest . java from ` p2p . network ` to ` p2p . util ` and added
replaced direct calls to ` setDividerPosition ( ) ` with ` Platform . runLater ( ) ` in ` JabRefFrame .
refactor file handling logic in Globals . java and introduce crossreferencedEntriesCount in AuxSubGenerator . java to improve clarity
[ geos - 3641 ] fix classcastexception in geoserverfeaturelocking and geoserverfeaturestore
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity and consistency in naming conventions
added an ` MetaContactAvatarUpdated ` method to ` MclStorageManager ` , ` MetaContactImpl ` , and ` TreeContactList
updated import statements from ` org . apache . sshd . server . Command ` to ` org . apache . sshd . server . command
added a test method to clean up audit log table post parameters by position in AuditLogTest . java to ensure proper cleanup of audit log table
added @ SuppressWarnings ( " unchecked " ) annotation to the inject method in ComponentContext . java to improve type safety and prevent unchecked cast warnings
added regex patterns for comment lines in ACLFileParser and updated test cases in ACLFileParserTest to improve comment parsing accuracy and ensure correct parsing
updated the ` isReadable ` method to include a ` FileSystemPlugin ` parameter and updated imports in ` MapRDBFormatMatcher ` and ` Map
added an ` ancestorDimensionValues ` map to the ` StarTreeImpl ` and ` StarTreeNodeImpl ` classes to track dimension values
added user unlock handling in TouchInteractionService and modified closeOpenViews method calls in BaseQuickstepLauncher to ensure proper handling of user unlock state
change variable name from widthStr to positionStr in Photo . java to improve clarity and consistency in naming conventions
refactor conditional checks in PKIXValidator . java for improved readability to enhance code clarity and maintainability
[ hotfix ] [ test ] add archunit test for hadoop bulk
updated package names from ` org . apache . shenyu . integratedtest . alibaba . dubbo ` to `
cloudstack - 3641 : remove unnecessary ` ` skipprojectnetworks ' ' parameter from ` ` acl ' ' statement
updated the method to retrieve the shape type from the json object instead of removing it from the json object to ensure correct handling of shape types in
added methods to store and store properties in the App class to improve the management of undo information during properties management
replaced direct retrieval of " sun . java2d . xrgradcache " with a privileged action in XRCompositeManager . java
[ hotfix ] [ test ] fix flaky test of streamclosetest
removed the ` doAfterFlush ( ) ` method from ` DocFieldProcessor ` and updated the initialization of ` perFields ` in ` Term
updated ConfigurationMetadataGenerator to filter out non - deprecated properties and added nested configuration properties in AbstractJpaProperties to improve error handling for deprecated properties
replaced instances of ` capacity ` and ` mask ` with ` values ` in ` BiInt2ObjectMap ` and ` Int2Object
updated the maximum number of threads from 25 to 15 in HiveConf . java and modified file renaming logic in Hive . java to improve performance by
added trace logging for error handling and improved exception handling in ParallelNioSender . java to enhance debugging capabilities and ensure proper resource management during
added a null check for the context in SchemeAndroidIDE . java to prevent potential NullPointerException when the context is null
svm : fix npe in nativeimagegeneratorrunner . build ( ) and nativeimagebuildserver . build ( )
change return type of modifyGrantedAuthorities method from void to List in SwitchUserAuthorityChanger and added a new test for modification of author
refactor JaxrsIntegrationTest and RawJaxrsIntegrationTest classes to extend JaxrsIntegrationTestBase instead of JaxrsIntegrationTest to
refactor HikariPool , HikariPool , PoolUtilities , and PoolUtilities classes to utilize a new method setQueryTimeout
added DataProvider annotations to XslSubstringTest . java for various data types in XslSubstringTest . java to enhance test coverage
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter `
added support for MariaDB sequences in MariaDBDatabase and modified sequence handling in CreateSequenceGenerator to ensure compatibility with newer database versions and
updated string formatting in multiple classes to improve readability to enhance code clarity and maintain consistency in formatting
updated import statements to use TableDataManagerProvider instead of common . response . BrokerResponse in multiple test files to ensure compatibility with the latest data
added a conditional check for the " jsse . enableMFLExtension " property in SSLExtension . java to ensure that the extension is enabled
refactor ObjectHashSet and ObjectIterator classes to improve iterator initialization and encapsulation to enhance code readability and maintainability by centralizing iterator initialization
updated character length calculation in Compose . java and TweetFragment . java to ensure consistent character count for shortened URLs
added a new constant DATAPOINT _ TTL and refactored data handling in CassandraDatastore and WriteBuffer classes to improve clarity and
updated ` checkForAndKillXcodeIfRunning ` method to accept a ` enablePrompt ` parameter and improved error handling to enhance user experience
added a method to retrieve terrain at a cell in TerrainGrid to facilitate retrieval of terraing at a specified cell
added default value handling in ` Pretty . java ` and created a new class ` T6665791 . java ` for testing Java files
added error logging for missing QuestEncryptionKeys . json in ResourceLoader . java to improve error handling for missing quest keys
added a condition to check if the push is not enabled before returning it to ensure that the push protocol is only supported when the push is not
refactor PointValue class to improve code structure to enhance maintainability and readability of the code
removed the call to blockCapsule . sign ( ) in BlockUtil . java to simplify the code by eliminating unnecessary signing
updated return statements in FileSystemView . java and Win32ShellFolder2 . java to handle null roots and security checks to improve robustness by
updated ColumnText and PdfPRow to use getMaxHeights ( ) instead of getRowHeight ( k ) and added a new copyLastRow
refactor undo note handling in ListFragment to use SparseArray for better memory management to improve performance and maintainability of undo note management
added methods to adjust feedback question IDs and response comments in UploadBackupData . java to enhance feedback management capabilities for better user experience
removed null check for data in getTransferData method to simplify the code by eliminating unnecessary null checks
ebean : remove unused pstmtdelegate interface and package - info . java
replaced ` Padding ` with ` Rect ` for widget padding retrieval in ` AppWidgetResizeFrame ` and ` Launcher ` classes to
refactor methods in NashornBeansLinker for improved clarity and functionality to enhance code readability and maintainability by encapsulating
refactor ClassGraph and ScanResult classes to improve code organization to enhance maintainability and readability of the codebase
replaced ` latch ` with ` goAwayLatch ` in ` IdleTimeoutTest . java ` to improve clarity and consistency in the
replaced direct calls to ` getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest . java ` to improve
replaced instances of ` ThreadLocal ` with ` null ` in ` Workbook . currentBook ` across multiple files to simplify the code by
added support check for MethodInvocation in ContactSecurityVoter . java to ensure proper handling of MethodInvocation types in the vote method
removed unused imports from DataLoader . java to clean up the code and improve readability
added an AtomicInteger to track the number of rows affected in the postUpdateLog method across multiple classes to ensure accurate logging of update results based on
ggb - 1343 scaler . getstyle ( ) . setmarginleft and scaler . getstyle ( ) . setmargin
increased foregroundFPS and backgroundFPS values from 60 to 60 in JglfwApplicationConfiguration . java to allow for more flex
added assertions for ObjectReleaseTracker in HdfsTransactionLog and TransactionLog to ensure proper release of ObjectReleaseTracker in HdfsTransactionLog and
replaced DefaultWebSocketFrame with ChannelFutureListener for writing WebSocket frames to simplify WebSocket frame handling and improve code clarity
replaced ` TestApplicationEventListener ` with ` TestApplicationEventListener1 ` and ` TestApplicationEventListener2 ` and added ` OnStateMachineError
refactor SettingsActivity to use a dedicated method for setting the list background to improve code readability and maintainability by reducing redundancy
updated import statements in RMEThingHandler . java to use OpenHAB ' s StringUtils instead of Apache Commons Lang3 to ensure compatibility
added a new method ` accumulate ( long iValue , int iWeight , int x , String string ) ` to the ` JavaUserDefined
[ hotfix ] [ doc ] fix typo in put / replicationsink
replaced ` VALID _ CACHE _ SET ` with ` REGEXP _ CACHE ` for cache management to improve performance and maintainability by reducing
added a reset method to the GameThread class to reset the game thread to ensure proper resource management and prevent potential memory leaks
added a login method to the DigestAuthenticator class to ensure that the realm is validated before proceeding with the login process
refactor parameter handling in SavedRequestAwareWrapper for improved clarity and functionality to enhance code readability and maintainability by reducing
updated InfoStatus messages from " hiddenSingleton " to " lc " in BasicConfigurator . java and added a toString method in LoggerContext . java
replaced ` waitPoint . countDown ( ) ` with ` this . wakeup ( ) ` in ` CommitLog . java ` and
added a check for Android O version in PhotoViewerActivity and created a utility method in UserAutoCompleteHelper to ensure compatibility with Android O and
updated schema info level from minimum to basic in SchemaCrawlerOptions to ensure compatibility with the latest SchemaInfoLevel standards
replaced ` zipOut ` with ` bufferedOutputStream ` in ` SaveTask . java ` and updated closing method in ` VizModel .
updated TestPayloads . java to use UTF - 8 encoding for random bytes and replaced bytesToString method with a new String constructor to improve compatibility
fix mc - 103516 bug in world . getentity ( ) ( # 103516 )
removed the " Tomcat10ContainerAdapter " and " Tomcat101ContainerAdapter " from the list to clean up the code and
[ drools - 1342 ] add a test for multi - accumulate ( ) method in protobufinputmarshaller to ensure that accumulate ( )
refactor case statements in NowSearchTerm . java and SearchTermBuilder . java to improve code readability and maintainability to enhance maintainability
pdfbox - 4071 : remove public modifier , a suggest by valerybokov
added support for handling HTTP method and headers in RemoteEndpointServiceAccessStrategy to enhance flexibility in endpoint URL resolution
added a protected method ` newResponseBuilder ` to create a ` ResponseBuilder ` with a list of search components to improve encapsulation by allowing
added a notification for the start command in AsyncBackgroundTaskManagerTest to ensure that the command is started before proceeding with execution
refactor computePreviewDrawingParams method to check for null mReferenceDrawable before calling computePreviewDrawingParams to improve robustness by avoiding potential
refactor LukeRequestHandler to use CharFilterFactory instead of TokenFilterFactory for filters and filters to improve code readability and maintainability
replaced null checks with ParamChecks . nullNotPermitted for plot , generator , and hotspot arguments to improve code readability and maintainability
added verbosity handling to the createSubContext method in JavacStep . java and modified its usage in ExecutionContext . java to enhance flex
added a null check for databaseType and uppercase schema handling in DbSqlSession . java to ensure compatibility with oracle database types and ensure consistent schema
updated the context description formatting in AsyncLoggerAllThreadContextImplementationsTest . java to include the context ' s class name to improve clarity
added a new file TestShrinkToOneRegion . java containing a main method to test garbage collection functionality to facilitate testing of the shrink
replaced string splitting with Splitter for parsing custom packages to improve readability and maintainability of the code
refactor AnalyzingInfixSuggester and AnalyzingInfixSuggesterTest classes to improve code readability and maintain
updated the handling of localAttachment in PushsaferMessageBuilder to use a localAttachment variable instead of a hardcoded string to improve clarity
updated the ` showLabelStats ` method in ` ModelExplorer ` , ` SequenceModelExplorer ` , and ` StripProvenance ` classes to
pdfbox - 4892 : remove null check , a suggest by valerybokov
updated the FORMATTER string construction in multiple test files to ensure consistent formatting across different field types
replaced logging imports with java . math . BigDecimal and RoundingMode for rounding to improve code readability and maintainability by using Java ' s
refactor configuration retrieval logic in GraalJSScriptEngineFactory to use ConfigParser for injectionEnabled , useIncludedLibrary , and injectionEnabled to
changed class visibility from package - private to public in Test1 . java and Test2 . java to allow access to the Test1 and Test
updated TranslatableCaption templates to use " deny . no _ enter " instead of " permission . no _ permission _ event " and modified plot
updated the ` getAdditional ` method to accept a ` Session ` parameter and modified the ` getAdditional ` method to accept a ` Session ` parameter to
replaced ` DoTestNormsVersusStoredFields ` with ` DoTestNormsVersusDocValues ` in ` Base
fix box2dcharactercontrollertest to reset friction
added test cases for threadbuffersize exceed memory size in TestBadOptionValues and TestMemoryOptions to ensure globalbuffersize and threadbuffersize
removed " must be power of 2 " and " must be a multiple of 8 " in ObjectAlignment . java and Options . java to simplify
added ` getTargetPackage ( ) ` method to ` AbstractAndroidInstrumentationTestJVMArgs ` , ` AndroidInstrumentationTest ` , and
refactor DocHelper class to improve code readability to enhance maintainability and facilitate future updates
updated the initialization of the acceptableThrowawayItems setting to use a ArrayList to improve performance by reducing unnecessary array creation
removed generic type parameters from invokeExact method calls in Test6987555 . java to simplify code and improve readability by eliminating
refactor thread priority handling in MessageHandler . java to improve clarity and consistency to enhance code readability and maintainability
refactor Inflection class for improved clarity to enhance maintainability and readability of the code
added ` getLocale ( ) ` and ` setLocale ( ) ` methods to ` EvaluationContext ` to provide access to the ` elContext ` '
removed unused import of Plugin from SummaryPrinter . java to streamline code by eliminating unnecessary dependencies
added a break statement in DrawerActivity . java to ensure proper handling of the break condition in the activity
updated import statements and query object logging in MongoQueryCreator . java to improve clarity and consistency in query object handling
added a constant for the logger factory in XWorkConstants and implemented it in LoggerFactory to enable dynamic configuration of the logger factory based on the
rename ` adminAddPeerFailsWhenP2PDisabled ` to ` adminAddPeerHasNoEffectWhenP2PDisabledOnTargetNode
rename ` ` livenessstatehealthindicator ' ' to ` ` readinessstatehealthindicator ' '
added a ConcurrentMap for concurrent store management and modified return logic in LocalPStoreProvider . java to improve concurrency handling and ensure proper handling of
refactored the ` deleteFiles ` method to be private and added a new ` deleteFiles ` method to improve code readability and maintain
replaced ` Provider < T > ` with ` ServiceProvider < T > ` in ` ServiceLoaderSpliterator . java ` and updated related
refactor ` findField ` and ` setField ` methods in ` JavaInteropReflect ` , ` JavaObjectMessageResolution ` , and `
added toolchain creation checks in AbstractCell , ToolchainProvider , and DefaultToolchainProvider classes to ensure correct behavior when toolchains are created
added a boolean flag ` contextAddedToEngine ` and modified context removal logic in ` PolyglotEngineImpl . java ` to ensure proper
replaced ` indexOf ` checks with ` contains ` checks in ` AbstractCheckDescriptor . java ` to improve code readability and maintainability by
updated ` PrebuiltCxxLibraryDescription ` and ` PrebuiltCxxLibraryBuilder ` to use ` CxxFlags . getFlags `
replaced ` onConfigurationChangedInternal ` with ` updateRecentsRotation ` in ` AbsSwipeUpHandler ` and ` Recents
updated type parameters in multiple classes to use generics for listener types to enhance type safety and improve code readability
updated the method call to retrieve the hash string from the newBlock object to ensure the correct hash string is used for the split point
[ issue # 1188 ] fix the bug in defaultmessagestore . getdiskpartitionspaceusedpercent ( )
removed the try - with - resources statement for JvmGcMetrics and JvmHeapPressureMetrics in MicrometerMetricManager . java to
added functionality to count message counts based on message status and elapsed time in CompactionLog . java to ensure accurate message count tracking based on the
added multiple @ Deprecated annotations in AbstractJPASubQuery , JPACommonQuery , and JPAQueryBase classes to mark these classes as
added a method to check if a system UI resource exists in AbstractLauncherUiTest . java to enhance functionality by allowing users to access the system
changed the visibility of ` logger ` and ` principals ` and ` sessionIds ` from static to final in ` SessionRegistryImpl . java `
added a check to return false when cookieJar is empty in InMemoryCookieStore . java and a corresponding test in NullUriCookieTest .
added toString ( ) method to BonsaiValue class and updated logging in BonsaiWorldStateArchive and BonsaiWorldStateUpdater
changed the return type of ` getText ` methods from ` String ` to ` CharSequence ` in multiple repository classes to allow for more flexible text
added a @ NotYetImplemented annotation for MARIONETTE in AlertsTest . java to indicate that the test is not implemented
added exception handling in the returnConnection method in SocketConnector . java to ensure proper resource management and log exceptions during connection return
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update command handling in multiple files to
added synchronization to heartbeatExecutorService in DbTxnManager . java to ensure thread safety during shutdown and termination of the heartbeatExecutorService
refactor ` transformBuildResultIfNotPresent ` to ` transformBuildResultAsyncIfNotPresent ` and introduce a new ` wrapWithTracingAnd
added a method ` updateFirstLineShowing ( ) ` to handle drag - selecting text out of the TextArea ' s bounds to ensure
added temporary directory paths to the configuration overlay in TestInformationSchemaWithPrivilege . java to ensure consistent directory structure across different operating systems
refactor graphics configuration retrieval logic in Component . java to improve readability and maintainability to enhance code clarity and maintainability by reducing
updated DefaultInputStreamFactory and TikaServerIntegrationTest to use a new ServerStatus parameter and added new test cases for OOM in legacy mode
refactor pipeline processing logic in Pipeline . java to streamline processing process logic to improve code readability and maintainability by reducing redundancy
refactor PrintTagList to handle command - line arguments and improve tag handling to enhance code readability and maintainability by reducing redundancy
updated the method to use ` toString ( ) ` instead of ` getFullyQualifiedName ( ) ` in ` InsertDeParser . java ` to
added EOFException handling in JournalCorruptionEofIndexRecoveryTest . java to ensure proper handling of EOFException during message draining
[ java ] make startfromtruncatedrecordinglogtest more robust .
updated the calculation of the arc and outer variable in LineBorder . java and Test4252164 . java to ensure correct calculation of the
added null and empty checks for galleryImages in PostGalleryTypeImageRecyclerViewAdapter . java to ensure proper handling of null and empty galleryImages
updated deployment ID handling in StandardChangeLogHistoryService and CreateDatabaseChangeLogTableGenerator to ensure consistent behavior of deployment _ ID in the database
pdfbox - 4071 : use interactive form instead of fdf
refactor method signatures in AlterTableAddConstraint . java for improved readability and maintainability to enhance code clarity and maintainability
added a provisional engine map and updated engine management logic in QuickfixjComponent . java and QuickfixjComponentTest . java to improve
added a boolean field ` displayZoomControls ` and modified the ` setMixedContentMode ` method to accept a value of ` mixedContentMode
added corporea block , brick , slab , and slab constants in ModBlocks . java and ItemCorporeaSpark . java
refactor ConnectionFactory class to improve code readability to enhance maintainability and facilitate future updates
added a method to disable menu items in GpsMainActivity to enhance user experience by allowing users to disable menu items based on user settings
updated the message for empty lists in ExtendedListFragment . java to include a filter list to enhance user experience by providing a clearer message for
hhh - 14819 fix test failure in entitytests
added auto - resize mode and auto - create columns from JTable and updated instantiation in MotorConfigurationPanel to improve table management and ensure
replaced ` System . lineSeparator ( ) ` with ` System . getProperty ( " line . separator " ) ` in ` StringJoiner .
added getter and setter methods for creator and subject in POIXMLProperties and updated test cases in TestPOIXMLProperties to enhance property management
removed unnecessary whitespace in the doStop ( ) method call to improve code readability and maintain consistency
[ java ] check if the cnc file exists before check if it ' s empty to improve error handling for invalid cnc files
renamed ` Marker ` and ` MarkedFoo ` interfaces to ` Command ` and updated related interfaces to improve clarity and consistency in
added methods to check and de - class names for JMod files in ClassFileSourceImpl . java to improve flexibility in class loading based on
added null checks for canonicalizer in TreeBackedElement and TreeBackedPackageElement classes to improve code robustness and prevent potential NullPointerExceptions
replaced ` setClientId ` with ` setRequestParameters ` in ` Saml2TokenGranterTest ` and ` UserTokenG
change array length from arrayLength to valueRangeObject in AbstractFromPropertyValueRangeDescriptor . java to ensure correct handling of value range objects in the
added a ` sync ` method to ` ZKAssign ` and ` ZooKeeperWatcher ` classes to enable synchronization of a specified path in the ZooKeeper
added a check for the presence of the current context in the GlUtil class to ensure that the exception is only thrown when the current context is
[ drools - 1342 ] fix ruleflowgroup deactivation in executionflowcontroltest .
added a return statement to HystrixDashboardConfiguration . java to ensure proper execution of the method in the application
updated error handling in DropPipeProcedure . java and added assertions in IoTDBPipeIT . java to improve robustness of pipe dropping and
refactor ClientQueueDisruptionTest to use JUnit ' s After annotation and improve cleanup method naming to enhance code clarity and maintainability
refactored signature printing in CtReferenceImpl to use DefaultJavaPrettyPrinter instead of SignaturePrinter to improve code readability and maintainability by
changed the access modifier of the validateInstance method from public to protected to restrict access to the method for better encapsulation
updated import statements in GeoPointField , GeoPointInBBoxQuery , and GeoPointPrefixTermsEnum to improve code clarity and maintainability
added a new file FakeBuildable . java that implements a FakeBuildable class and updated OnDiskBuildInfoTest . java to utilize
simplified null checks and empty checks in GuiIngameForge and UniversalBucket classes to improve code readability and maintainability by
updated variable names from " path " to " timeseries " in TSParser . java and SQLParserTest . java to improve clarity and consistency
added a check to return 0 if the value is less than EPSILON in TubeCalc . java to ensure that the value is less than
replaced calls to ` getBucket ( ) . create ( ) ` with ` _ storage . create ( BlobId . of ( ) , new
added a finally block to ensure proper resource management in TestHighwayTransport . java to ensure proper resource management and prevent potential memory leaks
added methods to create and recreate history views in DbTriggerBasedHistoryDdl and PostgresHistoryDdl classes to enhance view management capabilities and
updated the checkEngine parameter from 2 to 3 in CarrotClusteringEngineTest . java to ensure compatibility with the latest version of the cluster
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable tests that need to be rewritten
updated ` ParserCacheCommand ` to use ` ParserStateObjectInputStream ` instead of ` ObjectInputStream ` and added a new ` ParserStateObjectInputStream
added null checks for changeLog and updated objectQuotingStrategy assignment in ChangeSet . java and DatabaseChangeLog . java to ensure robustness by
replaced ` parse ` method with ` fromXmlStream ` in ` SliderAppsViewControllerImpl . java ` to ensure proper parsing of
deleted the CsrfControllerAdvice . java file to the functionality was no longer needed for the application
refactor endorsed argument handling to use a new method ` quotePathList ` to improve code readability and maintainability by centralizing
added background animation functionality to the Launcher and LauncherAnimUtils classes to enhance user experience by allowing customization of drawable alpha settings
[ iotdb - 7112324 ] fix typo in type inference test ( # 7112324 )
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added handling for UNC path types in WindowsPathParser and corresponding test cases in PathOps to ensure correct handling of absolute and negative path types
removed InetSocketAddress instantiation from MulticastSocket instantiation in Promiscuous . java to simplify the code and improve readability
removed unnecessary writer . close ( ) calls in TestWildcard . java to ensure proper resource management and prevent potential memory leaks
modified the return statement to clone the nBits object to ensure the nBits is always cloned before returning it to avoid potential null pointer exceptions
changed the visibility of the deriveCollectorName method from private to protected and added new test cases in TestProfilerCollector to allow subclass access to the
datamongo - 2043 - fix type hint when write simple type
added PerfStatsCollector metrics for proxy factory creation in ProxyMaker . java to improve performance monitoring during proxy factory creation
added @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings for better code clarity
added exception handling for ConnectException in TCPConnection . java to improve error reporting for better debugging and clarity
refactor reinflateWidgetsIfNecessary method to use workspace ' s reinflateWidgetsIfNecessary ( ) method across multiple classes to improve
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion functionality to ensure that the file dialog behaves as expected
updated display update logic in LwjglAbstractDisplay . java and removed unused imports in TestSoftwareMouse . java to ensure messages are processed
[ instructor ] fix instructorstudentlistpageuitest and instructorstudentlistpage . verifyhtmlpartforpicture ( ) .
added methods and methods to the TestIgnorance class to exclude test methods due to environment variables
removed the pointer parameter from the fling method in ScrollPane . java to simplify the method signature for better readability
added null check for pageable in QueryDslJpaRepository and created a test for null pageable in QueryDslJpaRepository
added a method ` computeMemorySize ` to the ` MemoryManager ` class and corresponding unit tests in ` MemoryManagerTest ` to enhance memory
updated timeout value from 2000000 to 20000 in JMSPublisherConsumerTest . java and PublishJMSTest . java to
refactor SnowballAnalyzer class to improve code organization to enhance maintainability and readability of the code
replaced ` incIndex ( ) ` with ` previousIndex ` in ` StreamingAggTemplate . java ` to streamline index management and improve
refactor error handling in BytecodeParser to use a static method for clarity to improve code readability and maintainability by encapsulating error
added a new method ` stream ( TableIdentifier < ENTITY > tableId , computeIntensityDefault ( ) ) ` to the ` StreamSupplierComponent
updated logging messages to include fully played files and added retry logic for file moving failures to improve logging clarity and ensure proper handling of file
updated access modifiers and method signatures in InjectorProxy , ReflectionUtil , and StandardInjectorProxy classes to enhance encapsulation and improve code clarity by
removed the closing of the output stream to streamline resource management by eliminating unnecessary closure
added unit tests for ` ShowStatementTest ` , ` UnsupportedStatementTest ` , and ` CreateTableTest ` classes to ensure correct parsing and
replace return null with ImmutableList . of ( ) in AppleTest . java to improve code readability and maintainability
updated the string format in NamedSetTest . java to include Quality Distribution and Inc to enhance test coverage for CruiseControl functionality
refactor WebSocket connection handling and logging in DeconzBridgeHandler and WebSocketConnection classes to improve clarity and maintainability of connection state management
replaced ` setAttribute ` with ` removeAttribute ` for session attributes in ` AbstractProcessingFilter . java ` to simplify session management by removing unnecessary attributes
hbase - 2269 retry testregionreplicasetreplicationendpoint . testreplicasetreplicasetreplicasetreplicaset
added configuration settings for PMS in FormatRecognitionTest . java to ensure proper configuration management during testing
added event handling for OVA data disk templates in TemplateService and TemplateServiceImpl classes to ensure proper handling of template creation and state transitions during
refactor PrincipalAttributeRegisteredServiceUsernameProviderTests to use JUnit4 class runner instead of SpringRunner to improve test coverage and ensure compatibility with
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper overriding
fix appendonlyschemait to avoid npe
added a check to throw a CorruptIndexException for document count mismatch in SegmentReader . java to ensure that the document count matches the segment
refactor logException method signature and add getLoggerName and logTrace methods to SipLogger to improve clarity and functionality of logging functionality in the application
updated the FilamentFactory from 1.0 to 0.9 in FilamentFactory . java to indicate that the shorter length is
set handleFileUploads to true in VertxPlatformHttpServerConfiguration . java and set it in VertxPlatformHttpEngineTest . java to
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to ` CsrfFilterTests ` to
refactor field reading logic in HotSpotObjectConstantImpl . java to improve code readability and maintainability
updated method names and variable names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in naming conventions
updated the timestamp handling in FileIO . java to use a timestamp variable to improve code readability and maintainability by using a more descriptive
[ sqm ] fix duplicate copy of ctedefinition in sqmctestatement
added import statement for ResultSetMetaData in QueryCompilerTest . java to enable proper handling of ResultSetMetaData in the test
updated the library output format in JsLibrary . java to use the project filesystem ' s root path to improve clarity and maintainability of the
updated the slider model from - 180 to - Math . PI in RailButtonConfig . java to align the slider model with the correct rotation
updated drawEncloser position from 8f to 9f in OverlayRenderer . java and modified SaveIO . saveToSlot method call to
added expressionLanguageSupported ( true ) method to KerberosProperties . java to enable expression language support for improved security
removed unnecessary null checks for remoteMountPointComponent in ThirdPersonRemoteClientSystem . java to simplify code and improve readability by elimin
updated setupViews method to accept a ScrimView parameter instead of a Launcher to enhance flexibility in handling scrim views and
added a new configuration option for periodic materialization in ` ExecutionConfig ` and updated related methods in ` StateChangelogOptions ` to enable
added a value field and its getter / setter methods in ProtocolParameter and updated XML attribute handling in ParamTagHandler to ensure proper handling of parameter
added a new test method ` testChunkingWithHead ` to ` TestHttpServlet ` for validating chunking headers to ensure correct handling of
added a new boolean field ` isBumped ` and modified the ` parseDetails ` method to return a boolean indicating if the details is present
added content - type header for " application / x - www - form - urlencoded " in SwitchToPostInterceptor and SearchRequestUnitTest
refactor EmbeddedClientConnector class to improve code structure to enhance maintainability and readability of the code
added logging for SQLFeatureNotSupportedException and improved logging level in PhoenixResultSet . java to enhance error handling and provide clearer feedback
added initialization of the AndroidNet instance in AndroidDaydream . java to ensure proper initialization of the AndroidNet instance
corrected the spelling of " numRowsConsumed " to " segmentMaxRowCount " in LLRealtimeSegmentDataManager . java to ensure correct
removed unnecessary boolean parameter from the getDepositAddresses method calls in KrakenAccountService . java to simplify code and improve readability by
remove hbase - prefix - tree - codec from tablemapreduceutil ( # 2691 )
added a flag ` inflationFailed ` and modified the ` root ` variable in ` DesignerActivity ` and ` AttrInfo ` classes to
refactor PushbackInputStream class to improve code readability to enhance maintainability and facilitate future updates
replaced the implementation of ` LoweringToolBase ` with an abstract class ` LoweringToolBase ` and modified the ` ProcessBlock `
updated error message from ` download _ folder _ failed _ content ` to ` sync _ folder _ failed _ content ` in ` ErrorMessageAdapter .
refactor Makefiles parser methods to use string literals instead of string literals to improve code readability and maintainability by using a more descriptive
replaced ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` in ` ReadTask .
replaced the call to superclass . setTransformRefresh ( ) with setBoundRefresh ( ) in SimpleBatchNode . java to ensure proper refresh
refactor methods to use isUninterruptible ( ) instead of isguaranteedsafepoint ( ) for improved readability to enhance
added framebuffer size callback to handle window size changes in LwjglWindow . java to ensure proper resource management and prevent memory leaks
replaced ` translationX ` calculation with ` centerTaskParallaxToRight ` and ` otherAdjacentTaskParallaxOffscreen
refactor ` LiteralNode ` class to use ` NullLiteralNode ` instead of ` NodeLiteralNode ` to improve clarity and consistency in
added file length calculation in CompoundFileWriter and modified setLength method in FSDirectory and IndexOutput classes to ensure accurate file length handling and ensure correct
updated AndroidNdkScriptGenerator , AntScriptGenerator , LwjglDebugStarter , and LwjglDebugStarter to
camel - 15836 - camel - aws2 - s3 : camel - aws2 - s3 should use sourcebucket instead of copy
added a role check for " * " in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin to enhance security by ensuring
refactor ZookeeperClientServerRegisterRepository to simplify data handling and improve event type handling to enhance code clarity and maintainability by reducing
replaced ` makeDeepMock ` with ` deepStub ` and updated related methods in ` ReturnsDeepStubs . java ` to simplify the
added a null check for the size of the getCallValue ( ) method in Runtime . java to avoid potential NullPointerException when the call value is
updated debug log message format in BibEntry . java to improve clarity of debug output for better readability
updated the ` mapPBEAlgorithmToOID ` method to throw an ` NoSuchAlgorithmException ` and modified PBE _ ALGO constants in ` PB
refactor TIFFReader to use inputLength instead of length and improve offset validation logic to enhance readability and maintainability of the code
added validation for job parameters in CommandLineJobRunner and created a test for invalid parameters in CommandLineJobRunnerTests to ensure that invalid job parameters are
corrected the character from " \ r \ n " to " foo " in SmtpTests . java and MailTests . java to ensure
updated case statements in ExtendedConnectionDataSourceProxy . java for consistency to improve code readability and maintainability
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for sequence ID retrieval to improve performance and maintainability of sequence ID management
added a new Java file ` Test . java ` with a static method ` sum ( ) ` to facilitate the calculation of the
changed access modifiers of several fields from private to protected in ShadowWifiManagerTest and WifiUsabilityStatsEntryBuilder to enhance encapsulation
added a new Java file ` Solution . java ` implementing a solution for sorting and sorting to facilitate testing of integer arrays in the
replaced ` Map < UUID , ColumnFamilyStore > ` with ` ConcurrentMap < UUID , ColumnFamilyStore > ` in ` Table .
refactor taskbar recreation logic in TaskbarManager . java for improved clarity and consistency to enhance code readability and maintainability
refactor SyncFutureCache class implementation to improve performance and readability of the code
updated the default DUBBO protocol version from " 2.0 . 1 " to " 2.0 . 2 " and modified the LO
refactor UselessStringValueOfRule to use Node and ASTLiteral instead of Node for better type safety to improve code clarity and maintain
added a new test method ` testEllipseNoseconeDrag ` to the ` SymmetricComponentCalcTest ` class to verify the correct
added a new parameter ` targetMaxTypeShardSize ` to the ` HollowProducer ` class and modified related constructors to include a default target
added new version strings " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to TestBack
refactor CompilationTask class implementation to improve code readability and maintainability
refactor database parameter handling in TestSemanticAnalysis and DDLTask to improve clarity and consistency to enhance code readability and maintainability by
added a method to execute ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase . java to ensure proper execution of ClearDatabaseChangeLogTableStatement
refactor RestClient , CallPath , and CallPath classes to improve version handling and comparison logic to enhance code clarity and maintainability by
phoenix - 1343 : make sure phoenixdriver be close before register .
replaced ` Mesurement ` with ` Measurement ` in multiple Java files to improve error handling by throwing an ` UnsupportedOperationException ` instead of
added a new test class ` FolderPickerActivityIT ` and modified ` FolderPickerActivityIT ` to extend ` AbstractIT ` and implement screenshot
[ gr - 23232 ] fix npe when run in dev mode .
added a check for the length of the copy in StringHelper and created a test for removing leading and ending quotes in StringHelperTest to ensure that the
refactor type handling in JpaQueryCreator and ParameterMetadataProvider to improve clarity and consistency to enhance code readability and maintainability by
updated authentication duration check in AccountManagerImpl and added a conditional check in SipSecurityManager to ensure correct branch ID pushing based on authentication duration
added a dispatch method to handle P25 messages in P25MessageFramer to enhance message processing capabilities for better user experience
added null checks for the handler in WebSocketImpl . java and a corresponding test in WebsocketTest . java to ensure proper handling of null handlers
updated import statements and refactored assertions in IndexEventConsumer and DiscoveryIT to use IndexablePoolTask and IndexableClaimedTask to
updated widget padding calculations in AppWidgetResizeFrame . java and Launcher . java to use default padding for widgets to improve widget responsiveness
added ` hideAllApps ` method to ` TaskbarUIController ` , ` TaskbarAllAppsController ` , and ` BaseActivityInterface
removed synchronization from the launch method in CrawlJob . java to simplify the launch method by eliminating unnecessary synchronization
updated the calculation of the Point object in JavaSEPort . java to correct the calculation of the zoom level based on the canvas ' s position
replace notificationManager . notify calls with startForeground method for better clarity to improve code readability and maintainability by using a more descriptive
added a new test method ` testStaticFinal ` to ` ExcessivePublicCountTest . java ` for testing static final int values to
hbase - 2249 set the client retries number to 3 in testthrifthbaseservicehandler
change log level from info to debug in TransactionalMessageServiceImpl . java to improve log granularity for better debugging
added exception handling for FileNotFoundException in ResourceUtils . java and updated logging level in AbstractCipherExecutor . java to improve error logging and clarify
added a new ` BittrexTickersResponse ` class and updated ` BittrexMarketDataServiceRaw ` to handle tickers
refactor enumConstants handling in EntityEntry . java to improve type safety and encapsulation to enhance code clarity and maintainability by reducing
refactor registerSession and unregisterSession methods to accept an Object parameter instead of Class to improve type safety and simplify session registration logic
updated the character array in FileUtils . java to include additional characters to ensure proper handling of special characters in the file system
added functionality to set and get the stylesheet in ResourceService and updated related classes to enhance resource management by allowing customizable stylesheet settings
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is cleared before executing tests
updated method name from ObjectParameterStrategy to PointerParameterStrategy in X86MethodGenerator . java to improve clarity and consistency in method naming
updated the condition in CreateSequenceGenerator to check for CockroachDatabase instead of PostgresDatabase to ensure compatibility with Cockroach
removed the condition for checking the type of the name in ObjectStreamClass . java to simplify the code by eliminating unnecessary checks
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library . java ` and added a new class ` SymbolNotFoundError
added support for only pseudo fields in BinaryResponseWriter to ensure proper handling of document creation based on return fields
added a new case for PING and PONG in WebSocketImplBase . java and a corresponding test in WebSocketTest . java to enable WebSocket
updated the regex pattern for NON _ IDENT _ ESCAPES from " ^ * + ( ) { } [ ] | \ \ . ? -
refactor DnsResolverProvider to use a wildcard import and add cache management in HostnameResolutionTest to improve code readability and maintainability by central
added a conditional annotation for MessagingTracing in TraceMessagingAutoConfiguration . java to enable tracing functionality in the application
simplified the quoteIdentifier method calls in SqlQuery . java for better readability and maintainability to improve code clarity and maintainability by
updated import statements in IDELanguageClientImpl , EditorTextActionMode , EditorTextActionWindow , and IDEEditor classes to ensure consistency
added a conditional check to set the status of VERIFY _ CLOSE _ TAG based on the character in XMLLightweightParser to ensure proper handling
removed setVisibility ( GONE ) from TouchCharInput . java to streamline input handling by eliminating unnecessary visibility settings
added null check for the current user before comparing its ID to avoid potential NullPointerException when accessing the current user
added a conditional check for the index before setting the slot and setMember in JSObjectLinker . java to ensure that the slot is set
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to use a customizable suffix string instead of null to improve flex
added @ Deprecated annotation to SecurityConfig . java to indicate that the class is outdated and should no longer be used
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should no longer be used in future development
deleted the JoglDebugAdaptor . java file and modified RocketFigure3d . java and GuiceStartup . java to stream
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` and corresponding tests in ` AWSPropagation ` and ` AWSPropagationTest ` to
added PendingIntent import for PendingIntent in FileDownloader and FileUploader classes to ensure proper handling of pending intent updates
refactor nextOrd method to use a set method for clarity to improve code readability and maintainability by reducing redundancy
refactor DateTimeFormatter class to improve code readability to enhance maintainability and facilitate future development
refactor desktopProperties initialization in WToolkit . java to improve code readability and maintainability to enhance maintainability and facilitate
added null and empty checks for the administrator credentials in KerberosOperationHandler to ensure that null and empty credentials are provided to prevent runtime errors
added a new constant MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN and modified the width used calculation based on device
added rendering methods for sketch window color in PSurfaceJOGL . java to ensure proper rendering behavior for sketch window colors
refactor Hashing class for improved performance to enhance performance and maintainability of the code
updated the ` accept ` method to include a ` folderPath ` parameter and modified the ` accept ` method to include a ` fileName ` parameter to
updated the ` addToListIfNeeded ` method to include a ` contentDescriptionInt ` parameter and modified the ` addToListIfNeeded ` method to include
removed unnecessary null check for the type variable in JavaType . java to streamline code by eliminating unnecessary null checks
increased the ACTIVITY _ START _ DELAY value from 500 to 800 to increase the ACTIVITY _ START _ DE
added a new constant for the WEBAPP _ HOME in SolrJettyTestBase and updated system property settings in JettyWebappTest to
refactor diameter calculation and clear selection logic in ThrustCurveMotorSelectionPanel . java to improve code clarity and maintainability by
added BufferUtil import and modified BufferUtil . clearToFill method in ByteBufferPool . java to improve buffer management and ensure proper fill functionality
[ fix # 233 ] support alarm trigger ( # 233 )
replace authorization . ldap . groupBase , groupObjectClass , groupNamingAttr , and groupMembershipAttr from " authorization . ldap . groupBase
added deleteExchange ( " x " ) and queueDelete ( " q " ) methods in DurableOnTransient . java to ensure proper handling
[ hotfix ] [ test ] use get ( ) instead of get ( ) in bulkslotproviderimpltest
refactor connection handling in PingService and ServerInfoService to use a listener for improved error handling to enhance clarity and maintainability of
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
refactor Quartz2Adapter class to improve code organization to enhance maintainability and readability of the code
added a try - catch block around the execute method call in SulongLibrary . java to handle IllegalStateException to improve robustness by preventing
updated Spring Security 6.3 schema references from 6.2 to 6.3 in multiple files to ensure compatibility with Spring Security 6.3
updated the ` newNameResolver ` method to accept an additional ` Args ` parameter and modified synchronization context handling in multiple classes to improve flexibility in
added a check for non - empty annotations before setting the mods position in JavacParser . java and created a new test class TestAnnotated
added a new package name " com . sun . naming . internal . " to CheckPackageAccess . java to provide access to the internal package
changed the strict variable from false to true in StaxEventItemReader . java to enable strict functionality for event processing
added a boolean array ` isExhausted ` and modified the ` readPartition ` method to include an ` isExhausted ` flag
refactor ActionResetingPool class for improved clarity to enhance maintainability and readability of the code
updated the logic to check if the lightState is in a valid XY mode before returning theHSB type to ensure that the color mode is
refactor CellLayout to utilize a targetCell array and improve folder creation radius calculations to enhance code readability and maintainability by reducing
replaced direct call to ` activity . showLoadingDialog ( ) ` with direct call to ` callerActivity . showLoadingDialog ( ) `
added a null check for the uigestureFile before loading logs in IdeSnapshot . java to prevent potential NullPointerExceptions when uigestureFile
replaced ` toUpperCase ( ) ` and ` toLowerCase ( ) ` methods with ` Locale . getDefault ( ) ` in ` FieldNamingPolicyTest
added listener setting to the result in XmlSuite . java to ensure proper listener management during tests
added a new property ` loadWithNewGlobal ` to the ` Global ` class and implemented it in ` Context ` to enhance global loading functionality
added ` fromJsonString ` and ` toJsonString ` methods to ` StarTreeIndexSpec ` and updated tests in ` TableConfigTest `
added import statement for ObjectPostProcessorConfiguration in HeadersConfigurer , OAuth2LoginConfigurer , OAuth2ResourceServerConfigurer , and S
replaced string replacements for " \ \ " , " / " and " \ \ " to ' / ' in multiple files to ensure consistent
[ zeppelin - 2242 ] fix nullpointerexception in inoperator . equals ( )
added import for FieldCache and commit ( ) in TestDistributedSearch . java to ensure that there ' s more than one segment before proceed
add unit tests for message event handling in SubprocessMultiInstance to ensure correct functionality and functionality of message event processing in the process
updated method signatures in ProgramManager , PointerAnalysisImpl , and JimpleProgramManager to use a target method instead of a method to improve method
http : / / issues . apache . org / jira / browse / amq - 4342 - increase messagegrouphashbucketcount
updated slot handling in Secmod . java to use constants for NETSCAPE _ SLOT _ ID , PRIVATE _ KEY _ SLOT
added a new method ` add ` to the ` Layout ` class and modified the ` startRenderering ` method in ` GdxRenderer `
[ hotfix ] [ test ] ignore unalignedcheckpointitcase
added imports and checks for specific class types in JDK13Services . java to ensure proper handling of sound types and prevent potential null pointer exceptions
added a check for the existence of the keyword in the keywordToReference map before adding it to the map to ensure that the keyword is only
added a check to calculate the size of the pairs in MulticastProcessor to ensure proper handling of collection types in multicast processing
removed the ` getStartCount ( ) ` method from ` SegToken ` and modified the ` findInTable ` method in ` WordDictionary
escape characters for telegraf in FlavorStatsdLineBuilder and add a new test class FlavorStatsdLineBuilderTest to ensure proper
[ java ] set the udp port to 3445 in MemberImpl . java and update MemberSerialization . java to use it to ensure that
rename ` OperatorMulticast ` to ` OperationMulticast ` across multiple files to improve clarity and consistency in naming conventions
increased the send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to improve test reliability by allowing more time
added a try - finally block for resource management in VertxTestBase . java to ensure proper resource management and prevent potential memory leaks
added synchronization to the destroy method in SessionFactoryServiceRegistryImpl to ensure proper resource management and prevent potential memory leaks
replaced ` openHomePage ( ) ` with ` openLocalhost ( ) ` in ` AbstractDriverBaseTest . java ` and updated
[ pytorch ] make ivalueutilstest more robust .
added TaskStackChangeListener registration and unregistering task stack listener in RecentsView . java and removed the onEnterAnimationComplete method in Base
refactor DefaultSplitCharacter to handle date pattern matching and add a new test class DefaultSplitCharacterProfilingTest to improve accuracy of data processing
added a null check for factoryBean properties before setting it in CxfEndpoint . java to avoid potential NullPointerExceptions when factoryBean properties are not
refactor animation handling in ContentFillItemAnimator to use a new method ` endPendingAnimation ` to improve code readability and maintainability by
added logging for singleFrameMs and playTime calculation in LauncherAnimationRunner . java to improve debugging capabilities and ensure accurate playback time based on
added a conditional check for BailoutOnException in C1XCompilation . java and integrated it in C1XOptions . java to
changed signup and passwd variables from " / forgot _ password " to null in Links . java and IdentityZoneConfigurationBootstrapTests . java
[ hotfix ] [ runtime ] rename ` previousExecutionGraphAllocations ` to ` reservedAllocations ` across multiple classes to improve clarity
renamed ` onlyFormat ` to ` format ` and updated related methods to improve clarity and consistency in naming conventions
added a GC _ NODATA property to the image in GeoTiffReader and created a corresponding test in GeoTiffReaderTest to
added null checks for exceptionSourceSection and improved error message formatting in LLVMBasicBlockNode and LLVMWriteNode to enhance robustness
replaced ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao .
added a CountDownLatch to manage connection state changes in TestPathChildrenCache to ensure proper handling of connected connections during tests
refactor ArrayTypeHandler to improve code readability and maintainability to enhance maintainability and clarity of the code
replaced ` RegexpTunnel ` class with reflection for retrieving the prefix in ` JakartaRegexpCapabilities . java ` to improve flexibility
updated the application initialization in Config . java to use Application . class instead of null to ensure proper handling of application types in the configuration
[ drools - 1342 ] fix npe on mutable global in drl .
replaced ` Preconditions . checkNotNull ` with ` TransactionUtil . validAssetName ` and added validation methods in ` AssetIssueActuator . java
[ geogebra - 2321 ] fix copy paste for textfield ( # 2321 )
[ lgwebos ] fix error message for unknown host
replaced calls to ` config . getSeedNodes ( ) ` and ` config . getActiveNodes ( ) ` with ` config . getTrust
updated assertions in BaseTokenStreamTestCase to include context for token length and success checks to improve clarity of assertions and ensure proper exception handling
log4j2 - 1343 add interval and modulate parameter to patternprocessor . getnexttime ( )
added methods to perform item click and findIndexOfItemContainingText in ShadowAdapterView and ShadowListView to enhance functionality for managing item containing text
pdfbox - 4892 : fix typo , a suggest by valerybokov
added a null check for loopScope and modified the ` afterMethodScope ` method in ` GraphDecoder ` and ` PEGraphDecoder ` to
refactor HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) in HttpSessionDestroyedEvent . java and add unit tests for security context
added a test method to verify the behavior of the zipkin service name in the test to ensure that the service name changes correctly in the zip
added logging statements to JavaInMemoryFileManager , JavacToJarStepFactory , and updated related logic in JavaInMemoryFileManager
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to improve clarity and consistency in naming con
increased the tryLock timeout from 4 seconds to 10 seconds in ClientMultiMapLockTest . java to accommodate more time for
added a cache capacity parameter to the ConfluentSchemaRegistryDeserializerProvider for improved cache management to enhance flexibility in cache management by allowing
replaced ` remind ` checkbox with ` checkAtStartup ` checkbox in ` UpdateInfoDialog . java ` to enhance user experience by providing
added methods to handle boolean methods in NodeGenerator . java to enhance functionality for handling boolean parameters in the NodeFactory class
hhh - 14836 - fix bug in cascadingactions . istransient ( ) when a proxy be not a hibernateproxy
added methods to retrieve and set proto methods in ScriptObject . java to enhance functionality for handling proto properties in the ScriptObject class
updated DEFAULT _ READ _ MODE from " heap " to " mmap " and modified the creation of ImmutableSegmentImpl in ImmutableSegmentLoader to improve
fix arraytemplatebuilder to use byte . getinstance ( ) instead of byte . getinstance ( )
added Hipchat and CasSamlSPHipchatConfiguration to SamlServiceProviderProperties and updated SamlServiceProviderProperties to support SAML sp integr
replaced ` List < URL > ` with ` Set < URL > ` for ` commandRegistryUrls ` in ` CommandRegistry . java `
updated log message format and added debug logging in ConstraintSecurityHandler . java to improve clarity of log messages and enhance debugging capabilities
updated the login method signature from ` checkLoggedIn ( ) ` to ` login ( ) ` in ` SvnRepositoryConnector . java ` and
camel - 1748 : camel - activemq - allow session to be transacted without a transaction manager .
cloudstack - 3392 : fix typo in vmwareresource . log ( )
refactor Timers class for improved performance to enhance performance and maintainability of the code
replace ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to ensure
removed deprecated constructors from UAX29URLEmailTokenizer and TestUAX29URLEmailTokenizer to streamline the codebase by elimin
replaced ` Map < Object , Object > ` with ` sobj ` in ` ScriptObject . java ` and updated assertions in ` Context
rename EventBusMetrics class to improve clarity to enhance code readability and maintainability
refactor I18nUtil to use a new method for retrieving the EPerson locale to improve code readability and maintainability by reducing
replaced ` @ PostConstruct ` annotation with ` InitializingBean ` in ` JaversTransactionalDecorator . java ` to improve bean initialization
removed null check for pgTypeName in TypeInfoCache . java to simplify the code by eliminating unnecessary null check
added multiple calls to setServer in ScopedHandlerTest . java to ensure proper handling of server instances in the test
added a constructor to CallTimeoutException and updated response formatting in multiple classes to improve code clarity and enhance error handling for call timed - out operations
updated the condition to check if the login request ' s password is empty before validating it to ensure that the login request ' s username and password
updated permissionNode comparison from " " to " * " in CommandMap . java to ensure proper handling of permission nodes in the account
replaced ` encoding ` with ` sourceCharset ` in ` AbstractCompiler ` and added ` setEncoding ` method in ` ICompiler ` to
changed the type of postLogin from byte [ ] to String in HostBean . java and updated related methods in TerminalBridge . java to improve
refactor simulation selection logic in GeneralOptimizationDialog . java to improve code readability and maintainability to enhance maintainability and clarity of
camel - 14836 : camel - core - add contextreloadenabled property to the configuration
updated console logging constants in CommonTestUtils . java to improve clarity and consistency to enhance code readability and maintainability by aligning logging
refactor PrologSizeSanityCheck class for improved logging functionality to enhance performance and maintainability of logging functionality
refactor NearbyListFragment to improve code structure to enhance maintainability and readability of the code
added a check for supported content types in RequestBody and created a test for non - closing InputStream in RequestBodyTest to ensure proper handling of
added an ` isEnabled ( ) ` condition to ` EmbeddedNeo4jServer ` and modified bean filtering logic in ` DefaultBeanContext `
refactor movement handling logic in MovementDebugCommands . java for improved clarity and functionality to enhance code readability and maintainability by
updated the ` random ` method to include a ` halfLengthTotalWeight ` parameter and modified the return type of the ` random ` method to
refactor GsonParser and MetricsResourceTest to simplify cache string handling and improve clarity to enhance code readability and maintainability by reducing
updated parameters for " gcmsort " and " gcmdir " in ApacheHttpClientMediaWikiApi . java to improve clarity and consistency
replaced ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in ` AbstractSharedSessionContract . java `
updated PipeTaskCoordinator to use a new lock class and added a new lock class for locking to improve thread management and enhance thread management in the
added a condition to check if the robolectric . usePreinstrumentedJars is set to true based on the system property to
removed the ' ! isSilent ' modifier from the conditional check in ExecDriver . java to simplify the conditional logic for better readability
added validation for default and required fields in IndexSchema to ensure proper error handling for unsupported attributes on dynamic fields
refactor repair handling logic in StorageProxy . java to improve code readability and maintainability
replaced ImmutableSortedSet with Iterables in PrebuiltCxxLibrary . java and added a test for it in PrebuiltCxxLibraryDescription
added checks forSKIDSensitive and isSNSensitive conditions in AdaptableX509CertSelector and ForwardBuilder classes to ensure proper handling of sens
log4j2 - 1343 use abstractappender . parseint instead of string . parseint
added a deprecated annotation to GuiScreenEvent . java to indicate that the method is outdated and should not be used in 1.16
removed redundant methods for adding and removing categories in CategoryEditSearchRecyclerViewAdapter to streamline code by eliminating unnecessary operations
ebean - 435 : add support for cache type to cache bean data ( # 4392 )
added iteration over all RocketComponent instances in the RocketComponent class to ensure proper management of mass and cverridden by properties in the
replaced ` doCompile ` method with ` destroy ` in ` JavaCompilerService ` and added error handling in ` JavaDiagnosticProvider ` to
refactor Task class to use a Supplier for improved null handling to enhance code robustness and prevent potential NullPointerExceptions
refactor WanReplicationServiceImpl to utilize a mutex for managing the StripedExecutor to improve thread safety and prevent potential memory leaks
added null checks for tPartition , table , and driver parameters in Partition . java and DDLSemanticAnalyzer . java to ensure robustness
removed unnecessary ThreadFactory and ThreadPoolExecutor in LocalServiceRegistryClientImpl and RemoteServiceRegistry classes to simplify code and improve readability by elimin
added unit tests for file deletion functionality in FilesTest . java to ensure proper functionality of file deletion functionality
removed unnecessary try - catch blocks in ServerSocketAdaptor and SocketAdaptor classes to simplify resource management and improve code clarity
updated the class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java
replaced the clear ( ) method with a addWorkingDir ( f ) method in Project . java to improve code readability and maintainability
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to improve robustness by
changed the visibility of the ` GeneratedEntityDecorator ` class from public to private to restrict access to the class for better encapsulation
updated java - Durl from http to application / csv - jar and json - jar in SimplePostTool . java to ensure compatibility with the
simplified conditional checks in AlgebraItem . java and added unit tests in GeoSymbolicTest . java to improve code readability and
refactored exception handling in JavaxWebSocketClientContainerProvider and added ShutdownThread registration in JavaxWebSocketClientContainer to improve code
added a condition to check if the type is not null before checking if it is present to ensure proper handling of the open - with - application
close the data source in JdbcTestBase and destroy the webApplicationContext in several test classes to ensure proper resource management and prevent memory leaks
added search functionality to RemoteBrowseHandler to enhance user experience by allowing users to specify a search string for better user experience
removed the visibility of the neutralButton in SetupEncryptionDialogFragment to simplify the UI by eliminating unnecessary visibility settings
do n ' t count items on archive and withdrawn if there be no archive
updated SQL statements in DDLTask . java to use ` ` ' ' instead of ` ` ' ' to improve clarity and consistency in SQL
added logging functionality to handle OAuth2 exceptions in CheckTokenEndpoint to improve error handling and logging capabilities for better debugging
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
updated assertions in IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use HttpEntity and HttpEntity for handling identity zones to improve test
updated dismiss delay from 20000 to 10000 in ExtractionModelFrame and DataBrowser classes , and added HTML for variable substitution in SQLConsole to
added support for Surefire 2.22 . 0 in ActionProviderImpl . java to ensure compatibility with Surefire 2.22 .
replaced ` HumanReadableException ` with ` IOException ` in ` WorkerShellStep . java ` to improve error handling by providing a more
[ hotfix ] [ runtime ] add @ experimental annotation to datastreamutils and socketstreamiterator
[ hotfix ] [ doc ] fix typo in streamcepstrumsource
modified the calculation of index in the List class to ensure the index does not exceed the size of the list ' s size
updated assertions in CloneHelperTest to use Parenthesis instead of OrExpression to improve clarity and consistency in test assertions
updated the DebugPaste class to include confirmation and requiredType parameters to enhance user experience by allowing confirmation for debugging purposes
replaced instances of ` get ( ) ` with ` orElseThrow ( ) ` in multiple configuration classes to improve error handling by throwing an exception
simplified focus logic in DrawEquationWeb . java and added preventDefault in NewRadioButtonTreeItem . java and RadioButtonTreeItem
refactor GoBinaryDescription to use ` GoBinaryDescriptionArg ` instead of ` Arg ` to improve code clarity and maintainability by using
refactor application environment retrieval logic in Jooby . java to improve resource loading to enhance flexibility by allowing dynamic configuration of the application
updated ` SimpleRetryExceptionHandler ` to implement ` RetryListener ` instead of ` RetryListenerSupport ` and added a new ` SecondDummyRetryListener
corrected the formatting of the ` writeCounter ` method in ` ElasticMeterRegistry ` and added a new test in ` ElasticMeterRegistryTest
modified the constructor of the Contribution class to use a final variable for email and author to improve code clarity and maintainability by centralizing
refactor the loop to use a do - while loop to improve readability and maintainability of the code
replaced the initialization of the ` elements ` list with a conditional check for the ` tmp ` class to ensure that the ` elements ` list
updated exception messages in StaxEventItemReader and StaxEventItemReaderTests to use resource . getURL ( ) instead of throwing IllegalStateException to
replaced Geometry with a single PointLight array and updated the simpleUpdate method in TestMultiRenderTarget . java to improve code readability and
updated the handling of null client results in DelegatedAuthenticationClientLogoutAction to handle cases where the current client is not found to improve robustness
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure proper handling of namespace declarations
added BigInteger and DSAParameterSpec imports in KeyStoreManager . java to enhance security support for RSA parameters in the KeyStoreManager
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
set the engine version of the persisted process definition in BpmnDeployer and BpmnDeployerTest to ensure the correct engine version is set
simplified property properties in SpecificCompiler . java for consistency to improve code readability and maintainability
updated thread verification logic in CEntryPointSnippets . java and VMThreads . java to include a verifyThreadIsAttached method to enhance thread
added null checks for the map in GenericUDFMapValues . java and created a new test class TestGenericUDFMapValues . java
corrected the spelling of " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to ensure consistency in naming conventions
added ` oilWellGenerationRate ` and ` enableOilSpouts ` properties to ` BCEnergyConfig ` and modified `
added a clean - me directory check and modified file existence checks in ImportContext and JobQueue classes to ensure that the correct directory is used for
updated the exception handling in MemoryRealm to use a dynamic configuration string to improve flexibility by allowing dynamic configuration of XML data
removed redundant import statements in CRLDistributionPointRevocationCheckerTests . java to streamline code and improve readability
added imports for ` ZipConstants64 ` and ` ZipConstants64 ` in ` ZipConstants . java ` and ` ZipEntry . java ` to
refactor newFileSystem methods to utilize a new ensureFile method to improve file handling and error handling to enhance code clarity and maintainability
replaced ` Box . createHorizontalStrut ( ) ` with ` Box . createHorizontalGlue ( ) ` in ` IfControllerPanel
updated the connection initialization in FailoverUpdateURIsTest . java to ensure proper initialization of the connection object
added serialization annotations for baseUrl , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to enhance serialization capabilities for better
added a ` deleteBook ` method to ` DatabaseAdapter ` , ` ImportAsyncTask ` , and ` BooksDbAdapter ` classes to
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
corrected the calculation of responseBuffer in AbstractAjpProcessor . java to ensure correct positioning of the buffer in the response message
replaced startup ( ) and shutdown ( ) methods with restart ( ) in XMPPServer . java and updated related methods in AdminConsolePlugin .
refactor WebSocketImplBase to simplify the unregisterHandlers method to improve code readability and maintainability
added device _ id _ transformation _ method and enable _ id _ table _ log _ file properties to IoTDBDescriptor to enhance configuration flexibility
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 and modified assertions in ExitableDirectoryReaderTest . java and added Delaying
updated the condition in ` mockTsp ` to check for ` ! = null ` instead of ` ! = null ` to ensure that the
replaced direct usage of ScriptBuilder . createP2PKHOutputScript with ScriptBuilder . createP2PKHOutputScript for witness
updated the path for the field type expression in IndexSchema . java to ensure proper handling of field types in the schema
updated Completers . java to include a null check for valueCompleter and added a new OptionCompleterTest class for testing options to
refactor object listing logic in S3Utils . java for improved readability to enhance code clarity and maintainability
change the type of ` sourcePeerId ` from ` String ` to ` int ` across multiple classes to align with the intended functionality of the
refactor file upload logic in FtpHelper . java to improve file handling logic to enhance code clarity and maintainability by encapsulating file
updated the alpha value of replyButton from 5f to 1.0 f in TweetFragment . java to improve user interface responsiveness
added mocking for ` AccessLogContext ` and updated expected timestamp formatting in ` AccessLogSupportTest . java ` to improve code clarity
updated the file path in MaryCacheTest from " testfiles - deleteme " to " tmp / testfiles - deleteme " to
removed unnecessary null checks for subscribers in SettingImpl . java to simplify code and improve readability by eliminating unnecessary null checks
added null check for ` marshaller ` in ` AbstractSamlObjectBuilder ` and ` AbstractSaml10ResponseView ` classes to ensure robust error handling
replaced ` printStackTrace ( ) ` with ` LogUtil . warn ( t ) ` in ` DataBrowser . java ` to improve error handling
added a condition to check if the directory does not exist in the dev mode and updated tests accordingly to ensure that the static directory class paths are
[ hotfix ] [ rocksdb ] add writeoptions to rocksdbkeyedstatebackend
updated the DEFAULT _ FORMAT constant from " value - tag - index " to " value - index " to correct the format format for better cl
updated GraphHopper initialization and added hints for instructions in MainActivity . java to ensure correct handling of instructions and minprecision in the application
updated wait time from 30 seconds to 60 seconds in BesuNodeRunner , BesuCommand , and AltBN128K1 classes
rename ` DuclsSandboxTest ` to ` SandboxTest ` in the test class to clarify the purpose of the test suite
camel - 1748 : camel - cxf should set the exception to the exchange instead of log a warning .
changed the access modifier of the forwardPropagateTree method from package - private to public to allow access to the method from other packages
updated the SQL query to include additional parameters for group by to enhance data retrieval flexibility for better performance
added a warning message for missing project expressions in DefaultModelValidator . java to provide clearer context for missing files during profile activation
refactor Style class to improve code structure to enhance maintainability and readability of the code
added zoom functionality to the ShareActivity to handle back events in the ShareActivity to enhance user experience by enabling zoom functionality when the back button
added a check for ` ignoreDeprecated ` annotations in ` Json . java ` to skip processing for deprecated fields in JSON processing
added animation listeners for display and hide states in LauncherFragment . java to enhance user experience by allowing the animation to be displayed when floating compose
updated method name from " readTokenStorageFile " to " File " in Utils . java to improve clarity and consistency in method naming
added Progressable parameter to multiple method signatures in Utilities . java and HiveIgnoreKeyTextOutputFormat . java to allow users to specify the progress
[ hotfix ] [ runtime ] fix typo in sourcecoordinatorprovider
removed the contribution from the panel by removing the contribution from the ContributionListPanel to simplify the panel by eliminating unnecessary updates
rename ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and update related components to improve clarity and consistency in naming con
added a check to set the user ' s directory path if it is empty to ensure the correct directory is used based on the user ' s
updated the calculation of ` getMaxSupportedChannelCountForPassthroughV29 ` to use ` sampleRate ` instead of ` format . sampleRate `
log4j2 - 1343 fix for mapfilter . filter ( mapmessage ) .
refactor VerificationInOrderWithCallsTest . java for improved readability to enhance maintainability and facilitate future development
updated the method call from ` setFromAxis ` to use ` axis . x ` instead of ` axis . z ` to ensure correct positioning
updated the constant name for the COLLECTION _ DELIM constant from " colelction . delim " to " collection . delim " to align
added a new test method ` testListenerConnectedAtStart ` to validate the behavior of ` ConnectionStateListener ` in ` TestFrameworkBackground `
[ gr - 5355 ] add documentation for non - UNION and INTERSECTION type .
refactor conditional checks for one - handed mode in RecentsAnimationDeviceState . java to improve readability and maintainability of the code
added onDetachedFromWindow method to cancel all running tasks in AppsCustomizePagedView to ensure proper resource management and prevent potential
added a dictionary resource parameter to MorfologikAnalyzer and updated MorfologikFilter constructors to include it to enhance flexibility
replaced the initialization of ` count ` with ` thrown ` in ` ResultSetTest . java ` to streamline exception handling by eliminating
updated the initialization message from " debug " to " " in GradleBuildService . java to correct the message format for better clarity
replaced ` AtomicReference < > ` with ` AtomicBoolean ` for preventedByLocking and ` preventedByMVCC ` to improve
refactor tooltip text handling in ComponentTreeRenderer to improve clarity and functionality to enhance code readability and maintainability by reducing redundancy
increased the timeout duration from 5 seconds to 10 seconds in ZipkinStreamTests . java to improve test reliability by allowing more time
updated the DeviantartRipper to check for null username and password before attempting to login to deviantart to improve robust
refactor package signature handling in PackageUtils . java to improve code clarity and maintainability to enhance maintainability and readability of the code
replaced the use of ` commonApp . solutionBusiness ` with ` createSolutionBusiness ( ) ` in ` ImportDirSolveAllT
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state changes in the application
added email description configuration in EntityGroupKeyContentFormatter and updated TestEntityGroupKeyEmailContentFormatter to set it to " test _ description "
replaced ` remove ( sel ) ` with ` data . remove ( sel ) ` in ` UserData . java ` to ensure correct removal of
updated language retrieval logic in Locale . java and added error handling in LocaleTest . java to improve code clarity and ensure proper return values for
refactor ChangeLogParser usage in Liquibase . java to use a dedicated createUpdateVisitor method to improve code readability and maintain
added a check to return early if the screen pinning is active to avoid unnecessary processing when the screen pinning is active
added support for setting ` mNoDataText ` and ` mNoDataTextDescription ` properties in ` Chart . java ` to enhance user
added synchronized blocks to ensure thread safety in Http1xServerResponse , Http2ServerResponseImpl , and HttpTest classes to ensure thread safety
refactor chunk handler logic in NettyResponse . java to use a boolean variable for SSL handling to improve code readability and maintainability by
updated test methods to use " : scheme " instead of " : scheme " in Http2TestBase . java and TestHttp2Limits .
fixed - rlocalcachedmap . getkeyset ( ) and rlocalcachedmap . getvalues ( ) return cachedkeyset ( )
camel - 1748 : camel - jpa - fix npe in camel - jpa
corrected the spelling of ` fallSpeed ` to ` jumpSpeed ` in ` PhysicsCharacter . java ` to ensure consistency in
added a null check for reparsedFunction in the parser condition to prevent potential NullPointerExceptions when reparsedFunction is null
refactor logging statements in BitstampPusherService . java for improved clarity and consistency to enhance code readability and maintainability by
added deprecated methods for retrieving old upload segment paths in FileUploadDownloadClient to indicate that these URI methods are outdated and should no longer be used
updated the method call from ` findOne ( ) ` to ` findOne ( filter ) ` in ` MongoDbTailTrackingManager . java ` to
added a method ` assertPredicateFails ` to ` LanguageTestSupport ` and updated its usage in ` JuelLanguageTest ` to ensure that
added a method to bound to the alpha range in RecentsView . java to ensure that the alpha value is within a valid range for
updated importPackage string formatting in ManifestReversion . java to improve code readability and maintainability
[ hotfix ] [ doc ] fix typo in datasyncconfiguration javadoc
added import for JavaSnippetRepository and initialized the JavaSnippetRepository instance to ensure the JavaSnippetRepository is initialized before use
refactor conditional logic in StarTreeRecordStoreCircularBufferImpl . java to use a loop for processing numTimeBuckets to improve performance and
replaced " http : / / code . google . com / p / chromedriver / downloads / list " with " http : /
camel - 14836 : camel - pg - add integration test for event consumer and producer
replaced specific imports from ` java . util . Iterator ` to ` com . rometools . rome . feed . synd `
added handling for " Content - Length " headers in TransferCompletionHandler and updated NettyTransferAdapter initialization in NettyAsyncHttpProvider to improve
refactor Dialog class to improve code structure to enhance maintainability and readability of the code
removed the constructor of EnhancedRuntimeException from the EnhancedRuntimeException class to simplify the constructor by eliminating unnecessary constructor
added a CountDownLatch to await the udpServer ' s latch and modified exception handling in SocketAppenderTest . java to improve thread safety and
camel - 16400 : remove unused code in camel - event - admin - dsl
updated exception handling in ` ByteArray . java ` and ` compareFallback ` methods to use ` Exception ` instead of ` NoSuchMethodException ` to improve error
added functionality to disable input proxy handling and logging for touch events in RecentsAnimationWrapper to improve user experience by preventing unintended
added JUnit @ Ignore annotation to RestletDomainServiceTest . java to temporarily disable the test due to CAMEL - 6770
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method signature to simplify the method signature by eliminating unnecessary
move com . hazelcast . test . modulepath to com . hazelcast . test . modulepath
added ` getSourceDirs ( ) ` method to the ` getCompiler ( ) ` method in ` JavaLanguageServer ` and ` JavaServerConfiguration
removed the MENU _ OPEN _ WEB menu visibility logic from TweetPager . java to streamline the code by eliminating unnecessary
updated method names from ` nodeIsAncestorOfItself ` to ` nodeIsNotAncestorOfItself ` and ` nodeIsNotDescendantOfIt
updated Y - coordinate calculations in WorldEditPlayer . java to use Math . max instead of direct calls to ` searchPos . getBlockY (
added PathNotExistException to the selfCheckDataTypes method and improved error handling in InsertNode . java to enhance robustness by ensuring that
modified the closing brace in JavaCompiler . java to improve code readability and maintain consistency
[ hotfix ] [ operator ] fix nullpointerexception in asyncwaitoperatorfactory
hbase - 11886 add miss rpc pre check for settablestateinmeta and fixmeta in master rpc service
updated the method call from ` Meter : : getId ( ) ` to ` Meter : : getId ( ) ` in ` GatewayMetricFilterTests
updated the constructor of BlockJUnit4ClassRunner to use getJavaClass ( ) instead of getTestClass ( ) to ensure compatibility with the Java
updated the method call from ` remoteItems ` to ` lastTimeData ` in ` KieWatcher . java ` to ensure the correct timestamp is
updated calculation of allAppsCellWidthPx to use 2 * allAppsCellPaddingPx to improve layout consistency for better layout management
[ hotfix ] [ core ] add parent - first logging pattern to coreoptions
replaced instances of ` doc ( ) ` with ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to ensure proper merging of the
replaced ` Connection ` with ` void ` for ` close ` methods in ` Session ` and ` SessionDelegatorBaseImpl ` classes to
refactor GetLocations class to improve code readability to enhance maintainability and facilitate future updates
replaced ` exception . printStackTrace ( ) ` with ` ex = = null ` in ` SchemaValidatorTask . java ` to improve error handling
removed UncheckedIOException from exception handling in Contents . java to simplify exception handling by eliminating unnecessary exceptions
replaced ` Activity ` with ` AppCompatActivity ` in ` GeneratePubkeyActivity . java ` to utilize ` AppCompatActivity `
ruby flavor : wrap last term with ` ` ? : ' '
updated logging level from warning to debug in DerbyDatabase . java and added null checks in BaseLiquibaseTask . java to improve
removed the useCaches property and related methods from Nio2Endpoint . java to simplify the code and improve readability by eliminating unnecessary
replaced ` MaxmindProperties ` with ` Resource ` for database reading in ` CasGeoLocationConfiguration ` to enhance flexibility by allowing
[ instructorfeedbackresultspageuitest ] fix test failure in instructorfeedbackresultspageuitest
added a Scan parameter to the ` useEncodedQualifierListOptimization ` method in ` BaseResultIterators ` and ` EncodedColumnsUtil `
removed the ' public ' modifier from several methods in ApprovalStore and ApprovalsControllerService classes to simplify access modifiers and improve code
added a boolean flag ` mStartedDownload ` to track download status and cancel notifications when it is not started to improve user experience by ensuring download
replaced ` getOpenView ` with ` getAnyView ` in ` TaskbarDragLayerController ` and added methods for retrieving floating views to
updated project version from " 1.0 . 11 " to " 1.0 . 13 " in JFreeChartResources . java to align
replaced ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to improve code clarity and
refactor GsonBuilder to improve code structure to enhance maintainability and readability of the code
added null check for centerGeo before adding circleCenters to fixedPoints to avoid potential NullPointerExceptions when centerGeo is null
[ gr - 11818 ] remove espresso . home option from truffle ( espresso )
doc ( regen ) : fix typo in javadoc ( # 119 )
changed the visibility of the DeleteSessionAction class from protected to final and updated session management logic to enhance immutability and ensure proper session management
rename ` InvalidDocumentStoreApiUageException ` to ` InvalidDocumentStoreApiUsageException ` to improve clarity and consistency in naming con
updated the initialization of ` resultList . size ( ) ` and modified the initialization logic in ` JoinQParserPlugin . java ` , ` Solr
added a parameter to the triggerMediaScan method call to include the file parameter to ensure that the media scan is only triggered when the file is
removed redundant conditional checks for verbosity in TestRunning . java to simplify code and improve readability by eliminating unnecessary conditional checks
added custom G - code settings to the MainWindow class to enhance user experience by providing custom G - code settings
( chore ) camel - saxon : use utf - 8 encoding instead of printwriter
refactor JsonElement class for improved readability to enhance maintainability and clarity of the code
added import statements for SolrTestCaseJ4 and modified exception handling in TestBadConfig . java to improve test reliability and ensure proper exception
added a method to remove fragments and action bar in GpsMainActivity to improve fragment management and visibility of the action bar
updated the spanishTokens and spanishTokens2 lists from " LRB " to " ( " , " ES " ) " to ensure
refactor range handling to use Range . Byte instead of Range . Range for improved clarity to enhance code readability and maintainability by
updated the gcode file path and adjusted translation logic in VisualizerCanvas . java and GcodeViewParse . java to improve rendering accuracy and
added new version strings " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to TestBack
updated method name from ' then ' to ' containsAllEntriesOf ' in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test
added a condition to close the exchangeClient when the output stage is not complete to ensure proper resource management and prevent resource leaks
refactor file directory handling in IntegrityCheck and FileUtil to improve code readability and maintainability to enhance code clarity and maintainability
removed the import of SolrClient and shardToClient from ChaosMonkey . java to streamline the code by eliminating unnecessary
added null check for ` fas ` before accessing its private persistent file in ` ConfigurationActivator . java ` to prevent potential NullPointerException when `
refactor code in NestedRepositoryTreePanel to improve readability to enhance maintainability and clarity of the code
changed the constructor visibility of the ExtensionTypeHeader constructor from package - private to public and added a validation check for the ExtensionTypeHeader type to
pdfbox - 4892 : remove unnecessary try - catch block , a suggest by valerybokov
updated the ` deleteOnShutdown ` and ` pushOnShutdown ` boolean flags from ` true ` to ` true ` and added getter / setter
refactor ReactiveStateMachineExecutor to include a custom TriggerCallback parameter and improve error handling to enhance flexibility in handling state machine triggers during execution
added a new test method ` whenMultiplePythonExecutablesOnPathFirstIsUsed ` in ` BuckConfigTest . java ` to
added a default button to the root pane in InitialAccountRegistrationFrame . java to enhance user experience by allowing the signin button to be displayed
added a new configuration variable for semi - join reduction for map - joins in HiveConf . java and modified condition in TezCompiler . java
updated error logging to include an exception parameter to improve error reporting for better debugging
updated package names from ` org . axonframework . util . reflection ` to ` org . axonframework . util ` in multiple Java
added a new method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and corresponding tests in ` OidcTests
removed private fields from Circle , Ellipse , Polygon , Polyline , Polyline , and Rectangle classes to simplify the code by eliminating
[ hotfix ] [ runtime ] fix checkstyle violation in registerandprocessbundleoperation
refactor SslContextFactory for improved SSL context handling to enhance security and maintainability of SSL context management
[ hotfix ] [ test ] remove unused maxexpectations and maxlogentries from configurationpropertiestest
updated return value from " access _ confirmation " to " access _ confirmation _ error " to reflect the correct error type for access confirmation
added a new ConsumerClassLoaderFilter class and updated ReferenceConfigTest to ensure proper context class loader management to improve clarity and maintainability of the
added a new parameter ` copyRowHeight ` and ` resetRowHeight ` to the ` shiftRows ` method in ` HSSFSheet
replaced ` setRolloverIcon ` with ` setRolloverPressedIcon ` in ` FontImage . java ` to improve clarity and
refactor grid translation handling in TaskViewUtils , TaskViewSimulator , and RecentsView classes to improve code clarity and maintain
refactor Assertions class for improved clarity to enhance maintainability and readability of the code
added null checks for currentDateTimeFunction in multiple database classes to avoid potential NullPointerExceptions during database execution
[ scb - 1347 ] add utils . anonymouspath ( file : / d : / y / b / y / s /
updated the ` call ` method to include a ` contentDescription ` parameter in ` DigitalWellBeingToast ` and ` Task
increased the timeout duration for metaAvailable in CatalogTracker . java to improve responsiveness by allowing more time for metaLocation to be
renamed LineNumberTagAggregator and TestDominance classes to improve clarity and consistency in naming conventions
replaced null return statement with StateConverterUtil . defaultConversion in GenericItem . java to improve code clarity and maintainability by using a
added Hibernate integrator support in BidirectionalOneToOneNPlusOneTest . java and updated related tests in BidirectionalOneToOne
added a method to remove extra empty screen and adjusted startSearchPageIndex calculation in LauncherModel . java to ensure proper handling of empty screen
updated baseDerivedRefs initialization and added null check in IndexedValueMap to improve memory management and prevent potential NullPointerExceptions
updated string formatting in GoogleLineChart and GooglePieChart to use ` \ " { 2 } ` instead of ` ` ' ' to
refactor wait logic in SendingAccountor . java for improved error handling to enhance clarity and maintainability of the code
added a ` position ` field to the ` WALPrettyPrinter ` class and modified the ` setPosition ` method in ` WALPrettyPrinter ` to
updated the default value of the NettyTransceiver from 1 to 0 in TestNettyTransceiverWhenFailsToConnect . java
refactor SimpleReport to sort events before generating a report and add a new test for event sorting in SimpleReportTest to improve event tracking and
added a new test method ` getCsvLine _ DescriptionContainsDoubleQuote _ ReturnsCSVLineWithEscapedQuote ` in ` CSVFileLoggerTest
updated method names in DcorefChineseBenchmarkSlowITest . java and AbstractSequenceClassifier . java to improve clarity and consistency in
( chore ) camel - iq : fix checkstyle issue in iqrouter and iqhandler
removed the @ JniImpl annotation from VM . java to clean up the code and improve readability
updated variable name from " http . plugin . check . blocking " to " http . plugin . check . robots " in Fetcher2 .
added a condition to check if the video HDR format is " dolbyvision " and updated output statements in FFMpegVideo .
updated package names from " other _ package " to " other _ package2 " in AstTests . java to ensure consistency in naming conventions
updated diameter calculation logic in WorldBorder . java and added unit tests in WorldBorderIntegrationTest . java to improve diameter management and ensure
hbase - 11875 hmaster . getwalgroupsreplicationstatus ( ) do n ' t return replication status if master can not
added error handling for login events in AppWFull . java to improve user experience by ensuring proper handling of login events
added a new method ` generateInstanceConfigs ` to the ` markDataResourceOnline ` method in ` RoutingTableTest . java ` to fac
changed the access modifier of the FieldAttributes class from final to public to allow access to FieldAttributes from other packages
added a test method ` testReadErroneousMavenProjectContainsReference ` to ` ProjectBuilderTest . java ` to verify that the
removed unnecessary condition checks in PropertyMap . java to streamline the code for better readability and maintainability
refactor controllerId handling in DoorbirdInfo and ControllerConfiguration classes to improve clarity and consistency to enhance code readability and maintainability
replace sessionFactory . close ( ) with session . close ( ) in SessionRequest . java to ensure proper resource management and prevent potential memory leak
updated condition in OidcConsentApprovalViewResolver to use service . isGenerateRefreshToken ( ) instead of service . isGenerateRefreshToken ( ) to
removed debug print statement from Http2SolrClient . java to clean up the code and improve readability
refactor BaggagePropagation to use NoopGetter instead of a lambda expression to improve code readability and maintainability by using an enum
refactor ConditionalOnEnabledResourceChain class for improved readability to enhance maintainability and facilitate future updates
added a condition to check if the tree root has a child of the Rocket to ensure that the tree root has a valid child of the
updated the method call from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java
updated logging statements and modified session state handling in FacebookImpl . java to improve clarity and ensure proper handling of session state changes
updated return statements in ShadowICU . java and added date picker functionality in ShadowICUTest . java to improve code clarity and ensure
removed the KeyguardManager dependency from the TouchInteractionService class to simplify the code and improve readability
cloudstack - 3392 : fix npe when set default disk offering id
replaced ` FileChannel ` with ` AsynchronousFileChannel ` in ` UtowBodyHandler . java ` to improve performance by reducing unnecessary
refactor SigInt and SigIntTest classes to simplify method signatures and improve readability to enhance code clarity and maintainability by reducing
replaced ` updateByBoundingBoxResize ` method with ` prepareBoundingBoxResize ` in ` DrawText . java ` and ` TextControllerW .
updated return value from - 1 to 0 in Asset . java to correct the return value for better functionality
refactor compute benchmark to use a lambda expression for mapping and value loader to improve code readability and maintainability by reducing redundancy
added setOnRefreshListener ( this ) to UploadListFragment and notifyDataSetChanged ( ) method in UploadListFragment to ensure proper handling of data
changed variable names from ` File ` to ` Path ` in multiple classes to improve clarity and consistency in naming conventions
refactor emitters initialization and add dispose method in ParticleEffect . java to improve code readability and ensure proper resource management
refactor service and engine handling in Tomcat . java to improve clarity and functionality to enhance code readability and maintainability by redu
updated error message formatting in BuildRuleFactoryParams and Console classes to improve readability and maintain consistency in error messages
added a condition to return early if the playback state is not PLAYING to avoid unnecessary processing when the playback state is not playing
replaced instances of ` ServiceComponentDesiredStateEntityPK ` with ` findById ( 0L ) ` in ` DeleteServiceTest . java `
refactor ` useModule ` method in ` Java2TypeScriptTranslator ` and add a new ` InnerClassFieldClash ` class to
added logging and followRedirectFilter properties to DockerClientFactory and DockerClientProfile classes to enable customizable logging and follow redirects based on configuration settings
replaced direct call to displayChanged ( ) with awtLock ( ) and awtUnlock ( ) in XToolkit . java to ensure thread
hhh - 10183 use sqlserver2008dialect instead of db2dialect
refactor input handling in OPCPackage and ZipHelper to ensure proper resource management to improve resource management and prevent potential memory leaks
changed the access modifier of the storeClassFile method from private to public to allow access to the method from other packages
updated the assertion for NO _ MORE _ ORDS in SingletonSortedSetDocValues . java and added a new TestSortedSetDocValues
updated error messages in CGIHandler . java and added a new JavaVMCallbackHandler in JavaVM . java to improve clarity of error
added a condition to check if a string ends with " \ 033 [ m " and " \ n \ 033 [ m " to
change the type of ` multiFetchSourceFiles ` from ` List ` to ` Set ` across multiple files to align with the intended functionality of
added a check to return early if the vertex count is zero in OGLESShaderRenderer . java to avoid unnecessary processing when no vertices
added verification checks and error handling in the IncorectBindingPuzzleFixedTest and DescriptiveMessagesOnVerificationInOrderErrorsTest classes to
replaced ` FileUtil . createData ( ) ` with ` FileUtil . createFolder ( ) ` in ` MacroService . java `
removed unnecessary import of Node in ImplicitCast . java and TypeSystem . java to streamline code by eliminating unnecessary dependencies
refactor JsonObject class to improve code readability to enhance maintainability and facilitate future updates
added a condition to check if ` _ maxIdleTime ` is greater than zero in ` SelectChannelEndPoint . java ` and refactored
fix flarmlandblock . cansustainplant ( ) for plantable .
added support for creating a new table SALTEDTABLE123 in QueryDatabaseMetaDataIT and modified database connection handling in ConnectionQueryServicesImpl to
added Locale . US to the date format in HttpCookie . java and created a new class B6791927 . java with cookies to
added multiple calls to ` db . close ( ) ` in ` DbHelper . java ` to ensure proper resource management and prevent potential memory leak
increase the poll timeout from 1 to 5 seconds in BatchMessageListenerContainerIntegrationTests . java to improve test reliability by allowing more time
[ gr - 11818 ] add trace to economy allocation stage for tracing .
updated key binding handling in SourceTab . java and CodeAreaKeyBindings . java to use keyBindingRepository for saving keys to enhance key binding
added a static block to initialize the ObjectMapper instance with a line separator to ensure proper handling of line separators in the ObjectMapper instance
updated name handling in NativeEnvironmentRepository to handle windows paths to ensure proper handling of windows paths in the application
added a new ` appT ` field and refactored its usage across multiple test classes to streamline the application setup process and improve code
[ java ] remove duplicate record validation logic in recordinglog . validateexistinglog ( ) .
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
h2 console : do n ' t sleep if mvstore and travis be disable
replaced SharedPreferences initialization with a private boolean variable for reverseImage to improve code readability and maintainability by reducing redundancy
updated condition checks to check for " META - INF / " instead of " META - INF / " in multiple files to ensure correct handling of
added a new predicate for exclusion IDs and modified method signatures in TerserUtil . java and MdmMatchLinkSvcTest . java to
updated access modifiers from public to package - private in AuthenticationSuccessListenerTests . java to enhance accessibility and maintainability of the test class
replaced the use of New . arrayList ( ) with a dynamic count of COLUMN _ NAME _ RULES 1 and updated the TYPES
refactor TypeUtil class to improve code structure to enhance maintainability and readability of the code
updated the triggerTime calculation to use LocalDateTime instead of LocalDateTime to ensure accurate time representation for alert notifications
added a method ` maybeCreateAbstractMethodErrorThrower ` to handle abstract method error handling to improve error handling for abstract method errors during method
[ camel - 14836 ] fix invalid ognl expression in camel - catalog
removed conditional check for empty toExplore in AbstractParser . java to simplify the code by eliminating unnecessary checks
camel - 14836 : camel - jclouds should use iohelper . copy instead of iohelper . copy
camel - 16400 : remove the @ ignore annotation from camelconsultest
added a check for ACC _ STRICT access flags in the Check . java file and created a new CheckACC _ STRICTFlag
[ java ] set driver timeout to 2 _ 000 for channel validation test .
added a new file ` FileExtensions . java ` with static final ImmutableSet of file names to facilitate the handling of file extensions in
replaced the instantiation of ` DateFormat ` with a new ` ThreadLocal < DateFormat > ` and removed the ` ThreadLocalDateFormat ` class to
removed deprecated deprecated options from VMDeprecatedOptions . java to clean up the code and improve maintainability
added displayName field to Pac4jBaseClientProperties and modified DelegatedClientIdentityProviderConfigurationFactory to use it to enhance client custom property management
replaced RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling by throwing an EarlyTerminationException
removed unnecessary whitespace in the return statement in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
replaced ` getResponse ` method with ` consumeResponse ` in ` HttpBindServlet ` and added connection handling in ` HttpSession ` to improve connection
added a null check for parent before returning the CapabilityDispatcher in ForgeEventFactory . java to prevent potential NullPointerException when parent is null
removed the KeyCrypterException from the catch block in WalletTool . java to simplify error handling by eliminating unnecessary exceptions
added @ Deprecated annotation to AsyncCompletionService and SubmitOrderedCompletionService classes to indicate that these classes are outdated and should no longer be used
updated the calculation of the length in HyphenationTree to use the original length instead of the original length to ensure proper handling of boundary lengths
added a sleep duration to the IQRegisterHandler class to allow for more time for the registration process to complete
refactor Resources class to use javax . swing . * instead of javax . swing . * to improve code readability and maintainability
updated the description of the PARAMETER _ NEEDS _ TO _ BE _ NAMED string in ParameterBinder . java to clarify the
added a new boolean variable ` providersChanged ` in ` ConfigurationManager . java ` to reset the state of providers to false to ensure that the
added a private method ` quoteIdentifierTokens ` to handle quoted identifiers in ` SemanticAnalyzer ` to ensure proper handling of quoted identifiers in the token processing
added a null check for the ' name ' entry in the font list and added a warning if the ' name ' entry is missing to improve
replaced ` AbstractAnalysisFactory ` with ` AnalysisSPILoader < ? extends T > ` in ` SolrResourceLoader . java ` to improve
added a condition to check if the cell is within the bounds of the window before proceeding with the hit actor to ensure proper handling of the
added a null check for appManifest before setting the target SDK version to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog to use MAPPER for serialization and serialization to improve code readability and maintainability by redu
added userName field and associated getter and setter methods to the Driver class to allow users to specify a user name for the driver
added methods to set transformer files , URL , and InputStream in XsltBuilder and updated XsltComponent to use it to enhance configuration flexibility
added HadoopShim to ContainerRunnerImpl , TaskRunnerCallable , and TestFirstInFirstOutComparator classes to enable customizable Hadoop shim
updated URI parsing logic in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to improve clarity and consistency in URI
added null check for the context before logging access in CoyoteAdapter . java to avoid potential NullPointerException when context is not initialized
updated logging statements in ThroughputLogger . java and modified message formatting in ThroughputLoggerTest . java to improve logging clarity and
added debug build checks for VM option ' PredictedLoadedClassCount ' and ' TraceJNICalls ' in multiple files to ensure
[ hotfix ] [ metrics ] remove unnecessary clear ( ) method in defaultlogpublisher
replaced System . err . println with resolveSystemProperty in FrameworkLauncherExtended . java to improve code readability and maintainability by reducing
added @ NotNull annotations to multiple method signatures and replaced ` DefaultCookieValueManager ` with ` NoOpCookieValueManager ` and ` DefaultC
replaced ` BASH _ ESCAPER ` with ` SHELL _ ESCAPER ` in multiple files to standardize command
refactor waitUntilReadyAndSucceed and HttpWaitStrategyTest to use try - with - resources for better resource management to ensure proper
changed the class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify the purpose of the test class
updated the closing brace in RelativeDateFormatTests . java to improve code readability and maintain consistency
added a method to generate a ShieldAddress in RpcApiService to enhance the functionality of the ShieldAddress generation process
replaced ` byte [ ] ` with ` String ` in ` readConsoleInput ` methods across multiple terminal classes to improve consistency and readability
updated test cases for presubmit , postsubmit , and platform in TestStabilityRule . java to ensure correct handling of platform - specific
updated SolrHighlighter to limit fragments and added a new test for preserveMulti in HighlighterTest to ensure correct highlighting behavior for multi -
added username and password parameters to the tryToLogin method in WebdavClient . java to enhance security by allowing authentication based on user credentials
refactor entity handling in HandlerSceneEntityDrownReq and PacketSceneEntityDrownRsp to improve clarity and functionality to enhance code
( chore ) camel - jms : fix typo in method name
removed the wrapCollection method call from the update method call to simplify the method signature for better readability and maintainability
added error handling for unknown currency in BTCEAdapters . java to improve robustness by ignoring unknown currency exceptions
refactor subscription creation logic in DurableConduitBridge . java to improve clarity and consistency to enhance code readability and maintainability
pdfbox - 4071 : set default averagechartolerance and spacingtolerance to 0.3 f , a suggest by valerybokov
added a new parameter ` useTenantIsolation ` to the ` startController ` method and updated related methods in ` ControllerTest ` , ` Cluster
changed the return type of the response value from ImmutableMap to Map < String , Object > to ensure proper type casting for the response value
added a check for non - negative attrs size in ProjectWorkspace . java to ensure that attrs are only checked when the size is less than 4096
added ` getProjectJdkName ( ) ` , ` getProjectJdkType ( ) ` , ` getProjectLanguageLevel ( ) ` , and
updated the error message from " Experimenal " to " Experimental " in HiveSessionProperties . java to clarify the purpose
added unit tests for the GrantedAuthorityEffectiveAclsResolver to ensure correctness of role resolution based on user details
replaced ` new ReflectionClassDeclaration ` with ` getSolvedJavaLangObject ( ) ` in ` JavaParserTypeDeclarationAdapter . java ` to
added a maximum number of button SUPPORT to the XToolkit class and modified the return logic to increase the number of buttons based on the
replaced ` jdk . testlibrary . Asserts . assertEquals ` with ` com . oracle . java . testlibrary . Asserts
refactor MessagePack and MessageUnpacker classes to utilize a new MessagePackFactory class to improve code organization and maintainability by centralizing
added new tags keys " is _ desert " , " is _ cave " , and modified tag calls in ForgeBiomeTags
rename ` present ` to ` draw ` across multiple screen classes to improve clarity and consistency in naming conventions
added conditional checks for horizontal state in ComponentGroup . java to ensure proper layout behavior based on the presence of the horizontal state
replaced ` DOI _ URL _ PATTERN . matcher ( identifier ) ` with ` matcher . matches ( ) ` in ` DOIService
replaced instances of ` instanceof ` with ` hasMultitouch ` in ` AndroidInput ` and ` AndroidLocklessInput ` to improve
[ java ] do n ' t throw an exception if the commit position counter be close .
added new UserSite and UserSiteId classes for managing UserSiteId and RecordId classes to facilitate the handling of user site
refactor URL handling in HttpConverterRegistrar to handle malformed URLs and improve error handling to enhance robustness and provide clearer error messaging for invalid
cloudstack - 4892 : fix capacity _ type _ storage _ ALLOCATED and capacity _ TYPE _ STORAGE _ ALLOCATED
replaced ` openInput ( ) ` with ` fileLength ( fileName ) ` in ` NRTCachingDirectory . java ` to improve file
replaced ` beginCompile ( ) ` and ` endCompile ( ) ` with ` generateClass ( ) ` in ` JavascriptCompiler . java
modified synchronization in UISettings . java to ensure thread safety to prevent concurrent access to UISettings . class
added native text input support and visibility checks in TextField . java to enhance user experience by allowing native text input handling
refactor error handling in SpannerIO to include schemaChangeErrString and emulatorErrorString to improve clarity in error reporting for em
replaced instances of ` TreeMap < String , byte [ ] > ` with ` TreeMap < > ` in multiple test files to improve type safety
updated array type check from double to short in ObjectInputStream . java and added CloneArray . java with a new class CloneArray . java to enhance
updated OIDCAuthenticationFilter to use getStringClaim instead of getClaim for nonce retrieval to improve clarity and consistency in handling nonce claims
added a condition to check if the field is a relationship field in DCInputSet to ensure proper handling of relationship fields in the input set
added support for server slogan capabilities in the FileDataStorageManager and updated related classes to enhance user experience by allowing users to manage server
refactor menu item comparison logic in DrawerActivity . java to improve readability and maintainability to enhance code clarity and maintainability
added JUnit Assume import and improved error handling in SolrRequestParserTest . java to enhance test reliability and provide clearer error reporting
added a check for empty missing symbol events in the MissingSymbolsHandler class to ensure that the event is only processed when there are no symbol events
added " Data 5 - 4 " and " Const . EOL " to StringHelperTest . java to enhance the test coverage for data 5 - 4
updated the initialization of ` dataProviderHolder ` to be final and added warning logging for empty arrays and iterator to improve code clarity and provide clear
replaced ` Collections . EMPTY _ SET ` with ` Collections . emptyList ( ) ` in multiple Java files to improve code readability and maintain
updated XML version from " freeplane 1.9 . 0 " to " freeplane 1.9 . 8 " and modified selection style handling
updated the method call from ` mass ` to ` restitution ` in ` PhysicsRigidBody . java ` to correct the
added a new file AutoFtpActivity . java and FtpHelper . java to implement FTP test functionality to facilitate FTP communication
refactor token type handling in BaseSemanticAnalyzer . java to improve clarity and maintainability to enhance code readability and maintainability by
added methods to retrieve imageX and imageY in ImageViewer , OnOffSwitch , and GenericSpinner classes , and updated component state handling in
added a new class RemoteExecutionEnabled and its corresponding tests in BuildableSerializerTest to enable remote execution based on configuration settings
pdfbox - 4892 : fix typo , a suggest by valerybokov
[ iotdb - 3551 ] use utf - 8 encoding for csv import ( # 3551 )
added assertions to assertWorkingScoreFromScratch in AbstractScoreDirector . java to ensure that shadow variables are not stale before proceeding with
updated SEMIJOIN _ CONVERSION from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion
added slf4j logging functionality to multiple decoder and encoder classes to improve debugging capabilities for message content in the application
refactor file removal logic in SynchronizeFolderOperation and FileDisplayActivity to improve clarity and functionality to enhance code readability and maintainability
added assertions to verify the presence of the transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly set before proceed
deprecate schemaregion . constructschemablacklist and schemaregion . deletetimeseries ( ) since it be deprecate .
added null check for sampleMimeType in MediaCodecRenderer . java to ensure proper exception handling when sampleMimeType is null
replaced ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl ` and ` AbstractJdbc23PoolingDataSource
added @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) to the AllArgsConstructor constructor to enable JSON serialization for properties in the
added SQL feature check for creating an index on a view in MetaDataClient . java to ensure that creating an index on a view is not supported
added a new class ` Website ` with getter and setter methods in ` PopulatorImplTest ` to initialize the ` Website ` class
added a setup method to set the default locale in BSFormatterTest to ensure the locale is set to " en " and " US "
added a derpfilter to filter out multiple badly downloaded jar files in CoreModManager to improve error handling for badly downloaded jar files
replaced ` containsString ` with ` Matchers . equalToIgnoringCase ` in ` MultiPartParsingTest . java ` to improve test
added conditional checks for single parameters in SimpleExprGenerator . java to ensure proper handling of variable expressions in the evaluation process
added a volatile boolean field ` createdVertx ` and modified the conditional check in ` VertxComponent . java ` to ensure that the ver
updated writeAttributes calls in NodeStyleBuilder to use the correct node object instead of null to improve code clarity and maintainability by using a
updated log message formatting in SynchronizeFolderOperation . java and FileDisplayActivity . java to improve code readability and maintain consistency in logging output
added a new property ` ignoredReadStatus ` to the ` Entries ` class and updated related methods in ` CategoryREST ` and ` FeedREST
replaced ` ResourceFactory . root ( ) . newResource ( ) . newResource ( ) . newResource ( ) . newResource ( ) . newResource (
refactor data validation logic in ` RegisterServerConsumerExecutor ` and ` URIRegisterExecutorSubscriber ` to improve data validation logic to enhance robustness
updated the condition for determining playback state in GwtMusic . java to ensure playing only occurs when the sound is paused
added a new permission check for ADMIN _ SUDO _ AREA in the MainCommand and Captions classes to enhance user experience by allowing sudo
refactor query options handling in ServerRequestPlanVisitor to use a new method ` updateQueryOptions ` to improve code readability and maintainability
replaced ` toUri ( ) . getPath ( ) . endsWith ( " / " + baseName ) ` with ` path . getFileName ( )
updated assertions in ResourcesTest . java to replace " \ uD83D \ uDE00 " with " \ uD83D \
added new native methods NMTWaitForDataMerge , NMTOverflowHashBucket , and NMTMallocWithPseudoStack in White
[ hotfix ] [ serializer ] fix typo in eitherserializersnapshot
refactor AddressResolver options to use a new resolv option for NDOTS and ROTATE _ RESOLV _ OPTION to improve
added a call to ` super . __ associate ( context ) ` in ` RequestRockerTemplate ` and a corresponding test in ` RequestR
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated XML file paths from " liquibase / parser / core / xml " to " www . liquibase . org /
rename CommonMIMETypeLocator from " source " to " test " in CommonMIMETypeLocator . java to clarify the purpose of the
updated repository version state from INIT to NOT _ REQUIRED in ServiceComponentDesiredStateEntity . java and modified return values in ServiceImpl . java to
updated the comparison logic in GenerateChangeLogTask to use a new SchemaComparison array to enhance schema comparison functionality for better schema management
replaced ` org . junit . Test ` with ` org . testng . annotations . Test ` in ` TestBackwardAnoam
added a new test class ` ProgressiveJPEGTest ` for testing progressive jpg rendering to facilitate testing of the progressive
updated material handling in MaterialLoader . java to set default alpha values and set default values to false to improve flexibility and maintainability of material
fix native - image build on window only support target architecture
added a null and empty check for the text before setting the size of the label to avoid potential NullPointerExceptions when text is empty
updated the calculation of readVarInt ( ) from a single value to a multiple of 1 _ 000 _ 000 to ensure correct handling of integer
changed PushUtils and ThumbnailsCacheManager classes to be final to enforce immutability and enforce immutability of the PushUtils class
replaced the calculation of the length variable from ` getBounds ( ) ` to ` getLength ( ) ` in ` RocketPanel . java `
removed unnecessary cast to MockDirectoryWrapper in setEnableVirusScanner method to streamline code by eliminating unnecessary casting
updated the way the presets file is loaded from " datafiles / presets " to " ( ? i ) . csv " to ensure the correct
added a conditional check for duration before announceing accessibility in TaskbarStashController . java and modified conditional checks in InvariantDeviceProfile
updated the initialization of the homeNode to use RefreshTask instead of Args to improve code clarity and maintainability by using a more descriptive
added a test for only one JDKs in PMDTaskTest and implemented target handling in PMDTask to ensure that only one JDKs
refactor QuotaResponseBuilderImplTest to use MockitoJUnitRunner instead of PowerMockito to improve compatibility with Mockito ' s
added PrintStream variables and set output and error streams in TestSchemaToolCatalogOps . java to improve logging capabilities for better debugging and error handling
added a DFSClient parameter to the FanOutOneBlockAsyncDFSOutputSaslHelper class and updated related methods to include it to
updated MongoQueryMethod constructor to accept RepositoryMetadata as a parameter to enhance flexibility in managing repository metadata
refactor entity resolver handling in Digester . java to use EntityResolverWrapper instead of EntityResolver to improve flexibility and maintainability of entity
removed unnecessary imports from MetaDataEndpointImpl . java to streamline code by eliminating unnecessary dependencies
increased the ALLOWED _ REPEATED _ DEADLOCKS constant from 5 to 10 and added a retry interval for the dead
updated XAxis position and typeface settings in BarChartActivity , LineChartActivity1 , and YAxisRenderer classes to improve code clarity
added functionality to check if a character is a printable character in FsUtils . java to ensure proper handling of character names in the system
simplified the method names from ` in ` to ` using ` across multiple classes to improve code readability and maintainability
added handling for plugin configuration in DefaultMaven and updated related classes to utilize it to improve error handling and ensure proper handling of plugin configurations
updated return values in ProxyConnectionManager and ServerTrafficCounter to use
update resource path handling in ITSystemTest . java to include a check for the existence of " google - cloud - vision " directory to
updated return statements in ModeledConnectionRecord , ActiveConnectionRecord , and added remoteHost handling in AuthenticatedUser to improve connection handling and ensure
add admin button to the request in CommunityListServlet to enhance user experience by allowing users to access the admin state
added AtomicInteger for longCompactionThreadCounter and shortCompactionThreadCounter in CompactSplit . java to track the number of compaction threads in the
replaced getApplication ( ) . getPackageName ( ) with resources . getResourcePackageName ( R . array . wallpapers ) to improve resource management
added a method to retrieve player visibility from the plot ' s players in the Near class to enhance user experience by allowing users to access player
refactor AndroidManifest , ResName , ResName , ResName , ShadowMediaPlayer , ShadowActivity , and ShadowActivity classes to improve code
refactor MlibOpsTest . java for improved clarity to enhance maintainability and readability of the code
updated variable names from " com . sun . management . internal . OperatingSystemImpl " to " OPERATING _ SYSTEM _ IMPL " to
updated the attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator and added a test for the expected properties in Scheme
replaced ` encodeStringToBase64Bytes ` with ` generateKey ` and ` iv ` in ` UploadFileOperation . java ` to simplify
[ flink - 243688989 ] [ test ] add @ stability annotation to workprofiletest
removed conditional check for bucketing version in TezCompiler . java to simplify the code by eliminating unnecessary logic
replaced ` setCursorPosition ` method with ` input . setCursorPosition ` in ` GwtTestWrapper . java ` to ensure proper
refactor LockFreeBucket class to extend LockFreeBucketContendedTimeMeter and extend LockFreeBucket _ FinalFields _ CacheLinePadding to
added a method to print thread pool statistics in NodeProbe . java to improve debugging capabilities for thread pool management
updated the method call from ` Utils . getMaxBitrate ( ) ` to ` userPreferences . getValue ( ) ` in ` ExternalPlayerActivity
refactor ZipkinHttpSpanExtractor and TraceFilterTests to improve handling of trace and span ID checks to enhance code clarity and maintainability
simplified the method ` getUserPaymentAccounts ( ) ` in ` MutableOfferDataModel ` and refactored related methods in ` CreateOffer
replaced reflection - based method invocation with direct method invocation in DartServerCompletionContributor . java to simplify code and improve readability by
added a call to fs . setProject ( p ) in LauncherUtils . java to ensure that the project is set correctly in the application
added ProjectFilesystem parameter to JsBundle , JsBundleBuilder , JsTestScenario , and JsTestScenario classes to support the use of ProjectFilesystem
refactor multiple EnvelopeStyle , Databinding , DatabindingFactory , and PropertySet classes to improve code organization and maintainability
refactor MetricsDSLContext class for improved clarity to enhance maintainability and readability of the code
replaced the interface ` VersionConfig ` with ` ImmutableSet < String > ` in the ` VersionBuckConfig ` class to improve type safety
added a try - catch block around the bindShadowClass method call to handle TypeNotPresentException to ensure proper handling of TypeNotPresentException
changed the access modifier of the validateTypes method from package - private to public to allow access to the method from other packages
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added logging functionality to SimulationStatus class to enhance debugging capabilities and improve debugging capabilities
updated VERSION _ POSITION _ Y and VERSION _ FONT from 138 to 150 in Splash . java to reflect the new version of the Splash class
added a runLater ( ) method to add notifications to the notifications list to ensure notifications are added to the list before proceeding
added a new method ` when ( mock . foo ( ) ) ` to ` ReturnsElementsOf ` in ` AdditionalAnswers . java ` to
[ hotfix ] [ javadocs ] fix typo in errormsg
added a new test method ` testLineFileDocs ` in ` BaseStoredFieldsFormatTestCase . java ` to verify the functionality of `
added a method to retrieve the version code in MainApp and updated FeatureList and WhatsNewActivity to use it to ensure compatibility with the
camel - 16400 : camel - bean - add support for explicit method invocation .
rename ` getContentDispositionFilename ( ) ` to `SubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to improve clarity
added bufferOwned flag to IndexBufferObject and VertexBufferObjectWithVAO classes and modified buffer management in IndexBufferObject and VertexBuffer
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing passwords to change
refactor JerseyClientConfiguration to improve code organization to enhance maintainability and readability of the configuration
int - 1748 fix javadoc warning in consoleinboundchanneladapterparser and consoleoutboundchanneladapterparser
updated print statements in ` InstanceOfPatternMatchTest . java ` and ` RemoveRedundantTypeCastTest . java ` to use ` o
added methods to adjust column and row count and row count in StringDict and Table classes to ensure proper handling of empty strings in the table
renamed ` GenericContainer ` to ` AutoCloseable ` and added a new ` WithCustomizer ` method in ` GenericContainerRuleTest
updated logging level from info to error in MediaInfo . java and modified test cases in RendererConfigurationTest . java to improve logging clarity and
added schemapattern option handling in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance configuration flexibility for database connections
updated the return statement in ProvSSLSessionImpl to use TlsUtils . EMPTY _ BYTES instead of TlsUtils . EMPTY _ BYTES
refactor ratio calculation and bitmap creation logic in AndroidGraphics . java to improve code readability and maintainability by reducing redundancy
refactor Base64 class implementation to improve code readability and maintainability
refactor fallback handling methods in LLVMGlobalContainer to improve code clarity and maintainability to enhance code readability and maintainability by central
added IPHONE to the @ Ignore annotation in JavascriptEnabledDriverTest . java to enhance test coverage for IPHONE and SELENE
renamed FlowBuilder and FlowJobBuilderTests files to improve clarity and consistency in naming conventions
rename ` resName ` to ` resId ` across multiple classes to improve clarity and consistency in naming conventions
refactor DefaultDockerClientConfig to utilize a new method ` resolveContextTLSFile ` for handling TLS file paths to improve flexibility in handling
replaced ` @ After ` with ` @ Before ` in ` SimpleReactiveElasticsearchRepositoryTests . java ` to align test setup with the
modified conditional logic in mmm Attr . java and added a new class T6450290 . java with generic constructors in Box . java
added logging level configuration to the LoggingFlags and LoggingOptions classes to enable customizable logging levels for improved user experience
added logging statements to LauncherModel , SecondaryDropTarget , and ModelWriter classes , and modified deleteItemsFromDatabase method to use Collection to
added ` allFilesOption ( ) ` methods to ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity ` to
deprecate ` forEachOperation ` and ` hasMatching ` method in ` MutationOperationGroup ` to deprecate ` forEachOperation ` and ` has
updated the calculation of numPredictiveAppCols based on phone mode to improve accuracy in determining the number of apps columns based on phone mode
removed UTF - 8 character encoding from the content in StringUtils . java to simplify the code by eliminating unnecessary character encoding
added new classes ` RequestMatchers ` and ` RequestMatchersTests ` to facilitate validation of request matchers based on matchers to enhance security
simplified condition checks in EuclidianController . java for clarity to improve code readability and maintainability
updated calculations for height and width in ProgressBar . java to ensure correct height and width calculations based on background height and height
added JSON definition path retrieval in PrestoSparkNativeQueryRunnerUtils . java to ensure the correct JSON definition path is used for external functions
added a native method ` permuteArgs ` to the ` BruteArgumentMoverHandle ` class and modified the ` permuteArgs
added a condition to check if the handler is invalidated before checking gesture state to ensure that gesture state checks are only executed when the handler is invalidated
added orientation check for LANDSCAPE in DynamicGrid and modified metrics calculations in Workspace to improve layout management and ensure accurate metric calculations for cell layout
added a check for " / robots . txt " in the redir condition in HttpRobotRulesParser . java to ensure that robots files are
[ netbeans - 4892 ] remove unused import and add a static resource for nb - javac
updated subscription names from " continue " to " createWorld " and " return " in AdvancedGameSetupScreen . java to improve clarity and
added a check for zero values in UDFOPDivide . java and created a new test class TestUDFOPDivide .
refactor exception handling in FlowJob and related classes to improve code clarity and maintainability to enhance readability and maintainability of the code
updated FilterProcessUrlRequestMatcher and LogoutBeanDefinitionParser to use a new BeanDefinitionBuilder for handling logout URLs to enhance security by enabling
added onDestroy method to ShareActivity , ContributionsActivity , and ShareActivity to unbind the upload service connection to ensure proper resource cleanup and prevent
updated variable names from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to improve clarity and
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
added a method to set the request timeout in RaftServerConfigKeys to ensure proper configuration of the Rpc request timeout
updated logging level from error to debug and refactored error handling in TsFileResourceManager and ResourceManagerTest to improve logging clarity and
added system properties to the model source setting in MavenModuleLoader . java to ensure proper configuration of the model source and system properties
added new metrics for READINESS _ CHECK _ OK _ CALLS and READINESS _ CHECK _ BAD _ CALLS in
added registerModels method to BlockAnimatedTorch class to enable custom itemblock registration for the animatedtorch model
added null check before closing the writer in FileHistoryCache . java to prevent potential NullPointerException when writer is not initialized
replaced instances of ` new HiveConf ( ) ` with ` UtilsForTest . getHiveOnTezConfFromDir ` in multiple
added a link to the links list of users to the FeaturesActivity to enhance user tracking functionality for users
added a property " jdk . reflect . useDirectMethodHandle " to the initializedProperties to enable direct method handle usage in the System class
hbase - 11818 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ hotfix ] [ yarn ] do n ' t add environment variable ' libdir ' and ' pluginsdir ' to ship file
replaced ` getPronunciations ` method with ` getWord ` in ` BuildTranscriptHMM ` and ` TrainerDictionary
updated string concatenation in JsonUtilsTest . java to ensure consistent formatting to improve readability and maintainability of the code
added tweet ID handling in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to enable tracking of tweet IDs in the Com
add a warning log to indicate that the listener is lost when the underlying ring buffer data related to reliable topic is lost to provide clearer feedback
replace IOException with NoClassesFoundToAnalyzeException in FindBugs2 . java and add a new class NoClassesFoundToAnalyzeException to improve
replaced the import of ` java . security . Key ` with ` java . security . PublicKey ` in ` KeyFetcher . java ` to
changed the variable ` isIncompatible ` from ` false ` to ` true ` in ` DLNAResource . java ` to ensure compatibility state
updated the method name from ` Account ` to ` AccountCreateContract ` in ` RpcApiService . java ` to improve clarity and consistency
pdfbox - 4892 : do n ' t throw npe if there be no range
http : / / issues . apache . org / jira / browse / amq - 4892 - fix the issue of messagelistener
changed the default value of enableOffHeapFormat from false to true and modified the default star tree format version from " ON _ HEAP " to
updated the title handling in FeedUpdateService to ensure that the content title does not exceed the specified length to ensure that the content title does not
refactor previewPanel initialization in JColorChooser and BasicColorChooserUI to use ColorChooserComponentFactory for improved clarity to enhance code
updated logging level from info to debug in DefaultBuildExtensionScanner . java to improve logging granularity for better debugging
added a null check for the reusable bitmap before retrieving the bitmap to avoid potential NullPointerException when accessing bitmaps
added a ` getLayoutParams ( ) ` method to the ` FakeView ` class to provide access to the layout parameters for better view management
added a check to throw an IllegalStateException when the cursor is already closed in DefaultCursor . java and a corresponding test in CursorSimpleTest . java
pdfbox - 4892 : do n ' t throw npe if there be no kids in the parent dictionary
added JUnit @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are no longer needed
added a private String field ` ts ` and its getter / setter methods to the ` Message ` class to provide access to the timestamp value for
added new classes ` ExceptionMapperUtils ` and ` WebApplicationExceptionMapper ` , and updated ` GenericExceptionMapper ` and ` WebApplicationExceptionMapper `
changed the visibility of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
refactor ` removeLegacyParameters ` method in ` IsochroneResource ` , ` RouteResource ` , and ` Isochrone
changed access modifiers of several test classes from public to package - private to allow access to these test classes from other packages
refactor CSRF handling in PluginServlet to use a separate method for setting CSRF attributes to improve code readability and maintainability by centralizing CSRF
refactor shadow class loading logic in EclipseLoaderPatcherTransplants . java to improve clarity and functionality to enhance code readability
[ drools - 5767 ] allow rule sheet to disable numeric value ( # 5767 )
added a conditional check for debug logging before logging the default value to ensure logging is enabled only when debug is enabled
added null checks and refactored Joystick handling in Lwjgl3Controller and Lwjgl3ControllerManager to
replaced ` cucumber . api . java . ObjectFactory ` with ` io . cucumber . core . backend . ObjectFactory
added a null check for the HostDatabase before saving port forward to prevent potential NullPointerExceptions when the host is not initialized
added a new property ` SHOULD _ SNAPSHOT _ DATA ` and its getter / setter methods in ` GlobalConfiguration ` , and updated related
refactor SyncedFolderObserver to check for null file name before scheduling job to improve robustness by preventing potential null pointer exceptions during job
refactor LocationMarshaller class to improve code structure to enhance maintainability and readability of the code
updated conditions in StatusBarTouchController , TouchInteractionService , OtherActivityInputConsumer , and OtherActivityInputConsumer to improve gesture handling logic and
updated package structure and import statements in VectorReader and related classes to improve organization and clarity in the codebase
replaced ArgumentMatchers with Matchers in multiple test files to align with the latest Mockito requirements
replaced ` getRelativePathName ( ) ` with ` getRelativePath ( ) ` across multiple files to simplify the code and improve readability by using a
updated the ` completeMapAndTransformRow ` method to accept ` RecordReaderFileConfig ` instead of ` RecordReader ` to enhance flexibility
added null check for ` extractor ` in ` ControllerMethodInvoker ` and ` Params ` classes to avoid potential NullPointerExceptions when ` extractor ` is
cloudstack - 4892 : add method to find correct resource limit for account and domain
fix potion shift event to be cancelable
added a deprecated constant for the COLD _ READS _ TO _ OMIT _ KEY in SizeTieredCompactionStrategyOptions . java to
added a call to leech . stop ( ) in ClientTest . java to ensure the leech is stopped before running tests
[ issue # 1188 ] fix popmessageprocessor fail if label be retry ( # 1188 )
refactor KeyboardAddonSettingsFragment to improve code structure to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to temporarily disable tests for a moment
renamed ` EventLoopGroup ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and updated related classes to improve clarity and
added upgrade request handling and test cases in ClientConnectTest and JettyTrackingSocket classes to ensure proper handling of Upgrade requests and responses in the
added a timeout variable and its getter and setter methods in AndroidImplementation . java to enable dynamic configuration of the connection timeout based on the specified timeout
refactor ` getUserAccessPermissions ` and ` getTeamAccessPermissions ` methods in ` GitblitClient ` and ` RepositoriesPanel ` to
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure SQL parsing and deparsing with quoted casting
added a check for the root directory before checking if the file is writable and executable to ensure that the file is only checked for writable and executable
added logging functionality for thread group and thread per group in FixedThreadExecutor . java to enhance thread management by allowing dynamic configuration of thread groups
added null checks for ` field ` in ` AbstractChangeGenerator . java ` to prevent potential NullPointerException when ` field ` is null
replaced ` CasEventListener ` with ` InitializingBean ` in multiple configuration files to align with the latest Spring framework standards and improve code
refactored animation end handling in ShadowAnimation and added a new endAnimation method in AnimationTest to improve code readability and maintainability by
added a close method to the DeflaterOutputStream in RegionFile . java to ensure proper resource management and prevent potential memory leaks
added a new Java file for testing system property retrieval in gsp001 . java to ensure that the JVMTI GetSystemProperty can
refactor BeanDefinitionInjectProcessor to use ` concreteClassMetadata ` instead of ` annotationUtils ` for better clarity to improve code readability and
added ` read ` and ` write ` methods to ` CameraNode ` , ` LightNode ` , and ` InputCapsule ` classes to
refactor PopupNotificationPanel to use SwingUtilities for improved window disposal logic to enhance code readability and maintainability by reducing
replaced ` NoInstanceException ` with ` InferenceException ` in ` Infer . java ` to streamline exception handling for better cl
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the ` featureValue ` variable
change the parameter type of the after method from int to long in Mockito . java to allow for more flexible handling of the after method
added ` onBuild ` and ` executionDriver ` properties to ` ContainerConfig ` , ` Info ` , and ` OnBuild ` classes to
added a conditional check for RTL mode before setting the icon in Toolbar . java and updated flow layout handling in FlowLayout . java to
added a boolean flag ` enablePositionIncrements ` to the ` StopFilter ` class and modified the creation of ` StopFilter ` to enable
added an ` InternetAddress ` field to the ` EmailsTest ` and ` SystemErrorEmailReportTest ` classes to establish an instance of
added a boolean variable ` mTryShareAgain ` to ` FileActivity . java ` to set ` mTryShareAgain ` to false to
added support for the use of the TTY version in JansiNativePty . java to enhance compatibility with TTY versioning and
refactor BandwidthProcessor to use a consistent byte size calculation based on dynamic properties store to improve code readability and maintainability by reducing
replaced direct assertions with Awaitility ' s await method in Issue410Tests . java to improve code readability and maintainability by
[ easee ] add api _ base _ url to easeebindingconstants
( chore ) camel - kafka : increase read timeout from 2 second to 3 second
removed redundant calls to ` AllOf ` in ` SearchResultMatcher . java ` to streamline the code and improve readability by eliminating
updated import statements and added SSL trust management in OkHttp . java to enhance security by enabling secure certificate verification for SSL connections
replaced ` mA11yLongClickListener ` with ` buttonView . setOnLongClickListener ` in ` NavbarButtonsViewController `
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to support ASCII strings in formulas to
added null checks for stdout and stderr in ShellStep . java to ensure robustness by preventing potential NullPointerExceptions
increased TIMEOUT _ MILLIS from 1000ms to 2000ms in AsyncAppenderTest . java to improve test reliability by allowing more time
updated the ` escapeDatabaseObject ` method to accept a ` Class < ? extends DatabaseObject > ` parameter and refactored related methods to
added a boolean variable ` inputChanged ` and modified the condition in ` MaterialRenameDialog . java ` to conditionally check if the material title
added unit tests for the ` setState ` method in ` ShadowDisplayTest ` and implemented the ` setState ` method in ` ShadowDisplay ` to
added a new interface ` DirectInvocationService ` and refactored ` Dispatcher ` to handle direct invocation logic to improve flexibility in handling direct
added support for " ^ x " and " ^ y " keys in GlobalKeyDispatcherW . java to enhance key matching capabilities for improved
updated SQL query construction for pg _ catalog and pg _ class pkic based on server version to ensure compatibility with pg _ catalog and pg _
removed the nullable variable ` message ` from the ` QueueChannel ` class to simplify the code by eliminating unnecessary null checks
rename ` jarPath ` to ` pathUri ` for clarity to improve code readability and maintainability
added support for handling Jenkins nodes in the RemoteCollector initialization to enhance flexibility in managing monitoring paths based on the application name
refactor ` HeadersBeanDefinitionParser ` to use a method for resolving ` disabled ` and ` defaults - disabled ` attributes to improve attribute resolution
log4j2 - 1343 fix error message in protobuflogreader
shutdown the nacos nacos service when the deployment fails
camel - MyBatis : fix switch / cases indentation see camel - 14540
refactor GoAwayGenerator , GoAwayBodyParser , and GoAwayGenerator to use a dedicated writeStatusCode method to improve code
updated JSON serialization in AuditEventTests . java and added assertions in AuditEventTests . java to improve clarity and ensure correct JSON representation of
updated return statements in Interpolation . java for better readability to improve code clarity and maintainability by reducing redundancy
changed the path construction from " / defaults / " to " / defaults / " in ForgeWorldEdit . java to ensure the correct path
updated the way the dx executable is added in DxStep . java to ensure the correct executable path is added to the builder
added assertions to verify equality of PointRangeQuery instances in TestPointQueries . java to ensure correct equality checks for PointRangeQuery instances
hbase - 17446 fix testhfilecleaner to work with the same region ( krisztian kasa ,
added a check for the filename before setting the file label in ReceiveFileConversationComponent . java to ensure that the file label is only displayed when
[ hotfix ] [ runtime ] remove unnecessary throw statement in jedisclustercommand
[ hotfix ] [ table - planner - blink ] set chainingstrategy to ALWAYS in rowtimeminibatchassgineroperator
updated the ` setDecorated ` method to use ` PathBasedFilterInvocationDefinitionMap ` instead of ` RegExpBasedFilterInvocationDefinitionMap `
refactor QMapBenchmark and QMapReadRandomKeyBenchmark , QMapReadSequentialKeyBenchmark , and QMapWriteBenchmark classes to improve
added a new HashMap for G _ SCH _ B in HybridPlotWorld . java to initialize the G _ SCH _ B map
added a check for empty fields and refactored identifiers handling in GroovyEngine . java to improve robustness by handling cases where fields are null
added drawable setting for the GeoAngle object in AlgoDependentNumber . java to ensure the drawable is properly set for the number ' s drawable
added configuration parameters for server socket keepalive in HiveConf and modified the server transport initialization in HiveServer to enhance flexibility in socket management by allowing
renamed the method ` getRenameEmptyFiles ( ) ` to ` isRenameEmptyFiles ( ) ` in ` FileRenameAction . java
remove logsql ( ) from dmlhandler so that it can be log in debug mode
refactor RealtimeSegmentRelocator to use TimeUtils for improved time formatting to enhance code readability and maintainability by reducing
cloudstack - 1741 : fix checkstyle violation in createvpccmdbyadmin
updated the calculation of windowAlpha in WindowTransformSwipeHandler . java and modified condition in FloatingIconView . java to ensure windowAlpha
updated error message from " 3.0 . xsd " to " 4.0 . xsd " in SecurityNamespaceHandler . java to clar
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the code
( chore ) camel - disruptor : make private final
added a new test class ` TestConfigureUDF ` and modified ` ExprNodeGenericFuncEvaluator ` to handle UDF configuration to enhance testing capabilities
updated regex pattern matching in LogMessageWaitStrategy and added a new test for the pattern in LogMessageWaitStrategyTest to ensure proper handling of
removed redundant variable declarations from logger initialization in LOG . java to streamline code by eliminating unnecessary variable declarations
rename ` updatePurgedShardNodes ` to ` deletePurgedShardNodes ` and update related SQL queries to improve clarity and consistency in
updated JavaLanguageHandler version from " 16 " to " 17 " in JavaLanguageModule . java and added a new version " 17 - preview
added a constant for waiting for compression jobs in TimeBasedRollingPolicy and modified the lossiness factor in FileAppenderResilienceTest to improve
added a null check for lastLocationAccess in VolatileReadNode . java to avoid potential NullPointerException when accessing lastLocationAccess
added a method ` getSteps ( ) ` to return a list of steps and modified the variable name from ` stepName ` to ` step
removed duplicate fields fromBase58 and toBase58 in TronJsonRpc . java and TronJsonRpcImpl . java to streamline
refactor currency pair creation logic in BitstampAdapters . java to improve code readability and maintainability
updated the duration calculation in LongTaskTimer to use baseTimeUnit ( ) instead of TimeUnit . NANOSECONDS and added assertions in MeterRegistry
[ hotfix ] [ table - planner - blink ] do n ' t support hashpartitioner in reducekeypairtranslator
replaced ` colorValues ` and ` colors ` with ` CharSequence ` in ` HostEditorActivity . java ` to improve type safety and simplify
rename ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and update related methods to improve clarity and consistency in naming conventions
added a constant MAX _ TWEETS _ IN _ CONVERSATION and modified the loop condition in ExpansionViewHelper . java to
increased the refresh interval from 1 to 2000 in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow more time for the map refresh
http : / / issues . apache . org / jira / browse / amq - 4892 - fix queue . getpersisted
updated method call from ` getClass ( ) . getImplementationTitle ( ) ` to ` GlowServer . class . getImplementationTitle ( )
replaced the ` grow ` method with a new ` grow ` method in ` DataIO . java ` to improve code readability and maintain
removed unnecessary import of DataOutputStream in GdxSetup . java to streamline code by eliminating unnecessary dependencies
added a method ` getSubmittedFileName ( ) ` to the ` AttachmentHttpBinding ` class to provide a way to retrieve the submitted file name
added a call to markReadForLoad ( ) in LauncherFragment . java to ensure proper handling of read data during loading
removed unused imports and refactored exception handling in JarInstrumentor . java to improve code clarity and maintainability by eliminating unnecessary
added a method to check for spill possibility in HashAggTemplate . java to ensure that AGGR partitions are flushed before proceeding
changed the declaration of ` getDocStoreSegment ( ) ` from ` final ` to ` final ` in ` IndexWriter . java ` to ensure
added a default nameid format to the supportedNameFormats list in SamlProfileSamlNameIdBuilder to ensure that the default name format is
added redirect handling and error messages in ChangePasswordPage . java to improve user experience by providing clearer feedback when password change is aborted
modified the closing brace in Deadlock2 . java to improve code readability and maintain consistency
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a maximum idle time for the N
deleted the FontScalingTest . java file to the test class is no longer needed for the project
added validation for filter begin and end dates before and after in RRD4jPersistenceService . java to ensure that only valid filter dates are
added a check for negative vector counts in GenericUDAFComputeStats . java to avoid unnecessary processing when numVectors is negative
test : migrate executablereftest to junit 5 ( # 1369 )
added null checks for view and glassPane in JLayer . java and created a new test class bug6994419 . java to
camel - 1748 : add support for wire tap expression in processor and wiretap definition .
changed the access modifier of the setAction method from public to protected to restrict access to the method for better encapsulation
added a new ` TOPN ` option to the ` PlannerSettings ` class and implemented it in ` PushLimitToTopN ` to
[ java ] remove unused aeronDirectoryName variable from various logging test classes to simplify the code and improve readability
fixed - rbatch . ping ( ) and rbatch . ping ( ) do n ' t call redisconnection . setqueued ( true )
refactor ` getConfVarInputStream ` and ` LoopingByteArrayInputStream ` to use ` FileOutputStream ` instead of ` ByteArrayOutputStream ` and ` IOException `
updated the method call from ` Device . defaultDevice ( ) ` to ` criteria . getDevice ( ) ` in ` createModel ` to ensure the
removed the onCreateOptionsMenu and onMenuItemSelected methods from SimulationViewer . java to streamline the menu inflation process by elimin
refactor CertificateValidator class to improve code readability to enhance maintainability and facilitate future updates
updated the path for the " hawtio . dirname " property from " user . home " to " / . hawtio
added a check for empty comments and whitespace in the Space class to ensure proper handling of empty whitespace scenarios
changed ` mClosed ` , ` mActualDictionary ` , ` mNativeDictionary ` , and ` ResourceBinaryDictionary ` classes to be volatile
removed stack trace printing from ContextHandler . java to streamline error handling by eliminating unnecessary stack trace
refactor CustomItemDropTest to extend BaseTest and update package structure to improve test organization and organization of the CustomItemDropTest class
added a check for the existence of a partition in DDLTask , DDLSemanticAnalyzer , and AddPartitionDesc classes to ensure that only
refactor input handling in NfsSecondaryStorageResource to use Arrays for improved readability to enhance code clarity and maintainability by redu
[ java ] remove the local control request stream id from EchoServiceNode and BasicAuctionClusteredServiceNode to simplify the code by elim
updated element names for " Intersect " , " Intersects " , and " fes : SpatialOperator " in CapabilitiesTransformer . java
added import for LuceneTestCase and @ LuceneTestCase . AwaitsFix in BasicDistributedZkTest . java to
added a condition to check if the last valid position is within a valid range and adjusted parsing request line phase logic to ensure proper handling of pre
[ java ] set the default value of isIngressExclusive from true to false to disable the isIngressExclusive flag for improved clarity and
hbase - 11818 hbase . hbase . cache . keys do not exist in hfile . block . cache . keys (
refactor JSONRecordReader to use currentRecordNumberInFile ( ) instead of recordCount + 1 to improve clarity and maintainability of
added functionality to filter out year items from merged items in CategorizationFragment to improve user experience by filtering out year items from the merged items
updated drawColor calls from 0x00000000 to 0 in CacheableTextView , CellLayout , and HolographicOutlineHelper classes to
added a check for OpenGL SDK version in Mesh . java to ensure compatibility with OpenGL ES 2.0 and ensure compatibility with OpenGL
set the ActionContext to null in BackgroundProcess . java to ensure the ActionContext is set to null to avoid potential null pointer exceptions
added a new method ` getUnescapedName ` to retrieve the database name and modified related methods to include ` dbName ` and ` tableName ` to
added connection timeout configuration and modified the count variable in TestConnections . java and StubConnection . java to ensure that the count variable is immutable and
added percentile assertions in TestHiveAggregationQueries . java to validate percentile functionality in aggregation queries
updated the DEFAULT _ IDLE _ TIMEOUT constant and refactored idle timeout handling in WebSocketChannel and WebSocketChannel classes to improve clarity and
updated the way shares are retrieved in FileDetailSharingFragment to use the user ' s platform account to ensure shares are retrieved based on the user
replaced instances of ` Enumeration ` with ` Enumeration < InetAddress > ` for better type safety in ` Inet6Address . java ` to improve
replaced the method ` disableView ` with ` setButtonEnabled ` for clarity and consistency to improve code readability and maintainability by
updated session and token checks to use ` id ` instead of ` session ` to improve clarity and consistency in session identification checks
replaced ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java `
change the default value of UseExceptionProbability from true to ___ _ to improve clarity and maintainability of the code
updated the color retrieval logic in PredictedAppIcon . java to handle themed icons to ensure correct color representation for themed
guacamole - 134 : fix mysqluser . touserwithblobs ( ) to return a userwithblobs ( )
added " centre " alias to the aliases list in Middle . java to support center and center components in the application
added a method to inject DirectUpload in CommonsApplicationComponent and changed the DirectUpload class visibility to public to allow external access to the Direct
added space offsets for left and right axes in BarChartActivity and BarLineChartBase , and modified legend positioning logic in BarLineChart
added support for flavors in AndroidLibraryDescription and JavaLibraryDescription in AndroidLibraryDescription and JavaLibraryDescription to enhance compatibility with Java library flav
added request parameters for operation event status type in OnlineHubService and modified services initialization in CompositeLogService to ensure proper handling of operation event
added debug logging for parameter annotations and modified visibility logic in DexAnnotation . java to improve debugging capabilities and ensure correct annotation handling
( chore ) camel - jmsio : remove @ startbundle and @ setup annotation
updated the process initialization to use a classpath variable instead of a hardcoded string to improve code readability and maintainability by using a more d
updated the path construction for " values " and " res " in PackageResourceLoader . java to ensure consistent path formatting for Android devices
refactor methods in DataSet . java for clarity and consistency to improve code readability and maintainability
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
updated ` ShouldHaveMessage ` and ` ShouldHaveMessage _ create _ Test ` to use ` escapePercent ` instead of ` getStackTrace ` to
added a method to retrieve the URI in JCache and updated JCacheManager to use this method to improve code readability and maintainability by central
update log level for ActivitiTaskAlreadyClaimedException in CommandContext . java to reduce log level when the exception is already claimed
added a conditional statement to the ALPNClientConnectionFactory instantiation to improve code readability and maintainability
replaced the variable ' value ' with ' getBaseValue ( ) ' in EntityPropertiesPacket . java to simplify the code and improve readability
updated SonosAudioSink to check for handler initialization before playing sound URI to improve error handling and ensure sound URI is properly played
increased the timeout duration from 500 milliseconds to 5 seconds in multiple test files to allow more time for tests to complete
change log level from info to debug in LightThingHandler . java to improve logging clarity for better debugging
refactor AsyncJobManagerImpl and SyncQueueManagerImpl to improve execution handling and logging to enhance error handling and provide clearer logging during job
updated ` Reporter ` and ` ReturnsSmartNulls ` classes to accept an additional ` Object ` parameter to enhance flexibility in exception handling by allowing
rename ` Frame ` to ` DataFrame ` for clarity to improve code readability and maintainability
updated formatting in multiple package - info . java files to improve code readability and maintain consistency
added a check for empty physical column names in OrcPageSourceFactory and created a new test case in TestHiveFileFormats to ensure
added a method to mix playback using methCla . mixPlay to enhance playback functionality for better performance
refactor JComponent and SynthTextPaneUI to improve code organization to enhance maintainability and readability of the code
corrected the calculation of ` firstConfirmedCenter . getX ( ) ` in ` FinderPatternFinder . java ` and ` QRCodeBlack
simplified the condition for checking leadingIncludePaths in PreprocessorDelegate . java to improve code readability and maintainability
renamed the method ` testMatrixVectorMultiplicationShouldUseBrackets ` to ` matrixVectorMultiplicationShouldUseBrackets ` and added a new
added multiple " find " and " findAll " elements to the SelenideElementProxy class to enhance functionality by allowing multiple elements to be processed
updated the calculation of ` getMaxSupportedChannelCountForPassthroughV29 ` to use ` sampleRate ` instead of ` format . sampleRate `
refactor XSSFName class to improve reference and formula handling to enhance code clarity and maintainability by using a more descriptive method
increased the target value from 60000 to 90000 in HighDimensionsTest . java to accommodate larger scale factors for improved
updated the condition from ` val . split ( constraints [ i ] . getValue ( ) ) . length ! = 0 ` to ` val .
added a new test class ClassPathXmlJobRegistryContextTests to verify the functionality of ClassPath XML job registry to ensure correctness of job
changed the type of ` mHistoricTimes ` from float to long in ` MotionPauseDetector . java ` to accommodate larger values
camel - 12320 - camel - restlet - add advanced option to restlet endpoint ( # 12320 )
camel - 14263 : camel - log - endpoint - add showout property to logendpointbuilder
refactor ` submitTraceEvent ` to ` writeChromeTraceMetadataEvent ` and introduce a new method ` writeChromeTraceMetadataEvent `
added a condition to check if the order status is not CANCELED and FILLED are not REJECTED in the limitOrders list to
added pixel offset checks and validation in BufferedImage and LCMSImageLayout classes to ensure correct image layout behavior for different pixel formats
refactor timestamp handling in Event . java and JrubyEventExtLibrary . java to use JrubyTimestampExtLibrary . RubyTimestamp to improve
added a check to return a resource if the path ends with " / " in ContextHandler . java and a corresponding test in WebAppContextTest
updated ScriptFunctionImpl to use " TypeErrorThrower " instead of " TypeErrorThrower " to improve clarity and consistency in error handling
refactor scroll handling logic in JEditTextArea . java to improve clarity and functionality to enhance code readability and maintainability by using
added a null check for callerLoopScope before setting guards and stage flags in GraphDecoder . java to avoid potential NullPointerException when callerLoopScope
updated import statements in SniperPrettyPrinterJavaxTest . java to use the latest JUnit version to ensure compatibility with the latest
refactor URLOutputStream initialization to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
added @ Entity annotations to Mail . java to enable entity management in the Mail class
updated the default value of ` includeTablespace ` from ` false ` to ` true ` in the ` Main . java ` file to ensure
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to the buffer for data and values in the Counter
added a check for reading non - empty values in ScanBatch and implemented a test for JSON directory handling in TestJsonReader to ensure proper handling
added a null check for internal custom name before failing the failure strategy in StringSubject . java and updated test cases in StringTest . java to
updated the comparison logic in LibUtils to use a regex pattern to improve code readability and maintainability by reducing redundancy
changed exception handling from ClassNotFoundException to Exception in JrtJavaBasePackages and PackageHelper to improve error handling for better error management
hbase - 11818 check if file system be in safemode , wait on safemode
updated error message formatting in TranslatingJavacPhaseTracer . java to improve clarity of error messages for better debugging
refactor DefaultPluginCache to use a cloned copy method for PluginDescriptor objects to improve code clarity and maintainability by centralizing the cache
refactor contact status handling in OperationSetPersistentPresenceJabberImpl . java to improve clarity and functionality to enhance code readability and
refactor ` withResourceAndParams ` method to use ` withResourceAndParams ` instead of ` withResourceAndParams ` to improve code
added a new test class AccountInfoFetchIntegration for fetching account information to ensure proper functionality of account information retrieval in the BTCE exchange
added mouseWheel method to VDUInput and vt320 classes , and modified mouseWheel logic in TerminalView to enhance mouse event handling
updated library path handling in Natives . java to include a conditional check for needJInput before setting the library path to ensure compatibility with the
# 1188 - remove columnhstore . java ( # 1188 )
added PLAYER _ SKIN _ FLAGS configuration in GlowPlayer and MetadataIndex classes to enhance player management capabilities in the metadata
replaced ` RequestFieldMatcher ` with ` Logger ` and updated the master URL handling in ` LoadBalancerWithServiceTests . java ` to improve
fix nullpointerexception in mapservice . getmember ( ) and mapservice . getmember ( ) .
replaced ` System . getProperty ( " os . version " ) ` with ` AccessController . doPrivileged ( new GetPropertyAction ( " os .
added a configuration file suffix property and updated its usage in TemplateEngineFreemarker . java to enhance flexibility by allowing customization
updated hash code calculation in SelectMessageQueueByHash . java and added new order assignments in SelectMessageQueueByHashTest . java to ensure
updated the ` ToolbarPanel ` class to use an ` AnimationCallback ` for animation handling to improve animation responsiveness and maintainability by
replaced ` EasyBind . bindConditionally ` with ` EasyBind . when ` in ` StyledTextAreaVisual . java `
refactor ` PrebuiltAppleFrameworkDescription ` , ` CxxBinaryDescription ` , and ` CxxGenruleDescription ` classes to
refactor JpaCountQueryCreator and PartTreeJpaQuery to use ParameterAccessor instead of SimpleParameterAccessor to improve code clarity and
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added a check for array type in DataUtilities and created a corresponding test for default values in DataUtilitiesTest to ensure proper handling of default values
added a null check for the address before creating a new SSL engine to avoid potential NullPointerExceptions when the address is null
updated assertions in TestFSTableDescriptors . java to use assertTrue instead of assertEquals to improve clarity and correctness of cache hits
added a new method ` wdDeleteCookie ` to ` ExportedWebDriverFunctions ` and refactored cookie deletion logic in ` InternetExplorer
added a new boolean field ` mHasEndedLauncherTransition ` and modified the logic in ` AbsSwipeUpHandler ` and ` Recent
updated HTML header and title format in HTMLListWriter and HTMLWriter classes to ensure proper handling of meta charset in HTML titles
refactor IndexReader class to improve code structure to enhance maintainability and readability of the code
updated the maximum length of statistics key prefix from 200 to 150 in HiveConf . java and modified path separator handling in Utilities . java to improve
refactor BasicComboBoxUI to extend BasicComboBoxUI and create a new test class for bug6337518 to improve code organization and ensure
refactor TestRandomAccessBuffer class to improve code readability to enhance maintainability and facilitate future updates
refactor UserInfoActivity class to improve code structure to enhance maintainability and readability of the code
added HomeContentProvider import and notifyChange calls in multiple service classes to ensure proper handling of HomeContentProvider changes in the application
added state management functionality to BubbleTextView and Launcher classes to improve UI responsiveness and responsiveness during activity transitions
updated ` getFallbackResponse ` method signatures to include ` Throwable ` parameter across multiple classes to enhance error handling by providing a more informative error
updated the condition to check if the environment ' s _ compile _ only is set to true to ensure the correct destination directory is used for compilation
added null checks for tags before accessing CHANNEL _ TAG _ INDEX and ENTITY _ TAG _ INDEX to avoid potential NullPointerExceptions during tag retrieval
updated JAVA _ REGEX _ SPECIALS string formatting and added new test cases in TestSqlPatterns . java and TestSqlPatterns . java to improve
added functionality to set the action bar title in FileActivity and update it in FileDisplayActivity to enhance user experience by providing a clearer title
updated the method call from ` Iterables . getOnlyElement ( convertedElements ) ` to ` Iterables . getLast ( convertedElements ) ` in `
updated the Schedule annotation from " * " to " 0 " in CleaningService . java to align the Schedule annotation with a default value for
refactor TransactionalValidationListener to handle partitioned tables and improve table path retrieval to enhance validation logic for partitioned tables and improve error handling
[ hotfix ] [ doc ] fix typo in replicationhandler and snappuller
changed the type of generatedKey from int to long and modified SQL statement execution in ShadowSQLiteDatabase . java and SQLiteDatabaseTest . java
simplified the return statement in SimpleReferenceCache . java to improve code readability and maintainability
updated error messages in multiple test files to reflect failure scenarios to improve clarity and consistency in error reporting
increased keepAliveTimeoutShared and keepAliveTimeoutCustom fields from 60 to 10 in WebClientFactoryImpl . java and modified thread pool initialization to
deleted the HttpTestAccount001 . java file to remove unused code to streamline the codebase
updated exception handling in Dispatcher . java and refactored DispatcherTest . java to use try - with - resources for resource management to improve error
camel - 14836 : camel - cxf - allow to set the xop to be send to the cxf message . thanks
added a case for ' ~ ' in ClientUtils . java to handle both ' ~ ' and ' ~ ' characters to ensure proper handling of
camel - slack : use java . time . duration instead of long for delay
refactor block drop handling in BlockUtil . java to utilize a new dropChance mechanism to improve user experience by allowing users to drop
updated the layout parameters in TranscodingTab . java from 4 * ( pref , 3dlu ) to 5 * ( pref , 3dl
added a new file ` bug8057791 . java ` that implements a visual representation of a list using Nimbus ' s Look
updated flags field assignment logic in LambdaToMethod . java and added a new class LambdaInterfaceStaticField . java to improve code clarity and
refactor subscription manager creation and methods factory in RunnerBuilder . java and add a new test in RunnerBuilderTest . java to improve code cl
replaced the length check with a null check for the to variable to improve null safety and prevent potential NullPointerExceptions
refactor ParquetFixedWidthDictionaryReaders to handle dictionary read logic and improve read length calculation to enhance readability and maintainability of the code
updated calculations for top and bottom calculations in PortraitPagedViewHandler . java to ensure correct calculations for task height and divider dimensions based
added Log and LogInterceptor classes for improved logging functionality to enhance logging capabilities for improved debugging capabilities
updated dump string formatting in QueuedThreadPool . java to improve readability to enhance readability and maintainability of the dump output
refactor CacheGenerator and CacheProvider to use Implementation instead of ReferenceType to improve clarity and consistency in handling cache implementation properties
updated the calculation of the reference map to include totalFrameSize in the createReferenceMap method to ensure the reference map accurately reflects the
refactor TypesafeConfigurator class for improved readability to enhance maintainability and clarity of the code
camel - 16400 : camel - itest - add a karaf test for camel graphql
updated the main method name from " main " to " bug1 " and " bug2 " in RFE2891944 . java
replaced ` URLEncoder . encode ` with ` entry . getKey ( ) ` and ` entry . getValue ( ) ` in ` HttpClientInt
refactor unsupportedPlatformTool to implement a new UnsupportedPlatformTool class to improve code clarity and maintainability by encapsulating the UnsupportedPlatformTool
updated the loop count calculation to use int instead of double for improved readability to enhance code clarity and maintainability by using a more
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide a way to retrieve the size of the
refactor KieAddressManagerTest and AddressManagerTest to throw NoSuchFieldException and set index to 0 in multiple test classes to ensure proper access
updated column and row specification strings in VLCVideo . java for consistency to improve code readability and maintainability by using a more descriptive
updated links from " bisq " to " bitsquare " in multiple Java files to ensure compatibility with the new bitsquare package structure
updated the AUTHORITY string from " com . klinker . android . talon . provider " to " com . klinker
updated user configuration directory initialization and modified Maven repository handling in MBoot . java and MavenCli . java to ensure the correct repository path is used
added a call to glBindBuffer in VertexBufferObjectWithVAO . java to enable binding of array buffer to the buffer handle for impro
refactor ServerHttpSecurity class for improved security handling to enhance security efficiency and maintainability of the code
added JUnit @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests that are no longer needed
added default headers to HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP client configuration by allowing customizable HTTP headers
added new classes ` ThingsboardCredentialsViolationResponse ` and ` UserPasswordNotValidException ` to handle credential violation responses to improve error handling
deleted the NoOpConfigPathGetter . java file to the codebase was no longer needed
replaced ` Codec . base16Decode ` with ` Bytes . fromHexString ` in ` EngineAuthService . java ` to improve compatibility with
replaced CascadedStyle with constants and added null checks for float properties in FloatUtil . java to improve code clarity and ensure proper
planner - 1349 add miss import for planningfactproperty and planningscore
replaced instances of ` CaseInsensitiveHeaders ( ) ` with ` MultiMap ( ) ` in ` RestUtils ` and ` RestUtilsTest
rename ` enc ` to ` charset ` in multiple classes to improve clarity and consistency in naming conventions
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to ensure that the
replaced ` valueOf ` with ` compareTo ` in ` ExpandableUploadListAdapter . java ` and ` FileStorageUtils . java ` to
replace error logging with debug logging for HTTP responses in DefaultJdkHttpClient and JdkBlockingHttpClient to improve performance by reducing unnecessary error logging
updated import statements in LegacyAuthenticationHandlerAdapter . java to improve clarity and consistency in authentication handling
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
filtermanager : do n ' t remove filter that have own public key
added a static method ` wrap ` to ` BCPGInputStream ` and removed unnecessary imports in ` PGPKeyRing ` and ` PGPSecretKey
replaced DataOutputStream with BufferedOutputStream in MinimalLockingWriteAheadLog . java to ensure proper resource management and prevent potential memory leaks
added a new test method ` testSelectAllFromView ` and modified column qualifier handling in ` HiveBaseResultSet ` to improve test coverage and
refactor FocusTransitionTest class for improved clarity to enhance maintainability and readability of the code
updated import statement for GWT from org . gwtproject . core . client . GWT to com . google . gwtproject . core .
added a condition to check if the sourceTask is a MapRedTask before retrieving counters to ensure that counters are only retrieved when the sourceTask
updated the variable name from ` _ readListener ` to ` _ readListener ` to improve clarity and consistency in naming conventions
refactor color handling in AppearancePanel to use a separate method for setting component colors to improve code readability and maintainability by centralizing
updated the constructor parameter from ` false ` to ` hidden ` in ` TaskHelper . java ` to ensure proper handling of hidden tasks in the
http : / / issues . apache . org / jira / browse / amq - 4892 - fix failovertimeouttest .
pdfbox - 4892 : avoid potential memory leak when create a tiff file
added import statement for DefaultParameterHandler in LanguageDriver . java to enable customization of parameter handlers in the database
refactor loop depth handling in LinearScanWalker for improved clarity to enhance readability and maintainability of the code
added a new file MicronautAstBuilder . java to handle Micronaut AST compilation to enable testing of Micronaut
refactor PgResultSet and PgStatement to use a separate method ` closeInternally ( ) ` to improve code readability and maintainability by
change the default value of ` serviceAdvisorType ` from ` null ` to ` ServiceAdvisorType . PYTHON ` to ensure compatibility with the
replaced instances of ` resolver ` with a ` ThreadLocal < ResolvingDecoder > ` in ` GenericDatumReader . java ` to improve
changed the type of the ` Collection ` parameter from ` Collection ` to ` List ` and modified the return types of ` keySet ( ) `
added a memo byte array to the addOutput method and updated assertions in SendCoinShieldTest . java to utilize a random byte array
added a method ` setPersonalisation ` to ` SkeinParameterSpec ` for formatting date and distinguisher in ` Skein
removed unnecessary whitespace in CodeGenerator . java to improve code readability and maintainability
removed the ` percent ` parameter from the ` scroll ` method in multiple classes to simplify the scroll method signature and improve code clarity
changed the access modifier of the ` pointer ` variable from private to public and added methods for resetting the ` pointer ` variable to allow access to
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to improve clarity and consistency in naming conventions
refactor CastExpression to use wildcard imports and improve type handling for BOOLEAN types to enhance code readability and maintainability by using a wildcard import
refactor accepts handling in AbstractResource . java to use a boolean variable for better readability to improve code clarity and maintainability by redu
added a new boolean variable ` false ` in ` TaskView . java ` to control the behavior of the TaskView functionality
added a method to check if the column type is auto - increment in CreateTableChange . java and implemented the isAutoIncrement method in Liqu
changed the errorText field from " errorText " to " Internal Server Error " to provide clearer context for error messages related to Internal Server
updated import statements in DeadListenerTest . java and LocalManagementTest . java to use Jdk ' s TestLibrary ' s Utils class to
replaced ` toSimulate . add ` with ` toSimulate . push ` in ` BasicEventSimulationEngine . java ` to ensure
added support for ajp port in GitBlitServer and updated related connector handling in GitBlitServer to enhance flexibility in managing A
added type coercion logic in TransTypes . java and created Intersection03 . java with assertions in Intersection03 . java to ensure
rename EmbeddingTest class to EmbeddingITest to improve clarity and consistency in naming conventions
added a native method ` startToolkitThread ( Runnable thread ) ` to check if the thread is already started before starting it to ensure that
added a ForkJoinPool to the BundleContentSubstitutedLocalizationSupport constructor and modified LocalizationFeature to use it to enhance thread safety and
added functionality to hide the surface based on the platform in the PApplet class to enhance user experience by allowing users to hide the surface based on
updated the file path from " RecordTransformationTest " to " getClass ( ) . getName ( ) " in AbstractRecordExtractorTest . java to
added support for ` fullNodeHttpEnable ` and ` solidityNodeHttpEnable ` in multiple classes to enable HTTP configuration based on configuration settings
added a service property to GoogleCloudFirestoreTicketDocument and modified GoogleCloudFirestoreTicketRegistry to utilize it to enhance ticket management by
refactor Generate class to improve code readability to enhance maintainability and facilitate future updates
updated the ScalarFunction annotation in JsonFunctions . java and added unit tests for JSON null arguments in JsonFunctionsTest . java to ensure proper handling
added a constant for DOTS _ ONLY in BadgeRenderer and updated related conditions in IconPalette and PopupContainerWithArrow classes to improve
removed the ` final ` modifier from the ` getConfiguration ` method in ` FreemarkerManager . java ` to simplify the method signature
added a new test method ` testInvalidExcludedPackageNamePatterns ` to ` OgnlUtilTest ` to ensure that invalid excluded package patterns are
added support for " mac " and " iphone " devices in AppleTest . java and IdbRunTestsStep . java to enhance
updated DefaultHttpClientFilter and TestDefaultHttpClientFilter to use ProduceProcessorManager instead of InvocationType and improved error logging to enhance error logging and
added null checks for mScript in AllAppsView . java to prevent potential NullPointerExceptions during initialization
added a boolean flag ` TEXT _ BURN ` and modified the conditional check in ` Utilities . java ` to conditionally set shadow layer to
added teardown methods to TestColumnAccess , TestReadEntityDirect , and onetimeTeardown methods in TestColumnAccess and TestReadEntityDirect
added a method to retrieve a parser from the parsers map to improve code readability and maintainability by centralizing parser retrieval
updated the ` fastpath ` condition in ` BoundedLocalCache ` and added unit tests in ` BoundedLocalCacheTest ` to improve cache
updated RawConnection to extend WebSocketConnection and added complete and flush methods to improve WebSocket connection handling and enhance connection management
added multiple test methods for all assertions in SoftAssertionsPerfTest . java to enhance test coverage for various assertions
added a new constant ` TEST _ FAILURES _ EXIT _ CODE ` and modified the ` execute ` method in ` PythonRunTestsStep `
updated the handling of x advances in GlyphLayout . java to conditionally set the xAdvances array based on markupEnabled to ensure that
refactor score assertion logic in TestBooleanRewrites . java to utilize Map and Set for better readability to improve code clarity and
changed the method of retrieving the enclosing class from ` getEnclosingClass ( ) ` to ` getSuperclass ( ) ` in ` TypeHandlerRegistry .
refactor player connection flush handling in UpdateManager , Player , and PlayerSocketConnection classes to improve code readability and maintainability by reducing
added a check for ` mStarted ` before removing onDrawListener calls in ` Launcher ` and ` LauncherAnimUtils ` classes to
refactor CheckIndex , BlockTreeReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
updated import statements in ReplicaAssigner . java to use wildcard imports and added a check for NOT _ APPLICABLE to improve code readability
updated the default value of ` getBoolean ` from false to true in ` RendererConfiguration . java ` to enable media validation based on the default value
added a method ` isAcceptable ` to handle interceptor types in ` BeanDefinitionInjectProcessor ` to ensure proper handling of annotated methods in the
added permission checks and partition operations in FolderPermissionBase . java to ensure that permissions are properly validated and validated for partition operations
updated the ` handleProviderRegistered ` method to include a ` dueToRegistrationStateChanged ` parameter and added a new ` publishStatusInternal `
updated the random color calculation in PastelColor . java to use a constant for colorBase to improve code readability and maintainability by
refactor ScriptEngineFactory to improve code structure to enhance maintainability and readability of the code
refactor HolographicViewHelper to use a separate method for creating original and outline bitmaps to improve code readability and maintainability
added null and empty check for request method in CloudClient . java to improve robustness by preventing potential NullPointerExceptions
refactor the ` getTag ` method to accept a ` containingPhrase ` parameter and improve position handling in ` MultiWordPreprocessor . java `
removed unnecessary import of IOException in IOChannelUtilsTest . java to streamline code by eliminating unnecessary dependencies
added conditional logic to retrieve the output format class based on the class name to ensure correct class loading based on the storage handler ' s output format
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
updated the length validation logic in DOMBuilder . java to ensure proper handling of negative characters in the input stream
refactor ClusteringCoefficient and EigenvectorCentrality classes to use HierarchicalUndirectedGraph instead of HierarchicalUndirectedGraph to improve
camel - 15836 : camel - translate - add verification error if a service be not support in this region
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing ` InterfaceWithStaticAndDefaultMethods ` and implemented a default method for
[ camel - 14836 ] camel - defaultkeyselector should use camelcontextaware instead of camelcontextaware
replaced ` catch ( Throwable t ) ` with ` catch ( Throwable t ) ` in ` LogResolverBean . java ` and ` Resource
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
updated JGIT _ VERSION from " 201106090707 - r " to " JGit 1.1 . 0 " and
refactor client key assignment logic in HttpClientIntroductionAdvice . java to improve clarity and consistency to enhance code readability and
added TransformerParser and TestBean classes for handling Transformer and MethodInvokingTransformer in IntegrationNamespaceHandler to enable proper handling of methodinvoking
updated BACK _ FACTOR to REWIND _ TIME and modified duration checks in ResumeObj . java to improve clarity and maintainability of
added isScrollWheeling ( ) method to CodenameOneImplementation and its implementation in Button and JavaSEPort classes to ensure proper
updated usage string formatting in UtilityCommands and DocumentationPrinter classes to improve readability and maintainability of the usage output
change attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to improve clarity and consistency
replace seqFiles and unseqFiles with mergeFiles in CrossSpaceCompactionResource and RewriteCrossSpaceCompactionSelector to improve clarity and
removed duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
refactor rule handling logic in ProjectPropertiesModelImpl . java to improve clarity and consistency to enhance code readability and maintainability by reducing
refactor synchronization logic in AbstractSootFieldRef . java for improved readability to enhance maintainability and clarity of the code
added ElasticNamingConvention to the ElasticMeterRegistry class and updated IndexBuilder constructor to use it to enhance flexibility in naming conventions for meter
added methods to manage controller listeners and job length estimate in IController and TinyGController to enhance functionality for managing controller events and job length
added a new test method ` hugeHorizontalRule ` in ` PathologicalTest . java ` to verify the rendering of a huge horizontal
replaced System . out . println statements with TTY . println statements in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to
updated multiple Java files to improve code organization and clarity to enhance maintainability and readability of the codebase
corrected a typo in the condition from ` frameLength ` to ` frameLength < = 0 ` to ensure that ` frameLength `
replaced ` float ` and ` int ` values with ` defaultValue ` in ` IntFloatMap ` and ` IntIntMap ` classes to
refactored icon handling in ImageDownloadService to use Display . getInstance ( ) for asynchronous operations to improve code reliability and maintainability by
added null check for registered in HandlerRegistration . java to prevent potential NullPointerExceptions when registered is null
removed the ` hasNextSibling ( ) ` method from ` AttributeNode ` , ` DocumentNode ` , and ` ElementNode ` classes , and
fixed - nullpointerexception in redisdistributedmapcacheservice . getresults ( ) should n ' t throw npe . #
updated logging statements in MobFileCache . java for clarity to improve readability and maintainability of log messages
refactor ColConvCCMTest class for improved clarity to enhance maintainability and readability of the code
refactor target and source variables in Check . java for improved clarity and consistency to enhance code readability and maintainability by reducing
pdfbox - 4892 : use generic type instead of generic type , a suggest by valerybokov
updated JSON serialization logic in Json . java to use asString ( ) instead of Float . toString ( ) and added a new X class for JSON
added a return statement to the GenericFileConsumer class to ensure proper handling of file operations during processing
replaced EventQueue . invokeLater with EventQueue . invokeLater in bug6638195 . java to ensure proper execution of the delegate
updated the calculation of maxSize in CompressExtension . java to correct the calculation of the maximum binary message size
adjusted steering values from - . 5 to . 5 in multiple test classes to ensure accurate representation of steering values in the
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve clarity and consistency in
replaced instances of ` java . sql . Date ` with ` java . time . LocalDate ` and ` java . time . Timestamp ` to
updated the VERSION constant from 2 to 3 and modified the metadata reading logic in ParseData . java to ensure compatibility with version < 3 and improve
refactor FlywayAutoConfiguration to use ConditionalOnClass and AbstractEntityManagerFactoryBean in FlywayInitializerJpaDependencyConfiguration to improve
added a sorted ( ) method to ClassesImpl . java to ensure that the classes are sorted for improved performance
added a method to retrieve the current stable state in LauncherStateManager and implemented a waitForLauncherCondition method in AbstractLauncherUiTest to improve
refactor SharedInformer class for improved readability to enhance maintainability and facilitate future updates
refactor TestCloseScope0 to use ResourceScopeImpl instead of Class for memory and resource scope to improve compatibility with newer Java versions and enhance
increased the test duration from 500ms to 5000ms in AdaptServerSocket . java to allow for more time for the server to complete
refactor CaptchaChannelProcessorTests to improve test coverage to enhance security and maintainability of the code
added a condition to update items based on the owner collection in MetadataImport . java to ensure that items are updated only when the owner collection is
added a retry mechanism to save a cache file after a specified number of retries to ensure that the cache file is saved after a specified number of
updated the instantiation of TrackingDirectoryWrapper from mergeDirectory to directory to improve clarity and consistency in directory handling
added test cases for various classes in UnusedImportsRuleTest , RuleTst , and UnusedImportsRule classes to ensure correctness of rule
added validation for insert overwrite queries on bucket partitioned Iceberg tables to ensure proper handling of insert overwrite queries on bucket partitioned tables
updated assertions in BootstrapTests to check for Legacy SAML keys instead of zone configuration to ensure tests correctly reflect the correct behavior for Legacy SAML keys in
updated the ` isAnonymousOrLocal ` method to check for non - static local types to ensure proper handling of anonymous and non - static local
refactor the method name from ` theAddressie ` to ` addressees ` and improve error handling for unexpected e - mail addresses to
removed WAITING _ FOR _ LINE _ COMMENT , WAITING _ TO _ LEAVE _ BLOCK _ COMMENT , and WAITING _ TO _
added IOException handling to the release method in IndexWriter , Lock , and SimpleFSLockFactory classes to improve error handling and ensure proper resource management
updated package name from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` in ` DataSourceInitializer . java
added a conditional check for unary operators in SpelExpressionTransformer and updated related logic in LiteralNode , OperatorNode , and MongoQueryMethod to
replaced the instantiation of ByteBuddy with TypeValidation . DISABLED in MockBytecodeGenerator . java to enable type validation for byteB
refactor ` JavacRoundEnvironment ` and ` AnnotationSetScanner ` to use ` TypeElement ` instead of ` DeclaredType ` to
added exception handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest and updated lock timeout in MySQL
refactor ` setSystemProperties ` method to remove unnecessary ` LogFile ` parameter and improve null checks to enhance code readability and prevent potential
added a method to check if a HTTP redirect status code is received and refactored the request handling logic in ServiceApiRequest . java to improve
added constants for SERVICE _ MAPPING , VERSION _ MAPPING , and APP _ MAPPING in ServiceCombConstants and MicroserviceFactory to improve code clarity
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the
changed DB _ PATH _ REGEX to static and updated database assertions in BaseAndroidTestCase . java and GeocodeHelperTest . java to improve
updated return statement to retrieve unread count from HomeDataSource to ensure accurate retrieval of unread counts for the current account
updated the test method name from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test for Jetty versioning
added a limit parameter to the getAllOrder method and modified the handling of market price lists in the MarketOrderIdListCapsule and Wallet classes
added null check for the user before retrieving user settings to prevent potential NullPointerException when accessing user settings
updated file handling in LocalFileSystem and added a test for relative wildcard paths in LocalFileSystemTest to ensure correct handling of relative wildcard paths in the
added MAX _ WIDTH and MAX _ HEIGHT constants to the ComponentBuilders class and adjusted bounds calculations to ensure that the instance ' s bounds is
added logging functionality to CommonsHttpSolrServer and updated request methods in CommonsHttpSolrServer . java to improve code clarity and maintain
removed exception handling for document creation in PrintController . java to streamline error handling for document creation failures
refactor CrateType and RustBinaryIntegrationTest to use ` map ` instead of ` Optional . of ` to improve code readability
added checks for empty and numeric strings in SpellChecker . java and created a corresponding test in SpellCheckerTest . java to ensure proper
updated the MESSAGE constant name from " HelloWorld . message " to " HelloWorld . message " to clarify the purpose of the message
refactor file handling in FileDisplayActivity to use a method for retrieving the OCFileListFragment to improve code readability and maintainability by
added a daemon flag to ReplicationHandler and modified log statement in SnapPuller to ensure proper handling of exceptions during replication logging
updated the update method call in StoreCachedTest . java to ensure consistency in the update method signature
refactor the constructor of StreamerLoader to use MaterialHolder instead of MaterialHolder to improve clarity and maintainability of the constructor
updated DependencyBank . java to include additional messages for Core Library and Rigid Body Dynamics in DependencyBank . java to enhance clarity
added device profile management and recycled views in AppsContainerRecyclerView . java to improve view management for better user experience
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` for building binaries to ensure
refactor ExampleBaritoneControl to handle invalid waypoints and display chat messages more effectively to improve user experience by providing clearer feedback when
added import statements for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance code clarity and maintainability
added null handling support in FilterOperatorUtils and corresponding test cases in NullHandlingEnabledQueriesTest to ensure proper filtering behavior based on null values and
added validation for bootstrap method arguments in JDynamicInvokeExpr . java to ensure correct signature verification for bootstrap method arguments
increased the port from " http : / / localhost / myservice " to " http : / / localhost : 9000 / my
removed the clear of runtimeOptions getFormatters ( ) from CucumberInstrumentation . java to streamline the code by eliminating unnecessary
changed the type of ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` in ` AbstractRegisteredService ` and updated
added a conditional check for workspace cell padding before adjusting workspace labels to ensure workspace labels are only shown based on icon size and icon padding
updated assertions in ReplicationFactorTest . java to include additional context for clarity to improve test readability and provide clearer error messages for better
refactor LLVMContext to use a new State enum for context initialization and patchContext methods to improve context management and ensure proper initialization behavior during
added JUnit @ Ignore annotation to ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest classes to temporarily
replace RuntimeException with JsonIOException in Gson . java to improve error handling by providing a more specific exception type
replaced instances of ` Integer . valueOf ` with ` Integer . parseInt ` in ` VisualScoreTagTest . java ` to improve code read
updated error messages in Copy . java for clarity and consistency to improve readability and maintainability of the code
refactor segment name handling in HLCSegmentName and LLCSegmentName classes to improve clarity and functionality to enhance code readability and
added startActivity and startActivityForResult methods in ShadowFragment and corresponding unit tests in FragmentTest to improve activity handling and ensure proper exception handling
replaced ` DateTime . now ( ) ` with ` clockReader . getCurrentTime ( ) ` in ` DueDateBusinessCalendar . java
added " - target " to the ImmutableList of the TargetCpuType class to support additional CPU types in the application
added ` deleteAllFiles ` method to ` FileDataStorageManager ` and implemented ` deleteAccountFiles ` method in ` ManageAccountsActivity ` to
updated the command line argument in SchemaCrawlerCommandLine . java from " - ? % n " to " - h % n " to align command
added a new static method ` createSuiteDescription ` and modified the ` equals ` method to accept a unique ID to ensure that the description is
replaced the method of decoding bitmap with a direct call to decodeBarcode in SnapshotThread . java to simplify the code and improve readability
removed the ` sources ` parameter from the ` BuckTarget ` constructor and related classes to simplify the constructor and improve code clarity
added unit tests for range pasting in GWCZoomContextFinderTest . java to ensure correct behavior of range calculations in the grid set
added a new configuration key ` DEPENDENCY _ TRACKING _ CONFIG _ KEY ` and modified dependency tracking logic in ` JRubyScript
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure correct
replaced multiple instances of ` TraceKeyspace ` , ` AuthKeyspace ` , and ` KSMetaData ` with a new method ` maybeAdd
refactor image handling in WelcomeWindow to utilize BufferedImage for better image management to improve performance and maintainability of image rendering logic
updated tuner configuration handling and logging in TunerManager , RTL2832TunerController , and R820TTunerConfiguration to
added HasTests interface to AbstractShBinaryDescriptionArg and created a new test method in ShBinaryRuleIntegrationTest to enhance functionality by allowing tests
added a condition to set the includeString variable to " db : hsqldb " in TestFilter . java to ensure that the includeString
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
added a check for empty stack trace in TruffleStackTrace . java to ensure that the stack trace is only maintained when no stack trace is
refactor service loading logic in GraalServices . java for improved clarity and functionality to enhance code readability and maintainability while ensuring
added a new test method ` handleUpdateDuplicate ` to ` AggregateAnnotationCommandHandlerTest ` and implemented a test for duplicate command handler resolution to
[ flink - 20865 ] [ stream ] add support for fine - grained shuffle mode in batch job
fix fish hook not work in the world ( # 1515 )
refactor multiple endpoint factory classes for improved clarity to enhance maintainability and readability of the codebase
rename ` getCommandRunner ( ) ` to ` getStepRunner ( ) ` across multiple files to improve clarity and consistency in naming conventions
rename ` useShortNames ` to ` compressPackageNames ` in ` GangliaReporter . java ` to clarify the purpose
added a check for empty items in AppsContainerRecyclerView . java to avoid unnecessary processing when no items are available
added a conditional bean name for REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration . java to ensure that the Bean is
refactor XMLLayout to use StringBuilder instead of StringBuffer for better performance and readability to improve performance and maintainability of the code
added support for the " omitHeader " parameter in multiple classes to enhance header management by allowing users to omit header values
updated the return statement in EscherProperty . java to use getPropertyNumber ( ) instead of _ id and added a new test class TestEs
reformatted the return statement in Description . java to improve readability to enhance code clarity and maintainability
refactor scene removal logic in FastHierarchy and SootClass classes to improve code clarity and ensure proper hierarchy management
added null checks for disputesPerTradeId and disputesPerDelayedPayoutTxId items in TradeDataValidation . java to
added ` getObjectHash ( ) ` method to ` AbstractNamedObject ` , modified ` DatabaseSchemaCrawler ` , ` TableRetriever ` , and
wallet : set the confidence type of not _ SEEN _ IN _ CHAIN to not _ SEEN _ IN _ CHAIN in the
refactor argument handling in HttpClientIntroductionAdvice . java to improve code readability and maintainability to enhance code clarity and
craftinghelper : do n ' t process conditions in json array
hbase - 11818 hregion . close ( ) should log a warning if region close fails
refactor length checks in Credential . java for improved clarity and efficiency to enhance code readability and maintainability by reducing redundancy
[ java ] fix checkstyle issue in clientconductor . java
replaced the destroy method with a waitFor method in TestJvmProcess . java to ensure proper resource management and prevent potential resource leaks
added a condition to check if the database is Oracle in TestDefaults . java to ensure compatibility with Oracle features
camel - 16400 : mailconsumer should not fail if the store be not connect to the mailstore
added logic to check if there are more tokens in the query that have not be consumed to ensure that more tokens are consumed in the query that
added GEORGIAN , GREEK , GUJARATI , and GUJARATI to Translate2Language
added a method ` getDataFileName ( ) ` to the ` Model ` class and modified the model assignment logic in ` Voice . java ` to
added emailDomain field and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable dynamic configuration of the email domain for
added default request timeout values for read and connect timeouts in Configuration . java and ViewRegistry . java to improve flexibility in timeout settings for better
added a condition to check if myDeferredConcepts and myConceptLinksToSaveLater are not empty before executing the execution to ensure that deferred
added RedisCategory annotation to RedisServiceRegistryTests to enable testing of Redis categories in tests
added JUnit annotations and updated method signatures in FindDeprecatedUsesTest . java and FindDeprecatedUses . java to enhance test coverage and ensure correct
added a call to super . paintComponent ( g ) in OverlayPanel and WaterfallPanel to ensure proper painting of components in the
removed unused imports from multiple classes to streamline code and improve readability
updated event signature handling in ContractEventTriggerCapsule and added event signature full handling in LogEventWrapper to improve event signature management and ensure proper
updated filter condition in FileTestHelper to check if the file name ends with " _ " sessionId to ensure correct filtering of file names based on
replaced ` clearRect ` with ` fillRect ` and updated the color setting in ` MapView . java ` to improve clarity and
refactor code formatting in PackageBuilder . java to improve readability and maintainability to enhance code readability and maintainability
removed debug print statements from multiple classes to streamline code for better readability and maintainability
added a check for NaN score in TestFieldCacheSort . java to ensure that scoreDocs [ 0 ] and scoreDocs [ 1 ] are
replaced the initialization of oldKeys to ensure the oldKeys is immutable to avoid potential memory leaks
added zeroTime checks in ColumnSnapshotGenerator and implemented a test for date default values in MySQLIntegrationTest to ensure proper handling of zero time values
rename ` offererMultiSigPubKey ` and ` offererMultiSigPubKey ` to ` offererBtcPubKey ` and ` taker
updated parameters in FunctionAllGroupHeadsCollector , FunctionAllGroupsCollector , FunctionFirstPassGroupingCollector , and FunctionSecondPassGroupingCollector to
[ drools - 5767 ] fix the bug in kiecontainerimpl . getsessionmodel ( ) that do n ' t work
updated HiveMetaStoreClient instantiation to use the current configuration object to ensure compatibility with the current configuration object
added a conditional check for modalness in TaskView . java to avoid unnecessary processing when modalness changes
added a new test method ` _ createFromProfileLevel ` to ` ShadowMediaCodecListTest ` and modified ` ShadowMediaCodecList ` to
fix issue # 5460 when enter key do n ' t work
added validation for width and height in SunVolatileImage , X11SurfaceDataProxy , and XRPMBlitLoops classes , and
updated the thousands separator from " . " to " \ u00a0 " in FormatData _ uk . java to ensure proper character
updated AsyncStressTest and StressTest to use AtomicInteger instead of int array for thread synchronization to improve concurrency handling and ensure thread safety during
added handling for beta achievements and scroll buttons in AchievementsFragment and LeaderboardFragment to enhance user experience by providing clearer
added access , name , and desc properties to the SearchMethodVisitor class to enhance the functionality of the Search class based on the context
added multiple sleep calls to IoTDBInsertWithoutTimeIT . java and modified exception handling in IoTDBInsertWithoutTimeIT . java to improve
refactor the duration setting logic in DLNAResource . java to improve readability and maintainability to enhance code clarity and maintainability
camel - 16400 : camel - resequence - fix typo in xml root element name
refactor transaction management methods in TableReader and TableReaderTxnScoreboardInteractionTest to improve clarity and functionality to enhance transaction management and ensure
refactor key manager and trust manager handling in ThriftSource and ThriftRpcClient to use a dedicated method to improve code readability and maintainability
refactor ` getSingleSourceApplicableTest ` method to use ` Applicability . or ` instead of ` JavaIsoVisitor ` to improve code
added exit ( ) method in Blockmania . java to ensure proper exit behavior when the keyboard key is pressed
changed access specifier from PACKAGE _ PRIVATE to NONE across multiple classes to align access specifications with the new API standards
modified the ` unHandled ` method to ` unhandled ` and introduced a new class ` T6199153 ` for handling unhandled exceptions to improve
replaced direct calls to ` orcReader ` with ` orcTail ` in ` OrcInputFormat . java ` to streamline
added a null check for the exception in JCache . java to prevent potential NullPointerExceptions during execution
updated the URL from " http " to " https " in MyhentaicomicsRipper . java to align with the latest
added a command - line option to show the current jar version in App . java to enhance user experience by allowing users to specify the current jar
replaced ` split ` method with ` splitTokens ` method in ` Sketch . java ` to improve code readability and maintainability by
refactor rotation handling in ConsoleActivity and TerminalView to use a default value based on keyboard settings to improve flexibility in rotation handling based on
changed the type of ` hq ` from ` HitQueue ` to ` ScoreDoc ` in ` ParallelMultiSearcher . java `
added null check for ownerConnectionAddress in ClientSmartListenerService . java to avoid potential NullPointerException when ownerConnectionAddress is null
camel - 14850 : add a property to get the headersmapfactory class name .
updated formatting in JavaCompiler . java and Diagnostic . java to improve code readability and maintain consistency
int - 1748 - jms outboundgateway now implement InitializingBean and refactored setter methods in jmsnamespacehandler and jmsgatewayparser
corrected the index parameter from ' i + 1 ' to ' i 2 ' in the expecting method call to ensure correct handling of array expectations
added null checks and improved error handling in AbstractScriptProcessor and InvokeScriptedProcessor classes to enhance robustness by preventing potential NullPointerExceptions
added support for PostgreSQL PGStatement in PooledConnectionImpl and created a test for prepared statement handling in ConnectionPoolTest to ensure compatibility with PostgreSQL
update flushMemTables and flushMemTablesAndRefreshSizeEstimates method to use refreshSizeEstimates instead of flushMemTables to ensure that
change log level from error to warn in AtomicRemainder . java to improve logging clarity for better debugging
[ flink - 18454 ] [ table - planner - blink ] fix the sort of candidate ' s min timestamp in compactioncontroller
fixed - rblockingdeque . toseconds ( ) and rblockingdeque . toseconds ( ) return 1 instead of 1 . #
updated formatting in JobInspectCommand . java for improved readability to enhance code clarity and maintain consistency in formatting
refactor Engine class to improve code structure to enhance maintainability and readability of the code
replaced ` Stream . of ( children . values ( ) ) . flatMap ( ) ` with ` entrySet ( ) . map ( ) `
[ issue # 1188 ] remove acl client from acl client ( # 1188 )
updated the condition from ` numIndexDims ` to ` numDataDims ` in ` BKDWriter . java ` to ensure correct handling
replaced printStackTrace ( ) with LOG . warn ( ) and added a null check for interpreterGroup to improve error handling and prevent potential NullPointerExceptions
updated the variable name from ' funN ' to ' lt ' in ExpressionNodeEvaluator . java to improve clarity and consistency in variable naming
changed method visibility from public to package - private in NodeIdAccessor . java to allow access to these methods from other packages
cloudstack - 4892 : improve error message for invalid snapshot policy and volumeid
changed access modifiers of several methods from public to package - private in ItemWriter . java to allow access to these methods from other packages
added a new test thing type to the Thing constructor in RoombaHandlerTest . java to facilitate testing of the Thing with a
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest
replaced ` FSDirectory ` with ` RAMDirectory ` in ` TestNorms . java ` to streamline directory creation by using a more
added a new constant ` mLineHeight ` and modified the calculation of ` lineHeight ` based on its value to ensure that the ` line
refactor WalletAppKit class for improved readability to enhance maintainability and clarity of the code
remove hat _ js _ rhino and hat _ nashorn from oqlengineimpl . getinitstream ( )
removed the JCheckBoxMenuItem from the transport menu items in ChatTransportSelectorBox . java to simplify the menu removal process by eliminating unnecessary
added methods to resolve and replace tokens in various classes to enhance functionality for handling variable resolution and token replacement
added a nullable check for ` bsqBlockChainExplorer ` before setting it to ` PreferencesPayload ` to ensure that ` bsqBlockChain
added methods to store and remove attributes in StandardSession and Session classes to enhance session attribute management and improve session management
added assertions to verify the presence of the getPlainBean ( ) and getPlainBean ( ) properties in TestDbJson _ List . java
updated the averages array from pageSize to initialPageCount in MonotonicAppendingLongBuffer . java to ensure the averages array is initialized
refactor BatchCommandLineLauncher class for improved clarity to enhance maintainability and readability of the code
added ` DataSource ` and ` JdbcTransactionManager ` methods to the ` BatchMetricsApplication ` class to enable customizing SQL data source and transaction
rename the GlowrootLogHttpService class from UnauthenticatedHttpService to HttpService to improve clarity and consistency in naming conventions
updated graphics composite settings in PageDrawer . java to ensure consistent rendering behavior based on graphics state
removed synchronization in ` notifyAll ( ) ` and added synchronization in ` DocumentsWriterPerThread ` and ` IndexWriter ` to ensure thread
added getter and setter methods for multiple and validation options , and validation constraints in UiBinding . java to enhance flexibility in property management for better
updated method calls to use ` toString ( ) ` instead of ` getName ( ) ` for clarity and consistency to improve code readability and
added a fullSave flag to control whether the tree is stored in a full save to ensure that the tree is only updated for a full save
rename the ` condition ` variable to ` pattern ` in the ` Affix ` class and update related methods accordingly to improve clarity and consistency
updated the parameters of ` krakenMakerFees ` and ` krakenTakerFees ` in ` KrakenAdapters
removed unused import of CharTermAttribute in DefaultIndexingChain . java to streamline code by eliminating unnecessary dependencies
refactor NBJavacTrees class for improved readability to enhance maintainability and clarity of the code
removed unsupported data encoding check in VectorizedPrimitiveColumnReader . java to streamline code by eliminating unnecessary error handling
updated logging statements in HttpSolrCall . java to use slf4j ' s MarkerFactory for better clarity to improve code readability
added a call to destroy the metadata service proxy in ServiceInstancesChangedListener to ensure proper resource management and prevent potential memory leaks
added a constant for the maximum level of 10 in DefaultEntityQueryRepository and modified the getLvlFilter method to accept a maximum level value to
added a null check for the changelog log ID in HubChangeExecListener . java to ensure that the changelog is not registered with the Hub project
added support for the TRY _ HARDER hint in AbstractBlackBoxTestCase to enhance barcode decoding functionality and improve error handling
replaced ` int ` with ` ProcessExecutor . Result ` in ` CxxPreprocessAndCompileStep . java ` and updated return values
updated the logic for setting the maximum event range in ObjectStore . java to ensure that the query does not exceed the specified maximum number of events
removed unnecessary checks for @ Validated annotations in ValidatedLocalValidatorFactoryBean . java to streamline the code by eliminating unnecessary checks
simplify entity deletion process in EntityAwareWorldProvider . java to improve code readability and maintainability
[ hotfix ] [ test ] remove unnecessary type check in intrinsifyarraycopyphase
removed unused logging statements from TestCoyoteAdapter . java to clean up the code and improve readability
removed the ` WantedAnywhereAfterFollowingInteraction ` class and updated its usage in ` Reporter ` , ` HasStackTrace ` ,
added validation checks for ownerAddress and key addresses in AccountPermissionUpdateActuator , PermissionAddKeyActuator , and PermissionDeleteKeyActuator
replaced the ` CommandComparator ` class with a ` TreeMap ` for sorted commands to improve code readability and maintainability by using a more
chore ( deps ) : upgrade gapic - generator - java to 3.7 . 0 and update gax - java to 3.16
refactor metadata property settings in BaseSingleTreeBuilder . java to improve code readability and maintainability
updated AsmLibraryLoader to use the interface class loader instead of the class name to ensure compatibility with the correct class loader ' s class loader
pdfbox - 4892 : do n ' t ignore invalid decode array , a suggest by valerybokov
updated print statements in Java2TypeScriptTranslator to include a conditional check for definition scope to improve clarity and maintainability of the code by
replaced EmptyServerHandler with AbstractHandler in HttpClientTest . java to streamline the start method to improve code readability and maintainability by
updated listener names from " Pause " to " analogListener " in HelloInput . java to improve clarity and consistency in listener registration
added a null check for the lhs variable in AbstractSqmPath . java to avoid potential NullPointerExceptions when accessing the root path
updated package structure for CreateFolderTest , DeleteFolderTest , ReadFolderTest , and RenameFileTest to improve organization and clarity of test
refactor BufferedImage initialization and filter logic in AwtCanvas . java for improved image handling to ensure correct rendering of images based on the type
added methods to retrieve and set the native image location qualifier in CompilerConfigurationFactory . java to ensure compatibility with JVMCI native library configurations and improve
[ hotfix ] [ test ] fix typo in pardotest
replaced ` remove ( ) ` with ` poll ( ) ` in ` MockPhishingProtectionServiceV1Beta1Impl .
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility with serialization features
refactor CallStack class to improve code structure to enhance maintainability and readability of the code
added a warning log for the maximum record store size in the EvictionChecker class to indicate that the max size configuration does not allow any data
corrected the spelling of " LST " to " AST " in multiple Java files to ensure consistency in naming conventions across the codebase
refactor scoreable calculation and job initialization in ThreadedAcousticScorer . java to improve clarity and consistency to enhance code
replace AssertionError with return null in NetHooks . java to improve error handling by returning null instead of throwing an AssertionError
updated method calls from ` getServerAddress ( ) ` to ` window ( ) . title ( ) ` in ` ApplicationControllerFluentLenium
added ` makeString ` methods to ` ParallelIterable ` , ` RichIterable ` , ` AbstractSynchronizedIterable ` , and ` R
replaced ` Ordered . HIGHEST _ PRECEDENCE ` with a constant ` DEFAULT _ ORDER ` in ` OidcServicesManager
added a new ` Predicate < ProposedWeakAssociation > weakAssociationRule ` parameter to the ` WeakAssociationsAnalyzer ` constructor and updated related
refactor Deflater class for improved readability to enhance maintainability and ease of future updates
added exception handling for IOException in Font . java to ensure proper resource management and prevent potential memory leaks
added a null or empty check for content in VersionTypeBinding . java to avoid potential NullPointerException when content is empty
replaced ` result ` with ` return ` in ` NearbyListFragment . java ` to simplify the code and improve readability by
change content type check from ` startsWith ` to ` toLowerCase ( ) ` in ` MailConverters . java ` to ensure consistency in content type handling
changed the access modifier of AUTH _ MAGIC from private to public and modified the return statement in OpenSSHPrivateKeyUtil and OpenSSHPrivateKeySpec
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter and modified the ` updateItemLocationsInDatabaseBatch ` method
hhh - 14386 - add miss @ cache annotation to inheritancecachetest
updated import statements in ConnectOAuth2RequestFactory . java and added a method to retrieve user approval requests in TofuUserApprovalHandler .
[ issue # 645 ] fix influxnamingconvention not apply to tag value ( # 645 )
replaced System . out . println with a dump method for better clarity and consistency to improve code readability and maintainability by encapsulating
updated the key from " Cookie " to " Cookie2 " in HttpURLConnection . java to correct the key from " Cookie " to reflect the correct
replaced the static method ` classMetadataUnsupported ( ) ` with a static method ` Platform . classMetadataUnsupported ( ) ` in ` Subject .
added clear all functionality to the OverviewActionsView and RecentsView to enhance user experience by allowing users to clear all tasks based on
updated timeout values for cluster stack version creation and initialization in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to ensure proper handling of repository
deleted the MemoryLeakTest . java file to the test class is no longer needed for memory leaks
updated the return statement in ServletTester to use the local host address instead of the local port to ensure the correct port is returned based on
added a check for MVDWAPI in ServerListener and modified BAN _ DELETER and BAN _ DELETER settings to
add test to assert cluster size eventually in abstractpartitionassignmentscorrectnesstest
added a SingletonHolder class to retrieve FFIProvider instances based on JFFI configuration to enhance flexibility in loading FFI providers based on
added a new test method ` testHierarchicalWFileList ` to ` BatchProcessTest ` to verify the functionality of the ` listFiles ` method
added null checks and null checks in MongoTemplate and MongoTemplateTests to ensure robustness and prevent potential NullPointerExceptions during object saving
updated position initialization logic in NodeClass . java to use NODE _ LIST instead of NODE _ ITERABLE to ensure proper handling of node lists
added a new field ` accTradeValue ` and its getter method in ` BithumbTicker ` and updated ` BithumbTradeService
updated logging statements in RealtimeSegmentDataManager . java and AvroUtils . java to improve logging clarity and consistency to enhance readability and
changed the maximum number of parallel tasks from 10 to 100 and changed the variable name from maxParallelThreads to MAX _ PARALLEL _
replace ArrayList with CopyOnWriteArrayList for multiple data readers in FixedByteMVMutableForwardIndex and FixedByteSVMutableForwardIndex to
refactor multiple dictionary - related classes for consistency and clarity to improve maintainability and readability of the codebase
added null check for destBuffer in FlipTransition . java to avoid potential NullPointerExceptions when destBuffer is null
camel - 1649 : camel - sv - do n ' t ignore test that fail due to unknown reason
updated the condition in DelegationService to check if beginCycle is greater than currentCycle to ensure that the cycle is greater than the currentCycle
updated RandomValueStringGenerator from 6 to 10 in JdbcExpiringCodeStore . java and modified assertions in CodeStoreEndpointsTests . java to
added a check to ensure the object is an instance of UniqueConstraint before matching it to prevent potential ClassCastException when processing unique constraints
refactor language code handling in MediaDetailFragment . java to utilize a HashSet for all language codes to improve code readability and maintainability
added exception handling for ArrayIndexOutOfBoundsException and ClassCastException in FindBugs2 . java to improve error logging for better debugging and error management
[ hotfix ] [ list ] add withreferencefilter to listimagecmd
[ amq - 3842 ] add bridgeerrorhandler property to jms endpoint ( # 3843 )
added a condition to check if the line contains " # ifndef " and " # endif " in OpExclusionUtils . java to
added a return statement to the DatabaseCommand class to ensure proper handling of database operations
replaced instances of ` Politician ` with ` Politician ` instances in ` HonestPoliticianExample
replace null check with StringUtils . isNotBlank in BeanShellInterpreter . java to improve code readability and maintainability
updated the port assignment logic in RestletComponent . java to ensure proper URL formatting based on the specified port parameter
removed unused imports from SchematicFormat . java to streamline code by eliminating unnecessary dependencies
added system property " hive . query . max . length " to " 100Mb " and modified overridden configurations in SessionState . java to
changed visibility of userName and securityMgr fields from public to private in WebServer . java and modified related methods in WebServer . java to enhance
updated method names from " writeHdfs " to " hdfsSink " across multiple files to improve clarity and consistency in naming conventions
updated the condition to check for " spark . app . name " in HiveConf and added null check for appName in HiveSparkClientFactory
rename ` whiteName ` to ` includedName ` in ` ManagedClassFactory . java ` to improve clarity and consistency in naming conventions
simonstewart : move the window restore method into the windowtest and add a new MaximiseWindow class to improve window management
refactor ` LocalCellProviderFactory ` , ` AbstractEmbeddedCellBuckOutInfo ` , and ` DefaultProjectFilesystemFactory ` classes to
added an assertion to check if the message contains " entity expansions " in TestXMLEntityExpansion . java to ensure that the
updated the calculation of offset and length values in TrueTypeFont . java to ensure that the table ' s offset and length values are handled correctly
added a null check for the form ' s customized value in DirectMethodHandle . java to ensure that the form ' s customized is not null
refactor line buffer initialization and coordinate checks in LineChartRenderer . java to improve readability and maintainability of the code
refactor flavor handling in AndroidBinaryDescription to use a loop for better readability to improve code clarity and maintainability by reducing red
updated the buffer index from offset to i in LwjglGL11 . java to ensure the correct index is used for buffer generation
added new classes ` Property ` , ` PropertySuper ` , and ` TestClassResolutionFail ` , and ` TestClassResolutionFail ` to
added a condition to check if the SHUTDOWNHOOK _ ENABLED is true before removing the shutdown hook to ensure shutdown hook is only removed
removed the ` url ` parameter from ` VirtualFilterChain ` and ` VirtualFilterChain ` constructors in ` FilterChainProxy . java ` to
replaced ` Collections . sort ` with ` Arrays . sort ` in ` PercentileAggregationFunction . java ` to improve code readability and
added checks for schema loading before loading tables in MetaDataBasedSQLCompletionProvider and modified mdTable initialization in QueryTypeAnalyser to ensure proper
updated the initialization of ` baseType ` in ` DatabaseInfoRetriever . java ` and set default values in ` MutableColumnDataType . java ` to
refactor link annotations in multiple Java files to improve clarity and consistency to enhance maintainability and readability of the codebase
replaced instances of ` ObjectEqualEvaluator ` , ` BooleanEqualEvaluator ` , and ` ObjectContainsEvaluator ` with ` BooleanNotEqualEvaluator
updated target platforms in BuildCommandIntegrationTest and ConfigSettingIntegrationTest to use " osx _ config " instead of " osx " to
added sound effect functionality to the AllAppsView class to enable or disable sound effects for better user experience
added IOException to the main method signature in RemoveFirstPage . java to ensure proper handling of IOException during the main method
added setGranularityEnabled ( true ) to leftAxis in BarChartActivitySinus . java to enable the granularity of the left axis
refactor version comparison logic in GdxSetup . java to improve readability and maintainability to enhance code clarity and maintainability by redu
updated file handling in ContextHandlerGetResourceTest to use MavenTestingUtils for testing directory paths to improve test reliability and ensure compatibility with different
added ` close ( ) ` methods to ` Connection ` , ` JsonAsyncHttpPinotClientTransport ` , and ` PinotClientException `
refactor SocketRemoteTest , MockAppender , SocketServerFunctionalTest , and SocketServerFunctionalTest to use LinkedBlockingQueue for event
[ beam - 4142 ] improve error message for hdfsresource ( # 4142 )
removed unnecessary import statements from IsometricStaggeredTiledMapRenderer . java to streamline the code by eliminating unnecessary dependencies
removed redundant call to handleService . unbindHandle in ItemServiceImpl . java to streamline code by eliminating unnecessary complexity
refactor Config and Attribute classes for improved clarity to enhance maintainability and readability of the code
removed redundant condition checking for mDownHitTarget in OtherActivityTouchConsumer . java to simplify the condition for better readability and maintainability
refactor NavbarButtonsViewController to use a configuration variable for dark theme management to improve code readability and maintainability by reducing
replaced the abort statement with a throw statement in PolyBenchLauncher . java to improve error handling by throwing an exception instead of throwing an
refactor short extraction logic in ClassWriter . java for improved readability and maintainability to enhance code clarity and maintainability by reducing
added a BlockFormattingContext parameter to the ` findBox ` and ` findElementBox ` methods in ` BasicPanel . java ` to enhance
added a method to retrieve standard error output in WorkerProcess and updated WorkerShellStep to use it to improve error handling and provide clearer output
added null checks for the operator in CheckedListReplaceAll and improved error handling in Collections . java and CheckedListReplaceAll . java to
added a new boolean variable ` _ testFill ` and modified the ` fillInterested ` method in ` SslConnectionTest . java ` to
replaced the ` addChangeListener ` method with ` addChangeListener ` and ` removeChangeListener ` methods in ` DeviceFlag ` and ` FeatureFlags
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable the test due to issue 2.2 . 0 gh
removed unnecessary import of MalformedURIException in StandardRequestHandler . java to streamline code by eliminating unnecessary dependencies
added a script execution for the end date box in InstructorFeedbackEditPage . java to enhance user experience by ensuring the end date box is
refactor synchronization logic in KrakenStreamingTradeService . java to improve readability and maintainability to enhance code clarity and maintainability
changed print statement from ` System . err . println ` to ` System . out . println ` in ` ChangeableUrls . java ` to
added a ` randomAccessRows ` boolean parameter to the ` SparseRowMatrix ` constructor and modified constructor parameters to include a ` randomAccessRows
cloudstack - 3641 : do n ' t persist volume delete event if poolid be null
refactor input stream initialization for HIVE _ PLAN based on Hive configuration to improve flexibility in handling plan paths based on Hive configuration
[ beam - 2249 ] fix guava test failure ( # 2249 )
added resetInternalState ( ) method to MemoryCallGraphBuilder to ensure proper state management during memory call operations
added null check for multiUserChatOpSet in ConferenceChatManager . java to prevent potential NullPointerException when accessing operation sets
added error handling for file writing in Save . java to ensure that the file can be written to avoid potential errors when the file cannot be written
added folder synchronization functionality to the DrawerActivity and created a new FolderSyncActivity class to enhance user experience by allowing users to sync the folder
[ hotfix ] [ test ] fix memory leak in sequentialchannelstatereaderimpltest
refactor SpanishTreeNormalizer to use StringUtils for improved token handling to enhance robustness and maintainability of the spanish tokenizer logic
replaced the method for retrieving point values from the heapPointWriter to simplify the code and improve readability by using a more descriptive method
added ` LocaleRandomizer ` and ` LocaleRandomizerTest ` classes and corresponding test cases in ` InternalRandomizerRegistry ` to facil
added assertions for the " application / x - font - printer - metric " and " application / x - font - type1 " mime type
bugfix # 11818 , add 10.0 to upgrade list ( # 11818 )
reformatted code in TCPTransport . java for improved readability to enhance code readability and maintainability
updated the read timeout logic in Http2AsyncParser . java to account for a default value to ensure that the read timeout is set to zero
increased the maximum duration from 120ms to 600ms in TimelineMetricConfiguration . java to improve performance by reducing the maximum duration
updated the SQL error message in SelectStatement . java to include the previous ' s name to improve clarity of error messages for better debugging
added date handling in ThirdEyeJiraClient to handle " date " fields in the issue to ensure proper handling of date formats in
refactor priority generation methods in HeadersGenerator and PriorityGenerator classes to improve clarity and maintainability to enhance code readability and maintainability by
added a constant MAX _ SCALAR _ REPLACE _ CODE _ SIZE and modified the scalarReplace condition to check for the entire class length to
updated projectionTest and fileSortOrder to include DATE _ TAKEN in MediaProvider . java to ensure consistency in sorting by using the correct date
updated the drawImage method parameters in TexturePacker2 . java to include additional parameters to ensure proper rendering of images based on the specified dimensions
added WebSocketUpgradeFilter to JettyWebSocketServerContainer and refactored context handling in JettyWebSocketServletContainerInitializer and JettyWebSocketServer
added shutdown methods for validateSignService and trxHandlePool in Manager , TransactionsMsgHandler , and NodePersistService classes to ensure proper shutdown
added a new ` RawJsonRequestBodyAnnotationProcessor ` class and modified ` JaxrsSwaggerGeneratorContext ` , ` Echo ` , and `
added a new method ` newTarget ( int targetType , TargetExtension extension ) ` to the ` LoggerUtils ` class to provide a way to
replaced the instantiation of ` ListBeanContainer ` with ` ArrayList ` in ` BeanContainer ` and added a new test class ` BeanContainer
hbase - 11875 testmetricsregionserver . testblockcachecounthitpercent ( ) should use cachecounthitpercent instead of count
camel - 1748 : camel - cachedoutputstream should release file input stream when exchange be complete .
set the device id in the position object in TeltonikaProtocolDecoder . java to ensure the position reflects the correct device ID
replaced ` Files . readFirstLine ( ) ` with ` Files . asCharSource ( ) ` in ` HybridProjectBuildFile
added a new method ` visitAssignop ` in ` Attr . java ` and created a new test class ` FailOver15 . java `
added a boolean flag ` enableAccountHandling ` in ` FirstRunActivity ` and modified the onCreate method call in ` BaseActivity ` to
refactor IsochroneResource to use a heuristicallyFindMainConnectedComponent method to improve code readability and maintainability by reducing
updated DrillViewTable to accept a List < String > path and modified related constructors to accept a path parameter to enhance flexibility in view
added default configuration options for PooledByteBufAllocator in PooledByteBufAllocatorL . java to enhance flexibility by allowing dynamic configuration of
updated array type check from double to short in ObjectInputStream . java and added CloneArray . java with a new class CloneArray . java to enhance
added a new configuration variable LLAP _ IO _ THREADPOOL _ SIZE in HiveConf and modified the executor initialization in LlapIoImpl
added compatibility for sun . security . ssl . Debug and sun . security . SSLLogger in Java Specification to ensure compatibility with newer Java versions
updated LatLonGrid . java and TestLatLonGrid . java to use a minimum range and added a test for growing polygon functionality to
simplified the ` apply ` methods in ` ExpectedConditions . java ` for improved readability and maintainability to enhance code clarity
added a new parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and updated its usage in the ` replaceFiles ` method to
removed the ` SomeInnerClassReflector ` interface and its getter methods in ` ReflectorTest . java ` to streamline the code by
updated the configuration key from " disable _ r _ java _ idea _ generator " to " auto _ generate _ android _ facet _ sources "
updated message formatting in HubChangeExecListener . java for clarity to improve readability and maintainability of the code
added JSON property handling in Link . java and corresponding tests in QuickLinksConfigurationModuleTest . java to ensure links are properly overridden for parent links
removed @ EqualsAndHashCode annotations from InitialConfig and YamlConfigFileDTO classes and added a toString method to YamlConfigFileDTO to streamline the code
updated generic type parameters in AwaitableServerClientCallConfiguration to use ReqT , RespT instead of generic types to improve type safety and
added CallerSensitiveAdapter annotation to the forName methods in Class . java to enable flexibility in class loading based on the caller class loader
replaced ` Matchers . isEmptyOrNullString ` with ` Hamcrest . text . IsEmptyString ` in ` RequestItemRepositoryIT
replaced ` LinkedBlockingQueue ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to simplify the creation of ` ThreadPoolExecutor
changed the access modifier of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
refactor TimeStepdefs to utilize ChronicConverter and Calendar instead of HumanTime to improve clarity and maintainability of the code
removed the " spark _ isolated " and " spark _ recessive " patterns from the ModBanners . java file to simplify the code
updated the ` RestProxyFactory . createProxy ` method to use ` exchangeSpecification . getUri ( ) ` instead of ` exchangeSpecification ` to
removed unnecessary print statements in RecordGenerator . java to streamline output for better readability and maintainability
( chore ) camel - kafka : increase auto - commit timeout for kafka consumer
removed lock service release in Liquibase . java and updated output statement in LoggingExecutor . java and StandardLockService . java to ensure
added ` @ SuppressWarnings ( " rawtypes " ) ` to ` AbstractAuthorizeTag ` and added ` @ SuppressWarnings ( " deprecation " ) `
added synchronized keyword to several methods in Database . java and SessionRemote . java to ensure thread safety during concurrent operations
refactor SpringBootAutoConfigurationMojo to use a new class ResolvedProperty for handling nested properties to improve code clarity and maintainability by
updated the method call from ` baseSymbol ` to ` counterSymbol ` in ` VirtExMarketDataService . java ` to ensure
camel - 16400 : fix the test failure of camel - messagehelper
replace UUID . randomUUID ( ) with System . getProperty ( " testId " ) in HoneycombJdbcInterceptor . java to ensure
added synchronization around date and number formatting in DefaultJobParametersConverter . java to ensure thread safety when parsing date and number formats
refactor package - info . java files for mmm and ppp packages to improve code organization and maintainability
updated heightScale setting from 256 to heightScale in FractalHeightMapGrid . java to ensure consistent height scaling for improved visual consistency
updated equality check in SecurityConfig . java and changed assertion in SecurityConfigTests . java to improve clarity and correctness of security configuration assertions
changed the default value of ` dumpPartitionId ` from ` true ` to ` false ` in ` StdoutSink . java ` to ensure the
added test cases for TronTXOutput and TronTXOutputs in UTXOSetTest . java to ensure proper handling of TX outputs
[ java ] add support for explicit unused var name in unused rule .
pdfbox - 4892 : do n ' t throw npe if array be null
added a new test for job parameters override previous restart parameters in JsrJobOperator to ensure proper handling of job restart properties during job execution
added a protected boolean field ` disallowBatchOnCascade ` and its getter method to the ` DatabasePlatform ` class to control the behavior of
refactor principal retrieval logic in JaasAuthenticationHandler . java to improve code readability and maintainability
refactor core closing logic in SolrCores . java to use a custom executor for better resource management to improve resource management and ensure proper shutdown of
added a null check for mActionsView before setting visibility based on fullscreenProgress to prevent potential NullPointerExceptions when mActionsView is not initialized
[ hotfix ] [ runtime ] fix nullpointerexception in runidincrementer
refactor BasicEntity and TestUtil classes to improve code organization to enhance maintainability and readability of the codebase
added assertions to verify the number of matched devices in SchemaRegionTestUtil to ensure the correct number of matched devices are returned in the test
added error logging for metric event execution in MetricsEventBus . java to improve error handling and debugging capabilities during event execution
added a new ` EigenvectorCentralityBuilder ` class and modified ` mSumChange ` calculation in ` Eigenvector
refactor registry initialization to use a random port instead of a hardcoded value to improve flexibility and maintainability of the registry initialization
refactor geometry handling in GeometryGenerator . java to improve code readability and maintainability to enhance code clarity and maintainability by reducing
set the Amplifier value from 2 to 0 in BlockEntityBeacon . java to ensure that the Amplifier is set correctly for
refactor TubeCalc class to improve code structure to enhance maintainability and readability of the code
updated the ` enabled ` variable from ` true ` to ` false ` in ` HttpClientConfiguration . java ` and ` ServiceHttpClientFactory . java
changed the type of ` groups ` from ` List < Class > ` to ` List < Class < ? > > ` in ` DefaultValidator
added @ key headful and @ run main / timeout in bug8057791 . java to allow for more flexible testing of the
fix # 322 : make thread daemon to exit via main method completion ( # 322 )
simplified the version parsing logic in ItemLexicon . java to improve code readability and maintainability
added reflection access check in JavaAdapterFactory to enhance security by ensuring proper access control
( chore ) camel - jms : fix test failure
updated the ` initIOContext ` method to accept a ` RecordReader ` parameter and modified the ` initIOContext ` method to accept a
deleted the ClassLoaderHolder and LoaderManager classes from the io . vertx . core . impl package to streamline the codebase by eliminating
added a configurationChanged method to FileStore and modified file checks in JavaLanguageServer and ScanClassPath to improve file handling logic and ensure proper handling
added try - catch blocks to register and unregister session callbacks in PackageInstallerCompatVL . java to improve robustness by catching potential exceptions
updated index names from " cfs " and " nocfs " to " 23 . cfs " and " 23 . nocfs " to
added a new method ` createAndStart ` to ` AkkaRpcServiceUtils ` and modified the instantiation of ` AkkaRpcService
added a condition to set the maximum number of attempts to 3 in TestExportSnapshot . java to improve performance by reducing the maximum number of
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
added a new test class SslConnectionTest to validate SSL connection initialization to ensure proper handling of closed SSL connections in the application
added validation for IPv4 and IPv6 addresses in InetAddress . java and NetworkInterface . java to ensure correct handling of IPv4 and IPv6 addresses
added a test method ` testDateSerializationInCollection ` to validate date serialization in a collection to ensure proper handling of date serialization in a collection
refactor Message class to improve code structure to enhance maintainability and readability of the code
added debug logging for SQL generation in PutDatabaseRecord . java to improve traceability of SQL generation process
updated loop condition in TableOutput . java to correct the width calculation to ensure correct rendering of the output based on the running width
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
updated the priority logic in FormatStringChecker to use HIGH _ PRIORITY instead of NORMAL _ PRIORITY to improve clarity and maintainability of the priority
[ java ] ignore non - final loop variable in a for - each statement .
added PDF version and full compression settings in PDFExporter and updated sample paths in PDFExporterTest to enhance PDFExporter functionality and improve test coverage for
added unit tests for the ` LdapUserDetailsMapper ` class to ensure correct behavior of role attribute mapping in the ` LdapUserDetailsMapper `
updated LdapConfiguration to implement Configurable and added read timeout configuration to enhance configuration flexibility for LDAP connection timeout
refactor TestDescription and related classes to improve code organization to enhance maintainability and readability of the test code
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to improve clarity and consistency in naming conventions
added a condition to check if the handler is invalidated before checking gesture state to ensure that gesture state checks are only executed when the handler is invalidated
removed unused variables and modified rotation calculations in Workspace . java to improve code clarity and maintainability by reducing redundancy
updated OciConfigConfigSource to use ConfigProviderResolver instead of ConfigProvider to improve clarity and maintainability of configuration handling
refactor Testjsig class to improve code readability to enhance maintainability and facilitate future development
refactor mana calculations to use ` getCount ( ) ` instead of ` getCount ( ) ` for better readability to improve code clarity
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added @ SuppressWarnings ( " serial " ) annotation to P11TlsPrfGenerator . java to suppress serialization warnings for better code clarity
refactor tsFile validation logic in DataRegion . java for improved clarity and error handling to enhance code readability and ensure proper cleanup
added new files ` Switch21 . java ` and ` Switch19 . java ` to implement switch pattern matching and guard pattern handling in ` Switch
updated error messages in ComparableSubjectTest . java for clarity to improve readability and maintain consistency in error reporting
set xml standalone flag to true in StreamHelper . java and add a new TestStreamHelper . java file with a test for XML standalone functionality
updated the capacity calculation and improved error messages in Int2ObjectCache . java to enhance clarity and maintainability of the code and enhance
removed sorting of SecurityFilterChains in WebSecurityConfiguration and added tests for OrderOnBeanDefinitionsSecurityFilterChain to streamline sorting logic and ensure
updated the order type from TimeInForce . GTC to TimeInForce . GTC in BinanceTradeService . java to ensure correct
replaced ` LongRangeRandomizer ` with ` AbstractRangeRandomizer ` in ` FloatRangeRandomizer ` and updated related test cases to
updated the KEY _ SEP character from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure
camel - 14836 : camel - core - allow to specify documentation and parameter json schema for camel - jms component
added error handling for NoSuchFieldError in SourceUtils . java and created a new test class SourceUtilsTest . java to improve robustness by
refactor LeafFilterFactory to use a new method ` getLeafFilterBuilderByParquetType ` to improve code readability and maintainability
updated artifact name handling in BatchPropertyBeanPostProcessor and added teardown methods in JobContextFactoryBeanTests and StepSynchronizationManager to ensure proper resource management
refactor certificate handling in HttpsSegmentFetcher to use a loop for reading certificates to improve code readability and maintainability by reducing unnecessary
refactor ` getDefaultBooleanValue ` to return a ` String ` instead of a boolean value and add a new ` DnsFallback ` class to
added exception handling for tag writing in DefaultTheme . java to improve error reporting for better debugging and clarity
rename ` success ` to ` url ` in ` DepositAddress . java ` to improve clarity and consistency in naming conventions
modified the return statement in WindowsSecurity . java to use a try - finally block to ensure proper resource management and prevent potential memory leaks
removed " address " from scope parameters in CommonOAuth2Provider . java and updated assertions in CommonOAuth2ProviderTests . java to simplify scope
added a new ` Start ` class and modified the ` submit ` method in ` ManagedSelector . java ` to utilize ` await ` to
added bigdecimal constants for 182.04 and updated the handling of color values in WLedHandler to ensure accurate representation of color values based
replaced the ` isValidCaller ` method with a ` Set < String > ` for validation calls in ` VectorizationProvider . java ` to
added a new method ` caseJSRInst ( JSRInst i ) ` to the ` InstSwitch ` class to enable handling of JS
added a PlatformTransactionManager parameter to the SubscriptionActivatingSubscriber constructor and modified the SubscriptionActivatingSubscriber constructor to include transaction management to enhance transaction
refactor SQL statement handling in DBMSProcessor . java for improved clarity and functionality to enhance readability and maintainability of the code
removed elevation setting logic for ContactItemInflater based on SDK version to simplify the code by eliminating unnecessary elevation settings
rename ` typeInformation ` to ` identifier ` in the ` Identifier ` constructor to improve clarity and consistency in naming conventions
replaced ` Files . readAllBytes ` and ` Files . write ` with ` AccessController . doPrivileged ` in ` SandboxFileManager . java
refactor GroovyParserVisitor , GroovyPrinter , and GSpace classes to improve handling of access types to enhance code clarity and maintainability by
updated warning log message to use the class name instead of the message to improve clarity of error messages for better debugging
updated character handling in RecordInputStream , UnicodeString , and HSSFWorkbook classes to handle short values correctly to ensure correct handling of byte values
added a new test method ` downloadsFileWithNorwayCharactersInName ` to verify the functionality of the file download functionality to ensure that
updated error handling in AsyncResource and FingerprintScannerSample to utilize CancellationException instead of RuntimeException to improve error handling and provide clearer feedback
added a null check before processing the cache in TimedMemberStateFactory to avoid potential NullPointerException when statistics is null
added a test for removing an object from an explicit collection in MongoTemplateTests . java to ensure that the removal of objects from an explicit collection
updated copyright year from 2013 - 2015 to 2013 - 2022 in multiple Java files to reflect the latest version of the Processing Foundation
corrected the formatting of reasons in the Coder class to ensure correct formatting of reasons in the output
refactor scroll logic in RecentsView and PagedView classes to improve handling of button reveals to enhance user experience by ensuring
refactor HiveIcebergMetaHook and HiveIcebergSerDe to utilize a unified COMMON _ HMS _ PROPERTIES map
added a method to check if the address already in use is not already in use to improve error handling by ensuring that the address already in use
added a system property " test . class . path " to the argument list in TestNestmateAttr . java to enable testing of
replaced logger initialization with a constant for verbose schema to improve code readability and maintainability by using a more descriptive variable name
removed unused imports and added multiple @ Override annotations in multiple Java files to improve code clarity and maintainability by eliminating unnecessary dependencies
# 1188 - add support for nested transaction savepoint in scopetrans
replaced ` fetchSize ` with a ` ThreadLocal < Integer > ` in ` QueryProcessExecutor ` and updated its usage in ` Mem
removed the shared network idle strategy from the EmbeddedPingPong class to simplify the code by eliminating unnecessary idle strategies
refactor HttpClientIntroductionAdvice to use a new ` handleBlockingCall ` method to improve code readability and maintainability by
added support for setting the system property HDP _ VERSION in SliderAppsViewControllerImpl . java to enable dynamic configuration of the HDP
refactor ` JavacProcessingEnvironment ` to use ` Object ` instead of ` Class < ? > loaderClass ` and add ` close
updated ParameterizedRobolectricTestRunner and RobolectricTestRunner to use DeepCloner for cloning parameters and added a new
added a binding for JETTY _ SHOW _ STACKTRACE in ResourceBase . java to enable the behavior of JTTY _ SHOW _ STACK
added a check for JSType . OBJECT in NativeObject . java to ensure proper handling of object types in the NativeObject class
replaced ` sun . jvm . hotspot . types . OopField ` with ` BasicOopField ` and added ` wellKnown
updated JwkKeyListView to register type hierarchy adapters for RSAPublicKey , DSAPublicKey , and ECPublicKey to ensure compatibility with
updated the ` roDataWritable ` variable to include a conditional check for ` SpawnIsolates ` and ` UseOnlyWritableBootImage
refactor MBeanServerMXBeanUnsupportedTest to improve test coverage to enhance reliability and maintainability of MBeanServerMXBeanUnsupportedTest
removed the import of OrderClassLoaders from MavenPluginCollector . java to streamline dependencies by eliminating unnecessary dependencies
added ` getOwnerAddress ( ) ` method to ` Validator ` , ` CreateAccountActuator ` , and ` VoteWitnessActuator ` classes
http : / / issues . apache . org / jira / browse / amq - 4565 - add main class to main class
updated the sendCommand method to include both byteArrayMin and byteArrayMax in BinaryClient . java to ensure proper handling of byte values based on the
refactor ProtobufAnnotationSerializer to use a builder for handling empty indices to improve code readability and maintainability by reducing redundancy
[ java ] remove the correlationId from the asyncCommandIdSet in DriverEventsAdapter . java to streamline the removal process by eliminating
added saveConflict method calls to FileDataStorageManager , FileDownloader , and FileUploader classes to ensure conflicts are only applied when the file
replaced instances of ` Map ` with ` Map < Object , Object > ` in ` ExecutionContext ` and related classes to improve type safety
replaced ` util . StrUtils ` with ` core . StrUtils ` in multiple filter factory classes to simplify code and improve maintainability by
added support for " oracle " , " mysql " , and " remarksReporting " in the database driver properties to enhance database configuration flexibility
updated MethodInterceptor instantiation in SignedSupportingClassProxyFactory and added a serialVersionUID field in PartialMockingWithConstructorUsingEasyMockTest to
replaced ` newDate ( ) . getTime ( ) ` with ` System . currentTimeMillis ( ) ` and updated time calculations in ` FileChanged
replaced instances of ` new EnvironmentInstance ( ) ` with ` wrapClassLoader ( ) ` in ` ExecutionContext ` and ` LocalExecutor `
added buffer change handling in TerminalView and adjusted buffer height calculation in TerminalTextViewOverlay to improve user experience by ensuring proper scrolling when buffer changes
updated the processConfigFile method signature and added pid handling in ConfigDispatcher . java to improve code clarity and ensure proper service pid namespace handling
removed the disabledFreezeAction method and related logic in OperationActions and OperationRegistry classes to streamline the freeze operation logic for TVM v
added an ` _ insecure ` property to the ` TlsConfig ` class and modified trust manager creation logic in ` TlsUtils ` to
refactor searchSubPackages logic in JavadocTool . java and introduce T7091528 . java with a main method to improve code
replaced ` nodeColumns ` with ` edgeColumns ` in ` ExporterGDF . java ` and added a new ` EdgeColumnsG
added a cascade parameter to the OneToOne annotation in DefaultUserInfo . java to enable cascade functionality for the DefaultAddress class
replaced ` hashCode ( ) ` method with ` Arrays . equals ( ) ` in ` Message . java ` to improve code readability and
updated response body from " ? ? ? ? ? ? ? ? ? ? ? ? ? ?
removed the isKeySerializerTypeVariableSized method from RocksDBSerializedCompositeKeyBuilder . java to streamline the code by elimin
added ` getStaticPermissionsField ` method to ` ProtectionDomain ` and modified ` SubjectDomainCombiner ` to check for static permissions to ensure
added null checks for recipe in RecipeHandlerBrewery , RecipeHandlerElvenTrade , and RecipeHandlerFloatingFlowers
refactor parsing logic in Parser . java to improve code readability and maintainability to enhance readability and maintainability of the code
added ` showConnectionErrorPopup ` method to ` UploadMediaDetailFragment ` , ` UploadMediaDetailsContract ` , and ` UploadMediaPresenter `
added a new test class ` Issue596 ` and modified ` Status ` and ` HttpHandlerImpl ` to check if unhandled requests are not
updated bitwise operations in NodeBitMap . java to use 1L instead of 1 to ensure correct handling of bit values in the bitmap
refactor ImportLayoutStyle class for improved readability to enhance maintainability and clarity of the code
refactor ConsoleUIService to utilize constants for terminal and standard input handling to improve code readability and maintainability by reducing redundancy
refactor ShadowAccountManagerTest to use TestAccountManagerCallback instead of Mockito ' s Mockito ' s Mockito ' s Mockito
replaced the declaration of ` enclosingType ` with a direct call to ` wrapped . getEnclosingType ( ) ` to simplify the code by
renamed methods from ` getProperty0 ( ) ` and ` getProperty1 ( ) ` to ` property1 ( ) ` and ` entries (
removed a timeout parameter from the set method call in PutAllCallable . java to simplify the code by eliminating unnecessary timeout handling
[ rocketmq ] fix npe in mqclientinstance when consumer be empty or not .
[ java ] do n ' t generate source identity for udp channel .
added a new file ` TopTabAction . java ` that implements the ` Presenter . Toolbar ` interface to provide a way to display
camel - 15836 : camel - dynamicrouter - add support for all matching filter . thanks to michael for the patch
updated import statements in AggregateItemReaderTests . java and added @ Before annotation in AggregateItemReaderTests . java to improve test clarity and
updated the constructor of the Procedure class to use a generic type parameter to enhance type safety and improve code clarity
updated AchievementsActivity , OkHttpJsonApiClient , and OkHttpJsonApiClient classes to utilize a dedicated method for fetching
added validation to ensure the length value is greater than or equal to Short . MAX _ VALUE to prevent runtime errors when the length is greater than
added a new variable ` absoluteValueAccumulator ` and modified bug reporting logic in ` DumbMethods . java ` to improve code clarity and
refactor CategoryDataset , DefaultCategoryDataset , DefaultIntervalCategoryDataset , and SlidingCategoryDataset classes to improve code organization and maintainability
updated error message formatting in ` ProvisionClusterRequest ` and ` ProvisionClusterRequestTest ` to improve clarity of error messages for invalid credential types
updated the random number generation logic in TestVectorUtil . java to ensure accurate random number generation based on the current value
changed the return type of the ` compareBy ` method from ` int ` to ` long ` in ` DateUtil . java ` to simplify
updated SSL property handling in TestUtil and PGPropertyTest to use a dedicated method to improve code readability and maintainability by centralizing SSL
set ` ` safebrowsing . enabled ' ' to true in ChromeDriverFactory and add unit tests for file download functionality to ensure proper
added null checks before setting flight configuration in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerExceptions when oldConfig is null
added a condition to check if transcoding is disabled in DLNAResource . java to ensure proper handling of transcoding settings based on configuration
updated DataTable and TableDiffer classes to handle empty cases and added a test for empty list in TableDifferTest to improve error handling and
added a new constant ` CustomIgnoreTag ` and modified the removal of the iterator based on the native code to ensure that the iterator does not
camel - 16400 : fix the issue of optimisticlockinglockedexception in the jdbcaggregatorrepository
added a new ` ParentConfigProperties ` class and modified ` BeanDefinitionInjectProcessor . java ` to include a ` requiresReflection ` flag to
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and added toolbar padding settings to enhance the activity ' s responsiveness
deleted the ClusterNodeInfo . java file to the functionality was no longer needed in the codebase
simplified the return statement in ShieldedTransferActuator . java to improve code readability and maintainability
added debug output statements for ciphersuite chosen in ServerHandshaker . java to improve debugging capabilities for ciphersuite selection
refactor template handling in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to handle multiple templates more effectively to improve user experience by ensuring
added a ` nodeLabelMap ` field and modified the ` ImportContainerImpl ` and ` ImportContainerParameters ` classes to handle duplicate node IDs
added a new file R2303044ListSelection . java that tests the list selection functionality to facilitate testing of the list
[ java ] add checkkeepalivetimeout ( ) and hasclienttimedout ( ) method to publicationregistration
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions when mWorkspace is null
added a new test method ` testCompoundPropertyTwice ` to verify the functionality of the ` StepScopePlaceholderIntegrationTests ` class to ensure
updated row count calculation in StatsRulesProcFactory to use parentStats . getNumRows ( ) instead of rowCountParents . values ( ) to improve
refactor path handling in SpringBootDocBuildTemplate and DocUtil classes for improved clarity to enhance code readability and maintainability by
replaced instances of ` Logger . getLogger ( class . getName ( ) ) ` with ` Logger . getLogger ( class . getName ( ) )
updated ` DistBuildSlaveExecutor ` to use ` LocalCachingBuildEngineDelegate ` instead of ` DistBuildCachingEngineDelegate ` to improve flex
updated exception handling in Response . java to include a detailed error message to improve error reporting and provide clearer feedback when JSON parsing fails
added a conditional check for DEBUG before logging the log message in WidgetsModel . java to avoid unnecessary logging when DEBUG is enabled
refactor Console and Scanner classes for improved readability to enhance maintainability and clarity of the code
updated the calculation of ` numTerms ` in ` SimilarityBase ` and added a test for discount overlaps in ` TestSimilarityBase
refactor the send method logic in SimpleMailMessageItemWriterTests and MimeMessageItemWriterTests to use a verify method for better validation to
added exit and quit properties to Global . java and removed unused exit and quit methods in ScriptingFunctions . java to improve code clarity and
removed unnecessary bean retrieval in LoanBrokerSharkDetectorDemo . java to streamline the code by eliminating unnecessary dependency on ConfigurableApplicationContext
rename method ` getFirstUnverified ` to ` findFirstUndesired ` across multiple files to improve clarity and consistency in naming conventions
refactored cookie handling in VmwareContext . java to use CookieJar instead of String to improve code clarity and maintainability by
replaced direct calls to ` getAuthorities ( ) [ 0 ] . getAuthority ( ) ` with direct calls to ` getAuthorities
updated the ` bigIntegerToBytes ` method calls to use a maximum of 32 bytes instead of a hardcoded value to ensure compatibility with larger data
updated the property key from " disabledMods " to " modStates " in Loader . java to align the configuration with the new mod states
refactor account selection handling in ReceiveExternalFilesActivity to use a dedicated showAccountChooserDialog method to improve code readability and maintainability by
updated IOException message to include hostIp and port in CollectSink . java to improve error handling for connection issues
added error handling for unexpected empty simulation result in ValidatorContractController to improve robustness by throwing an exception if an empty result is encountered
updated JSON reading logic in TexturePackerFileProcessor to handle null root file to improve robustness by preventing potential NullPointerExceptions
removed null check for datasource and datasourceJNDI in PooledConnection . java to simplify the code by eliminating unnecessary null checks
updated the target MB and WINDOW values from 10 _ 000 to 1 _ 000 and modified the count calculation in TestRefprocSanity .
added null checks for currentConsole before writing to avoid potential NullPointerExceptions when currentConsole is not initialized
set credential refresh delay to 100 in KinesisConfigUtil . java to improve user experience by allowing dynamic refresh of credentials
refactor AlertDialog usage to use a new method ` showInfoAlert ` for better clarity to improve code readability and maintainability by
added a " - package " argument to the test method in T4501661 . java to specify that the package is specified in the
updated Jetty version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and TestBad
added a check to ensure the dependency is not provided before adding it to the dependenciesToResolve list to improve dependency resolution logic by preventing unnecessary
added a HashSet to manage ZipFileInputStream instances in the releaseInflater method to ensure proper resource management and prevent potential memory leaks
rename BarcodeFormat . DATAMATRIX to BarcodeFormat . DATA _ MATRIX across multiple files to improve clarity and consistency
added logic to run active and idle events in SequenceGeneratorSource . java to ensure proper management of event executions during execution
rename ` getCurrentyActiveConnections ( ) ` to ` getCurrentActiveConnections ( ) ` in ` BlobServer ` and ` BlobServerGetTest
replaced ` findAny ( ) ` with ` findFirst ( ) ` in ` AnnotatedDelegate . java ` and ` SyntheticAnnotated . java
added support for " ppc64le " architecture in Bits and ByteArrayAccess classes to enhance compatibility with different architectures
added a comment to the RuntimeException message in RoboMonitoringInstrumentation . java to clarify the purpose of the activity resolution error
replaced ` COMMIT _ TIMEOUT _ MINUTES ` with ` Long . MAX _ VALUE ` in the ` waitWithDeadline ` method calls
replaced instances of ` new Date ( ) ` with ` Instant . now ( ) ` in ` DateUtilTest . java ` to improve
refactor BytesRef class to improve code structure to enhance maintainability and readability of the code
added a toast message to inform users that YouTube Player does not work on Lollipop yet to improve user experience by providing clearer
added error handling for unterminated dollar , string literal , and block comments in the Parser and StatementTest classes to improve robustness of SQL
added a null check for mVibrator before checking vibration duration to avoid potential NullPointerExceptions when mVibrator is not
updated border and column color settings in DotRenderer . java for improved clarity and consistency to enhance readability and maintainability of the code
added a static final ENCODED _ CONF array and a method to check for encoded parameters in HiveConf to improve flexibility in configuration handling
pdfbox - 4892 : catch ` ` stringindexoutofboundsexception ' ' , a suggest by valerybokov
refactor X509Certificate class to improve certificate handling to enhance security and maintainability of certificate management
refactor WavefrontConfig to use a new method ` getUriString ` and add a new test class ` WavefrontConfigTest ` to improve
updated TimeLineCursorAdapter and NetworkedCacheableImageView to utilize a new loadImage method for loading images to improve image loading functionality
removed unnecessary parameters from the ` ofFloat ` method across multiple animations to simplify the code and improve readability by eliminating unnecessary parameters
added a new constant ` controllersVersion ` in ` DependencyBank . java ` and refactored related code in ` DependencyBank . java `
refactor LaunchedURLClassLoader to improve URL loading logic to enhance performance and maintainability of the URL loading process
updated DataSourceHealthIndicator to use DataAccessUtils for retrieving results from a JDBC query to ensure correct result set column count and improve error handling for
add no - cache header if no - cache be set to true
updated the warningMsg format to use Locale . ENGLISH for consistency to ensure consistent formatting of the warning message for better maintainability
updated the constructor of SolrQueryParser to accept an Analyzer parameter to enhance flexibility in query parsing capabilities
updated copyright year in multiple Java files for consistency and clarity to enhance maintainability and readability of the codebase
removed unnecessary line breaks in MainTest . java to improve code readability and maintainability
refactor TypeContributions class to improve code structure to enhance maintainability and readability of the codebase
added a check for VoidColumnVector in VectorizedBatchUtil . java to ensure proper handling of VoidColumnVector instances
updated the method call from ` templateName ` to ` req . getName ( ) ` in ` StatementGenerator . java ` to ensure the correct name
removed the isTypeMatch method from the addConfiguration method to simplify the method signature for better readability and maintainability
[ java ] : add sessionheaderencoder . offer ( ) method to sessiondecorator .
rename ` trustAllXForwardedRemoteAddressResolver ` and ` maxTrustedIndexXForwardedRemoteAddressResolver ` to ` trustAll ` and `
added a new annotation interface ` NoBootstrap ` and modified ` BootstrapInserter ` to check for non - bootstrap annotations to ensure proper handling
hbase - 11818 fix nullpointerexception in tabledescriptorchecker . getmaxfilesize ( ) and getmemstoreflushsize ( )
updated the initialization of ` maxCommits ` and ` requestedCommits ` to use ` Math . max ` instead of ` maxCommits ` to ensure
added InvocationTargetException to the main method signature in bug6794831 . java to ensure that the main method throws InterruptedException and invokeAndWait is
added a static final string ` BUILD _ ID ` and modified caching logic in ` CachingBuildEngine ` and ` CachingBuildEngineTest
removed unused imports from TransactionCapsule . java to streamline code by eliminating unnecessary dependencies
updated the method call from ` markAsDone ( future , channel ) ` to ` markAsDone ( channel , future ) ` to ensure
added import for TezConfiguration and initialized default configuration in TezConfigurationFactory to improve configuration management and ensure proper configuration management
added a null check for keyPurposes in TimestampedSigner . java to avoid potential NullPointerException when keyPurposes is null
removed redundant conditional check for mIsVisible in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a null check for recentSounds before stopping the most recent sound and refactored the forget method in OpenALAudio . java to
updated state handling in SimpleBasePlayer and added a test for discontinuity reports in SimpleBasePlayerTest to ensure consistent state management and
added decimal formats for number tick units in NumberAxis . java to ensure accurate formatting of tick values for improved performance
refactor TargetGraphAndBuildTargets methods to include a builder parameter for improved clarity to enhance code readability and maintainability by redu
removed the ` IndexFileNameFilter . INSTANCE . accept ( null , fileName ) ` method from ` IndexFileDeleter . java ` and updated
add support for the ' full bbox ladders ' feature in the ForgeDummyContainer class and update related logic in ForgeHooks to
added a compressionLevel parameter to ApkBuilderStep and updated related classes to include a default compression level to enhance flexibility in handling compression levels
added a new test method ` shouldIncludeStaticFields ` to ` MirrorTest . java ` to verify that static fields are included in the
added support for byte data type in MetricFieldSpec and implemented getBytesValues method in SingleValueIterator and PercentileTDigestQueriesTest to enhance
updated string concatenation in ` AssertJMultipleFailuresError . java ` and ` AssertJMultipleFailuresError _ getMessage _ Test . java ` to
replaced instances of ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and
added caching functionality to SpringDataJPAJoinFetchPaginationTest and modified ForumService to use ConcurrentMapCacheManager instead of Stream to enhance performance
updated filename handling in PronunciationModel and MaryProperties to use localePrefix instead of feature definition to ensure consistent handling of locale -
added a null post body check in SimpleHttp . java and updated test cases in TestHttpPlugin . java to ensure proper handling of null post
added a dispatcher to shutdown the OkHttpClient client in ClientSideSlb and a corresponding test in ClientSideSlbTest to ensure proper shutdown
added conditional logic to set the v2 based on the clipping mode to ensure the v2 is set correctly based on the clipping state
refactor exception handling in DefaultDiscoveryService to throw InvalidConfigurationException instead of HazelcastException to improve clarity and provide clearer error messages for
added a null check for contextPath in MetricsPublisher . java to ensure contextPath is set to " NA " if it is null to prevent potential NullPointerException
[ drools - 1649 ] fix npe in kiecontainerimpl and projectclassloader . reinittypes ( )
added a new constant B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap . java and integrated it into SerializationHeader . java
added support for ` prefix _ header ` and ` precompiled _ header ` arguments in the ` AbstractCxxSourceRuleFactory ` class to
added a new ` AccWeakReference ` class and modified the ` ImageWatched ` class to use privileged access control to enhance security
changed the visibility of the ` findNextIndex ` method from package - private to private and modified import statements in ` ObjectMap ` , ` Ordered
changed the variable ` isDirect ` from ` true ` to ` false ` in ` VertexBufferObject . java ` to ensure consistent behavior of
removed unnecessary whitespace in MaryClient . java to improve code readability and maintainability
changed return type of ` localToAscendantCoordinates ` and ` localToDescendantCoordinates ` methods from void to Vector2 to improve type
pdfbox - 5764 : increase chunkSize from capacity to limit in RandomAccessReadBuffer . java and add a test for RandomAccessReadBuffer
added null check before removing the close hook in VertxImpl . java to prevent potential NullPointerException when context is not initialized
updated border spacing logic in CellLayout and DeviceProfile classes to include a conditional check for folder container type to improve layout responsiveness based on
refactor valueNumeric and defaultValueNumeric initialization to use a new instance of ValueNumeric class to improve code clarity and maintainability by centralizing
added a condition to return _ deferred if the response is not a deferred authentication to ensure that the authentication process does not fail if the response is
updated command - line arguments in StartArgs . java from " -- module - startd - ini = " to " -- add - to -
added a new variable ` HIVE _ DEFAULT _ PARTITION _ VALUE ` and modified the addition logic in ` DynamicPartitionFileRecordWriterContainer
[ hotfix ] [ stream ] fix nullpointerexception in streamnode
updated return statements in DefaultArtifact . java to include classifier checks to ensure compatibility with different artifact versions and types
camel - 14284 : added unit test for offset - rebalance to ensure that offset state be call twice .
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to improve error messaging for missing dependencies in classpath
updated the GMAIL _ NOTIFICATIONS _ ENABLED constant from " GMAIL _ NOTIFICATIONS _ ENABLED " to " ENABLE _ G
refactor CryptoKey and CryptoKeyOrBuilder classes to improve code structure to enhance maintainability and readability of the code
updated mock expected message count from 125 to 25 * concurrencyLevel in LumberjackMultiThreadTest . java to improve test reliability by
added a condition to check if the player is not dead before proceeding with health checks to ensure health checks are only performed when the player is
refactor Exchange class to improve code readability to enhance maintainability and facilitate future updates
api key and secret key must be specified with apiKey in UpdateUserCmd . java to ensure that the API key and secret key must be specified with
updated switch statements in multiple classes to check for both GOOGLE _ AUTHENTICATOR and GOOGLE _ AUTHENTICATOR types to ensure
refactor AbstractMetaDataExportMojo class for improved clarity to enhance maintainability and readability of the code
added error handling for SQLIntegrityConstraintViolationException in Hive . java to provide clearer feedback when a table is used by at least one materialized
rename ` githubAccessToken ` to ` gitHubAccessToken ` in ` GitHubMilestonePlugin . java ` to clarify the purpose of the
added a new class ` RoboExecutorService ` that extends ` org . robolectric . android . concurrent . RoboExecutorService ` to
added a check for the root group before adding subgroups to the menu items to ensure that subgroups are only added when the root group is
updated the method signature of ` buildServiceNameAndSpanName ` and ` buildServiceAndSpanName ` to use ` buildServiceAndSpanName
replaced the usage of ` output . shouldHaveExitValue ( 0 ) ` with ` output . shouldHaveExitValue ( 0 ) `
updated ` getHostFlavorMap ` and ` getAllPossibleHostFlavors ` methods to return ` Flavor ` instead of ` ImmutableFl
updated SQL creation logic and added parameters handling in CreateTable , CreateTableDeParser , and CreateTableTest classes to improve clarity and ensure
replaced direct assignment of ` setBackgroundDrawable ` with a direct assignment of ` ColorDrawable ` to improve code readability and maintainability by using
test : migrate ctiteratortest to junit 5
added calls to ` token . clear ( ) ` and ` result . clear ( ) ` in multiple tokenizer classes to ensure proper handling of token
add a new test class ` ASTInitializerTest ` to verify that the ` ASTInitializer ` class does not crash on block statements to ensure that
added error handling for missing configurationurers in StateMachineConfiguration and StateMachineFactoryConfiguration classes to improve robustness by throwing a BeanDefinitionStoreException
simonstewart : remove unnecessary check for " link = " locator in ElementFinder . java and add a new import for TestLoc
updated StringConverter to set minimum and maximum fraction digits for Double and BigDecimal types in StringConverter . java and added unit tests in StringConverterTest
removed unused imports and simplified the return statement in AggregateLifecycle . java to streamline the code and improve readability by eliminating unnecessary dependencies
updated the touchable insets setting from TOUCHABLE _ INSETS _ CONTENT to TOUCHABLE _ INSETS _ REGION to
modified the parsing logic in FencedCodeBlockParser to return null instead of null to improve robustness by preventing potential null pointer exceptions
added socket timeout property and getter / setter methods in ConnectionFactoryImpl and BaseDataSource classes to enable dynamic configuration of socket timeout values based on configuration
added a try - catch block to sleep and propagate exceptions in ElementAttributeTest . java to improve error handling and propagate exceptions during test execution
added UTF - 8 character encoding to the BufferedReader in HttpUtils . java to ensure proper handling of character encoding in input stream
refactor List class to improve code structure to enhance maintainability and readability of the code
added imports for URI and Path in AsyncFileImpl . java and created corresponding test class AsyncFileImplTest . java to improve code clarity
added API annotation to CucumberEngineExecutionContext and CucumberTestEngine classes to ensure that the CucumberEngineExecutionContext is
cloudstack - 4892 : do n ' t return empty list if no physical network id be specify
refactor retryUploads method to use ` retryFailedUploads ` instead of ` retryUploads ` for better clarity to improve code readability and
replaced ` getJavaVersion ( ) ` with ` classFileVersionJava9 ` in ` ConstantPoolTagTests . java ` to ensure compatibility with
refactor error handling and exception handling in the Compiler . java file to improve code clarity and maintainability by reducing redundancy
added a method ` removeAllHeaders ( ) ` to ` AsyncHttpClient ` that clears the ` clientHeaderMap ` to ensure that the ` client
replaced Vector with ArrayList for managing input and output files to improve performance and readability of the code
updated the default GRID _ COLUMN from 4.0 f to 3f in AppPreferencesImpl . java to improve the visual appearance of
added a condition to check if ` forViewCreation ` is not already defined in ` CalcitePlanner . java ` to ensure that view
updated date pattern formatting in TestHS2HttpServer . java to improve readability and consistency to enhance code clarity and maintainability
added error handling for object conversion in GraphPrinter . java to improve robustness by catching potential exceptions during object conversion
simonstewart : change the driver from IE to FIREFOX in SingleTestSuite . java to facilitate the
updated byteOffset calculation in ByteBlockPool . java and added a test for too many allocation in TestByteBlockPool . java to ensure byte
updated the format method in InteractionValueEncoder to use Locale . ENGLISH instead of static to ensure consistent formatting across different locales
added exception handling for unexpected exceptions in TcpTransport . java to improve error handling and provide clearer feedback on unexpected exceptions
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress warnings related to serialization functionality
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from ` OcamlDebug
refactor JabRefFrame . java to use a dialog for saving and discarding changes to improve user experience by providing clearer user feedback
added validation for response type and client ID in OAuth20DeviceCodeResponseTypeRequestValidator . java and updated error logging in OAuth20AccessTokenEndpoint
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to enhance the functionality of the ` chk
added a new parameter ` Class < ? extends InputFormat > ` to the ` initTableMapperJob ` method in ` TableMapReduceUtil `
replaced direct calls to ` append ` with ` append ` in ` AbstractJRubyMojo . java ` to simplify the code by
truffle : throw llvmexception if no internal language be find .
added assertions for deprecated reserveCommitDuration in ReplicationHandler . java to ensure that reserveCommitDuration is properly configured and should not be used directly
rename ` cacheVariableName ` to ` cacheForeignKey ` across multiple files to improve clarity and consistency in naming conventions
changed the type of ` handles ` and ` keyBytes ` from ` long [ ] ` to ` Object [ ] ` in ` generateECKeyPair
added suspend methods to Restarting and StateWithExecutionGraph classes and updated related test cases to enhance state management by allowing cancellation and cancellation state management
replaced instances of ` RotationTouchHelper . INSTANCE . get ( context ) ` with ` new RotationTouchHelper ` in ` Re
refactor code to streamline port table and override handling in UniFiControllerCache . java to improve code readability and maintainability
rename ` lwp _ id ` to ` unique _ thread _ id ` across multiple files to improve clarity and consistency in naming conventions
refactor offer handling logic in OfferBook . java to improve clarity and consistency to enhance code readability and maintainability by reducing duplication
replaced ` TLS . isTlsv13Available ( ) ` with ` TesterSupport . isDefaultTLSProtocolForTesting13 ( ) ` in
updated mock handling logic in MockitoMethodInvocationControl and SystemClassUserTest classes to ensure correct handling of mock types and improve test coverage for
replaced instances of ` new NotLoadedException ( ) ` with ` this ` in multiple files to ensure consistency in exception handling by using the
replaced import of DisplayUtils with a direct reference to OCFile in getIntent ( ) to improve code readability and maintainability by
added error handling and logging for failed compaction initialization in StoreDirect and StoreWAL classes to improve resource management and error handling during compaction operations
added a screenshot task execution in AbsSwipeUpHandler and refactored stopSwipePipToHome method calls in SystemUiProxy to
added a hidden flag to CommandArgumentDefinition and implemented it in LiquibaseCommandLine to allow users to control the visibility of command arguments based
[ hotfix ] [ kafka ] [ test ] fix the test of loggingkafkaproducetest
[ geos - 4341 ] use styling . styling . styling . styling . styling . styledlayerdescriptor
added permission checks and improved intent handling in InstallShortcutReceiver and Launcher classes to enhance user experience by preventing malicious intents during
added ` getId ( ) ` and ` setId ( ) ` methods to ` TideMapLoader ` , ` TmxMapLoader ` ,
refactor Manager class to improve code structure to enhance maintainability and readability of the code
updated JDBC connection URL to use Version . V _ 0 _ 13 in JDBCExample . java and SessionExample . java to ensure compatibility with the
added schemas and includeSchema properties to LiquibaseGenerateChangeLogMojo . java to enable schema generation based on configuration options
replaced ` putIfAbsent ` with ` put ` in ` registryCache ` for consistency to improve code readability and maintainability
[ planner ] make singlebenchmarker exception logger transient
removed the ` final ` modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore . java ` to ensure the method is
updated string concatenation in Tools . java and modified path replacement in FileSelectorFragment . java to improve code readability and maintain consistency in path formatting
refactor FastCGIProxyServletTest to use a new test method for handling response content to improve test coverage and ensure proper handling of response
added a new intent to start ReadInteractionsService in MarkReadService . java to enable processing of read interactions in the application
added a conditional check for lintClassfile before logging warnings in ClassReader . java to ensure warnings are only logged when linting the class file
added configuration for the ` mail . server . port ` property in ` Email . java ` to allow dynamic configuration of the ` smtp . port
refactor SSL factory reloading to use a retry policy for retries to improve reliability and reliability of the SSL factory reload process
updated the date format in ObjectMapperProvider from " yyyy - MM - dd ' T ' HH : mm : ss " to " yyyy : mm
corrected the assertion message in SpyingOnRealObjectsTest from " a private class " to " due to mocking a private class that
added a new boolean field ` _ isEndsOnNL ` and updated its logic in ` LineBox ` and ` VisualRegressionTest `
updated filePathString assignment to handle null parent cases to ensure the correct path string is used when the parent is null
removed unnecessary import of DocCollection in TopicStream . java to streamline code by eliminating unnecessary dependencies
refactor ` NinjaServletContextTest ` to use ` createHttpServletRequestInputStream ` instead of ` ByteArrayInputStream ` and add a new test for
added properties for management . endpoints . web . exposure . include in AbstractCasEndpointTests . java to facilitate testing of web
added validation to ensure the current graph is a dynamic graph to prevent runtime errors when the current graph is not a dynamic graph
updated the @ Target annotation from ElementType . TYPE to ElementType . METHOD and added a new EagerInitFactory class to handle disabled beans
added support for suppressExceptions in JsonPathExpression and related classes to enhance error handling capabilities for JSON path operations
removed redundant calls to ControllerLeaderLocator . create ( _ helixManager ) in HelixServerStarter . java to streamline code by
updated usage messages in CLHSDB and HSDB to use - help instead of - help to improve clarity and consistency in command line
refactored the ` configureChunkProvider ` method in ` FaultTolerantStepFactoryBean ` and ` SimpleStepFactoryBean ` to
[ beam - 1561 ] remove deprecate write class from flinkbatchtransformTranslators
refactor ` ShadowAccessibilityManagerTest ` to use ` AccessibilityManagerInstance ` instead of ` getAccessibilityManager ` to improve code cl
replaced specific imports with a wildcard import and added a new group display ID in the Analytics class to improve code readability and maintainability by
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in multiple JavaSourceJar and JavaLibraryDescription classes to simplify the
refactor ` PostgreSQLEnumDataTypeHelper ` to create a new class ` PostgreSQLEnumDataTypeHelper ` and add a new class ` PostgreSQLEnumDataType
updated the path in LogFileTests from " logpath / spring . log " to " logpath . separatorChar " to ensure consistent path
updated variable names from ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple classes to improve clarity and
added error handling for unsupported index tables in HiveMetaStoreClient to improve robustness by providing clearer error messages when dropping index tables
added a conditional check to update disabled flag for visibility in RecentsView to ensure proper handling of visibility changes during scrolling
added a specific highlighter for Windows systems in Repl . java to ensure proper syntax highlighting for Windows systems
added a method ` addOptionalLocalVariable ` to the ` BugInstance ` class and updated related imports in ` CrossSiteScripting ` to
replaced ` toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` in ` HadoopPinotFS . java `
removed unnecessary whitespace in the removeCaptureListener method call to improve code readability and maintain consistency
changed the ` _ metaDataComplete ` variable from ` true ` to ` false ` to reset the state of the ` _ metaDataComplete ` variable
updated task removal logic in RecentsAnimationController and modified bitmap creation in ThumbnailSearchResultView and WorkEduView to improve task management
added support for release flavor and Android flavor in JsBundleGenrule and corresponding tests to ensure proper handling of release and release environment variables in the
updated type casting logic in Lower . java and added a new class T6500701 . java with a test case in T6500
added tests for crlfNewLinesInComments and crlfNewLinesInJavadoc in AddImportTest . java and modified import statements in Aut
added a hubMode property to AbstractLiquibaseMojo and implemented it in AbstractLiquibaseMojo to enable configuration of
simplified the assignment of skipPolicy and processedItem in JsrFaultTolerantStepBuilder and JsrChunkProcessor to improve code
added error handling for linkDb existence in IndexerMapReduce . java to improve robustness by logging warnings when linkDb does not exist
refactor the retrieval of the " setIndexerThreadPool " method in LuceneTestCase . java to use reflection to improve code readability and
updated the address formatting in GameCanvasImplementation . java to improve readability and maintainability of the code
refactor MapJobExecutionDao to use a copy method for better readability and maintainability to improve code clarity and maintainability by centralizing
added a new test class ` DownloadTest ` for testing HTTP requests to facilitate testing of the ` DownloadTest ` functionality in the
updated language handling in multiple classes to ensure consistent normalization of language values to improve code clarity and maintain consistency in language validation
replaced instances of ` inputOI ` with ` arguments [ 1 ] ` in ` GenericUDFRound . java ` and updated exception
added a null check for selectedVersion in ManageDependencies . java to prevent potential NullPointerException when selectedVersion is null
removed multiple AntPathRequestMatcher instances from SecurityConfig . java to streamline the rendering process by eliminating unnecessary matchers
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are no longer needed
refactor BeanDefinitionInjectProcessor to check if the concrete class is the same as the class name before processing to ensure proper processing of bean definitions
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to improved reliability
[ openwebnet ] remove unnecessary delay from notification schedule
removed conditional checks for socket status in AprEndpoint . java to simplify the code and improve readability
deleted the SunToolkitSubclass . java file which contained a method to flush pending events to streamline the codebase by eliminating unnecessary
added a method ` hasRotationOrScaling ( ) ` to the ` DefaultRenderableSorter ` class and modified the ` getTranslation ` method to
added JUnit imports and a test for registering wrappers before primitive types in TypeHandlerRegistryTest . java to ensure proper handling of primitive types in
added a check for alternate color space in PDSeparation . java and implemented a method to convert RGB images to a PNG image to enhance
updated API URL constants to use BuildConfig instead of CommonsApplication to ensure compatibility with the latest API configuration
added health check classes for the MainHttpFakeHealthCheck class and corresponding unit tests to ensure that health checks are only performed when the status is not
added a null check for block position before accessing it in EntityThornChakram . java to prevent potential NullPointerException when the block position is
added a new test method ` testAlterTableWithIndexesExtendPk ` to ` AlterTableWithViewsIT . java ` to verify the
updated the initialization of ` off ` in ` FileFloatSource . java ` and added random assertions in ` TestFunctionQuery . java ` to
added a call to remove the DrillMongoConstants . ID from the fields list to ensure that the ID field is removed from the fields list
added disconnect methods to YeelightHandlerBase , DeviceBase , and WifiConnection classes to ensure proper resource management and resource management during
added auto _ increment handling in Parser . java and a test for auto - increment functionality in TestCompatibility . java to ensure proper handling of integer
added functionality to retrieve existing SharedIndexInformers in SharedInformerFactory and updated SharedIndexInformerFactoryTest to use a new synchronization period to enhance
cloudstack - 4392 : fix npe in templatemanagerimpl . savedetails ( )
refactor image handling in ShadowBitmapFactory to use RobolectricBufferedImage instead of Point for imageSizeFromStream to improve code clarity
removed deprecated constants from LauncherProvider and LauncherSettings classes to streamline code and improve maintainability
( chore ) camel - drools - core : use examples / broker / examples / broker / drl instead of drl
added legendTop and legendTop variables to PieChart . java and adjusted offset calculations in PieChart . java to improve layout consistency and
added a condition to return early if the world transform is zero to improve performance by avoiding unnecessary processing when the world transform is zero
added a new file ` MaryScriptCreator . java ` that implements the ` MaryScriptCreator ` class to facilitate the
added session attribute for the " restlistener . remote . source . host " attribute in ListenHTTPServlet . java to enable dynamic configuration of the
refactor compaction logger initialization and file deletion logic in LevelCompactionTsFileManagement . java to improve code readability and ensure proper resource management
corrected the spelling of " xlink : href " from " xlink : href " to " href " in ComponentDescription . java
camel - 15836 : camel - aws2 - s3 - stream - upload - allow to specify the executor name for the timeout checker
[ iotdb - 3391 ] add log to regionserver when cluster be shut down .
added null check before logging the span in Slf4jSpanLogger and DefaultTracer to avoid potential NullPointerExceptions during span logging
updated the way the active option is added to the configuration to ensure that the active option is trimmed before adding it to the configuration
added support for enabling the wallpaper depth effect in DepthController to enhance wallpaper zoom behavior based on user preferences
updated the assertion to check the success count of the overseer state in OverseerTest . java to ensure the correct success count is
removed the ` getKernelVersion ( ) ` method from the ` LinuxFileStore ` class to streamline the code by eliminating unnecessary
refactor ExecConstants class to improve code readability to enhance maintainability and facilitate future updates
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality in the application
added a method to set ScanAttributeForPaging in TableSnapshotResultIterator and updated ScanUtil to use PhoenixConnection to enhance
added a check for the lowRange before setting it in Request . java and modified conditional checks in RequestV2 . java to ensure that low
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected and added debugCacheSize method in AsyncWriteCache to enhance encapsulation
updated the zone ID assignment from ` getUuid ( ) ` to ` getZoneUuid ( ) ` in ` HostJoinDaoImpl . java ` to
updated content type from " application / json " to " application / json " and added UTF - 8 encoding support in BaseLivyInterpreter
removed conditional check for filesystem removal in ZipFileSystemProvider . java to simplify the removal process by eliminating unnecessary checks
replaced the use of ` obj ` with ` json ` in the ` HttpRequestBuilder ` class to simplify the code and improve readability by
updated the poll duration in SoftAutoCommitTest from 2 to 3 in SoftAutoCommitTest . java to improve test reliability by adjusting
added error handling for listener event calls in ` SelenideLogger ` and updated test cases in ` SelenideLoggerTest ` to improve
refactor multiple Dial - related classes to improve code organization and readability to enhance maintainability and facilitate future development
corrected formatting of error messages in SyncQueue . java to improve code readability and maintain consistency
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 in RyukContainer . java
updated ` BootClassLoaderHook ` to return additional bootstrap paths instead of ` getBootstrapPaths ( ) ` in ` BootClassLoaderHook . java `
refactor path retrieval logic in FMLClientLaunchProvider . java to improve clarity and consistency to enhance code readability and maintainability by
replaced the instantiation of YarnClusterDescriptor with a direct call to createYarnClusterDescriptor to simplify the code and improve readability by
refactor LocalMapStatsProvider to use ProxyService and add a method to add stats of no data included maps to improve performance by reducing
deleted the AllTests . java file to the test class is no longer needed in the project
added Unicode character constants for non - breaking characters and zero - width spaces in AbstractWordConverter . java to ensure proper handling of character characters
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` for testing large stack trace invocations to ensure that large
updated the method call from ` getResultMappings ( ) ` to ` getResultMappingsForRowKey ( ) ` in ` createRowKeyForMapped
added a new flag ` eventHandled ` in ` UIText . java ` to mark the event as handled to ensure that the event is
deleted the Controller . java file and modified the Weldby class to use WeldModule instead of Weldby to streamline the codebase
added a monitorCaptureGroupsInEmptyCheck flag to TRegexBacktrackingNFAExecutorNode and updated conditional checks in NFATravers
changed the visibility of the liquibaseProLicenseKey variable from package - private to protected to allow external access to the Liquib
refactor ` setMeasuresHierarchyMemberReader ` and ` setMeasuresHierarchyMemberReader ` methods to use a dedicated method to improve code
added a debug info value update handler to the SubstrateOptions class to enhance debugging capabilities by allowing customizable value updates
refactor MondrianProperties class for improved clarity to enhance maintainability and readability of the code
added friend paths handling to multiple classes and updated related classes to utilize it to improve the handling of friend paths in the Kotlin library
added aliases for BATK , BRAHMI , and MAND in Character . java and modified the main method in CheckScript .
refactor ExecutionCommand equality checks in ` ExecutionCommand . java ` and add a new method ` stringToExecutionCommand ` in ` StageUtils .
refactor Mockito class for improved clarity to enhance maintainability and readability of the code
refactor OCFile class to improve code readability to enhance maintainability and facilitate future updates
added a toString ( ) method to the SystemScope class to provide a string representation of the SystemScope object
added handling for number and percentage types in CSSParser to improve error handling and provide clearer feedback on invalid parameter values
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ( ) ` to ` LocalIndexIT . java ` to ensure
replaced InstrumentationRegistry with ApplicationProvider in BaseAndroidTestCase . java and updated assertions in BackupHelperTest . java and LanguageHelperTest
updated messages in ItemListActivity , LiveTvGuideActivity , MediaManager , and LiveTvGuideActivity to use localized strings instead of
updated condition checks in RendererUtilities . java and added a new test case in RendererUtilitiesTests . java to improve code readability and ensure correct
refactor KrakenStreamingAdapters to use ArrayNode instead of Iterator for askIterator and bidIterator to improve type safety and maintainability of
added a try - catch block around SQL execution in FileContentProvider . java to handle SQLiteException when upgrading from 24 - > 30 to
removed System . err . println from AsyncServletIOTest . java to clean up the code and improve readability
refactor data size computation in ConvertJoinMapJoin to use onlineDataSize instead of totalSize to improve code clarity and maintainability by centralizing
updated the ` buildView ` method to accept a ` Context ` parameter and added background resource management in ` TrackSelectionHelper . java ` to
added an assertion mechanism to the SecurityMockMvcResultMatchers class and corresponding tests in SecurityMockMvcResultMatchersTests to enhance security handling by allowing
vpc : setvpcid do n ' t need to be set to null
[ flink - 10955 ] [ test ] fix flink - 10955 test
corrected the spelling of ` @ Cue . TextSizeType ` and ` @ Cue . TextSizeType ` from ` private
updated loop condition in Actor . java to include a condition to ensure actions are only applied when the index is less than or equal to the size
replaced BaseExchange with BitmexExchange in BitmexStreamingExchange and updated ExchangeSpecification initialization to ensure compatibility with the Bitmex
added MetadataFieldService and MetadataSchemaService for relationship handling in RelationshipRestRepositoryIT . java to facilitate metadata field creation and schema
added null check for spatial before processing to avoid potential NullPointerExceptions when spatial is null
added ` true ` to ` ConditionalTokenFilter ` and updated position increment settings in ` FixedShingleFilter ` and ` TestConditionalTokenFilter
refactor UnsafeStoreNode and StoreFieldNode to use stateAfter ( ) instead of graph to improve clarity and maintainability of the code
replaced the superclass method ` super . putAddress ` with ` io . putAddress ` in ` BoundedMemoryIO . java ` to
added an assertion to verify that the event repository is not empty before proceeding to ensure that the event repository is not empty before proceeding with
removed unnecessary parameters from AuthenticationAttrProcessor and AuthenticationAttrProcessor classes to improve code clarity and maintainability
added null checks for the specified key in MacOSXPreferences and created a new file RemoveNullKeyCheck . java to ensure that null keys
added a method ` setTypeface ` to the ` CodenameOneTextPaint ` class to ensure that the ` setTypeface ` method is
added ` open ` methods to ` AzurePinotFS ` , ` LocalPinotFS ` , and ` PinotFS ` classes to
simonstewart : remove the deprecated method from webdriverrunner . fail ( )
removed the condition from checking if the item size is greater than zero to simplify the condition for better readability and maintainability
refactor DefaultResultSetHandler to use a new boolean variable for clarity to improve code readability and maintainability by reducing duplication
updated SQL syntax in CreateTableGeneratorTest . java to include a space in the generated SQL string to ensure proper formatting of the generated SQL string
modified the filtering mode logic in VectorizationContext . java to handle PRIMITIVE and FILTER cases to ensure proper handling of filter expressions based on
updated the type of ` moveSelectorConfig ` from ` ConfigUtils . inheritConfig ` to ` ConfigUtils . < MoveSelectorConfig > `
removed the instantiation of ReorganizeTableStatement from ModifyDataTypeChange . java to simplify the code by eliminating unnecessary parameters
updated cluster name handling in SystemPropertiesUtils , IoTDBStartCheck , and DataNode classes to use constants instead of hardcoded values to improve
refactor connection handling in PeerGroup and improve error logging in PeerGroup to enhance clarity and maintainability of connection handling logic
nano do n ' t set style when there be more than two style string
replaced ` Block _ ENTITY ` with ` CompoundTag ` in ` MCEditSchematicReader ` and ` Sponge
corrected the return value in NoToStringOnStringType . java from " Use ` String ` " to " No # toString ( ) on
updated TestThreadFailure . java to use " - Xmx32m " instead of " - Xmx64m " to ensure compatibility with
updated the ` retryFailed ` method to return a ` FailureContext ` instead of an integer to improve clarity and maintainability of the retry
change return value from ` tokens [ 0 ] ` to ` bandwidth ` in ` BucketStateIEEE754 . java ` to correct the
added new methods for selectPopUp , deselectPopUp , captureNetworkTraffic , and captureNetworkTraffic in WebDriverBackedSelenium to
refactor doPrintEntry method to use KeyUtil for better key management to improve code readability and maintainability by reducing redundancy
[ hotfix ] [ test ] fix typo in taskasynccalltest
added validation checks for dialog , dialog , and frame components in Dialog and Frame classes to ensure that dialog and frame are not opaque before proceeding
changed the ` state ` variable from private to final in ` DefaultProjectFilesystem . java ` to ensure immutability of the ` state `
refactor RedisObjectFactory to utilize RedisStandaloneConfiguration for sentinel configuration and database settings to enhance flexibility in configuration management for Redis connections
added logic to retrieve and update the lastSeenDelayedMessage property in ChatRoomJabberImpl . java to ensure that the delayed message is
added a NOOP callback to the notifyContent method call in ResponseNotifier . java to ensure that the callback is not executed when the response is
refactor FileOperationsHelper and OperationsService to utilize OperationsService for creating share operations to improve code organization and maintainability by centralizing share
corrected the spelling of " Value " and " Property " in BeanDefinitionInjectProcessor . java and added a Inject annotation in FieldProperty
updated loop conditions in ClassicPlotManager . java to use yStart instead of minBuildHeight to ensure proper handling of build height based on the
added a check for NullPointerException in SmackIntegrationTestFramework . java to ensure proper handling of NullPointerExceptions during test execution
added a boolean parameter to the readDirectory method and updated its usage in EXIFReader . java , and added a test for reading JPEG with
added support for the ENABLED _ LS flag in VersionTargetGraphMode and modified the DepsAwareExecutor initialization in VersionedTargetGraphCache to enhance
added conditional checks for video formats in DLNAResource . java to ensure proper handling of video formats in the parser and default renderer
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added a load flag to LwjglNativesLoader and modified the load method in LwjglApplet to enable dynamic loading of
added support for CSV escape functionality in CSVRequestHandler and updated encapsulator handling in TestCSVLoader to enhance flexibility in CSV handling by allowing escape
added support for OAuth2 grant type in ClientRegistrations and updated corresponding test cases to enhance flexibility in handling OAuth2 grant types and ensure
updated exception handling in Throwable . java and added initCausePlumbing method in SuppressedExceptions . java to improve error reporting and provide clearer
added SQL queries and assertions in DerivedTableIT . java and updated iterator initialization in ClientAggregatePlan . java to improve test coverage and ensure
added a " RSquare " variable to the map in RegressionEvaluator . java and a corresponding test in StreamExpressionTest . java to
added support for handling request header names in ThreadContextMDCServletFilter to enhance security by allowing customizable request attributes
updated input paths and temporary directories handling in SparkPlanGenerator . java to improve clarity and maintainability of the code
added methods to retrieve folder and country images in PdfJndiReport and PdfSessionInformationsReport classes to improve image retrieval logic for folders and
updated the caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver to use Duration instead of Long . MAX _ VALUE and added a new test for
updated resource existence check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test
modified the ` get ` method in ` LLVMInteropType ` to include a ` isMethod ` parameter to enhance functionality by allowing methods to
replaced MILLISECONDS . sleep ( 500 ) with MILLISECONDS . sleep ( 500 ) in AbstractBasicMockingIntegrationTest . java to simplify the sleep
added a new file ` KernCrash . java ` that displays a Kerning Crash with font attributes to facilitate
added a failure ( ) method to the LinkedHashTreeMapTest class to ensure that failures are properly handled during test execution
added a method ` getInterfaceAddresses ` to retrieve network IP addresses based on a prefix to provide functionality for retrieving network IP addresses based on the
[ zeppelin - 1745 ] cancel all scheduled task in hikariport ( # 1745 )
updated the method call from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in ` GroupTransferService . java ` to
refactor Assert class to improve code readability to enhance maintainability and facilitate future updates
added a new test class ` Issue247Test ` to verify the functionality of the ` org . mapdb ` file to ensure that the
changed the type of ` results ` from ` Set < CategoryItem > ` to ` Set < String > ` and modified the ` doIn
updated validation logic in ValidatorTest . java to check for today and birthLeapYear before validating max age validation to ensure accurate validation of max age
added GrblLookups for alarm and error codes and modified response processing logic in GrblController . java to improve error handling and
updated the return statement to include a conditional check for the number of screens before returning the home button label to enhance user experience by providing
removed the ` count ` parameter from the ` getTrades ` method and updated its usage in ` BittrexMarketDataService `
updated ConsoleReader . java and MemoryHistory . java to remove unnecessary lines and flush calls to simplify code and improve readability by eliminating
updated the path for the JDK file in JavaBuild . java to ensure the correct file path is used for the JDK application
updated method calls to use ` getType ( ) ` instead of ` getDescription ( ) . getBuildRuleType ( ) ` in multiple classes to improve
added a logger parameter to the JFCModel constructor and updated related methods to accept a Consumer for logging warnings to enhance debugging capabilities by allowing logging
added a validation check for tolerance in MaximumInscribedCircle . java to ensure that the tolerance is non - positive to prevent runtime errors
added methods for creating views and dropping view privileges in TestUtil . java and corresponding tests in DatabaseMetaDataTest . java to enhance functionality for
added support for expectStableFloats and expectStableDoubles in NaNTest . java to enhance test coverage for non - X86 platforms
added a new class ` DesktopTaskbarUIController ` to manage the ` DesktopTaskbarUIController ` class based on the system
updated SearchModFragment and ModItemAdapter to implement TaskCountListener and updated installation button state handling to improve task management and ensure proper UI updates
refactor file handling logic in Files . java to improve code readability and maintainability
refactor method signatures and variable declarations in AnnotationGrpcServiceDiscoverer and GrpcServerAutoConfiguration to improve code readability and maintainability
removed the @ FunctionalInterface annotation from the DomainAwareServicesManager interface and its ChainingServicesManager class to simplify the interface and improve cl
add debug logging to resourcepackloader . generatepackinfo ( )
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added methods ` grow ` and ` growX ` and ` growY ` to the ` Cell ` class to facilitate the grow
replaced the ` currentBindings ` map with a ` HashMap < KeyStroke , ActionListener > ` for key binding handling to simplify the code and
http : / / issues . apache . org / jira / browse / amq - 4892 - add try - catch block to
replaced ` long ` array with ` byte ` array and added a check for memory fail count in ` MetricsMemoryTester . java `
deleted the JobParametersPrototype . java file to the functionality was no longer needed for the application
added a securityEnabled flag to the MappingsTable class and updated related test cases to enable security functionality based on configuration settings
rename ` APPLE _ SWIFT _ OBJC _ CXX _ HEADERS ` to ` APPLE _ SWIFT _ EXPORTED
changed the DUMP _ TO _ FILE constant from true to false in TestMSPowerPointParser . java to disable the dump to file
updated the ` codecNeedsEosPropagationWorkaround ` method to accept ` MediaCodecInfo ` instead of ` codecName ` to improve flex
[ java ] do n ' t increase publisher limit if there be no spy position .
added a check for no info output in the dbInfo condition to ensure that the output options are only processed when no info is provided
refactor SSL connection handling in ConnectionProperties and PrestoDriverUri classes to improve clarity and consistency in SSL configuration handling
added DOMOutputOptions import and modified the buildDOMSubtree method call to include error output options to enhance XML output handling for better user experience
refactor Assert class to improve code readability to enhance maintainability and facilitate future updates
added a new parameter ` topic ` and ` retained ` to the ` Event ` class and updated related methods in ` Session . java ` to
removed the @ JsonIgnore annotation from EventSerializationTest . java and updated the JSON message formatting in EventSerializationTest . java to streamline the
added a method ` getName ( ) ` to the ` SqlGroupedWindowFunction ` class and updated the constructor in ` SqlStdOperatorTable `
replaced the import of ` fastparse . core . Parsed ` with ` fastparse . Parsed ` in ` LatexToUnicodeAdapter .
refactor SSL _ CTX _ new ( ) to be volatile and modify timeout handling in AbstractSessionContext . java to improve thread safety and
updated condition in AppModule . java and added a new Watcher constructor in Watcher . java to improve clarity and functionality of the Watcher class
rename CalciteSqlDialect to AnsiSqlDialect in SqlNodeConvertContext . java to improve clarity and consistency in naming conventions
change logging level from debug to trace in FirmwareUpdateService . java to improve logging clarity for better debugging
added unit tests for ` getDate ` and ` timestamp ` methods in ` GetObjectTest ` to ensure proper handling of null values in SQL queries
refactor string handling in StringSubject and Subject classes to improve clarity and consistency to enhance readability and maintainability of the code
added a test method to validate repository permissions multiple teams in the UserModel to ensure correct behavior of repository permissions for multiple teams in the repository
added a new Java file ` Test7088020 . java ` implementing method invocation in ` MethodHandles . lookup ( ) . findStatic
refactor audience handling in Saml2ResponseValidator to use a HashSet for better clarity to improve code readability and maintainability by redu
refactor cache management methods in AbstractDataChangedListener and HttpLongPollingDataChangedListener to improve code readability and maintainability to streamline
changed the ` PrintStream _ stderr ` variable from ` System . err ` to ` null ` in ` StdErrLog . java ` to ensure
added a new warning ` SEPARATION _ ORDER ` in the ` BasicEventSimulationEngine ` class and modified the ` BasicEventSimulationEngine
updated the optimization parameter from offlineTableConfig to realtimeTableConfig to align the query optimization with the realtime table configuration
updated the SQL execution format and added support for the " hbase . normalizer . enabled " property in multiple classes to improve clarity and functionality
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added BluetoothClass functionality to ShadowBluetoothDeviceTest and ShadowBluetoothDevice to enable testing of BluetoothClass functionality in the ShadowBl
rename method ` contains ` to ` containsProfile ` in ` GlowOfflinePlayer ` , ` GlowPlayer ` , and ` UuidList
[ te ] fix sum function to return an error if the list be empty
updated the method call from ` graphModel . getGraph ( ) . readUnlockAll ( ) ` to ` graph . readUnlockAll ( )
updated coreNodeName assignment to use nodeProps ' s getCoreName ( ) instead of nodeProps ' s getNodeName ( ) to improve clarity and
replaced ` ContactVcardViewerFragment ` with ` UpdateBackpressure . UpdatableObject ` and refactored the ` update `
refactor TaggerParserPosTagCompatibilityITest . java for improved clarity to enhance maintainability and readability of the code
added @ LuceneTestCase . SuppressCodecs annotation to BaseVectorSimilarityQueryTestCase . java to suppress code safety for SimpleText
updated conditional checks in mmm Types . java and added a new class T7005671 . java with two test cases in T70056
updated superTriangle calculations in DelaunayTriangulator . java and added seed in DelaunayTriangulatorTest . java
added @ Override annotation to multiple classes in ArrayDeque , HashSet , linkedlist , linkedlist , linkedlist , linkedlist , linkedlist ,
refactor JWTClaimsSet initialization to use a builder method for improved clarity to enhance code readability and maintainability by centralizing JWT
refactor state management in StackOverflowCheckImpl for improved clarity and functionality to enhance code readability and maintainability by reducing red
added Shadow classes for SQLiteDatabase , SQLiteDatabase , and ContentValues in Robolectric and SQLiteDatabaseTest classes to enhance functionality and improve
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java `
replaced ` bytesPerDim ` with ` ArrayUtil . getUnsignedComparator ` in ` BKDWriter . java ` to improve code clarity
refactor locale initialization and initialization logic in Locale . java to ensure default locale is initialized when defaultLocale is null to improve robustness and prevent potential
change return value from ` mIconCurrentTextAlpha ` to ` mIconLastSetTextAlpha ` in ` PredictionRowView . java
updated warning message from " Confimap " to " ConfigMap " in ConfigurationChangeDetector . java to clarify the purpose of the number of
updated DefaultConfigurationTestSuite and TokenRevocationEndpointTest to use UaaJunitSuiteRunner ' s allSuiteClasses ( ) method to improve
trim whitespace from token names in GzipFilter . java and GzipFilterDefaultTest . java to improve code readability and maintain consistency in naming con
corrected the spelling of " WRITER " in the _ outputType assignment to ensure consistency in output type handling
updated the default value of the " nashorn . regexp . impl " property from JDK to JONI to ensure compatibility with the latest
replaced ` LooperExecutor ` with ` Executor ` and updated the ` captureViewPropertiesBg ` method to utilize ` FutureTask `
added handling for unknown styles in MaryGenericFeatureProcessors , Voice , InfoRequestHandler , and MaryHttpServer classes to ensure proper handling of
added a check to ensure the parent folder exists and mkdirs before creating it to improve error handling for folder creation failures
updated log message from " 0.0 . 0.0 " to " 127.0 . 0.1 " in Args . java to
camel - 16400 : fix typo in workitemhandler and inoutworkitemhandler
pdfbox - 4892 : remove unused import , a suggest by valerybokov
updated various classes to replace ` WorkModeToggleContainer ` and ` WorkFooterContainer ` with ` WorkFooterContainer ` and ` WorkModeToggle
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
refactor code for improved readability and consistency in DefaultJavaPrettyPrinter . java to enhance code clarity and maintainability by reducing
[ hotfix ] [ runtime ] free memory in operatorcontext
updated string formatting in QueryByExamplePredicateBuilder and JpaPersistentPropertyImpl to improve clarity and consistency to enhance readability and maintainability
replaced ` cumulativeStats ` with ` statsList ` and updated related methods in ` ConcurrentLRUCache ` and ` FastLRUCache
replaced the method ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` in ` DefaultTaskExecutor ` to
remove redundant check for local host and intendedDestination in NetworkAddressManagerServiceImpl . java to improve code readability and maintainability
added RuntimeEnvironment initialization and data root and source root settings in MainFrame . java to ensure compatibility with OpenGrok ' s database and source
added ` MarkedClientEnabled ` and ` MarkedServerEnabled ` methods to ` AdminClientBootstrapConfiguration ` , ` AdminServerBootstrapConfiguration
refactor TableEnvironment class to improve code readability to enhance maintainability and facilitate future updates
updated timeout handling in MapperBuilderAssistant to use a dedicated method for setting the timeout to improve code clarity and maintainability by reducing
updated method signatures in JSweetTranspiler , TypeScript2JavaScriptTranspilation , and TypeScript2JavaScriptWithTscTransp
added GeoLocationRequest and GeoLocationResponse classes to CasCoreAuthenticationComponentSerializationConfiguration to enhance data serialization capabilities for GeoLocation requests
replaced ` ImmutableSourceArtifactImpl ` with ` BuildArtifact ` in ` ArtifactFilesystem . java ` and ` ArtifactFilesystemTest . java `
tika - 1343 -- add test to verify that jls . xls be not a hpsf document
ggbscript : do n ' t trigger concurrent modification when script be trigger
[ java ] fix npe in tcpnioconnection when there be no data available .
added validation for ` actual ` and ` expected ` values in ` GuavaOptionalSubject ` and corresponding tests in ` GuavaOptionalSubjectTest
updated the visibility logic in BackgroundAppState and ShelfScrimView to include VERTICAL _ SWIPE _ INDICATOR to
added a null check for the nav variable in MatDefEditorlElement . java to prevent potential NullPointerExceptions when nav is null
ggb - 1343 fix for absolute location , use classicboundingbox . setboundingbox . setboundingbox .
refactor ErrorOccuredInOnExceptionRoute class to improve error handling logic to enhance reliability and maintainability of the error handling logic
replaced ` scheduleAtFixedRate ` with ` scheduleWithFixedDelay ` and updated logging level in ` AstroDiscoveryService . java ` to
simplified the assignment of irrUnit and pemUnit in SinglePassAndImageBasedLightingLogic . java to improve code readability
added JUnit @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable test hangs due to
updated import statements in GuiceFactoryTest . java to improve code clarity and maintainability
added a ` systemFeatureList ` map to ` RobolectricPackageManager ` and corresponding tests in ` RobolectricPackageManager
added a new constant ` PROP _ PATH _ POSTFIX ` and refactored property handling in ` RCAFrameworkLoader ` to improve path
removed logging statement from Task . java to clean up the code and improve readability
added a null check for enumerationValues before setting it to null to prevent potential NullPointerExceptions when enumerationValues is empty
refactor inline box handling logic in BoxBuilder and InlineBoxing classes to improve readability and maintainability of the code
replaced ` collectAndSendTelemetryData ` with ` collectAndSendTelemetryDataAsynch ` and added a method to retrieve the
removed MYSQL database type handling from UpgradeCatalog260 . java to simplify database alteration logic and improve code clarity
updated error messages in BaseTableDataManager . java for clarity to improve user understanding of permissions for directory creation failures
refactor DatasetUtilities for improved readability to enhance maintainability and clarity of the code
added a new string concatenation for the selector ID in the Matcher class to improve readability and maintainability of the code
updated debug log message formatting in GouraudShadingContext . java to improve readability and maintain consistency in logging output
changed NUM _ ALPHA _ CHANNELS from 3 to 4 and added taskbar alpha management in TaskbarDragLayerController and TaskbarLauncher
added new constants for ECDH and ECDHe in KeyExchange . java to enhance code readability and maintain consistency in naming conventions
added a condition to check if the connection is a JdbcConnection before executing the select version ( ) method to ensure proper handling of JDBC connections and
updated file index handling in ServerMainTest . java to ensure consistent handling of " 2 . log " and " 1 . log " to improve
added getMediaRecorderingMimeType ( ) methods to CodenameOneImplementation , MediaManager , Display , and ImageIO classes to provide access to
changed the access modifier of the useShaders method from private to public in ShaderHelper . java and RenderTileEnchanter .
updated the BindableFilter condition in DruidAdapterIT . java to use OR instead of 6588 to ensure compatibility with the latest version of
updated the variable name from " zkHost " to " zkConnectTimeout " in CloudSolrServer . java to ensure consistency in naming conventions
refactor conditional statements in XMPMetaParser . java for improved readability and maintainability to enhance code clarity and maintainability by
added a new interface ClientRegistrationIdentifierStrategy with a method to retrieve the identifier of a client registration to facilitate the use of the
simplified the condition for processing script results in UrlHelper . java to improve code readability and maintainability
rename ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and add a new test class ` VarargsAndWildcardParameter
refactor border checks to use a new method ` borderIsNotSetOrBlank ` to improve code readability and maintainability by reducing red
change log level from info to debug in WatchConnectionManager and WatchHTTPManager to improve log verbosity for better debugging
updated import statements and added HubRegisterResponse handling in InternalDropAllCommandStep . java and HubUpdater . java to improve code clarity and
replaced ` byte [ ] & 0xff ` with ` Byte . toUnsignedInt ( b [ off ] ) < < 8 ) `
updated the method call from ` getBytes ( RemotingHelper . DEFAULT _ CHARSET ) ` to ` getBytes ( RemotingHelper . DEFAULT _ CHARSET
updated the default value of ` DepFiles . ENABLED ` from ` DepFiles . ENABLED ` to ` Cache ` in ` AbstractCachingBuildEngine
changed the ` rangePannable ` variable from true to false in ` CategoryPlot . java ` to disable the rangePannable functionality
modified the handling of the main and work mode switch logic in AllAppsContainerView . java to ensure proper handling of views based on the current
changed access modifiers of GLCapabilities and FPSAnimator variables in Visualizer2TopComponent . java to enhance encapsulation and improve code readability
added handling for CancellationException in FunctionTest . java to ensure proper handling of cancellation exceptions during tests
changed access modifiers of ` JarFileResource ` and ` JarResource ` constructors from package - private to protected to allow subclass access to these constructors
refactor DefaultTrackSelector class for improved clarity to enhance maintainability and readability of the code
added a loop to sleep for unseqmerging in LevelCompactionTsFileManagement . java to ensure proper handling of unseqmerging
updated the currency type from AUD to BTC in BTCMarketsAdaptersTest . java to ensure the test accurately reflects the
added @ Table annotation to the Post class and updated test cases in HibernateDTOProjectionTest and JPADTOProjectionTest to improve clarity
refactor Unicode class to improve code readability to enhance maintainability and facilitate future development
updated the ` installAutoInstance ` method to include a ` Service ` parameter and modified the ` updateHiveLLAPSettingsIfRequired `
updated the method call from ` onComplete ( ) ` to ` onComplete ( ) ` in ` SendHeadersFirstPublisher . java ` to ensure proper
( chore ) camel - aws : use jackson builder instead of jsondeserializer
added support for BIG _ DECIMAL in RangePredicateEvaluatorFactory to improve error handling for unsupported values in the dictionary
refactor ` wrap ` methods to use ` javacProcessingEnvironment ` and ` javacMessager ` instead of ` inner ` to
removed unnecessary annotation printing in ParameterInfo . java to streamline the code for better readability and maintainability
updated playback handling in PlaybackController and VideoManager to use getAc3Enabled ( ) instead of getLiveTvDirectPlayEnabled (
added a new HashMap to return a JSON response with a value of null to provide a JSON representation of null values in the HTTP response
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement and DiskFileItem classes to suppress warnings related to Commons DBCP and
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` and modified ` DataNodeTemplateSchemaCache
refactor RTimerTree class to improve code structure to enhance maintainability and readability of the code
changed package declarations from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
updated gapX calculation in Letters . java and added a new test class TestIssue358 . java to ensure gapX is rounded to
updated the initialization of ` setExecutor ` and ` setScheduler ` to use a dynamic name for client pool and scheduler to improve clarity and
updated visibility of treePane , resultPane , and treeSplitPane in ViewResultsFullVisualizer . java to improve encapsulation and ensure proper
added ` phoneNumbersListDescription ` and ` phoneNumbersDescription ` fields to ` ScimUserEndpointDocs . java ` for managing user phone
changed class access modifiers from package - private to private in DeleteFiles , IndexFiles , IndexHTML , and SearchFiles classes to enhance encapsulation
added null checks for responseMap in JsonHttpPropertyRequest . java and updated error logging in URLStreamProvider . java to improve robustness by
refactor SolrRequestHandler class to improve code readability to enhance maintainability and facilitate future updates
added a condition to check if the parallel value is not DEFAULT _ PARALLEL in XmlSuite . java to ensure that parallel values are
updated import statements in TestVmwareMO . java and TestVmwareUtil . java for consistency to improve code clarity and maintain consistency in
added a check for SCARD _ E _ NO _ SMARTCARD in CardImpl . java to ensure proper handling of SCARD _ E
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress system output checks for better test reliability
camel - 16400 : camel - bindy - add bind method to bindy - complex - one - to - one - to -
changed ` useOwner ` and ` useTimeStamp ` from ` TRUE ` to ` FALSE ` in ` JabRefPreferences . java ` to
updated method signatures in ` Utils . java ` to use ` ThrowingRunnable ` instead of ` Runnable ` to improve clarity and consistency in
updated hash calculations in CrawlURI . java to handle null values to improve robustness by avoiding potential NullPointerExceptions
camel - 14263 : camel - aws - sdb should use component instead of create new sdbcomponent
updated version number from " 4.1 . 1 " to " 4.2 " and refactored object retrieval in Liquibase
updated CERT _ VALIDITY from 7 to 90 in ProxyControl . java to reflect the new certificate validity configuration
updated ThreadHandler to use a smoothDelta variable and modified return values for frame and elapsed calculations to improve the accuracy of frame handling and ensure accurate
added a null check for paginator and improved URL parsing logic in HttpBatchReader , HttpScanBatchCreator , and TestPagination classes to enhance
added null check for CompactionInfo client in Worker . java and implemented a test for findNextCompact method in TestWorker . java to ensure
updated the onSaveInstanceState method in ShadowFragmentActivity and added a test for onSaveInstanceState in FragmentActivityTest to ensure that onSaveInstanceState
removed unnecessary whitespace in BatchResourceFactoryBean . java to improve code readability and maintain consistency in formatting
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure correct handling of red color references in the color resource loader
added error handling for NoResultException in AbstractJPAQuery and created a new test for unique results in AbstractStandardTest to improve robustness
replaced direct assignment of ` fromCache ` with ` owner ` in ` Collection . java ` to improve code readability and maintainability by
updated the method call from ` l ` to ` LawnchairApp . getInstance ( ) ` in ` DepthController . java ` to
removed unnecessary import statements in LocalManagementTest . java to streamline code by eliminating unnecessary dependencies
removed the ` now ` parameter from the ` updateTotalEnergyAverageUsage ` method in ` EnergyProcessor ` and ` Manager `
added null checks for extensions and outgoing in ExtensionStack . java to improve robustness by avoiding potential NullPointerExceptions
added error handling for inner cancellation in FlowableFlatMap and corresponding test cases in ObservableFlatMapTest to ensure proper handling of cancelled subscribers and ensure
added connection timeout settings to MultiGetRequest , ControllerStarter , and ServerTableSizeReader classes to improve connection management and enhance error logging for
removed unnecessary whitespace in AndroidPrebuiltAarDescription . java to improve code readability and maintain consistency
rename NewModelTest to ModelTest in LwjglDebugStarter . java to improve clarity and consistency in naming conventions
replaced multiple instances of SystemResourcesEdgeEventFetcher with TenantResourcesEdgeEventFetcher in EdgeSyncCursor . java and updated image inline method in
updated caching logic in CachingBuildEngine and added a new test for output hash calculation in CachingBuildEngineTest to ensure correct output hash
camel - 16400 : camel - netty - allow to use bytebuffer for camel - netty
updated the method call from ` getOldName ( ) ` to ` getOldName ( ) ` in ` DDLTask . java ` to
improve error message when create vertx instance with the prefernativetransport option set to true
updated package structure from ` org . terasology . persistence . typeSerialization . typeHandlers . core ` to ` org . terasology
refactor StreamEx class for improved readability to enhance maintainability and clarity of the code
updated query hint settings in SessionImpl . java to include specQueryTimeout and specLockTimeout to ensure proper handling of query timeout and lock timeouts
added a new file ` StaticLoggerBinder . java ` that implements ` LoggerFactoryBinder ` to provide a singleton logger factory to facilit
replaced multiple calls to ` familyMap . put ( ) ` with a direct call to ` this . familyMap . put ( ) `
added orientation checks for window configuration in TaskbarManager . java to ensure proper handling of window orientation changes
replaced StringEscapeUtils . unescapeXml with StringEscapeUtils . unescapeXml in ChatRoomJabberImpl . java to ensure proper XML
updated the longStackPut method signature in StoreDirect . java and added unit tests for compacting and cache operations in Issue265Test . java
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress warnings related to mutable components
[ zeppelin - 2242 ] add test case for executionflowcontroltest
updated conditional checks in DLNAMediaInfo , DLNAResource , and FFMpegVideo classes to improve code readability and
updated NBWriteServlet to accept a boolean parameter for unlimited state to enhance flexibility in handling write operations in blocking API
update total difficulty update method in BlockchainImpl and add a test for invalid blocks in ImportLightTest to ensure correct handling of invalid blocks
refactor action assignment logic in DefaultPlaybackController to simplify logic and improve readability to enhance code clarity and maintainability
replaced synchronized list with CopyOnWriteArrayList in NativeLibrarySupport . java and updated method signatures in SecurityServicesFeature . java to improve thread
added null check for mRollo . mUniformAlloc and modified distance calculations in AllAppsView . java to enhance robustness by preventing
updated the condition to check for the presence of a colon in the key to ensure proper handling of special characters in HttpURLConnection
added PrincipalResolver annotation to CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enhance security by allowing customization of principal resolution
replaced ObjectMapper with NogGit JSONParser in DelegationTokenResponse . java to improve compatibility with NogGit ' s JSON parsing standards
added a method to remove trailing slashes from a StringBuilder to ensure proper handling of trailing slashes in the StringBuilder
added methods ` matchesAny ` and ` matchesAny ` to ` PatternsMatcher ` and corresponding tests in ` PatternsMatcherTest ` to
improve error message when hfofdir be null
added event handling for WATER potion in BlockFire . java to ensure proper handling of WATER potion events during the Fire process
removed unnecessary whitespace in the beginOrAdjustReorderPreviewAnimations method call to improve code readability and maintain consistency
updated calculation of decreasePercent in ContractStateCapsule , ReceiptCapsule , and ResourceProcessor classes to ensure correct calculation of decreasePercent and improve
http : / / issues . apache . org / jira / browse / amq - 4892 - improve asynccontentproducer to
added a null check for weightField in DocumentDictionaryFactory . java to ensure that the weightField parameter is not null to prevent potential NullPointerExceptions
refactor AppleBundle and AppleTestIntegrationTest to use InfoPlistSubstitution for variable substitution to improve code readability and maintainability
updated the Lancer Lancer Lancer Lancer Lancer Lancer Laser and Damage classes to
refactor order adaptOrder method to use OrderCreateApiRequest . OrderCreateApiRequestBuilder instead of OrderCreateApiRequest . OrderCreateApiRequestBuilder to improve
added a new file ` PreParseGrammarTest . java ` that tests XMLGrammarPreparser functionality to verify the parsing of XML schemas in the
added @ SuppressWarnings ( " doclint : missing " ) annotations to multiple Java files to suppress warnings related to serialization only in the application
added import for FontManager and overridden the font in ExtendedEditText . java to ensure proper font override functionality in the UI
added a null check for the current user before returning an empty list in AuthorizeTag . java and a corresponding test in AuthorizeTagTests . java
camel - 14836 : camel - cxf - add check for unsafe character in uri .
added a setUpData method to JDBCGeometryTestSetup to ensure proper initialization of the JDBC geometry data
removed the import of DumpHandler in MultipartFilterTest . java to streamline the code by eliminating unnecessary dependencies
[ hotfix ] [ runtime ] throw a flinkexception if restore attempt be already cancel
added a server . rmi . create property and refactored registry creation logic in RemoteJMeterEngineImpl . java to enable dynamic configuration
replaced String . join with StringUtils . join for anticompactRanges to improve code readability and maintainability
added display metrics management to ParallelUniverse , QualifiersTest , RobolectricTest , ResBundleTest , and ShadowApplication classes to
[ java ] add memberid ( ) method to service heartbeat and service heartbeat .
added conditional logic to set totalThreadAllocatedBytes based on version check to ensure totalThreadAllocatedBytes is correctly initialized based on the major version to
updated the return statement in CustomExpression . java to handle NaN values and improved hash code calculation to ensure proper handling of NaN values and prevent
updated debug logging statements in AjaxListener . java for clarity and consistency to improve readability and maintainability of logging messages
added authentication routes for " / authenticate " and " / authorized " in Routes . java and created AuthenticityFormTest . java to enhance
added assertions to ensure nextNode is not alive before calling next ( ) in SnippetTemplate . java to ensure that the next ( ) method is
updated Logger initialization from ConnectionManager to HttpClientRequestImpl to ensure proper logging capabilities for the HttpClientRequestImpl class
refactor comparison methods in DefaultTrackSelector for improved readability to enhance maintainability and clarity of the code
refactor RuntimeSerialization class for improved performance to enhance performance and maintainability of the code
ggb - 1343 crop box should be set to the crop box if the image be crop
refactor UnitOfWorkFactory to improve code structure to enhance maintainability and readability of the code
added a new variable ` allAppsCellWidthPx ` and updated related calculations in ` DeviceProfile ` , ` WidgetPreviewLoader ` , and
tika - 1343 -- fix content - type parameter not be set in mailcontenthandler
updated URI construction in ThumbnailsCacheManager . java to use file ID instead of remote path to improve clarity and maintainability of the URI
added support for marking the input stream in Source . java to ensure proper state management during input processing
added @ Deprecated annotations to multiple AsyncProcessor , BehaviorProcessor , and BehaviorSubject classes to indicate that these classes are outdated and should no longer be
added a configuration property for showing or hide error stacks in the error page to enhance user experience by allowing users to control the visibility of error
cloudstack - 4892 : add log when domain cleanup fail to delete account
removed unnecessary null checks for fremCall and dremCall in SPARCArithmeticLIRGenerator . java to simplify the code by
[ drools - 5852 ] add support for ruletemplateconfiguration in drools5 . x api
added a final modifier to the onRequestPurchaseResponse method and modified its usage in CodenameOneActivity . java to enhance code readability
increased the DEFAULT _ TIMEOUT _ MILLIS value from 100 to 1000 in UnboundedSourceSystemTest . java to increase the default timeout
updated import statements in ShadowAssetManager . java and modified parent path handling in ResName . qualifyResName method to improve code clarity
deleted multiple files MrefStat . java and MrefStat1 . java and MrefStat1 . java to streamline the codebase by
updated scope handling in DependencyInsight and DependencyInsight classes to use StringUtils for better readability to improve code clarity and maintainability by
added error messages for no trades and bad status in BTCETradeServiceRaw . java to improve error handling and provide clearer feedback
replaced JUnit Assertions with Hamcrest Asserters in multiple test files to improve test reliability by using Hamcrest
added methods to retrieve payment request URLs in BitcoinURI and corresponding tests in BitcoinURITest to enhance functionality for retrieving payment request URLs and ensure
planner - 383 add check for unsupported type argument in abstractfrompropertyvaluerangedescriptor
removed redundant call to mOrganizer . setFolderInfo ( ) in FolderPagedView . java to streamline code by elimin
added a condition to check if the lock owner is released in JfrBufferNodeLinkedList . java and modified buffer management in JfrChunk
refactor the handling of null values in BasicAbstractTuple to use a for - loop for improved readability to enhance code clarity and
refactor linter configuration handling in LintUtility . java to use InputResource and improve error handling to enhance robustness by ensuring linter configurations are
replaced direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a Runnable in AppsContainerView . java to
updated the inventory tick index in the patch from 10 + _ to 13 + _ and modified the positioning logic in the onInventoryTick method
added a case for OCELOT _ BABY in PlayerEvents . java to handle OCELOT _ BABY events
added multiple @ PublicEvolving annotations to StateTtlConfig . java to enhance clarity and maintainability of the code
added null checks for the parameter ' x ' in PreparedStatement and Array classes to ensure proper handling of null values and prevent potential NullPointerExceptions
[ java ] add describe - all to print out record descriptor ( s ) in the catalog .
replaced ` append0 ( " \ n " ) ` with ` append0 ( ' \ n ' ) ` in ` StringBuilder . java
added a new test method ` jsonSnapshot ` to ` SiteSnapshotVariationsTest . java ` to verify the functionality of JSON serialization in the
added JUnit imports and refactored the ` removeTheTxAndBlock ` method in ` BroadTest . java ` to improve test
added handling for " Code = LensMaskOpen ; " and " Code = LensMaskClose ; " in AmcrestHandler and
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig ` , ` BuildRuleFactoryParams ` , and ` BuildRule
refactor ` ChangeLogIterator ` constructor to accept ` List < ChangeSetFilter > ` instead of ` Arrays . asList ` to improve flex
added error handling for guest exceptions in PolyglotLauncher . java to ensure proper exit code for guest exceptions
updated the method to retrieve the system property from the environment variable to ensure compatibility with the latest system properties
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization and deserialization of the class
simplified the logic for dropping the parent of a J annotation in the SpacesVisitor class to improve code readability and maintainability
ebean - 374 : add ` ` nearcache ' ' option to servercacheoptions . copy ( true )
added a new test method ` testHiddenBorder ` to the ` VisualRegressionTest ` class to ensure that the border is visible on flo
replaced ` ActionGraph ` with ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` and ` ProjectCommand . java ` to
updated Kucoin exchange URI to use PROD _ URI instead of LIVE _ URI and added logging for host exceptions to improve error handling
refactor resource path handling in SpringResourceAccessor . java to improve clarity and consistency to enhance code readability and maintainability by standardizing
updated unit assertions in ` SmartHomeUnitsTest . java ` and ` SmartHomeUnits . java ` to improve clarity and consistency in unit
updated the method to use getMaskWithSizePacked ( ) instead of getMask ( ) in DefaultShader . java to ensure compatibility with
deleted the Tls12SocketFactory . java file to remove unused SSLSocketFactory class to streamline the codebase
refactor TexBibEntriesResolver to streamline citations and new entries to improve code readability and maintainability by reducing red
added a method to check if the Robolectric legacy mode is enabled in ResourcesTest . java to ensure compatibility with Robolectric
added a check for FirebirdDatabase before returning the double precision data type to ensure compatibility with Firebird ' s specific database type
added null checks before creating DataSourceTransactionManager in DefaultBatchConfigurer . java to avoid potential NullPointerExceptions when dataSource is null
added a new file ` org . terasology . unittest . stubs ` and import ` org . terasology . gest
updated the command " ping - c 5 www . google . com " from " www . google . com " to " 127.0 .
refactor transaction handling in EbeanServer _ saveAllTest . java to use try - with - resources for better resource management to ensure proper
updated the TermScorer constructor to conditionally handle scores based on scoreMode to ensure correct scoring behavior based on score mode settings
updated metric retrieval logic in DataflowMetrics . java and DataflowMetricsTest . java to use a new method to improve code clarity and
cloudstack - 2321 : use hostdaoimpl for account data center virtual search ( # 2321 )
refactor DynamicPartitionPruner to use a separate method for finding the target ObjectInspector to improve code readability and maintainability by reducing
added a method ` removeBuildArtifacts ` to ` ArtifactFilesystem ` and corresponding tests in ` ActionExecutionStep ` to ensure that build artifacts are
added a check for non - negative selected row before setting the row selection interval in ThrustCurveMotorSelectionPanel . java to ensure
replaced ` assertThrows ` with ` assertThrowsArrayStoreException ` in ` Main . java ` and added a new method ` assertThrowsArray
refactor PropertySource class to improve code structure to enhance maintainability and readability of the code
added environmentName parameter and user agent handling in HttpClientBuilder and HttpClientConfiguration to enhance the flexibility of HTTP client configuration by allowing custom user agent
refactor session handling in MemorySessionStore to use a computeIfAbsent method for improved session management to enhance code readability and maintainability by
updated assertion messages in IssueTest . java and Reporter . java to include a new identity hash map to improve clarity of test assertions and ensure
change the default value of ` bds ` from ` text / plain ` to ` text / plain ` if ` file . getContentType ( )
added a new class ` ActivationRequestDenied ` and modified ` CharacterSystem ` , ` InteractionSystem ` , and ` ActivateEvent ` classes
added @ SuppressWarnings ( " serial " ) annotations and modified the drawing logic in GraphApplet . java to improve code readability and maintainability by
added a method to update task views snapshot radius in RecentsView and changed the visibility of the updateSnapshotRadius method in TaskView to
added logging for swagger generation and updated revision handling in StaticMicroserviceVersions . java to improve traceability and traceability of the microservice schema
change return type of put methods from void to int in ArrayMap . java to improve performance by reducing unnecessary method calls
[ hotfix ] [ kafka ] fix startup timeout in kafkacontainercluster
http : / / issues . apache . org / jira / browse / amq - 4392 - retry message back in defaultmq
refactor header handling logic in StaticServerHttpHeadersWriter to improve clarity and consistency to enhance code readability and maintainability by reducing
added package access check in EventListenerList . java to enhance security by ensuring proper package access handling
added custom adapter for the application list in ApplicationsFragment and created a new CustomAdapter class to enhance user experience by providing a list of applications
updated the applyIcon method to include null checks for iconView and task to enhance robustness by preventing potential NullPointerExceptions
replaced try - with - resources with try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
replaced ` currentClauseStack . push ( Clause . INSERT ) ` with ` currentClauseStack . pop ( ) ` in ` Base
added JUnit imports and modified execution context initialization in HibernateCursorItemReaderIntegrationTests and HibernateCursorItemReaderStatefulIntegrationTests to
refactor DataInputStreamWithTimeout to use Future for polling messages and improve handling of interruptions to enhance code clarity and ensure proper handling of
added support for ENABLED _ TS in VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enhance functionality
refactor UpgradeCatalog150 class to improve code organization to enhance maintainability and readability of the codebase
rename ` networkparameters . testnet3 ` to ` networkparameters . oldtestnet ` to improve clarity and consistency in naming conventions
added a check to update the selection of the first geos list in the PropertiesViewD class to ensure that only one geos are selected
updated OnboardingPrefs usage in AppsDividerView . java and added nullable annotation in ActivityContext . java to improve code clarity
updated HdfsIndexOutput to extend BufferedIndexOutput and added error handling for closing to improve resource management and ensure proper resource management
added a conditional check to set the clipping if the clipping path is finished before setting it to a rectangle to ensure that the clipping is only set
removed synchronization around localAddress assignment in SocketChannelImpl . java to simplify code and improve readability by eliminating unnecessary synchronization
refactor row handling in TemplateTransformer to use a separate addToRow method to improve code readability and maintainability by reducing redundancy in
added a method to check if the system is Windows and refactored file rename logic in Wallet . java to improve code readability and ensure
replaced ` ALPHABET ` with ` CHECK _ DIGIT _ STRING ` in ` Code39Reader ` and ` Code39Writer ` to
added a check for the presence of the executed unexpected value in NodeGenFactory . java to ensure proper handling of non - generic return types and
refactor the logic for writing stored fields in IndexingChain . java to improve readability and maintainability to enhance code clarity and maintain
fix ( sql ) : fix intervalutils . parsefloorpartialtimestamp ( ) to truncate nan
removed redundant conditional checks for postedRunnableStacktraces in LwjglCanvas . java to simplify code and improve readability by elimin
corrected a typo in the description message in AbstractGCSProcessor . java to ensure correct formatting of the description for better readability
replaced ` assertInitialized ` with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve clarity and consistency in connection
updated the default directory value from null to " single " in CachingDirectoryFactoryTest . java and RAMDirectoryFactoryTest . java to ensure
renamed ` size ` to ` filterCount ` and updated related methods in ` FaultTolerantChunkProcessor ` and ` FaultToler
modified the tabbedMethod method in FileWithTabs . java and refactored file handling in T4994049 . java to improve
removed redundant conditional checks in ConsoleReaderTest . java to streamline code and improve readability by eliminating unnecessary checks
simplified the condition for retrieving sessions in GetFeedbackSessionsAction . java to improve code readability and maintainability
corrected the calculation of newSelection and adjusted conditions in AllAppsView . java to improve accuracy of selection calculations and ensure correct velocity calculations
profiler : remove unnecessary ` ` initialize ( ) ' ' call
updated database connection handling and added null checks for connectionList in DataModelManagerDialog , DbConnectionDialog , ExportPanel , and ExportPanel to
changed the variable ` writeBufferSize ` from a static final to a static final WRITE _ BUFFER _ SIZE and modified the initialization of ` writeBuffer
refactor segment size calculation in DocumentsWriter and add a new test method in TestIndexWriter to improve code clarity and ensure correct indexing
updated the validation logic for the " dvert " field in ArmatureModifier . java to ensure that the " dvert " field is
refactor FileDisplayActivity to improve code structure to enhance maintainability and readability of the code
added an UnsupportedOperationException to the ApplySpecialization class to avoid filling in stack trace to improve error handling by avoiding unnecessary stack trace allocation
updated the calculation of the line height in LabelPainter to use a average of the line height to improve accuracy of the label height based on the
updated the constructor of RotationTouchHelper to accept a DisplayHolder parameter instead of a context to improve flexibility by allowing customizable display holder
modified the loop to check if the value string is already quoted and added a conditional check for quoteNeeded to improve handling of quoted values and ensure
updated ` ServletHandlerInterceptor ` to use ` IdConversion . convertToLong ( s ) ` instead of ` Long . valueOf ( s , 16
added a new test method for the ` testSmall ` and ` testBig ` methods in ` ServerDatagramConnectorTest . java ` to
updated the substring assertion in TestSqlEntityProcessorDelta . java to correctly extract the country code from the request to ensure correct substring representation of the
refactor Cache class implementation to improve performance to enhance performance and maintainability of cache management
replaced instances of ` e ` with ` ev ` and updated scope settings in ` ResourceSetRegistrationEndpoint . java ` to improve clarity
updated the ` doBefore ` method to accept a boolean parameter and modified the indexing logic in ` TestUnifiedHighlighterTermVec . java
added a new main method to the GcodeTable class to display the number of rows in a Gcode table to enhance user experience by providing
updated the WEBAPP _ CONNECT _ TIMEOUT constant from a constant to a constant from cfg . getConnectTimeout ( ) to improve flexibility in
updated multiple Java files to improve clarity and consistency to enhance code readability and maintainability
refactor TestMediaService class to improve code readability to enhance maintainability and facilitate future updates
removed the static string HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK from the Messages . java file to streamline
added a new file ` MarketsPrintTool . java ` to display currency names in Fiat and Crypto currencies to facilitate
added validation for hostname components and improved error handling in EndpointAddressInterceptor to ensure that the component is valid and provide clearer error messages for
added ` registerSecurityKeyStart ` and ` registerSecurityKeyComplete ` methods to ` AccountProxy ` , ` HttpAccount ` , and `
refactor ServerSpanThreadBinder to improve code readability to enhance maintainability and facilitate future updates
updated user pointer reference from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` and modified block
added " the _ geom " and " number " types to the Csv2Shape builder to enhance the functionality of the Point class in the Csv
updated callGasWord and gasCost from callGasWord to gasCost in VM . java and removed unused imports in Program . java to improve
refactor Parameters class to improve code readability to enhance maintainability and facilitate future updates
added a call to setIgnoreNullValues ( true ) in MultiplePiePlot . java to ignore null values in the piePlot
refactor bundle loading logic in ResourceBundle . java to streamline the loading process to improve code readability and maintainability by reducing redundancy
pdfbox - 4892 : fix typo , a suggest by valerybokov
added ` isAllowedDuringEditing ` method to ` AFreeplaneAction ` , ` AccelerateableAction ` , and ` ExecuteScriptAction
added a new boolean variable ` userModified ` in ` LoginSamlAuthenticationProvider . java ` to indicate that the user has been modified to ensure
added a new file TestSealedObjectNull . java containing a test class for SealedObject comparisons to ensure that unsealed objects are
replaced ` onOpen ` method with ` setResponse ` and added ` succeeded ` methods in ` ConnectPromise ` and ` WebSocketClientConnection `
added a static final set for Material . SNOW _ BLOCK and modified the tag checks in BlockEventListener . java to ensure compatibility with the latest
added a lastTradeId field and updated Trade handling in CryptsyAdapters , CryptsyPublicTrade , and CryptsyAdapter
added error handling for closing the synchronized MSC connection in HiveStreamingConnection . java to ensure proper resource management and prevent potential memory leaks
replaced ` System . currentTimeMillis ( ) ` with ` Random ( ) . nextLong ( ) ` in ` GlowServer . java `
updated the ICON size
refactor connection handling in FlowableRefCount and ObservableRefCount classes to manage disconnection behavior to ensure proper management of disconnected connections based on the
replaced direct instantiation of SynthContext with ReflectUtil for clarity to improve code readability and maintainability by utilizing ReflectUtil for
added support for the WHITESPACE _ AROUND _ TEXTUAL _ OP in the FormatToken and TokenFormatter classes to enhance the formatting capabilities for
added checks for non - empty file existence and length in SaveTask . java and updated related tests in SaveAndLoadTaskTest . java to
added synchronized keyword to several method signatures in MLogWriter . java to ensure thread safety during method execution
added handling for MutableLogEvent in the add method to ensure proper serialization of Log4jLogEvent objects
changed the PADDING constant from LengthLike to NonNegativeLengthLike in PrimitivePropertyBuilders . java to ensure proper padding behavior for non - negative
removed redundant calls to createContext ( ) in multiple resource classes to streamline context creation process by eliminating unnecessary calls
refactor ` buildExceptionEntries ` and ` buildExceptionEntries ` methods in ` MethodIRBuilder ` and ` SootWorldBuilder ` to
updated method calls in JUnitRunner . java and AndroidPlatformTarget . java to use System . getProperty ( " line . separator " ) to
update cacheSize calculation from 16 to 8 in OmniNotes . java to adjust cache size for better memory management
added a check for ` start ` in ` InvocationStageTrace . java ` and updated test cases in ` TestInvocationPublishModelFactory . java
added error handling for keystore loading in ProvKeyManagerFactorySpi . java to ensure proper resource management and prevent potential NullPointerExceptions
updated the UpstreamCheckUtilsTest to use a local port variable instead of a hardcoded value to improve clarity and maintainability of the
updated the calculation of ` spw ` and ` sph ` to use ` otherParent ` instead of ` panelDim ` to ensure proper
added conditional checks for GL _ ARB _ compute _ shader and GL _ ARB _ geometry _ shader and GL _ ARB _ t
refactor PopulatorContext class to improve code structure to enhance maintainability and readability of the code
added a check for the project before processing SaveAllAction in FlutterReloadManager . java to ensure that notifications are only handled when the project
refactor ZQLJobManager to use IOUtils for encoding handling to improve code readability and maintainability by reducing redundancy
added a condition to check if the argument length is non - empty before checking if it is an instance of Table to ensure that the command is
added a constant for the prefix in the FakeOSSOHeaderDecoder class to improve code readability and maintainability by reducing redundancy
added ` hidden = true ` to ` @ Deprecated ` annotations in ` GenerateJavaSources . java ` and ` JavaGeneratorMojo . java
removed debug logging statements from DerbyDatabase . java to clean up the code and improve readability
added a timeout parameter to multiple tests in CepEspTest , CepJavaTypeTest , and CepEspTest classes to ensure
removed parallelStream ( ) from PersonNameSuggestionProvider . java to simplify the code by eliminating unnecessary parallel operations
added a condition to check if the Liquibase hub mode is already set before writing the liquibase . hub . mode property
added version information constants for IBM J9 VM and Eclipse OpenJ9 VM in Constants . java and corresponding tests in TestDDR
refactor font addition logging in FontFamily . java and add a new DebugFonts . java file for debugging to improve clarity and functionality
updated import statements in ALPNNegotiationTest . java and added HTTP version handling in NegotiatingServerConnectionFactory . java to ensure compatibility
added import for RateControl and set it to NO _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to ensure proper handling of
added a new file Test6741426 . java that implements the Runnable interface to paint a specified image to facilitate testing of
updated error message formatting in CsrfAwareEntryPointAndDeniedHandlerTest . java to improve clarity and consistency in error reporting
added null checks for dbMgdPath and dbExtPath in HMSHandler . java to avoid potential NullPointerExceptions when madeManagedDir and
added package declaration for S3CopyObjectRequest . java in the S3CopyObjectRequest . java file to ensure proper organization and organization of
replaced ` int accentColor ` with ` preferenceScreen ` for setup methods in ` SettingsActivity . java ` to improve code clarity and
updated error message from " / temp1 " to " fileAtRoot " in TemporaryFolderUsageTest . java to improve clarity of error
replaced ` MAP _ TYPE _ INFORMATION ` and ` COLLECTION _ TYPE _ INFORMATION ` with ` ClassTypeInformation . OBJECT `
added validation for empty string and null addresses in ClientNetworkConfig and corresponding test cases in ClientConnectionTest to ensure that addresses are not empty and
added a new certificate " keynectisrootca [ jdk ] " to VerifyCACerts . java to enhance security by enabling
change return type of compute methods from void to int in multiple Java files to improve performance by reducing the return value of compute methods
added a condition to check if the menu is not shown before setting the mode in ModeToggleMenu . java to ensure that the menu is only
pdfbox - 4892 : fix arrayindexoutofboundsexception in memoryttfdatastream , a suggest by valeryb
added a new test class ` FinalizerInfoTest ` and ` HeapInfoTest ` for testing the ` FinalizerInfo ` and ` Heap
replaced ` map ` with ` doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator ` to ensure
refactor compensation address handling in BurningManService . java to improve clarity and consistency to enhance code readability and maintainability
refactor StringSubject class to improve code structure to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to longData initialization in BatchValidateSignContractTest . java to temporarily disable the test due to issues related to
changed the method name from ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java `
updated query replacement in RetweetActivity and Search to replace " @ " with " from : " in SaveRecentQuery to ensure correct handling of
removed the conditional check from SimulatorDiscoverer . java to streamline the code by eliminating unnecessary complexity
added a new method ` importAccount ` to ` YubiKeyAccountRegistryEndpoint ` and a corresponding test in ` YubiKeyAccountRegistry
updated shader program configurations in ShaderManagerLwjgl . java , FontMaterialProducer . java , and LwjglCanvasRenderer
added null checks for paintOnTopLoop in Container . java and updated SideMenuBar . java and Toolbar . java to ensure proper handling
refactor AbiWriterProtocol to improve code structure to enhance maintainability and readability of the code
added a null check for subName before setting the caption in HierarchyBase . java to avoid potential NullPointerException when subName is null
change data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java to align with
added a null check for the simulated data and improved conditional checks in CustomExpression . java to enhance robustness by preventing potential NullPointerException
replaced the method ` requestBlindVoteListFromNetwork ` with a call to ` missingDataRequestService . sendRepublishRequest (
added a new test method ` testCase4 ` in ` PostgresTest . java ` to verify the functionality of the ` Hikari
updated substring index from ` " } " to ` ' ' in SubtitleUtils . java and ` RemoteUtil . java ` to ensure proper
refactor line separator handling in DefaultJavaPrettyPrinter and CommentTest to use a constant for improved readability to enhance code maintainability and
truffle : use atomicreferencefieldupdater instead of atomicreference for singleimplementor snapshot
added a null check for the excludeSet before adding queries to the query list to avoid potential NullPointerExceptions when excludeing queries
added Bridge support for Thing and GenericThingBuilder in ThingHelper . java to enhance bridge handling for different thing types
replace printHelp ( ) with error ( ) and error ( ) in Ktab . java to provide clearer error messages for unknown commands
added a check to return the output file if it exists in ANGLELoader . java to ensure that the output file is returned only if
added date parsing logic in DateConverter . java and corresponding test in DateConverterTest . java to ensure correct parsing of date strings based on the
added assertions to verify post retrieval in SpringDataJPALockTest and PostRepository to ensure proper validation of Post objects by their slug in Spring
changed ` canAccessDbaRecycleBin ` from a boolean to a Boolean and added a check for the ` canAccessDbaRe
added a static factory for SimpleClientHttpRequestFactory in ClientRegistrations . java to facilitate HTTP request management in the rest
added assertions for file existence and name retrieval in SourceTest . java to improve clarity and accuracy of file existence checks
remove unnecessary static block in DefaultHomeFinder and GraalVMLocator to streamline code by eliminating unnecessary static block
added validity checks for client access and refresh token values in ClientAdminBootstrap . java to ensure proper handling of token and refresh token validity based on
updated the logic for retrieving the Android API version in Scene . java to ensure compatibility with the latest SDK version based on the available options
refactor property placeholder handling in PropertyPlaceholderHelper . java to improve code readability and maintainability to enhance code clarity and maintainability by
updated string formatting in Resources . java for clarity to improve readability and maintainability of the code
refactor ZkSolrClientTest to use CountDownLatch and AtomicInteger for collection processing to improve thread safety and ensure thread safety during collection processing
added BigInteger class to simpleTypes in MongoMappingContext . java to ensure proper handling of BigInteger types in the mapping process
added a condition to check if the button text is equal to the current text to ensure that the toast button is displayed based on the current text
added a condition to check if the encoder is not out of sync and not disableMc0AndNoskip to ensure proper handling of
increased the maximum event loop count from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to increase the event loop
changed access modifiers of ` CountMin4 ` and ` CountMin4 ` classes to protected and updated method signatures accordingly to enhance encapsulation and
refactor ExternalFileField to use a method for retrieving file float source and add a new test class ExternalFileFieldSortTest to improve code
updated exception message from " Invalid URL " to " Connection error " in DoiFetcher . java to improve clarity of error messages related to
updated event handling in OpenRocketSaver , FlightDataBranchHandler , and RocketComponentSaver classes to include source ID to
changed the visibility of the check method from private to protected to allow subclasses to access the check method for better encapsulation
added handling for SynchronizeFileOperation in FileActivity to handle asynchronous synchronization of files to improve user experience by providing feedback when a file is already
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder for improved URL encoding to enhance security by using URL encoding for
added a null check for the client property " cn1 $ infinite " in InfiniteContainer . java to prevent potential NullPointerExceptions when the client
increased the total variable from 0 to 1 in IntHashSet . java and adjusted the calculation of total to improve performance by reducing unnecessary
added a condition to check if the entry is locked before updating the entry to improve error handling by providing clearer feedback when the entry is locked
removed unnecessary null checks for the who assignment in SolarisAclFileAttributeView . java to simplify the code and improve readability by
refactor edge creation logic in LatLonTree . java to use a new edge array instead of a list to improve code readability and maintain
added IOUtils import and modified the checkChrootPath method in ZkCLI . java to ensure proper resource management and improve code clarity
corrected the character encoding in the comment string from " \ n " to " [ \ x0d \ \ x0a ] "
added support for the " -- strict " option in properties file parsing to enhance flexibility in parsing properties file based on strict mode
fix : add support for @ constraint ( @ alwaysinvalidconstraint )
updated the superclass name from " http " to " http4 " in HttpComponentVerifier . java to clarify the purpose of the component
added a call to ` waitForThingsToLevelOut ( 30000 ) ` in ` TestCloudPivotFacet . java ` to ensure that
removed redundant conditional checks for Integer and Long lengths in UBJsonWriter . java to simplify code and improve readability by eliminating unnecessary
refactor ApplicationTest . java for improved clarity to enhance maintainability and readability of the code
refactor ConnectionFactoryImpl to use StringBuffer instead of String for string concatenation to improve performance and readability of the code
rename ` Type ` to ` RoboType ` across multiple files to improve clarity and consistency in naming conventions
[ java ] return action . ABORT instead of action . ABORT in aeron archive .
added cache key and lookup handling in EntityProcessorBase . java and updated related tests in TestCachedSqlEntityProcessor . java to improve cache management
added a new file PutfieldError . java that throws an exception for incompatible class change errors to facilitate error handling for incompatible class
http : / / issues . apache . org / jira / browse / amq - 3396 - fix the issue where the address
added logging statements for memory table throughput and operations in ColumnFamilyStore and Memtable classes to improve traceability of flush processing and provide clearer
replaced instances of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` in multiple files
removed redundant ` encodedLength ( ) ` method call from ` Flyweight . java ` to streamline the code by eliminating unnecessary
refactor TestMethodResultMapBuilder to improve code readability to enhance maintainability and facilitate future development
added handling for Integer methods in FindNullDeref . java to ensure proper handling of NumberFormatException , IllegalArgumentException , and RuntimeException exceptions during method invocation
[ hotfix ] [ runtime ] remove unused constructor in tasklocalstatestoreimpl
updated return values in mmm Utils . java and ppp Utils . java to use " 1 " m " and " 1 " instead of
updated conditional checks in Utilities . java and FloatingIconView . java to handle both DeepShortcutView and SystemShortcut instances to ensure proper handling
changed the type of the JwtClaimValidator from String to Object and modified the validation logic in JwtIssuerValidator to enhance flexibility in claim validation
updated method names and import statements in Coinmate , CoinmateMarketDataService , and CoinmateTradeServiceRaw classes to
added a new file ` CoverageConfig . java ` and modified ` CoverageController . java ` to use it to enable configuration of cobertura
added a check to ensure the EventBus is registered before registering it to avoid unnecessary registration when the component is not registered
added handling for ascii characters in NormalizerBase . java to ensure correct normalization behavior based on input length
[ hotfix ] [ runtime ] fix checkstyle violation in jobcoordinationservice . ismigrationallowed ( )
added error handling for SQL updates in SpillableGroupByIT and NoOpStatsCollectorIT to ensure correct error reporting and provide clearer feedback
( chore ) camel - cometd : use junit4 instead of contexttestsupport
updated attribute names in HtmlTag . java to use " OK " instead of " USE _ CSS " to improve clarity and consistency in naming con
added a newline to the HTML output in HtmlCoreReport . java to enhance the output format for better user experience
updated the calculation of ramBytesUsed to include a null check for scores to improve robustness by avoiding potential NullPointerExceptions when scores is null
added a new ` StringHolder ` class and corresponding tests in ` CustomTypeAdaptersTest . java ` to facilitate JSON serialization and
added extra data handling in MergeCoordinator and a corresponding test in MergeCoordinatorTest to ensure correct handling of extra data for mining parameters in the
added a static final map for file and output file arguments in DependencyParser . java to improve flexibility in handling file and output file arguments
refactor PathParamServerEndpointConfig to improve code readability to enhance maintainability and facilitate future updates
[ flink - 1187 ] [ table - planner - blink ] fix memory leak in migration rule listener
updated parameter names from ` part ` to ` partOrList ` in multiple classes to improve clarity and consistency in naming conventions
[ zeppelin - 1745 ] fix typo in twitterbootstraputils . copyresource ( )
refactor the basicCategory method in SpanishTreebankLanguagePack to use a regex pattern for category matching to improve code readability and maintain
hhh - 14386 - add default load method to abstractentityloader and abstractentitypersister so that it can be use in the
hbase - 11818 regionserverflushtableproceduremanager do n ' t remove cancelled element from the taskpool
added a check to set size if width and height are zero in PGraphicsJava2D . java to ensure proper handling of empty dimensions and
removed redundant calls to fillPool ( ) in HikariPool . java to improve code readability and maintainability
replaced ` assureMatchVersion ( ) ` method calls with ` Version . LATEST ` in multiple filter factories to ensure compatibility with
added a new interface DefaultMethodClient and modified the pushResolveInterceptorsCall condition in AopProxyWriter . java and updated ExecutableMethodWriter .
added a condition to check if the input starts with a COMMA character in DRLParser . java to ensure that the input is only processed when the
refactor multiple subject classes to improve code organization to enhance maintainability and readability of the codebase
added a validation check for payloadLength in WsFrameBase . java to ensure that a valid payload length is provided to prevent runtime errors
rename ` PublishSubscribeChannel ` to ` AbstractChannelParser ` and update package names for consistency to improve clarity and consistency in naming conventions
updated method signatures to use ` Long ` instead of ` String ` for execution ID in multiple classes to ensure consistency in execution ID handling across different
pdfbox - 4892 : update image digest size , a suggest by valerybokov
updated logging level from info to info in SolrConfig . java and added imports in SolrConfigHandler . java to improve logging clarity and ensure
increased the delayUntil calculation in FileSyncAdapter . java to increase synchronization delay based on the current time
updated the method call from ` getLastModifiedTime ( v3Location . toPath ( ) ) ` to ` getLastModifiedTime ( v3Location . toPath
refactor ` addPathToMTree ` method to use ` Path ` instead of ` String ` for consistency to improve code readability and maintain
updated URL parsing logic in DefaultPackageScanClassResolver and added unit tests in DefaultPackageScanClassResolverTest to improve URL handling and ensure correct
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner -
added a new file ` SpringSecurityAuthenticationSource . java ` implementing the ` AuthenticationSource ` class to retrieve principal and credentials from LDAP authentication to
renamed AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve clarity and consistency in naming conventions
updated the minSdk from LOLLIPOP to KITKAT in ShadowAlarmManager . java to reflect the latest SDK version for better
replaced Dialogs . autoSuggestDialog with SimpleFormDialog . build ( ) for retrieving custom file names to improve user experience by providing
added a new test method ` testNewput ` in ` TxInputUtilTest ` and updated assertions in ` StoreAPITest ` to ensure
removed the collection name parameter from the stream method in MongoTemplate . java to simplify the method signature and improve code clarity
updated zoom factor calculation and adjusted zoom calculations in MapOverviewImageMouseHandler . java to improve zoom calculation accuracy and ensure correct coordinate representation
added similarity support to KNearestNeighborClassifier and updated related tests to use LMDirichletSimilarity to enhance classification functionality based on similarity
replaced SolrQueryParser with a new ConstantScoreRangeQuery in LukeRequestHandler . java to improve query handling by using a constant score
replaced ` toString ( ) ` with ` getReason ( ) ` in ` LowResourceMonitor . java ` to improve clarity and consistency in
refactor package - info . java files for mmm and ppp packages to improve code organization and maintainability
updated the ` requestMtu ` method in ` ShadowBluetoothGattTest ` and ` ShadowBluetoothGatt ` classes to
refactor servlet input stream creation in TestPayloadNameRequestWrapper . java to use createServletOutputStream ( ) instead of createServletInputStream ( )
added logging for UnsatisfiedLinkError in VoskSTTService . java to improve error handling and logging for UnsatisfiedLink
replaced HashMap with ConcurrentHashMap in ChannelProcessingManager . java to ensure thread safety during processing chains
updated Japanese resource strings in mmm Resources _ ja . java and ppp Resources _ ja . java to improve clarity and consistency
changed the condition from ` 0 ` to ` 1 ` in ` JDBCTypeMapping ` and updated test assertions in ` JDBCTypeMappingTest `
added synchronized keyword to several methods in GenshinScene . java to ensure thread safety during player operations
refactor TerminalView to utilize regex matching for control codes and code matcher to improve code readability and maintainability by reducing redundancy
updated command behavior checks in MenuBar and SideMenuBar classes to include SIDE _ NAVIGATION support to enhance user experience by allowing
updated Disposable usage in PoloniexManualExample . java and added disconnect handling in WampStreamingService . java to improve code cl
added validation for energy limit in UpdateSettingForEnergyLimitContractActuator . java and updated error messages in UpdateSettingForEnergyLimit
updated URL handling in PostmanJsonBuilder to use javaUrl instead of url1 and added protocol handling in UrlBean to improve compatibility with Java
added getter and setter methods for namespacePrefixRef in SoapJaxbDataFormat to facilitate access to the namespace prefix reference for
added a constant for ONE _ MINUTE _ MILLIS and refactored assertions in TestRange . java to improve code readability and maintainability
added JettySolrRunner check and security status verification in BasicAuthIntegrationTest . java and ZkStateReader . java to ensure proper authentication
added a PriceFeed field to the TradesChartsViewModel constructor and updated the constructor to accept it to enhance functionality by allowing the price
updated configuration handling in PhoenixHBaseLoaderIT , PhoenixHBaseStorerIT , and Phoenix
replaced the calculation of ` from ` to ` end ` with a variable for better clarity to improve code readability and maintainability by
added file download functionality to FileDataStorageManager to enable file download functionality for improved user experience
[ java ] set the length of the file channel in the RandomAccessFile to ensure that the file channel is set to the length of the file
added a method ` checkIfRegistryRunning ` to check if a registry is running and a retry mechanism in ` FileUtils ` to improve registry management and
updated import statements in EditTest . java , Quick3dMain . java , TextureTest . java , and TextureTest . java to ensure
added @ SuppressWarnings ( " rawtypes " ) annotations to multiple Java files to suppress unchecked warnings and improve code clarity
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions during execution
phoenix - 1084 add support for set isolation level to transaction _ READ _ COMMITTED and transaction _ SERIALIZABLE
added transaction attribute handling in AbstractStepFactoryBean and refactored exception handling in ItemOrientedStep and SkipLimitStepFactoryBean to
replaced ` CasClient ` with ` DirectCasClient ` and updated the ` CasManagementSecurityInterceptor ` class to improve clarity and
removed visibility of the menu item for the add category in ListFragment and added a new navigation item in NavigationDrawerFragment to improve user experience by
rename methods from ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and ` FileDisplayActivity . java `
pdfbox - 4071 : use cast instead of cast to avoid typecastexception
updated font size handling in TerminalView and TerminalBridge to use getTextSizePx instead of getFontSize to improve clarity and consistency in text size
modified the fact assignment logic in ConstantAnalysis . java to check if the fact is valid before updating it to ensure that the fact is only modified
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
replace the return statement in ArrayListSpanAccumulator to create a new ArrayList instance to improve performance by avoiding unnecessary instantiation of spans
refactor code for improved readability and consistency in Liquibase . java to enhance maintainability and clarity of the code
added a method to set the revision in MicroserviceVersions and updated InstanceCacheChecker to set it in InstanceCacheChecker to enhance functionality by allowing
refactor foreign key handling in TableRetriever to improve string formatting to enhance readability and maintainability of the code
camel - aws2 - s3 : add unit test for s3 component with minimal configuration
removed currency pair assignment from getBitstampUserTransactions method in BitstampAccountService and added a new method in BitstampAccountServiceRaw to stream
added error handling for NoSuchComponentException in BlueprintContainerRegistry to improve robustness by handling potential NoSuchComponentException during component retrieval
changed the return type of the push method from void to boolean in PushBuilder and ApplicationPushBuilder classes to enable push functionality based on remote settings
replaced direct comparison of " 1Dorian4RoXcnBv9hnQ4Y2C1an6
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other packages
refactor notification setup logic in NotificationsActivity to improve code readability and maintainability to enhance user experience by ensuring only relevant notifications are displayed
added debug logging and improved channel closing logic in NettyAsyncHttpProvider . java to enhance debugging capabilities and ensure proper resource management during channel
refactor LdapPasswordPolicyEnforcer to use StringUtils . isEmpty ( ) for better readability and consistency to enhance code clarity and maintainability by
refactor DefaultAnnotationEngine and Stubber classes to improve code organization to enhance maintainability and readability of the code
added an @ Ignore annotation to MemoryManagerTest . java to mark the test as ignored due to PHOENIX - 2840
nifi - 1745 : add timezone to about dto ( # 1745 )
updated the handling of localRanges in Splitter . java and modified the splitting logic in StorageService . java to improve clarity and ensure correct
replaced direct instantiation of ` child ` with ` BCSChild ` in ` BeanContextSupport . java ` to simplify code and improve read
added synchronized blocks to track addition and notifying of active circuits in CircuitManagerImpl . java to ensure thread safety when adding and notifying
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by throwing an exception instead of throwing GdxRuntimeException
[ hotfix ] [ runtime ] add getter and setter methods to sinkrunner , sourcerunner , and pollablesinkrunner , and eventdr
updated log level from error to info in FastBindLdapAuthenticationHandler . java to improve logging clarity for user authentication failures
refactor ContainerOrderFocusTraversalPolicy class for improved clarity to enhance maintainability and readability of the code
change the return type of getPointLength ( ) from double to int in AlgoFunctionFreehand . java and GeoLocus . java to
changed the parameter name from ' source ' to ' source ' in CasRiskBasedAuthenticationEvaluationStartedEvent constructor to improve clarity and consistency
refactor connection handling in SchemaCrawlerMain and Executable classes to improve resource management to ensure proper resource management and prevent potential memory leaks
added support for fallback TLS protocol in ConnectionFactory and created a new test class ConnectionFactoryDefaultTlsVersion to enhance security by allowing fallback TLS protocol
updated exception messages in CountersManager . java for clarity to improve code readability and maintainability
refactor audio stop logic in MediaManager . java to improve clarity and maintainability to enhance code readability and maintainability by reducing
removed unnecessary debug logging statement from HttpConnection . java to simplify logging output and improve readability
added ` @ Transient ` annotation to ` JpaPersistentPropertyImpl ` and corresponding unit tests in ` JpaPersistentPropertyImplUnitTests `
updated stack version assertions in UpgradeResourceProviderTest to use " HDP - 2.2 . 0 " instead of " HDP - 2
changed method signatures from Symbol to Object in TruffleVM . java for consistency to improve code clarity and maintainability by using more descriptive
changed access modifier of the ` isBinaryType ` method from private to public and updated debug logging statements in ` Proxy . java ` to enhance
changed the value of TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE from " parition . pr
replaced the ` findProblem ` method with a new ` findProblem ` method in ` JavaEditor ` and updated the ` JavaProblem `
changed the default value of ` DEFAULT _ OFFHEAP ` from ` DEFAULT _ OFFHEAP ` to ` DEFAULT ` in multiple classes to
updated string concatenation in TableWriterTest to use a constant for line separator to improve code readability and maintainability by reducing redundancy
refactor DebugHelper class to improve code readability to enhance maintainability and facilitate future development
added a ` ownsTexture ` field to the ` ParticleEffect ` class and modified the return logic in ` ParticleEffect . java `
added LDAP authentication options to HiveConf . java to enhance configuration flexibility for LDAP authentication in the Hive server
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added import statements and modified soft input toggle logic in DetailActivity . java to enhance code readability and maintainability by using a more descriptive
added a new test method ` MAP _ OF _ STRING _ TO _ MAP _ OF _ INTEGER _ TO _ PIECE ` to validate
updated the size calculation from 100ms to 50ms in TestFileSystem . java to optimize memory usage and improve performance
updated error messages in ContentTypeManager . java for clarity to improve readability and maintainability of the error message
removed unnecessary null check for the connection in the dropSequences method across multiple database classes to simplify the method signature and improve code clarity
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions when the status is null
refactor field creation in DocumentBuilder to use a variable variable to improve code readability and maintainability
added imports for MapModel , LogicalStyleModel , and updated property checks in HierarchicalIcons . java to ensure proper handling of map and logical style
added a new test method ` findOneAfterUpsertForNonExistingObjectReturnsTheInsertedObject ` in ` MongoTemplateTests . java ` to ensure
replaced direct calls to ` ( high - low ) > > > > 1 ` with ` > > 1 ` in multiple Java files to
added ` recordLaunch ` method to ` Launcher ` and ` Stats ` classes and modified intent handling in ` AppsCustomizePaged
added drawing functionality to the Graphics2D in JavaSEPort . java to improve image handling and ensure proper resource management
[ instructor ] instructorfeedbackresults : do n ' t add team to receive team if it ' s already in the last section .
added a check for zero inventory ID in the Inventory class and created a corresponding test in the InventoryTest class to ensure that the inventory ID is
added a conditional check before breaking the break statement in ConfigDescriptionRegistry . java to ensure that the break statement only occurs when the found value is
updated method calls in ` ReloadableJavaParserVisitor ` , ` ReloadableJava17ParserVisitor ` , ` ReloadableJava8ParserVisitor
added a check for null blendedTiles before initializing it in TileMapRenderer . java to improve robustness by preventing potential NullPointerExceptions
updated the class name from " value " to " sunClasses " in Probe . java to improve clarity and consistency in class naming conventions
modified the getArea method signature and added null checks for last and first arrays in IfcTools2D . java to improve accuracy of area
refactor locking logic in Throttler . java to improve clarity and consistency to enhance code readability and maintainability by reducing redundancy
pipe : fix a bug in pipeeventbus and pipebehaviouremzuli . addmodifyspeed ( ) .
updated the timeout duration from 1000 to 1000 in ZkControllerTest . java to improve test reliability by allowing more time for ZkController
added a new test method ` passcode _ with _ client _ parameters ` to the ` TokenMvcMockTests ` class to verify the correct
added imports for LengthFilter and KeepWordFilter and CharArraySet , and implemented broken offsets constructors in TestRandomChains . java to ensure proper
removed unused JUnit Ignore import from RandomPlaneTest . java to clean up the code and improve readability
replaced direct calls to ` putI1 ` , ` putI8 ` , and ` putI64 ` with ` Integer . to
replaced ` btCollisionObject ` with ` btCollisionObject . getInstance ` in multiple files to simplify code and improve readability by
added a new constant ` BUILD _ COPYRIGHT ` and modified URL formatting in ` AboutDialog . java ` and modified ` AboutDialog
add getdistributedobjects ( ) method to jetclientinstanceimpl and add test
updated variables in FinSet . java and MassCalculatorTest . java for improved clarity and consistency to enhance code readability and maintain
updated memory semaphore initialization from TOTAL _ MEMORY to MAX _ MEMORY in SmartDexingStep . java to improve memory management and
changed exception handling from MetadataException to Exception in StandaloneSchemaFetcher . java and modified setCompressors method in CreateAlignedTimeSeriesPlan .
updated GENESIS _ OUTPUT _ PREFIX from " Co - founder - " to " Bisq co - founder
replace double quotes with double quotes in JSON input and update exception handling in JsonLoaderTest . java to improve code readability and maintainability by
updated the table size check from 1 < 30 to 0x40000000 in ObjectSet . java to ensure that the required table size is within
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to improve code clarity and ensure correct handling of data scale values
removed unnecessary @ AddToRuleKey annotations from several fields in AppleTest . java to simplify code and improve readability by eliminating
updated error handling in FileHelper . java and TextHelper . java to include a boolean parameter to improve robustness and ensure proper handling of security
added a new constant ` StyleWithMultipleAttributes ` and updated test cases in ` ShadowThemeTest . java ` to support multiple attribute resolution in
updated sheet name check from - 1 to sheets . size ( ) in HSSFWorkbook . java and modified sheet creation in TestHSS
changed the method from ` primaryColor ` to ` elementColor ` in ` ManageAccountsActivity . java ` to ensure the correct color is used
added null check for replyHandler in DefaultEventBus and modified path resolution in DefaultPlatformManager to improve robustness by preventing potential NullPointerExceptions
added database collation support to the MariaDbDbmsType and DbmsType classes to enhance the functionality of database collation checks in the application
added a new method ` whenType ( Class < T > treeType ) ` to the ` Tree ` class to provide a default implementation for
refactor navigation handling in ItemLauncher to use a dedicated method for retrieving user view destination to improve code readability and maintainability by centralizing
updated the return statement to use a temporary redirect for the public URL to improve user experience by providing a temporary redirect for the application settings service
[ hotfix ] [ kinesis ] add error message if the provided deserialization schema be not serializable
refactor multiple DnsRecordConverter , JohnzonDataFormat , SObjectBatch , and Jsoner classes to improve code organization and maintain
added a try - finally block around the initialization of the ZkStateReader and shutdownNow methods in LeaderElectionTest . java to ensure proper
updated method names from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to improve clarity
refactor the ` read ` method in ` ProxyHandler ` to use a dedicated ` read ` method to improve code readability and maintainability
replaced ` BufferUtil . allocate ( 32 ) ` with ` ByteBuffer . allocate ( length ) ` in ` ABCase1 _ 2 .
modified the ` prepareStreamsToUpload ` method to return a boolean instead of a void to simplify the method signature and improve error handling
updated order comparison logic in AbstractConfigLoader and TestMicroserviceConfigLoader to use Integer . compare for comparison to ensure accurate order comparison and improve
added a new file PicOfDayAppWidget . java to update the PicOfDayAppWidget to enhance the functionality of the widget ' s
cloudstack - 3641 : fix npe in internalloadbalancervmmanagerimpl . getoffering ( ) when uuid be pass in
refactor join condition handling in HiveParserCalcitePlanner to use HiveRelOptUtil instead of RelOptUtil to improve clarity and
added @ Deprecated annotations to multiple transformation classes to indicate that these classes are outdated and should not be used in future development
added user and password options to NodeToolCmd . java and modified JMXConnector initialization in NodeToolCmd . java to enhance configuration flexibility and
removed unnecessary initialization of BytesRef in Stemmer . java to streamline the code and improve readability
updated the condition for determining if the number of widgets is greater than 1 in AppsCustomizePagedView . java to ensure proper handling
refactor getViewForThumbnail method to use a private method for retrieving the EUclidianViewWInterface to improve code readability and
updated rotation positioning logic in GcodeRenderer . java to ensure proper rotation behavior based on the specified dimensions
added a new option for the workspace directory in DAEMON and WORKSPACE options to enable configuration of the workspace directory in the daemon mode
updated file path from " target / test - classes / options . apt " to " target / test - classes / options . html "
updated ScimUtilsTest to use JUnit 5 annotations and added assertions for validation to enhance test coverage and ensure proper error handling for user validation
updated the ` confimAccess ` method to accept a ` Map < String , Object > ` instead of a ` AuthorizationRequest ` attribute to
added an eventually assertion for cache hit count in HibernateIT . java to ensure the cache stats reflects the correct number of hit counts
refactor EventBusHook class to improve code readability to enhance maintainability and facilitate future updates
refactor MultiPaintEventTest class for improved clarity to enhance maintainability and readability of the code
changed the variable ` mNewScale ` from ` final ` to ` final ` in ` WorkspaceStateTransitionAnimation . java ` to ensure consistency
refactor SyncFactory class for improved readability to enhance maintainability and clarity of the code
added uniqueKey field handling in LukeRequestHandler to ensure unique keys are included in the schema
added methods to set stroke color and background color in BorderEditor and modified color retrieval in EditableResources to improve border color management and ensure proper
added TruffleBoundary annotation to Assert . java and added CompilerAsserts . neverPartOfCompilation method in BinaryParserException . java to ensure proper handling
[ hotfix ] [ test ] replace slotpoolimpl with declarativeslotpoolbridgebuilder
added logging statements and modified return values in GatewayRSocket , GatewaySocketAcceptor , and PingPongApp to improve logging clarity and
updated RecentChatFragment to implement Toolbar . OnMenuItemClickListener and added menu inflation for recent chats to enhance user experience by providing
renamed ` InfoDropTarget ` to ` UninstallDropTarget ` and updated methods in ` InfoDropTarget ` and ` UninstallDrop
replaced ` add ` and ` removeTail ` methods with ` peek ` methods in multiple test classes to improve code clarity and consistency in
updated API and EVENTLOG _ WIKI paths from " testwiki " to " commonswiki " in CommonsApplication . java
refactor index initialization to use a new method ` setIndex ` and ` updateIndex ` to improve code readability and maintainability by encapsulating
replaced instances of ` Collections . sort ` with ` Collections . sort ` in multiple classes to simplify sorting logic for better readability and maintain
added DateTimePatterns for various time and date patterns in FormatData _ hr _ HR . java to enhance date formatting capabilities for better user experience
added a call to clear the focus of the clicked view in DetailFragment . java to ensure the clicked view is properly closed when the focus is
updated language selection logic in DescriptionsAdapter and removed unnecessary null checks in SpinnerLanguagesAdapter to improve code clarity and ensure proper handling of
updated TimeZoneNames . java to replace " WSST " with " WSDT " in multiple files to ensure accurate time zone representation for improved
added native methods ` registerGlobal ` and ` registerWeak ` to ` FastGetField ` and refactored ` FastGetField `
added JSON serialization and default value handling in ReflectData . java and TestReflect . java to ensure proper handling of null values in field schemas and
increased the timeout value from 300 to 1000 in SedaBlockWhenFullTest . java to allow more time for the blocking bar
added a null check before remapping the RClass in ResourceMerger . java to avoid potential NullPointerException when the RClass is not initialized
refactor HapiFhirDerbyDialect , HapiFhirH2Dialect , HapiFhirMariaDB
camel - 1748 : camel - http - add explicit connection close header to httpproducer
increased the timeout value from 60000 to 120000 in BasicDistributedZkTest . java to improve test reliability by allowing
added an assertion to verify the count of final price cts in BaseReservationFlowTest to ensure that the count of final price cts is
refactor Parser class for improved readability to enhance maintainability and clarity of the code
refactor CasProcessingFilter class for improved clarity to enhance maintainability and readability of the code
replaced direct calls to ` getFirstChild ( ) ` with ` getFirstElementChild ( ) . getFirstElementChild ( ) . getChildren ( ) `
add a check for enum type in LookUpStrategyResolver and add a new test for adding and removing an enum in LookUpStrategyTest to
updated metaPortStart and dataPortStart values from 20001 to 10001 and added a waitingToShutDown method in ClusterNode to
change log level from warn to info in ELContextCleaner . java to improve clarity of log messages for better debugging
set mContentType to " application / octet - stream " in WebdavEntry . java to ensure proper content type handling for application / octet -
added a method ` getQueueSize ( ) ` to ` LazyTraceThreadPoolTaskExecutor ` and created a new test class ` LazyTraceThreadPoolTask
[ geot - 4892 ] skip distance op that do n ' t match min distance .
rename ` required ` to ` requiredLabel ` in ` AbstractUITag . java ` to improve clarity and consistency in naming conventions
removed the ` next ( ) ` method from ` PurgingPartitionIterator ` to streamline the next ( ) method by eliminating unnecessary
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated its usage in ` VectorUtil ` to
added methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide access to
added validation for vertices length and improved localVertices assignment logic to ensure localVertices does not contain at least 3 points to prevent runtime errors
replaced instances of ` ObjectMapper ( ) ` with ` ObjectMappers . newDefaultInstance ( ) ` in multiple Java files to utilize
added a null check for the coeff before processing to avoid potential NullPointerExceptions when coeff is null
refactor Unicode name reading logic in ExternalNameRecord . java and add a test for Unicode name reading in TestExternalNameRecord . java to
corrected the description of the JMS Destination type in AbstractJMSProcessor . java to ensure correct description formatting for the JMS Destination type
added a boolean flag to return login prompts in LoginInfoEndpoint . java and corresponding tests in LoginInfoEndpointTests . java to ensure proper
replaced ` remove ` with ` removeIf ` for listener removal in ` AbstractController . java ` to improve code readability and maintainability
added a new actionToggleSpin case for the spin button in PieChartActivity to enhance the visual appearance of the PieChart
refactor error handling in CitrixResourceBase . java to improve clarity and error handling to enhance code readability and maintainability by
hbase - 11818 addendum skip normalizing table since it have no quota
refactor import statements and add resize method for pressure to improve code readability and maintainability by reducing redundancy
added a new method ` propertyValuesOf ` to ` PropertySupport ` and implemented it in ` PropertySupport ` to provide a way to retrieve
added JUnit @ Ignore annotation to ClientMapNearCacheTest . java to mark the test as ignored due to blocking PRs
simplified the positioning of the entity list in SubTileHopperhock . java to improve code readability and maintain consistency in
added authentication dialog to the SsoWebViewClient to enhance user experience by providing detailed authentication information
updated TestStressIndexing2 . java to handle termDocs1 and termDocs2 more robustness and improved document deletion logic to enhance
[ flink - 22559 ] [ test ] ignore kafka test for flink - 22559
replaced ` get ` method with ` computeIfAbsent ` for type retrieval in ` ResTable . java ` to improve performance by reducing unnecessary
added DeserializationFeature . ACCEPT _ SINGLE _ VALUE _ AS _ ARRAY to the ObjectMapper in DefaultEntityMapper . java to enable JSON serialization
updated localization update messages in VersionChangeLogs . java to include UK , UK , and SL to enhance localization information for better user
updated SHORTCUT _ CATEGORIES initialization to use ResourceUtils for parsing application categories to improve flexibility and maintainability of the code by
[ te ] add support for expression and rel expression .
nifi - 1746 : add content - type attribute to gethttp ( # 1745 )
[ hapi ] fix provenance not be create on same resource ( # 4397 )
replaced ` exitButton ` with ` doneButton ` and added validation for ` searchable ` in ` HelpActivity ` and ` SearchBookContents
refactor NatsConfiguration class to improve code readability to enhance maintainability and facilitate future updates
updated the ` invalidateStalePartition ` method to accept a ` List < PartitionNameWithVersion > ` parameter and modified the ` invalidateStalePartitions
replaced BoundedFifoBuffer with CircularFifoBuffer and UnboundedFifoBuffer in ViewResultsFullVisualizer . java to
replaced ` ic _ group ` icon with ` ic _ chat _ bubble ` in multiple files to align the user interface with the new chat
updated method calls to use ` getLongVolatile ` instead of ` getLong ` in ` BroadcastReceiver . java ` and ` BroadcastReceiverTest .
updated method names from ` shouldCreateMockWhenConstructorIsPrivate ` to ` should _ create _ mock _ when _ constructor _ is _ private
added a constant for the DATA _ SOURCE _ NAME in CSVThirdEyeDataSource and modified the generateDetectionConfig method visibility in YamlDetectionConfig
increased the timeout value from 10 seconds to 30 seconds in the awaiter method calls to accommodate more time for the phaser
removed the ` BuildSlaveFinishedStatusEvent ` class and updated ` DistBuildRunCommand ` and ` DistBuildSlaveEventBusListener ` to
[ vmware ] use utf - 8 encode for template uuid in vmware storage
added a test for depositing workspace items without a submitter in WorkflowItemRestRepositoryIT . java and implemented a new withSubmitter
updated classpath file handling to use distinct ( ) instead of stream ( ) to improve performance by avoiding unnecessary processing of distinct classpath files
removed the isBoxedPrimitive method from the Unbox class to streamline the code by eliminating unnecessary method calls
refactor argument handling in SpecificCompilerTool and add a test for ordering of flags in TestSpecificCompilerTool to improve code readability and ensure
added a null check for the external table before deleting directories in HiveMetaStore . java and implemented tests in TestHiveMetaStore . java
updated HiveConf and SQLOperation classes to include additional configuration parameters and improved error handling for asynchronous threads to enhance clarity and provide
added a try - catch block around the dismissDialog method call to handle potential exceptions to improve robustness by catching potential exceptions during dialog dismiss
refactor UpgradeResourceProvider to use a constant for service name and component names instead of a hardcoded string to improve code readability and maintain
added a new variable ` diff ` to the ` currentConfInfo ` in ` OperationSetTelephonyConferencingSipImpl . java
added a method ` clearEntries ( ) ` to ` FlutterLogTree ` and updated the ` update ( ) ` method in ` Fl
added checks for output and input shutdown status in ChannelEndPoint . java to ensure proper handling of shutdown states in the channel endpoint
refactor SetNullableGenerator to improve code structure to enhance maintainability and readability of the code
camel - 14850 : camel - report - incident - add support for http : / / localhost : 9080 / reportincident
refactor NettyRoutingFilter to use a wildcard import and update FormIntegrationTests to use a static final MediaType to improve code readability and
added ` @ ApiOperation ` annotations to multiple service and endpoint with interface methods in ` AbstractBaseService ` , ` IBaseService ` ,
refactor lifecycle listeners handling in Lwjgl3Application and Lwjgl3Window classes to improve synchronization and resource management to ensure
updated FG _ FK color from 90 to 200 in UIUtil . java to improve the visual representation of the FG _ FK color
set audioFormats . mp3 . required to false in SoundManager . java to disable mp3 audio formats for improved performance
replaced usage of ` execute ( builtIndexesQuery ) ` with ` assertNotMarkedAsBuilt ` in ` SecondaryIndexManagerTest . java
added support for the PMD version header in PMDPlugin and implemented a new about group in GeneralPreferencesPage to enhance user experience by providing
[ hotfix ] [ test ] fix customserializationitcase to use optional
refactor MediaFormatUtil class to improve code structure to enhance maintainability and readability of the code
added a method ` isCellEditable ( int rowIndex , int vColIndex ) ` to the ` GeneralTab ` class to ensure that the
added a method ` isOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` and updated message formatting logic in ` DefaultJavaLibrary
added a static integer tmpCount and updated the vscales array in VocalTractModifier . java and VocalTractScalingProcessor .
updated import statements for BaseScalarUdfTest and TestGenericUDFConcat from BaseScalarUdfTest to BaseScalarUdfTest to
added hashCode and equals methods to UaaAuthenticationDetails class to enhance hash code generation and equality checks for UaaAuthenticationDetails objects
refactor animation handling in TestSkeletonControlRefresh to use AnimComposer instead of AnimChannel and SkinningControl to improve compatibility with
rename ` NodeFilter ` to ` NodeCountFilter ` for clarity to improve code readability and maintain consistency in naming conventions
updated the condition to check if the sync block to fetch size is less than or equal to the size of the sync block to ensure that the
updated the state from 365 to 366 in DebugExpressionParser . java and updated local expression type handling in DebugExpressionParser . java to improve
updated the condition to check for transitive dependencies in ExcludeDependency . java to ensure that only transitive dependencies are processed based on classpath scope
replaced ` tmp ( ) ` with ` dst2 ( T v ) ` in ` Vector . java ` to improve code clarity and
initialize the args array to a default value to avoid potential null pointer exceptions
updated the ` getLinkerArgs ` method to accept an ` ImmutableList < String > ` parameter and modified the ` rustcFlags ` and
[ # 1562 ] fix test failure in adminemailpageui
added configuration for the " hive \ \ . query \ \ \ . name " option and modified logging statements in GenericUDTFGetSplits
removed unused import of java . io . File in TileAtlas . java to streamline code by eliminating unnecessary dependencies
refactor EscapeProcessingOutputStream to use AtomicBoolean for closed state and improve error handling in GradleDaemonExecutor to enhance thread safety and ensure
updated the ` validateQuery ` method to include an additional parameter ` Object . . . arguments ` parameter to enhance error handling by providing more context
updated INDEX _ VERSION from 1 to 2 and refactored repository handling in LuceneExecutor . java to improve code clarity and maintainability
[ hotfix ] [ kryo ] add unit test for kryo registration
added null check before adding configuration type to configTypesUpdated and updated assertions in BlueprintConfigurationProcessor and BlueprintConfigurationProcessorTest to ensure proper handling of
refactor boolean handling in MetaStoreDirectSql to utilize Apache Commons BooleanUtils for improved readability to enhance code maintainability and
added a call to hideCustomizationDrawer ( ) in Launcher . java to improve user experience by allowing customization drawer visibility
added a new constant TV _ KEY _ WARNINGS and modified warnings handling in TermVectorComponent . java and TermVectorComponentDistributedTest
added logging for optimistic types and improved logging behavior in Compiler . java to enhance debugging capabilities and ensure consistent logging behavior
refactor Expect class for improved readability to enhance maintainability and clarity of the code
added UnixSocketConfigurationStrategy to DockerClientFactory and implemented UnixSocketConfigurationStrategy in DockerClientFactory to enhance configuration flexibility for Unix socket access
added unit tests for the ` testEvenLowRateIP ` method in ` CloseableDoSFilterTest ` and ` CloseableDoSFilterTest
added a new exception class ` ReactiveStreamsNoActiveSubscriptionsException ` and updated ` CamelPublisher ` to include it to improve error handling for stream
replaced ` validateMRTask ` and ` validateMapWork ` methods with ` convertMapWork ` in ` Vectorizer . java ` and
updated the constructor parameters in StringAppender and LogDivertAppender to include a boolean parameter to ensure proper handling of layout behavior in string and log
added a null check before updating the current node in JMeterTreeModel . java to prevent potential NullPointerException when the gui package is not initialized
updated the declareInSulong method to include a boolean parameter and modified related methods for handling weak and linkage values to enhance functionality by
updated multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
add unit tests for the DefaultTransactionThreadLocal class to ensure proper functionality of the DefaultTransactionThreadLocal method in the application
added a check for invalid operation handle and improved error logging in HiveStatement . java to enhance error handling and provide clearer feedback for invalid
rename ` ALTER _ TABLE _ ALTER _ COLUMN _ NULL ` to ` ALTER _ TABLE _ ALTER _ COLUMN _ DROP _
add unit test for aws - secrets - manager integration
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
updated error message formatting in UserREST . java to improve code readability and maintainability
added a boolean parameter to the ` fromContent ` method and modified the ` fromContent ` method to include a ` subTree ` parameter to
updated column width calculations in HSSFSheet and added corresponding test cases in TestHSSFSheet to ensure correct handling of column width values
added a configPath parameter to the Command . less method call to include the configuration path to provide additional configuration options for better configuration management
replaced ` Set ` with ` Collection ` in ` DotWriter ` and ` GraphExecutable ` classes to use ` ArrayList ` instead of `
updated the SSHD image reference from " @ sha256 " to " 1.0 . 0 " in TestcontainersConfiguration . java to ensure
added an assertion to verify the hostId value in AgentManagerImpl . java to ensure that the hostId value is correctly validated before proceeding
refactor the key generation logic in DefaultGroupKeyGenerator to improve clarity and functionality to enhance code readability and maintainability by reducing
lucene - 9441 : fix testmultimap . seek ( long ) to throw eofexception
replaced instances of ` IngredientStack . of ` with ` IngredientNBTBC ` in ` BCSil
change the method name from ` put ` to ` putObject ` in ` GraphHopperConfigMixIn . java ` to improve clarity
updated child visibility logic and refactored drag exit method in DragController and Workspace classes to improve clarity and maintainability of the drag exit
refactor ModifyRequestBodyGatewayFilterFactory to use originalBody instead of directly applying the rewrite function to improve code clarity and ensure proper handling of
updated checks in ConstructorFinder , FieldFinder , FieldFinder , and MethodFinder to include package accessibility checks to ensure proper handling of package access
replaced ` warn ` with ` trace ` in logging methods for improved clarity and consistency to enhance code readability and maintainability by
refactor prefix handling in WhiteBlackList . java and add a new Issue348 . java file with a test for wildcard URIs to improve
added functionality to handle gallery options in GalleryActivity to enhance user experience by allowing users to manage gallery options
refactor MongoDBServiceFactory to use a singleton instance of MongoDBService to improve clarity and maintainability of the service creation process
added tests for the ` HasBooleanICONST0 ` and ` HasBooleanICONST1 ` methods in ` InlineConstantMutatorTest . java
updated the ` decode ` method to accept a ` Blackhole ` parameter in ` RecordTest . java ` to enhance functionality by allowing more flex
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
[ knx ] fix npe in dptunits . getallunitstrings ( ) and dptunits . getallunitstrings (
removed the clear of witnesses in ManagerTest . java to streamline the test by eliminating unnecessary updates
replace throwing a PrestoException with logging a debug message in JdbcPageSink . java to improve error handling and debugging capabilities
updated the stack property handling in NativeError . java to use ScriptFunctionImpl for improved stack management to enhance code clarity and maintainability
removed conditional check for path names starting with " . " in DrillPathFilter . java to streamline the code by eliminating unnecessary
rename ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomaly
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is cleared before tests are executed
change the bold weight value from 190 to 0x190 in HSSFFont . java to reflect the new bold weight for improved
changed ` fThreadGroup ` and ` fLookForStuckThread ` fields in ` Timeout ` and ` Timeout ` classes to improve thread
rename ` getValue ` and ` setValue ` methods to ` setValue ` in ` ValueResultData . java ` to improve clarity and consistency in
replaced the initialization of ` result ` with ` hashCode ( ) ` and ` equals ( ) ` in ` FuzzyQuery . java `
removed unnecessary print statements in PushedResourcesTest . java to clean up the code and improve readability
changed return type of ` removeFile ` and ` removeDirectory ` methods from ` List < SharedRandomAccessFile > ` to ` void ` to
updated the product version from " 2.5 . 1 " to " 2.6 . 0 " in JdbcDriverInfoRetrieverTest . java
updated the creation of the principal in PersonDirectoryPrincipalResolver to use a default value of 0 instead of a hardcoded value to improve flexibility
change log level from info to warn for ZigBee USB Gateway . No serial port and host / IP in Bridge configuration to improve log
updated hash methods to use ` longHash ` instead of ` intHash ` for improved clarity to enhance code readability and maintainability
added a constructor to ThumbnailGenerationTask to handle null storage manager and account parameters to improve robustness by preventing potential NullPointerExceptions
updated the condition in GroupSelectionQuery to check for a maximum number of retries to ensure that the loop does not exceed the expected number of attempts
added a new file ` Bug1933922 . java ` that implements a program program and loading functionality to facilitate testing of
simplified the comparison logic in multiple series and tokenizer classes to improve code readability and maintainability
updated character range from 33 to 32 in FileResolver . java to ensure proper handling of space characters in control characters
added a call to requestFocus ( ) in the Display class to ensure focus is properly handled during user interaction
replaced ` InstructorHomePageUiTest . json ` with ` InstructorHomePageUiTest1 . json ` and refactored
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
replaced Crouton . cancelAllCroutons ( ) with Crouton . makeText and notifyAppWidgets ( mActivity )
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` to ` IoTDBSchemaTemplateIT . java ` to ensure
refactor Dialog class to improve code structure to enhance maintainability and readability of the code
refactor Process execution to use a ProcessBuilder for command execution to improve flexibility and maintainability of the process execution process
increased the past window from local host to getByName ( " 127.0 . 0.1 " ) in HintedHandOff
refactor controller and base handling in Metrics . java to use a loop for processing controller names to improve code readability and maintainability by redu
added ` assumeTrue ( ) ` method to ` DaemonLifecycleManagerTest ` and ` InstallCommandIntegrationTest ` classes to ensure tests are only
refactor JVMCIVersionCheck to use a new method ` getRequiredProperty ` and update property validation logic to improve code readability and maintainability
refactor Mockito class for improved clarity to enhance maintainability and readability of the code
updated TestLargePageUseForAuxMemory . java file to improve performance and maintainability of the code
updated the method call from ` getSource ( ) ` to ` getSource ( ctx ) ` in ` BinaryParser . java ` and added charset handling
added a new ` MultiPartFormDataCompliance ` enum and modified ` HttpConfiguration ` , ` Request ` , and ` HttpConfiguration ` classes to
added JDK - 17 version to GradleDistributionManager . java to ensure compatibility with the latest JDK versions
added a new method ` addType ` to ` DatabaseSnapshot ` and refactored type handling in ` SnapshotControl ` to improve type management and
refactor Term class to improve code readability to enhance maintainability and facilitate future updates
added null and empty check for runWith in ChangeSet . java to ensure proper handling of null and empty runWith values
added a test method ` testIsSameRM ` to ` ActiveMQXAConnectionFactoryTest ` to verify the equality of XA resources to ensure that
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
pdf417 : do n ' t set luminances [ x ] to 255 for pixel .
replaced direct setting of ` mTintingColor ` with ` mTintAmount ` in ` TaskView . java ` to improve code cl
added a new file ` SumZeroAggr . java ` that implements ` DrillAggFunc ` and modified ` SumZeroFunctions . java
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner -
refactor getAllocationFailWarningMessage to include a static method for better readability to enhance code clarity and maintainability by encapsulating error
added a null check for propName before adding it to the roleObject to avoid potential NullPointerExceptions when propName is null
updated visibility annotations and modified task removal logic in StatusBarTouchController . java , RecentsView . java , and FeatureFlags . java
added methods to log container streams in DockerClient to enhance container logging capabilities for improved flexibility
added a new file TestMVStoreCachePerformance . java to implement tests for MVStore caching functionality to ensure proper testing of MVStore cache
updated the Long type from " L " to " J " in PrimitiveType . java to reflect the correct representation of the Long value
changed the visibility of the delegatingApplicationListener method from package - private to static to allow broader access to the method from other packages
camel - 14263 : camel - rest - rest should set body to null to avoid null pointer exception
added new files ` FileDeletingTasklet ` , ` TaskletJobFunctionalTests ` , and ` TaskletJobFunctionalTests `
updated updateSizeKeepDrawables method in EuclidianView and added initialization logic in EuclidianViewCompanion
updated variable names for consistency and clarity in multiple Java files to improve code readability and maintainability
replaced ` sendEventToTest ` with ` sendStateEventToTest ` and updated related methods to use ` int stateOrdinal ` to
added support for video thumbnail requests in the RequestHandler and RequestV2 classes to ensure proper handling of video thumbnail requests based on user agent
refactor error handling in ErrorCheckerService to improve clarity and functionality to enhance readability and maintainability of error handling
added conditional logic to handle " menuButtonTopBool " and " menuButtonBottomBool " theme in SideMenuBar . java to ensure proper
added preload = " libskia " in Skia . java and updated link initialization in Skia . java to support additional preload settings for
added a constant for the ID _ UNITTESTNET in NetworkParameters . java to facilitate the retrieval of unit tests based on the
added validation for format arguments in QueryCommand and modified test cases in QueryCommandIntegrationTest to ensure correct handling of format arguments and improve test coverage
refactor capacity and length variables in IntIterator . java for improved readability and maintainability to enhance code clarity and maintainability by
added a new parameter ` srcTarget ` to the ` walkRuleAndAdd ` method and modified the ` walkRuleAndAdd ` method to
[ netbeans - 4892 ] fix patch file with source override .
[ java ] remove unnecessary condition check for candidate term id in election .
added a conditional check for SAML authentication before setting the default policy to ALWAYS _ NEW _ CLIENT based on the presence of SAML authentication to ensure
added null checks for mappedTableResource in ReadBatch , WriteBatch , and corresponding test cases to ensure that the mappedTableResource ( table )
replaced instances of ` Session ` and ` Connection ` closing with ` Utils . close ` in multiple classes to streamline resource management and improve
refactor ` AnonymousAuthenticationFilter ` to use a ` Supplier < SecurityContext > ` for better context management to improve code readability and maintainability
added a boolean parameter ` unfocus ` to the ` removeActor ` method in ` Actor . java ` and ` Group . java ` to
refactor prompt logic to use a valid configuration variable instead of a hardcoded string to improve code readability and maintainability by reducing red
added logging functionality to NettyHttpServer and RoutingInBoundHandler to enhance logging capabilities and ensure proper channel flushing
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
replaced direct call to update ( ) with SwingUtilities . invokeLater ( this : : update ( ) ) to improve performance by avoiding
camel - 14850 : camel - groovy - allow to load the groovy script from the cache .
refactor artifact resolution logic in DefaultPluginManager to use HashSet instead of ArrayList to improve code readability and maintainability by reducing redundancy
changed access modifiers of constants and methods in CliFrontendParser , ProgramOptions , and ProgramOptionsUtils classes to public to allow access to these constants
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
removed storageAlias assignment and certificate chain retrieval in HttpsMessenger . java to streamline the code by eliminating unnecessary alias retrieval
simonstewart : do n ' t throw a classcastexception when convert text to response
changed the visibility of the updateImage method from private to protected in ImageButton and ImageTextButton classes to restrict access to the updateImage method
added methods to drop resource management for ServerLevel in Block . java to enhance resource management by allowing dynamic dropping of server levels
added native methods for spatial location calculations in DataOutputQueue and depthai classes to enhance functionality for handling spatial location calculations in the application
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
refactor the ` isEmpty ` method in ` TreeTrie ` to use a new ` isEmpty ` method to improve code readability and maintainability
refactor foreground and background calculations in AttributedStringBuilder . java to improve code readability and maintainability
updated the doFingerprint assignment logic in PeerSync . java and added a test case in PeerSyncTest . java to enable fingerprinting based on
changed the access modifier of the moveFunds method from private to public to allow access to the method from other classes
refactor MongoTemplate and MongoTemplateTests to use BeforeConvertEvent instead of BeforeConvertEvent to simplify event handling and improve code clarity
refactor CollectionContainer , CollectionItem , SetTransactionTest , and SetTransactionTest classes to streamline data handling and improve test coverage to enhance
added a null check before accessing the InputStream in TikaCLI . java to ensure proper resource management and prevent potential memory leaks
updated error handling in TestCollectionAPIs . java to use ` ApiException ` instead of ` ApiBag . ExceptionWithErrObject ` to improve
removed redundant line breaks in OptionsParser . java to improve code readability and maintainability
[ instructorfeedback ] fix typo in teammateslog message
[ hotfix ] [ runtime ] make pipelineoptions final in externalworkerservice final
removed the step parameter from HmDatapoint and updated its usage in DisplayTextVirtualDatapoint and HomematicTypeGeneratorImpl to
added logging statements for acquire and release shared locks and exclusive locks in PostgreSQLReadWriteAdvisoryLocksTest . java to enhance debugging capabilities and
removed redundant calls to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to streamline code by eliminating unnecessary complexity
simonstewart : fix the test gettextcontent to fail on window
replaced instances of ` Deque < Boolean > ` with a ` ThreadLocal < Logger > ` for logger management to improve thread safety and
replaced ` @ VisibleForTesting ` annotation with ` @ VisibleForTesting ` annotation and updated imports in ` FunctionInitializer ` and ` FunctionInitializerTest
added a new method ` boxedTypeOrType ` to handle primitive types and introduced a new ` T6995200 ` class to
updated the handling of focused task views in RecentsView . java to ensure proper orientation state management during task updates
hbase - 17474 fix testflushfromclient . getregions ( ) ( # 1748 )
added logic to delete a original repository and store contract details in TransactionExecutor . java to ensure the original repository is removed when the contract details are
updated balance calculations in TokenIssueProcessor and Program classes to use dynamic properties store for asset fee to ensure accurate balance setting based on asset fee settings
refactor texture cache management in RealisticRenderStrategy . java to improve cache management to enhance performance and maintainability by reducing redundancy in
replaced direct calls to ` createChild ` with ` createWritableChild ` and added a new class ` Bug7049339 `
added isUnselectedStyle boolean and modified string width handling in Label and DefaultLookAndFeel classes to improve the handling of font - specific string
replaced instances of ` ArrayList ` with ` ArrayList < int > ( 0 ) ` in multiple classes to improve code readability and maintainability
removed the flags parameter from queryImplicitIntentServices , queryImplicitIntentActivities , and queryImplicitIntentContentProviders methods in ShadowApplicationPackageManager to
refactor PingRequestHandler to improve code readability to enhance maintainability and facilitate future updates
added a new constant ` MP4 _ ASSET _ WITH _ INCREASING _ TIMESTAMPS _ URI _ STRING ` and
refactor firmware handling logic in TradfriGatewayHandler . java for better readability to enhance code clarity and maintainability by reducing
refactor AjaxElementLocator to improve code structure to enhance maintainability and readability of the code
updated conditions in BoxLayout and DefaultLayout to include " table - cell " display in BoxLayout and DefaultLayout to ensure correct handling of layout
refactor JsonDecoder to use a loop for reordering fields and add a new test for reordering fields in TestJsonDecoder to improve code
updated the listener initialization to include removalCause parameter to enhance the listener ' s functionality by allowing removal causes
added JUnit @ Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready for execution
added multiple @ Test annotations to DroolsMvelParserTest . java to improve test coverage and ensure proper functionality
changed access modifiers of ` appName ` , ` host ` , ` port ` , and ` host ` to ` final ` in ` ContextRegister
refactor ObjectHashSet and ObjectHashSet classes to improve iterator initialization and initialization to enhance flexibility and maintainability of the iterator initialization process
added BATCH _ BYTES constant and adjusted batchBytes calculation in SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch classes to
replaced Context . MODE _ WORLD _ READABLE and Context . MODE _ WORLD _ WRITEABLE with Context . MODE _ PRIVATE in
updated JdbcProxyGenerator to handle the " abort " method in the close ( ) method to improve error handling and ensure proper cleanup of connection resources
updated workspaceAnim assignment to use mState instead of getState ( ) and added IMPORTANT _ FOR _ ACCESSIBILITY _ AUTO and IMPORTANT
change log level from warn to debug in ProtobufLogReader . java to improve log verbosity for better debugging
updated scope assignment in UaaTokenServices . java and added unit tests in UaaTokenServicesTests . java to ensure scope is longer than
updated import statements and added a ` toString ` method in ` AvailableJDBCDrivers ` and ` TestAvailablePlugins ` classes to improve clarity and
added a new interface ExecutableCommand with a Context interface to provide a way to execute commands in the application
camel - 16400 : remove unused jdbctableservice . java since it be no longer needed
added padding getter methods for left and top padding in CellLayout and modified bitmap creation in Launcher to improve padding management and ensure consistent bitmap rendering
added a condition to check if the string length is non - empty before filtering candidates to avoid potential errors when the input string is empty
added null check for ` flow ` before adding ` SamlMetadataUIParserAction ` to prevent potential NullPointerExceptions when ` flow ` is not
added a method to check LDAP ports using BufferedReader and InputStreamReader in LdapMockMvcTests . java to enhance security by allowing users to specify LDAP ports
log4j2 - 1341 : fix log4j2 - 1341 shutdown callback should be set to 0
refactor URL handling in Fetcher and HTMLMetaProcessor to improve clarity and correctness of redirect processing to enhance code readability and maintain
updated SolrQuery parameters in TestSpellCheckResponse . java to use " name : samsang " instead of " homer " to
refactor Console initialization logic to use reflection for
changed the access modifier of the ` getVerticesColors ` method from public to private and modified the initialization of the ` verticesColors ` list to
added EXCLUDE _ TIMESTAMPED _ REPORTS _ DIRECTORIES to HTMLReportGenerator and updated test cases accordingly to improve file handling
refactored test methods in DataValidatorTest . java for consistency and clarity to improve code readability and maintainability
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added null check for bindStatus in FieldUtils . java to ensure proper error handling for form binding errors
removed the system . out . println statement from JoglInput . java to simplify the code by eliminating unnecessary console output
added a new boolean flag ` allowExtractingPrivateFields ` and updated related test cases in ` FieldSupport _ fieldValues _ Test ` to allow
added a string replacement for device name in WebDataHandler . java to ensure compatibility with device names in the WebDataHandler
refactor lookup initialization in Platform . java to utilize MethodHandles for Java 8 types to improve code readability and maintainability by reducing
replaced the deprecated ` weights ` method with ` weightsByDouble ` in ` ZParams ` and updated its usage in ` SortedSetCommandsTest
added the ` Database ` parameter to the ` writeCustomHTML ` method signatures across multiple writer classes to support the use of the ` Database `
updated key deserialization logic in BTreeMap . java to ensure proper handling of null values to improve code robustness and prevent potential null pointer exceptions
added handling for BalanceInsufficientException in CancelDeferredTransactionContractActuator , UpdateDeferredTransactionContractActuator , and TransactionTrace classes to improve
added a conditional check for the " org . netbeans . lib . profiler . heap . zerofile " flag in AbstractLongMap .
updated logging messages in ChangeSet . java and Main . java to include a null check for liquibaseProLicenseKey before logging to
updated the buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy and HortonworksEncodedSchemaReferenceWriter to ensure
added import statements for ` ChunkListener ` , ` ItemProcessListener ` , and ` SkipListener ` in multiple Java files to ensure proper listener
refactor code to improve readability and maintainability to enhance maintainability and clarity of the code
updated print statements in SearchFiles , SortedSetDocValuesFacetCounts , and MessageFilesParser to use liveDocs instead of liveDocs to improve cl
refactor Test7005594 . java file to improve code readability and maintainability
updated error message formatting in ResourcesValidationProcess . java to improve clarity and consistency in error message formatting
refactor TopKRollupPhaseOneJob class to improve code organization to enhance maintainability and readability of the code
added a null check for the IP4 address in the guest type check to ensure that the IP address is not null before proceeding with the
replaced ` mModifierDigitalTriggers ` with ` mModifierAnalogTriggers ` and introduced ` MCOptionUtils . MCOptionListener `
refactor ` iteratesOverSequence ` and ` iteratesOver ` methods to accept ` Iterable < T > ` instead of ` Object ` to improve
added a check for the length of two headers in DefaultHttpBinding and DefaultHttpBinding classes to ensure that only two headers are processed in the
added assertions for SQL query counting in ActivityHistorySQLServerStoredProcedureTest . java to ensure correct functionality of SQL query counting in the application
added a new ` LargeValueFormatter ` class and modified the label retrieval logic in ` BarChartActivityMultiDataset ` , ` BarLine
refactor character handling in CommentsParser to use a constant for improved readability to enhance code clarity and maintainability by centralizing character
added @ SuppressWarnings ( " argument . type . incompatible " ) annotation to Platform . java to suppress compatibility warnings for incompatible argument types
corrected the spelling of " Before register allocation " in TraceLinearScanLifetimeAnalysisPhase . java to improve code readability and maintain consistency
added a TODO Auto - generated method stub to NullAssertionValidator . java to improve code clarity and maintainability
added support for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to enable customization of rule keys in the build process
added directory creation and improved test setup and teardown methods in PmsConfiguration , DLNAMediaInfoTest , and SearchRequestHandlerTest
removed the default thread factory instantiation from TestcontainersDockerCmdExecFactory . java to simplify the code and improve readability
replaced ` inMessages ` with ` receiver . getMessagesIn ( ) ` in ` HttpChannelOverHTTP ` and ` HttpReceiverOverHTTP
added a " accept " attribute to the el in ImageFileInputDialog . java to allow users to specify the accept attribute for image files
replaced ` NodeBuilder . builder ( ) ` with ` PreBuiltTransportClient . builder ( ) ` in ` ElasticIndexWriter . java
updated string formatting in ForkController . java to improve readability to enhance clarity and maintainability of the code
added a new test class ` NullPointerAndEmptyArrayTest ` to test the functionality of ` NullPointerAndEmptyArrayTest ` to ensure
removed unused method ` findConfiguredGeneratedSourcePathsUsingDeps ` in ` BaseIjModuleRule . java ` , ` IjProjectB
added a new method ` constructSimpleWildcardPatternWithAnyCharDelimiter ` to ` UaaStringUtils ` and modified the ` constructWildcards `
refactor alias validation logic in Vectorizer . java to improve error handling for invalid map aliases to enhance clarity and maintainability of alias validation
replaced MockitoRunners with MockitoJUnitRunner in WeatherQueryTest . java to improve compatibility with Mockito ' s J
added error handling for firmware setting setting in TinyGFirmwareSettings . java to improve robustness by logging a warning when setting fails
refactored the ` getLangs ` method to return a set of strings instead of a list to improve code readability and maintainability by
refactor import statements in LazyTraceScheduledThreadPoolExecutorTests . java to improve code readability and maintainability to enhance maintainability and clarity
hbase - 11886 add tablelockmanager and takesnapshothandler prepare ( ) method to disable and disable snapshot handler
refactor ` createIsNullCall ` methods to use ` createExitStatement ` instead of ` createExitSwitch ` and ` createExitStatement
added a test method to verify the existence of the HTTP _ RPC endpoint in DockerQuickstartTest . java to ensure that the explorer endpoint is
added a volatile boolean flag ` isSuspended ` and modified the return logic in ` Thread . java ` to handle thread suspension to ensure
updated JavadocVisitor and ReloadableJava8JavadocVisitor to use Hidden and Serial data types instead of Author to improve clarity and functionality of Javadoc
camel - 1649 : fix the issue of camel - produce and camel - service - export with two camel context .
removed multiple @ Override annotations from multiple security classes to streamline code for better readability and maintainability
updated Java2TypeScriptAdapter to use ModuleImportDescriptor for ENUM _ WRAPPER _ CLASS _ SUFFIX and modified test assertions in Enum
replaced XMLConstants . W3C _ XML _ SCHEMA _ NS _ URI with " http : / / www . w3 . org
added functionality to set the content description based on badge status in BubbleTextView to improve user experience by providing a clearer label for bad
added mouse wheel listener functionality to TestMouseWheelScroll . java to enhance mouse wheel functionality for better user experience
pdfbox - 4892 : close the document before load it , a suggest by valerybokov
updated currency pair names from BTC _ ETH to XRB _ BTC in KucoinAdapters . java and KucoinIntegration
rename ` VacuumEnvironment . Location ` to ` String ` for consistency and clarity to improve code readability and maintainability by
removed redundant currency handling for DSH , QTM , and QTM in BitfinexAdapters . java to simplify code and improve readability by
refactor JsonFormat to use ImmutableSet instead of HashSet for default values and improve field printing logic to enhance code readability and maintainability by redu
simplified array type handling in JacksonXmlFormatMapper to improve code readability and maintainability
updated short constants in VirtualThread . java for consistency and clarity to improve readability and maintainability of the code
updated the ` DirectoryTaxonomyWriter ` and ` NameIntCacheLRU ` classes to include a new ` NO _ OP _ CACHE ` instance
refactor VetoableChangeSupport class for improved clarity to enhance maintainability and readability of the code
updated the calculation of the height in BrowserContentPane to account for the last height to ensure the correct height is returned based on the last height
pdfbox - 4892 : remove ` ` throw invalidpasswordexception ' ' from method signature
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure
updated button style and method calls in InputBarHelpPanelW . java to improve clarity and functionality to enhance code readability and maintainability
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
refactor ` BackendInitializerHelper ` and ` TerminalClient ` classes to use ` ThreadHelper . waitUntil ` for controller state checks to improve
updated version comparison logic in SwingStartup to use ReleaseStatus . OLDER instead of BuildProperties to improve compatibility with OLDER release status
added a ` includeGeneratedFileComment ` property and its getter and setter methods in ` DbMigrationConfig ` , and updated ` MigrationXmlWriter
updated command usage strings to include a wildcard character for player usage to enhance flexibility in command usage for better user experience
deleted the BadHdfsThreadsFilter and BadZookeeperThreadsFilter classes to remove obsolete classes to streamline the codebase
updated method names from " nameVariableName " to " optionName " in OptionProcessor . java to improve clarity and consistency in naming conventions
added a condition to check for parallel classes in TestNGContentHandler to ensure proper handling of parallel classes in tests
http : / / issues . apache . org / jira / browse / amq - 4892 - fix checkstyle violation
refactored import statements and variable assignments in CtMethodImpl . java to improve code readability and maintainability
added serialVersionUID fields to multiple Java files to ensure proper serialization compatibility across different versions
renamed DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve clarity and consistency in naming conventions
updated the ` shaBase64 ` method to include a ` CONST _ SEPARATOR ` parameter in ` ShibbolethCompatiblePersistentIdGenerator `
updated parameter handling in Parameters . java and TestAction . java to improve null safety and clarity to enhance robustness by preventing potential NullPointerException
added a new file ` Person . java ` that defines a ` Name ` field in the ` Person ` class to facilitate the
refactor Gossiper to use LocalAddress instead of FBUtilities for local address retrieval to improve code clarity and maintainability by
updated string comparison from ` indexOf ( timeStr ) ` to ` indexOf ( timeStr . toUpperCase ( ) ) ` in ` AbstractClient .
added assertions for timeColumn , timeUnit , totalDocs , and totalDocs in SegmentMetadataImpl and SegmentMetadataImpl classes to ensure correctness
updated color settings in SimulationPlotPanel to use net . sf . openrocket . util . Color instead of java . awt . Color
added a call to ` disconnectEmitters . onNext ( new Object ( ) ) ` in ` NettyStreamingService . java ` to ensure
changed the type of scopeHierarchy from List < String > to List < Class < ? extends Annotation > > in DefaultBeanContext . java to
added a new test method ` testShouldBeAbleToClickOnAnElementHiddenByDoubleOverflow ` in ` ClickScrollingTest .
added a try - catch block around the dismissDialog method call to handle potential exceptions to improve robustness by catching potential exceptions during dialog dismiss
added support for custom JNDI location in JtaTransactionManager to enhance transaction management by allowing customization of the JNDI location
changed the visibility of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from the Library class to streamline the code by eliminating unnecessary functional checks
replaced ` enabledCiphers ` and ` enabledCiphers ` with ` result ` in ` JSSESocketFactory . java ` to improve
[ beam - 11919 ] fix timestamp timestamp ( # 11919 )
removed unnecessary null checks for buffer and user credentials in Identifiers . java and DatabaseConnector . java to streamline code by eliminating unnecessary
refactor ` coerceValueForInputObjectType ` method to use ` inputMap ` instead of ` input ` to improve code readability and maintain
added bounds checking for row and column in FlightConfigurablePanel . java to ensure proper handling of invalid values in the table
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user interface responsiveness by
added import for ASTMemberSelector and implemented a check for the first descendant of ASTMemberSelector in UnnecessaryLocalBeforeReturnRule . java
replaced the initialization of ` ScriptEngineManager ` with a direct instantiation of ` ScriptEngine ` to simplify the code and improve readability by
refactor EuclideanDistanceSimilarity to remove NaN checks and update correlation assertions in test cases to improve accuracy of distance calculations and ensure correctness
refactored the ` incrementallyBackup ` method to ` maybeIncrementallyBackup ` in ` DataTracker . java ` to improve code cl
refactor relativize method to use a new method ` relativize ` and add unit tests for ` relativizeWithDotDot
added null checks for columnSize and decimalDigits in ColumnSnapshotGenerator and DataType classes to ensure proper handling of null values and improve code clarity
[ hotfix ] [ test ] skip current writer head file in deadletterqueuewritertest
replaced ` ByteArray . toHexString ` with ` ByteArray . toJsonHex ` in ` TronJsonRpcImpl . java ` to improve clarity
rename ErrorHandlerController and ErrorHandlerControllerTest classes to Error403Controller and update package structure to improve clarity and consistency in naming conventions
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in ` UnixTerminal .
updated import statements and modified trigger patterns in Tiny . java for improved clarity and functionality to enhance code readability and maintainability by
http : / / issues . apache . org / jira / browse / amq - 4892 - remove unused entry from connectionpool
updated date converter methods from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` across multiple classes to ensure consistency in date
pdfbox - 4892 : do n ' t check if the destination name exist , a suggest by valerybokov
updated error message format in JavassistUtils . java to improve clarity of error messages for better debugging
added readerException and writerException fields to the LargeStreamletTest class and updated thread join duration to improve exception handling and ensure consistent thread
updated the page handling logic in HomeFragment to include additional page types based on shared preferences to enhance user experience by providing additional page counts based on
added error handling for bitmap creation and rendering in AndroidImplementation . java to improve robustness by handling potential exceptions during image creation
added @ SuppressSubnodes annotation to BaseParser . java and updated label formatting in ImplicitActionsConverter . java to improve code clarity and maintain
refactor FDFParser instantiation to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed for the project
updated command execution in AbstractLauncherUiTest . java and removed an assertion in LauncherInstrumentation . java to improve user experience by allowing keyboard
added JSON serialization for output URLs in FileDumper . java to facilitate JSON serialization for file paths in the output directory
profilerserver : reset resultsnotified flag to avoid race condition
replaced ` getTextureFromImage ` with ` loadImage ` and updated related methods to use ` Image ` instead of ` Texture ` to
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests to ensure consistency in context ID validation
updated the version of the NewIsbnRandomizer from " 9781797745008 " to " 978179784500
added a check for the " settings _ notification _ ringtone " property before setting the sound in AlarmReceiver . java to ensure the
added a method ` reportLoopCount ` to handle LoopCountReceiver instances to enable tracking of loop count reporting in the root node
updated cluster version handling in FinalizeUpgradeAction . java and modified cluster entity merging in ClusterImpl . java to ensure proper initialization of the version for
[ iotdb - 5357 ] fix regionid not be set in the list ( # 5357 )
removed redundant calls to streamManager . open ( ) in ItemOrientedStep . java to streamline the code by eliminating unnecessary
added a new file ` CountedLoopProblem . java ` that implements a random number generator for counting loops to facilitate testing of
[ gr - 24934 ] fix compilation error in hotspotgraalruntime . executecompiledmethod
[ gr - 18484 ] fix java thread : : _ pending _ failed _ speculation _ offset bug in graalhotspotvm
rename ` KafkaStreamsTracing ` class to ` ValueTransformerWithKeySupplier ` and update its usage in ` ITKafkaStreamsTracing ` to
added a new method ` toStringArray ` to ` FeedbackConstantSumQuestionDetails ` and modified the ` FeedbackSessionsLogicTest ` to
removed DynamicColors . applyToActivitiesIfAvailable ( this ) method call from BaseApplication . java to streamline the code by eliminating unnecessary
added thread management and stack trace dump functionality in CloseRace . java to improve thread management and error handling during shutdown
updated the return statement in IntPointField . java to use intValue ( ) instead of directly returning the value to ensure correct handling of integer values
updated the arcSize variable and adjusted the calculation in MyButton . java to use a fraction of width instead of a fixed value to improve accuracy
updated the value of veryHighWidth from 768 to 640 in AddAndScaleMultiImage . java and adjusted ratioWidth in ImageBorder
rename ` minifySqlEnabled ` to ` shrinkWhitespacesInSql ` across multiple files to improve clarity and consistency in naming conventions
removed the ` waitForStateTransitionToEnd ` method from ` AbstractLauncherUiTest ` and ` WorkProfileTest ` classes to streamline the
added imports for ` CasCoreConfiguration ` , ` CasCoreTicketsConfiguration ` , ` CasCoreTicketIdGeneratorsConfiguration ` , and `
refactor the reading of single byte arrays in Volume . java to use DataIO for reading data to improve performance and readability by reducing
camel - 14836 : camel - http - httpproducer do n ' t log the response code if debug log be not enabled
refactor the creation of the proxy class path in DeclarativeHintsParser . java to use a new builder for module boot paths to improve
added a new ` MediaScriptScopeProvider ` class to manage audio , voice manager , and elements in the ` DefaultScriptScopeProvider ` class
added methods to retrieve and set the layer manager in AnimComposer and AnimEvent classes to enhance layer management functionality and improve animation event handling
added a null check for mQueue in DeferredHandler . java and removed the showDefaultScreen method in Workspace . java to prevent potential NullPointerExceptions
added null checks for mapOp and mapWork in MapRecordProcessor and modified exception handling in TezProcessor to improve robustness by preventing
refactor center and center2D variables in CylinderRegion . java to improve clarity and consistency to enhance code readability and maintain
refactor TestBadUseCases to use JUnit ' s ExpectedException rule instead of static imports to improve test clarity and maintainability by
added null check for subparams before sending one queries in QueryExecutorImpl . java and implemented a multi - execute test in StatementTest . java
bugfix # 11818 , do n ' t call customizeenvironment ( ) in securitymodel
updated the Rctag parameter in the GET endpoint from " android% 20app% 20edit " to " android% 20edit " to
refactor Test . java for improved readability to enhance maintainability and facilitate future development
updated PBEKeySpec initialization to use keyLength instead of blkSize to ensure correct key size for encryption
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a call to writeSectionDefinition ( ) in RtfDocumentHeader . java to ensure proper handling of section definitions in the document processing
added handling for large jump and discarding point in GpsLoggingService . java and modified accuracy check in Maths . java to improve accuracy
removed debug log statements in TableCellLayout and TableLayout2 classes to clean up the code and improve readability
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
replaced ` boolean ` with ` Reference < Object > ` for rootNameFn and sourceFilterFn in ` InsightFilter ` to improve
replaced direct insertion of ` data ` with ` added ` in ` AllAppsList . java ` to simplify the code and improve readability
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` and modified the ` SettingsActivity ` class to extend ` PreferenceActivity `
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of
corrected the spelling of ' assertRootArcs ( ) ' in FST . java to ensure correct assertion behavior for root arcs
added a assertion to verify the security policy existence and file existence in JstatdTest . java to ensure that the security policy is valid and
added a method ` getConfiguration ( ) ` to the ` Olingo2Component ` class to provide access to the configuration of the component
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to improve responsiveness by allowing more time for
updated log message formatting in MongoPersistentEntityIndexResolver . java to improve code readability and maintain consistency
added functionality to send images by HTTP using the XMPP API to enhance user experience by allowing users to send images by HTTP using the XMPP API
camel - 1649 : camel - netty should not throw an exception if the producer have already be create
updated URL template pattern in BalancedClickhouseDataSource . java and added unit tests in BalancedClickhouseDataSourceTest . java to ensure correct
removed the system property setting for the " org . apache . jasper . compiler . disablejsr199 " system property to simplify the
added support for handling null values in CSVRecordReader and related classes to enhance flexibility in handling null values in CSV format
added LiquibaseService annotations to multiple connection classes to ensure compatibility with the latest liquibase requirements
changed the type of ` aggregatedScope ` from ` J . CompilationUnit ` to ` JavaSourceFile ` in the ` addImportedStaticFieldNames `
added a topic field and updated topic retrieval logic in ItemCommandTriggerHandler and ItemStateTriggerHandler to improve topic management and ensure consistency in topic
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to improve error
removed deprecated case " zkCredientialsProvider " and updated its usage in SolrXmlConfig . java and TestSolrXml . java to
refactor ItemManaTablet to use ItemStack instances instead of hardcoded values and improve damage handling to enhance code clarity and
set the identifier collection of the mCurrentCallEvent in P25P2DecoderState . java to ensure that the currentCallEvent is properly initialized
removed unused imports for DictionaryCompoundWordTokenFilter and HyphenationCompoundWordTokenFilter to streamline code by eliminating unnecessary dependencies
updated the command line parameter name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " to improve cl
refactor GeneratedCode class to improve code structure to enhance maintainability and readability of the code
corrected a typo in the assertion message in TypeDefinitionRegistry . java to ensure proper error handling for null definitions
added visibility to the shareWithMeIcon view in LocalFileListAdapter . java to ensure that the shareWithMeIcon view is displayed in the
updated URLs in DefaultLogoutPageGeneratingFilter , DefaultLogoutPageGeneratingWebFilter , and LogoutPageGeneratingTests to use HTTPS instead of HTTP to
updated import statements and method signatures in RouterFilter , RouterServerListFilter , and RouterDistributorTest to use @ NotNull and Collections . emptyMap
updated assertion messages in TestIndexWriterMergePolicy . java to include context for segment count and index to improve clarity in assertion output for better
mark multiple classes as deprecated to indicate that these classes are outdated and should no longer be used in future development
added a null check for the context in CrawlerSessionManagerValve and created a test for multiple contexts in TestCrawlerSessionManagerValve to
added security check to getJspApplicationContext method in JspFactoryImpl . java to ensure proper initialization of the JspApplicationContext based on security settings
refactor length calculation logic in RocketComponentConfig . java for improved clarity and functionality to enhance code readability and maintainability by
updated ` NonceService ` and ` OpenIDAuthenticationProviderModule ` to use ` Scopes . SINGLETON ` instead of ` @ Singleton ` to
updated the ` updateChildLinks ` method in ` FileWrapper . java ` to include random and hasher parameters to ensure proper handling of child links
removed the ` HttpMethod ` parameter from the ` doExecute ` method and updated the ` buildRealURL ` method to simplify the method signature and
increased the publishWithDelay method from 100 to 500 in RetrievalBlockingMessageStoreTests . java to improve test reliability by allowing
added a new boolean field ` mShiftCodesAlwaysOverride ` and modified the logic for handling shift - code behavior to ensure that shift - code
[ hotfix ] [ test ] fix deadlock in curatorleaderelectionmanager
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated filter condition in AbstractKerberosDescriptorContainer to use isReference ( ) instead of startsWith ( " / " ) to ensure that the identity
added a boolean parameter ` isNoCache ( ) ` to the ` newInstance ` method across multiple factory classes to allow for more flexible caching
increased the sleep duration for IOException and InterruptedException in TestListenTCPRecord . java to improve responsiveness by allowing for more time to
removed redundant assignment of original arguments in PatchExtensionMethod . java to streamline code for better readability and maintainability
refactor RawNativeLibraries to use Set instead of Map for loading libraries and improve error handling to enhance code clarity and maintainability by redu
added support for sequence and send failures in the DefaultRouterParser and AbstractChannelNameResolvingMessageRouter to enhance message processing capabilities by allowing sequence
added support for handling the " x509PublishUrl " and " x509ViewName " in the ClientKeyPublisherMapping and JwkViewResolver
updated the initialization of readers in QueryComponent to use the first one instead of the first one to improve clarity and maintainability of the code
refactor ValueSourceParser to use Double2Parser for parsing " max " and " min " values to improve code readability and maintainability
removed conditional check for focusable and grabs pointer events in the Container class to simplify the code by eliminating unnecessary logic
removed unnecessary imports and modified the ` next ( ) ` method in ` TokenSources . java ` to streamline code by eliminating unnecessary
cloudstack - 4392 : fix the ` ` uuid ' ' parameter in the ` ` insert ' ' statement
updated CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to use a conditional annotation for flowBuilderServices to enhance flexibility
updated the maximum number of prepared transactions and added SQL execution methods in WriteJdbcPTest . java to improve connection management and enhance database connection management
removed null or empty check for the " editor . laf " property in DefaultPlatform . java to simplify the code by eliminating unnecessary
replaced instances of ` getStateEntity ( ) ` with ` desiredStateEntity ( ) ` in ` ServiceComponentHostImpl . java ` to
refactor margin calculation logic in FloatingTaskView . java for better readability to improve code clarity and maintainability by simplifying margin
added a condition to handle the running state in RootFolder . java and updated the status line in NavigationShareTab . java to improve user experience
simplified the initialization of the threadId variable in CPUCallGraphBuilder . java to improve code readability and maintainability
added a defToolbar parameter to the defaultPerspectives array and updated return statements in GuiManagerD . java to ensure the default toolbar
added NetworkAddressChangeListener interface and updated logging messages in HomekitImpl . java to enhance network address management and improve logging clarity
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use a dedicated leaseRenewalTime variable to improve
updated the type of ` prefixHeader ` and ` linkStyle ` from ` Optional . absent ( ) ` to ` Optional . absent ( )
added null check for exception message in ExceptionHandlerRegistryFactory and created a corresponding test in ExceptionHandlerRegistryTest to improve robustness by preventing
changed the ` nextID ` variable from ` int ` to ` volatile int ` and updated its usage in ` DirectoryTaxonomyWriter . java `
http : / / issues . apache . org / jira / browse / amq - 4342 - fix test failure
added ` HasSourcePath ` interface and modified ` AbstractThinArchiveArg ` , ` FileListableLinkerInputArg ` , and
simplified the StringBuffer creation and exception handling in Arrays . java to improve code readability and maintainability
added a custom index field name to the facet fields in OrdinalMappingAtomicReader and updated test cases in TestOrdinalMappingAtomicReader to
updated the calculation of millis based on seconds and nanos in Instant . java and added a sampleEpochMillis method in TestInstant . java to improve
updated attribute retrieval from ` getBufferType ( ) ` to ` getName ( ) ` in ` OGLESShaderRenderer . java ` and
added a boolean variable ` scriptsBlocked ` to control the visibility of the ` app ` ' s block update scripts to enhance user experience by allowing
added a new file TestCMoveLimitType . java that tests CMoveLimitType functionality to validate character buffer handling to ensure correct handling of
reset temporal attributes in ChannelState and add a contains method in RecordConfiguration and update audio packet handling in AudioPacketWaveRecorder to improve performance and
( chore ) camel - sql - stored - template : improve code readability and maintainability
updated the vendor name from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor Console initialization to use a new method ` makeCustomConsole ` for better clarity to improve code readability and maintainability by central
refactor token validation logic in InputStreamBinder and NextcloudRequest classes to use EncryptionUtils for improved security to enhance security and maintainability by
added handling for EOFException in Http11InputBuffer . java to improve error handling for negative input streams
add unit tests for group deletion and deletion methods in DefaultGroupProviderTest . java to ensure correct behavior of group member deletion and non - existent
removed unnecessary new Object [ ] instances from multiple Java files to simplify code and improve readability by eliminating unnecessary object creation
deleted the V2ReplicationProtocol . java file to the codebase was no longer needed for the replication protocol
replaced instances of ` ImmutableSortedSet < BuildRule > ` with ` ImmutableSortedSet < SourcePath > ` across multiple files to improve
added two new classes ` ConstructorArgsDemo ` and ` StrictDemo ` , and modified ` StupidFinal ` and ` FinalDemo `
[ geot - 6595 ] make directtemplatefeaturecollectionfactory threadlocal to avoid memory leak
updated the assertion condition in WriteResponseHandler to include a maximum response count to ensure that the response count is within a valid range for better accuracy
added a null check for item . getIndexNumber ( ) before checking if it ' s not null to ensure robustness by preventing potential NullPointerException
rename ` areAnchestorsShown ` to ` areAncestorsShown ` across multiple classes to improve clarity and consistency in naming conventions
added a condition to return early if the app ' s width exceeds 12 to avoid unnecessary processing when the app ' s width exceeds 12
updated comparison logic in ChangeLogParameters . java and added a test for parameter values in ChangeLogParametersTest . java to ensure proper handling of
changed the access modifier of loggers from static to final in LogFactory . java to ensure loggers are immutable and enforce immutability
updated the return statement in the Plot class to use the base plot instance to ensure the correct implementation of the Plot class
updated the ` createUploadDir ` method to include a ` initialCreation ` parameter in multiple classes to enable the upload directory creation based on the
added a sendStatus200 field to multiple ServerGenerator , HttpTransportOverFCGI , and ServerFCGIConnectionFactory classes to enable better control over
added a condition to check if the comment length is greater than zero to ensure proper handling of multi - line comments in multi - line comments
added file type management functionality in BuckModule . java to ensure associations are removed based on the default file type to improve file type management and
replaced instances of ` ToLong ` and ` ComposedToInt ` with a wildcard import in ` ComposedUtil . java ` to simplify
added error handling for unsupported CPU options in RTMGenericCommandLineOptionTest to improve robustness by providing clearer error messages for unsupported CPU configurations
removed unnecessary whitespace in AccountsActivityTest . java for consistency to improve code readability and maintainability
refactor Player class to improve code structure to enhance maintainability and readability of the code
added a static import for ChannelTypeUID in AbstractModbusOSGiTest . java to facilitate the mockito package import
updated condition in PolyglotExceptionImpl . java to use index instead of nextElementIndex to improve code readability and maintainability
reset the system context in ShadowFontsContract and set the system context in AndroidTestEnvironment and ShadowFontsContract to ensure proper context management
added a ` toMillis ` method to ` TimeGranularity ` and modified date handling in ` PinotDataSourceMaxTime ` and ` Pinot
added null checks for _ try . getFinally ( ) in ControlFlow . java and Guard . java to enhance robustness by preventing
improve error message when arrays do not have the same size
updated return statements in WindowClickLogic . java to return the default click type to ensure correct handling of default click types and improve code clarity
updated the calculation of the index value in MeshBuilder . java to ensure correct indexing behavior for mesh indices
nifi - 1746 : remove unused controllerserviceserviceprovider from standardprocesscontext
added imports for ResolvedJavacPluginProperties and implemented ap class paths in KotlincToJarStepFactory . java to enhance plugin
updated RESCROLL _ DELAY value from 750 to PAGE _ SNAP _ ANIMATION _ DURATION 150 in DragController . java
added permission checks for shortcut host permissions in the Launcher and LauncherModel classes to enhance user experience by ensuring proper management of shortcuts based on
added a case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to support search backpressure functionality in the application
added null check for core name in CoreAdminHandler . java and implemented error handling in CoreAdminHandlerTest . java to ensure that null core
added marker selection functionality to NearbyMapFragment to ensure the bottom sheet is deselected when the marker is selected
added catch block to handle Throwable in FileSyncAdapter . java to improve error handling for better debugging and debugging
replaced direct usage of ` DockerTestUtils . dockerRunJava ` with ` OutputAnalyzer ` in ` TestMemoryAwareness . java `
updated the UnitOfWork run method to filter feeds based on the application settings to ensure that only relevant feeds are processed when heavy load is enabled
( chore ) camel - drm : allow defaultdrmsessionmanager to be accessed before setplayer ( )
updated ` PackageType . valueOf ( ) ` and ` ResourceCompression . valueOf ( ) ` methods to use ` Locale . US ` instead of
change the content type of XML _ MIME from " text / xml " to " application / xml " across multiple test files to ensure the application
replaced instances of ` INSTANCE . confFile ` with ` INSTANCE . confFile ` for clarity to improve code readability and maintainability
updated the waitUntilReadyAndTimeout method call from " sleep 5 " to " exit 1 " to ensure proper termination of the host port wait
changed the type of ` getGroupingIdValue ` from ` int ` to ` long ` in ` HiveExpandDistinctAggregatesRule . java `
added checks for headless operations in the Toolkit class to ensure proper exception handling for headless graphics operations
added a condition to check if the currentRecipe matches the furnace to ensure that the furnace can be smelt based on
added a ` moveThreadCountDescription ` parameter to the ` DefaultSolver ` class and updated logger messages to include it to enhance functionality by allowing
updated path splitting method in SearchBuilder and added a test for search with RevInclude in FhirResourceDaoR4SearchNoFt
added a new test class ` Issue582Test ` to validate the functionality of the ` Fun . Pair < String , Integer > `
added assertions for Decimal overflow and division by zero in AbstractTestNativeGeneralQueries . java to ensure correct handling of decimal overflow and division by zero
refactor LoadingCache class for improved performance to enhance performance and maintainability of the loading process
added a new rule " avoidNonConstructorMethodsWithClassName " to the rules list to avoid non - constructor methods with class name in the naming
added exception handling for StaleElementReferenceException in ExpectedConditions . java to improve robustness by catching StaleElementReferenceException during element
refactor database snapshot handling in ViewExistsPrecondition and add hasView method in DatabaseSnapshotGenerator and JdbcDatabaseSnapshotGenerator to improve error handling
refactor DOMUtil class for improved performance to enhance performance and maintainability of the code
added translation calculations and logging functionality in TaskViewUtils and Utilities classes to improve UI responsiveness and debugging capabilities
changed the default value of FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and
added a method ` walk ` to ` TempFSTTermsReader ` and modified arc handling logic in ` TempTermOutputs ` to improve arc
added SolrQueryRequest import for SolrQueryRequest in multiple factory classes to support additional request handling in the DocTransformer
added new test cases for post _ content _ insert _ check and post _ content _ update _ check in SingleTableMySQLTriggerTest . java
refactor comparator handling in FieldValueHitQueue and TopFieldCollector classes to improve clarity and consistency to enhance code readability and maintainability
updated SQL query strings in PhoenixQueryBuilderTest . java for consistency and clarity to improve readability and maintainability of the test
added Spark initialization to the init method in RequesterTest . java to ensure that Spark initialization is awaited before proceeding
added methods to save total storage pools and fee , limits , and used in DynamicPropertiesStore . java to enhance storage management capabilities and improve error
added NinjaProperties parameter to AssetsController and updated URL retrieval logic in AssetsControllerTest to enhance flexibility in handling different file types during development
updated the key check in MapMarksManager to use getMapMarkKey instead of getPosition to ensure correct key retrieval for map mark keys
added TokenRewriteStream parameter to ` generateConstraintInfos ` and ` getDefaultValue ` methods in ` BaseSemanticAnalyzer ` and ` DDLSem
removed unnecessary ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` FatalError `
replaced ` fileName ` with ` fullPath ` in ` JxBrowserManager . java ` and added error handling in ` FileUtils . java `
added a check for the presence of the " AppVersion " property in IOSImplementation . java to ensure proper handling of the " AppVersion
updated the method call from ` getBridgeUID ( ) . getId ( ) ` to ` getUID ( ) ` in ` Somf
disable flaky test on github ci
refactor OpenWireConnectionTimeoutTest to use static constants for keystore and trust store settings to improve code readability and maintainability by encapsulating
refactor DynatraceExporterV2 to use stackTrace and nanGaugeWarnThenDebugLogger instead of warnThenDebugLogger to improve cl
added a call to remove the session ID from the sessionInfo list to ensure the session ID is removed from the session information
added host name handling in HeartBeatHandler and updated alert state logging in AlertReceivedListener to improve alert management by setting the host name
[ java ] do n ' t flush the buffer if it ' s empty .
updated resource path from " org / kie / kmodule . xsd " to " org / kie / api / kmodule . xsd
added a new test method ` seekTo ` in ` ShadowMediaPlayerTest ` and modified ` seekTo ` in ` ShadowMediaPlayer `
rename ` createTask ` to ` createThrowingTask ` across multiple executor classes to improve clarity and consistency in naming conventions
added a conditional check for AQUA _ LAF before setting the border for the tab close button to ensure that the tab close button is
updated HTTP request and read timeout settings in TSPTimeStampService . java and refactored class loading in TestSignatureInfo . java to improve
added support for wildcard type permissions in the XStreamUtils class to enhance security management for Java classes
added error handling for diamond types in Attr . java and created a new DiamondRaw class in Neg12 . java to
updated method signatures in RelOptUtil and RelOptUtilTest classes to improve clarity and consistency in method naming
updated argument checks for setting ID and value in Http2Settings . java to ensure that the setting value is only valid for unsigned 16 - bit
deleted the MapInterfaceTest . java file to the test class is no longer needed in the project
added error handling for session operations in SessionsPoolTest . java to improve robustness by ensuring session operations are only executed on a disposed
added start and end methods for JSON serialization in GeoJsonWMSBuilder . java to ensure proper handling of JSON serialization during JSON processing
replaced the method ` setIndex ( int mode ) ` with ` intValue ( selectedIndex ) ` in ` PopupMenuButton . java ` to
added a check to check if the app is temporarily unstash before proceeding to improve stability by preventing unnecessary stashing when the app
camel - 1748 : camel - core - fix the camel - core - route coverage test failure
refactor getEventMismatchMessage method to accept a boolean parameter for waiting expected events to improve flexibility in event mismatch handling by allowing more flexible
added a new file ` HeaderFixer . java ` that implements the ` HeaderFileProcessor ` class for header processing to facilitate
added a new constant for the " first _ load _ complete " action and modified the app widget binding logic in Launcher and LauncherProvider
deleted the SuperJumperAndroid . java file to the functionality was no longer needed in the project
updated the return value of ` SystemTableScan . java ` to return ` table . isDistributed ( ) ` instead of ` true `
removed deprecated interfaces KeyValuesProviderAware and ObservationConventionAware for improved clarity to enhance code maintainability and readability by elimin
[ hotfix ] [ runtime ] remove unused resource location in processidrematches
replaced ` base ( int ) i * scale ` with ` base ( long ) i * scale ` in multiple array classes to ensure correct
added caching logic for the last date and format records in HSSFCellStyle . java to ensure accurate retrieval of data format strings based on
updated the filter query in RemoteAuthenticationEndpointTests to include a username parameter to ensure proper filtering of user attributes based on the provided username
replaced ` def . needsInput ( ) ` with ` def . finished ( ) ` in ` DeflateCompressor . java `
updated logging statements in Launcher . java to include container and workspace information to enhance logging capabilities for better user experience
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
deleted the DeadlockTest . java file to remove unused test class to streamline the codebase
added null checks for newInput and improved marker handling in BugContentProvider , BugGroup , and DeltaInfo classes to enhance robustness and
added a menu item for the " Reopen in Browser " button in JavaScriptEditor . java to enhance user experience by allowing users to open the
added a new error message ` OUTPUT _ SPECIFIED _ MULTIPLE _ TIMES ` and modified error handling in ` SemanticAnalyzer . java `
added a null check for the predicate in the addEntryListener method in BasicTest . java to ensure correct behavior of the addEntryListener method
fix coordinatearray . copydeep ( ) and coordinatearray . reverse ( ) to avoid arrayindexoutofboundsexception
updated the method call from ` setOpen ( ! isOpen ( ) ` to ` setOpen ( ! isOpen ( ) ) ` in ` Tool
added a new boolean variable ` first ` in ` TestPayloads . java ` to reset the first variable to false to ensure that the first
removed conditional logic for entering the overview mode in the Launcher class to simplify the code and improve readability by eliminating unnecessary logic
set the destination of the message dispatch in NetworkRouteTest . java to ensure the correct destination is used for message processing
change return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure proper handling of integer
updated variable assignments in NestedArithmeticTest . java and AMD64FloatConvertNode . java to improve code clarity and maintain consistency in
replaced instances of ` pending . addComponent ` with ` true ` in ` HttpClientRequestImpl . java ` and updated buffer handling in ` Http
updated artifact replacement for " analysis - " and " analyzers - " in GetMavenDependenciesTask . java to ensure compatibility with the
pdfbox - 4892 : remove unnecessary cast to cosbase , a suggest by valerybokov
updated substring handling in ReferenceUtil . java to improve clarity and consistency to enhance readability and maintainability of the code
added an ` VisibleFieldPredicateEnvironment ` interface and updated its usage in ` FieldVisibilitySchemaTransformation ` and ` FieldVisibilitySchemaTransformation ` to
added ` solidityJsonRpcHttpPort ` and ` solidityNodeHttpJsonRpcEnable ` parameters to various classes to enable and disable JSON
added a check for the folder type before removing the drop target to prevent potential ClassCastException when removing the drop target
refactor stub jar creation logic in StubJarTest . java to improve clarity and maintainability to enhance code readability and maintainability by
added new features for Setup wizard and Workflow helper in StartPageTopComponent . java to enhance user experience by allowing users to configure and calibrate
[ hotfix ] [ cassandra ] fix the deadlock in casservice . optionaltasks
simplified the condition for retrieving the available boolean in OnlineTestCase . java to improve code readability and maintainability
changed the return attribute from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to accurately reflect the current user ' s
refactor onIdleTimeout handling in HttpChannelState . java and add failure listener in ServerTest . java to improve code clarity and ensure
updated the CreateEndPoint class to extend Invocable . NonBlocking instead of Runnable to improve resource management by allowing non - blocking operations
updated TABLE _ HEADER _ SEPARATOR pattern and added new test cases in TablesTest . java to improve header formatting and ensure correct rendering behavior
updated the return value from 32.0 f to 31.5 f in the Camera class to reflect the new camera ' s functionality
added a Preference for the " startonbootup " preference in GpsSettingsActivity . java and updated HTTP location handling in Utilities . java
updated the client secret size from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to accommodate a larger range of secret
updated assertions in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include a default value for enablePassingNulls to enhance test reliability by
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to race condition stability
refactor ` getInputPinotFS ` and ` getOutputPinotFS ` methods to return ` PinotFS ` instead of ` Pinot
added locale check in TimeLineCursorAdapter and TimelineArrayAdapter to set the date formatter based on the language to ensure accurate date formatting based
added MetalLookAndFeel import and set it in UIManager to enable the metal look - and - feel for better UI
added synchronization to the ping task management in Bot . java to ensure thread safety during message sending and prevent potential memory leaks
updated the error message parameter from ` getMessage ( ) ` to ` throwable . getMessage ( ) ` in ` GlobalErrorHandler . java ` to ensure
refactor method names from ` module ` to ` from ` across multiple classes to improve clarity and consistency in naming conventions
added CmdLineException import and improved exception handling in PinotAdministrator . java to enhance error logging for better debugging and debugging
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` in ` Subject ` and added ` hashCode ( )
refactor methods and variables in CustomPlaybackOverlayFragment and ImageButton to improve code readability and maintainability to enhance maintainability and clarity
updated zoom level values from 10 to 24 in BasicMapViewer . java to ensure correct zoom behavior for the map view
refactor user and group handling in DrillRoot . java to improve clarity and maintainability to enhance code readability and maintainability by
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` in ` UnixFileSystemProvider ` and ` Windows
added ArgumentExtractor support to DelegatedClientAuthenticationAction and updated service resolution in DelegatedAuthenticationWebflowConfiguration to enhance argument extraction functionality and improve
changed the visibility of the defaultGroup variable from private to final to ensure immutability of the defaultGroup variable
replaced ` tileCache . destroy ( ) ` with ` createTileCaches ( ) ` in ` TileSizeChanger . java ` to
removed redundant calls to ` removeAllViews ( ) ` in ` CustomPlaybackOverlayFragment . java ` and ` InfoLayoutHelper . java ` to
refactor cleanEntriesForFeedsWithoutSubscriptions method to improve clarity and consistency to enhance code readability and maintainability
removed redundant calls to CoreAuthenticationTestUtils . getAuthentication ( ) in ImmutableAssertionTests . java to streamline the code by eliminating unnecessary
nifi - 1746 : use junit ' s temporaryfolder instead of java . io . tmpdir
replaced variable names from ' l ' to ' e1 ' and ' e2 ' in AlgoConicFivePoints . java
refactor conditional statements in RandomAccessReader . java for improved readability to enhance code clarity and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations to Fields and MockitoBeforeTestNGMethod classes to suppress
refactor CImage and CPlatformWindow classes to improve image creation methods to enhance code readability and maintainability by reducing redundancy in
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder . java ` to ensure compatibility with
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` in ` ClassParser . java ` and ` JavaClass
replaced ` Objects . equals ( ) ` with ` Objects . equals ( ) ` in multiple Java files to use ` java . util .
updated the ` resolveClassFromCanonicalName ` method to ` resolveClassFromBinaryName ` and added nullability annotations to enhance type safety and
added verification to verify the existence of view properties in NinjaDefaultTest . java to ensure proper handling of specific UI components in the Ninja
updated methods in DeviceProfile and InvariantDeviceProfile to use ` updateAllAppsContainerWidth ` instead of ` updateAllAppsWidth ` to
updated padding bottom calculation in DetailFragment and ListFragment classes to correct padding height and adjusted listViewPositionOffset calculation to improve layout consistency and ensure
updated exception handling in ZkStateReader . java for consistency and clarity to improve code readability and maintainability by standardizing exception handling
added null checks for field values in HttpFields . java and created a test for empty headers in RequestTest . java to ensure proper handling of
add a check for the presence of static nat rules in the network id in IpAddressManagerImpl . java to ensure that the static nat service
added calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure that the
added a call to removeExtraEmptyScreen ( true ) in the workspace to ensure that the extra empty screen is removed from the workspace
added a ` fixedWidth ` flag to the ` BitmapFont ` class and modified glyph positioning logic in ` BitmapFont . java ` to
refactor ` createFragment ` and ` createArgs ` methods in ` ChangeLogFragment ` and ` ChangeLogFragment ` classes to improve code
added preEvent and postTransition methods to AbstractStateMachineFactory to enhance state management capabilities in the state machine interceptor
refactor ConfigDescriptionProvider class for improved clarity to enhance maintainability and readability of the code
updated role creation in TestAuthorizationApiAuthorizer and added Windows path handling in StorageBasedMetastoreTestBase to improve role management and ensure proper
updated the sorting logic in FacetComponent . java and added a new query in TestDistributedSearch . java to improve performance by avoiding loop
update checkstyle cache file path to use build directory instead of target
added functionality to stop the Jetty Solr runner in DeleteInactiveReplicaTest . java to improve test reliability by ensuring that the Jetty is
added a fileName parameter to the ` newInstance ` method and updated its usage in ` FileActionsDialogFragment ` and ` OCFileListFragment `
added INVALID _ DIRECTION constant and adjusted reorder direction assignment logic in CellLayout . java to improve code clarity and maintainability by reducing
updated ` InnerTransferRequest ` and ` AccountAPI ` to use ` v2 ` instead of ` payAccountId ` and ` recAccountId `
added a method ` getExecutionIdForJobId ` to ` JobExecutionService ` and refactored job assertions in ` JetTestSupport ` to
added a new annotation ` EnableAdminClient ` for the ` org . noear . solon . admin . client . config ` package to
replaced specific imports with wildcard imports in FindTypes . java to improve code readability and maintainability by using a wildcard import
added action text color setting in AuthenticatorActivity to enhance user experience by providing a dark color for better user experience
added the ` find ` method to ` Manager ` , ` StreamSupplierComponent ` , and ` MockManagerImpl ` classes , and updated imports
rename ` addTestStepsForPickleSteps ` to ` createTestStepsForBeforeHooks ` and ` createTestStepsForAfterHooks `
updated method names from ` noArgMethodIsNotValid ` to ` validNoArgMethod ` in ` HandlerMethodUtils ` and ` MethodInvok
added a new method ` cancelClient ` to ` RpcServer ` and updated the ` startDriver ` method in ` SparkClientImpl ` to
added ` getImplicitPreCoercionValue ( ) ` method implementations in ` SkylarkParamInfo ` and ` ReflectionParamInfo
initialize ` lastDisplayedUser ` to an empty ` Optional < User > ` to ensure that the ` lastDisplayedUser ` is not
added a method ` findAll ` to ` QueryDslMongoRepository ` and a corresponding test in ` AbstractPersonRepositoryIntegrationTests ` to enhance
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerExceptions during stop operations
added a break statement in DefaultPlannerBenchmark . java to exit the warm - up loop in case of a failure to improve stability by
added xread and xreadGroup methods to MultiKeyPipelineBase , MultiKeyBinaryRedisPipeline , and MultiKeyCommandsPipeline classes to enhance
removed redundant calls to ` this . incrReadByteCount ( ) ` in ` LinkedBufferInput ` and ` StreamInput ` classes to simplify
added WebSecurity configuration annotations and modified the configureHttpSecurity method in CasWebAppSecurityConfiguration and CasWebSecurityConfigurerAdapter to enhance security
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and created ` TestJdbcWithDBTokenStoreNoDoAs
added a ` registerProviderInternal ` method to ` ShadowContentResolver ` and updated ` ContentProviderController ` to register content providers to enhance functionality
changed the type of the ` Version ` variable from ` Version ` to ` ClassFile . Version ` to improve clarity and consistency in the class
added keep - alive configuration to SingleConnectionManager to enhance connection management by allowing more control over connection stability
[ java ] rename unicastflowcontrol to multicastsenderflowcontrolsupplier for clarity .
added null check for ` getCurrentPoint ( ) ` in ` DrawLocus . java ` and modified null check in ` GBasicStrokeD
added exception handling for IOException in multiple classes to improve error handling and ensure proper resource management during WebSocket operations
simonstewart : add support for selenium . take . screenshot and selenium . take . screenshot configuration .
replaced ` assertEquals ` with ` assertThat ` in multiple test files to use ` assertj . core . api . Assertions `
removed the ` getContextReference ( ) ` method from the ` TruffleLanguage ` class to streamline the code by eliminating unnecessary reference
updated Throwable handling in StubberImpl and added StubbingWithBadThrowablesTest and UninstantiableThrowableTest classes to improve error handling
updated condition checks in Actor . java and Group . java to throw an IllegalArgumentException instead of throwing an IllegalArgumentException to improve error handling and provide clearer
added location permission handling in LocationPickerActivity and modified the getCenter method to use LocationPermissionsHelper to enhance user experience by allowing access and access to
http : / / issues . apache . org / jira / browse / amq - 4892 - add a new class CounterM
added import for CookieSpecs and set it to STANDARD in GetHTTP . java to ensure proper cookie configuration for HTTP requests
simplified the return statement in Intersector . java by removing unnecessary conditional checks to improve code readability and maintainability by reducing
replaced ` DeemphasisFilter ` with ` NonClippingGain ` in ` P25AudioModule . java ` and updated
added a monitoringUrl parameter to the ScrollingPanel constructor and updated related classes to include it to enhance user experience by allowing users to specify the
added a new configuration option ` SERVICE _ CREATE _ TIMEOUT ` to the ` KubernetesConfigOptions ` class to provide a configuration option for service creation
added case handling for " landmark " , " city " , and " empty _ photo " in NearbyListFragment . java to
added a null check for the type ' s getPackage ( ) before adding them to the allClassesByPackage list to avoid potential NullPointerExceptions when
added a new file PrintInlining . java that implements a main method to demonstrate the usage of PrintInlining functionality
refactor Javadoc handling to handle nested braces in Javadoc tags to improve readability and maintainability of the code
[ java ] remove unused variables from ArchiveTest . java to simplify test code and improve readability
updated EdgeDataTableModel to use ` getEdgesAndMetaEdges ( ) ` instead of ` getEdges ( ) . toArray ( ) ` to
removed unused imports from SpringResourceProperties . java and PasswordManagementConfiguration . java to clean up the code and improve readability
updated Timber logging messages in VideoManager . java to improve clarity of error messages and enhance logging clarity
added import for RoomRemovedEvent and invoked it in MUCRoomController . java to track room removal events during clustering
updated the minimum precision from ' replicas ' to ' cores ' in the AutoScalingHandlerTest . java file to ensure the test accurately reflects
added setFlipY ( true ) and setGenerateMips ( true ) to the texture key in TextureHelper . java to enhance texture management
refactor PythonDslProjectBuildFileParser to use CloseRecordingProjectBuildFileParserDecorator instead of PythonDslProjectBuildFileParser to
refactor J2clTranspiler to use a new ` LibraryNormalizationPass ` class and add a new class ` LibraryNormalizationPass `
updated ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactory ` to use ` responseBodyConverter ` instead of ` nextResponseBodyConverter
[ hotfix ] [ runtime ] fix checkstyle violation in memorymanager
added Temporal annotations to ConsoleSessionVO . java to support timestamps in session management
added new files Hbs . java and HbsTest . java to implement the TemplateEngine interface to facilitate the handling of template
refactor ChatMessageAdapter to use a separate method for setting visibility and visibility based on hint and message items to improve code readability and maintain
change the method from ` keySet ( ) ` to ` values ( ) ` in ` ImportCsv . java ` to improve clarity and consistency
simonstewart : add a new test method ` waitsUntilAlertDialogAppears ` to ` AlertTest ` and ` Confirm
added a null check for distinct column indices in ReduceSinkDeDuplication . java to prevent potential null pointer exceptions when the distinct column indices
refactor class path handling in MiscUtils . java to improve clarity and functionality to enhance code readability and maintainability by reducing
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated artifact ID from " websocket - server " to " jetty - websocket - client " in TestOSGiUtil . java to ensure
replaced ` Collectors . toUnmodifiableMap ( ) ` with ` Collections . unmodifiableMap ( identity . getAttributes ( ) . entrySet ( )
fix bug where sketch code do n ' t change the modified location
replaced instances of ` new Double ( bytes ) ` , ` new Float ( bytes ) ` , ` new Float ( value ) ` ,
updated the method call from ` getDate ` to ` getTimestamp ` in ` JdbcDataSource . java ` to ensure the correct timestamp representation is used for
updated class name handling in HtmlJndiTreeReport . java to include " javax . naming . Context " to ensure proper handling of context classes
updated database options handling in StorageUtils . java and modified logger in Manager . java to improve database configuration handling and enhance logging clarity
updated edge type comparison from " double " to " mutual " in ImporterGEXF . java to ensure consistency in edge type handling
removed the static final integer from the FLAG _ SLIPPERY constant in StatusBarTouchController . java to simplify the code by elim
updated array dimension retrieval logic in TruffleConstantFieldProvider . java to improve accuracy of array dimensions based on field type type
added functionality to retrieve and set the Google Drive folder path in the PreferenceHelper class to enhance user experience by allowing users to specify the Google
added a method ` shuffleSuggestions ` to the ` RadioButtonTreeItem ` class and updated related logic in ` DrawEquationWeb ` to
added @ Nullable annotation to method signatures in Truth . java to enhance code clarity by indicating that null values are not null
updated bitwise operations for newSize in ArrayUtil . java to ensure proper handling of new size values
added a new test class ` ApiExceptionTest ` and modified ` instrumentConstructor ` method in ` ClassInstrumentor ` to ensure that the constructor can
added a new ` waitingForAnticompaction ` map and updated its usage in ` StreamInManager ` and ` StreamInitiateVerbHandler
added a ` isKeyguardSecure ` property and its getter and setter methods in ` ShadowKeyguardManager ` to enable secure keyguard functionality
added serialVersionUID fields to StringDialog . java to ensure proper serialization of the StringDialog class
updated status parsing logic to replace ' > ' with a single ' ' character in GrblUtils . java to ensure proper handling of status
renamed the method ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrowables
modified the condition in ` checkDrained ( ) ` in ` AsyncFileImpl . java ` and added a test for the ` drain
updated LIGHTS _ NUM and LIGHT _ INTESITY values from 4 to 8 and changed the loop count from 4 to 8 to
replaced instances of ` FakeProjectFilesystem ` with ` getProjectFileSystem ( ) ` in multiple test files to simplify filesystem initialization and improve code cl
refactor path handling in RuntimeOptions and CucumberFeature classes to use PathWithLines instead of String to improve code clarity and consistency
refactor Gson , JsonArray , and JsonObject classes for improved code organization to enhance maintainability and readability of the codebase
remove @ NotNull annotation from TEST _ DIRS array in PubRoot . java to improve code clarity by removing unnecessary @ NotNull annotation
added closing of ParcelFileDescriptor in ShadowParcelFileDescriptor to ensure proper resource management and prevent potential memory leaks
added a method to reset the prefix index in the Stylesheet and refactored the prefix index management in BasisLibrary to improve thread safety
added logging functionality for HTTP connection in TestDistributedStatsComponentCardinality . java to improve debugging capabilities for improved debugging capabilities
added throwIfImmutable ( ) method calls to IntList . java to ensure proper exception handling during immutable operations
added @ NotNull annotation to method signatures in GrpcServerRunner , GrpcClientBuilder , and UnitTestIdleHelper , and UnitTestRead
rename org . jline . demo . graal to org . jline . demo . graal instead of org . jline . demo
added synchronization to the ` keysUnchanged ` method in ` InsightInstrument ` and ` InsightPerContext ` classes to ensure thread safety
added platform - specific handling for manifest file writing in GenerateManifestStep . java to ensure proper handling of line endings in the manifest file
updated priority calculation from LOW _ PRIORITY to HIGH _ PRIORITY in FindNullDeref . java and added a new class RFE35
added @ Nullable annotation to ` getConfigDescription ` methods in ` ConfigDescriptionRegistry ` and ` ThingResource ` classes to ensure that null values are
replaced ` Throwable ` with ` RuntimeException ` and updated the ` createCancellationException ` method to use ` RuntimeException ` instead of ` Throwable
pdfbox - 4892 : do n ' t load crop box if there be no image
refactor ManagerBase class to improve code structure to enhance maintainability and readability of the code
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to enable access to All Ap
refactor FragmentActivity initialization in FragmentTestUtil to use Robolectric ' s buildActivity method to improve code readability and maintainability
replaced ` getFileCoordinates ( ) ` method with ` processFileCoordinates ( ) ` in ` FileProcessor . java ` and ` ShareActivity
rename ABCase classes to TestABCase classes across multiple files to improve clarity and consistency in naming conventions
updated the parameter type from ` num ` to ` value ` in ` saveEnergyPriceHistoryDone ` and added a null check in `
replaced the initialization of the RocketChangedEventHandler with a call to doSimsChanged ( ) in OpenRocketViewer . java to
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` to change Maven dependency group IDs and artifact IDs to facilitate
added a check to skip indexable paths in IndexingJob . java and a warning in SegmentChecker . java to ensure that the input path
updated condition in GCObjectHeapIteratorAddressOrderedList _ V1 . java to use ` newAddress . lte ` instead of ` new
refactor PreprocessorDelegate to use a Supplier for replacement paths and pathToSourcePathMap for improved error handling to enhance code clarity and
rename ` JsonExamples ` to ` Examples ` and update package - info . java files to improve clarity and consistency in naming conventions
added debug logging statements to ViewExtractor . java to improve debugging capabilities for better debugging and debugging
refactor FindsByLinkText class to improve code structure to enhance maintainability and readability of the code
added a new file ` Main . java ` that implements a main method for the ` java oop entry point hit ` to facilit
added synchronization around cSeqHeader and retryTran initialization in OperationSetBasicInstantMessagingSipImpl . java and modified exception handling in SIPRegistrar
removed redundant continue statements in NativeScanner . java to streamline code for better readability and maintainability
rename RendererConfigurationTest . java from ` net . pms . test ` to ` net . pms . configuration ` to clarify
replaced ` ImmutableSet . Builder ( ) ` with ` Supplier < ImmutableList < BuildRule > > ` in ` AndroidLibraryDescription . java `
updated the method call from ` stream ( ) . count ( ) ` to ` size ( ) ` in ` DistBuildArtifactCacheImpl .
added content - encoding handling in ExtractingDocumentLoader to ensure proper handling of content - encoding in metadata
updated SQL insert statements and modified SQL query parameters in DatabaseConfig . java to improve clarity and correctness of SQL query construction
added a check to return early if the slot is - 1 in PlayerInventory . java and WindowListener . java to avoid unnecessary processing when the
added support for ignore - transitive - repositories in Maven execution requests to enable Maven to ignore remote repositories introduced by transitive dependencies
removed unnecessary @ Inject annotation from ContactsPreferenceActivity . java to streamline code by eliminating unnecessary dependencies
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android versions
added null check before closing the selection in NIOTransport . java to prevent potential NullPointerException when selection is not initialized
added a condition to check if the index matches the matcher start and end of the string in NativeRegExp . java to ensure proper handling of regex
updated the IntegrationTest annotation in MvcITest . java to set the server port to zero to ensure that the integration test correctly connects to the
added a new UDF class ` UDFReverse ` and modified ` FunctionRegistry ` to register a reverse function in ` FunctionRegistry ` to enhance functionality
replaced ` getContextPathEncoded ( ) ` with ` getRequestContextPath ( ) ` in multiple classes to improve clarity and consistency in context path retrieval
refactor Tracer class for improved clarity to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to RocksDBStateBackendReaderKeyedStateITCase . java to temporarily disable the test due to issues
simplified import statements in XMLChangeLogParserTest . java to improve code readability and maintainability
added synchronization around buffer clearing in StarTreeRecordStoreCircularBufferImpl . java and a corresponding test in TestStarTreeRecordStoreCircularBuffer
updated forecastMinutes and forecastDays from 0 to 60 and 48 in OpenWeatherMapOneCallHandler . java to adjust forecast minutes and days
added timeout values to multiple test annotations and modified fetch time handling in AbstractPageOperationTemplateTest . java to improve test reliability and ensure accurate
updated RemoteTargetGluer and FloatingHeaderView to improve handling of split task IDs and added animations for all apps to enhance user experience by
replaced ` splitAndMap ` with ` splitAndThenFlatMap ` and updated return types of ` parseRerunFile ` method to
added new items for variousQuartz and Fluff blocks in BotaniaCreativeTab . java to enhance the functionality of the creative tab for
updated assertions in TestRadioButtons from ` optItem ` and ` retrievedOptions ` to ` size ( ) ` and ` size ( ) `
added functionality to handle file sizes in RCFileCat and implemented getNumberRows method in RCFile to improve file size handling and provide functionality for retrieving
refactor LocalClusteringCoefficient , TriangleListing , and AdamicAdar classes to improve code organization and maintainability
added validation methods for NNDArray checks in JnaUtils . java to ensure proper handling of non - closed MXNet NDArrays during initialization
refactor BlobServer class to improve code readability to enhance maintainability and facilitate future updates
added a new test descriptor for static private calls in UnusedPrivateMethodRuleTest . java and modified the handling of unused private constructors in Un
refactor lexicalScope initialization and assert statements in Global . java to improve code clarity and ensure correct initialization of lexicalScope
added a new test method ` testAutoStartup ` in ` InboundChannelAdapterParserTests ` to verify the behavior of ` SourcePollingChannel
added methods to retrieve the level and root , and item boundables in the STRtree classes to enhance the structure of the STRtree class and
added conditional logic to determine the minor version from the version string to ensure compatibility with version numbers for improved version handling
added a check for empty tags before adding them to the ActiveItem to ensure that tags are only persisted when no tags are available
added a new method ` parseDateTimeStringToEpochMillis ` and ` fromDateTime ` to ` DateTimePatternHandler ` and ` DateTimeFunctions ` to
hhh - 17100 - fix nullpointerexception in disassemble method
refactor Log4j2ConfiguratorServlet to improve logging functionality to enhance performance and maintainability of the logging framework
replaced instances of HiveException with AuthorizationException in StorageBasedAuthorizationProvider . java to streamline exception handling for improved clarity and maintain
updated command prefix handling in CGoCompileStep . java and added a new test for prebuilt dependencies in GoBinaryIntegrationTest . java to
added Buildable annotation to CustomResource . java to enable editable functionality for the Kubernetes API builder
removed the @ Override annotation from the Only class to simplify the code and improve readability
added a TIMEOUT _ THREE _ HOURS constant and modified theSoTimeout parameter in HttpClientFactory . java to improve connection timeout handling for improved
added " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _ node _ parse _
simonstewart : add support for ` ` disable trace ' ' constraint to the securityHandler
removed the @ Singleton annotation from ApplicationController . java to streamline the code by eliminating unnecessary dependencies
added error handling for OwnCloudAccount retrieval in ShareActivity . java to ensure that the username is retrieved based on the user ' s display
added a new test method ` testResumePausedInstance ` to ` JobLauncher ` and ` SimpleJobLauncherTests ` to ensure that the job
added null check for cacheConfig before adding it to HttpSyncDataService . java and modified data refresh logic in DataRefreshFactory . java to
simonstewart : make the DockerSession public and update import statements in LocalNode . java to improve accessibility of the DockerSession
replaced the use of ` AbstractJavaParserContext . isQualifiedName ` with a constant ` DEFAULT _ PACKAGE ` to improve code clarity and
pdfbox - 4892 : use nonsequentialpdfparser instead of nonsequentialpdfparser , a suggest by valerybok
[ mahout - 2272 ] fix testdistributedlanczossolvercli . testdistributedlanczostest
refactor HttpServerTestBase class for improved readability to enhance maintainability and facilitate future development
refactor assertions in PortletApplicationMapTest to use keySet instead of entries to improve readability and maintainability of the test code
added unit tests for ` NestedBeanIgnoreNulls ` in ` BeanTableSchemaTest . java ` and ` NestedBeanIgnoreNulls . java `
added RedissonAutoConfigurationCustomizer interface and a custom interface for RedissonAutoConfiguration to enhance configuration flexibility and facilitate custom
refactor loop index handling in Indicator . java and add a new IndicatorTest . java class for testing to improve code clarity and ensure correct
added new methods ` execInContainerWithUser ` to ` ContainerState ` , ` ExecInContainerPattern ` , and ` ExecCreateCmd
refactor conditional checks for WebSocket listener types in NettyWebSocket . java to improve readability and maintainability of the code
added tests for attribute conjunction and negated attributes in SemgrexTest . java to ensure correct behavior of semantic attributes in the semantic graph
added a broadcast intent for CLEAR _ PULL _ UNREAD in HomeFragment . java to enhance user experience by allowing users to pull
removed conditional logic for preGingerbread and overScroller initialization in TouchImageView . java to streamline code for better readability
added destroy method to DefaultProfileValidationSupport in multiple classes to ensure proper resource management and prevent memory leaks
camel - 1748 : camel - core - make sure we do n ' t throw runtimeruntimeexception if the veto be start
added FloatingActionButton to manage main and fragment actions in ShareActivity to enhance user experience by allowing users to open and close the FAB
added a new ` InlineParslet ` class and modified the parsing logic in ` ToDateTokenizer ` to utilize a new ` To
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class loading functionality
updated error messages in ErrorMessages _ sv . java and XPATHErrorResources _ sv . java to use " toppniv " instead of
added a condition to check if the server is checked before binding to the OperationsService connection to ensure that the server is checked only when the server
replaced occurrences of ` getBeginLine ( ) ` and ` getEndLine ( ) ` with ` getBeginLine ( ) ` and ` getEndColumn
added ` waitFor ( ) ` method calls to ` CxxPreprocessAndCompileStep ` and implemented ` waitFor ( ) ` method in `
added a boolean property ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and modified ` CoreAuthenticationUtils ` , and created a new
remove checkforloaded ( ) method from mapcontainer . getmaxsize ( ) - > getApproximateMaxSize ( ) - > getApprox
added support for enabling SSL protocols in NettyWebServer and SocketConfiguration classes to enhance security by enabling SSL protocols based on configuration settings
replaced ` AtomicBoolean ` with ` AtomicReference ` in ` SetOnce ` and added a new ` Wrapper < T > ` class to
updated the return statement in QueryDslMongoRepository to handle null properties and added a new test in SpringDataMongodbSerializerUnitTests to
simplified assertions in RoundRectBorderTest . java for clarity to improve readability and maintainability of the test assertions
added a check for empty genesis configuration before setting it in Cluster . java and updated BftAcceptanceTestParameterization . java to ensure that
deleted the ParallelTest . java file and removed the ParallelTest . java file to streamline the codebase by eliminating unnecessary tests
updated CountDownLatch initialization and added validation for sign length in PrecompiledContracts . java to ensure that the countDownLatch does not exceed the
changed the condition from checking if ` windows ` to checking if it ' s not ` non - windows ` to ensure that ` windows ` is
added a private static method ` empty ( ) ` and modified method signatures in ` MoreCollectors . java ` to improve code readability and
added null checks and improved WebSocket client extension handling in BitmexStreamingExchange and BitmexStreamingService to enhance robustness by prevent
added validation for latitude and longitude in GeoPointField . java and corresponding tests in TestGeoPointField . java to ensure valid latitude and longitude
refactor methods in OozieProxyImpersonator and WorkflowFilesService to use getWorkflowFileName and getWorkflowFileName methods instead of createWorkflowFile
refactor ResponderId class to improve code structure to enhance maintainability and readability of the code
updated the ` getTableDocument ` method to include a ` withDependents ` parameter and modified its usage in ` CompactCatalogUtility ` to enhance
added a check for the number of consecutive uploads without coordinates in UploadActivity and updated UploadPresenter to handle submit based on the number of uploads without
added caching functionality for profile data retrieval in ProfileResources . java to improve performance by avoiding unnecessary serialization of profile data
refactor property value handling in JpaMetamodelEntityInformation to improve clarity and functionality to enhance code readability and maintainability while ensuring
phoenix - 2323 bootstrap last - ddl timestamp for table and view ( phoenix )
added support for registering default exception mappers in ` AbstractServerFactory ` and ` DropwizardResourceConfig ` to enable customizable exception mappers
updated the method call from ` storeFieldAction ` to ` false ` in ` EntryEditor . java ` to ensure proper handling of field store
changed the parameter type of ` nativeCreateNSWindow ` from ` long ` to ` ownerPtr ` in ` CPlatformWindow . java `
updated SQL query to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to ensure compatibility with database schema naming conventions
added a new StockTileSkin class and modified animation behavior in Tile . java to enhance the visual appearance and visual appearance of the
fixed - rbuckets . get ( ) method return null instead of null
updated TypeFrameModelingVisitor . java and added DetectorUnderTest annotations in Ideas _ 2011 _ 07 _ 24 and Bug34702
added a new ` BackProgressAnimator ` instance and modified animation handling in ` LauncherBackAnimationController . java ` to improve animation respons
changed the ` _ initialPageNo ` variable from ` final ` to ` final ` in ` ContentLimitContainer . java ` and added a
updated crc calculation logic in JedisClusterCRC16 . java and modified total operations in CRC16Benchmark . java to improve crc calculation accuracy and ensure
added a comment pattern to the FormattedSqlChangeLogParser and updated comment parsing logic in FormattedSqlChangeLogParser to improve comment handling
replaced the instantiation of ` JarArchiver ` with a direct instantiation of ` JarArchiver ` in ` AbstractJarMojo ` to
replace ` HumanReadableException ` with ` BuckUncheckedExecutionException ` in ` DefaultClassUsageFileReader . java ` to improve error
refactor conditional checks in TSServiceImpl . java and add multiAggregationTest in DaemonTest . java to improve code readability and ensure correct
added validation for RGBA format and type in GwtGL20 . java to ensure compatibility with unsupported formats and types in GWT backend
added a new test method ` testDebugInfo ` in ` OutputMemoryTest ` , ` PrintR ` , and ` VarDump ` classes
replaced ` UnmodifiableClassException ` with ` Exception ` and added exception handling in ` InlineBytecodeGenerator . java ` to improve error
updated class initialization trace handling in NativeImageBytecodeInstrumentationAgent , ClassInitializationFeature , and ConfigurableClassInitialization classes to improve clarity and
[ hotfix ] [ runtime ] fix typo in brokerrequesthandler
replaced ` TopicRouteCacheBuilder ` with ` Caffeine ` and updated cache initialization in ` TopicRouteService . java ` to
updated the ` createDataSource ` method to include a ` readOnly ` parameter and modified the ` createDataSource ` method to accept a boolean parameter to
updated invalid target release pattern in FindBuildToolFailures . java and added Fatal error handling in FailureLogAnalyzerTest . java to improve error handling
updated URI string construction in DetailFragment . java to include a check for location intent to ensure the location intent is available before processing the URI string
added a null check for referencedIds in StandardParameterContextDAO . java to prevent potential NullPointerException when the referencedIds is null
refactor ClassLoader class to improve code readability to enhance maintainability and facilitate future development
added a method to set the origin response headers in ProxyRequestHelper and a corresponding test in ProxyRequestHelperTests to ensure that the response headers
added a new ProfileSettingDrawerItem instance to the GpsMainActivity to enhance the visual appearance of the profile setting drawer
added a new constant for XML validation in various classes and updated related parser initialization to use it to improve code readability and maintainability by central
simonstewart : add a new test for javascript string handling in the firefox driver
added a maxRows variable and modified fetch size handling in IoTDBStatement . java to ensure fetch size is greater than zero and improve error handling
updated the ` isCountOptimizable ` method to ` allActionsAreOptimizableFilters ` and modified the ` isActionsAreOptimizableFilters
added event dispatching for node and mouse events in StandardVizEventManager to ensure proper event dispatching for node and mouse events based on
[ java ] fix memory leak in manytooneringbuffer . setmemory ( int , int )
refactor XorGroup assignment to use a memory variable instead of a private variable to improve code readability and maintainability by encapsulating memory
removed the ` getHeight ( ) ` and ` getWidth ( ) ` methods from the ` LCDUIImageMonochromeBitmapSource ` class
refactor SourcePathResolver to use a new method ` getPathPrivateImpl ` for retrieving absolute paths to improve code readability and maintainability by
added functionality to encode and parse identifiers in XmlParser to enhance XML parsing capabilities and ensure correct handling of resource values
updated the ` changeSchemeIfIsWebSocketUpgrade ` method to static and added encoded URL handling in ` WebsocketRoutingFilterTests ` to improve
updated file names from " EXTERNAL _ TEST _ SUITES _ CONFIG " to " EXTERNAL _ TEST _ SUITES _ EXEC
added a method to retrieve CxxPlatform from HaskellBinaryDescription to improve flexibility in retrieving CxxPlatform based on the specified build
added import statements for Lucene ' s IndexReader , IndexWriter , and Similarity classes to enhance documentation clarity and maintainability of the
updated ConcurrentLinkedStack to handle null values and added test cases for pop and iterator bubbles in ConcurrentLinkedStackTest to improve robustness
added methods ` isMatched ( ) ` and ` setMatched ( ) ` to ` BinaryHeapQueueTest ` and ` BaseQueueable `
added a null check for mDirectories before initializing it to avoid potential NullPointerException when mDirectories is null
updated condition in RecentsView to check if overview state is enabled and first layout is not enabled to enhance user experience by preventing unnecessary
added package - info . java files for various Lucene classes to organize package structure for better organization and organization
added functionality to set the visibility of the AutoLeveler panel in the AutoLevelerTopComponent to enhance user experience by providing a clearer
added post - optimize callbacks to DirectUpdateHandler and DirectUpdateHandler2 classes and implemented post - commit functionality in UpdateHandler to enhance event handling
updated the decompressor initialization and decompressor initialization in CompressionMode . java to ensure consistent handling of compressed and padded lengths during compression
removed the check ( user _ data ) method call from Shaderc . java to streamline the code by eliminating unnecessary checks
added a condition to check if the base is isLocalMetaStore ( ) before retrying retriesMade to ensure retriesMade does not exceed the
added null checks and improved error logging in HeliosSoloLogService . java to enhance robustness by preventing potential NullPointerExceptions
refactor Subject class to improve code structure to enhance maintainability and readability of the code
added ConcurrentReferenceHashMap for weak and STRONG reference types in AbstractSerializationService to improve performance by reducing concurrent modification overhead
updated color distance calculations in HSSFPalette . java and added unit tests in TestHSSFPalette . java to ensure correct color distance
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
refactor test cases in ElementFindingTest . java for improved readability and consistency to enhance clarity and maintainability of the test code
added a new ` flags ` parameter to the ` registerReceiver ` method in ` ShadowApplication ` , ` ShadowContextImpl ` , and `
updated FFmpegTest to use Mockito ' s Answer interface for version loading to improve test reliability and ensure compatibility with Mockito ' s
updated Ogg and OpenALMusic classes to include a previousInput parameter and modified the loop method in OggInputStream to improve input handling
added a new constant ` RESPONSE _ WAS _ NULL ` and updated the failureMessage assignment in ` AssertionResult . java ` to improve cl
added a condition to check if anomalyFailureCount and anomalyWarningCount are zero to ensure that anomalyFailureCount and anomalyWarning
refactor BaseActivity and DetailActivity to use a new showToast method to improve code readability and maintainability by encapsulating toast functionality
updated the method call from ` delegate . method ( ) ` to ` delegate . requestTemplate ( ) ` in ` TracingFeignClient .
added error handling for LDAP referral errors in LDAPCertStore . java to improve robustness and error handling for invalid LDAP names
refactor the retain method in GatewayRSocket to use a separate method for better readability to improve code maintainability and reduce redundancy in
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a test for item click functionality to improve clarity and functionality of
[ hotfix ] [ test ] remove unused @ before and @ classrule annotation
deleted the GenericItemUIProvider . java file to the project is no longer needed for the project
added a ` selectedObject ` field and its getter and setter methods to the ` SIPCommSelectorBox ` class to enhance functionality by allowing
added JUnit @ Isolated annotation to MetaInfConfigurationTest . java to enable access control of FileSystemPool in tests
added a host configuration for HTTP _ INFO in the HttpServer to ensure the server connects to the HTTP _ INFO server
added checks for heart mode before setting access tokens and refresh tokens in DynamicClientRegistrationEndpoint . java to ensure token validity and refresh tokens are
added a new ` CloverInstrumentationFilter ` class and modified the ` Not ` logic in ` TestInterfaceAudienceAnnotations . java ` to
added ZHIMI _ HUMIDIFIER _ CB2 to MiIoDevices and modified the write statement in ReadmeHelper to
refactor ` plausibleToBreak ` method to use ` CalculationContext ` instead of ` BlockStateInterface ` to improve code cl
changed the access modifier of the setScrollRangeDelta method from package - private to public to allow access to the method from other packages
added error logging for empty repository list in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to improve error handling for empty repository lists
updated the condition to include an additional check for containsMissingValue to ensure correct handling of missing values in IntHashSet
added Serializable interface to RuleAdministratorImpl class to ensure proper serialization of the RuleAdministrator instance
replaced ` List < String > ` with ` Set < String > ` and ` List < String > ` and ` Set < String >
updated g3d test paths from " g3d / cube _ anim . g3dj " to " g3d / knight
updated hash cache data handling in Manager . java and added error logging in WitnessService . java to ensure proper handling of negative solidifiedPosition
hbase - 1748 fix nullpointerexception in execresult . get ( ) and valuetype ( ) for nobody
added a method ` hasAccess ` to check for admin access in the ` HttpServer ` class to ensure that unauthorized users are only logged if the
replaced ` writeTo ` method with ` getStubClassBytes ` in ` ClassMirror ` and added a new ` CreateStubAction ` class
added a TextView to manage the internal link text in FileDetailSharingFragment to enhance user experience by providing a clearer text for sharing files
updated string formatting in PredictionTest . java to use Locale . ENGLISH for accuracy to ensure consistent accuracy formatting across different locales
updated the condition in ModelZooTest . java to check for both SATURDAY and DAY _ OF _ WEEK to ensure accurate comparison
removed the hideIme method from AllAppsContainerView and LauncherAllAppsContainerView to streamline the code by eliminating unnecessary
added InMemoryEventStorageEngine configuration to EventHandlingConfigurationTest and SagaConfigurationTest to enable embedded event storage for testing purposes
refactor file handling in BsdFileStore and BsdNativeDispatcher to use getmntonname method to improve code readability and maintain
added a new test class ` Issue1599Test ` to validate the resolution of ` MethodCallExpr ` methods in ` JavaParserTypeSolver
added a new parameter ` x ` and ` y ` and ` z ` to the ` spawn ` command in ` SpawnCommand . java
updated content area height and width calculations to use a constant for minimum content delay to improve code readability and maintainability by reducing redundancy
make graalcompiler . compilegraph final and improve debug message
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to relies on
added failed checks to plugin checks and modified the addColumnsToUpgradeTable method in UpgradeCatalog280 . java to ensure plugin checks are properly
refactor Environment class to improve code structure to enhance maintainability and readability of the codebase
added import for LuceneTestCase and annotated a BadApple annotation in RecoveryAfterSoftCommitTest . java to address issue SOLR -
updated the home assignment logic in CodenameOneImplementation . java and removed a warning check in HashtableContent . java to improve clarity and
updated FLAG constants from FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS
updated LiquibaseEntityResolver and XMLChangeLogSAXParser to use CompositeResourceAccessor and modified XMLChangeLogSAXParser to
added Security import and property settings for Jdk . tls . disabledAlgorithms in ComHostnameVerifier and JavaxHostnameVerifier to ensure proper security
updated ` AbstractCxxDeps ` and ` CxxLibraryDescription ` to use ` singleton ` instead of ` EMPTY ` to improve dependency management
rename expectedDirectory and actualDirectory to expectedStubDirectory and actualFullDirectory to improve clarity and consistency in naming conventions
changed the declaration of ` resizeThreshold ` from ` @ DoNotSub ` to ` @ DoNotSub ` in ` Int2ObjectHashMap
updated folder name hint handling to check for empty title before setting it to improve user experience by providing clearer feedback when the title is empty
updated the client ID from " example " to " uaa " in UaaResetPasswordServiceTests . java to include an additional parameter for
changed access modifier of methods from public to private in ShadowSQLiteDatabase . java to restrict access to these methods for better encapsulation
updated string concatenation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to improve readability and maintainability of the code
refactor MimetypeIconUtil class to improve code organization to enhance maintainability and readability of the code
rename ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in naming conventions
added a new test method ` isNotString ` to ` UnnecessaryParenthesesTest ` and modified the return condition in ` UnwrapParenthes
added a new method ` teleport ` to handle the ` org . bukkit . entity ` object in the ` Location ` class to enable
replaced ` Base64 . encode ` with ` Base64Utils . encodeToUrlSafeString ` in ` TokenKeyEndpoint ` and `
updated import statements and modified Statistics . report method in TranslatorManagerHelper . java to improve code organization and clarity by using ProjectComponent instead of
rename ` ContainerAnnotation ` to ` ContainedBy ` to improve clarity and consistency in naming conventions
added a null check for the result in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non - null value to
refactor retweeter handling in TimeLineCursorAdapter to improve clarity and functionality to enhance code readability and maintainability by reducing
added a conditional check for the addon theme before setting the verified text in UserProfileActivity to ensure that the verified text is displayed based on the
changed the access modifier of the ` instance ` variable and its initialization in ` AbucoinsDigest ` class to improve encapsulation and ensure proper
camel - 14836 : camel - mongo - add autowired property to the component to enable autowired configuration of the mongo connection
added an ` sourceIndex ` field to the ` AttributeMapping ` constructor and updated related classes to utilize it to enhance the flexibility of
refactor SemiTransactionalHiveMetastore to use a separate method for retrieving partition statistics to improve code readability and maintainability
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to ensure security is enabled based on user context
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 4392 ] fix email escape in home page
refactor ` enrichReflectionsWithSubsystems ` method in ` TerasologyEngine ` and ` ModuleManagerImpl ` classes to improve code
updated the output format for the number of features in JoinModeller . java to ensure that the output accurately reflects the number of features
[ calcite - 4892 ] do n ' t use ` ` < math ' ' instead of ` ` < math ' '
[ hotfix ] [ kafka ] fix npe in singlenodekafkaresumestrategy
replaced the constant for ACTION _ SET _ PLAYBACK _ SPEED with PlaybackStateCompat . ACTION _ SET _ PLAY
refactor IgnitionConfigurationHandler , MotorMountHandler , AxialStage , and ParallelStage classes to improve clarity and functionality
tika - 1357 -- allow ascii name length to be less than 55 and add a test for the utf - 8 length .
added @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as ignored on JDK 1.7 vs
refactor lock file creation in MavenDependencyResolver and add createLockFile method in MavenDependencyResolverTest to improve code readability and maintainability
updated shared preferences for version 5.3 and version 5.3 _ 1 from " version _ 5 _ 3 " to " version _ 5
added a check to return null if the user is a valid FEDERATION _ USER to prevent potential null pointer exceptions when the user is
added a check for TruffleObject in the ExecuteMethodNode class to ensure that the value is not an instance of TruffleObject to prevent
removed unnecessary collectors from JakartaClientShutdownWithServerWebAppTest and related tests to simplify the code by eliminating unnecessary
added FilterAttachable and WarnStatus imports and modified error status handling in LogbackValve . java to enhance logging capabilities and improve error reporting
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
removed the import of Version from CreateIndexTask . java to streamline the code by eliminating unnecessary dependencies
added handling for missing primary keys in OracleDatabase and updated schema handling in MissingPrimaryKeyChangeGenerator . java to improve schema handling and ensure correct schema
added MetastoreException to execute and repair methods in MsckOperation . java and updated error handling in TestMSCKRepairOn
( chore ) camel - kafkaproducer : retry the committransaction ( ) method in kafkacommitter
[ rocketmq - 1342 ] remove the receipthandle from the forwardmessagetosdlqactivity .
added support for managing DockerCompose services in DockerComposeContainer and created a new test class for DockerComposeServiceTest to enhance flexibility in Docker
replaced the use of ` CollectionUtil . copySet ` with a static method ` copySet ` to improve code readability and maintainability
removed unused imports and simplified the return statement in FeedParser . java to streamline code and improve readability by eliminating unnecessary dependencies
removed conditional check for AppsCustomizePagedView . DISABLE _ ALL _ APPS and adjusted child layout retrieval in Workspace . java
change type of energyReactiveVArACSumConsumed and energyRealWACMinusAbsolute to double in MeterRealtimeBodyDataDTO .
added a new file ` bug4150029 . java ` implementing the ` JApplet ` class to handle directory selection and file selection to
added ` isSparkConfigUpdated ` property and corresponding getter and setter methods in ` HiveConf ` , ` SparkSessionImpl ` , and `
added ` getLongPressIndicator ( ) ` methods to ` AppIcon ` , ` AppIconMenuItem ` , and ` Launchable ` classes to
added checks for empty polygons in WKBWriter and updated test cases in WKBWriterTest to ensure proper handling of empty polygons and improve test
refactor UnflavoredBuildTarget creation to utilize Interner for improved interning to enhance code readability and maintainability by
added a new Java file ` MultiplyByMaxInt . java ` implementing a test method for integer multiplication to facilitate testing of
updated search view handling in OCFileListFragment to enable drawer indicator based on the current file state to improve user experience by ensuring the search view
removed unused imports from TestRAMDirectory . java to clean up the code and improve readability
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton . java ` and ` Operations . java ` to simplify the
[ dmn ] add error message for no expression define for name on node
replaced ` @ ContainedBy ( AC . class ) ` with ` @ Repeatable ( AC . class ) ` in multiple test files
updated the console message format in AbstractController . java to include the duration of the file sending process to enhance user experience by providing clearer feedback
added package access check for base class name in OpenMBeanAttributeInfoSupport . java to ensure proper access control during class loading
refactor ReadResponseResolver and QuorumResponseHandler classes to include a responseCount parameter to enhance code clarity and ensure proper handling of response
updated the calculation of freeSize in StoreDirect . java to ensure freeSize does not exceed the specified size
updated the ` areTouchesDisabled ` method to accept a ` MotionEvent ` parameter and modified touch event handling logic to improve touch event handling and
updated SslContextFactory instantiation to use SslContextFactory . Server instead of SslContextFactory . Server to ensure compatibility with the latest Ssl context management
removed the PrivilegedSocket class from PG _ Stream . java to simplify the code by eliminating unnecessary security checks
refactor InputTest class to improve code readability to enhance maintainability and facilitate future development
added pause blur functionality to the DepthController and modified animation handling in AbsSwipeUpHandler to improve animation responsiveness based on the Quick
added null check for curLatLng before adding the current location marker to avoid potential NullPointerException when the current location marker is not initialized
replaced the method ` removeSecret ` with ` retrieve ` in ` ClientAdminEndpoints . java ` and added tests in ` ClientAdminEndpoints
replaced XML parsing with configuration parsing in SqlSourceBuilderTest . java to improve compatibility with JUnit 5 features and enhance test coverage
http : / / issues . apache . org / jira / browse / amq - 4892 - fix a race condition in the
added unit tests for UnknownKeyException and ExpectedException in SlidingGanttCategoryDatasetTest . java to ensure correct handling of unknown keys in
updated filterConditions initialization to use Optional for improved null safety to enhance code robustness and prevent potential NullPointerExceptions
refactor ControlDirection enum to use a new method for cloning fields and improve cloning functionality to enhance code readability and maintainability by
added suppression annotations and modified stack trace handling in StdErrLog . java to improve code clarity and ensure proper stack trace formatting
updated HttpSessionEventPublisher to use ` getContext ( ) ` instead of ` context . publishEvent ( e ) ` and added null context checks in
added a check for the syntax of CREATE CQ statement in ASTVisitor . java to ensure the syntax of CREATE CQ statement has changed from
[ hotfix ] fix typo in flinkiottdbsink
added a counter for custom simplifyed nodes and modified conditional checks in CanonicalizerPhase . java to improve clarity and maintainability of the canonical
updated the parameter ` context ` in the ` setImageDrawable ` method call to include the ` context ` parameter to ensure the correct context is used
updated ` readIdentifierWithSchema ( ) ` method to use ` schema . getName ( ) ` instead of ` readIdentifierWithSchema ( )
added handling for TIMESTAMP and INTEGER fields in BigQueryTableRowIterator and corresponding test cases in BigQueryUtilTest to ensure accurate parsing of timestamps and timestamps in
added findViewWithTag method implementations in ShadowView , ShadowViewGroup , and ViewTest classes to handle view matching with specified tags to enhance view
replaced instances of ` for ( ) ` with ` for ( Enumeration < String > ) ` for ( ) ` in multiple classes to enhance
removed unused import of PColumnFamily in IndexTool . java to streamline code by eliminating unnecessary dependencies
added new constants JSON _ VALUE and JSON _ CREATOR to JavaClassUtil and updated annotation handling in SpringBootDocBuildTemplate to improve clarity
svm : fix issue where classpathfile . toPath ( ) do n ' t have a jar
added CUDA _ R _ 16F and CUDA _ C _ 32U constants to multiple CUDA _ R _ 16F and CU
removed the ` ResourceLoader ` class and its imports from the ` com . xtremelabs . droidsugar . view ` package to
refactor getAttachedFace method to handle SimpleAttachableMaterialData instead of GlowBlock to improve type safety and maintainability of the code
added a case for VARBINARY in RelToStageConverter . java to support binary data handling in the RelToStageConverter
removed unused import of DateHelper in NoteAdapter . java to streamline code by eliminating unnecessary dependencies
added error handling for backup loading in Backup . java and updated message messages in Captions . java to improve user experience by providing clearer feedback
change the position of the eview1 element from ABSOLUTE to RELATIVE in EuclidianSimplePanelW . java to ensure
removed unnecessary file deletion check in ShadowParcelFileDescriptor . java to simplify the code and improve readability
replaced ` poll ( ) ` with ` removeFirst ( ) ` in ` StackBasedSecurityContextHolderStrategy . java ` and removed unnecessary context
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to accurately reflect the
added unit tests for the ` testXorNeutralSnippet ` and ` testXorNeutralReference ` methods in ` Integer
removed the static final Type constant STRING _ ARRAY from TypeFactory . java to simplify the code by eliminating unnecessary dependencies
refactor hideIme method in AllAppsContainerView and add logging functionality in LauncherAllAppsContainerView to improve code clarity and
add a new file BlockStateContainer . java to force bit density to fix network issues and resize below if needed
updated assertions in TimelineMetricCacheSizingTest and TimelineMetricCacheTest to improve clarity and consistency to enhance readability and maintain
added a new method ` getGLMaximumTextureSize ( ) ` to the ` Minecraft ` class to manage the maximum texture size based
[ java ] remove redundant call to tryStopLogRecording ( ) in ConsensusModuleAgent . java to simplify the code by eliminating
added a check for isInTransform before setting startPosn in SemanticAnalyzer . java to ensure startPosn is reset when isInTransform is true
added a new ` isSkipStarTree ` method to multiple ` AggregationPlanNode ` and ` QueryContext ` classes to control the behavior of star
refactor NearbyActivity to manage nearby view lock and improve clarity to enhance user experience by ensuring the nearby view is refreshed
added new methods ` of ` , ` inverse ` , and ` biMap ` to the ` MapTransformer ` class to facilitate
refactor EmeddedObjects and EmbeddedObjects classes to improve code organization and maintainability
added null checks for launcherWidgetSpanInfo in LauncherPreviewRenderer and PreviewSurfaceRenderer classes to enhance robustness by preventing potential NullPointerExceptions
updated ` StageSelector ` and ` StageAction ` classes to use ` EventObject ` instead of ` ChangeListener ` to enhance event handling capabilities
added ` callingUid ` and ` callingPid ` methods to ` ShadowBinder ` and corresponding tests in ` ShadowBinderTest ` to enhance functionality
refactor ExpectationFailure class to improve clarity and consistency to enhance maintainability and readability of the ExpectationFailure class
removed the warn log statement from BitcoinSerializer . java to streamline the code by eliminating unnecessary logging
updated variable assignments for width and height in ImageReplacedElement . java to ensure correct calculation of dimensions based on target dimensions
added escape characters in CoreMarkdownNodeRenderer and modified MarkdownWriter handling in MarkdownRenderer and SpecMarkdownRendererTest to improve character handling and ensure correct
refactor SharePasswordDialogFragment to use a separate method for setting the password to improve code readability and maintainability by reducing redundancy
refactor ` MapMethods ` and ` UNMAP _ BUFFER ` methods to use a class for reflection to improve code readability and maintainability
changed access modifiers of several methods from public to non - public in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java
added new options for setting slider AM keytab settings in LlapOptionsProcessor . java to enhance flexibility in setting slider AM keytab settings
modified the ` tearOutGraphViewContainer ` method to accept an ` JFrame ` parameter and added animation control for the ` extractionModel
added synchronization checks and improved shortcut binding logic in LauncherModel . java to ensure thread safety during loader execution and ensure proper handling of loader
updated fields and methods in NodeManageMemoryMergeOperator , NodePathsConvertOperator , and NodePathsCountOperator to improve code clarity and ensure
added ` messageType ` and ` guid ` parameter to the ` add ` methods in ` IssueInterface ` and ` ValidationReport ` classes to enhance
added a method to retrieve the provider name and updated error handling in RSAClientKeyExchange . java to improve error handling and provide clearer feedback
rename ` getDynamicConfiguration ( ) ` to ` getFlinkConfiguration ( ) ` across multiple files to improve clarity and consistency in naming con
change log level from WARNING to OFF in CCJSqlParserUtil . java to disable logging functionality for better debugging
remove unnecessary conditional check in AggregateLifeCycle . java to streamline output for better readability and maintainability
changed the access modifier of BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public to allow access to the BITMAP _ WIDTH
removed the @ Ignore annotation from CovariantOverrideTest . java to clean up the code and improve readability
refactor ` curly ` and ` qtype ` methods in ` Pattern . java ` to improve clarity and consistency to enhance code readability and
camel - 1649 : camel - model - add support for load route definition from xml
added space minimum and maximum settings for the X - axis in ScatterChart . java to improve visual appearance of the chart ' s
updated string concatenation syntax in ExpressionStringBuilder . java to improve readability to enhance code clarity and maintainability
added a default method ` shouldPreserveDataStateOnReapply ` in ` SplitScreenSelectState ` and modified ` RecentsView
added a check for the presence of " UTF8 " key in the ENCODINGS _ FILE to ensure that a valid UTF8 key is present
updated TestReproduceMessage and LuceneTestCase to use RandomizedRunner and SeedDecorators for randomization to improve test reliability
added logging functionality for long - pressing AllApps items in StatsLogManager to enhance user experience by allowing users to click on long - press
added null check for log in StoreWAL . java and created a new test class Issue112Test . java to ensure proper handling of null
added a check for ` showSectorLandInfo ` in ` Control . java ` and implemented a flag in ` SectorPreset . java
updated type casting to use generics for better type safety to enhance type safety and prevent unchecked cast warnings
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
updated the ` buildNearbyRandom ` method to accept a ` randomSelection ` parameter and added validation for random selection in multiple selector classes to
refactor temporary cache handling to use CacheBuilder instead of ScheduledExecutorService to simplify cache management and improve code clarity
updated visibility checks for DataStoreInfo and WMSStoreInfo in NewLayerPage . java to improve code clarity and ensure correct visibility of the
change the default value of ` Availability _ availability ` from ` Availability . UNAVAILABLE ` to ` Availability . UNAVAILABLE ` to ensure consistency in
added a condition to check if the peer is sync finish before processing pbft commit messages to ensure that transactions are only processed when the peer is
updated retry settings to use " no _ retry _ codes " and " no _ retry _ 1 _ params " instead of " default " to
rename ` _ freeSpaceReclaimDisabled ` to ` _ freeSpaceReclaimQ ` and update related methods accordingly to improve clarity and
updated KDCOptions . java and KdcDefaultOptions . java to use static constants and added a new class KdcDefaultOptions . java
added null check for the writer before creating a new JsonWriter instance to ensure proper initialization and prevent potential null pointer exceptions
removed redundant whitespace in ProfilePager . java for consistency and clarity to improve code readability and maintainability
rename ` paintBackground ` to ` paintComponentBackground ` in ` Slider . java ` to improve clarity and consistency in naming conventions
added a method ` valueFromClassConstant ` to retrieve a value from a class constant in ` Configuration . java ` to provide a way to
added error handling to the initialize method in KafkaService . java to improve robustness by logging exceptions during service initialization
updated the RESOURCES _ TO _ ALWAYS _ ACQUIRE set to use ImmutableSet . of instead of Sets . newHashSet to improve clarity and
( chore ) camel - messaging : allow auto - create default - output channel for message bus
added keywords property to HTMLDocument and implemented a test for index keywords in TestDemo to enhance functionality to support keywords in the HTML document
updated the SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
modified the condition for adding addresses in MemcachedSessionDataMapFactory . java to improve code readability and maintainability
removed the instantiation of CorrespondenceSubclassToFactoryCall from the constructor to simplify the code by eliminating unnecessary instantiation
refactor Builder class to improve code structure to enhance maintainability and readability of the code
updated ISBNtoBibTeXFetcher to use www . ebook . de / de / tools / isbn2bibtex and
added error handling for exception creation in PolyglotImpl and modified keep - alive time settings in PolyglotLimits to improve robustness by
added null check for text before setting cursor position in TextField . java to prevent potential NullPointerExceptions when text is null
added support for simplified model and simplified model in Options . java and SentimentModel . java to enhance binary classification functionality and improve classification handling
added trimming of whitespace from the line in SuffixURLFilter . java to ensure that the line is trimmed before processing
added a conditional check for God mode in HandlerCombatInvocationsNotify . java to avoid unnecessary processing when the layer is in God
simplified popup registration logic in CheckboxCreationDialogW and TextInputDialogW to improve code readability and maintainability
updated constructors in LinkedHashMapCache and BoundedLinkedHashMap to include an additional parameter to enhance flexibility by allowing more flexible caching options
removed unnecessary calls to _ channel . close ( ) in ChannelEndPoint . java to simplify the code and improve readability by eliminating unnecessary
added null check for keyIndex in FixAcidKeyIndex . java and refactored KeyIndexBuilder initialization in OrcRecordUpdater .
added Locale . ROOT to the exception handling in DirectUpdateHandler2 . java to ensure proper locale - specific error reporting for document ID writing
added storeCheckGuard functionality to WriteNode and updated its usage in CanonicalizerPhase and DefaultJavaLoweringProvider classes to improve the handling of
refactor BciBlockMapping to include a successor parameter and improve edge checks for exception dispatch blocks to enhance code clarity and maintainability by
added ` getClassificationDisagreement ` method to ` AbstractCloud ` , ` Cloud ` , and ` DBCloud ` classes , and modified the
replaced ` BuildTarget . copyOf ( unstrippedTarget ) ` with ` BuildTarget . copyOf ( unstrippedTarget ) ` in
refactor SqlRunner class implementation to improve code readability and maintainability
changed ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` FileStorageUtils ` to
renamed ` knownApis ` to ` knownSdks ` and updated related methods to use ` Set < Sdk > ` instead of `
replaced ` ProgressIndicator ` with ` ConfidenceProgressIndicator ` in ` CreateOfferView . java ` to improve clarity and consistency in
updated header name from " Cling / " to " UMS / " in RequestHandler . java and added UpnpServiceConfiguration in UPNP
fix blockindex . iteratebpt ( ) and blockindex . iteratebpt ( ) .
added view type constants and adjusted layout inflation logic in CrowdfundingChatAdapter . java to improve code clarity and maintainability by
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL
corrected the spelling of " -- " in the EnglishGrammaticalRelations . java file to ensure correct syntax and correctness in
updated the ` insert ` method to include a ` writePackEntry ` method and modified the ` write ` method to handle duplicate padding to improve
replaced the ` getVisitors ( ) ` method with a ` apply ( Refactor < S , T > ) ` method in ` Re
added methods ` getChildByName ` and ` getChildByNameRecursive ` in ` Xml . java ` to retrieve child elements based on their names to enhance
updated the Content - Charset header from " UTF - 8 " to " UTF - 8 " in HttpSolrServer and BasicHttpSolrServerTest
replaced static UI _ STATE _ ALLAPPS with @ SystemUiControllerFlags in multiple classes to streamline UI state management and improve code
removed the clientService field from IntrospectingTokenService . java to streamline the service initialization process and improve code clarity
updated exception message formatting in HiveRecordSet . java to improve clarity of error messages for better debugging
removed the ownerId field from NodeEntry . java to clean up the code and improve readability
corrected the spelling of " BackupSnapshotAferTakingSnapshot " to " BackupSnapshotAfterTakingSnapshot " to ensure consistency in
added score calculation to the merge method in TextFragment to ensure that textEndPos does not exceed the score of the fragment ' s score
removed the private Digester variable from Md4PasswordEncoder . java to streamline the code by eliminating unnecessary dependencies
added validation for maximumUnimprovedStepCount in UnimprovedStepCountFinish . java to ensure that maximumUnimproved
added a check to return early if the currently opened editors are empty to improve performance by avoiding unnecessary processing when no editors are
replaced direct calls to ` verify ` with ` Mockito . verify ` and added new test cases in ` BDDMockitoTest `
replaced ` Thread . currentThread ( ) . getContextClassLoader ( ) ` with ` PathScanner . class . getClassLoader ( ) ` to ensure compatibility with
added a new method ` sayHi2 ` to ` CodeFirstPojoClient ` , ` CodeFirstPojoClientIntf ` ,
added logging functionality and refactored method signatures in AbstractSplitBrainProtectionTest . java to enhance logging capabilities and improve code readability
added null check for logoutConfigurer before filtering filters in DefaultLoginPageConfigurer and ServerHttpSecurity to prevent potential NullPointerExceptions when logout is
simplified the calculation of the idealVar variable in CASgiac . java to improve code readability and maintainability
added logging functionality to DockerComposeContainer and created a new test class for logging consumers to improve traceability and facilitate testing of consumer
changed the parameter type of the testMapping method from ` Class < ? > ` to ` Class < ? > ` in ` StandardJavaTypeMapping
removed unused imports from AmbariMetaInfoTest . java to streamline code by eliminating unnecessary dependencies
added a static method ` fromSupplier ( Supplier < T > supplier ) ` to the ` ThrowingSupplier ` class to provide a way to
replaced a break statement with a return statement in ConsoleActivity . java to improve code readability and maintainability
camel - 1748 : camel - platform - http : / text / post do n ' t send body to the response . thanks
added platform - specific path handling methods in MorePaths . java and updated argument resolution in AarWithLibsIntegrationTest . java to improve
added a null check for authorizationContext ' s params before adding them to the SolrParams map to avoid potential NullPointerExceptions when parameters are null
refactor load method to use throwExceptionIfFail ( ) instead of loadLibraryOnlyIfPresent to improve error handling by avoiding unnecessary loading of
updated the SDK version from " 4611349 " to " 4514284 " and added tests for speak functionality in ShadowTextTo
add a new ` TransactionLogKey ` class and updated ` QueueTransactionLog ` to implement equality and hashCode methods to enhance the functionality of the
added support for SQL without profile configuration in JdbcEnvironmentProperties and JdbcEnvironmentRepository classes to enhance configuration flexibility for SQL profile management
added a try - finally block around the write method in ConnectHandler . java to ensure proper resource management and prevent potential memory leaks
replaced ` Supplier ` with ` EventGenerator . fromFunction ` in ` CREATE _ REGISTRIES ` to improve code clarity and
pdfbox - 4892 : fix typo , a suggest by valerybokov
replaced the method ` loadValue ` with ` super . getThreadInfo ` in ` CachedThreadStatesGaugeSet ` and added a stack trace
added a new method ` prevTlogOnPrecommit ` and modified sleep duration in ` LeaderTragicEventTest ` to improve transaction
updated the file path from " FastAsyncWorldEdit - P2 - V6 / " to " FastAsyncWorldEdit - 1.17
added a null check for the path before creating the output directory and improved null check for input path to enhance robustness by preventing potential
added a method to calculate the normal vector in ObjUtils and updated TriangulationHelper to use it to improve code organization and maintainability by
updated the ` find ` method to include the identity zone ID in the ` JdbcAuditService ` class to ensure the correct identity zone ID is
refactor SpanCollector class to improve code structure to enhance maintainability and readability of the code
added a null check for SESSION _ MANAGER . getCurrSession ( ) before accessing SESSION _ MANAGER . getCurrSession ( ) to
refactor TransactionIsolationLevel class to improve code readability to enhance maintainability and facilitate future updates
updated method names from ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController . java
[ hotfix ] [ test ] add thread name to testsession
refactor CookieManager class to improve code readability to enhance maintainability and facilitate future updates
removed the loop for adding a ComponentKey to the ArrayList to simplify the code by eliminating unnecessary iteration
added a new OverviewToAllAppsTouchController instance to the list to enhance the functionality of the OverviewToAllAppsTouchController
replaced ` scaleHotseatWithWorkspace ` method with ` getHotseatScaleAndTranslation ` in ` LauncherState ` and
updated the ` DefaultStackTraceCleaner ` to check if the JUnitRule is not a JUnitRule before returning it to ensure that the
refactor MappedResizeableBuffer to use a single byte array instead of hardcoded null values to improve code readability and maintainability by redu
refactor balance listener initialization to use a private variable for clarity to improve code readability and maintainability by encapsulating balance listener initialization
added null checks for t and tex in RealisticRenderer . java to ensure proper color conversion based on edge mode to prevent potential NullPointerExceptions
added null check for httpClientResponse in HttpClientBeanPostProcessor . java and adjusted log initialization in tests . java to improve robustness by preventing
removed the import of PatternUtil and modified the pattern check in Gl200ProtocolDecoder . java to streamline the code by eliminating unnecessary
updated playback time validation logic in FullDetailsActivity . java to ensure that the last playback time is within a valid range to improve accuracy of playback
added a method to check if a node is an elliptic node and modified the attribute checks in SpanishXMLTreeReader . java to
added a condition to clear the " iso " language if it is empty in InstallItem . java to ensure the correct language is set when the
updated the overrideScheme handling in ReactiveLoadBalancerClientFilter and added unit tests in ReactiveLoadBalancerClientFilterTests to ensure the correct scheme is used for
[ hotfix ] fix typo in defaultmessagestore . duplicate ( )
removed the ` final static ` modifier from the ` fullFilePathFromClassName ` method in ` DebugInfoBase ` and ` NativeImageDebugInfo
replaced a new method ` Correspondence ` with a lambda expression ` Correspondence . from ` to simplify the code and improve read
replaced ` isNonUSLangSupported ( ) ` with ` isNonENLangSupported ( ) ` in ` JRELocaleProviderAdapter
removed unnecessary null check for redeemData in LocalTransactionSigner . java to simplify the condition for better readability and maintainability
added a new file ` MinecraftForgeClient . java ` implementing texture binding methods in ` MinecraftForgeClient . java
added a return statement to the TxCacheDB class to improve performance by avoiding unnecessary operations
replaced ` com . sun . xml . internal . ws . org . objectweb . asm . Opcodes ` with ` jdk . internal
refactor FastDictionary class to improve code structure to enhance maintainability and readability of the code
refactor NIOConnection . java to improve session management and status management to ensure proper resource management and prevent potential memory leaks
updated FlightEvent types in FlightEventsTest . java to include new values for Ground HIT , TUMBLE , and A
[ beam - 1641 ] update protobuf to v1.26 . 0 ( # 339 )
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure proper handling of namespace declarations
[ instructor ] fix bug in instructorfeedbackresultspagedata . getstudentprofilepicturelink ( string , string )
added a shortRule list to defaultRules and added a test for alphabetic and numeric sequence rules in LongPassword to ensure that rules are
simonstewart : add a new command class and refactored the RemoteControlConfiguration , RemoteControlConfiguration , and SeleniumDriver
removed the import of JUnit ' s Test annotation from ProxyClassSerializationTest . java to streamline the test code by eliminating unnecessary
updated argument format in DLNAMediaInfo . java to include format = bgr24 to ensure proper formatting of thumbnail dimensions in the
removed unused imports and replaced ` SpeculativeGuardMovementPhase ` with ` CanonicalizerPhase ` in multiple Java files to streamline code
added a condition to check if the bean definition is not an alias in the AuthenticationManagerBeanDefinitionParser and created a test for multiple authentication managers
added handling for forwarded host and server in ForwardedRequestCustomizer . java and updated related tests in ForwardedRequestCustomizerTest . java
added a call to ` sb . setLength ( 0 ) ` in ` ConsoleReader . java ` to reset the buffer to zero to ensure proper
changed access modifier of allowedRoles and disallowedRoles from private to protected to allow subclasses to access the allowedRoles and disallowedRoles list
updated OpenIDE - Module - Specification - Version from 1.54 to 1.55 and modified version numbers in project . properties to reflect the
hbase - 11818 add support for hbase . server . netty . tls . wrapsize in netty rpc server ( #
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
updated FixedLengthTokenizerTests to extend TestCase and added tests for tokenizingSmallerStringThanRangesWithWhitespace to improve test coverage and ensure
updated the protocol binding handling in OpenSamlAuthenticationRequestFactory and added a new test class OpenSamlAuthenticationRequestFactoryTests to enhance security by ensuring
replaced direct instantiation of SurfaceControl . Transaction with a direct instantiation of AttachedSurfaceControl to improve code readability and maintainability by central
updated version string from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure compatibility
hbase - 1749 do n ' t need write permission to create a table ( jesus camacho rodrigue
updated the initialization of unSeqMergeList in TsFileManagement . java and adjusted measurement schemas in MergeTaskTest . java to ensure proper handling
camel - 14836 : camel - core - allow fileinputstream to be able to convert file to inputstream .
added a ` build ` method to ` DefaultShardManagerBuilder ` and modified the login method in ` ShardManager ` to enhance functionality by allowing
removed redundant whitespace in DeleteGlobalRef method call to improve code readability and maintain consistency
updated the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to clarify the purpose of
added a conditional check for the completion before terminateing the exchange response to ensure that the exchange response is only terminated when the completion is marked to
added a condition to check if the user student is a user student before comparing the response giver to ensure that the response is only relevant to
added security checks for linked profiles in BMPImageReader . java to enhance security by allowing users to disable linked profiles for different operating
removed unnecessary parameters from the setSimpleCuboid method calls in ClassicPlotManager . java to streamline the code by eliminating unnecessary
added a wait message for the PMD status in the PMDOpenTool class and modified the actionPerformed method to run a Runnable to improve user
refactor GridPresenter initialization and size handling in StdGridFragment . java to improve code readability and maintainability to enhance maintainability and ensure
replaced ` false ` with ` true ` in ` ContributionsListFragment . java ` to ensure consistent behavior across fragments
added a test for skip range filtering in DistinctPrefixFilterIT . java and modified ScanUtil . andFilterAtEnd method in BaseResultIter
added a new test method ` testAcrobatCheckBoxGroupProperties ` to validate checkbox properties in ` PDButtonTest . java ` to ensure
added a method ` getFileLastModified ( String file ) ` to retrieve the last modified time of a file to provide functionality for retrieving the last modified
added a condition to check if a valid metadata table is provided in the HiveIcebergStorageHandler to ensure that only valid metadata tables are
replaced ` TextField ` with ` ComboBox ` for currency selection in ` CashDepositForm . java ` to enhance user experience
change catch block from IOException to Throwable in WriteFlusher . java to improve error handling by providing more informative exceptions
added a new boolean variable ` mStartedEnterAnimation ` and updated animation notification logic in ` IconRecentsView . java ` to improve animation
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to define the active key ID in the UAA configuration
refactor sendMail method to sendMailWithAttachment and sendMailWithAttachments for better clarity to improve code readability and maintainability by
changed the ` isActive ` variable from ` private ` to ` volatile ` in ` SocketServer . java ` to ensure thread safety by avoiding
http : / / issues . apache . org / jira / browse / amq - 4892 - remove isdesc ( ) method
replaced instances of ` sbBuildImplicitEquation ` and ` sbBuildLHS ` with ` CharSequence ` in multiple Java files to ensure
added a check for the existence of the ownCloud app in DisplayUtils . java to ensure the correct app name is used in the application context
hbase - 11818 masterfilesystem do n ' t allow kerberos permission to be set in hbase - site . xml
updated method calls from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange ` and ` Javax
refactor Instant class to improve code readability to enhance maintainability and facilitate future updates
added a null check for the state format in CollectionsHandler and updated related test methods to use String instead of int to improve flexibility in handling
updated logging statements in CentralAuthenticationServiceImpl . java and modified conditional check in AbstractTicket . java to improve logging clarity and ensure proper
added an additional check for IllegalArgumentException in PDICCBased . java to enhance error handling by providing additional exception types
corrected the spelling of " / " in the file name check in AbstractFileResourceSet . java to ensure correct handling of file names
refactor PluginParameterExpressionEvaluator to accept a PathTranslator for file path handling to enhance flexibility in handling file paths during plugin execution
[ beam - 1649 ] add protobufcoderregistrar to be able to register bytebuffercoder .
added a new JpaQueryParsingToken with a boolean parameter to the token addition in HqlQueryRenderer to enable parsing of signed numeric literals
refactor ` generateLaunchLugFromRASAeroRailGuide ` and ` RailGuideHandler ` to include ` parentLength `
removed the getNonceFactory method from BitmexStreamingExchange . java to streamline the code by eliminating unnecessary implementation
updated log messages in MailBinding . java for consistency and clarity to improve readability and maintainability of log messages
[ java ] use default timer interval for client and publication timeout in driverconductortest .
changed the default value of initializeLoadedClasses from true to false in FastClasspathScanner . java to disable the initialization of loaded classes for improved
added a call to grabFocus ( ) in FullTextSearchPanel . java to ensure focus is properly released when the search field is displayed
refactor NioParams initialization in TlsConnectionLogging . java to improve clarity and consistency to enhance code readability and maintainability by
removed an assertion from the getDouble method in StatementTest . java to simplify the test by eliminating unnecessary assertions
updated the assertion message in TestSolrConfigHandler to include a new serverBaseUrl parameter to improve clarity of error messages for better debugging
refactor CsrfWebFilterTests to use ServerHttpRequest and ServerWebExchange instead of HttpMethod to improve code clarity and maintainability by
added import for Density and modified drawable formatting in FilterResourcesStep . java to improve code clarity and maintainability by using a more d
added a new variable ` buttonUIID ` and refactored component update logic in ` ComponentGroup . java ` to improve clarity and
removed unnecessary import of DisplayMetrics and modified the rotation check condition to streamline the code by eliminating unnecessary dependencies
added new files TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java , and TestArrayCopy
added import for LuceneTestCase and annotation for AwaitsFix in ReplicationFactorTest . java to address issue SOLR - 6157
added null checks for future and nextStartDate in RedissonExecutorService and TasksRunnerService to prevent potential NullPointerExceptions during execution
removed unnecessary null check for downloadResult and uploadResult in FileDownloader and FileUploader classes to simplify the code by eliminating unnecessary checks
added a null check for the StoreFileScanner before closing it to avoid potential NullPointerExceptions when the scanner is null
updated method calls to use ` getOrDefault ( ) ` for consistency in ` NetMetrics . java ` to improve code readability and maintainability
added nonce parameter to token claims in TokenMvcMockTests to ensure that the nonce is correctly retrieved from the claims map
refactor ChartEditor , DefaultChartEditor , DefaultAxisEditor , DefaultPlotEditor , and PaletteChooserPanel classes to improve code organization and
added width and height settings for the formLayeredPane in the Form class to ensure the form layered pane is drawn correctly based on the
updated import statements in BrowserContentPane . java and added maxY method in BrowserContentPane . java to improve code clarity and ensure correct height
updated database connection handling in SharedDatabaseLoginDialogView and SharedDatabaseLoginDialogViewModel to return a boolean indicating if the database is connected to
replaced ` DOCKER _ COMMAND ` with ` Platform . DOCKER _ COMMAND ` in ` DockerTestUtils . java ` and
added a null check for the InputStream before initializing parameters in TestIsartorValidationFromClasspath . java to avoid potential NullPointerException when input files are
updated the ` drawLeaveBehind ` method to accept an integer parameter for folder leave behind color to enhance flexibility by allowing customization
added a new method ` reportCanaryIncompatibility ( ) ` to the ` FlutterStudioInitializer ` class to inform users that the
added a null check for the identity proxy table name before retrieving the identity uuid to avoid potential NullPointerExceptions when the identity proxy table name is not
removed unused modulePersistEnable and modulePersistDisable fields from StartArgs . java to streamline the code and improve readability by eliminating
updated argument validation logic in GeminiMarketDataService . java to ensure that the last trade time argument is greater than or equal to
replaced HashSet with LinkedHashSet in VerifyPasswordResetRequestAction . java to ensure consistent ordering of questions in the request context
added TesterResponse and TestRealmBase classes for managing TesterResponse and TesterMapRealm to facilitate testing of Tester
added jsp files to the AuthCheckFilter . java file to exclude specific JSP files related to setup settings
added logic to manage and queue a scheduled runnable in the Scheduler class to ensure proper handling of scheduled tasks during execution
updated the ` runCommand ` method signatures in ` AbstractCommandRunner ` , ` AuditCommandRunner ` , and ` CommandRunner ` classes to include
refactor character reading logic in XMLParser . java for improved readability to enhance clarity and maintainability of the code
added a new test method ` testHorizPageOverflowHidden ` to the ` TextVisualRegressionTest ` class to ensure that overflow pages
updated arrow positioning logic in DeepShortcutsContainer . java to adjust arrow position based on mIsAboveIcon to ensure proper positioning for
changed catch blocks from ` e ` to ` ignored ` in multiple classes to improve code clarity and consistency in handling interrupted interruptions
refactor updateThumbnail method to include a refreshView parameter to improve the responsiveness of thumbnail updates based on gesture state
pdfbox - 4071 : use class name instead of org . apache . pdfbox . extractttffonts
updated EmailFormatSpecifier and HostnameFormatSpecifier to include a boolean parameter and added error handling for invalid hostname strings to improve address validation and provide clear
removed unnecessary references to ` this ` in multiple activity classes to simplify code and improve readability by eliminating unnecessary references
refactor ` MatchEntireSegmentDocIdSetBlock ` and ` SizeBasedDocIdIterator ` classes to improve clarity and consistency in
updated the ` promptToOpenFile ` method to accept a ` existingFileName ` parameter and modified the ` promptToOpenFile ` method to
updated widget span settings and page count calculations in AppsCustomizePagedView . java and AppsCustomizeTabHost . java to
refactor FlightConfiguration to use InstanceMap for managing active components and update bounding box transformations to improve component bounds handling and ensure accurate transformation of
replaced " seda : foo " with " direct : foo " in MicrometerMessageHistoryTest and SpringMicrometer
updated DateTimeFormatter initialization to include Locale . ROOT to ensure consistent locale handling for date formatting
[ dspace ] add permission filter to dspaceobjectrest ( # 2321 )
added a new test method ` testMissingRequired ( ) ` to ` StarTreeConfig ` to ensure that missing required configurations do not throw
camel - 14263 : camel - spring - dsl - add test for dynamic recipient list
added repaint functionality to InlineLayoutBox and HoverListener classes to improve layout responsiveness and control over repaint behavior
replaced ` DetectAuthenticationMethodOperation ` with ` OperationsServiceConnection ` and refactored service connection handling in ` AuthenticatorActivity . java `
