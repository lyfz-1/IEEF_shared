refactor SocketAppender initialization to use setRemoteHost and setPort methods to improve clarity and maintainability of the code
refactor prompt header handling in BasicAuthPlugin to improve readability and maintainability of the code
updated the way msgLength is retrieved in ManyToOneRingBuffer. java to simplify the code by removing unnecessary reference to RecordDescriptor
added null check for ` vmDetailCpu ` and ` ramOvercommitRatio ` to ensure fallback to ` clusterRamOvercommitRatio `
added anti - aliasing functionality to ShadowPaint and corresponding tests in PaintTest to enhance the flexibility and accuracy of anti - aliasing in the
replace set / clear / append / rename / fields with localization. lang ( ` ` manage field names & content'' )
- - - - - - - - - - - - - - - - - - - - - - - - - - - -
added check for non - empty nonce in ` getNonce ( ) ` method and updated authentication scheme handling in ` NettyAsyncHttpProvider ` to
added a RemoteInputListener interface and implemented its handling in the RemoteInput class to enable tracking of connection status during socket accept operations
added braces and removed redundant assignment of stripeIxTo in OrcEncodedDataReader. java to improve code readability and maintainability
updated filter condition in HomeConnectBridgeHandler to check if the thing is enabled before filtering to ensure that only relevant thing handlers are processed
added null check for ` bs ` before calling ` removeAllPolicies ` and ` addPolicies ` to ensure that ` bs ` is not null before
updated assertions in ` DefaultTypeAdaptersTest `, ` ObjectTest `, and ` DefaultDateAdapterTest ` to use ` matches `
added JSON parsing for DAG information in TezTask. java to enable better tracking and debugging of DAG information
updated time retrieval logic in ComputedSummary. java and added a method to get the heap dump time in HprofHeap. java to improve
replaced RxJava2Tasks with CommonsApplication for upload count retrieval to streamline code and improve maintainability by centralizing upload count logic
remove unnecessary lock _ mode _ read _ committed check in mvtable
[ hotfix ] [ core ] fix the issue that the defaultmessagestore's size be less than the maxoffset. ( #
updated folder handling logic in Launcher. java to ensure proper access to folder information when the folder is not open
added a new test method ` testSortOrder ` to verify sorting order of PGProperty values to ensure that PGProperty names are correctly sorted in
added a new constant for HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN in Common. java to provide a
changed parameter type from Object to ItemInfo in supportsDrop and getUninstallTarget methods to enhance type safety and improve code clarity
updated the assertion in RequestBuilderTest to check for a specific error message to improve clarity of error messages related to HTTP methods
( ) ) should be nearbylistfragment ( )
[ flink - 17725 ] [ runtime ] fix typo in flink - build. sh
added a new boolean field ` sendZeroAnomalyEmail ` to the EmailConfiguration class and integrated it into the EmailReportJob class to enable
[ hotfix ] [ kafka ] fix checkstyle violation in flinkkafkaconsumerbase
removed unused methods ` getUser ` and ` getGeofence ` from ` DataManager ` to streamline the codebase by eliminating unused methods
added a constructor with a maximum size parameter to the BlockingResponseListener class to enhance flexibility in handling request limits during processing
[ java ] remove thread name from memberbroadcastsreceived method in mcastservice
[ hotfix ] [ network ] fix resource leak in multireaderserverimpl
updated error messages in LoginSAMLAuthenticationFailureHandlerTest to remove trailing slashes to improve clarity and consistency in error descriptions
updated ConfigMetadataProviderTest. java file to improve test coverage and ensure reliability of metadata handling
updated import statements in ListFragment. java and refactored the updateNoteReminder method in SnoozeActivity. java to improve code
added a private static inner class AcceptAllFilter and refactored directory stream filtering in WindowsDirectoryStream to improve code readability and maintainability by
refactor JdbcTestDataSet class for improved readability to enhance maintainability and facilitate future updates
allow hotspotresolvedobjecttype. lookuptype ( ) to throw ClassNotFoundException
refactor Docker image name validation to use a dedicated ` DockerImageName ` class to improve code organization and maintainability by centralizing validation logic
updated the login error dialog message from " login _ failed _ username " and " login _ failed _ password " to " login _ failed _
added autofocus functionality across multiple form classes to enhance user experience by enabling autofocus functionality
added unit test for SamlConfig properties in different identity zones to ensure correct SAML configuration setup for different identity zones
added checks for non - empty lists in ComparableVersion. java and implemented new test cases in ComparableVersionTest. java to improve list handling and
updated method calls to use bottomRightMode and bottomRightMode instead of topLeftMode, topLeftMode, and getPreferredH to ensure correct
updated import statements and package structure for ParallelUniverse and related tests to improve organization and clarity of the codebase
updated method handle type handling in LocalCacheFactory and NodeFactory to improve clarity and maintainability of the code
updated the fill pattern in FrillsAndFills. java to use SOLID _ FOREGROUND instead of SOLID _ FILL to improve visual consistency
added method to draw self - loops in the processing preview to enhance the visual representation of self - loops
( ) should be allow ( )
renamed the method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve clarity and consistency in method naming
set the translation Y position of the drag handle indicator to 0 to ensure proper positioning of the drag handle indicator in the launcher
remove unnecessary log. log. getheaders ( ) call
( ) ) should'' if it be true and the original
added an assumption to skip tests on non - OSX environments to address build server issues
added Maven bundle options for Jetty alpn client to enable debugging capabilities for Jetty projects
[ activiti - 117 ] fix lock problem in executeasyncjob
refactor transaction handling logic to improve code readability and maintainability
updated the annotation from @ AddToRuleKey to @ ExcludeFromRuleKey and added serialization and input handling to improve clarity and control over
simonstewart : make the firefox custom profile launcher work on window
added a check to ensure the ` fam ` map does not already exist before adding it to the ` colFamToDynamicColumnsMapping ` to
[ hotfix ] fix checkstyle violation in flink - runtime
added logic to retrieve and add derived columns and indexes from a table in the MetaDataEndpointImpl class to enhance functionality for handling view types in the
fix issue where google _ id couldn't be update
updated import statements for TestCellReference in AllXSSFTests. java to ensure correct usage of TestCellReference in the code
add block holeness check to lens piston
added a new file LongPointerPressTest3049. java with a dialog and network error listener to facilitate testing of long pointer pointer
truffle : remove redundant inlining assumption in trufflefunctioninlining.
refactor null checks in BaseBuilder and XMLConfigBuilder to handle null values more gracefully to improve code robustness by avoiding potential NullPointerExceptions
removed unnecessary check for ListBlockParser in ListBlockParser. java and added a new test for deeply indentationed lists in SpecialInputTest
added a new abstract class ` AbstractOptionalAssert ` and refactored the ` OptionalAssert ` class to extend ` OptionalShouldContain ` to
added JUnit @ Ignore annotation to WebfluxNotIncludedTests to temporarily disable tests related to issue 1070
[ j2kt ] remove the global namespace from the test case.
updated the closing brace formatting in RouteStartupOrderLastTest. java to improve code readability and maintain consistency
added a condition to check if the video format is a video before accessing getWebSubs ( ) to ensure proper handling of web subtitles based on
added security. setproperty ( " jdk. tls. disabledAlgorithms ", " " ) in ComHostnameVerifier and JavaxHostnameVerifier
server : don't try to delete a vm if it's a local storage pool
updated logging statements in Driver. java and QueryResultsCache. java to improve clarity and consistency in log output format
( ( ) ) when a dependency be update ( # )
added a test for sending an activity with a request code in ShadowActivityTest and implemented the send ( ) method in ShadowActivity to ensure that
refactor graphics creation and rendering handling in RocketFigure3d. java to improve rendering quality and flexibility in rendering
added synchronization to the controllerListeners list to ensure thread safety when modifying the controller listeners
added JUnit @ BeforeClass annotation to ensure EasyMock does not work with Java 9 to address compatibility issues with Java 9
updated year calculation in TimestampUtils. java and added DateTimeFormatter in SetObject310Test. java to improve date handling and enhance test coverage
don't try to disconnect the connection if it's null
added " committed. ws _ table " to the query string in TxnHandler. java to improve readability and maintainability of the code
refactor BufferedInputFilter to use ByteBuffer instead of ByteChunk to improve performance and error handling for buffer operations
added a ` toSync ` method to ` AsyncUtils ` and created corresponding unit tests in ` AsyncUtilsTest ` to enhance async conversion functionality
added ActionGraphBuilder to multiple compiler factory classes to enhance the build process by integrating ActionGraphBuilder for better action management
simonstewart : add a test for hidden file input in chrome
replaced the existing ` createTables ( ) ` call with a new ` createTables ( ) ` call in ` SQLManager. java ` to
added a check to return the local Maven directory if it does not exist to ensure the application uses the correct local Maven directory if it does not
ggb - 2481 fix for hidden label ( ggb - 251 )
refactor ( metadata ) : init at the right time the map for metadata .
changed buffer flag setting from setFlags to addFlag in DefaultTrackOutput. java to ensure proper handling of buffer flags in the output stream
entityiterable : don't use sortbyid when sortbyid be false
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call for verify ( mock ) here " to
added a null check for the backupFolder before logging the expiration date to prevent potential NullPointerExceptions when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid. java ` with a main method and a test method to demonstrate array instantiation with a void type
added @ AddToRuleKey annotation to ToolType fields in ClangCompiler and GccCompiler classes to ensure that the ToolType field is
added a constant for PINCODE _ TIMEOUT and modified the conditional check for PINCODE _ TIMEOUT to improve code readability and maintainability by
added an override for isSampled ( ) method in PrometheusMeterRegistryTest and PrometheusExemplarsSample classes to ensure that
removed @ Ignore annotations from multiple test classes to streamline test execution by eliminating unnecessary tests
http : / / issues. apache. org / jira / browse / amq - 3496 - fix test case
updated the condition to check if the table is an artifical instead of its name to improve accuracy in determining if the table is an art
updated file status checks from ` isFile ( ) ` and ` isDirectory ( ) ` to ` isDir ( ) ` and ` isDir (
refactor session attribute handling in MongoSessionManager. java to improve clarity and efficiency to enhance code readability and maintainability while ensuring proper attribute management
replaced ` surfaceHolder. setFixedSize ( 320, 240 ) ` with ` surfaceHolder. setSizeFromLayout ( ) ` to improve layout
refactor stopping logic in AbstractConnector. java to use CountDownLatch for better synchronization to improve reliability and prevent potential NullPointerExceptions during stopping operations
removed unnecessary whitespace in HuobiStreamingService. java to improve code readability and maintainability
camel - jbang - fix performance issue with message history
refactor error handling in DelayedMonoPublisherTest to use lambda expressions to improve code readability and maintainability
replaced assertTrue with a conditional failure check for WebSocketHandshakeException to improve error handling by providing clearer failure messages for WebSocketHandshakeException
refactor AllAppsTransitionController to improve layout change handling to enhance responsiveness and maintainability of layout change notifications
refactor variable names from'theHandler'to'handler'for consistency to improve code readability and maintainability
added support for a'default - output - channel'attribute in the xpath router parser
updated ` cacheSeconds ` type from ` int ` to ` String ` in ` MessageBundleProperties ` and ` CasCoreWebConfiguration `
updated OpenAPI version from 3.0. 0 - rc1 to 3.0. 0 in multiple Java files to ensure compatibility with the latest API specifications
replaced the method ` append ( buffer, true ) ` with ` append ( buffer, true ) ` in ` ByteBufferPool. java ` to
added a check for the presence of " alt - rt. jar " in the boot class path to ensure that the application does not run with
updated ScimUser instances to use upper names instead of hard - coded names to enhance clarity and maintainability of the test code
[ falcon ] add - xx : + unlockcommercialfeatures and - xx : + debugnonsafepoints
added an ` isStreamEmpty ( ) ` method to the ` WebcamInputPanel ` class and modified the ` WebcamInputDialog ` to
added a check for content type in the HttpParser and implemented a test for chunked put functionality in ProxyServletTest to ensure proper handling of chunked
refactor AtmosEndpoint class to improve code structure to enhance maintainability and readability of the code
updated conditional checks in Java2TypeScriptAdapter. java to include " printf " and " print " methods to enhance functionality to support additional output
added a new test class ` TestCapacityUntilGCWrapAround ` and native methods ` incMetaspaceCapacityUntilGC ` in ` White
updated package - info. java files for mmm and ppp to improve documentation clarity and maintainability
[ fix ] bug in samplingstatcalculator that cause it to be stick at the same time.
added unit test base on user forum issue
odododododododododododododododododododododododododododod
fix terra shatterer and terra pick animation
removed unnecessary bindings in JoobyModule and SpringModule, and added a method to ignore entries in SpringModule and JoobyExtension to
clean up the code, no need to create a new rule
add ability to load property file from meta - inf / resources
updated the initialization of the ellipsoidRegionSelector to ensure the ellipsoidRegionSelector has the correct start state
updated URLs from HTTP to HTTPS in JavaSEPort. java to enhance security by using secure connections
[ wfs ] add validation for sort - by attribute in getfeature request
updated the logic for determining the grantor assignment in AbstractJdbc2DatabaseMetaData. java to improve code clarity and ensure correct handling of null values
added GraphicsConfiguration and GraphicsEnvironment imports and updated image creation logic in DiagramGenerationTest. java to improve image compatibility handling and ensure compatibility with
throw a runtime exception if we can't find a sideddelegate
updated DataUtilities and ReTypeFeatureReader classes to improve code organization and maintainability
use asserttask instead of separate countdownlatch
added methods for tokenization and joining tokens in StringUtil. java to enhance functionality for tokenization and joining strings
simplify code by use response. sendError ( ) instead of response. setStatus ( 404 )
added commandIndex variable and updated command parsing logic in SystemHighlighter. java to improve command handling and enhance code clarity
updated version to " 1.0. 1 - SNAPSHOT " and set version date to " PENDING " to reflect the latest release and prepare for upcoming
updated buffer position setting to use dimensionSize instead of idx to ensure correct indexing by using dimensionSize instead of index
added drag and drop functionality in the QuickstepTestInformationHandler and SystemUiProxy classes to enhance drag state management and improve error handling during drag
enable test only on java 7
added a new cipher string " PSK - AES256 - GCM - GCM + GCMv1.2 " to the TestCipher class to enhance
updated the description text from ` getText ( ) ` to ` getLongDescription ( ) ` to ensure the description reflects the correct data type for
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization and deserialization of ScimGroupMember objects
updated HqlQueryRenderer to handle reserved words and added a new test for function names to enhance query functionality and ensure correct handling of reserved words
( chore ) camel - subscription : fix typo in error message
refactor Parser class to improve code readability to enhance maintainability and ease future updates
updated offsetStreamIndex method to include an indexStartsAtOne parameter to improve track selection logic based on the starting index
tika - 697, tika - 697, tika - 697, tika - 797, tika - 7
[ hotfix ] [ table - planner ] remove dead code in sqloperatortable
added equals, hashCode, and toString methods to OneTimeTokenAccount and OneTimeTokenAccount classes to improve object comparison and hashing functionality for better
added a condition to check if mLaunchedAssistant is false before fling to ensure that fling is only fling when the ass
added a new file SolarisShortDSA. java that implements key pair generation and verification using DSA to address a specific Solaris bug related
added toggleSearchLabel ( false ) method call to ListFragment. java to ensure search label is disabled for better user experience
cloudstack - 7143 : don't lock the volume while create a snapshot, throw an exception
refactor ` FileDetailActivity ` to implement ` DetailsServiceConnection ` and implement ` DetailsServiceConnection ` to improve code organization and ensure proper cleanup
updated HttpClientTLSTest to use AtomicReference for handling SSLPeerUnverifiedException to improve code clarity and ensure proper handling of SSL peer unverified exceptions
removed the equals method from the ConjunctionScorer class to streamline the code by eliminating unnecessary complexity
added a null check for the variable'v'in Launcher. java to improve error handling when binding items fails
fix race condition during add / remove of raft group ( # 2451 )
updated cache size logic to accommodate larger cache sizes and added a warning log for full access to improve cache management and enhance performance tracking
updated API path from " / api / v2 " to " / api / v3 " and modified account handling in the CryptoFacilities
added an ` empty ( ) ` method to the ` freenect2 ` class to provide a way to check if the size is zero
added null checks for page data in AsyncPageReader and introduced a new test for empty dictionary pages in TestDrillParquetReader to improve
updated method signatures and logic in SerumStreamingService. java to improve argument validation and error handling to enhance input validation and provide clearer error messages
add config option to disable the charging animation when an item be charging on top of a mana pool.
[ java ] don't swallow timeout exception in cluster test.
camel - jbang - add log when wait for camel to exit.
refactor directory creation and assertion logic in DefaultServletTest. java to improve clarity and maintainability of the test code
refactor style injection logic in ResourcesInjectorFull. java to improve code readability and maintainability
changed the type of ` changeLogFile ` and ` outputFile ` from ` String ` to ` FileResource ` and updated related methods accordingly
fix ( blockworldvector ) : use getx / gety / gety / gety to compare world vector
updated LongConcurrentLRUMap. java to remove TODO comments and made CacheEntry fields final to improve code clarity and enforce immutability for
replaced direct addition of parameters with a regex pattern - based approach to enhance flexibility by allowing special characters in the arguments
updated FileCredentialsCache. java to handle the " KRB5CCNAME " environment variable and improved error handling in EmptyCC. java to
updated the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to align
remove unnecessary method and move hasufficientpeers ( ) to the protocolmanager
danielwagnerhall : don't try to attach a session to the current thread if the driver do n '
added a condition to return false for equals _ BOOLEAN operations in ExpressionNode. java to ensure correct handling of equals _ BOOLEAN operations in the Expression
added a condition to clear pending rendering operations when the application is minimized to ensure that pending rendering operations are only cleared when the application is in
don't sleep if there be no deadline in the test.
fix potential race condition in write - behind queue
set the icon of the JLabel to null in GroupTreeCellRenderer. java to improve the visual appearance of the JLabel by removing unnecessary space
renamed testRedirectMatches _ default and testRedirectMatches _ default methods to testRedirectMatches _ nonstrict and setStrictMatch to false to improve
added new unit tests for socket status and status in ShutdownMonitorTest. java to improve test coverage and ensure correct socket handling
improve performance of randomaccessorstore. rewrite ( )
updated field retrieval logic in Json. java to use a more descriptive variable name and improved error messages for better clarity to enhance code readability and
[ hotfix ] [ runtime ] move componentclosingutils to coordination
cloudstack - 7143 : don't try to delete a vm if it's in stopped state
cloudstack - 7143 : fix npe while create a vlan with ipv6 range
refactor ` InitializeUserDetailsManagerConfigurer ` and ` InitializeUserDetailsManagerConfigurer ` to ` InitializeAuthenticationProviderBeanManagerConfigurer ` and ` Initialize
increased the timeout duration from 15000 to 30000 milliseconds in getLeaderRetry method to allow more time for retrieving the leader of the specified shard in case of delays
refactored error message to remove quote
updated image drawing parameters in URLImage. java to correct image positioning to ensure proper rendering of the graphics in the user interface
updated field name comparison from solrDocument1 to solrDocument2 in SolrTestCaseJ4. java to ensure correct validation of field names based on
don't catch indexoutofboundsexception in setfdef
updated StreamTaskException to include the exception as a cause to improve error handling by providing additional context for the exception
refactor Preprocess. java to improve character handling and formatting to enhance readability and maintainability of the code
removed unnecessary parameters from the read method in MessagePack. java to streamline the code for improved readability and maintainability
added a new annotation interface ` Mapper ` with a default value to provide a default annotation for type and default values in the application
don't encode empty extension list in jsonparser
( ) should not be an external artifact ( # 14 )
added a new alias for " node _ popup / node _ popup _ scripting " in the entryNavigator to enhance the functionality of the node popup
updated constants and methods in OverviewActionsView and RecentsView to improve handling of task visibility and animation behavior based on device profile
camel - jms : use class instead of type cast to avoid cast to jmsmessage
reformatted code for improved readability to enhance maintainability and adhere to coding standards
deleted deprecated files and refactored the FailureContext class to streamline the codebase
refactor GzipHandlerTest to improve content formatting and add a new MicroServlet for handling HTTP responses to enhance code readability and maintainability while ensuring
[ java ] use backpressureutils. getandaddrequest for repeat and distinct
added logging functionality and refactored code for better readability to enhance traceability and maintainability of the code
dspace - oai - load dspace - config from servletcontext if available
hbase - 20613 addendum to avoid npe in storescanner
camel - test - allow to configure jmx via camel - test - blueprint
added a constant for CANONICAL _ PACKAGE _ SEPARATOR and updated source path replacement to use this constant to improve code readability and maintainability by
added configuration for YARN binary and shell commands in HiveConf. java and refactored related methods in RemoteSparkJobMonitor. java to
added support for Maria database in the DbConnectionManager to enhance compatibility with additional database types
[ hotfix ] fix checkstyle violation in masterwalmanager and splitlogmanager
added a new file ExecuteAndReturnStringTest. java with a dialog and network error listener to implement and test the functionality of the ExecuteAndReturnString
added a new file InvokespecialInterface. java implementing an interface and invoking a dynamic method to demonstrate the behavior of invoking an interface with
updated the implementation of the EvictingBoundedList class to improve performance and maintainability of the code
don't set encoding manager if turncosts = true
added a check for backgroundDisabled in the SelectBox class to ensure that the selection is non - negative to prevent runtime errors
hbase - 25813 fix npe in rpcserver # gettable ( )
refactor hotseat cell size calculation to include border spacing to improve layout consistency and alignment of hotseat icons based on device profile
updated the construction of ` valString ` to use ` values. get ( " partitionColumnIndex " ) ` instead of ` keyEqual ` to
added support for versioned version in namedtaskdecorator ( # 2451 )
updated directory retrieval from getIndexDir ( ) to getNewIndexDir ( ) to ensure the correct directory is used for replication operations
changed the default value of the ` equal ` variable from ` false ` to ` true ` in ` DisplayModeTest. java ` to ensure
added a check for non - bmp code points in UnicodeToLatexFormatter. java and updated corresponding test cases in HTMLUnicodeConversionMaps
added ISO control validation and adjusted value assignment logic in OAIDCCrosswalk. java and Item. java to ensure proper handling of null
simonstewart : make the selenium - backed selenium test more robust.
added a clear button to the DataBrowser with associated functionality to enhance user experience by allowing users to clear all records in the application
replaced manual port handling with ` UriComponentsBuilder. fromHttpUrl ` in ` OAuth2AuthorizationRequestRedirectFilter. java ` to improve code
updated assertions and error messages in SoftAssertionsTest. java to improve accuracy and maintainability of assertions
modified the adaptOrders method to accept an additional boolean parameter for reverse order handling to enhance flexibility in order adaptation based on the reverse order order
added null check for vartype in PrettyPrinter and created a new Java11Var class with a test method to enhance code robustness and
[ java ] remove unused import and cast to CharSequence [ ] in test classes to improve code cleanliness and ensure type safety
updated Configuration instantiation to use a default value and removed unnecessary check for Hadoop configuration to enhance configuration flexibility and improve code clarity
simplified the call to super. draw ( ) by removing an unnecessary call to super. drawChildren
added unit test base on user forum issue
refactor code to use context. getcatalinabase ( ) instead of Globals. getproperty ( )
added unit tests for ` getBestDateTimePattern ` in ` ShadowICUTest. java ` and modified ` ShadowICU. java `
updated color codes in PlotSquared. java to improve visual representation to enhance user experience by providing relevant color codes
added ZuulProperties as a dependency in TraceRestClientRibbonCommandFactory and TraceRestClientRibbonCommandFactory to enhance
by default, and add test.
added new Java files for ` SampleApplication ` and ` SampleApplication `, and modified ` BuildInfoMojo ` to use ` getBuildTime (
updated xDist calculation in PagedView. java to use absolute values to ensure correct positioning of the scrolling indicator
fix build and delete unnecessary file
removed nullability annotations from LazyMessage and StandardSubjectBuilder classes to simplify method signatures and improve code clarity
updated error message format in TestStream. java to use formatted strings to improve readability and maintainability of the error message
rename thymeleaf. templateparser to thymeleaf. templateparser. markup, and move them to thymeleaf. templateparser. markup
added unit tests for XPath expression evaluation with both " name " and " id " to ensure correctness of XPath expression evaluation
added Nullable annotation to FutureUtils. java to indicate that certain variables may be null to improve code clarity and prevent potential NullPointerExceptions
print a warning if invokedynamic be not resolve during call - graph construction
updated email names in ContextTest. java from " my fakeemail @ gmail. com " to " myrealemail @ example. com "
updated error message format in HttpConnectionTest. java to use hexadecimal format to improve readability and maintainability of the code
added ` getColumnDataType ` method implementations in ` AbstractResultSet `, ` ResultSet `, and ` ResultTableResultSet ` to provide a way to
camel - aws2 - aws2 - dynamodb - add default behavior to the interface
refactor HSSFPictureData class for improved readability to enhance maintainability and facilitate future updates
replaced ` long ` and ` long ` with ` java. time. between ` and ` java. time. toMillis ( ) ` to improve
added version management to LibMediaInfoParser to enhance media info parsing capabilities
added methods for reflecting IdeaDependency in ProjectReader to improve proxy creation and proxy handling for IdeaDependency objects
added a new class ` SerialHeap ` and updated references in ` Universe. java ` to implement a new class ` SerialHeap `
added multiple @ SuppressWarnings ( " serial " ) annotations in Gson $ Types. java to suppress warnings related to serialization in the code
change mouse wheel event to use the current position instead of the position
modified the ` addAppropriateLikeRegexTo ` method to handle null parameters to ensure robust handling of null values and improve test coverage for
( ( ) ) ) should be ( ( )
added an ` retrieveByIssuer ` method to ` XOAuthProviderConfigurator ` to retrieve active identity providers based on issuer and zone ID to enhance
pdfbox - 4892 : fix cmapparser. parse ( byte [ ] ) to correctly parse char [ ]
refactor ContactsBackupJob to use a new ` OperationsServiceConnection ` class for managing operations to improve code organization and maintainability by encapsulating service
added new classes T6938454a, Infer, and T6938454a with generic constraints and methods to enhance type handling and
add an accountid. is _ config _ hidden field to determine if an account be hidden.
added logging for inconsistent display bounds in DisplayController. java to improve debugging and traceability of display state issues
updated schema removal logic in PMetaDataImpl. java and added a unit test for schema removal in PMetaDataImplTest. java to ensure that
ggt - 2481 : use passive login listener instead of load loadhandler
added Box2DTest class and updated Box2DTest to include a new test case to enhance testing capabilities by integrating Box2D
use ` ` < anonymous >'' instead of ` ` - deleted -'' for cf name
[ hotfix ] [ network ] increase hybridshuffleconfiguration default buffer request timeout to 5 minute
chore ( regen ) : update gapic - generator - doc ( # 4382 )
added help button to openoffice integration. html
updated method calls to use childOption instead of option in NettyAcceptor, ProtocolDecodingServer, and ProtocolPublishDecodingServer to improve
updated method signatures in BinanceAuthenticated and BinanceAccountServiceRaw to use generics for better type safety to enhance code clarity and maintainability by
added a transient Class <? > classRef field and refactored class name retrieval logic in ScanResultObject. java to improve handling of
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 6373
added null handling functionality to Querydsl and created a corresponding integration test to enhance query functionality and ensure proper unit testing for null handling
added a null check for the actor in the loop in ParallelAction. java and modified conditions in SequenceAction. java to enhance robustness by
fix ( cttype ) : add test for cttype. getsubtypename ( # 2453 )
added synchronization to the access control of sfWriters in HDFSEventSink. java to ensure thread safety when accessing shared resources
added a new file ` Issue888 _ JavaI. java ` with an interface and its implementation to demonstrate the use of ` JJ `
added a method to revoke an existing certificate in CertificateManager. java and implemented a test for it in CertGenerationTest. java to enhance certificate
added handling for no body responses in AbstractHttpTest. java and implemented a new test for writing body after no body response in HttpServerTestBase
added error handling for missing < script > tag and language in ScriptTransformer. java to improve robustness and provide clearer error messages for script engine
updated connection pooling type from " BONECP " to " DBCP " and added HikariCP configuration to enhance connection pooling capabilities and improve
replaced instances of ` mDevice. pressHome ( ) ` with ` mLauncher. pressHome ( ) ` across multiple files to improve code
added lock and unlock functionality to FileMenuFilter and OCFileListFragment to enhance file management functionality by allowing users to toggle file locking actions
updated version handling in mmm Version. java and ppp Version. java to improve project structure and maintainability
clear endpoint cache in updatekeyspaces. patch by jbellis ; review by brandonwilliams for cassandra - 624
refactor lock state management by introducing a new method ` waitForState ` to improve code readability and maintainability by reducing duplication
refactor SkylarkDescription and SkylarkDescriptionArg to use SkylarkRuleContextAttr for attribute retrieval to improve code modularity and maintainability by
simonstewart : create a new storage interface that can be share by selenium - backed webdriver
fix nullpointerexception when create a view with a select * from a map
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner. java to improve error handling by catching broader types of exceptions
updated query string retrieval logic in SpellCheckComponent. java to ensure the correct query is retrieved from the resource
added validation for header values in Headers. java to ensure only valid header values are processed to prevent runtime errors
replaced instanceSize with arrayBaseOffset in HybridLayout. java and added afterFieldsOffset methods in HostedInstanceClass. java to improve
add @ experimental to astcommentcontainer. setcontaincomment ( boolean )
hhh - 11744 - add ` @ fetch ( fetchmode. join ) ` and ` @ fetch ( lazy = true ) `
refactor NoGetOperationsFilter, NoUserOperationsFilter, and RemoveInternalParamsFilter to extend from AbstractSpecFilter instead of implementing SwaggerSpecFilter
added assertions for database and table names in TestCompactionTxnHandler and set database and tablename in TxnHandler to ensure correct database and table
camel - 1868 : added spi for timerconsumer to allow graceful shutdown of the timer component
added a conditional check before adding traces and removed the currentBlock from worklist to ensure tracing only occurs if the current block is processed
updated the ` ProviderManager ` class to use ` CollectionUtils. contains ` for checking providers to improve null handling and ensure robustness against null elements
simplified the database type check in InsertOrUpdateGeneratorPostgres. java to improve code readability and maintainability
added support for local index limits in SQL queries to enhance query flexibility and improve query performance
added a check to prevent adding a collection with the same name and a different type to ensure that the collection cannot be added with the same name
updated cursor handling logic in VDUBuffer. java and vt320. java to improve cursor management and handle edge cases more effectively
added a constant for retry behavior in HttpShardHandlerFactory to enhance reliability by allowing configurable retries
updated the VERSION _ NUMBER regex in JavaVersion. java and added a test for it in TestJavaVersion. java to improve version parsing accuracy
added a check to return early if all input gates are empty to improve performance by avoiding unnecessary processing when all input gates are empty
added test method to enable a test case for the message source parser
updated return statement to handle null properties gracefully to improve robustness by preventing potential NullPointerExceptions
[ hotfix ] [ runtime ] don't swallow exception in filesystemblobstrategy
( ) should be'' and not''
remove txConfidenceListener from wallet service when a txConfidenceListener exists
added a constant G1 _ PERM _ GEN in JmxSupport. java to support G1 Perm Gen functionality in the application
removed unused imports and simplified the return statement in NearbyController. java to streamline code and improve readability by eliminating redundancy
pdfbox - 2576 : make clonefornewdocument public, a suggest by valerybokov
added checks for non - home activity type in BaseSwipeUpHandlerV2. java to ensure proper handling of non - home activities during gesture
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related constants and methods accordingly to improve clarity and consistency in
updated test methods to accommodate case sensitivity for network country and slot number to improve test reliability and ensure accurate testing of network country
removed the setter of the unfreeze amount in UnfreezeBalanceV2Actuator to streamline the code by eliminating unnecessary variable assignment
fix typo : ` ` per minute'' should be ` ` per match''
simonstewart : use apache common io instead of guava
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the codebase
refactor Observable class implementation to improve performance and readability of the code
refactor update logic to use addMultiFieldOperation and implement new test cases to improve code clarity and ensure functionality for multiple field updates in MongoDB
added a null check before setting the UUID for hubChangeLog to ensure that a non - null UUID is used to avoid potential NullPointerExceptions
added hover event handling in InputConsumer and OverviewInputConsumer classes to improve user interaction by dispatching hover events based on hover events
refactor boostrap configuration handling in CoreContainer. java to improve code readability and maintainability by separating bootstrap configuration logic
camel - netty - http - allow to configure the max header size
hbase. master. default. hbase. tests. hbase. tests. hbase. tests. hbase. tests. hbase. tests. hbaset
refactor source snippet helper to use file. separator instead of file. resolve ( )
fix transient failure in encodedgraphcachetest.
updated the query command from " COUNT ( * ) FROM CUSTOMER " to " all _ tables " and added a new test for query over
added currency metadata handling for Kraken assets in KrakenAdapters. java to ensure accurate currency data representation for Kraken assets
added a ` toString ` method to the ` AnyOf ` class and created a corresponding test class ` AnyOf _ toString _ Test ` to
[ te ] update alert task runner version to v2
( ) ) should be ( ( ) )
allow null to be pass to stepdefs with optional capture group . close # 90 .
refactor IP address filtering logic in NetUtils. java to improve clarity and maintainability of the code
updated DataTextFormatter to use a new method for quoting column names to improve code readability and maintainability by encapsulating column name quoting
added methods for setting and retrieving system properties in WrapSystem. java and refactored imports in StrUtils. java to enhance property management and
add additional updaterequest constructor to allow custom update url to be use
refactor multiple Java files to improve code structure and readability to enhance maintainability and readability of the codebase
( ) ) should'' ( # )
added a method to format the list of module names and improved debug logging formatting to enhance readability and maintainability of the logging output
update row height to match the size of the table
[ hotfix ] fix checkstyle violation in defaultbrokerheartbeatmanager
added mean _ partition _ size and split _ count variables to CqlInputFormat. java to improve handling of partition and split counts in Cql
simplified the conditional check in JUnitTestsShouldIncludeAssertRule. java to improve code readability and maintainability
[ drools - 2576 ] fix npe in ruleterminalnodelefttuple. equals ( ) and hashcode ( )
added import for StageIDsRearranger and resolved StageIDsRearranger if not set to " none " to ensure proper handling of stage
use ` ` org. apache. cassandra. net'' instead of ` ` org. apache. cassandra. concurrent '
updated memory handling logic in LotsOfOutput. java to improve memory consumption logging by including initial and total memory values
added import statements and updated dimension configuration in multiple facet classes to improve documentation clarity and maintain consistency across the codebase
camel - ldap - allow to configure an anonymous - read - only
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
updated @ RunWith annotation to @ RunWith and made EchoInputDoFn private to improve code clarity and encapsulation
added a new method ` finishMocking ` in ` DefaultMockitoSession ` and modified the ` validateMockitoUsage ` method in `
updated dependency handling in GoTestDescription and added new test cases in GoTestIntegrationTest to improve dependency management and enhance testing coverage for genrule
replaced ` buffer ` with ` readBuffer ` and ` writeBuffer ` for better clarity to improve code readability and maintainability by using more des
replaced ` getStaticBlock ` with ` getFlowingBlock ` in ` BlockLiquidWrapper. java ` to improve block structure for better
updated the way the background location listener is retrieved in AndroidLocationPlayServiceManager. java and BackgroundLocationHandler. java to improve the handling of
fix typo find by codespell on travis
[ hotfix ] [ client ] fix clifrontend to work with streamingplan
[ 1.19. 0 ] fix the craftingmanager. getshapedrecipe ( ) method to work with the new version of the
flume - 2271. fix flaky test filechannelrestart test.
removed unnecessary newline character checks in TabsAndIndentsVisitor. java to simplify code for improved readability and maintainability
added a regex pattern to match PostgreSQL temp files to enhance filtering capabilities for improved performance
chore ( regen ) : update generate sample code to set default policy to false
added support for NCLOB data type in various classes to enhance compatibility with NCLOB data types
[ wavefront ] don't publish metric if it's not publish
updated ` ShenyuClientRegisterSpringCloudServiceImpl ` and ` DivideUpstreamUtils ` to include ` springCloudSelectorHandle `
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enable custom listener registration for sensor events
added SSL socket handling methods in SelectChannelServerSslTest. java to improve error handling and logging for SSL connections
added null check before closing the Ignite component to prevent potential NullPointerException when closing the Ignite component
modified print statements in AbstractClient. java to handle cases when the count is zero and adjusted the logic for retrieving the total line number to improve
pdfbox - 4892 : catch exception instead of ioexception, a suggest by valerybokov
added test cases for HDR capabilities in ShadowDisplayTest. java to ensure proper functionality and error handling for display hdr capabilities
added a finally block to reset classLoader to null to ensure proper resource management and avoid potential memory leaks
improve error reporting for bloom filter entry parsing in SemanticAnalyzer. java to enhance debugging by providing more context in semantic exceptions
added a default constructor to the Message class to establish a placeholder for future use
fix bug report on non - gui java. awt. component
updated PhoenixDecimalObjectInspector constructor to accept PrimitiveTypeInfo instead of byteValue to improve type handling and ensure compatibility with Hive's type system
updated CompressionFilterTestServlet, CompressionServletResponseStream, and CompressionServletResponseWrapper classes to improve response handling and enhance response management
updated regex pattern and method parameter names in Authenticator. java to improve clarity and consistency in handling authentication headers
removed conditional check for specific file names in DCD. java to streamline code by eliminating unnecessary checks
updated ThreadLeakTest to use a dedicated method for retrieving thread group name to improve code readability and maintainability by centralizing thread group retrieval
added logging functionality and refactored method calls in MethodInvocationPrivilegeEvaluator. java to enhance logging capabilities and improve code readability
updated package structure and logger path in DmozParser. java to improve organization and accessibility of the DmozParser class
updated imports in RegisteredServiceChainOperatorTypes. java and ChainingRegisteredServiceDelegatedAuthenticationPolicy. java to improve code clarity and maintainability
bug cs - 15443 : add a volume to the vm's storage pool if it's already in the user vm
refactored signal handling in SigInt. java and updated test methods in SigIntTest. java to improve code clarity and ensure proper handling
replaced static import of ArrayUtils. isEmpty with org. apache. commons. lang3. ArrayUtils in NodeTool. java to improve code readability and
disable auto - configuration in spring - cloud
fix checkstyle issue in generator / java / awt / colorRGBA. java
remove unused method and deprecate unused method in planningentityselector
updated ` TwoLevelArtifactCacheDecorator ` and ` ManifestRuleKeyManager ` to include ` artifactBuildTimeMs ` and ` buildTimeMs ` parameters
updated GroupByOperator to use getDeclaredFields ( ) instead of getFields ( ) and modified the condition for handling row sizes to improve field accessibility
wallet : fix npe in addnewblockappearances ( ).
added CNC currency pair and updated ticker retrieval to utilize it to improve currency management and ensure accurate ticker data retrieval
updated skewAllowance from 5 to 15 and refactored skewAllowance retrieval logic to improve clarity and maintainability of the code
updated sorting logic in SongListActivity and Utils classes to use String arrays instead of null to improve sorting flexibility and ensure consistent sorting behavior in the
added a method to read the body as a TypedByteArray and updated the Request constructor to use it to improve request handling and enhance request processing capabilities
move legacyblockwrapper to legacybaseblockwrapper
refactor snapshot retrieval logic in IcebergBranchExec. java and add a test for creating a branch with a tag to improve code clarity and ensure
replaced the use of ` newArrayList ` with ` Collections. singletonList ` in ` AbstractLdapMockMvcTest. java ` to improve code clarity and
photonmapping demo now use getresource ( ) instead of getframenumber ( ).
updated password change validation logic in IdentityProviderEndpoints. java to ensure password change is set for external IDP to improve error handling and provide clearer
removed ` assumeReflective ` from notInitializedInConstructors in ` UnreadFields. java ` to streamline the initialization process by eliminating
added handling for closed connections in JdbcExecutor to improve error reporting for SQL execution failures
added unit tests for handling required and non - existent user data in Spring MVC to improve test coverage and ensure correct functionality of the postForObject
updated regex patterns for user and password in CredentialInjector. java and modified JDBC URL in CredentialInjectorTest. java to improve regex matching accuracy and
added a new menu item " Item4 " and a key binding for the " Item1 " key in ActionListenerCalledTwiceTest. java
updated print statements in TestCoreParser. java to use class canonical names and added a conditional check for results to improve logging clarity and ensure accurate
updated equality checks in SimpleNode. java to use ` id ` and ` other. id ` instead of ` children ` and ` id `
removed the public modifier from the PopulatorContextStackItem class to allow access to the PopulatorContextStackItem class from other packages
replaced ` int ` with ` long ` for ` numDocs ` and added a new test for small sample fields in ` MoreLikeThis ` to
refactor QuestManager to streamline event triggering to improve code readability and maintainability
[ hotfix ] [ network ] make networkbufferpooltest extend testlogger
refactor query construction to use StringBuilder's append method to improve code readability and maintainability
[ sparc ] add unsafegetlong ( object receiver, long offset, boolean locationidentity ) to unsafe.
updated time zone name for Asia / Amman from ARAST to EET across multiple language files
updated the ID in DeprecationLogger. java from 90000010 to 90000011 to accurately reflect the new ID format
hhh - 14632 - fix npe in sessionimpl. getlockoptions ( ) when read - only
remove system. out. println ( ) from downloadexternalfile. download ( )
set apple. laf. usescreenMenuBar to false on macos
added unit test for piecewise ( x ^ 2, x ^ 2 )
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ( ) ` methods from private to protected
added a new test method ` testConfigWhiteList ` to validate the behavior of the ` set ` method in ` TestJdbcWithSQLAuthorization
removed an entry from the invalidClasses map to streamline the code by eliminating unnecessary entries
updated target variable to use player. team ( ) instead of the sharded variable to ensure accurate retrieval of the current team for accuracy
updated Cookie. Builder to use domainHelper. getHostName ( ) instead of hardcoding " comp1 " to " domainHelper. getHostName ( )
added validation logic for nullable columns in the MissingColumnChangeGenerator, MissingTableChangeGenerator, and ColumnSnapshotGenerator classes to ensure that nullable columns
updated multiple security - related Java files to improve code structure and maintainability
added delete and query tests in CustomCollectionTest. java and made several variables final in CompositeIdRouter. java to enhance collection functionality and improve code
added snapshot generation functionality in ` ExecutablePreparedStatementBase ` and refactored related methods in ` PostgreSQ integrationTest ` to enhance database
updated cache size checks and improved formatting in DefaultServlet. java to enhance code readability and maintainability
implement drag and drop functionality in JabRefFrame and OpenDatabaseAction to enhance user experience by allowing users to choose between copy and drag -
updated test cases to use Description. createTestDescription instead of createDescription to improve clarity and maintainability of the test code
updated the version check from ` myVersion. isEmpty ( ) ` to ` StringUtils. isNotEmpty ( myVersion ) ` to ensure that the version
changed method visibility from public to package - private for several methods in TimeUtils. java to restrict access to these methods for better usability
updated security frame and injected method handling in tests to improve compatibility with different Java versions
updated file extension check from " jpg " to ". jpeg " in PreviewImageFragment. java to ensure correct file extension is used in the
[ gr - 25836 ] fix debug info generation for host method
added icon functionality to Data, Data, and DataTableTopComponent classes to enhance image loading capabilities for improved user experience
updated substring logic in CounterRequestAggregation. java to handle cases where the last character of the request name is invalid to improve robustness by ens
should be ` `'', not `''
fixed an issue that could cause a nullpointerexception when try to connect to a jabber account.
refactor SchemaExtractionProcessor to improve code organization to enhance maintainability and readability of the code
added a new method ` copyDir ` to copy files based on specified source and destination paths to enhance file copying functionality and improve error handling
added exception handling for unknown datum classes in JacksonUtils. java to improve error management and provide clearer feedback for unknown datum types
replace method calls to ` buildAbiFromClasses ( ) ` and ` buildAbiFromSource ( ) ` with ` libraryTarget `
simplified height calculations in SelectBox. java to improve readability and maintainability of the code
added normalization for database and table names in ObjectStore. java to ensure proper handling of identifiers during database and table operations
updated schema retrieval logic in DbSqlSession. java to ensure correct schema is used for Oracle databases
removed unnecessary Logout call in HomeFragment. java to streamline the code by eliminating unnecessary API call
only once ( # 2 )
added null check for the candidates list in FastImportAction. java to ensure robustness by preventing potential NullPointerExceptions during processing
updated the condition for checking if a bean is managed in ContainerLifeCycle. java to improve clarity and correctness of the lifecycle management logic
rename iexecutionattributesdialect to iexecutionattributedialect
added a call to ` metadata. clearUnsafe ( ) ` in ` AlterTest. java ` to ensure that ` metadata ` is cleared before
fix npe in gettime ( )
added a custom exception handler for handling exceptions in DisruptorQueue to improve error handling and logging during application startup
deleted the Session2Token class from the project
cloudstack - 7143 : delete volume when volume be delete from secondary storage
added a new Install class and integrated it into SystemShortcut to enhance shortcut installation functionality for better user experience
added a NullAuthoritiesPopulator class and updated LdapAuthenticationProvider to use it to provide a default role when no authorities are provided
modified the way the retrolambda JAR is retrieved and set in the Executor and CN1BuildMojo classes to allow dynamic configuration of the ret
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera. java ` to improve code readability and maintainability
refactor the ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` to improve code clarity and reduce dependency on `
pdfbox - 4892 : fix npe in jme spathextractor
sec - 186 : fix npe in authorizeticket. getauthorities ( )
updated logout URL assertions to use " https : / / " instead of " https : / / " to improve clarity and consistency in URL formatting
and a - - - - - - - - - - - - - - - - - and - - - - - - - -
refactor configuration handling in RobolectricTestRunner to use separate method and test configurations to improve code clarity and maintainability by consolidating configuration logic
replaced SelectChannelConnector with SocketConnector in JettySolrRunner. java to align with the updated Jetty API
refactor partition key comparison logic in HiveAlterHandler to improve clarity and maintainability of partition key validation
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags. java to enable the icon in textheader section
updated the component active check in SimulationStatus. java to ensure proper handling of component activation status
replaced ` SharedBlockingCallback. Blocker ` with ` Callback. Completable ` in multiple files to simplify the implementation and improve code clarity
added workspace listener functionality to the PreviewControllerImpl class to enable dynamic updates of the preview graph based on the current workspace state
added a check for VM anonymous classes in ReflectionFactory. java and modified class name retrieval in ReflectUtil. java to improve handling of anonymous class
refactor TransportHelper class to improve code structure to enhance maintainability and readability of the code
updated file path formatting in CatalinaAcegiUserRealm. java to improve code readability and maintainability by using ResourceLoader
updated logging messages to include " Initializing ActionManager " and " ActionManager " instead of " Server " and " ServerForAgent. " to
updated condition checks and added null checks in JSONWriter. java to enhance code robustness and prevent potential NullPointerExceptions
refactored the ` run ` method in ` SliderAppsViewControllerImpl. java ` to simplify the method signature and improve user context handling
added a check for background manager's attached status before attaching it to the background manager to ensure that the background manager is only attach if it
set the current tab to 1 in multiple classes and adjust child width calculations in PagedView and Workspace to improve tab management and ensure proper layout
added a null check for the URL parameter in BaseDataSource. java and created a test for PGSimpleDataSourceTest. java to improve error handling
updated PebbleTemplateEngine instantiation to include JRE compatibility checks to ensure compatibility with different Java environments and improve test reliability
added EditNameDialog functionality to facilitate directory creation in FileDisplayActivity to improve user experience by allowing users to create files with a specific
added functionality to toggle bar border widths in multiple activity classes to enhance user experience by allowing customization of bar visibility options
updated SSL URI from " https : / / www. okcoin. com / api " to " https : / / www. okex
[ jbrules - 3142 ] fix a unit test that fail due to the new best score comparator.
refactor file reading to use a SeekableByteChannel instead of FileChannel to improve performance and streamline input stream handling
[ hotfix ] [ runtime ] fix npe in flattenrecordbatch
renamed ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
removed redundant check for serialization types in SerializationConfigurationParser. java to streamline code for better readability and maintainability
added heavy - heap limit configuration in QuickstepProcessInitializer to improve application performance on debug devices
refactor ` sumWithCompensation ` method calls to use a variable for better readability to improve code clarity and maintainability by reducing redundancy
log4j2 - 1343 : fix unit test that be fail on the ci - server
refactor the serialization logic in PrecompactedRow. java to improve code readability and maintainability
updated return statements in ICC _ Profile. java and ColorConvertOp. java, and added a new InvalidRenderIntentTest. java file
add meterregistrylifecycler to auto - configure meterregistry. close ( )
only once ( # )
added exception handling for certificate generation in CertificateFactoryTest. java to ensure proper handling of CertificateException during certificate generation
camel - core - fix issue with ambiguous binary predicate
refactored the ` onTabUnselected ` method in ` EditorActivity. java ` and added focus handling in ` IDEEditor. java
add user. name property to accesslogvalve error log message
updated matrix scaling and added null check for submesh names in OgreXmlLoader. java to enhance stability and prevent potential NullPointerExceptions
removed ` throws InterruptedException ` from the method signature of ` createOrThrow ` to simplify the method signature and eliminate unnecessary exception handling
added @ Deprecated annotation to UpgradeResponse. java to indicate that these classes should no longer be used
added support for the " dtsout " option in the JSweet transpiler to enable users to specify the generation of generated d. ts
[ kinesis ] make fetchtimeout configurable in streamconfig
[ stream ] change streamingdataflowworker to use. html instead of. html.
increased the maximum thread pool size for the metastore server from 100, 000 to 1000, 000 to improve performance and scalability of the Hive
changed the return type of ` onTaskSnapshotChanged ` from ` void ` to ` boolean ` and added a return statement to provide a boolean
updated shadow radius setting from mMaxShadowRadius to shadowRadius to ensure proper animation behavior by using the correct shadow radius
added a new test method ` chainNestingAndAggregation ` to ` ChainParserTests ` to ensure that the ` aggregatorInput ` field is
modified loop condition in MarketSellAssetActuatorTest. java to check if the range exceeds the end range to ensure the loop does not
use isinteractive ( ) instead of isinternal ( ) to check if the source be interactive.
updated conditional logic in CreateKeytabFilesServerAction. java to handle null cached file cases to improve robustness by preventing potential NullPointerExceptions
added DisplayController import and modified WindowManagerProxy instantiation to include DisplayController to enhance functionality by integrating display management within the application
updated toolTipText assignment logic in MetalFileChooserUI. java and SynthFileChooserUIImpl. java to ensure correct tooltip text is displayed for
replaced ` getToolkit ( ). getScreenSize ( ) ` with ` Toolkit. getDefaultToolkit ( ). getScreenSize ( ) ` to
changed the return type of the recognise method in TensorflowRESTCaptioner and TensorflowRESTRecogniser from List <? extends RecognisedObject
added unit tests for fetching results with factory expressions in JPASQLBase. java to enhance test coverage and ensure correct retrieval of results with factory
removed debug print statement from FreeformFinSetConfig. java to streamline code by eliminating unnecessary debug output
updated moeVersion from " 1.2. 2 " to " 1.2. 0 " to reflect the latest version of the moe library
corrected a typo in the error message from " canot set call value. " to " cannot set call value. " to improve clarity and
updated error message formatting to include newline characters to improve readability of error output for better debugging
added a @ Deprecated annotation to the Weights class to mark the class as outdated and indicate that it should no longer be used
add support for platform - specific unsafe plugins
added Hint annotation to AndroidAppModularityDescription and AndroidGraphEnhancerArgs, and created new classes Sample and AndroidBinaryModularIntegration
changed the value of mCenterPagesVertically from true to false to disable the center page vertically feature for improved user experience
[ hotfix ] [ table - planner ] call migrationinfo. doneprocessing ( ) instead of migrationinfo. doneprocessing ( ) in
[ konnected ] update konnected to use baseurl instead of moduleipaddress
updated ` WSFederationClaimsReleasePolicy ` to use a list of ` Object ` objects instead of a single ` Object ` to
updated test table creation and query handling in TestJdbcWithMiniLlap. java and LlapBaseInputFormat. java to improve database management and
added a new test case in CaseExpressionTest. java to validate SQL parsing and deparsing to ensure correct parsing and deparsing of
added mouse event handling for copy mode in ConsoleActivity to enhance user experience by enabling copy mode functionality on devices running Android Ice CREAM
refactor ` writeXmlOutput ` method to use ` DocumentBuilderFactory ` and improve XML output handling to enhance code readability and maintainability while ensuring
camel - 7999 : fixed npe in aggregator when use empty split.
camelexchangeexception should include cause when create the exception message.
move basicconfigurator from logback - classic to logback - classic
added a condition to check if targetVN is not null before comparing sourceVN to ensure that the targetVN is not null before
removed unused import of SharedStringSource in TestXSSFRichTextString. java to streamline dependencies and improve code clarity
added a static method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with specified parameters
refactor BoxAndWhiskerCalculator, BoxAndWhiskerCategoryDataset, BoxAndWhiskerXYDataset, and HistogramDataset classes
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit5
changed ` NormUpdate ` class to static and updated ` equals ` and ` equals ` methods to use ` equals ` instead of ` equals `
changed the visibility of the singleton instance and its constructor from public to private to enhance encapsulation and restrict instantiation of IndexFileNameFilter
refactor ifstatementtest to use testplugindefinition ( )
replaced the method ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl. java ` to
refactored the ` nullSafe ` method in ` TypeAdapter ` to remove the ` nullSafe ` method to streamline the code and
should not be an an exception
added EXIFReader and EXIFReader classes for handling image metadata to enhance image processing capabilities and improve metadata handling
use standardunit. none instead of standardunit. unknown _ to _ sdk _ version
[ rhdm ] fix npe in applypmmlmodelcommand
- - - - - - - - - - - - - - - - - - - - - - - - - - - -
added a check to ensure the bar bar is visible before proceeding to prevent unnecessary processing when the bar is not visible
[ gr - 25836 ] avoid illegalargumentexception during aarch64 backend.
added error handling for initialization of JDKLogManager in JDKXRLogger. java and introduced a new test for concurrent initialization in XRL
added a ` find ( Class < Ticket > ticketClass ) ` method to ` TicketCatalog ` and updated debug logging to include the ticket class
refactor TestSSL. java to improve code readability and maintainability to enhance maintainability and clarity of the SSL connection logic
( ) ) ) should open
updated the constructor of ` Read ` and ` Write ` to use ` null ` and ` Long. MAX _ VALUE ` instead of default values
updated PluginHandleController, PluginHandleDTO, and PluginHandleDTO to include type and sort parameters to enhance plugin management functionality by allowing type and
updated method calls from ` nextSpan ( ) ` to ` start ( ) ` in ` DefaultSpanCreator ` and ` SleuthAdvisor
added configuration options for GLKViewDrawable color, stencil, and multisample in IOSApplicationConfiguration and IOSGraphics to enhance flexibility and
refactor login test to use ` attemptLogin ` method instead of ` findElement ` to improve code readability and maintainability by consolidating login logic
( ) should not be ( ) - > ( ( ) )
refactor lock name retrieval to use a do - while loop to improve code readability and maintainability
refactor Implements and ShadowPicker classes to improve code structure to enhance maintainability and readability of the codebase
refactor HttpClientOptions initialization to use a dedicated method to improve code readability and maintainability by reducing method calls
added a check for DynamicArray class type and improved type handling in SolidityFunctionWrapper to enhance type validation and provide clearer error messages for
updated ` getStringProperty ` calls to include a ` true ` parameter in ` InlineLayout. java ` and ` FontUtil. java ` to
added constructors to ` CopyStep ` that accept ` Path ` parameters and created a corresponding test in ` CopyStepTest ` to enhance flexibility in
fixed - rsemaphore. addpermits ( ) method don't call after addpermits ( ). # 3
camel - jbang - fix unit test for camel - aws2 - dsl
added FlavorParser to handle parsing flavor strings and updated BuildTargetParser to use it to improve code maintainability and readability by centralizing flavor string parsing logic
updated the type of the ` al ` and ` saveActiveWitnesses ` methods from ` List < String > ` to ` List <
added a check for non - empty results in TestElementsAnnotatedWith. java to ensure that the output is only printed when there are results to
added a new class ` RemoveLeak ` and modified ` ConcurrentLinkedQueue ` to utilize this class to improve memory management and prevent potential memory
added a boolean parameter ` addSpecialTokens ` to multiple ` encode ` methods in ` HuggingFaceTokenizer ` to provide additional functionality for
[ hotfix ] use collections. ncopy instead of arraylist. add
[ iotdb - 6481 ] fix load single - ts file load bug ( # 3391 )
added session storage context and action handling in the BrowserSessionStorage and DuoSecurityMultifactorWebflowConfigurer classes to enhance session management
simonstewart : add a unit test for the schema validation issue
added a default constructor to TypeAdapter and updated the @ Ignore annotation in Java17RecordTest to disable tests until the record support is added
refactor debugger event handling by introducing a ` isKillPrepared ` flag and modifying the ` kill ` method in ` SuspendedEvent ` to
refactor AntPathRequestMatcher to improve path matching logic to enhance performance and maintainability of path matching functionality
added type parameter to the createResourcePolicy method in multiple service classes to ensure consistent handling of resource policy types
added null check before releasing deflaterEntry in GzipHttpOutputInterceptor. java and improved test assertions in BlockingTest. java to enhance resource
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup after each test execution
added normalization for " unknown Unicode char 65533 " in CheckSum. java to ensure accurate checksum formatting for unknown Unicode characters
refactor command handling and improve completer management in Example. java to enhance code clarity and maintainability while ensuring proper command handling
pdfbox - 2576 : make keylistener final and add multiple @ override annotation
replaced the type casting of ` objectToSave ` from ` T ` to ` DBObject ` and added a new test for saving JSON strings
added a method to check if an IP address contains multiple remote addresses in RequestUtils. java and created a corresponding test in RequestUtilsTest.
changed return type of getJobArgs and getJobArgs methods from String to ObjectBuilder to improve JSON handling capabilities in the code
refactor CookieManagerTest and UnmodifiableMaps to use dynamic host address retrieval and improve error handling to enhance reliability of server address retrieval and provide clearer
added whitespace handling in GlyphLayout. java and updated tests in BitmapFontTest. java to ensure proper handling of text wrapping and improve test
added pauseOrResumeSplits and resumeSplits methods to PulsarSourceReaderBase and PulsarPartitionSplitReaderBase to enhance split management
added a new configuration variable HIVESCRIPTIDENVVAR in HiveConf. java and integrated it into ScriptOperator. java to enable dynamic
refactor ` getListedTermCounts ` method to use ` stream ` instead of ` for ` for ` to improve code readability and maintainability by
added a new action class ` UseSeparateStepSizeAction ` to manage the separation of step sizes in the application
refactor FileMenuFilter to use final modifiers and improve file locking logic to enhance immutability and ensure proper handling of file selections
hbase - 25836 addendum patch by jbellis for hbase - 258
''''' should'''' '
pdfbox - 2576 : use ioutils. close ( ) instead of manual null handling
added fullscreen mode functionality in GwtGraphics. java to enhance user experience by allowing different display modes
updated WebfingerIssuerService to use URI instead of String and improved resource normalization logic to enhance URI handling and provide better error logging for resource
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate the configuration of ` SoulApacheDubbo
replaced ` Gdx. files. internal ` with ` Gdx. files. resolve ` in ` SkinLoader. java ` to ensure correct file
updated logging level from warn to info in OidcDefaultJsonWebKeystoreCacheLoader. java to improve log severity for better visibility and
changed PMS. REALTIME _ LOCK. lock ( ) to PMS. REALTIME _ LOCK. lockInterruptibly ( ) in multiple
updated package declaration in mmm Compiler. java and ppp Compiler. java to improve organization and clarity of the code structure
fix false positive in null dereferences
use defaulthttpdatasource in dashrendererbuilder
added configuration property for maximum number of prepared statement per connection
renamed the method ` set ` to ` set ` in multiple configuration classes to improve clarity and consistency in method naming conventions
added error handling for command operations in AutoScalingHandler to improve error management and provide clearer feedback during command execution
refactor CombinedDataset class to improve code readability to enhance maintainability and ease future updates
changed the variable name from'buf'to'b'in InflateIn _ DeflateOut. java to improve code readability and maintain
added a method to remove cryptography restrictions and updated permissions handling in Utilities. java to enhance security management by ensuring restricted cryptography restrictions are
fix chunk teleportation when the player be try to teleport
added a new test method ` testPageMarginsLongTextTransform ` to the ` TextVisualRegressionTest ` class to ensure the functionality of
added null check for vContext before accessing its properties to avoid potential NullPointerExceptions during vectorization operations
updated the speed setting logic in WialonProtocolDecoder. java to ensure accurate parsing of the speed value
hbase - 25837 set default metric user to false in hbase - regionserver
added a ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to provide a way to check if
updated boolean flags for user presence, visibility, and attached in Launcher. java to improve clarity and control over receiver registration logic
refactor AsyncFile, HttpClientRequest, HttpClientResponse, HttpServerRequest, and NetSocket classes to improve code organization and maintainability
added params to the zadd method in PipelineBase. java to provide additional parameters for the client's zadd operation
updated metadata assertions and added unused URI handling in various classes to improve code clarity and ensure proper handling of unused URIs
rename testasyncmessages to testasyncmessagesperformancetest instead of testasyncmessages
added a method to retrieve an Optional of TargetNode and updated related logic in VersionedTargetGraphBuilder to improve handling of unversioned targets and
updated EPOCH _ SECONDS _ HIGH and EPOCH _ SECONDS _ LOW constants to use new constants to improve code readability and maintainability
modify the return value in EscherBlipRecord. java and add a new test class TestOLE2Embeding. java to
updated initialization of row and column variables in JSONParser. java to improve clarity and maintainability of the code
refactor ` FindTypes ` and ` JavaType ` classes to use ` Pattern. compile ` instead of ` JavaType. FullyQualified `
updated DETAIL _ THUMB _ HEIGHT and introduced ACTION _ PLAY _ TRAILER for playback tracking to enhance user experience by providing a more
added a method to remove glyph information from the cache in CStrike. java and modified pointer freeing logic in CStrikeDisposer
add test for terminateallbehaviour and deleteprocessinstancecascend event
camel - 16400 : fixed typenamestrategy to work with both xmltype and xmlelement
updated HTTP endpoint from " http : / / www. apereo. org / scottb. html " to " https : /
added option to reset all preferences to default value
hbase. thrift. thriftmetrics should be extend to allow subclass to access these metric
remove deprecate channel ( # 14453 )
use hamcrest assertion instead of junit in examples / integrations / neo4j / neo4j - mp
removed duplicate code for stopping expansionHelper in TweetActivity. java to streamline code by eliminating redundancy
added ` equals ` and ` hashCode ` methods to ` PartitionFactory ` and ` PartitionPanel ` classes to enhance object comparison and hashing functionality in
cloudstack - 7143 : add disk size to customparameters if not already present in the db
added preference - based logic for showing suggestions in the PredictionRowView to enhance user experience by allowing dynamic visibility based on user preferences
[ geos - 6482 ] add a way to set a cr for a bbox in the apibboxparser
added validation for valid value and position parameters in LibrustzcashParam. java to ensure input is valid
mark ithrowableentity a deprecated and mark it a deprecate
added random values for x and y in NodeDataImpl. java to enhance the randomness of node data generation
renamed the test method from ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for handling missing scopes
refactor the initialization of ` declaredDepsBuildResult ` and ` firstOrderStderr ` in ` JavacStep. java ` to improve code clarity
update version string from " 0.9. 1 " to " 0.9. 2 " to reflect the latest release and improvements
added a condition to check for ITEM _ TYPE _ DEEP _ SHORTCUT in LoaderCursor. java to ensure proper handling of DEEP
added a hashCode ( ) method to the TimeGranularitySpec class to ensure proper hash code generation for different data types
changed visibility of BooleanWeight and DisjunctionMaxWeight classes from private to protected to allow subclass access to these classes
added a boolean flag to control proxy response code in HttpURLConnection to ensure proper handling of NTLM requests based on response code settings
aarch64 : use aarch64. aarch64. sp instead of aarch64. sp for aarch64.
bug 10719 : don't use system vm's static capacity in listvirtualmachines command
added a null check for the maximum score in JSONResponseWriter. java and included a new query in TestDistributedSearch. java to ensure that
updated audio buffer size from 22050 to 44100 in AudioRecorderTest. java to accommodate new audio playback features
updated the calculation of newOriginX in RocketFigure. java to ensure correct calculation of newOriginX based on subjectBounds and scale
updated exception handling in DruidQueryBasedInputFormat. java to check for non - empty data source and set default interval to a default interval to
added ` ORIGINAL _ TYPE ` and ` ORIGINAL _ NAME ` constants to the ` CustomProperty ` class and updated the regex pattern accordingly
added a static method ` create ` to create an ` IndexImpl ` using a ` Table ` and a ` Map < String, Object >
corrected a typo in the boolean variable name from ` isBetweenGivenPeriod ` to ` checkUpperBoundaryPeriod ` to improve code readability and maintain
updated SchemaCompatibility and TestSchemaCompatibilityTypeMismatch to include index and improve compatibility checks to ensure correct handling of incompatible schema formats and enhance test coverage
added imports and refactored entity path handling in QueryUtils. java to improve code maintainability and enhance functionality for handling entity paths
added synchronization to the ArrayList of spans to ensure thread safety during concurrent access to spans
changed method parameters from List < Object > to List <? > in multiple classes to improve type flexibility for various methods in the application
added logging for InvocationTargetException in ViewContextImpl. java to improve error handling and logging for authentication failures
refactor OAuth2AccessTokenEntity to improve access token handling to enhance security and maintainability of the access token management code
updated error messages in SCBEngine, TestInvocationFactory, TestSCBEngine, TestInvokerUtils, and HighwayServerInvoke classes to
added new project file entries for " ios / data / Default - 1024w - 1366h @ 2x ~ ipad. png "
updated TestSearcherManager to use ConcurrentMergeScheduler with ConcurrentMergeScheduler to enhance thread safety during merge operations
updated condition in QTestUtil. java and refactored list processing in GenericUDTFInline. java to improve handling of empty lists and
refactor MapIterable, FJIterate, and ParallelIterate classes to improve code organization and maintainability
ticket : 2842 -- prevent browser from be close when click on a cell
hhh - 15737 - fix npe in osgibleservice. stop ( ) and osgessionfactoryservice.
fix incorrect elapsed time calculation in hikariconfig. start ( )
add a non - packaged resource directory to the voice compiler
updated file name handling in Compat. java and FileOpener. java to improve code clarity and ensure proper file path processing
changed the return type of the row ( ) method from Cell < T > to void to allow the method to return a void instead of the
( ) should have same port ( )
added null mask generation functionality to WebSocketClient and updated WebSocketConnectionD12 instantiation accordingly to enhance WebSocket connection handling by allowing optional masking generation
refactor ` genUDTFPlan ` method to return a ` Pair < RelNode > ` instead of an ` RelNode ` to improve
added tracking for bucketed and non - preferred nodes in NodeScheduler and related classes to improve tracking of selected and non - preferred nodes in the
added a new file ` Person. java ` with a ` name ` property and its associated getter and setter methods to establish a structure for the
added a boolean variable ` hasOwnerPtr ` and modified the execution logic in ` CPlatformWindow. java ` to improve code clarity and ensure
added animation and playback functionality in PlaybackOverlayFragment to enhance user experience by providing visual feedback during playback
remove redundant calls to ` world. updateComparatorOutputLevel ` and ` world. updateComparatorOutputLevel ` to streamline code by eliminating
changed the access modifier of the IMPL variable from static final to static and modified the exception handling in SegmentReader. java to improve code clarity
refactor Sudoku cell update event to run on the Event Dispatch Thread to ensure that events are executed on the Event Dispatch Thread for thread safety
replaced instances of ` DefaultInetAddressAdapter ` with ` CollectionTypeAdapter ` and removed ` DefaultInetAddressAdapter ` to simplify the code and
added new constants and methods for handling double, long, and boolean values in Series. java and corresponding unit tests in DataFrameTest. java to
updated audio time stretch option from " -- no - audio - time - stretch " to " -- audio - time - stretch " to align audio
[ geot - 5486 ] use math. max ( ) instead of math. min ( ) and math. max ( )
cloudstack - 7185 : use getdiskofferingid ( ) instead of getid ( ) to get diskofferingid ( )
added JUnit Before and After annotations to HazelcastTest. java to ensure proper cleanup of resources before and after tests
added tests for various cipher modes in BlockCipherTest. java to ensure correct handling of cases with missing or invalid cipher modes
added " going to print operations logs " in QFileClient. java to improve logging clarity during operations processing
fix issue with @ child and @ inject ( parent interface )
fix npe in the protocolproviderserviceprovider when the current connection address be null.
replaced ` Math. addExact ` with ` MathUtils. cappedAdd ` for demand calculation to simplify the code and improve performance by using a
refactor image output stream handling to use try - with - resources for better resource management to ensure proper resource handling and prevent potential memory leaks
replaced direct calls to ` TvApp. getApplication ( ). showSearch ( ) ` with ` Intent ( Intent, SearchActivity. class
reformatted the ` toString ( ) ` method in ` SchemaCrawlerCommandLine ` and ` GrepOptions ` classes for improved readability to enhance
http : / / issues. apache. org / jira / browse / amq - 3573 - allow the web console to be configure
added PersonRepository bean to RepositoryIndexCreationIntegrationTests to facilitate dependency injection for repository management
updated method signature from Exception to InterruptedException in UIServer. java and corrected log message format in TestVertxUIManual. java to improve
feat ( cactus ) : update cactus enum to match cactus enum
fix hit area , implement drag event for theme selection
[ java ] move abstractminmulticastflowcontrol to abstractminmulticastflowcontrolrhspadding
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation and IOSNative classes to enhance functionality by allowing customizable text alignment
don't throw exception for unknown tokenization model
added a check for distinct queries in ClusterIntegrationTestUtils and modified group column logic in QueryGenerator to enhance data handling and improve query generation logic
make jninativelinkage. getsestlinkage public.
bug 58731 - update jmeter version to 1.0. 0 - rc1
added null check for children before iterating to prevent potential NullPointerException when children is null
added tokenPosition and currentPosition fields to MessagePackParser and implemented parsing logic to enhance message packing functionality and improve error handling
added locale management after tests in AbstractSolrMorphlineTestBase. java to ensure consistent locale handling during tests
refactor status bar size calculation in LauncherFragment. java to streamline code for better readability and maintainability
added unit tests for the MetricsReporter class to ensure correct registration and registration of metrics in the application
camel - test - infra - osgi : remove unused private field typecachemap
added equals and hashCode methods to the Rectangle class to ensure proper object comparison and hashing functionality
( chore ) camel - kafka : use unique name for test
refactor DSAParameterGenerator to use BigInteger. ONE instead of BigInteger. ONE for clarity to improve code readability and maintainability by using a more
added support for the AM machine's FQDN in the LLAP job configuration to enable the use of FQDN for the AM
use asserteventually in clientoutofmemoryhandlertest.
added a method ` getCmoObjectId ( int shapeId ) ` to ` AbstractShape `, ` ComboboxShape `, ` CommentShape
added a new test method ` testWithDistinctScalarQuery ` in ` DistinctTest. java ` to validate distinct query functionality in the database
updated Driver, SearchTravRetLoadFieldSelectorTask, and SearchTravTask classes to improve code organization and maintainability
added bind and unbind extension adapter method to managedkubernetesclient to enable binding and unbinding of custom adapter
updated subtitle and text settings in DetailsDescriptionPresenter. java and added media stream handling in Utils. java to improve user experience by displaying relevant information
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in TestAuthHandlerBoot, TestRSAProviderTokenManager, and TestRSAProviderToken
do n ' t let an exception in generate the summary html prevent output .
replaced calls to ` intPool. reset ( false, false ) ` with ` bytePool. reset ( ) ` in ` TermsHash.
added multiple @ Override annotations in FilterInputStream. java to ensure proper method overriding and improve code clarity
added a new class ` WindowSessionDelegateU ` and modified API level checks in ` ShadowWindowManagerGlobal. java ` to enhance compatibility with
ww - 1950 urlhelper . buildurl do not output port even if forceaddschemehostandport turn on ( testcase include )
added support for MSSQLDatabase in foreign key constraint generation to enhance compatibility with MSSQL database handling
hbase - 24680 addendum fix test _ bug in hbase - replication
fix an issue with the emzuli pipe and add a new filtereventhandler.
simonstewart : add a logging option to the htmlidentifier
[ hotfix ] [ table ] fix typo in hivelookuptablesource
improve thread safety in listenerset. notify ( ).
added import for CatalogAndSchema and updated SCHEMANAME construction in SequenceSnapshotGenerator. java to enhance schema handling for improved database compatibility
updated color handling in SpriteBatch, SpriteCache, LwjglDebugStarter, AlphaTest, and AlphaTest classes to improve color management and
fixed - npe in connection. join method ( ) and connection. join ( ) method.
added a check for the presence of the base core before adding it to the statisticYearCores collection to ensure that only relevant cores are stored in
renamed the ` launchTask ` method to ` launchTaskFromView ` and updated its implementation to improve clarity and functionality when launching tasks from the
updated MorfologikFilter constructor to accept a resource path instead of a resource path to improve flexibility and maintainability of the Mor
updated sorting options for community and critic rating to ensure correct sorting of sorting options based on user preferences
added imports for ViewKt and ListRow, and modified visibility logic for header item in CustomListRowPresenter to improve UI consistency and ensure
added a try - finally block to ensure the start list is released after the switch statement to improve resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability to enhance maintainability and ease future updates
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof DB2Database ` in multiple files to ensure compatibility with DB2 - specific
add support for java. time module in json serialization.
use slf4j instead of log4j
replaced TypeBearer with Type in PhiTypeResolver. java to simplify type handling and improve code clarity
refactor CoinbaseTransaction and CoinbaseTransactionStatus classes to improve code readability and maintainability
added a method to retrieve build targets in BuckConfig and updated ProjectCommand to use this new method to improve build target management and enhance project
removed redundant initialization of IdleStrategy in Ping. java to streamline code by eliminating unnecessary variable declaration
updated OCFile constructor to use ContentResolver instead of ContentProvider to improve type specificity and enhance logging accuracy
removed unnecessary state change checks in ReportPanel. java to streamline code for better readability and maintainability
[ hotfix ] [ test ] fix checkstyle violation in testinglogicalslot
added a new class ` RemoveCallsToSystemGc ` that removes calls to ` System. gc ( ) ` and ` Runtime. gc (
removed redundant calls to super ( ) in multiple exception classes to improve code clarity and maintainability by eliminating redundant superclass calls
added an override for the ` setUIID ` method in ` ScaleImageLabel ` to ensure the UIID is correctly set based on the
refactor FeedUpdateService to use a single'update'variable instead of'foundEntry'to improve code clarity and maintainability by using a
added support for additional command - line arguments in Main. java to enhance command - line options for better command - line execution
fix compiler option in ` avutil. java `
updated initialization logic in StorageService. java to ensure proper initialization of the storage service
updated Test7196045. java file to improve test coverage and ensure reliability of the code
updated density and decay values in ShaderParametersLightShaft. java to improve lighting accuracy and performance
added'withState'and'stateData'options to OidcConfiguration and updated OidcRedirectActionBuilder to use these options
fix : optimize unique constraint handle for platform that do support them on nullable column ( # 1095 )
updated federated sharing logic in UsersAndGroupsSearchProvider and EditShareFragment to include federated sharing option to enhance user experience by allowing fed
added an override for the needsDocValues method in TestBBoxStrategy to ensure proper handling of document values in the test cases
updated BufferAlignmentAgent and BufferAlignmentInterceptor to improve error handling and introduced new classes for better alignment management to enhance code clarity and maintainability while
added a new method ` intForEach ` to the ` Int2ObjectHashMap ` class and updated the ` IntObjConsumer ` interface to
( ) ) at at once ( # )
changed return type of count ( Predicate predicate ) from Long to long in QueryDslMongoRepository, QueryDslPredicateExecutor, and Simple
) should be at most if it be at
updated the dotProductScore method in VectorUtil and TestVectorUtil to improve accuracy of the dot product calculation
added methods to set and retrieve the latest confirmed block number in DynamicPropertiesStore and Manager classes to enable dynamic adjustment of block numbers based on
replaced the method setLocale ( ) with Systems. setLocale ( ) in GpsMainActivity. java and added logging functionality in Systems
added a new boolean flag ` wasNewDbCreated ` and updated its usage in ` LauncherClings. java ` to track whether a new
refactor collection handling in BasicAclEntryAfterInvocationCollectionFilteringProvider. java to improve code readability and maintainability
added null check for datamodel and OS _ ARCH in Constants. java to ensure robustness by preventing potential NullPointerExceptions
added thread - checking logic in TestIndexWriterDelete. java to prevent potential deadlocks during execution
changed the visibility of the closeDatabase method from private to protected to allow subclasses to access the closeDatabase method from other classes
updated imports and references from ` apiclient. model. dto. BaseItemPerson ` to ` sdk. model. api. BaseItemPerson `
added functionality to set attributes from the XML element in BatikSVGDrawer to ensure proper handling of imported attributes in the document
added catch block for IllegalArgumentException in ConsoleKeys. java to improve error handling and logging clarity
added support for the " WaitForResult " flag in AndroidImplementation and CodenameOneActivity to ensure proper handling of the " Wait Result "
refactor HitQueue and PriorityQueue to use a Supplier for sentinel object supplier instead of a boolean parameter to improve flexibility and flexibility in handling sentinel objects
updated WidgetCell. java to use static imports for views and added widget description handling to improve code readability and maintainability by eliminating unnecessary type
added validation to prevent registration of an alias with a maximum registered attribute count to ensure that the application does not exceed the maximum registered attribute count
move Predicatestest to query. impl. predicates package
camel - 7999 : camel - core - optimize defaultheaderfilterstrategy to filter header with camelcasecasecase option.
refactor inline handling in InlineLayout and Breaker classes to improve readability and maintainability of the code
added nullability annotations and improved null handling in the ShareUserListAdapter class to enhance code robustness and prevent potential NullPointerExceptions
removed unused imports and simplified the ` shouldInstrument ` method in ` Setup. java ` to streamline code and improve readability by eliminating unnecessary
added a condition to return the last column of the association if it is an insert destination before the source to ensure that the correct number of columns
updated the memory limit path retrieval method in CmdModifierTest. java to improve clarity and functionality for managing memory limits in the container
replaced instances of ` CxxDeps. of ( ) ` with ` CxxDeps. EMPTY _ INSTANCE ` and introduced a new constant ` EMPTY _
updated error handling in JavaTestRule. java to improve clarity and structure to enhance error reporting and maintainability of the code
add support for multiple version of botania ( # 438 )
added a check to set atIndex to 0 to ensure atIndex is non - negative to prevent potential ArrayIndexOutOfBoundsException
increased sleep duration from 100ms to 500ms in TimeoutTest. java to accommodate longer test execution times
added a content requester to the TaskOverlayGo constructor to enhance content handling by incorporating assist content requests
updated the way the witness address is encoded in VoteWitnessProcessor. java to ensure correct formatting of the witness address in the
updated DefaultMethodRegressionTests. java to improve test coverage to enhance reliability of method regression tests
updated WorkloadManagerMxBean. java file to improve code organization and maintainability
updated KafkaOutboundAdapterParserTests to use KafkaException instead of KafkaProducerException to ensure compatibility with the latest Kafka API and improve error handling
added a call to closeLoader ( ) in DesktopGeneratorController. java to ensure proper resource management and prevent memory leaks
added clear method to ExceptionThrowingTaskletStub and corresponding unit tests in FaultTolerantExceptionClassesTests to enhance exception handling capabilities and
updated the error message format in ConfigBuilder. java to include additional context about the job execution environment to improve clarity of error messages for better debugging
added an ` Map < String, String > ` parameter to multiple methods in ` PinotTableRestletResource `, ` TableConfigsRest
added logic to handle in - progress instances in PinotRealtimeSegmentsManager to ensure that only active segments are added to the in - progress
added a check to return null if the component is touchable but disabled to ensure that disabled components do not receive touch events
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest. java ` to ensure
throw a retryablehazelcastexception if cache config don't exist
added a method to check if a node package is installed and updated logging messages accordingly to improve clarity and maintainability of the npm installation process
added ManagedObject and ManagedOperation annotations to MBeanContainer and Destroyable classes to enhance monitoring and management capabilities in the Jetty framework
changed the condition from checking if settings. inAppBrowser to checking if settings. inAppBrowser is false to ensure that the application does not
updated string comparisons to use `. equals ( ) ` for improved readability to enhance code clarity and maintainability by using `. equals ( )
updated conditional check in ` Types. java ` and added new classes ` T6558559a. java ` and ` T6558559
updated player position messages in WorldEditListener. java to improve clarity and accuracy of player messages
( chore ) camel - kafka : fix potential resource leak in kafkaconsumer
removed the default implementation of the examples method to streamline the code by eliminating unnecessary default definitions
modified the thread handling logic in AgentRunner. java to improve clarity and control flow to enhance the reliability of thread interruptions and ensure
removed the time column from both dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure data consistency by removing the time column
simplified the condition for checking shards in FacetComponent. java to enhance code readability and maintainability
replaced references to linker with CxxPlatforms in RustBinaryDescription and RustLibraryDescription to streamline dependency management by using CxxPlatforms
added name property with getter and setter methods in JaasAuthenticationProperties, JdbcAuthenticationProperties, NtlmProperties, and AbstractLdapProperties
don't throw an exception if we can't find a printer
added small scan threshold configuration and updated related logic in BaseQueryPlan. java and QueryServicesOptions. java to enhance query performance control based on
updated return statement formatting in RetryGatewayFilterFactory. java to improve readability and maintainability of the code
replaced repeated calls to ` redisplay ( ) ` with calls to ` callWidget ( REDISPLAY ) ` in LineReaderImpl. java to
replace ` onOverviewShown ` method with ` showForOverviewIfNeeded ` and introduce a delay mechanism in the ` DiscoveryBounce ` class to
added null checks for globalMinPackedValue and globalMaxPackedValue in CheckIndex. java and introduced a new test for deleting all point documents
updated the publish method to use the last state instead of a true state to ensure that the last state is updated correctly during the publish process
updated string concatenation syntax in MetastoreDirectSqlUtils. java to ensure proper formatting of SKEWED _ STRING _ LIST _ VALUES
removed an element from the exp list in SpliteratorCollisions. java to streamline code by eliminating unnecessary elements
simonstewart : add a new ` ` exact'' and ` ` exact'' to the condition class.
replaced a'do'loop with a'while'loop in ManyToManyConcurrentArrayQueue. java to improve code readability and maintainability
# 796 - enh : add ` ` forward _ fetch _ size'' to ormqueryengine
( ) ) ) should not fail if an exception be find
pdfbox - 2576 : set initial arraylist size, a suggest by valerybokov
updated window radius initialization in QuickstepAppTransitionManagerImpl. java to ensure compatibility with rounded corners on Windows
refactor DesktopTaskView to use View instead of ShapeDrawable to improve layout handling for better visual presentation
refactor properties initialization in UpstreamCheckServiceTest to improve code readability and maintainability
changed logging level from warn to debug in AbstractSession and AbstractSessionManager classes to enhance logging granularity and improve performance during session management
replaced error logging with returning locks in ZooKeeperHiveLockManager to improve error handling by returning locks instead of throwing an exception
[ hotfix ] [ javadoc ] fix checkstyle violation in java. base
added a boolean flag to track custom data handling in FileTextureArrayData. java to ensure mipmap generation only occurs when custom data is
camel - core - align test with camel - core - api change
added selection functionality to the List class to enhance user interaction by allowing selection options
removed redundant check for empty value count in LlapArrowBatchRecordReader to streamline code by eliminating unnecessary checks
added file separator handling and improved output messages in PolicyContext to enhance file path management and provide clearer output for debugging purposes
replaced HashSet with ArrayList for flatQueries and expandQueries to improve performance and maintainability of the code
fix typo find by codespell on fossies. org
refactor KafkaManager to use a Runnable for task handling to improve code readability and maintainability by encapsulating task execution logic
updated the assertNodeStateProvider method to include a " freedisk " parameter and modified its instantiation to use TreeMap to improve the handling of node
added a lock file and deleted it if it exists in RocksdbMavenPomCache. java to ensure proper cleanup of temporary files during the
updated standaloneServerFactory initialization to use InetSocketAddress instead of NIOServerCnxn to ensure proper handling of socket addresses in the MiniZooKeeper
added a new method ` getResponse ` in ` RestClient ` for handling HTTP requests to improve error handling and provide a way to retrieve the web
updated the way push job specifications are retrieved in IngestionUtils. java to improve code clarity and maintainability by using an array instead of
updated loginStudent method calls to include a password parameter to enhance test coverage by including password - based authentication
added null check for mCurrentItem in EnhancedBrowseFragment and StdBrowseFragment to ensure robustness by preventing potential NullPointerExceptions
updated the number of strings in TestSpecialOperations from 500 to 100 to improve test coverage for large string scenarios
replaced ByteArrayInStream with ByteArrayInStream in WKBAttributeIO. java to optimize memory usage and improve performance by eliminating unnecessary byte array
renamed the method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity and consistency in method naming
added a method to check if a transition is a direct submachine state and updated states accordingly to improve the logic for determining if a transition is
added checks for ListMultimap and SetMultimap in MultimapSubject. java and corresponding unit tests in MultimapTest. java to improve functionality and ensure correctness
added JoinOperation to the PostJoinOperation class to support additional join operations in the application
added a new test for handling a specific issue in the AdditionalPostgreSQLTest class to verify the functionality and reliability of the PostgreSQL test
resolve intermittent test failure on slow machine
refactor AvaticaDatabaseMetaData class to improve code readability and maintainability
updated MongoDbConnectionPoolProperties to use String representations for lifeTime, idleTime, and maxWaitTime to improve code readability and maintainability by using
do not cast to MediaFormatFactory to avoid casting to MediaFormatFactory
refactor ` handleFilters ` and ` handleBlockJoin ` methods to return boolean values instead of void to improve the handling of filters and block joins
added an option to enable or disable the timeout handler in the ShuffleHandler to improve control over the timeout behavior in the pipeline
updated the initialization of mQuickStepStartingRotation to use a constant QUICKSTEP _ ROTATION _ UNINITIALIZED to improve code
camel - core - fix the build error of camel - saxon
updated resource loading method from ` getResourceAsStream ( ) ` to ` DataResource. class. getResourceAsStream ( ) ` to improve resource handling by
added test case for issue # 1751 ( # 1750 )
added error handling for missing the'atlas'property in AtlasTmxMapLoader to improve robustness by throwing an exception when the map
camel - jbang - remove property placeholder from support component
added database closing in BlockchainTest. java and removed redundant message broadcasting in KafkaTest. java to improve resource management and streamline message
refactor CoreMarkdownNodeRenderer to use a new helper method for retrieving lines to improve code readability and maintainability by encapsulating line splitting logic
int - 1325 fix the order of import in WebServiceInboundGatewayParserTests
replaced ImmutableList. Builder with List. Builder in multiple classes to improve performance and maintainability of the code
added a check for the Java VM name in addition to the existing JavaVendor check to ensure compatibility with OpenJDK environments
added keepAlive ( true ) to the baseUrl method in ReactorClient. java to ensure proper connection management and keep - alive functionality
' a _ normal ','a _ texcoords ', and'a _ texcoords ', and'a _ texcoord
camel - jbang fixed the issue that camel - jbang don't work with spring boot 2. x
modified the condition for retrieving an account from the database to ensure that the accountCapsule is not null before accessing its properties
update version number from 3.9. 0 to 3.9. 1 to reflect the new release status
updated return statements to use unannotatedType ( ) method to ensure proper handling of annotated types in the code
updated tests in StorageGroupProcessorTest. java to improve clarity and maintainability of the code
added environment management functionality to the dumping process to enhance debugging capabilities by providing more detailed environment information
added a waitbeforestart parameter with a value of 2500 in FFMpegVideo. java to improve video processing reliability by ensuring
removed the ` _ skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and its usage to simplify the constructor and eliminate unnecessary
updated import statements and refactored test methods in AccessorsTest. java for improved clarity and structure to enhance test readability and maintainability by
add a framemap ( ) method to the lirgenerator that return a structuredgraph.
updated test classes to use JUnit annotations to improve test reliability and maintainability
fix boat not be able to place water block
updated the ` toString ( ) ` method in ` Directory ` and ` RAMDirectory ` classes to use ` getClass ( ) ` and ` getLock
replaced the method ` allowExperimentalOptions ( ) ` with ` experimentalOptions ` in the Launcher class to improve code clarity and maintainability by
added overloaded ` then ` methods for ` Path `, ` AssertDelegateTarget `, and ` AssertProvider ` in ` BDDAssertions.
refactor HostPort initialization to use hostField instead of hp to improve clarity and maintainability of the code
changed log level from debug to warn for multiple Kubernetes config files to provide a clearer warning about configuration files
added file upload status handling in UploadListActivity to improve user experience by allowing file cancellation during uploads
added a new ` ProviderLoader ` class and refactored ` TerminalManager ` to use it instead of ` ProviderInstaller ` to streamline
updated imports from Span to TraceMessageHeaders in StreamEnvironmentPostProcessor. java and StreamEnvironmentPostProcessorTests. java to utilize TraceMessageHeaders for enhanced
updated SelectFromDatabaseChangeLogStatement to use ColumnConfig. setComputed ( true ) instead of FileName to improve data retrieval efficiency and ensure
hhh - 14632 - fix test failure on postgresql 11
[ hotfix ] [ core ] ignore empty partition count in internalpartitionserviceimpl # getpartitions ( )
only once ( )
replaced ` text. toString ( ) ` with ` text ` in InlineBox instantiation to simplify the instantiation and improve code readability
fix typo find by codespell on fossies. org
updated the default value of the ` getStagedRectSlideEnd ` method from `83 ` to ` 500 ` to adjust the staged rectangle
updated button labels to use bundle constants instead of hardcoded strings to improve maintainability and readability of the code
updated condition in BukkitMain. java to include plot area to enhance road item management by incorporating own plot cases
added a test for setting touch exploration state change in ShadowAccessibilityManagerTest to ensure correct behavior of touch exploration settings in the accessibility
pdfbox - 5328 : avoid arrayindexoutofboundsexception ( # 5328 )
( ) ) should not use property ( )
replace manual file writing with POIFSFileSystem's create method to simplify file handling and improve code readability
added plot area retrieval and modified return logic in Move. java to improve plot area handling and ensure accurate area retrieval
updated version number format in TestWebHCatE2e. java to ensure compatibility with the latest version format
updated the range check for ` count ` from ` > > 0 ` to ` > 1 ` to ensure that the count does not exceed the
camel - kafka - fix npe in kafkaconsumerprocessor
added import statements for IsolatedClassLoader and an exception check in JavacCompiler. java to improve error handling by throwing an exception for compilation failures
ggb - 2481 don't call closeoptions ( ) if there be no option
camel - core - fix checkstyle violation in camel - spring - batch
added a method ` isAnimationFinished ` to check if the animation is finished to provide a way to determine if the animation is finished based on
added a test for custom logo icons with line breaks in LoginMockMvcTests. java to enhance the test coverage for custom logo icons in the
added null check for otherUrl in TimeLineCursorAdapter. java and updated the refreshing text string in HomeFragment. java to enhance null safety
updated the ` stopEditing ` method to use ` newValue0 ` and ` newValue. replace ( " space, " ) ` instead of `
refactor ObjectHashSet implementation to improve performance and maintainability of the code
refactor comparison logic in DataUtilities. java to use Arrays. equals for null checks to improve code readability and maintainability by eliminating redundant boolean
fix item not be able to delete enchanted books / enchanted books
chore ( helidon ) : add unit test for asyncresource.
rename headermap from " target - flat - headers. hmap " to " target - user - headers. hmap " and update related
updated logging statements in MailService. java to include additional subject and recipient details to improve error handling and provide clearer logging for email sending failures
replaced resetTaskItemView ( ) with resetToEmptyUi ( ) and introduced EMPTY _ LABEL constant to improve code clarity and maintainability by
added unit tests for partition retrieval with multiple size batches in TestHiveMetaStoreClientApiArgumentsChecker. java to enhance test coverage for partition retrieval with
added a closing brace to the FileListListAdapter class to improve code readability and maintainability
changed the type of ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile ` and ` OCFileListAdapter ` to
updated the index used in the view removal from ` getChildCount ( ) 1 ` to ` getChildCount ( ) - 2 ` to correct the index used
removed unnecessary'org. eclipse. jetty. util. server. internal'package from JettyWebSocketConfiguration. java and JettyWebSocketConfiguration. java
removed the'true'parameter from S3Request constructor to simplify the instantiation by eliminating unnecessary parameters
fix jfxcombobox animation when timeline be null.
updated the condition for parsing the Dewey number to handle cases with more than one splits to improve error handling by throwing an exception for invalid
added a static variable ` categorySetString ` and modified the return statement to replace " Category : " with an empty string to improve maintainability
updated test assertions in WebSocketClientTest. java to remove the status code " status code " to ensure the test accurately reflects the expected
added null check for classLoader in WebappLoader. java and updated the expected length in TestVirtualWebappLoaderWeaving. java to ensure
removed redundant code related to persistent field collection to streamline code for better readability and maintainability
pdfbox - 2576 : avoid classcastexception, a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` to validate the functionality of the ` PorterStemFilter ` to ensure
renamed the method ` postBatchMutate ` to ` postBatchIndispensably ` and added a success parameter to improve clarity and control
moved class to ` org. springframework. batch. core. explore. support ` package
fix possible deadlock in the chat window manager
removed redundant calls to Sys. touch ( ) across multiple Java files to streamline code by eliminating unnecessary calls to Sys. touch ( )
updated the status command in HgCmdLineInterface to include " - mardu " and modified related tests to enhance the command's functionality
camel - netty - add timer to camel - netty
changed fields in DirectionalLight, PointLight, and SpotLight classes from public to public final to enforce immutability and improve layout
updated width and height retrieval logic in X11GraphicsConfig and WGLGraphicsConfig classes to ensure minimum width and height values are set correctly
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable `, ` DelegatingSecurityContextRunnable `, and ` Delegating
added a new class AnnoFilterTreeSet with methods to find annotated classes based on annotations to enhance annotation handling capabilities in the ClassFinder class
updated the handling of ` newLength ` in ` BytesColumnVector. java ` to ensure that integer overflow does not exceed the maximum size of `
fix intermittent failure in writefoldmapstorewithevictionstest
modified the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in both ` MotifScrollPaneUI `
ggb - 2486 use polyfunction. isequals ( ) instead of polyfunction. isequals ( )
added null check for the table before accessing its column class to avoid potential NullPointerException when table is not initialized
added a try - catch block around the instantiation of CustomChange to handle potential ClassCastException during instantiation to improve robustness by gracefully handling potential Class
refactor DistBuildConfig and related classes to use BuckConfig instead of ConfigPathGetter to improve modularity and maintainability of configuration handling
don't show warning when use double entry in the application
added JUnit @ Ignore annotation to BasicDistributedZkTest. java to mark the test as ignored due to a known issue that needs to be
[ jbrules - 2576 ] dojoin ( ) should return false instead of throw an exception.
removed the Optional < Boolean > getAutodeps ( ) method from JavaLibraryDescription. java to streamline the code by eliminating unnecessary
added FLAG _ ACTIVITY _ NEW _ TASK to intent flags in LauncherTimelineCursorAdapter. java to enhance activity management by adding new task flags
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to provide a way to check pagination order in
updated repository URL assertions in RepositoryConventionPluginTests. java to align with the latest repository structure
added task class for managing node affiliation in the cluster
added error handling for invalid URIs in TagLibraryInfoImpl. java to improve robustness by logging invalid URIs
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other
added array handling functionality to CacheKey class to improve performance and maintainability of cache key operations
refactor file type detection methods to use a unified ` getFileTypeDetector ` implementation to enhance code clarity and maintainability by centralizing file type detection
added a call to close the WebSocket session to ensure proper resource management and prevent memory leaks
refactor ` ShadowVirtualDeviceManagerTest ` and ` ShadowVirtualDeviceManager ` to improve the handling of virtual sensor callbacks to enhance code clarity and
updated the condition in HttpSessionSecurityContextRepository to check if the context object is not removed after execution to ensure that the session is not removed when
renamed variable ` lch ` to ` loopback ` and refactored the logic for retrieving it to improve code clarity and enhance the handling of
replaced static final buffer BUF _ SIZE with a constant DEFAULT _ BUF _ SIZE and updated related code to improve code readability and ensure consistent
added secure validation checks in KeyInfoReferenceResolver and improved exception handling in XMLSignatureInput and ResolverLocalFilesystem classes to enhance security by ensuring
added a private boolean variable ` iconChangeListenerInstalled ` and updated its assignment logic to ensure the icon change listener is only added if it is already
added Russian language support to the application
hhh - 14632 - adjust duration to use NANOSECOND instead of SECOND
don't call framestate. disablestateverification ( ) in substratraphkit.
added system property settings and teardown methods in RobolectricTestRunnerTest and TestUtil classes to ensure proper cleanup of system properties during tests
added SLF4J class loading functionality to ViewClassLoader to enable loading of SLF4J classes in the application context
added support for " jar " packaging in ChangePackaging. java and a corresponding test in ChangePackagingTest. java to ensure correct packaging
fix file download test on window
fix ( glfw ) : clear buffer in glfw demo
updated unit retrieval methods to use preferredUnits instead of defaultUnits to improve clarity and maintainability of unit management
fix test that fail due to timezone difference.
removed redundant return statement in Terminator. java to improve code readability and maintainability
updated error messages and logic in FileSystem, LocalFileSystem, and DistributedFileSystem classes to provide clearer guidance on invalid file URIs and improve error handling
use jabrefexecutorservice instead of java. util. concurrent
( chore ) camel - ftp : improve test reliability
updated KeyedProperties class to extend ConcurrentSkipListMap instead of ConcurrentHashMap to improve performance and reduce serialization overhead
added an ` ignore ` method in multiple log classes to check if the log is ignored to enhance logging functionality by allowing users to log ignored events
added a null check for runningTaskView before proceeding to prevent potential NullPointerException when runningTaskView is null
removed unnecessary casting of byte to byte in BukkitWorld. java to improve code clarity and eliminate unnecessary type casting
removed the image processing code from the PanelManager class to streamline the image processing process and improve performance
added new files MMapDirectoryFactory. java and SimpleDirectoryFactory. java to implement directory creation and testing for MMapDirectory in Solr
added null check for the ` ic ` variable before creating a new ` BaseColor ` instance to avoid potential ` NullPointerException ` when ` ic
updated the expected argument in the assertQueryEquals method from'field1 maxDocFreq = 1000'to'field1 _ s maxDocFreq
updated ExtendedOperatingSystemMXBeanImpl. java file to improve performance and maintainability of system metrics
added functionality to install and install left commands in SideMenuBar to enhance the functionality of the SideMenuBar by allowing users to customize and manage left commands
added a new setting ` advanceWindowed ` in ` AppSettings ` and modified ` setUpWindow ` calls in ` TweetActivity ` and
added SybaseDatabase to the conditional check for primary key generation to enhance compatibility with Sybase databases
refactor Client class to improve code structure to enhance maintainability and readability of the code
[ java ] send the leader ready message to the consensus module when the leader be ready.
replace invalidate ( ) with setCellLayoutPressedOrFocusedIcon ( ) and implement shouldDelayChildPressedState ( ) in CellLayout and CellLayout
added a return statement in NearCachedClientMapProxy. java to ensure proper handling of null values during execution
updated package - info. java files for mmm and ppp to improve documentation clarity and maintainability
added a method to shutdown the HTTP server to handle exceptions during server startup to improve error handling and ensure proper server shutdown process
camel - aws2 - s3 : update camel - aws2 - s3 and camel - aws2 - s3 to v2,
[ hotfix ] [ runtime ] rename taskmanager metric parameter to taskmanagermetrickey
db upgrade : drop network _ offerings field that don't exist in 2.2. 7
added a new test class TestThriftCLIServiceSecurity with a test for password validation to ensure that the password in TOpenSessionReq is not
added a new private variable ` maxEnergyLimit ` and updated its assignment logic in ` VMActuator. java ` to improve energy limit handling
added maxInMemorySize property and its getter / setter in HttpClientProperties. java, and updated webClientPlugin constructor in HttpClientPluginConfiguration. java
updated caching logic in Cache. java to improve performance and reliability of data retrieval
added multiple Cucumber test classes for the Cucumber framework to enhance testing capabilities and improve code organization
added error handling for parsing double values in TypeJsonUtils. java and updated test cases in TestArrayOperators. java to improve robustness of
removed redundant byte array appending in Utf8StringBuilderTest. java to streamline code by eliminating unnecessary code
added checks for parameter sets before appending them to the path to ensure that only valid parameters are processed, improving robustness
camel - jbang - fix circuit breaker when configure a maximum number of output.
updated the maximum buffered document frequency assertion in TestIndexWriterExceptions. java to ensure proper handling of document frequency based on configuration settings
replaced instances of ` String. toString ( ). toString ( ) ` with ` Sha1HashCode. update ( ) ` for resource APK
added methods to convert enum values to integers and long in AsmRuntime. java to enhance functionality for handling enum values in the application
add the miss tag for the new biome tag ( # 6481 )
remove asyncimageloader, use an executorservice instead
changed access modifiers from private to protected for several fields and methods in BaseTableUpsertMetadataManager. java to allow subclass access to these
updated localized strings in FormatData _ ar _ JO, FormatData _ ar _ LB, and FormatData _ ar _ SY to
updated condition checks from ` equals ( ) ` to ` hasImageEqualTo ( ) ` in ` AbstractSunSecureRule. java ` to improve
camel - jbang - add -- repos option to run command
added handling for NaN scores in CrawlDbReader to improve robustness by processing NaN scores gracefully
added cleanup method in OnStartupTriggeringPolicyTest. java to ensure proper cleanup of temporary files after tests
updated focus handling in FilterConditionEditor and FindAction classes to improve focus management for better user experience
[ hotfix ] [ runtime ] make checkpointscleaner thread - safe
added a new file ` XPathWhiteSpaceTest. java ` with XML validation tests to validate XML schema validation to ensure proper handling of whitespace in XML
don't persist trie log if it's empty
refactor FilledNewArrayInstruction class for improved readability to enhance maintainability and ease future updates
add timeouts to simplenetworktest
modified the return statement in OCFile. java to check if the parentPath ends with a slash instead of a substring to improve clarity and correctness in
added a print statement for loading errors in JavaSEPort. java to improve error handling and provide feedback during skin file loading failures
added dirty flag and validation methods in LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to track and manage the dirty
added a new constant UNDEFINED in Result. java and updated its usage in TestStep. java to improve code clarity and maintainability by using a
updated exception handling from PersistenceException to NullPointerException in TestTransactionCallback. java to improve robustness by handling potential NullPointerExceptions
add check for jet be enable in uploadjobmultipartitionoperation
[ hotfix ] [ runtime ] improve logging and exception handling in jobschedulerstoreimpl
make summarylevel. of ( ) configurable
changed the visibility of the ` pos ` variable from ` volatile ` to ` private ` and introduced a new ` nextPowTwo ` method to
( ) ) should be skip ( )
refactored the way endpoints are initialized in StorageProxy. java to improve clarity and maintainability of the code
removed unnecessary whitespace in FileManager. java to improve code readability and maintainability
updated TransformFunctionType enumeration to include " times " and " pow " instead of " plus ", " ceil ", " log ",
added overrides for getSimpleName ( ) and getEnclosingElement ( ) methods in Element and VariableElement classes to enhance code clarity and maintainability by providing
updated rfc references from " RFC3280 " to " RFC5280 " across multiple Java files to ensure compliance with rfc standards and improve
updated version number from " 2.17. 3 " to " 2.17. 4 " and changed type casting from int to Character in SearchAnnotation
updated ListActivity and NoteAdapter to use SparseBooleanArray instead of HashMap for managing selected items to improve performance and memory management during item restoration
simplified conditional checks in DirectUpdateHandler2. java to improve code readability and maintainability
updated ConfigFileApplicationListener to use ResourceUtils for URL path handling to improve code readability and maintainability by using a dedicated utility method
updated PreviewPositionHelper initialization in TaskViewSimulator. java and TaskThumbnailView. java to ensure proper handling of multi - window mode in
[ java ] don't publish newleadershipterm when prepare for a new leadership term.
pdfbox - 4892 : improve unit test by use standarderrorstreamlog
refactor skip logic in ByteArrayInputStream and add a new Skip class with a test for skipping bytes to improve code clarity and facilitate testing of
refactor conditional logic in UpdaterTask. java for clarity to improve code readability and maintainability
changed the access modifier of MAX _ HEADERS from static to public and added a check for block headers to allow access to MAX _ HEADERS
move lwjgl _ util. jar from lwjgl _ util. jar to lwjgl _ util. jar
refactor AbstractHandshakeHandler to simplify connection handling to improve code readability and maintainability
updated method signatures and implementations in RasterLayerResponse, RasterManager, GTDataStoreGranuleCatalog, and RasterManager to improve code clarity and
added a check for whether the response is committed before sending an error to ensure that errors are only sent when the response is not committed
updated condition checks in HttpSession. java to improve readability to enhance code clarity and maintainability
modified fade - out behavior and added feature flag handling in gesture navigation tutorial controllers to enhance user experience by improving visual feedback during gesture navigation transitions
change log level from info to warn for prefab deserialization
refactor external group management in LdapMockMvcTests to improve clarity and maintainability of the code
updated thirtyDays calculation in FreezeBalanceActuator. java and added a validation check in TransferActuator. java to ensure th
updated lastIndexOf method to use File. separator instead of a hardcoded'/'to ensure compatibility with file path separators across different operating systems
ggb - 2481 : make sure we don't leave the keyboard if there's an error
updated GpsMainActivity to retrieve session description instead of an empty string to improve clarity and maintainability of the code
added file saving and validation for document pages in JsoupNonVisualRegressionTest. java to enhance file handling and improve test reliability
move androidbufferallocator to androidnativefactory and deprecate it
added handling for flag names starting with "! " in Main. java and improved flag processing in PrimaryItem. java to enhance flag processing logic
added comment to clarify the purpose of the filePS query in JDBCHistoryCache. java
modified the condition for handling reward item usement in BattlePassManager. java to improve code readability and maintainability
fix test which fail on slow machine
clean up unit test and remove unused code
added a null check for the main command and modified the argument check to include help functionality to enhance command handling and support additional command options
increased output stream size from 7 to 4 in multiple classes to optimize memory usage and improve performance
changed the static class declaration of Scanned from static to public to allow access to the Scanned class from other packages
modified ClassWriter. java to introduce a showBlank option and added a new class T8032819. java with multiple test methods to enhance
removed assertion for the presence of a length in the Person class to streamline code by eliminating unnecessary assertions
fix nullpointerexception when check file extension
modified the return statement in ContactRightButtonMenu. java to replace the return statement with a continue statement to improve the flow of the code
[ hotfix ] [ runtime ] fix checkstyle violation in slotsharinggroupassignment
modified loop condition in InstallShortcutReceiver. java to simplify screen count calculation to improve readability and maintainability of the code
refactor binding and closing logic in PlainSocketImpl. java to improve code clarity and ensure proper resource management during socket binding
added methods to manage and clear removed items in the BookmarkListRootFragment and MediaDetailPagerFragment to improve the management of removed items in the
updated log message from " offsets are from " center of element " to " element's in - view center point.
added a new file ` bug4865918. java ` that implements a GUI test for a scrollbar to verify that the scrollbar's
removed redundant initialization of VelocityEngine and updated its usage in ADKerberosOperationHandler. java to streamline the code by eliminating unnecessary
added grouptriggers command handling in QuestCommand. java to enhance gameplay functionality by providing feedback on group triggers
refactored file selection logic to use a new file chooser method to improve user experience by allowing users to choose a GnuCash account file
added Lombok's @ ToString annotation to PartitionChangeEvent, TbApplicationEvent, and PartitionChangeEvent classes to facilitate debugging by providing
updated the configuration URI for the CloudService to use a constant instead of a hardcoded value to improve maintainability and reduce hardcoding of configuration URI
removed viewport component and jScrollPane settings from the BrowserPanel to streamline the code by eliminating unnecessary components
added support for the KEYCODE _ FORWARD _ DEL key and updated input handling accordingly to enhance input functionality and improve event handling
added a conditional check for " moreIndexingFilter . indexMimeTypeParts " and adjusted variable naming for contentType consistency to improve configurability of indexing by allowing custom MIME type part handling
added author pattern matching in JSDoc. java to enhance comment formatting for better readability and maintainability of the code
updated metrics constants in MetricsConstant. java to reflect new naming conventions to improve clarity and maintainability of metrics related to data organization
updated HiveDatabaseSchema and HiveSchemaFactory to use DrillHiveMetaStoreClient and SchemaConfig instead of a list of tables and dbs to improve
updated the ` oauth2LoginLinks ` method to accept a query parameter for error handling to enhance error reporting by including the query parameter
updated " Hijrah - umalqura " to " Islamic Umm al - Qura Calendar. " and
added a condition to the supported flag in WebAudioWrapper. java to ensure compatibility with both Firefox and Firefox browser
added an ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the private constructor from ` InterceptorConstants ` to enhance flexibility in
should be default, not default.
[ hotfix ] [ stream ] fix stream aggregation bug
[ hotfix ] fix checkstyle violation in executiongraph
added ` hasFrom ` property and its getter / setter methods in ` Delete. java `, modified ` DeleteDeParser. java ` to
refactor synchronization logic to use isMultiStatus ( ) and exhaustResponse ( ) methods to improve code clarity and ensure proper handling of multi -
refactor test applicable checks into a separate method for clarity to improve code maintainability and reduce duplication in test collection logic
updated regex pattern in LogAnalyser. java to improve accuracy in log line parsing
( chore ) camel - spring - integration - tests : split unit and integration test for camel - google
fixed - rsearch don't include max - inclusive parameter
refactor CCLicenseStep. java to improve code readability and maintainability to enhance clarity and maintainability of the code
added null check for ifcRoot. getGlobalId ( ) before adding it to guidIndex to avoid potential NullPointerException when globalId is null
updated comparison logic in OptionalAssert to use areEqual method to improve comparison accuracy and maintainability of the code
refactor memory management in NoNewLineParagraphCssApplier and ParagraphCssApplier to improve clarity and maintainability of memory handling
added a new file TestArrayCopyToFromObject. java to test array copy behavior to ensure that ArrayStoreException is thrown correctly when copying an
refactor sys. path. insert calls in BuckPythonProgram. java to improve readability and maintainability of the code
fix typo find by codespell
added a new method ` findFiles ` with an additional boolean parameter and deprecated the existing ` findFiles ` method to enhance file retrieval functionality and
added JUnit @ Ignore annotation to TestLlapSignerImpl. java to mark the test case as unstable
added null check for client. doRequest ( ) in TestInternalInputBuffer. java to avoid potential NullPointerException when accessing client. doRequest
refactor autoloadCall method to include a lowerName parameter for better control over class loading behavior to improve flexibility and control over class loading process
updated server version comparison logic in CustomPlaybackOverlayFragment and PlaybackController to ensure compatibility with the latest server version and improve user experience
updated KDC to use " server / localhost " instead of " server / localhost " to improve clarity and maintainability of the code
updated Jsr250Voter to conditionally return ACCESS _ DENIED based on its presence to ensure proper handling of multiple roles in the Js
update the mp4parser so that it don't fail to parse the mp4 file
added a constant for HS2 _ PROXY _ USER and modified session parameter handling in ConnectionFactory. java to improve session management by including the
camel - bzip2 and camel - snappy to be able to compress a byte [ ] file.
added a 1 - second sleep in HttpClientTest. java to ensure proper synchronization during test execution
( ) ) for multiple cell in a sheet
modified glyph layout calculations and updated test text to reflect a specific issue to enhance text formatting and improve test accuracy with multiple whitespace characters
updated ISTIO version and container path handling in Fabric8IstioIT. java to ensure compatibility with new ISTIO versions and
replaced the call to ` apiClient. ReportPlaybackStartAsync ` with ` TvApp. getPlaybackManager ( ). reportPlayback
use bufferedinputstream in simpleauthority.
added check for exist in - memory in putfromloadall operation ( # 2451 )
replaced bitwise operations with bitwise operations in ResponseFlag. java to improve performance and readability of the code
added read policy to fix default policy
refactor FontUtilities to use a ConcurrentHashMap for managing Composite fonts to improve thread safety and performance when managing Composite fonts
updated prefHeight calculation in Tree. java to remove unnecessary height adjustment to simplify the height adjustment logic for better readability and performance
[ dmn ] fixing dmn parser error message ( # 2481 )
removed unused imports and simplified method signatures across multiple Java files to improve code clarity and maintainability
changed method visibility of ` finishRunningRecentsAnimation ` from private to public in ` TaskAnimationManager ` to allow external access to the method
added null checks for node IDs and edges in ElementFactoryImpl. java and updated edge handling in ImportContainerImpl. java to improve error handling and
add log for dropped unknown state response
nifi - 5892 : ensure that flowfiles can be create if they exceed the bin limit
updated the logic for determining the closest Y - coordinate in Teams. java to improve accuracy in determining the closest Y - coordinate based on the
added a check for CONTENT _ LENGTH in RestTemplateCopyHeaderFilter and implemented a test for it in TestRestTemplateCopyHeaderFilter to ensure correct handling
updated Java2TypeScriptTranslator to handle class and character literals correctly to improve type handling and ensure correct transpilation of string literals
updated filter parameters and adjusted sample sizes in ChannelizerViewer, ChannelizerViewer, and TwophaseChannelProcessor classes to improve filter responsiveness and
hbase - 14620 add - allregions option to canary ( chunhui )
removed unnecessary NodeModule import and simplified the instantiation of ImmutableMap in TestCassandraConnector to streamline code by eliminating unnecessary dependencies
http : / / issues. apache. org / jira / browse / amq - 3573 - reset cursor position when delete a store
added minimum size constraints for the frame in both CallDialog and OneToOneCallPanel to ensure the frame dimensions do not exceed minimum sizes for better
fixed an issue where invalid state be lose during world gen.
refactor TestHTTPSamplersAgainstHttpMirrorServer to use JUnit framework and improve test setup and teardown methods to enhance code readability and maintainability
added dependency injection for KerberosPrincipalHostDAO and removed unused imports from KerberosPrincipalEntity and KerberosPrincipalEntity to improve code clarity and maintainability by
updated method call from ` getTableSnapshot ( ) ` to ` getTableSnapshot ( ) ` in ` StatsOptimizer. java ` to simplify the method
simplify code, use exceptionutils. handlethrowable ( t )
updated the error message in AndroidGradleBuilder. java to include " Monetization setup " to provide clearer guidance on how to configure the
updated the constructor of ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` to ensure the
[ drools - 3392 ] fix a problem when a package be declare in a different package name ( # 3392 )
added an assumption to skip the test for version 19 in CheckIndexTest. java to ensure compatibility with the latest version of the code
refactor ` assignTargetsForSplitScreen ` method to accept ` RemoteAnimationTargets ` instead of ` RemoteTargetGluer ` to simplify target
refactor LeaderLatch class for improved readability to enhance maintainability and ease future updates
added methods to initialize zkSNARK parameters in SolidityNodeHttpApiService to enable dynamic initialization of zk parameters for the Solidity
don't throw illegalstateexception on a non - synchronized transaction. get ( )
added a ` createMediaRecorder ` method to ` CodenameOneImplementation ` and changed ` longtitude ` to ` longitude ` in
initialize platformName with a default value of " ios " to ensure default platformName is set to " ios "
fix typo find by codespell on fossies. org
refactor conditional checks for ` mozDash ` and ` webkitLineDash ` to improve readability and maintainability of the code
refactor CreateVisibleSignature class for improved clarity to enhance maintainability and readability of the code
added error handling for sending outgoing frames in AbstractExtension. java to improve robustness by handling potential exceptions during frame processing
fix # 2913 - classnotfoundexception : sun . reflect . reflection with jdk 11
added functionality to reset the parent of child categories in the feed category management to ensure that child categories have a parent of the same ID in the
added title to ContributionManagerDialog for better user experience to improve clarity and usability of the dialog
added a new ` vwap ` field to the ` Ticker ` class and updated related constructors and methods accordingly to enhance the Ticker
added functionality to track and display no widgets in the SearchAndRecommendationsScrollController and WidgetsFullSheet classes to enhance user experience by
add a new api for render graph and tint node in worldrenderer
added primary color to NCFirebaseMessagingService to ensure the application uses the primary color for better visual consistency
updated ShadowUsbManagerTest. java file to improve test coverage and reliability
add some logging to help diagnose test failure
added a call to update the selected configuration in Rocket. java to ensure the selected configuration reflects the latest configuration settings
updated width and height calculations in AndroidGraphics. java to ensure proper handling of bounds to prevent off - by - one errors
use linkedhashmap instead of hashmap to maintain order
replaced ClosureManager with ClosurePool for closure management to improve code clarity and maintainability by using a more descriptive variable name
( chore ) camel - spring - boot - test to use junit5
added two new classes, WebsocketIngressIntegratedBootstrap. java and WebsocketPluginTest. java, to implement and test the Web
[ ds - 3482 ] remove unused test and fix javadoc
refactor equality check in AbstractCasWebflowEventResolver to use a dedicated method to improve code readability and maintainability by encapsulating authentication checks
added a conditional check to return false if the system property " jnr. ffi. compile. x86asm " is true to ensure that
replaced direct calls to ` callNode. getType ( ) ` with a local variable ` callNodeType ` to improve code readability and maintainability by
added a new Insecure annotation and refactored MessageBuffer constructor to use it to enhance security by restricting access to the message buffer
added new Hive configuration variables in HiveConf. java to enhance configuration options for Hive operations
initialized scopes and policies as HashSet in ResourceSet. java and added null check for policies in DefaultResourceSetService. java to ensure proper handling
updated MultiReader class to include a new constructor with an optional decrefOnClose parameter to enhance flexibility and control over reader completion listeners
renamed multiple file classes for consistency to improve clarity and maintainability of the codebase
simonstewart : fixing unit test for html5 input
replaced instances of ` Gson $ Types. getFirstTypeArgument ` with ` java. lang. reflect. ParameterizedType ` across multiple files to improve
changed return types of keySet ( ) and values ( ) methods from Collection < Integer > to KeySet and Values in Int2IntHashMap to
added duration property and updated related methods in FlipTransition. java to enhance animation flexibility and allow customization of animation durations
removed a trace log statement indicating if subtitlesAreValidForStreaming is true to streamline the code for better readability and performance
update forge version to 1.10. 0
( ) should be log for jdk or jdk.
add java16postprocessor, java14postprocessor, jav15validator, and jav8postprocessor to support java 16
updated padding settings for statusView based on replies size to improve layout responsiveness and visual consistency
[ iotdb - 3482 ] fix npe in abstractpartitionprimaryreplicastask when versionmap be empty
added metadata handling in SeedUrl and SeedResource classes to manage and persist the seed URL's metadata
added a null check for the declaration before creating a Pattern instance to avoid potential NullPointerExceptions when the declaration is null
hbase - 24590 addendum fix typo in testcoprocessorwhitelistmasterobserver. java
ww - 4441 add package name to action name, if it's blank.
updated ` containsAllOf ` and ` containsExactly ` methods to accept ` Object [ ] ` parameter to ensure proper handling of null values and improve test
added stream ( ) and parallelStream ( ) methods to MapIterable, PrimitiveObjectMap, and MapIterableTest classes to enhance stream processing capabilities
replaced direct return of notifInfo with a cloned instance to ensure that a cloned instance of notifInfo does not affect the original instance
make sure command key be set before use it.
fix typo find by codespell on fossies. org
added a method to check if a variable is a local in the maps to enhance functionality to determine if a variable is a local variable based on
added handling for null resource names in PackageResourceTable. java and changed default resource mode from best to legacy in RobolectricTestRunner. java
added a check for ulSize in TrueTypeFont. java to ensure proper handling of upem metrics when ulSize is not zero
refactor SignPlugin constructor to accept multiple message readers instead of a single message reader to improve flexibility and maintainability of the code
refactor Int2ObjectCache implementation to improve performance and maintainability of the code
updated validation logic in StandardMavenAuthenticationProvider. java to ensure proper handling of remote repository validation
refactor AudioNode class to improve code readability to enhance maintainability and ease future updates
added SSL context setup and updated cookie store handling in LinkyHandlerFactory and EnedisHttpApi to enhance security and improve error handling for SSL
added imports for OracleSqlOperatorTable and SqlStdOperatorTable, and refactored register method in HiveFunctionRegistry to improve code readability and
http : / / issues. apache. org / jira / browse / amq - 3573 - fix test case
updated the ` getBuildTargetForAlias ` method to accept a possibly - flavored alias to enhance alias processing by incorporating a possibly
added a check for ODataFeed and modified the return logic in Olingo2Consumer. java to improve handling of empty ODataFeed
added EQUIVALENT _ VERSIONS map and updated version retrieval logic in MetaStoreSchemaInfo. java to enhance version compatibility checks and
bug cs - 15460 : expunge a vm shouldn't be expunge if it be already expunge.
added multiple @ Deprecated annotations to the AbstractDateAssert class to indicate that these methods are outdated and should no longer be used
updated methods in ONDashClockExtension and AlarmReceiver to use a new method for retrieving note titles to improve code readability and maintainability by
renamed GoogleAuthUserConfigTable class to GoogleAuthUserConfigTableTest and updated associated column names to improve clarity and consistency in test naming conventions
replaced ` commit ( ) ` with ` apply ( ) ` in multiple classes to improve code clarity and consistency in method naming
added TestIdleListener to StandardSession instantiation to enhance session management by implementing an idle listener
[ beam - 10471 ] add test _ id to bigqueryioit. testbigquerytable to make it easy to specify the test
added background resource and reset methods in HotseatPredictionController and BubbleTextView classes to enhance the visual appearance of predicted icons in the
mondrian : fix typo in property name
add unit test for system. runtime. tasks and system. runtime. queries
feat ( prediction ) : return all feature if there be no output
added command line argument support to AppleSimulatorController and InstallCommand classes to enhance flexibility in command execution for Apple targets
pdfbox - 2576 : use the maximum value of the line start and end in parargraph to ensure that we don't
http : / / code. google. com / p / mybatis / issues / detail? id = 479 - ensure that the
added clipping to the background view in QsbWidgetHostView to improve visual presentation of the background view
added timing and progress tracking in SQLManager and improved flag processing logic in BlockTypeListFlag and PlotArea to enhance performance tracking and ensure accurate flag
updated import statements and modified depth function handling in FloatingTextRenderer. java to improve code clarity and ensure proper rendering behavior based on the floating text
rename libffi _ libfifififififcontextLinux to libffi _ libfififififififififif
http : / / issues. apache. org / jira / browse / amq - 4237 - jdbcaggregationrepository - expose the propagation
add support for l1 regularization and l2 regularization in layervalidation.
added exception handling for readWrite ( ) and readWrite ( ) methods in AbstractChecker. java to improve error handling and provide clearer logging for
changed the visibility of the colorStack variable from static to instance to allow for instance - level access to the colorStack array
should not create a block
convert currency to lowercase in BTCEPollingMarketDataService to ensure accurate depth retrieval by converting currency to lowercase
updated channel state assertions in ChannelStateTests. java to reflect the latest state changes
remove versionedhashes field from enginepayloadparameter
reset trigger price to empty if trigger price field change
update studentfeedbacksubmissioneditsaveaction to handle error
removed debug print statements from I18NPageController. java to streamline output for better readability and maintainability
hbase - 258. addendum patch by jbellis for hbase - 258
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 433.
added a new boolean property ` _ alwaysSaveUri ` along with its getter and setter methods in ` FormAuthenticator. java ` to allow users
added new methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to provide a way
updated imports and added firePopupMenuWillBecomeVisible and getPopupMenu methods in LWChoicePeer. java to enhance popup menu functionality
modified the initialization of the HashMap in StressProfile. java to ensure consistent handling of null entries and improve code clarity
move scala. collection. asscalaiterable from scala to java
added null check for requests in MockServerEventLog. java and enhanced logging in HttpForwardObjectCallbackActionHandler. java to improve error handling
[ hotfix ] [ doc ] add warn log when property file can not be load
fix resource leak in clientmain
added a check for multicast availability in the conditional statement to ensure that multicast connections are only accepted for the NIC
updated SQLCommand instantiation to include additional parameters to enhance command parsing flexibility and improve command handling
updated methods in UnDelegateResourceActuator, BandwidthProcessor, EnergyProcessor, and UnDelegateResourceActuator to set the latest consumption
added a new method ` invalidSessionStrategy ` to ` SessionManagementConfigurer ` to enhance session management by allowing customizable invalid session strategies
updated error message formatting in ProtobufAnnotationSerializer. java to provide clearer context for error handling when a token cannot be found
added a new test class ` MapAssert _ containsKeys _ Test ` to validate the ` containsKeys ` functionality of ` MapAssert ` to
updated JdbcProxyGenerator to use NewProxyAnyStatementGenerator and introduced a new JDBC4TemporaryPreparedStatementMethods interface to enhance code maintainability and
added a ` ensure ` method to ` ServerWebSocketContainer ` and updated ` DirectUpgradeTest ` to use ` Handler ` instead of ` Context
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags. java ` to improve immutability and ensure immutability of
pdfbox - 2576 : use point2d. float instead of point2d. float
replaced the initialization of ` hooks ` and ` hasActiveHook ` with a static final array of ` EMPTY ` in ` MethodHook ` to
added a boolean parameter ` grantAccess ` and modified the constructor and return logic in ` MockAuthenticationManager ` to allow users to access the authentication
modified the ` afterJob ` method to accept a ` JobExecution ` parameter across multiple classes to enable flexible job execution handling in the application
added a check for file canExecute ( ) in SharedLibraryLoader. java to ensure the file is writable before proceeding
feat ( generator ) : update protoc to v3.15. 3
bugfix : saveservice. savesamplestatus ( ) now use event. getresult ( )
added constants for BATTERY _ LEVEL, ANNOTATION, TIME _ WITH _ OFFSET, STARTTIMESTAMP, and PROFILE _ NAME in BundleConstants
use map instead of hashtable in searchexpression. applyrule
use absolute screen locateable instead of geo widget
updated texture and container initialization in JoglGraphics and ProjectiveTextureTest classes to improve texture handling and enhance texture filtering capabilities
refactor the ` setResourceToDelegate ` method to return a ` File ` object instead of void to improve code clarity and maintainability by encapsulating
camel - 1331 : fixed property component don't work with uri contain': / '
updated the time comparison logic in ActionScheduler. java and modified the expected value in TestActionScheduler. java to ensure correct attempt counting based on
updated debug log path from " debug. log " to " / tmp / ums _ dbg. zip " and added null check for debug
use databinder instead of direct reference to worldrendererimpl
move gate reset out of pipe. markblockNeedsupdate ( ) to pipe. resetgate ( )
replaced direct instantiation of TestSupplementary with a try - finally block to ensure locale is reset to the default locale before running tests
updated the randomness factor in the Team constructor from 0.5 to 0.5 to improve the randomness of the team's color representation
changed the type of ` activeMatchedStates ` from ` Set < MatchedStates > ` to ` Collection < MatchedStates > ` and
simplified the condition for checking expected exceptions in SoftAsserts. java to improve code readability and maintainability
updated error handling in StorageResources. java and added exception handling in StoragePluginRegistryImpl. java to improve error reporting and provide clearer exception handling
refactor CallTreePrinter to use new utility methods for file reporting to improve code readability and maintainability by using modern Java file operations
added null checks for note and modified EditText initialization in DetailFragment. java to improve code robustness and prevent potential NullPointerExceptions
added peakTasks tracking and updated task loading logic in AssetManager. java to improve performance by tracking peak tasks more effectively
simonstewart : disable native event on window
added new constants for scoring, fetch interval, and metaname in the Injector class and updated the CrawlDatum constructor to use these constants
updated imports from org. apache. commons. collections to org. apache. commons. collections4 in ScimExternalGroupsTypeResolvingFactoryBean
updated CoreContainer to include a method to check if a schema is shared and added a new test for sharing schema to enhance schema sharing functionality and
updated size calculation methods to use sizeInBytes ( true ) instead of sizeInBytes ( ) to ensure accurate handling of bytes in segment size calculations
changed assertions from assertEquals to assertNull for version1 _ 2 in VersioningTest. java to improve clarity and correctness of versioning assertions
updated SQL query to include type filtering for the'attname'and'atttypid'columns to improve query accuracy and ensure correct handling of
[ java ] fix race condition in appendnewleadershiptermevent.
removed unused method ` buildMediaType ` from ` WebClientPlugin ` to streamline the code by eliminating unnecessary method
replaced ` fillUsingLengthPrefix2 ` and ` fillUsingLengthPrefix2 ` with ` fillSlice ` and ` fill ` respectively to improve
added a new boolean variable ` isCompactedBase ` and modified conditional checks in ` AcidUtils. java ` to improve code readability and
hbase - 25837 use non - ENcoded qualifier encoding if storageScheme or qualifierEncodingScheme be null ( chunhui )
added two new classes, PojoProducersCustomized. java and RestProducersCutomized. java, and modified the RestProducers
replace " cache " with " http _ client _ tls _ cert " and " http _ client _ tls _ key " in ArtifactCacheBuck
removed duplicate registration of AesGcmSivProtoSerialization in AesGcmSivKeyManager. java to streamline the code
add miss slab for wooden slab in ore dictionary
refactor multiple session - related classes to improve code organization to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` parameter from ` UndefinedSymbolsLinkerScript `
prepare next release 3.1. 2 : update doc tree and overview ( rc1 )
hhh - 15737 - fix test failure on oracle
updated spriteBatch draw method to use centerX and centerY instead of centerY and centerY to improve rendering accuracy by correctly centering the
updated player function logic and modified region creation in WorldGuardListener to improve readability and maintainability of the code
added a deprecated version constant for Lucene 8.5. 0 to indicate that these version should no longer be used
reformatted print statements in SSLSocketImpl. java for improved readability to enhance code clarity and maintainability
added a new test method ` testCastToSignedInteger ` to ` SelectTest. java ` to validate SQL parsing and deparsing for
updated dependency type handling in CoNLLUOutputter to use a new SemanticGraphCoreAnnotations enum to improve code clarity and maintainability by
refactor build target description retrieval to use the new method ` parseContext. makeTargetDescription ` to improve code clarity and maintainability by centralizing target
updated method call from ` testFromMain ( ) ` to ` test ( ) ` in ` TestOutOfMemory. java ` to ensure the
updated block array size from ` Block. blocksList. length ` to ` 256 ` to accommodate a larger number of blocks in the
( ) ) should not be check ( )
added tests for escaping PostgreSQL question mark operators in AbstractSQLChangeTest. java to ensure correct SQL generation for escaped PostgreSQL query strings
added ` withAll ` and ` withAll ` methods to ` MutableBagFactory ` and ` MutableBagFactoryImpl `, along with a corresponding
pdfbox - 2576 : add javadoc to buildNavandPDFbody, a suggest by valerybokov
changed MqttBrokerConnection constructor parameters from true to false to adjust broker connection behavior based on client context
refactor how the change log is retrieved in the ChangeSet class to improve code clarity and ensure the correct root change log is used
removed the ` new ` keyword from the ` before ` method in ` StaticMethodInterceptor `, ` RocketMQGlobalPluginHandler `,
added database cleanup functionality in HiveMetaStoreClient and enhanced logging in TestObjectStore to improve database management and enhance debugging capabilities
added a new parameter " order _ currency " to the BithumbAuthenticated class and updated the BithumbAccountServiceRaw constructor to include
deleted the SSEFluxWebConfig class and its associated configuration to streamline the codebase by removing unused configuration components
refactor JsonBuildHelper and IDocBuildTemplate to use Boolean flags instead of a fully qualified string to improve code readability and maintainability by util
refactor YamlResource to use a new method for listing YAML to improve code readability and maintainability by encapsulating YAML loading logic
removed public access modifier from equals and hashCode methods in Marker. java to improve encapsulation and adhere to best practices
refactor thread factory implementation to use a lambda expression instead of an anonymous inner class to improve code readability and reusability
added unit tests for the ` addToList ` method in ` MongoTemplateTests ` and created a new ` PersonWithAList ` class with
make sure applet panel size don't get resize when resize
replaced toolbar visibility setting with a delayed execution using a Handler to improve UI responsiveness during toolbar visibility changes
refactor SeriesReader to improve handling of overlapping and unlapped pages to enhance code readability and maintainability by consolidating logic
server : don't save vm password if vm be in stopped state
added new boolean flags usingOutputStream, usingWriter, isCharacterEncodingSet, and isCharacterEncodingSet to manage output stream and character encoding settings
added a warning warning mechanism for assigning side effects in the GroupDialog to improve user experience by notifying users when assignment side effects are encountered
refactored JSON and JSON conversion methods to improve code readability and maintainability
updated the condition for setting icon width and height in FileUploadApiController. java to ensure proper handling of icon dimensions and prevent potential issues with
refactor ` RegisteredServiceProperty ` and ` JwtTokenCipherSigningPublicKeyEndpoint ` for improved readability and consistency to enhance code maintainability and
added a method to check content types from the user's MIME types to enhance file handling and improve error handling for file operations
updated NettyConnection to use JZlibDecoder, JZlibEncoder, and JZlibDecoder to improve compression handling and streamline the
added a new method ` doesClassLoaderDescendFrom ` in ` Util. java ` and removed it from ` MethodHandles. java ` to
removed unused parameters from the connect method in ChannelProvider. java to streamline the connection process by eliminating unnecessary dependencies
added a test for handling an empty final column in TestCsvHeader. java to ensure that a non - empty final column is written to the
added gravity settings for gravity in NearbyMapFragment to improve layout responsiveness for nearby map interactions
added a new test method ` testInterpolation ` to validate distance calculations in ` GeoPathTest. java ` to ensure the correctness of distance
added exception handling and improved method signatures in LeafFilterFactory, ParquetFilterPredicateConverter, and TestParquetRecordReaderWrapper to enhance error handling and
added functionality to set the language based on the audio track's language to ensure the audio track uses the correct language if it's blank
( ) should warn about old
replaced manual array copy logic with a unified ` addAll ` method across multiple array classes to improve code readability and maintainability by utilizing a unified
added exception handling for resource closure in DataSourceProxy. java to ensure proper resource management and prevent potential memory leaks
updated InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to accept a map of ClientRegistration objects to enhance flexibility in handling client registration data
added a method to reset the UI state in SchemaUpgradeHelper to enable users to reset the UI state from the database
added a new boolean field ` failedStep ` and modified the JUnitReporter logic to handle pending exceptions more effectively to improve test reporting behavior by allowing
add a hook to allow a player selector to be use in the entity selector.
added the Closeable interface to the Selector class to ensure proper resource management and prevent memory leaks
added MultiplexConnectionPool implementation in MaxConcurrentStreamsTest. java to improve connection management by utilizing a multi -plex connection pool
added multiple calls to stringType ( ) in CoreOptions. java to ensure consistent usage of stringType ( ) across the application
updated HqlQueryRenderer and EclipseLinkUserRepositoryFinderTests to handle character and parameter correctly to enhance query parsing capabilities and improve test coverage for
updated HTTP status codes from SC _ OK and SC _ OK to NOT _ SET _ 000 and added a new constant NOT _ SET _ 000
pdfbox - 2576 : simplify code, a suggest by valerybokov
fix hikaricpcollectortest failure on slow build
refactor ParquetFormatPlugin and ParquetGroupScan to improve file handling and caching to enhance code readability and maintainability while ensuring accurate metadata
updated the success flag and error handling in Jsr199Javac. java to improve clarity and functionality of the compilation process
added a TableTableModelListener to handle table change events in DefaultSortedTableModel to enhance data model responsiveness by properly notifying listeners of table changes
http - - - - - - - - - - - - - - - - - - - - - - - - - - -
added import statements for DocumentsContract and updated method calls in AuthenticatorActivity and AccountRemovalJob to utilize DocumentsContract for handling different Android SDK versions
removed Log _ OC. startLogging call from MainApp. java to streamline logging process by eliminating unnecessary logging
refactor exception handling in FilterChainProxy to utilize ThrowableAnalyzer for better error handling to improve robustness and maintainability of exception management
updated the implementation of the ` newSize ` method in ` StringBuilder. java ` to use ` this. length ` instead of ` length ` to
added validation for empty filterList in Filter. java to ensure that an empty filterList is provided to prevent runtime errors
added a new file TbStopWatch. java with methods to start and stop the TbStopWatch instance to provide a mechanism for tracking
updated initialization logic in PListStore. java to ensure proper initialization of the initialized state
added @ Deprecated annotation to multiple continuation classes to signal that these classes are outdated and should be removed in future versions
[ hotfix ] [ python ] set the current thread's context class loader to the current thread's context class loader.
fix forge's source, not just the entity.
updated minSdk from VERSION _ CODES. P to VERSION _ CODES. O _ MR1 in ShadowRttCallTest and Shadow
corrected a typo in the method name from ` timerIdForSlot ` to ` timerIdForSlot ` to improve code readability and maintain consistency
# 794 - enh : add simplename ( ) to beandescriptor, and use it in query plan.
updated response URL from " wro / all. js " and " wro / all. css " to " static / all. js
added a test for showing the latest timeseries in IoTDBMetadataFetchIT. java to ensure that the latest timeseries functionality works as
updated references from " appContextLocation " to " contextConfigLocation " across multiple files to align with the new configuration naming conventions
updated exception handling in OCSPChecker. java to improve type safety to enhance error handling robustness and maintainability of the code
add option to disable the output solution on the benchmark
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new file ` Issue _ 815. java ` to implement unit tests for the ` SortedTableMap ` class to address issue #
add shapeless recipe for pipe waterproof
improve performance of sequentialaccesparsevector. iterator ( )
added metadata handling for Shulker and PS entities in BukkitMain, EntitySpawnListener, and EntitySpawnListener to enhance entity management and
added getDebugLogger method to DIHWriter and SolrWriter classes to provide access to the debug logger for better debugging capabilities
should be same a a a a a a a
replaced the instantiation of ` UpToTagChangeSetFilter ` with a new ` UpToTagChangeSetFilter ` variable and added a check
[ beam - 9392 ] fix generic and improve javadocs
refactor BrokerRoutingManager to improve routing logic to enhance performance and maintainability of the routing process
changed volume and up paint colors from gray to GRAY to enhance visual quality for better user experience
refactor InsettableFrameLayout to improve layout parameter handling to enhance flexibility in margin adjustments based on user preferences
updated the ` finishEpochMillis ` method to include an ` duration ` parameter and modified related test cases to enhance the functionality and ensure accurate duration
replaced the use of the ` @ Profile ` annotation with ` @ Assume ` in multiple test classes to ensure tests are only executed when the database
added null check for user before processing claims to avoid potential NullPointerException when user is null
camel - jbang - added unit test base on user forum issue
replace concurrentskinplistset with nonblockinghashset in cassandraconnection
server listpublicipaddresses - include networkid and associatenetworkid to listpublicipaddresses command
added methods to manage battery optimization settings in ShadowPowerManager to enhance functionality by allowing modifications to battery optimization settings
updated the version property from a hardcoded value to a dynamic build property to allow dynamic configuration of the Jetty version based on build properties
added unit tests for verification in ` NumberOfInvocationsInOrderVerifierTest ` to ensure correct verification behavior for various invocation scenarios
refactor debug force evaluation logic in TRegexExecNode. java to improve clarity and maintainability of the code
updated startProfile method to include " - foreground " parameter to enhance profile management by specifying foreground mode
updated executor handling and shutdown methods in MiniSolrCloudCluster. java to improve resource management and ensure proper shutdown process
changed the type of ` parseFieldnames ` from ` Map < String, String > ` to ` String [ ] ` to improve performance and
updated logging to use file name instead of file to improve logging accuracy and ensure proper handling of actions in the EditorText action window
updated warning message formatting in ClassFileReader. java and JdepsTask. java to improve clarity and consistency in warning messages
added LinkStorage and LuceneStorage configurations in Fetcher and FetcherTask classes to improve data storage efficiency and enhance debugging capabilities
updated the ` populateBubble ` method to include an additional parameter for handling an existing ` BubbleBar ` to improve the handling of bubble
replaced warning log statements with an exception throw in CronScheduledRoutePolicy. java and ScheduledJob. java to improve code clarity and maintainability by
refactor ` buildRpcExt ` method to accept a single ` Method ` parameter instead of an array to simplify the method signature and improve code readability
[ java ] use a different multicast delay generator for the loss handler.
refactor Gson initialization to use JsonObject instead of GsonBuilder to improve code clarity and ensure proper JSON serialization for client information
added a conditional check for ` openOrder. getFieldAmount ( ) ` before setting the average price to ensure the order's average price is
refactored the initialization of ` executionReports ` in ` BinanceStreamingMarketDataService. java ` to improve code readability and maintainability
added a fail method to handle exceptions in LdapTimeoutTest. java to improve error handling and provide clearer output during tests
don't try to load user dictionary if they don't exist
updated password handling logic in AmbariServerConfigurationHandler. java and adjusted test expectations in RootServiceComponentConfigurationResourceProviderTest. java to improve
added a method to check if a segment is already parsed and modified the ParseSegment class to utilize this method to improve segment parsing logic and enhance
[ flink - 18482 ] [ yarn ] provide an option to configure application attempt fail interval
improve error message when h2 driver be not include or unload
hbase - 25836 set default scan readtype to stream for snapshot - based inputformat
added fixed height and width options with their respective getters and setters in LoginInstanceRequest. java to enhance the flexibility and usability of the login
added a cornerRadius parameter to the update methods in ActivityControlHelper, WindowTransformSwipeHandler, ClipAnimationHelper, and LauncherLayoutListener to
updated the COMMANDS _ TO _ REMOVE array to include additional filters and added a warning filter for cross product relationships to enhance query performance and
refactor connection retry logic in TxnHandler. java to improve reliability and error handling during connection retries
change txnensurebackupsnapshot to txnchecksnapshotsnapshotsnapshotsnapshotsnapshot
added a private final char [ ] array to the FirstOfStringsMatcher class to enhance the flexibility and usability of the strings array
updated delete statements to use " DELETE ROWS CLIENT SELECT " instead of " DELETE ROWS " to clarify the purpose of the DELETE ROWS
updated exception handling logic in BaseServiceException. java and added corresponding unit tests in BaseServiceExceptionTest. java to improve reliability and correctness of exception
added support for multiple rapid install types in the AdbHelper and related classes to enhance the flexibility and usability of the APK installation system
updated the regex pattern for the Seed pattern in SortTest. java to allow additional characters in the seed pattern
refactor MultimapSubject to use a Factory for better handling of iterable values to improve code readability and maintainability by encapsulating data retrieval logic
simplified return statement in Workspace. java to improve code readability and maintainability
added support for transmuxing in Transformer and TransformerInternal classes to enhance flexibility and control over transcoding behavior
added functionality to localize strings from the UI manager in Picker. java to enhance user experience by allowing localization of strings
camel - 1331 fixed the unit test error of camel - cxf
hhh - 11744 add support for lockacquisitionexception and pessimisticlockexception
added null check for queryId and updated import statements in TestJdbcDriver2. java and HiveStatement. java to improve code robustness and
exclude usesunboundedpcollections and usestimermap from pardo test
updated HTML syntax in GpsSimpleViewFragment. java to remove unnecessary whitespace to improve code readability and maintainability
[ java ] remove unused leadershiptermid and leadershiptermid
refactor HttpSender to use instance variables instead of local variables to improve code clarity and maintainability by using instance variables
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
updated the method signature of ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` to improve
added null check for the tree before processing markers to enhance robustness by preventing potential NullPointerExceptions
xwpf : use bigdecimal instead of float for font size
change email to an array of email in addressbookdocoomoresultparser
refactor dependency handling in RawMavenResolver to use a set of exclusions to improve code readability and maintainability by eliminating stream operations
added support for quoted and base currency in DSXAdapters and DSXPairInfo classes to enhance currency management and improve error handling for unsupported
updated TestBlockingIO, TestParsingTable, TestResolvingIO, and TestValidatingIO files to improve code organization and maintainability
[ drools - 903 ] fix incremental compilation when the pom be invalid
updated the initialization of ` copy ` in ` NativeArray. java ` and added a conditional check for ` sobj. has ( k )
updated JacksonDataFormat and JacksonXMLDataFormat classes to improve data handling and format consistency
use methodhandles. neverpartofCompilation ( ) instead of MethodHandles. findStaticGetter ( ) and MethodHandles. findSetter ( )
added a method parameter for handling CompletableFuture in the database to improve handling of asynchronous completion stages in the application
updated the calculation of mFreezeCheckPoint in PlaybackController. java to accommodate larger playback durations
added imports for Whitebox and updated internal state setting in AbstractCommonPowerMockRunner and removed redundant run method in PowerMockRunner to improve code clarity
updated the method call to use realType ( ) instead of typeCode to ensure the correct type is used for unmarshalling in the application
added handling for method invocations in TabsAndIndentsVisitor. java to improve indentation management for method invocations
replaced LuceneTestCase with TestCase in TestSingleTokenFilter class to extend TestCase instead of LuceneTestCase
updated the HTML table structure in HtmlProcessInformationsReport. java to improve the table structure to enhance readability and structure of the HTML output
updated JdbcStepExecutionDao, MapStepExecutionDao, and SimpleJobRepository to improve context management and ensure proper execution context handling
added conditional check for new media folder visibility before adding it to the root folder to ensure proper handling of media folders based on configuration settings
added null checks for the actor parameter in SplitPane. java to ensure that the actor is not null before proceeding with further operations
added handling for JavaType. Parameterized in RemoveUnusedImports. java to improve type handling for parameterized Java types
updated debug log message to use ` this. getModInfos ( ) ` instead of ` getModInfos ( ) ` to improve logging clarity and ensure
changed the logger declaration from instance to static in TicketGrantingTicketImpl. java to improve performance by reducing object creation overhead
updated SQL string to include precision in timeseries creation to ensure compatibility with updated data formats
added a method to check if a value is present in AttrData. java and updated Converter. java to utilize this method to improve value comparison
added support for a new locale and character modifier keys in the CPlatformResponder to enhance input handling for specific locales in the application
[ java ] add aeron _ pubLICATION _ connection _ timeout to the c medium driver.
added a condition to return false if the request URI starts with " / css " or " / images " or " / favicon " to ensure
added assertion to verify installation failures for a test APK to ensure that the device is rooted before running the installation process
no effective change - remove oracle ansi sqllimiter
added MultiMap functionality to TestSimpleBodyHandler and updated the expected value in TestVertxTLSBuilder to ensure correct handling of secure transport protocols
updated Java library paths in DiffRuleKeysScriptIntegrationTest. java to ensure compatibility with the latest library versions
added a new boolean variable ` mIsDismissHapticRunning ` and modified the condition to check its value to ensure that the haptic
update explosion cause to include projectile source
removed unused import and modified the getItemId method in SymbolInputAdapter to streamline the code by eliminating obsolete functionality
updated API parameters in Bitfinex classes to use QueryParam instead of direct query parameters to improve code readability and maintainability by simplifying the API
camel - core - fix the unit test error of camel - core
[ hotfix ] [ runtime ] add tostring ( ) method to kubernetesleaderelectiondriver
refactor SqlSessionFactoryBean to improve code structure to enhance maintainability and readability of the code
fix possible npe in tripleinvoker
replaced error logging with a throw statement in PolygonRegionLoader. java to improve error handling by throwing an exception instead of throwing an exception
added a method to check if a threadlocal deadline is already started to improve error handling and provide informative feedback when the threadlocal deadline is
improve error message for closedchannelexception in nettyrequestexecutor
modified text setting logic for genres in ItemListActivity to handle potential null values gracefully to improve user experience by avoiding potential NullPointerExceptions
[ hz - 2382 ] master hook should be reset if master hook be reset
added unit test for the ` ` map container'' feature
fix possible npe in walnode # getmemtableinfo ( )
added a new test for retrying the same host on a callback failure to improve reliability of the HTTP client by retrying the same host
updated package - info. java files for consistency to improve code readability and maintainability
added a new test class SQLServerEscapeQuestionCharacterTest to validate SQL server query functionality to ensure correct handling of special characters in query results
added @ NonNull annotations to constructors in CamelModule and JoobyBeanRepository classes to enhance constructor flexibility and enforce non - null parameters
replaced synchronized block with a while loop in JavaFXSEPort. java to improve thread safety and reduce synchronization overhead
updated package imports from ` com. kenai. jaffl ` to ` com. kenai. jaffl. provider
refactor crop behavior handling in CropperUtils. java to improve clarity and maintainability of the code
removed the ` appName ` parameter from the ` configure ` methods in ` InputRC ` to simplify method signatures by eliminating an unnecessary ` appName
[ gr - 19399 ] add test for ignore and broken dependency in cataloginstalltest and uninstalltest
- option - option - - - - - - - - - - - - - - - - - - - - - - - -
replaced value assignment with value. intern ( ) in VersionedValue. java to optimize memory usage by using string intern ( )
added support for " MOVE " status in recv _ status checks to enhance functionality by allowing additional status checks
updated date formatting parameters in FixedDateFormat. java to ensure consistency in date formatting across the codebase
replace org. apache. curator. shaded. com. google. common. collect. Lists with com. google. common. collect
[ hotfix ] [ runtime ] fix spill memory leak
updated permission checks in Visit. java to include admin and untrusted visit status to enhance security by restricting access to untrusted players
make sure we don't try to register jingle that be already register.
updated boundary checks in BasicURLNormalizer to include additional valid characters to ensure proper normalization of URLs with valid characters
changed access modifiers of methods in QuickstepTransitionManager from protected to private to enhance encapsulation and restrict access to these methods
added a check for the lock rate in the EncodingConfiguration class to ensure that the correct encoding based on the specified settings
added method ` getProjectPath ( ) ` to ` ProjectGenerator ` and modified ` generateProjects ` to return an ` ImmutableSet < Path > `
fix npe in hostLocaleprovideradapterimpl. getcalendartype ( )
added a new file ` MSwingUtilities. java ` with utility methods for creating and utilizing Swing utilities to provide utility functions for generating and
camel - 6639 : camel - mail should use asynccallback instead of defaultproducer
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enable refresh of configuration properties in the application
added unit test base on user forum issue
added Main and ScriptRenderer classes for script rendering functionality to establish a structured way to run script rendering in the application
added inputState check in Request. java and created a new test for query after reading in RequestTest. java to enhance request handling and ensure
added a method to check if an actor is a descendant in the Group class to improve actor hierarchy checks and enhance touch focus handling in the Select
replaced reportFailure calls with context. runCloseHooks in DeploymentManager. java and added a new test case in DeploymentTest. java to
don't use stack. copy ( ) in lexiconrecipemappings.
[ java ] increase sleep time after interrupt in constanttimefurerest.
replaced ` StringUtils. trim ( ) ` with ` StringUtils. isNotBlank ( ) ` and added a check for non - blank short names to improve
remove dependency on classpathurlstreamhandler from jollyDayHolidays
added a new file ` FieldUtils. java ` with utility methods for reflection - based field access to improve code organization and ensure required fields are
removed unnecessary speculative type checks in DeferredAttr. java and added a new class DoubleStaticImport. java with a test method to improve code
updated layout inflation from workspace _ custom _ content to workspace _ screen and added padding adjustments for custom content to improve layout organization and ensure
added a method ` updateSettingsWithSaveLastAccount ` to ` XabberAccountManager ` to update settings with a last account ID to improve
add setvar command : set linereader variable value , fixes # 466
fix cat entity not be able to pick up item ( # 7141 )
improve error message for unsigned window frame
pdfbox - 4892 : add test for font, a suggest by valerybokov
added code to set the application's mode in PageListController to ensure the application's mode reflects the current application settings
added methods for handling Docker file paths and build arguments in ImageFromDockerfile to enhance flexibility in managing Docker image paths and build arguments
added a null check for threadInfos array before assigning it to it to avoid potential NullPointerExceptions when threadInfos [ threadId ] is null
updated angle comparison in PieChartRenderer to use Utils. FLOAT _ EPSILON instead of a fixed value to ensure that the angle is within the
[ hotfix ] [ checkpoint ] add more logging to singleinputgate
added new table types to the Schema. java file to enhance database schema management capabilities and improve performance
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum classes to allow users to specify a minimum similarity factor for fuzzy queries
replaced ` addActionsView ( ) ` with ` setActionsView ( ) ` in ` RecentsView. java ` to improve clarity and
''' should''''''''''
added auto configuration for JMS and Kafka auto - configuration in ZipkinAutoConfiguration to enhance configuration options for better integration with Spring Boot
added null check for the component in JLayer. java and created a new test class bug6875716. java to ensure proper handling of
updated import statements to use com. google. common. base. Function instead of avro. shaded. com. google. common. base
fix a bug in the builder phase that cause an unwind block to be process twice.
added getter and setter methods for legacyRenderer in Label. java to enhance the flexibility and usability of the legacy rendering feature
replaced the use of ` intToFourBytes ` with ` Ints. toByteArray ` in ` AbstractJweDecrypter ` and `
added null check for mObserver in NavigationModeFeatureFlag. java to prevent potential NullPointerException when mObserver is null
updated the ` thenComparing ` method signature and added unit tests for the ` Department ` class to enhance type safety and improve test coverage for
updated references in DocIdSet. java to improve code clarity and maintainability
updated the end time UC in UserRuleAnomalyFunction to use the current key from bucketMillis instead of a null value to ensure accurate
added exception handling for NumberFormatException in VisualScoreTagTest. java to ensure robust error handling when parsing integer values
added setting of class loader in MockFactory to ensure proper loading of MockFactory instances
added a new ` OriginalFormat ` class and updated ` ConverterWithEnumFormat ` to utilize it to enhance the formatting capabilities for better data handling
replaced hardcoded date format with a constant to improve maintainability and reduce potential errors in date formatting
updated JAWTRenderer. java file to improve rendering performance and enhance visual quality
camel - aws2 - lambda : enable autowire on the lambda client, fixed test
cloudstack - 7143 : don't generate a mac address for a nics in the network
updated string header name check in ProxyServlet. java to improve clarity and maintainability of the code
changed the method from submit to execute in TraceableExecutorService to ensure proper execution of the executor service
added ` getDetails ( ) ` method to ` Authentication `, ` AbstractAuthenticationToken `, ` UsernamePasswordAuthenticationToken `, and ` Authentication
changed the initialization of ` randUsePoints ` from a random boolean to a fixed value of ` 0 ` to allow for a random number of
replaced ` appendDot ( ) ` with ` endSentence ( ) ` across multiple classes to standardize method naming and improve code clarity
updated formatForConsole method to accept Locale as a parameter to ensure consistent formatting across different locales
refactor GroovyParserVisitor to improve argument parsing logic to enhance readability and maintainability of the code
added boundary checks for top, bottom, left, and right inset in the Border class to ensure proper handling of inset values and prevent out -
refactor gesture state initialization to use a dedicated method to improve code readability and maintainability by centralizing gesture state management
replaced Joda - time imports with Java's DateTime and DateTimeFormatter for better date handling to improve code readability and maintainability by using standard Java
updated openblas and openblas _ nolapack files to improve code organization and maintainability
use file. close instead of ioutils. close ( )
added synchronized keyword to the initTxnMgr method to ensure thread safety during initialization of the HiveTxnManager
increased the wait time from 120 seconds to 480 seconds in AbstractDistribZkTestBase and AbstractFullDistribZkTestBase to
add a new class ` SearchResults ` to track and retrieve search results to provide a structured way to track and manage search results in the application
bugfix # 20612 - add refresh rate and refresh delay to cpu sampler
fix a bug in the bytecode node that could cause a null pointer exception.
added new version constants for versions " 8.9. 0 - cfs ", " 8.9. 0 - nocfs ", and " 8.
updated feature flag from DISABLED to TEAMFOOD to enable two line label in all apps
added a new API endpoint for retrieving Tenant pools in InstanceResource. java to provide access to instance pools for the current instance
added methods to check for early term termination based on document ID and prefix in TopFieldCollector to improve code readability and maintainability by centralizing
updated ` InlineBytecodeGenerator ` to include ` isToString ( ) ` for better type handling to ensure correct conversion of mock interfaces to strings
added logging statements for command compilation and processing failures in CxxCompileStep and CxxPreprocessStep to improve traceability and debugging capabilities during compilation and
add stringutil. removecharacter ( string, char [ ] ) method to remove non - string character
[ 3.0 ] fix the config of metadata service protocol ( # 9453 )
( chore ) camel - jbang - karaf : move datatransformer interface to org. kie. api. runtime. process
changed the type of the array from a Collection <? > to a List < Number [ ] > in DistributionGraph. java to improve type
refactor conditional logic in FormatStringChecker. java for clarity to improve code readability and maintainability
initialize SolrCore to null to ensure proper initialization of the SolrCore instance
refactor ITestDbTxnManager for improved transaction management to enhance performance and reliability of transaction handling
refactor connection handling in DatabasePlatformFactory to use try - with - resources to improve resource management and simplify connection management
added a new method ` remoteCodeFirstPojo _ testMapModel ` to ` CodeFirstPojoClient ` and implemented tests for its functionality to enhance
pdfbox - 4892 : simplify code, a suggest by valerybokov
refactor selection and listener setup in ScaleDialog. java to improve code clarity and maintainability
renamed the method from ` updatePlayerStepStatus ` to ` tickBelt ` and updated its implementation to improve method naming for better clarity and
added logging functionality and modified appearance stream creation in AppearanceGeneratorHelper. java to enhance error handling and improve code clarity
changed the key type from SortedSet to LinkedHashSet in ExecuteSqlCommandStep. java to maintain insertion order for the keys collection
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 and modified method implementations in PageListController and PagePreview
updated the preload library path from " libusb - 22 " to " libdc1394 - 25 " to ensure compatibility with the latest version
modified MainMockTransformer to conditionally call setAllConstructorsToPublic based on agent support and added new classes for testing static methods with private constructor to enhance
pdfbox - 4892 : add comment to avoid a classcastexception
add ability to set the window title in the jmeter gui
refactor depth calculation logic in XRSurfaceData. java to improve clarity and maintainability of depth adjustment based on pixel size
added errorResponseBody handling in OkHttpDataSource. java to improve error handling for unsuccessful response responses
added a static method ` exit ` to the ` TopLogging ` class and updated its usage in ` TopThreadGroup ` to improve error handling
updated the start calculation logic in NativeRegExp. java to ensure correct handling of regular expressions based on the regex's state
planner - 468 : ignore fail test due to upgrade to optaplanner 6.3. 1 +
[ hotfix ] [ core ] fix typo in defaultallocator
added a method to clean entries without feeds in DatabaseCleaner and FeedEntryDAO, and integrated it into FeedEntryDAO to improve database cleanup
changed return type of appendToLabel method from void to AtomicCounter to enable method chaining for improved usability
added new ` NoOpIdleStrategy ` class and updated ` LowLatencyMediaDriver ` to use it instead of ` BackoffIdleStrategy `
added handling for HTTP status NOT _ MODIFIED in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure proper response behavior when not
refactor ` InstrumentationPartialEvaluationTest ` to use ` ToolEvalNodeFactory ` instead of ` SplicedNode ` to improve clarity and
removed the ` paintTabArea ` method from ` SynthTabbedPaneUI ` to streamline the rendering process for the tab area
updated the ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept an ` Object. args ` instead of a
( chore ) camel - ftp : use file. isabsolute ( ) instead of file. isabsolute ( )
added a new build method in JavaProvenance to generate JavaProvenance objects to facilitate the creation of JavaProvenance
added logging for registered Hive UDFs and modified deterministic check in HiveFunctionRegistry . java to improve traceability of registered functions and correct deterministic type checking
increased loop iterations from 100 to 200 in CloudStateUpdateTest. java to accommodate larger data sets and improve test coverage
rename unserializablecolumnfamilyexception to unknowncolumnfamilyexception
added handling for writable output files in NativeErrors. java to improve error reporting when a test is run as root
added package info retrieval and error handling in LauncherModel. java to improve robustness by handling potential NameNotFoundException during package loading
cloudstack - 410 : fix db upgrade issue ( # 4383 )
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet and related tests to enhance code clarity and maintainability while ensuring
updated condition checks in LineReaderImpl. java to use regionMatches instead of startsWith to improve code readability and maintainability by using regionMatches
added imports for SourcesFileErrors, SourcesFileResults, and GLOBAL _ DATA _ TABLES, and updated dataTables concatenation logic to
added functionality to dismiss all tasks from the overview in TaplTestsTaskbar to enhance user experience by ensuring all tasks are dismissed
add db upgrade template ( # 41500 )
updated connection handling logic in LdapClient. java to improve code clarity and ensure connection is properly closed
refactor action checking logic in SequenceAction. java to improve clarity and maintainability of the code
fix race condition in cassandraserver. set _ keyspace ( )
added a check for synthetic fields in ReflectUtils. java to skip non - synthetic fields during processing
added LoggerProvider class and integrated it into ApplicationController to enable logging functionality in the application
updated the type of the ` builder ` and ` values ` in ` ServerStatusCommand ` to use ` ImmutableMap < String, Object > `
( ) ) should be warn ( )
added a method ` deepStart ` to ` Startables ` that returns an ` CompletableFuture < Void > ` to facilitate deep starting
removed deprecated method ` reservePrimitiveExtensionArray ` from ` Shape ` and its implementation in ` ShapeImpl ` to encourage the use of a
implement ilasertargetblock in laser table, close # 3173
refactor object name validation to improve clarity and structure to enhance readability and maintainability of the code
removed unused imports from TestSolr4Spatial2. java to clean up the code and improve maintainability
setExpireMessagesPeriod to 0 in MemoryLimitTest. java to ensure the test runs with a valid page size
removed unnecessary null checks in RequestHandlers. java to streamline code for better readability and maintainability
modified the way the servlet name is retrieved and logged in ProxyServlet. java to ensure proper formatting of the servlet name before logging
updated import statements and modified the handling of the PYTHONPATH environment variable in ProjectBuildFileParser. java to improve code clarity and maintainability by using
updated audio frame size calculations and error handling in DirectAudioDevice and Toolkit classes to ensure audio data is valid and improve error handling for memory issues
added null check for enums before converting to an Optional to avoid potential NullPointerException when enums is null
improve log message for unexpected end of segment
added a policy assignment based on container scope to ensure the WebSocket session uses the correct policy based on the container's policy
simplified the condition for initializing static fields in the Java to TypeScript translation to improve code readability and maintainability by removing unnecessary checks
updated context creation to use a dynamic web root configuration to enhance flexibility by allowing dynamic configuration of the web root path
( chore ) migrate junit4 to junit5 ( # 4383 )
bugfix # 20613 - use editorregistry. isattachable instead of registry. isattachable ( )
updated method names from ` createHeaderObject ` to ` createHeader ` across multiple formatting helper classes to improve clarity and consistency in method naming conventions
consolidated import statements in VircurexTradeService. java and added a placeholder method for placing stop orders to streamline import statements and
added multiple calls to buffer. reset ( ) in ReduceRecordProcessor. java to ensure buffer is reset before processing new data
added null checks for mOriginalForeground and mOriginalBackground before setting them to prevent potential NullPointerExceptions when mOriginalForeground is null
updated boundary checks for ` decExp ` in ` FloatingDecimal. java ` and added a new ` ToString. java ` class with validation tests
updated property type checking logic in PropertyDescriptor. java and added a new test class Test7189112. java with bean introspection functionality to
removed the maxVersion parameter from version retrieval in RealTimeGetComponent. java to simplify the code by eliminating unnecessary version enforcement
updated the origin header format in NettyRequestFactory. java to ensure correct origin is set based on configuration settings
refactor task visibility and animation logic in RecentsView and TaskView classes to improve responsiveness and maintainability of the code
updated ` isSupportedSingleValueType ` method calls to include a ` field ` parameter to enhance error messages for better clarity and maintainability
add new sample for " Clear HLS : Tears of Steel " and " Clear HLS : Tears of Steel
removed unused imports and simplified string constants in PersistenceProvider. java to improve code readability and maintainability
hbase - 2280 fix log message in execrpcinvoker and Writablerpcengine
added logging functionality to TestSpecificCompiler for various diagnostic types to improve error handling and debugging during compilation
modified WebSocket session handling in WebSocketEndpoint. java and added a new test for session closure in WebSocketIT. java to improve session management and ensure
move listener to after batch processing to prevent race condition.
update the mappings map for OpenSymphony Group to include " Apache Struts / XWork 2.0 / " instead of " OpenSymphony
modified the stream. stop ( ) logic in WebCamInputPanel. java to ensure proper handling of video tracks when stopping the stream
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and introduced a new ` BittrexChartDataPeriodType
updated import statements in GMLExamples. java for improved clarity and organization to enhance code readability and maintainability
updated method call from ` substream ( 200 ) ` to ` skip ( 200 ) ` in ` TargetType58. java ` to improve
hhh - 10956 add support for composite identifier in hibernate
( ) ) should be download ( )
refactor URIRegisterExecutorSubscriber to improve handling of URI registration to enhance code readability and maintainability by simplifying the registration process
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for non - blank OSDb hash before retrieving the information to ensure that the application does not crash if the OSDb hash is
added transferToken method and transferToken logic in RuntimeImpl and MUtil classes to enhance token transfer functionality for smart contract transactions
camel - 14263 : camel - ftp shouldn't try to delete file if it's stepwise
no effective change - code cleanup - no functional change
added validation for ` JoinResult. MATCH ` in ` MapJoinOperator. java ` and introduced BloomFilter in ` HybridHashTableContainer
updated the constructor of HTTPSPDYAsyncEndPoint to include an AsyncEndPoint parameter to enhance the flexibility and usability of the HTTPSPDYAsync
added extra key " id " to intent in multiple adapter classes to store and retrieve the tweet's ID for better tracking and identification
refactor connection handling by replacing internal ( ) calls with a new method disconnectWeb ( ) to improve clarity and maintainability of the connection logic
changed the type of ` _ numChildren ` from ` int ` to ` AtomicInteger ` and updated the return statement to use ` AtomicInteger ` to
refactor various classes to improve code readability and maintainability to enhance maintainability and clarity of the codebase
disable unit test by default
resolve split - packages : move everything from kie - api under org. kie. api : kiebase
replaced instances of ` PredicateType. IN ` with ` PredicateType. NOT _ IN ` across multiple predicate classes to improve clarity and consistency in
updated exception handling in FileActivity, Preferences, and ReceiveExternalFilesActivity to improve error handling and streamline account retrieval process
added null check for witnessService before validation to prevent potential NullPointerException when witnessService is null
modified the construction of the taggedCol string to use getExprString ( ) instead of concatenation to improve code readability and maintain consistency in expression handling
added a null check for Javadoc presence before setting the Java document to avoid potential NullPointerExceptions when Javadoc is not present
rename ` holderMethod ` to ` holderMetadata ` in ` CompiledICHolder. java ` and introduce ` RedefineInterfaceCall. java
replaced calls to revalidate ( ) with revalidateWithAnimationSafety ( ) in Tabs. java to improve readability and maintainability of the code
( ) ) should not be ( )
updated the calculation of the y - coordinate in the Polygon class to improve the accuracy of the y - coordinate calculation
fix npe in cacheconfigtest. testcacheconfigtest ( )
added a check for empty string constant in InheritanceUnsafeGetResource. java and created a new class Bug2974855. java for testing
refactor ShadowCookieManager to improve code readability to enhance maintainability and facilitate future updates
hive. metastore. authorization. storage. check. externaltable. drop should be disable by default ( ashutosh chauhan
added braces to the conditional statement in Stage. java and modified the draw method in ProgressBar. java to improve code readability and ensure proper rendering of
trufflelanguage. bytebuffer. getplatformbyteorder ( ) to cache platform byte order.
updated the property name from " testcontainers. namedpipesocketprovider. timeout " to " testcontainers. windowsprovider. timeout " to
modified the initWebViewLogin method to accept a base URL parameter and updated the WebView loading logic accordingly to enhance user experience by allowing dynamic configuration of
updated exception message format in CallableStatementHandler. java to improve clarity and consistency in error reporting
updated the date format in the ` AuditEventsMvcEndpoint ` and modified the test to include a time parameter to ensure proper handling of valid date
rename exponentialTimer and related classes to PreciseThroughputTimer to clarify the purpose of the timer class
remove softbody from dynamics world after test
[ hotfix ] [ table - planner - blink ] make interface public
[ zeppelin - 5451 ] improve log message of websocket error
added unit test for removal of redundant namespace in jingle
added null check for redplasma and improved stat collection functionality to enhance stability and prevent potential null pointer exceptions
added support for HTTP / 2 headers in BareResponseImpl. java and updated the connection handler in HttpInitializer. java to enhance HTTP /
refactor plot member removal logic to improve clarity and structure to enhance maintainability and readability of the code
updated string formatting in SimpleReport. java to include additional line elements to improve formatting accuracy for better reporting
removed the ` - XDignore. symbol. file ` option and added a new file ` T6863746. java ` to
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed the ` TickerDemo ` class to clarify the purpose of the ticker
refactor contract type handling in Runtime. java to improve clarity and structure to enhance code readability and maintainability while ensuring proper contract validation
ggb - 2281 make sure ggbapplet. createinput3d ( ) work in applet
added @ Ignore annotation to KinesisIntegrationTests. java to temporarily disable tests related to Kinesis integration
remove parserexception from scripttagpayloadreader. parsepayload ( )
updated the method signature of getRepositoryFactoryClassName in JpaRepositoryConfigExtension. java to improve method clarity and ensure proper implementation of getRepositoryFactoryBeanClassName
changed the return type of getExecutableCommand methods from String to List < String > across multiple classes to provide a list of executable commands instead of
changed instance variables from'this'to'IOSGLES20'in IOSGLES20. java to improve code readability and maintain consistency
removed UploadPathActivity and its references from the ComponentsModule to streamline code by eliminating unused activity to improve maintainability
modify return statements in SimpleTextFieldsReader. java to conditionally return totalTermFreq based on indexOptions to enhance flexibility in handling different indexing options
test ( ctconstructor ) : add test for implicit constructor
( ) should be select ( ) for non - oracle database
refactor database connection handling to improve performance and reliability of database operations
updated SpringApplicationBuilder. java for improved application configuration to enhance application performance and maintainability
removed indexOptions parameter from DefaultIndexingChain and PointInSetQuery classes to streamline code by eliminating unnecessary index options
removed substring extraction from rawName to streamline code by eliminating unnecessary substring extraction
added handling for various collection types in AbstractCollectionAssert. java and updated test cases in CollectionAssert _ isUnmodifiable _ Test. java to improve
changed the enum from static to non - static in ProcessExecutor. java to allow for better flexibility in option handling
updated Compose. java and ComposeActivity. java to implement a twitlonger feature to enhance user experience by allowing users to post
replaced the ` toggleKeepInSync ( ) ` method with a direct call to ` getFileOperationsHelper ( ). toggleKeepInSync (
replaced ` DatatypeConverter. parseBase64Binary ` with ` Base64. decode ` in ` ImageUtil. java ` and added unit tests
added new classes ` ControllerCounter `, ` DBCallback `, and ` DBCollection ` to provide a mechanism for tracking and managing document analytics
added'final'modifier to the deleteTicket method in EhCacheTicketRegistry. java to enhance code safety by enforcing immutability
added a new file FlywayMigrationRunner. java to integrate Flyway migration functionality into the application context
replaced calls to ` isEmpty ( ) ` with ` size = = 0 ` in HashMap methods to improve code readability and maintainability by using a
updated the version number from " 0.5. 0 " to " 0.5. 0 " to reflect the latest features and improvements
added nullability annotation to the modify method in CompressionCodec. java and updated its implementation in WriterImpl. java to improve null safety and
refactor jar creation and execution logic in LauncherHelper and Arrrghs classes to improve error handling and ensure proper handling of missing main manifest attributes
renamed several test classes to follow naming conventions to improve readability and maintainability of the test code
[ hotspot ] make hotspotprofilinginfo thread - safe
updated CellCopyPolicy class to accept an instance of CellCopyPolicy instead of implementing Cloneable to improve object - oriented design by leveraging cloning
added a method to reset the icon load result in FloatingIconView. java and invoked it in Launcher. java to ensure that the icon loading
changed method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager. java ` to
updated IconRecentsView. java to handle different screen orientations to ensure proper layout handling for different screen orientations
deleted the AddAdapter. java file to remove unused or redundant components from the codebase
( ) ) should not be open if an exception be throw
hive - 25836 : remove useless code in optraitsrulesprocfactory ( jesus camacho rodriguez
refactor TestLogWatcher to use a dedicated looper method for message retrieval to improve code readability and maintainability by reducing redundancy
added a line to print " < any > " in Java2TypeScriptTranslator. java to enhance the output formatting for better readability
updated SDK version from " 4799589 " to " 4913185 " to reflect the latest release and improvements
removed conditional check for SPRING _ AOP _ PROXY _ TARGET _ CLASS in TraceEnvironmentPostProcessor. java to streamline code by eliminating unnecessary
removed the unused ` singletonLock ` variable and its associated logic from ` TypeCachingBytecodeGenerator. java ` to simplify the code and eliminate
renamed responseClassCallback and forwardClassCallback methods to responseClassCallbackWithClass and forwardClassCallbackWithString to improve clarity and specificity of
modified the ` writeFile ` method to include an ` appendToFile ` parameter for appending output files to enhance file management functionality by allowing optional appending of
added a check for Maven settings and modified repository mirror processing logic to improve the handling of Maven repository mirrors and enhance code clarity
added a ` name ` field to ` BuildRuleSourcePath ` and ` PathSourcePath ` classes and updated constructors accordingly to enhance the flexibility and
updated the logic for matching the service redirect URI in OAuth20CallbackAuthorizeEndpointController to improve clarity and correctness in handling client redirection URIs
replaced instances of ` EMPTY _ ANNOTATIONS _ ARRAY ` and ` EMPTY _ ANNOTATION _ ARRAY ` with ` AnnotationParser. toArray `
replaced calls to ` getBadgedDrawableForUser ` and ` getBadgedLabelForUser ` with ` getBadgedIconForUser ` and `
( ) ) should have line separator ( )
change from isimplementinginterface to isDerivedClass in ConfigurationManager. java and add unit tests for this functionality in CMUTests. java
add input sanitization to the basecontroller.
chore : update java and python dependency ( # 10 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to throw an ` IOException ` and modified the ` buildFileNamesCanBe
refactor CountersReader to improve code readability to enhance maintainability and facilitate future updates
updated the ` logDeepShortcutsOpen ` method to accept a ` View ` parameter instead of a ` int ` to improve clarity and maintain
hbase. ipc. server. reservoir. initial. buffer. count should be deprecated
[ native ] fix test _ native _ window _ query failure
added a method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types to improve the handling of generic parameter types in the executable
refactor TestFSTs class for improved readability to enhance maintainability and facilitate future updates
use labeltop instead of labelheight for the input box
hbase - 25836 increasingtowerowerboundregionsplitpolicy use the initial split size of the table instead of the flush size
removed unnecessary model reset and loader calls in LauncherClings. java to streamline the loading process and improve code clarity
removed redundant initialization of keys and updates lists in ManagedSelector. java to streamline code and improve readability by eliminating unnecessary variable declarations
added a ` excludedDatasources ` field and its getter / setter in ` SpringDataSourceBeanPostProcessor ` to control and logging of excluded datasource configurations
added undo info store in TableValuesView and removed unnecessary null check for ColumnDelete in TableValuesPanel to improve user experience by ensuring undo
camel - aws2 - kinesis : use clientconfigurationfactory instead of awsutil. createkinesisclient
refactor channel triggering logic in VelbusSensorHandler. java to use a loop for better handling of channel events to improve code clarity and maintain
disable unfavorable benchmarks by default
added unit tests for illegal database names in IoTDBSessionSimpleIT. java and modified PartialPath. java to throw an IllegalPathException
added a call to resetNewFiles ( ) in GarbageCollector. java to ensure that new files are properly reset before use
updated workspace margins to use horizontal margin instead of vertical margin to improve layout responsiveness for different screen orientations
refactor CharTokenizer to improve code structure and readability to enhance maintainability and readability of the code
chore : update sample code to set total timeout, add api client header test
bug 10719 : fix typo find by codespell on fossies. org
updated libGDX version strings from " 1.5. 5 " and " 1.5. 6 - SNAPSHOT " to " 1.5. 6 - SNAPSHOT "
added a private Set < String > metricNames using ConcurrentHashMap. newKeySet ( ) to track and retrieve metric names efficiently
refactor URI handling in MavenManifestFactory to use Fs for better resource management to improve code clarity and maintainability by using a more generic path type
replaced direct system property checks with a static final boolean variable to improve code readability and maintainability
refactor JdbcAggregationRepository to improve code readability to enhance maintainability and ease future updates
clear the slotList from the other object and add it to the slotList to ensure the slotList contains all relevant elements from the other object
initialize m _ predCount to - 1 in PredicatedNodeTest. java to set the value of m _ predCount to - 1 to
added a method to merge properties in ConfigurationSpringInitializer to enhance configuration management by merging properties from the configuration instance
updated ` setupLogging ` method to use ` org. slf4j. Logger ` instead of ` org. slf4j. Logger `
changed implementation of ` aliasToWork ` from ` HashMap ` to ` LinkedHashMap ` to maintain insertion order for better predictability
added logic to retrieve JDBC handler maps from the superclass of the type to improve handling of JDBC handlers for better type management
added debug logging statements in HibernateItemWriter, JpaItemWriter, FlatFileItemWriter, and JmsItemWriter to improve traceability and debugging
replace';'with';'in LocaleUtils. java to ensure correct formatting of locale values
updated handler context handling in Http2ServerResponseImpl and Http2Test to ensure proper execution of handlers and improve test reliability
optimize memory usage by cache table in xssfevaluationworkbook
updated schema text detail type checks in BaseSchemaTextFormatter. java to ensure accurate validation of schema text details
replaced instances of ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests. java ` to align with the latest MongoDB
replaced HashSet with LinkedHashSet in SparkWork. java to maintain insertion order and improve performance
updated SkewJoinOptimizer to check if the operator tree is not cloned before proceeding to ensure that the operator tree is properly cloned before proceed
added null client ID check in DynamicRegistrationClientConfigurationService and adjusted import statements in JsonFileRegisteredClientService to ensure proper handling of null client
clear achievementlist. field _ 187981 _ e to ensure it be clear before use it.
initialize fields in MutableDatabaseInfo and MutableJdbcDriverInfo classes to initialize them to an empty string to ensure default values are set to an empty
updated references from link _ share _ read _ only to link _ share _ view _ only in QuickSharingPermissionsBottomSheetDialog and Sh
added methods to read long buffers in ByteBuffersDataInput. java to improve performance and memory usage for reading long data
renamed variables ` st _ atime ` and ` st _ mtime ` to ` st _ atime _ sec ` and ` st _ c
added a new file TestNoEagerReclaimOfHumongousRegions. java to test garbage collection of large object references to ensure that
added search visibility control based on user preferences to enhance user experience by allowing dynamic visibility of the search bar based on user preferences
camel - jbang - fix router feature to use routes ( ) instead of router ( )
added null check for the variable'cur'and'next'to prevent potential NullPointerExceptions during rendering
added a new action for reloading the page in the menu to enhance user interaction by allowing users to reload the page
( ) should be warn ( )
update minimum Spring version from 3.2. 7. RELEASE to 3.2. 8. RELEASE to ensure compatibility with the latest security improvements and improvements
added a null check for currentClusterConfigForService in UpgradeHelper. java to ensure that the configuration type is valid before proceeding with operations
replaced Iterator with ServiceLoader for loading extension points to simplify code and improve performance by leveraging ServiceLoader
added a finalize method to close the table in HiveHBaseTableInputFormat to ensure proper resource management and prevent memory leaks
added a ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` and ` HiveViewImpl ` classes to manage the execution of statement
updated feature settings and variable types in DocumentFactory, XMLSAXHandler, and ElementHandlerFactoryTest to improve code clarity and ensure type safety
updated the command waiting mechanism in JdbStopThreadidTest. java to improve clarity and functionality of exit command handling
added getType method to ShadowContentResolver and corresponding tests in ContentResolverTest to enable retrieval of content provider type from the content resolver
updated future handling in ExpressionThreadPoolManager. java to improve code clarity and maintainability by using more descriptive variable names
updated the default HTTP port property from " port " to " vertx. httpPort " to ensure the application uses the correct port configuration for
replaced ` addCaptureListener ` with ` addListener ` in ` Dialog. java ` to ensure proper listener registration for the button table
updated DEFAULT _ BATCH _ SIZE from a fixed value to a dynamic adjustment based on available processors to allow dynamic adjustment of the default batch size based
[ hotfix ] catch exception in taskexecutor. establishresourcerequestmanagerconnection ( )
initialize classFile to null and modify exception handling in LambdaRewriter. java to improve code clarity and ensure proper fallback behavior when classFile is
updated the validation of the ` min ` and ` max ` parameters in ` IllegalArgumentException ` to ensure that the ` min ` and ` max
updated the ` onMessage ` method signatures to include an ` E entity ` parameter across multiple classes to enhance message handling by associating the telegram
added new interface ` Cursor `, ` Database `, and ` Row ` classes to provide a standardized way to handle database - related operations
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the codebase
# 163 - enh : add setbeanid ( object bean, object id ) method to ebeanserver
updated method to use getAddToSiteDescriptorXsl ( ) instead of hardcoded " tools / xslt / add - menu - to - site
added a list of RequestMatcher and modified request matcher initialization to enhance flexibility by allowing multiple request matchers
added hashCode and equals methods to ContactResource class to ensure proper comparison and hashing based on resource names
move getrequest ( ) and getresponse ( ) from abstractprocessor to abstracthttpprocessor
orododododododododododododod only once
reset mockControl in TestJdbcDataSource and add tearDown method in TestIndexSearcher to ensure proper cleanup of resources after tests are executed
( ) ) should have an open file ( )
fix typo find by codespell on fossies. org
clean up parserdecorator, it's no longer use
fix exception in fmlsecuritymanager when call a non - existent class.
removed unused parameters from AccountUtils and IndexedForest classes to simplify the code for better readability and maintainability
updated parameter key from " swap " to " rename " in TestCoreAdminApis. java and updated the rename action in CoreApiMapping
added a new test method ` testJsxComment ` to ` JsLexerJsTest. java ` and modified the parsing logic in ` Parser
added ScreenRecordRule import and annotation to AddWidgetTest. java to enable screen recording functionality in the launcher tests
added tests for handling missing Buck configuration in BuildEndToEndTest. java and CxxEndToEndTest. java to improve error reporting
added physical memory checks in TestStringBufferAndBuilderGrowth. java to ensure the machine has sufficient resource to run tests
added deprecation warning and refactored conversion logic in ConversionService and MapToLocalDateConverter to improve code clarity and maintainability
added a success variable initialized to true in HiveMetaStoreClient. java to indicate successful execution of the HiveMetaStoreClient functionality
updated string comparison from ` = = " * " ` to `. equals ( " * " ) ` in ResourceReferenceInfo. java and
added support for " amp. twimg. com / v / " in the TimeLineCursorAdapter and TweetActivity classes to enhance functionality
added @ Deprecated annotation to AreaReference. java to mark the class as outdated and indicate that the class should no longer be used
refactor ElementType and Target classes to improve code readability and maintainability
updated assertions and ref kind handling in MemberName. java to improve error handling and ensure correct reference kind management
changed the default value of submitKeyUpdates from " false " to " true " and added synchronization to the runChange method to ensure thread safety
modified the event handling logic in EditNodeTextField. java to ensure proper event processing for mouse events
camel - 1331 fixed the issue of beanexpression not be able to look for the bean class in the registry.
[ hotfix ] fix checkstyle violation in benchmark
refactor exception handling in AgentRunnerTest. java to improve readability and maintainability of the code
( ) ) should not be an extension.
refactor faces addition logic to improve clarity and maintainability of the code to enhance code readability and reduce redundancy in the handling of faces
refactor ProcessEngine class to improve code readability to enhance maintainability and ease future updates
fix typo find by codespell on fossies. org
updated the ` PrintMavenAsCycloneDxBom ` and ` PrintMavenAsCycloneDxBomTest ` classes to
updated back ( ) method to use evt. getComponent ( ) instead of back ( ) to ensure the correct component is returned from the event
only once ( # )
updated method signatures in ObjectArraySubject and StandardSubjectBuilder to use more specific return types to improve type safety and clarity in method signatures
updated configuration retrieval methods to use ` getConf ( ) ` instead of ` NutchConf ` to improve consistency and maintainability of configuration handling
replaced OMR. gui. removeBoardsPane ( ) with tab. deselected ( ) in SheetAssembly. java and modified
added a method to retrieve the session ID in RemoteWebDriver to provide access to the session ID associated with the RemoteWebDriver
added null checks for node and edge time interval in ImportContainerImpl. java and corresponding tests in ImporterGEXF2Test. java
removed the " - INFO - serverPort " argument from the command in MockServerContainer. java to simplify the command configuration for better readability
updated error logging message format in FunctionRegistry. java to improve clarity of error messages for better debugging
remove dependency on robotshtonoringpolicy
added JUnit Ignore annotation to ITSystemTest. java to temporarily disable tests that are not ready for execution
camel - scan - fix test on window
added a new method ` alternativePath ( ) ` to create an InputStream from a byte array to provide an alternative path for input stream handling
updated LogEntryParseTester to use getFirstFilter ( ) instead of init ( ) to ensure the input is correctly initialized with the first filter
added protectionDomain parameter to the BufferAlignmentAgent constructor to enhance security by restricting access to the protection domain
added dispose method for mesh, batch, texture, and texture in WaterRipples. java to ensure proper resource management and prevent memory
added configuration option to disable unsafe external table optimization and its data change on external application
- - - - - - - - - - - - - - - - - - - - - - - - - - - -
updated wallpaper offsets in Workspace. java to set the wallpaper offset to zero instead of - 30 to improve user experience by allowing wallpaper
changed return value from false to true in SybaseASADatabase. java and modified sequence generation logic in SequenceSnapshotGenerator. java to ensure
should be'' when'' and'be '
added directory creation and validation in SnapPuller. java and corresponding unit tests in TestReplicationHandler. java to ensure proper handling of temporary
removed " id : launcher " prefix from AppTarget. Builder to streamline the code for better readability and maintainability
updated frame method signatures to include an output buffer parameter to enhance message handling by providing additional information about the output frame
updated constructor parameters in various classes to use ` ClientRegistrationRepository ` instead of ` ClientRegistrationRepository ` to improve clarity and consistency in parameter naming
updated the documentation for the ` delimiter1 ` variable in ` GenericUDFStringToMap. java ` to provide clearer guidance on how to
updated PlainFormatter to use ` java. time. temporal. ChronoUnit ` and ` java. time. temporal. ChronoUnit `
updated TIMEOUT _ MS from 1000ms to RETRY _ CLOSE _ TIMEOUT _ MS and added a close ( ) method to improve timeout handling and
hhh - 14620 avoid reflection for private lookup in classloadingstrategyhelper
refactor Mockito class to improve code readability to enhance maintainability and ease future updates
updated log message to reflect the new proto event file format to improve clarity and accuracy in logging output
added @ Ignore annotation to SamplingNamingTest. java to mark a test as ignored due to potential issues with multiple sample results
updated error message from " rows and columns must be greater than zero " to " rows and columns must be greater than zero " to improve clarity
make sure we don't throw exception if we can't find the feature
added sorting functionality for BoundSheetRecords in XLS2CSVmra and implemented a custom BOFComparator in BoundSheetRecord to enhance the
updated calculations for avgImpulse and startThrust in ThrustCurveMotor. java to improve accuracy in calculating thrust impulse
updated InputSystemJme constructor to accept inputManager directly to streamline input system initialization and improve code clarity
refactor the logic for setting the hash code field offset in UniverseBuilder. java to improve code clarity and ensure proper handling of hash code
remove deprecate method ` getMesh ( ) ` from ` block `
[ hotfix ] [ yarn ] fix typo in yarntaskmanagerrunner
added an option to ` EMPTY _ WORD _ OPTIONS ` in ` Example. java ` and modified matchers logic in ` LineReaderImpl. java
include writecommitlog when push view replica update
added functionality to set the default button ID in the CaptureActivity based on user preferences to enhance user experience by allowing easy access to the auto -
added a batching test for Post objects in JoinedTableTest. java to ensure batching functionality works correctly during database flushing
added handling for ` EntityExistsException ` in ` JpaPersistenceService ` to improve error logging for duplicate entries in the persistence service
( ) ) should be ( ( ) )
removed the save ( ) method from PMS. java to streamline the code by eliminating unnecessary save calls
simplified key event handling in ExtendedEditText. java to improve code readability and maintainability
updated the calculation of ` newCapacity ` in ` AbstractStringBuilder. java ` and added a new class ` Capacity. java ` with a test
replaced goHome ( ) method with onNoteSaved ( noteTmp ) in DetailFragment. java to improve code clarity and maintainability by using
added support for endnotes in XWPFDocument to enhance the handling of XWPF endnotes in the document
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent to enhance event publishing by including clientInfo information
added a test method to verify the version of the Ogr library in BridjOGRDataStoreTest to ensure the BridjOG
added a new file ` Lifecycle. java ` that implements network error handling to provide a mechanism for managing network - related network errors in the application
update deviantart ripper to handle http 404
removed unused imports from BodyTubeShapes and RocketFigure classes to clean up the code and improve readability
added support for fullscreen surface scaling in the PJOGL application to enhance visual quality and usability in the application
feat ( flutter ) : add an initial value to the list of auto - select option
replaced PackedInts. fastestFormatAndBits with BlockPackedWriter and refactored related code to streamline code and improve performance by elim
camel - jbang - fix issue with camel - default - router to use linkedlist instead of collection
updated the handling of HTTP response headers in GoAwayTest. java to streamline response management and improve code clarity
added support for FluentSetterBean with a map in ReflectionUtils. java and created a corresponding test class FluentSetterTest. java to enhance bean
updated the ` post ` method to return a ` ListenableFuture < HttpResponse > ` instead of a ` ListenableFuture <? > ` to improve
camel - core - fix unit test for file sort by expression
updated print statement to use ` lastAppearedTaskTargetId ` instead of ` lastAppearedTaskTargetTarget ` to improve clarity
added configuration options for image and PDF compression in RtfDocumentSettings. java to enhance image processing capabilities in the application
added SQLConstant import and modified the way the full path is added to the columns based on the SQL parameter to improve the handling of aggregation functions
updated nested test classes to extend WithNestedTests. AbstractNestedTest and introduced a cleanup method in TestRule to improve test structure and ensure proper
added functionality to enable or disable the X - CAP - Server URI in the presence panel to enhance user experience by allowing dynamic configuration of the X
ww - 4481 add ability to set exception in dispatcher
added stopEditing method to CodenameOne, TextArea, and Android implementations to enable customizable text editing behavior during text editing
nifi - 1047 fixed npe in controlrate when no group attribute be specify.
updated the ` showDialog ` method to accept an additional ` isNewComponent ` parameter and modified its behavior based on user preferences to enhance user experience by
add an onerror handler to the chat annotation to make sure that only one thread can send message.
added a check for non - Windows OS in HTMLDataFlavorTest. java to ensure the test runs only on Windows
added SQL _ SERVER _ SNAPSHOT ( 0x1000 ) to the SERIALIZABLE method in TransactionIsolationLevel. java to enhance transaction handling capabilities
replaced direct insertion of newRecids with a loop that waits for newRecids to complete before offering it to improve resource management and prevent potential
use java. util. zip. zipfile instead of jrecompat
added null check for command class before creating a RegexRegisteredService to enhance robustness by preventing potential NullPointerExceptions
use ` ` ignore'' instead of ` ` best _ effort''
move rip and update method to ripstatushandler to be package - private
updated filtering logic in PeerDiscoveryAgent to use fromAddress instead of abc to improve accuracy of IP address validation
removed the setter method for JobIdentifierFactory to streamline code by eliminating unused methods
updated imports in PinotSegmentRebalancer. java and added new ClusterDataCache in computePartitionAssignment call to ensure proper handling of cluster data
remove delete ( ) method from containerconfig ( # 7868 )
simonstewart : add unit test for the default selenium command
added retry mechanism for flaky glossary test
updated schema references to use the new naming convention to improve clarity and maintainability of the schema
updated the ` EntityDeletedEvent ` class to use ` JsonUtils. writeValueAsString ` for the ` deleted ` field to improve data handling and
added support for parsing GOP values in FormatConfiguration. java and updated related classes to enhance functionality and improve media parsing handling
added a new file TestProfileReturnTypePrinting. java with several methods for testing profile return type to facilitate performance testing of profile return
added locking mechanisms to manage access to configuration in ParseConfigUtils. java to improve thread safety and prevent potential race conditions during configuration refresh
added acquisition and release for AcquireReleaseColumnsSegmentOperator in MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper resource management and
simonstewart : re - enable the firefox profile test
added @ return annotation to methods in HasAndroidDeviceDetails. java to enhance clarity and usability of the method
don't call addbug ( ) if a bug be already dead
nobr should be disable when use GTK
removed multiple redundant @ Override annotations in CacheControlImpl. java to streamline code and improve readability
added functionality to return a date in the future based on the presence of a day in the scheduled action to ensure accurate date representation in the future
refactor upload button handling to use a menu item instead of a button to improve code organization and enhance user experience by providing a single upload option
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
added ` loadMetaData ` method implementation in ` MeXBTExchange ` and ` RippleExchange ` classes to enable loading of metadata from
added a custom JSON serializer for Hadoop Writable types in CrawlDbReader. java to enable proper serialization and deserialization of Hadoop Writable objects
jaspic : remove unused test class
updated the @ Component annotation in MDNSDiscoveryService. java to include a service definition to enhance the component's configuration for better service management
fix npe in chatviewerfragment when message be empty
updated ForkJoinPool initialization in TestBPIndexReorderer. java to use a custom ForkJoinWorkerThread with a random boolean value to improve
removed assertions checking for DATANODE and NAMENODE in RoleCommandOrderTest. java to streamline test cases by eliminating unnecessary checks
refactored method names and added a call to restoreLocalInfoFromTableInfo in PartInfo. java to improve code clarity and ensure that
standardize spacing in conditional statements across multiple files to improve code readability and maintain consistency
added transformation settings for logoSprite in BitmapFontTest. java to improve rendering quality and performance of logo sprite rendering
[ flink - 20625 ] [ python ] skip python aggregate that be already built - in
fix potential npe in gssiper. markpending echo
added a method to retrieve unreachable token owners in the Gossiper class to enable tracking of unreachable nodes in the system
[ geos - 6482 ] fix coordmultiplication for integral ( x ^ 2 )
added content type handling in FormAuthenticator and SavedRequest classes to improve content type management and ensure proper content type is set
changed static variables from static to instance variables and added null check for graphics environment to enhance immutability and prevent potential NullPointerExceptions
updated RecommenderJob and AbstractJob classes to improve code readability and maintainability
replace synchronized blocks with ReentrantReadWriteLock for thread - safe locking to improve thread safety and performance in concurrent scenarios
added a test for reading an identity provider using Zones to ensure correct handling of identity providers in other zones
updated job scheduling to use an ExpireJob and added null check for timestamp in PointInTimeTrigger to enhance job management and prevent potential Null
removed unused import of Service from SendTicketGrantingTicketActionTests. java to streamline code by eliminating unnecessary dependencies
[ issue # 7594 ] fix rebalancetoplication bug ( # 7596 )
chore ( cairo ) : add ` ` detached _ mmap _ dir _ mode'' configuration property
[ java ] add a test to verify that a follower can be send to a slow down service.
updated default label pattern from authors3 to auth in JabRefPreferences. java to improve clarity and consistency in naming conventions
updated dependencies to use ` CxxPlatforms. getParseTimeDeps ( ) ` instead of ` CxxPlatform. getLd ( ) ` to
[ aa + ] release ] remove the access token when the service be destroy
camel - core - fix file consume done file issue
added support for reopening readers in SolrConfig and updated its usage in SolrCore to enable reopening of readers based on configuration settings
add freeplaneversion. dialect attribute to mapwriter
added methods to retrieve current date and timestamp in Update class to enhance functionality for handling multiple fields in MongoDB updates
added a new method ` dup ` in ` Attr ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest ` to
refactor condition classes to use an interface for better flexibility to improve code readability and maintainability by reducing boilerplate code
replaced TermQuery with MatchAllDocsQuery and updated expected value calculation in TestFacetsCollector. java to improve query performance and enhance accuracy in
removed several unused Java imports from ConcurrentClassLoadingTest. java to streamline the test by eliminating unnecessary dependencies
refactor ` providesUploadController ` method to accept ` direct _ nearby _ upload _ prefs ` instead of ` default _ preferences ` to improve
added support for DB2 and Derby modes in the database compatibility tests to enhance compatibility checks for DB2 and Derby modes
refactor TraceGatewayEnvironmentPostProcessor and SamplerAutoConfiguration to improve logging formatting and add conditional property for sampler refresh to enhance code readability and maintainability
pdfbox - 4892 : add more property to document, a suggest by valerybokov
tiff : use negative _ infinity instead of nan for double. nan
replaced the import of ` AbstractArgumentDelimiter ` with ` AbstractArgumentDelimiter ` and introduced a new method ` executeDriver ` to improve code clarity
refactor MockRestAdapter to use Scheduler instead of Executor to improve responsiveness and resource management during asynchronous operations
add a default method to the rule condition mapper to provide a default method for selecting a rule ID set
added an ` addExitDescription ` method to the ` ExitStatus ` class and updated its usage in ` AbstractJob ` and ` AbstractStep
fix miss player in multiblockrenderhandler
rename ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand. java ` to improve clarity by accurately representing the column
removed unnecessary import statement from PlotConfiguration. java to streamline code by eliminating unnecessary dependencies
refactor UIAlertView handling to use UIAlertController instead of UIAlertViewDelegate to improve code modularity and maintainability by encapsulating UI
replaced ` params. getBuildTarget ( ) ` with ` nativeLinkable. getBuildTarget ( ) ` in PythonUtil. java to ensure correct
renamed the parameter ` ofArray ` to ` values ` in the ` ofArray ` method to improve clarity and consistency in variable naming
removed unnecessary assertion from AdvServiceTest. java to streamline test code by eliminating unnecessary assertions
refactor key handling in MappingMongoConverter to improve readability and maintainability to enhance code clarity and reduce redundancy in key processing logic
reformatted log statements in NearbyMapFragment. java for better readability to enhance code clarity and maintainability
camel - 7393 fixed the issue of camel - core not be able to use camel - jbang - dsl
added a null check for terms in FuzzyLikeThisQuery and introduced a test for non - existing fields in FuzzyLikeThisQueryTest
refactor writeApplicationsLinks method to accept a boolean parameter for tabularList to enhance flexibility in writing application links based on a list of columns
remove dependency on org. dspace. utils. dspace in createremissingidentifiers
updated the ` assignBytes ` method calls to use ` bw. getLength ( ) ` instead of ` bytes. length ` to ensure consistency in
changed the return type of the getDisplayScript method from abstract to returning a non - abstract String to allow the method to always return null instead of
simonstewart : fix a bug in the selenium - backed webdriver.
pdfbox - 2576 : set initial arraylist size, a suggest by valerybokov
added synchronization and retry mechanism for active interfaces in NetworkConfigurationWatcher. java to ensure thread safety and prevent potential deadlocks during network operations
refactored the way embedded objects are retrieved in HSSFWorkbook. java and added corresponding unit tests in TestEmbeddedObjects. java to improve
remove unused import ( jogamp. common. os. elf. shdr )
replaced instances of hostParams with roleParams in AmbariManagementControllerImpl. java to improve clarity and maintainability of the code
pdfbox - 4892 : skip symbol base font, a suggest by valerybokov
replaced GlStateManager. popAttrib ( ) with GL11. glPopAttrib ( ) in ModelHourglass. java to ensure compatibility with
refactor LiveTvGuideActivity to use a new variable for the current guide start and improve date handling to enhance code readability and maintainability by
updated method invocation in MockGateway. java and added new classes CommonParentTest. java and MainMockTransformer. java to improve method invocation handling
added loading of " libfreetype. so " and " libfontmanager. so " files in JREUtils. java to enable loading of
refactor FunctionParser to improve handling of unary operations to enhance code readability and maintainability by consolidating mathematical operations
[ gr - 16725 ] allow floating guards in loop optimization.
added support for'isInstance'method in typeframemodelingvisitor. java to enhance type handling and improve dataflow processing
added a new ` LocalizedString ` class and refactored methods in ` Attr `, ` Resolve `, and ` Resolve ` classes to
added a new boolean property ` disableClasspathSearch ` in ` ServerConfig ` and updated its usage in ` DefaultContainer ` to allow configuration of
change to use arrays. copyof instead of system. arraycopy
updated the default retries value from 0 to 2 in Reference. java and Reference. java to correct the logic for retry attempts in the Reference class
added file reading functionality and updated usage instructions in TexturePacker. java to enhance file handling capabilities and improve usage clarity
updated UI elements for uploaded images and uploaded images in AchievementsFragment. java to improve user experience by ensuring uploaded images are displayed
added mock logger calls for annotation processing and parsing in TranslatingJavacPhaseTracerTest. java to improve traceability and debugging during
updated query generator parameter from " & generator = allcategories " to " & prop = categoryinfo " and introduced a new CategoryInfo class with
updated assertion messages for username and password in AuthzAuthenticationRequest. java to improve clarity and consistency in error messages
added accessibility features and refactored timeout logic in TaskbarStashController. java to enhance user experience by restricting access to relevant
added handling for the'^'character in the signature parser to improve error handling for invalid characters in the signature
updated access flags in ClassVisitorDriverFromElement and added multiple unit tests for stubbing methods in StubJarTest to enhance access flags handling and
added null checks for input in IntervalFilter and improved null handling in LowpassIntervalsSource to enhance robustness by preventing NullPointerExceptions
added tests for the ` entrySetIterator ` method in ` MapInterfaceTest. java ` to ensure proper functionality and handling of map entries in the
added a serialVersionUID field to the TreeMap class to ensure proper serialization and deserialization of the TreeMap
updated the createdAt method from epochMilli to epochSecond in ImageData. java to ensure compatibility with the latest epoch standards
use'locus'command instead of'locus2d '
added encryption utility methods for key deletion in AccountRemovalJob. java to ensure proper handling of private and public keys during account removal
add keep - alive header to asynchttpprovider, a per http : / / github. com / asynchttpclient /
fix npe in postjoinmapoperation when there be no interceptor and lite member join
( a - a - a - a ) ),, and a - - - a - - - - - a - - - -
removed unused ` spillEnabled ` parameter from ` BaseHybridHashTable `, ` BinaryHashTable `, and ` LongHybrid
refactor EnvironmentVariableHelper to improve environment variable retrieval to enhance code readability and maintainability by encapsulating environment variable retrieval logic
ww - 4441 fix typo find by codespell on fossies. org
added SerializableMode import to Mockito. java and PluginSwitch. java to enable serialization of mock objects in Mockito tests
added handling for a nullable field injection point in AbstractBeanDefinition. java to improve robustness by ensuring the correct field injection point is set based
added support for isolation level in select statements to enhance database compatibility checks
refactor HiveConnection to use constants for transport mode and HTTP path to improve code readability and maintainability by reducing magic strings
added an override for the isCacheable method in GlobalOrdinalsWithScoreQuery to ensure proper caching behavior in the GlobalOrdinals queries
added a new file TestStrangeControl. java with a thread to test the behavior of StrangeControl. test ( 42 ) in a multithreaded
updated file extension from ". json " to ". jsfile " in JsFile. java and JsLibrary. java to ensure correct file
added selectionStart and selectionEnd variables with their respective getter and setter methods in ShadowEditText. java to enable dynamic selection of text fields in the
[ 3.0 ] fix potential resource leak in grpcenrichment
added a ` use ` method to ` Jooby ` and updated the ` Router ` and ` RouterTest ` to enhance routing functionality and
added a null check for the fst variable in FreeTextSuggester. java to ensure that a lookup is valid before proceeding with further operations
updated newline handling in T4975569. java and improved error handling in T6729471. java to ensure consistent line endings
added ABI writer loading functionality in JavacInMemoryStep. java to enable dynamic loading and processing of ABI writer classes
suppress warning about boolean method inversion
add log when pullservice be shut down
refactor EnergyEndpointer class to improve code readability and maintainability
refactor presets selection logic to use a list of displayed columns to improve efficiency and maintainability of the code
[ ci ] remove unused import of bufferedinputstream
fixed switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and updated ` CxxLibraryMetadataFactory ` to
( ) should not be open by default
refactor key parsing logic in RandomPartitioner. java to improve clarity and maintainability of the code
[ gr - 25836 ] fix native - image - builder initialization for foreign class.
added a test for creating an inline role binding in RoleBindingTest. java and refactored RoleBinding operations in RoleBindingOperationsImpl.
added logging statements to UaaSessionCookieConfig for session cookie configuration details to improve debugging and traceability of session cookie configurations
updated file name comparison logic in HotseatFileLog. java to use Calendar. DAY _ OF _ YEAR to ensure accurate comparison of file
use'v ='instead of'o ='to check for termination.
added error handling for invalid options in JavapTask. java and implemented a new class T8033711. java to improve robustness
replaced usage of ` Collectors. toList ( ) ` with ` toList ( ) ` in multiple files to simplify code and improve readability by eliminating
updated logging level from error to warn and modified exception handling logic to improve logging clarity and ensure proper handling of exceptions during task fetching
[ hotfix ] [ network ] add option to enable tiered storage for hybrid result partition
replaced the static final integer ` SUCCESS _ CODE ` with a method ` isNotSuccessStatus ` to improve code readability and maintainability by centralizing
updated Cubocy constructor to set useGL20 to true to enable GL20 support in the application
fix a bug in jimplebody where the method. getreturntype ( ) throw an exception.
refactor OutputMacroExpander to improve command line argument handling to enhance readability and maintainability of the code
use light job instead of idle job
added a condition to exclude non - build files in MergeWordsListTask. java to ensure that only non - build files are processed as valid
[ fix # 7018 ] instructorfeedbackresponsecomment load ( # 7018 )
reformatted code for better readability to enhance maintainability and clarity of the code
added a new file TestEscapeThroughInvoke. java with a class A with multiple instances demonstrating object escaping to demonstrate the use of object equality
replaced direct stream. skip ( ) with IOUtils. skip ( ) for improved readability to enhance code reliability and avoid potential null pointer exceptions
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 433.
changed catch block from catching Exception to catching Throwable to improve error handling by allowing broader range of exceptions
hbase - 25836 add test for eviction in lrublockcache. getlrublockcache
simplified task count retrieval in RecentsView. java to improve code readability and maintainability
added an instance configuration change listener in HelixBrokerStarter. java and increased sleep duration in HelixServerStarter. java to improve broker routing
added new CoinmateMetadataServiceRaw and CoinmateStatic interfaces, along with CoinmateStatic and CoinmateInstance to enhance
[ core ] improve error message for ` $ { basedir } `
pdfbox - 2576 : don't overwrite cosobject key if the object don't match it.
add ptransform. setdisplaydata ( list < itemspec <? > > displaydata ).
replaced usage of ` Truth. THROW _ ASSERTION _ ERROR ` with ` assertThat ( Object ) null ` in ` DefaultSubject `
updated security settings in ClientJSSEServerJSSE. java to disable weak cryptographic algorithms for better security practices
fix npe when add choice on unsupported option type ( # 2418 )
updated module - info. java files for mmm and ppp modules to ensure proper module dependencies and maintain code organization
added error handling to the ensureConnection method to improve error management and provide clearer error reporting
updated variable name from ` sCheckingEvents ` to ` sCheckingEvents ` and reset ` mFinished ` in ` LogEventChecker ` to
refactor exception handling in FileSinkOperator and improve resource management to enhance error handling and ensure proper resource management during writer closure
added diagnostic output for JavaFileObjects in SchemaGenerator. java to improve debugging by providing detailed diagnostic information
replace ` RuntimeException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer. java ` to improve error handling by using ` Optiq
updated DataSourceMonitorTests. java to improve test coverage to enhance reliability of database monitoring functionality
added a set to track loaded resource paths before scanning methods in ClasspathMethodScanner. java to improve performance by avoiding redundant processing of resource paths
updated the initialization of the test instance in TestServiceUtil. java to handle potential null values and improve error logging to enhance robustness and clarity
added null check for ` o ` and modified response handling in ` RoutingInBoundHandler. java ` to improve robustness by handling cases where
added nullable annotation for natIp in EkeyConfiguration. java and updated logging in EkeyUdpPacketReceiver. java to improve null safety
updated ArrowByteBufAllocator imports and replaced BaseAllocator with NettyAllocator in multiple Java files to enhance memory management and improve code clarity
updated CommitLogArchiver, CommitLogReplayer, and JdbcDecimalTest classes to improve code organization and maintainability
added validation for HTTP headers and bodies in HttpConnection. java and implemented a new test for an unexpect with a body in RFC2616
refactor MultiTimeout class to improve subscription handling to enhance performance and maintainability of the code
patch by jbellis ; review by jbellis for cassandra - 1349
added a test annotation to the TestOrcTimezone1 class to enhance test coverage for the Orc time zone functionality
updated the ` enableMetrics ` and ` enabledTimers ` methods to use a new ` findMatch ` method to improve code clarity and maintain
refactor code to use ` JsonUtils. objectToJsonNode ( ) ` instead of ` JsonUtils. objectToJsonNode ( ) `
updated the superclass retrieval logic in JTable. java and added a new test class Test6888156. java for JTable functionality to ensure proper
added conditional check for shell existence before adding its absolute path to ensure proper handling of shell paths in IDEService
updated deleteWithoutSubscriptions method to use a variable of 1 instead of a hardcoded value to improve clarity and maintainability of the database cleanup process
replaced List with LinkedHashSet for testInstances in MockitoExtension. java and added a new test class with dependency in JunitJupiterTest. java
refactor FieldMonitor class to improve code readability to enhance maintainability and ease future updates
replace deleteFilesAfterClose ( ) with fileMmapEnableIfSupported ( ) in BTreeMapTest. java to improve file management functionality and
modified the iterator initialization logic in SortedIntList. java and added a new test class SortedIntListTest. java to ensure proper iterator allocation
added JMXHelper registration and unregistration of the object name in DefaultRemoteProxy. java to ensure proper cleanup of JMX objects and improve error handling
increase default writebuffer size of rocksdb to 64mb
removed default value from style constructor parameters to simplify constructor parameters for better readability and maintainability
replaced ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare. java ` to improve argument handling by using ` addArgument
[ samza ] remove configuration of beam _ json _ graph in samza runner
update jme3 - jme3 demo to use mouseinput instead of vector3f
[ iotdb - 6852 ] fix typo in looprotatetracker. java
updated ` convertToMongoType ` methods to accept ` TypeInformation <? > ` as a parameter for improved type handling to enhance flexibility in converting
remove iscomplex ( ) method and move it to inputbox
[ java ] update copyright year and add unit test for sendkeytoactiveelement
added a method to compute a scaled instance of a BufferedImage based on target dimensions to enhance image scaling functionality and ensure compatibility with different image sizes
removed unused methods ` extendArgumentCheck ( ) ` and ` extendWrapStore ( Engine engine ) ` from ` DBMaker ` to streamline
update shift state immediately ( fixes # 714 )
removed unused ` DETECTED _ ACTIVITY ` constant and related methods from ` BundleConstants `, ` SerializableLocation `, and ` CSV
updated import statements to reflect the new package structure for ExtensionConfig to ensure correct usage of ExtensionConfig across the codebase
removed unused import of Buildable from AaptPackageResources. java to streamline code by eliminating unnecessary dependencies
added comments to multiple method calls in multiple Java files to improve code readability and clarify the purpose of the method
updated the exception message for invalid upgrade protocols to provide clearer context on the status of the upgrade protocol
updated the assignment of blockMode in P11Cipher. java to improve code readability and maintainability
refactor Mockito class to improve code readability to enhance maintainability and ease future updates
refactored permission checks for plot ownership in Merge. java to improve code readability and maintainability
removed deprecate getConversationID ( ) methods from HttpContentResponse, HttpResponse, Request, and Response classes to streamline code by eliminating
updated imports from ` com. sun. speech. freetts. PhoneSet ` to ` de. dfki. freetts.
refactor ` stripQuotes ` method in ` BaseSemanticAnalyzer ` and ` PartitionSpec ` classes to use ` PlanUtils. stripQuotes ` for
refactored rendering methods in DLNAResource and Request classes to improve rendering management and enhance subtitle handling
updated repository handling in DefaultPluginManager to include both resolution and remote artifact repositories to improve repository management by associating resolution repositories with the project '
( chore ) camel - cxfrsproducerfactorycachetest : close applicationcontext in unit test
fix typo find by codespell on fossies. org
added JUnit Ignore annotation to SessionTest. java to temporarily disable the test due to frequent failure
added a new File instance in ZipFile. java to enhance file handling functionality in the ZipFile class
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to provide a future implementation of ` handleAll ( )
added unit test for default constructor
added stack trace logging and utility methods in GenericDAOImpl, ForumServiceImpl, and ReflectionUtils to enhance logging capabilities and provide utility methods for
removed the @ Test annotation from FormLoginIntegrationTests. java to streamline test execution by eliminating unnecessary tests
mondrian : fix a bug with unparse list that contain a function call.
updated SQL query and error messages in CheckDatabaseHelper. java for improved clarity and consistency to enhance readability and maintainability of the code
sparc : add jdk. internal. misc. InnocuousThread to suppress warning
added handling for unexpected JSON elements in JsonTreeReader to improve error handling and robustness in parsing JSON elements
added command line argument handling in TestCommand. java and a corresponding test in ExternalTestRunnerIntegrationTest. java to enhance command line argument processing and
added new methods ` dedup ` and ` indexSolr ` to ` SolrDeleteDuplicates ` and ` SolrIndexer ` to enhance functionality by allowing
[ flink - 3486 ] [ table - planner ] improve usage of flink planner in streaming mode
added a call to clearDatabase ( ) in MssqlIntegrationTest. java to ensure the database is properly cleared after tests
updated Progress class to use displayProgressPercentage instead of displayPercentage and added dispose method to improve control over progress display
added a check to ensure the parent file exists before proceeding to prevent potential errors when the parent file does not exist
added utility methods for writing POIDocuments in IOUtils. java to enhance file handling capabilities in the IOUtils class
fix line end problem with args . txt for window when export from others ( # 1890 )
changed the type of the ` _ root ` variable from ` Box ` to ` BlockBox ` and added getter methods for ` getDotsPer
added support for custom user search queries in CustomQueryFilterFactory to enhance authentication process for LDAP users in the application
camel - core - fixed issue with camel - netty and camel - netty - http
updated status handling in SnmpTargetHandler and its tests to ensure consistent status management and improve test reliability
groupgroup''''''''''''''
added @ Incubating annotation to AvailableSettings. java to indicate that these classes are outdated and should not be used in future development
refactor file resolution logic in FileResolverImpl. java and add unit tests in WarFileResolverTest. java to improve code clarity and ensure
updated the format string for newFlushedSize in DocumentsWriterPerThread. java to include docstores to improve clarity and accuracy of the
fix a typo in the mod's mod'console output.
removed unnecessary whitespace in ImageProcessor. java to improve code readability and maintainability
increased the number of locks in FeedRefreshUpdater from a fixed value to a dynamic value based on the number of threads
updated MetadataIndexNode deserialization to use exactSearch instead of a hardcoded false value to improve flexibility in metadata handling by allowing exact search functionality
removed unnecessary DateFormat parameter from makeResultFromDelimitedString method in CSVSaveService. java to simplify method signatures and improve code clarity
added preferred size adjustment for the pane in NavigationShareTab. java to ensure the pane reflects the preferred size of the FList component
replaced ` startOffset ` and ` endOffset ` with ` state ` in ` BeiderMorseFilter ` and added a new test for custom attribute
refactor UpnpAudioSinkReg, UpnpHandler, UpnpServerHandler, and UpnpEntryQueue classes to improve code organization and maintain
fix the mana spreader's burst not use the world position.
updated JsonTest. java to use JUnit 5 assertions and added a new test factory method to improve code readability and facilitate testing of JSON
refactor MutableContextDataSupplier to improve code readability to enhance maintainability and ease future updates
change exception handling from Exception to Throwable in CoreContainer. java to improve error handling by logging a warning instead of a generic error
updated KubernetesMockServer constructor to use HTTPS instead of a hardcoded true parameter to enhance flexibility by allowing HTTPS connections
add stamp to the graph for math. computestamp.
updated HTTP method from SC _ METHOD _ NOT _ ALLOWED to GET and OPTIONS in DefaultServlet. java and DefaultServletTest. java to improve
fix for tika - 449 ( update parser to extract geographic metadata ) from jukka to ensure that the lat and longs be correctly format in all locale
replaced ` throw ` with ` rsp. setException ` for error handling in ` ShowFileRequestHandler. java ` to improve error handling and provide clearer
added try - catch functionality for handling exceptions in ReflectorClassWriter to improve error handling and ensure proper execution of try - catch blocks
added a new method ` clamp ` to the ` Vector ` and ` Vector2 ` classes to enable vector clamping functionality based on specified limits
added OAuth2 authentication handling in ChainedTokenGranter. java to enhance security by ensuring only valid client scopes are processed in the
fix typo find by codespell on fossies. org
added a static final Logger instance and removed the save flags setting from EditorBottomSheetBehavior to enhance logging capabilities and improve code clarity
updated UaaUrlUtilsTest to use JUnit 5 annotations and annotations to improve test structure and maintain compatibility with modern testing practices
hhh - 14613 fixed npe in nativequery
added a static weakhashmap to track font aat and updated return logic accordingly to improve thread safety and performance when accessing font data
fix memory leak in typedset. getblockpositionbyhash ( )
simonstewart : fix a bug in the firefox driver.
refactor BrokerRequestUtils to improve code readability to enhance maintainability and facilitate future updates
refactor instance handling in InjectorBuilderImpl to use a map for better ordering to improve clarity and maintainability of the code
updated method calls to use ` getBasePath ( ) ` instead of ` getBuckConfigView ( ). getAbsolutePathToBuildFile ( ) `
http : / / issues. apache. org / jira / browse / amq - 3573 - ensure default value be set when not
fix possible memory leak in jabber protocol provider
updated the DEFAULT _ LOAD _ FACTOR value from 0.0. 67F to 0.0. 67 in IntHashSet. java to ensure consistent load factor
added a method to retrieve all physical variations in VectorizationContext and updated Vectorizer and VectorPTFDesc to use this new method to
updated package declarations for HtmlAssetTranslator, StringsResourceTranslator, and StringsAssetTranslator classes to reflect the new organization of the application under a new
updated overview actions logic in OverviewState. java to improve handling of overview actions based on device profile settings
added Entity annotation to BaseActivityEventEntity to ensure proper handling of entity relationships in the application
added tracing for touch activities in NavBarSwipeInteractionHandler and TouchInteractionService to improve debugging and monitoring of touch interactions
added a new file ` InvalidOptions. java ` with tests for command - line options to validate the functionality of the ` javap ` command
added a log message to report inconsistent display counts when supported bounds size changes to aid in debugging display inconsistencies indicated by varying bounds sizes
refactor ` OAuth20UsernamePasswordAuthenticator ` to use ` OAuth20Utils. getClientIdAndClientSecret ` instead of ` OAuth20UsernamePassword
http : / / issues. apache. org / jira / browse / amq - 4237 - unwrapping servlet exception
added handling for default shortcut status in PackageUpdatedTask to ensure proper management of shortcut status in the application
camel - 1868 fixed the issue that camel - seda don't use the default unbounded queue size
added batchupdateStart ( ) and batchUpdateEnd ( ) methods to App. java and App. java to enable batch updates to the application
added HttpClient configuration and validation in ThirdEyeApplication. java to enhance HTTP client capabilities and improve error handling
added sorting functionality to JobInstanceFetchRequest and updated getBatchSize method in JpaJobPersistenceImpl to support sorting functionality in the JobInstanceFetch
added currency pair handling and cancellation logic in CryptoFacilitiesTradeService to enhance order cancellation functionality and improve error handling
hide keyboard on mouse down, not on mouse up
use ` memcpy ` and ` memmove ` instead of ` memmove `
refactored the ` authenticateUsernamePasswordInternal ` method to remove unnecessary line breaks to improve code readability and maintainability
ggb - 2481 make the tooltip block by default
updated DefaultDateTypeAdapters and GsonBuilder to support customizable date formatting to enhance flexibility in date handling throughout the application
updated playerSet formatting from " < UID : " to " ( ) " to improve formatting for better readability and consistency
added a check for an empty list in List. java to ensure that an empty list is returned when the list is empty
make sure we throw a wrappedcommandexception, not an exception.
should have'( a - )'( a - )'( a - b )
added start ( ) and stop ( ) methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl classes to enable proper management of the stream supplier
updated the ` runChild ` method in ` LuceneTestCase ` to correctly set the default locale for all available locales to ensure proper handling of locale
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
refactor context handler initialization into a separate method to improve code readability and maintainability
camel - jbang - add camel - test - blueprint with camel - test - blueprint
- - - - - - - - - - - - - - - - - - - - - - and - - - - -
refactor the ` returnTypeSubstitutable ` method to accept a ` Warner ` parameter and simplify type comparison logic to enhance code clarity and maintain
added ThrottleType enum and its getter / setter methods in TestExecutor. java to support different throttle types for processing throttled processors
changed variable assignment from pixel to argb in ColorBleedEffect. java and added a conditional check in SpriteBatch. java to improve
updated annotations in mmm and ppp files to improve code readability and maintainability
added a new interface ` Model ` in the ` org. apache. poi. hssf. model ` package and updated ` Sheet `
camel - 1331 fixed the issue of setoutfilterpattern ( ) and setoutfilterpattern ( )
added a boolean flag ` clearEntityManager ` to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to control the clearing of the
added null checks for ` info ` and ` intent ` in multiple classes to improve error handling and prevent potential NullPointerExceptions
updated TwoDimensionalCollectionValuedMap instantiation to set the first parameter to true to ensure that the map is initialized with an additional parameter for better
( ) ) )
added null checks for columnReaders and child in OrcEncodedDataConsumer and EncodedTreeReaderFactory to enhance robustness by preventing potential Null
added null check for files in SegmentInfos. java and implemented a test for deleting in TestIndexReader. java to improve error handling and ensure
updated date format in HSearchSortHelperImpl. java and renamed FhirResourceDaoR4SearchWithElasticSearchIT class to
updated the calculation of the return value in DeviceHandler. java to handle negative percent values correctly to ensure accurate representation of percentage values in the Device
updated limit validation logic in RangeInputStream and RangeReader classes to return - 1 instead of - 1 to ensure proper handling of input stream limits and
( chore ) camel - jbang - default - routes - don't print duration if there be no route
fix bug in hl chunk source where it wouldn't take into account the initial start time of the chunk
updated test class names from ` NumericRangeFilterBuilderTestCase ` and ` NumericRangeQueryBuilderTestCase ` to ` TestNumericRangeFilterBuilder ` and
[ hotfix ] [ runtime ] fix the bug in statefuloperatortest. testmap ( )
removed null check for fill and stroke variables in Area and Line classes to simplify the code by eliminating unnecessary null checks
added database existence checks in Blockchain class and updated tests in BlockchainTest to enhance blockchain management functionality and improve test coverage
trim whitespace from the result of the matcher. group ( 2 ) method to ensure consistent formatting and prevent potential issues with leading or trailing spaces
stop async request hang - side effect of r1006358
ggb - 2486 fix for divider location when there be no space
add controller healthcheck endpoint : / health ( # 5846 )
set the visibility of the shared avatars view to GONE to improve user experience by hiding the visibility of the shared avatars view
mebis : rename mebis - > mebis - > mebis - > mebis
updated conditional checks to use'< = ='instead of'> ='to improve clarity and correctness of input validation
added a check for log level before executing a command in LogInterceptor to ensure that commands are only executed when the log level is fine
replaced CountDownLatch with assertWaitUntil for checking finished spans to improve readability and maintainability of the test code
updated QueryParser to use Locale. getDefault ( ) instead of Locale. getDefault ( ) to improve flexibility and maintainability of locale handling
change to use a linked list instead of an array to preserve order
jbrules - 2852 : allow constraint to be attach to a non - existent column ( jbrules - 390 )
added a new class OcspUnauthorized and updated OCSPResponse to handle unauthorized requests to enhance security by ensuring proper handling of
added a server state tracking mechanism to manage server failures to ensure proper handling of server failures and prevent multiple instances of the same server
added methods to track and retrieve the number of open connections in SourceCounter and integrated it into SourceCounterMBean and AvroSource to improve connection management
make executionstrategy. executableresult ( ) public
refactor the ` createDefaultJavaPackageFinder ` method to return an ` ImmutableSet < String > ` instead of a ` ImmutableSet < String > ` to
replaced OutputWriter with PrintWriter in ScriptExecutable. java to improve performance and reduce memory usage
fix flakiness in filesoursedextlinesitcase
added import for DataTable and updated JavaToRuby argument handling in JRubyStepDefinition. java to enable handling of DataTable instances in the JR
'''''''''''''''''''''''
updated references in ReadSentimentDataset. java to improve code clarity and maintainability
updated error message formatting in FormulaParser. java to provide clearer context for parsing errors
added getter and setter methods for binding addresses in WebSocketClient. java to enhance flexibility in binding configuration for WebSocket connections
[ java ] close clustered medium driver when delete archive or medium driver.
refactor WidgetGroup. java to simplify parent and height setting logic to improve code readability and maintainability by reducing redundancy
updated sessionFixationAttribute comparison to use Boolean. valueOf to improve type safety and clarity in session fixation handling
added edgeoption parameter to sciencelab. startOneChannelLA ( ) method to handle edge options more effectively
danielwagnerhall : add a way to keep track of a linear backoff.
added HTTP route and HTTP route attributes to ClientResponseWrapper to enhance request handling by associating requests with specific HTTP routes
use integer. min _ value instead of null to avoid potential npe. patch by jbellis
updated return statements in ICC _ Profile. java and ColorConvertOp. java, and added a new InvalidRenderIntentTest. java file
add'on'option for contribution question
added multiple calls to ` PublicMethed. waitProduceNextBlock ` in ` ContractInternalTransaction003. java ` to ensure proper
added SuppressFBWarnings annotation in KafkaExactlyOnceSink. java and removed Serializable interface from KafkaRecord. java to improve code clarity and eliminate unnecessary
added PGConnection class to the connection object in PooledConnectionImpl. java and created a test for PGConnection in BaseDataSourceTest. java
updated PropertyTable and CloseIgnoringInputStream files to improve code clarity and maintainability
( ) ) should not warn
should not be use
updated AmbariManagementControllerImpl to use UNLIMITED _ KEY _ JCE _ REQUIRED instead of UNLIMITED _ KEY _ JCE
refactor NamedListCodec to improve iterator handling to enhance performance and maintainability of the code
fix potential npe in migrationmanager. assignnewpartitions ( )
added schema inclusion rule to ApiExample to enhance schema management capabilities
updated the expected mean value in the test from 3.0 to 7.0 to ensure the test accurately reflects the expected behavior of the mean function
add coordinate sequence for polygon with unclosed and single point
added methods to retrieve base name and dimension count from Constant Pool to enhance functionality for handling constant pool names in the application
added method to set debug evaluation output for the next evaluation in HSSFFormulaEvaluator, SheetUtil, and XSSFFormulaEvaluator classes to enhance
[ test ] remove checkjavaversion ( ) method and use @ disableforjreRange ( max = java _ 8 )
updated ExoPlayerProfile instantiation and modified PlaybackController to conditionally enable live TV playback based on user preferences
added a return statement in DynamicStyleBar. java to ensure proper handling of method execution flow
added logging statements for setting and resetting properties in the REPL dump to enhance visibility into database property changes for better debugging and monitoring
refactor ReactiveAuthorizationManager to improve code readability to enhance maintainability and facilitate future updates
updated condition to promote both object and boolean types to enhance flexibility in promoteing strings for both object and boolean types
[ sulong ] rename sulong object nuller to sulong
chore ( regen ) : update license year for generated file ( # 3481 )
add test case for caffeine cache with transaction - aware cache
added a method ` calculateBoundingBox ( ) ` to calculate the bounding box of a mesh in ` Mesh. java ` to provide a way to
( ) ) http http http http http http http
refactor DefaultConfigurationProperties to improve configuration handling to enhance maintainability and readability of the code
added high light color settings in ListViewMultiChartActivity and enhanced highlight rendering in BarChart to improve visual quality and user experience during chart interactions
added a new entry to the pgSgPathPlanMap in the ClusterPlanRouter. java file to ensure the correct storage and retrieval of
only once
added lock file management in MavenDependencyResolver and MavenRoboSettingsTest to improve artifact handling and ensure proper lock management during artifact fetching
updated fragment shader to include a conditional for GL _ ES to improve compatibility with OpenGL specifications
hbase - 20613 use set instead of linkedlist in rsgroupinfo
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 4451 - allow
updated CustomAnalyzer and TestCustomAnalyzer to use a new DummyVersionAwareTokenFilterFactory to enhance version handling and improve test coverage for version - aware
added a test to verify that ` getPackageArchiveInfo ` reads values from ` setArchiveInfo ` to ensure correct functionality of the ` PackageInfo
replaced direct method invocation with MethodUtil's invoke method across multiple classes to enhance security by ensuring package access checks are performed correctly
updated imports in GradleBuildService. java and Main. java, and modified progress listener in Main. java to enhance event handling and improve progress
removed synchronized block from AndroidWebDriver. java to improve performance by eliminating unnecessary synchronization
don't set initializationfailtimeout if it's less than 0.
removed the ` timeOut ` parameter from the ` getResult ` method and added an ` error ` method in the ` Net ` class to simplify
changed the ` isNative ` field from a boolean to a transient boolean and modified the entry addition logic to simplify the handling of native methods and
updated error message formatting in CEntryPointCallStubMethod. java to improve clarity and consistency in error reporting
rename ruleenablementhandler to ruleenablementactionhandler to ruleenablementactionhandler
fix javadoc warning. no functional change.
added debug logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve traceability and debugging information during authentication process
updated method calls from ` getBasicSourceOptions ( ) ` to ` getBasicSinkOptions ( ) ` and modified the way source and sink
added null check for the repository owner in UsersPanel. java to improve robustness by handling potential null repository instances
added support for additional font formats in SunFontManager to enhance compatibility with additional font formats
refactor target type handling in AnnotationMatcher. java to improve clarity and maintainability of the code
fix typo find by codespell on fossies. org
added debug logging statements in FaultTolerantChunkProcessor. java to improve performance by avoiding unnecessary string concatenation when debug logging is enabled
make surefire plugin only include or exclude if they exist.
added a new method ` shouldMoveToDefaultScreenOnHomeIntent ( ) ` and modified the ` onHomeIntent ( ) ` method to
updated maximum bitrate from " 110 " to " 30 " to improve user experience by providing more data
replaced the method ` getOptions ( ) ` with ` optionsMap. values ( ) ` for retrieving options to simplify the code and improve performance by
trim whitespace from the description returned by the MutableDatabaseProperty class to ensure consistent formatting of the returned description
updated the output filename format in XOMParserTest. java to ensure consistent file path format across the application
[ hotfix ] [ core ] fix log message in processbesunoderunner
added getLoadedMusic ( ) and getLoadedSound ( ) methods to MusicLoader and SoundLoader classes to provide access to the loaded music and
removed unused imports and updated type assignment in OnBeanCondition. java to streamline code and improve readability by eliminating unnecessary dependencies
added ScreenRecord annotations to RequestPinItemTest. java to facilitate screen recording during test execution
set lrPauseButton to false in CPUFeature and MemoryFeature classes to ensure lrPauseButton is only selected when it is not null
refactor Preferences. java to improve code readability and maintainability to enhance maintainability and streamline account management logic
don't send unavailable presence when connect to xmpp
refactor StringBuilder initialization to use a specified initial capacity based on utflen to improve memory efficiency and prevent potential integer overflow issues
polish ` ` disable statsd export by default''
refactor InterruptedException class for improved clarity to enhance maintainability and readability of the code
refactor ServiceTicket class to improve code structure to enhance maintainability and readability of the code
refactor connection handling to use a boolean variable for SSL success status to improve code readability and maintainability by reducing redundancy
refactor conversion logic in ArgumentArrayMessageMapper to improve type handling to enhance clarity and maintainability of the code
added test case and minor fix for http : / / issues. apache. org / jira / browse / ds - 42
added FLAG _ ACTIVITY _ REORDER _ TO _ FRONT to the intent in PasscodeManager. java to improve the order of
( ) should be reactive ( ( ) )
changed the return type of the ` beginDraggingWidget ` method from ` void ` to ` boolean ` and added a null check for the
added JUnit @ Ignore annotation to TestPackedInts. java to temporarily disable tests related to LUCENE - 4488
added null check for root in DynamicStyle. java to prevent potential NullPointerException when accessing the root component
add an option to write the confusion matrix to the sentence
bug 61722 - don't run post processor if there be no sample result
added unit tests for ` connectDevices ` and ` removeDevice ` methods in ` ShadowBluetoothHeadsetTest ` to ensure correct handling of Bluetooth
rename testautowired to testinjectinjectinjection ( # autowired )
updated objectMethods to include " clone ", " hashCode ", " toString ", and introduced a new FINALIZE _ METHOD constant to
- a - a - an - - - - - - - - - - - - - - - - - - - - - -
send an error code when try to get instance info from a debugger.
added a check for service ID matching in the setRegisteredServiceFilter method to ensure that the registered service only matches the specified service ID
added a null check for getActivity ( ) before accessing its UI thread to avoid potential NullPointerException when getActivity ( ) is null
implement high level heartbeat in order to detect disconnection from server as soon a possible .
added support for a string type in the DatabaseAdaptor and JDBCSessionDataStore classes to enhance flexibility in handling string types during database operations
updated test to check for suggested category instead of language to ensure the test accurately reflects the intended category
refactor thread name management in multiple classes to improve clarity and maintainability of thread naming logic
refactor TaskletAdapter to improve code structure to enhance maintainability and readability of the code
[ dmn ] add test case for dmn - 22200 ( # 2283 )
updated texture map patch and modified default handling in TextureMap. java and SplashProgress. java to improve texture management and ensure default settings are
added tooltip to the RocketPanel checkbox to enhance user experience by providing contextual help
replaced calls to ` getTypes ( ). add ( e ) ` with ` addType ( e ) ` in EnumFactory and InterfaceFactory to
[ hot reload ] add description to retarget action ( # 4483 )
ggb - 2281 fix typo, use ` `'instead of ` ` simple '
updated BRIGHTNESS _ FACTOR to use double instead of int to improve precision in value representation
refactored sscm history parser to use regex instead of a regular expression
modified the ` createUser ` method to include an ` isAdmin ` parameter and implemented user listing functionality to enhance user management capabilities by allowing users to
added return type validation in IndexedPropertyDescriptor, Introspector, and PropertyDescriptor classes, and created a new test class for handling return values to
updated logging statements to use placeholder syntax to improve performance and readability of log messages
updated method signatures in Context. java and Response. java to use'task'instead of'run'to improve code clarity and consistency in
fix null pointer exception with setcapabilities ( )
[ hotfix ] [ test ] fix typo in lifecycleutilstest
added contract type checks and improved contract validation logic in Wallet. java and GetContractServlet. java to enhance contract handling and ensure proper validation for
added multiple package - info. java files in the com. ibm. dtfj. image, com. ibm. dtfj.
refactor the add method in DocumentsWriterDeleteQueue to improve synchronization handling to ensure thread safety during the addition of nodes
added a HashSet to avoid duplicate parsing in JavadocTool. java and improved test parameters in T7091528. java to enhance performance by avoiding
changed default value of STRIP _ IPV6 from " true " to " false " to disable IPv6 support in Jetty
added support for multiple user parameters in the LoginServerTokenEndpointFilter to enhance the flexibility and usability of token handling in the application
added support for C _ KEY language in LanguageFactoryTest and modified language checks in CPPParserTokenManager to enhance language parsing capabilities and ensure correct
refactor BuckEventBus, DefaultStepRunner, and MoreExecutors classes to use a unified MoreExecutors class to improve code organization and maintainability
added cache control headers and corresponding tests in the LoginService and FormAuthenticator classes to ensure proper handling of cache - control requests and improve test coverage
updated error logging to include exception message to provide more context for debugging errors
updated test suite to use TestAreaReference, TestRangeAddress, TestRangeAddress, TestRangeAddress, TestRangeAddress, Test Test Test
refactor FetchHTTP tests to improve code organization to enhance maintainability and readability of the codebase
updated file handling in TestCommand. java to improve null safety to ensure robustness by avoiding potential NullPointerExceptions
added access control priority settings for ExternalResourceControl in Java2DRenderer to enhance access control management for external resources
added exception handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage. java to improve robustness by preventing build failures on JDK
modified the access level of the ` mbean ` variable and refactored CPU time checks to improve code clarity and enhance CPU time validation logic
added checks for empty comments in TabsAndIndentsVisitor. java to ensure that comments are not empty before processing them
updated assertions in SimDistribStateManager. java and TestTriggerIntegration. java to improve test coverage and ensure accurate validation of node and shard rates
updated file path and author checks to be case - insensitive to ensure case - insensitive comparison for change sets
removed the ` getString ` method from the ` ShadowBundle ` class to streamline code by eliminating unused functionality
added locale - specific date formatting for better user experience in TweetActivity
nifi - 1156 : fix npe in standardprocesssession. getconnection ( ) when no connection specify.
refactor keyboard focus logic in DetailFragment. java to improve code readability and maintainability by encapsulating keyboard focus logic
make sure ` ` file : / /'' work on window
make sure we don't create a new matrix if we can't find it
added import statement for org. springframework. integration. core. Message in GenericMessage. java to enable proper message handling functionality in the integration
updated SQL query construction in PostgresConnector. java and MapReduceJobHistoryUpdater. java to use a join method to improve code readability and maintainability
updated file filter handling in AquaFileChooserUI. java to improve file filtering logic to enhance user experience by ensuring only relevant file filters
chore ( p2p transportmanager ) : reorganize code for good readability
updated the ` toFormulaString ` method to return " TRUE " or " FALSE " based on the result of ` Boolean ` to ensure accurate
updated import statements in PGtokenizerTest. java to improve readability and maintainability of the import statements
refactor variable handling logic in Java2TypeScriptTranslator. java to improve clarity and structure to enhance code readability and maintainability while ensuring correct
added support for auto - increment columns in PostgreSQL to enable the creation and alteration of sequences in the database
updated byte reading logic to use bitwise AND instead of bitwise OR to improve performance and correctness in byte manipulation
updated assertions in ImageParserTest. java to validate dimensions from " Dimension VerticalPhysicalPixelSpacing " and " Dimension HorizontalPhysicalPixelSpacing " to
updated parent assignment from ` getParent ( ) ` to ` parent. getParent ( ) ` to ensure proper retrieval of the parent component from its parent
updated import statements and improved schema name comparison logic in StandardDiffGenerator. java to enhance code readability and maintain consistency in schema name handling
replaced engine _ finish calls with engine _ free and engine _ init methods in NativeCryptoTest. java to improve clarity and consistency in engine management
added support for multiple iteration events in the InterleaveControl class to enhance functionality and improve event handling for iteration events
fix memory leak in streamingfileupload. close ( )
added a call to deleteLogs ( ) in TestRecovery. java to ensure proper cleanup of logs after tests complete
modified URL loading logic to handle different scenarios to improve user experience by allowing direct access to the external URL for better navigation
added a new HeliosClient instance and await the host status in DeploymentGroupTest to enhance test reliability by ensuring the correct host status
updated logResult method from false to true in VisibilityController. java to enable logging of allowed labels in the application
updated log level from " badClients. ribbon. MaxAutoRetries = 0 " to " badClients. ribbon. Max
removed a debug print statement from TranslatorSupportTest. java and added multiple @ Override annotations in StandardTypeMapperComponent. java to improve code
added support for the FRACTION resource type in the PackageResourceLoader and Converter classes to enhance resource loading capabilities for the FRACTION application
removed file write confirmation check from BasicFrame. java to simplify the code by eliminating unnecessary checks
updated the findNewerDependencyVersion method to retrieve groupId and tag values from the resolution result to ensure that the dependency version is correctly associated with
hbase - 25813 hbase. table. getnamespaceinfo ( ) should throw quotaexceededexception ( aihua xu )
refactor multiple attribute - related classes to improve code organization to enhance maintainability and readability of the codebase
updated TestFuzzPreLoop. java file to improve test coverage for various edge cases
added a condition to set f0 to a non - negative value to ensure that f0 is always non - negative to prevent potential errors
simplified logging statement and added null checks for primary keys in TableRetriever. java to enhance code readability and prevent potential NullPointerExceptions
remove the need for clearencoders and use a concurrenthashmap instead
added functionality to allow empty screens in the Lawnchair preferences to enhance user experience by allowing users to disable screen navigation when no pages are
- - - - - - - - - - - - - - - - - - - - - - - - - - - -
refactor ShadowThemeTest and ShadowArscAssetManager to use a new theme implementation to improve theme management and enhance compatibility with modern Android practices
updated import statements and method calls in VerifyFast. java to use Arrays. toString ( ) for consistency to improve code readability and maintainability by
no effective change - remove dbmigration from ehistory2
updated method handle access modifiers and added prototype property functions in ScriptObject to improve encapsulation and support prototype property access
updated the shuffle method to use a random seed for readers to ensure consistent randomness during shuffle operations
updated display name retrieval logic in UsersAndGroupsSearchProvider. java to improve clarity and accuracy of user information retrieval
updated path formatting in CookieRetrievingCookieGenerator to use StringUtils. defaultIfBlank to ensure consistent path formatting by using a default if none
updated closing brace formatting in multiple Java files to improve code readability and maintain consistency
fix incorrect backup count check in abstractcacherecacheservice
updated comparison logic for pageNumber in ValidationResult. java to ensure correct comparison of page numbers
added a condition to check if the focused widget is not null in UIDropdown. java to ensure that the focused widget is not equal to the
fix checkstyle issue in util / soundutil. java
refactor ApplePackageDescription to replace ` FlavorDomain < AppleCxxPlatform > ` with ` getAppleCxxPlatformFlavorDomain ` to improve
add test case for ololoed format with ` ` select...''
renamed the method ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to
refactor EnglishPTBTreebankCorrector class to improve code readability and maintainability
added a new test class ` TestGetLoggerNPE ` to verify logging behavior to ensure that ` getLogger ` and ` getLogManager ` methods
added ` getData ( ) ` method to ` PathSharingContext ` and updated ` engine. put ( " appCtx ", Map <
don't swallow exception in espresso node.
added support for ` NEXT VALUE FOR ` pattern in ` NextValExpression ` to enhance flexibility in expression parsing and improve code maintainability
add more information to the error message when access resource bundle fails
refactor BoundedLocalCache to improve cache removal logic to enhance performance and maintainability of the code
added a new property ` order _ direction ` with a value of " netout " in ` QuoineNewMarginOrderRequest ` and
added bound initialization for properties in PropertyDescriptor. java and created Test7192955. java for validation to ensure that properties are correctly bound
replaced the ` failsafeWidth ` and ` failsafeHeight ` integer with a new ` SetDisplayModeCallback ` interface in ` Lwj
added null check for buttonsAwatingRelease in the parent form to ensure buttonsAwatingRelease is always set to null to prevent potential NullPointerException
updated wrap width calculation logic in LineCell. java and adjusted its value in StyledTextAreaSkin. java to improve layout responsiveness and ensure proper
fix typo find by codespell on fossies. org
changed the implementation of parameterValues from HashMap to LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper to ensure predictable iteration order for parameter values
replace string concatenation with String. format in multiple Java files to improve readability and maintainability of the code
updated namespace context retrieval logic in StaxXmlPullParser. java to improve clarity and maintainability of namespace handling
removed redundant nestedJoins configuration checks in multiple test files to streamline configuration management by eliminating unnecessary checks
don't allow root admin to specify a root admin
added caching for JavacFileManager in SourceFileManager and modified CompletionTaskProcesor constructor to include a cursor parameter to improve cache location management
added Hive configuration variables for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection. java to
replaced JUnit's Assert import with Hamcrest's assertThat in KuduIOIT. java and XmlIOTest. java to
add nullability annotation and use util. createhandler ( ) instead of handler.
changed the calculation of offsetMemSize in SymbolMapReaderImpl. java and added a new test in LineTcpConnectionContextTest. java to
removed debug print statements from TermFilterTest. java to clean up the code and reduce unnecessary console output
updated import statements in Jooby. internal. guice. TypeConverters and removed Reflection class to streamline the codebase by eliminating unused
refactor threadlessexecutor to use new threadlessexecutor
removed exception handling for IndexOutOfBoundsException in DateTimeFormatter. java and added unit tests in TestDateTimeParsing. java to improve error handling and ensure
renamed ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and updated related method names to improve clarity and consistency in naming conventions
added a new case for WILDCARD in Types. java and created a new class T7034495. java with generic interfaces
replaced a'do'loop with a'while'loop in LotsOfEvents. java to improve code readability and maintainability
updated conditional checks in TransclusionDecideRule. java to improve clarity and structure to enhance readability and maintainability of the code
don't print version when there be no micronaut
added unit tests for ` Print _ Area ` in ` TestBugs. java ` to ensure correct handling of ` Print _ Area''
modified the return statement in MindIconFactory to handle cases where the name starts with a slash to improve the accuracy of the MindIcon
updated the ` onHomeIntent ( ) ` method to accept a boolean parameter indicating if internal state is handled
replaced the use of getPreferDependencyTree ( ). orElse ( false ) with a boolean variable preferDependencyTree to improve code readability and maintain
added an ` activeTab ` parameter to the ` showDetails ` method across multiple activities to enable the display of file details based on the active
renamed the ` $ apply ` function to ` applyStatic ` across multiple files to improve clarity and consistency in method naming conventions
added logic to randomize low symbol size in MinimalEncoder. java and updated test assertions in HighLevelEncodeTestCase. java to improve efficiency and
updated header descriptions, parameters, and comments in SourceBuilder. java to enhance clarity and consistency in output formatting
added a call to notifyDataSetChanged ( ) on mAdapter to ensure the adapter updates correctly after changes
removed unused method ` setDefaultWALSyncMode ` from ` ShadowSQLiteConnection ` to streamline code by eliminating unused methods
updated type checking logic in RemoveJavaDependenciesAdapter. java and added unit tests in Collections. java to improve type handling and ensure robustness of
remove unused method from s3crtasyncclient
updated error messages in doDudPasswordTest for better clarity to improve test coverage for corrupted stream scenarios
improve test failure message when collection be not find.
make sure we don't emit bailout if a compilation error occur
pdfbox - 4892 : fix problem with pen image in desktop
refactor SQLXML class to improve code readability to enhance maintainability and ease future updates
added a limit parameter to the getOrderBook method in YoBit. java and updated its implementation in YoBitMarketDataService. java to
( ) ) should not be an exception
nifi - 11562 : set max string length to max string length for streamreadconstraints in standarddataflow
updated the way engines are retrieved and lock is acquired in PmsConfiguration. java to improve code clarity and ensure proper locking mechanism for enabled engines
renamed ` FullIterator ` to ` WheelIterator ` and updated related code references to improve clarity and consistency in naming conventions
[ core ] improve error message for non - missing bug pattern
[ java ] increase timeout in localchunkprovidertest to 10 second
changed the visibility of the ` uncomplete _ checklists ` menu item from ` true ` to ` false ` to disable the visibility of the
updated DefaultResultSetHandler to resolve discriminated results map and added Contract and DiscriminatorTest classes to enhance result mapping handling and ensure proper functionality
added null check for defaultHome and unregistering the receiver if it is null to ensure proper resource management and prevent potential NullPointerExceptions
added VertxGen annotation to PumpImpl. java to enable Vert. x generation functionality in the application
removed unnecessary casting of FileDisplayActivity in FileDetailFragment and OCFileListFragment to streamline code by eliminating unnecessary type casting
trim whitespace from tokens array in ConfigAttributeEditor and add unit tests for trimming and leading spaces to ensure proper handling of leading and trailing spaces
refactor ClassUsingAnotherAuxiliary, ClassUsingAuxiliary, and SelfClassWithAux classes to improve code organization and maintainability
fix classnotfoundexception in classloader. getunnamedmodule ( )
updated case handling in DatabaseMetaData. java to set relKind from " TABLE " to " SYSTEM TABLE " to ensure correct representation of database -
chore ( bazel ) : mark old version of agent a deprecate ( # 438 )
corrected the spelling of " rqst " to " rqst " in multiple files to improve code readability and maintain consistency in formatting
added a new module - info. java file for the com. speedment. runtime. core module to define module exports and dependencies for better
added handling for idle flush state and modified fill state management in SslConnection. java to improve connection stability and ensure proper handling of idle and
updated Log4j2LogDelegateFactory to implement LogManager and modified the createDelegate method to improve logging functionality and enhance error handling in the
added a check for the presence of the server VM in the execution environment to ensure the test only runs when the server is available
refactor ` ExecutableFindOperation `, ` MongoOperations `, and ` ReactiveMongoOperations ` classes to improve code organization and maintainability
updated PGProperty. java to replace null with " org. postgresql. ssl. LibPQFactory " to properly reference the LibPQFactory class
disable testinterprocesssemaphoregulest. testinterprocesssemaphoregustertest ( ) for now
added sorting functionality for resource names in EditableResources. java to improve the organization and readability of resource keys
added a new OSvTerminal class and updated TerminalFactory to handle OSV - specific terminal support to enhance terminal functionality by integrating OSV
added support for additional file extensions in the ClassType class to enhance compatibility with additional file formats
replaced HashMap with TreeMap for combinedVectors and adjusted related method calls in DrillTestWrapper. java to improve performance and maintain order of vector data
added a condition to check if the index is less than the size of names and values to ensure that the loop does not exceed the expected size
updated WebSocketPolicy. java with new configurations to enhance WebSocket security features and improve performance
refactor ShadowTelephonyManager and ShadowWifiManager to use instance variables instead of static methods to improve code readability and maintainability by reducing static dependencies
http : / / issues. apache. org / jira / browse / amq - 3573 - allow custom message resolution to be use
replaced ClassVisitor with Class <? extends ClassVisitor > in AsmUtil. java to enhance type safety and improve code clarity
added logging functionality to the UAA auditing service to provide better tracking and monitoring of user authentication events
added null checks for temperature properties in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to ensure proper handling of null temperature values and
don't create aop proxy for non - abstract class.
camel - http - allow to configure http proxy via system property.
updated the maximum encoding version from " 1.3 " to " 1.3. 2 " to reflect the latest features and improvements in the template management
added jdkSerialFilter ( ) method to System. java to enable serialization of static properties in the application
camel - jbang - add more information to the log.
replaced calls to ` getScroller ( ). forceFinished ( true ) ` with ` forceFinishScroller ( ) ` across multiple classes to simplify
updated the method name from ` ensureRealtimeClusterIsSetUp ` to ` ensureRealtimeClusterIsSetUp ` and added configuration application using environment
added methods ` isError ( ) ` and ` error ( String ) ` to ` ValidationReport `, and updated error handling in ` Disallow
refactor inline QSB configuration in InvariantDeviceProfile. java to use dynamic values from the closestProfile to improve flexibility and maintainability of the
added exception handling and updated URL decoding logic in SortedArrayStringMapTest. java to improve error handling and ensure proper decoding of paths
updated regex patterns in TransformSteps. java to improve readability and maintainability of the code
added null checks for properties in mmm Toolkit. java and pGraphicsJava2D. java to enhance stability by preventing potential NullPointerException
updated waitUntil calls to use a configurable timeoutMs instead of a fixed 60 _ 000 value to improve code readability and maintainability by centralizing timeout
updated package - info. java files for mmm and ppp to improve documentation clarity and maintainability
added a method to set the Docker image URL in Environments. java to improve the configuration of the Docker image for better user experience
[ jbrules - 3486 ] don't use system. gc ( ) in the test case
refactor AdditionalAnswers, AnswerFunctionalInterfaces, and InvocationOnMock classes to improve code organization and maintainability
replaced the ` createHardLink ` method with a ` copyFile ` method that checks the existence of the target directory and source file before copying to
renamed the method ` appendToDescription ` to ` getDescription ` across multiple classes to improve clarity and consistency in method naming
( ) ) should be available ( )
added a condition to check if ` xml ` is an instance of ` Xml. Document ` before visiting the visitor to ensure proper handling of XML
replaced ` InstrumentationTestCase ` with ` AndroidJUnit4 ` and removed ` InstrumentationTestCase ` from ` NotesHelperTest ` and ` Rem
added new rules for GasLimitRule, ParentGasLimitRule, and GasLimitRule in CommonConfig. java to enhance rule
changed the visibility of the setupData ( ) method from public to private to enhance encapsulation by restricting setupData ( ) method
( ) ) should be runintransaction ( )
[ 3.0 ] fix npe in tripleserverstream. close ( )
[ hotfix ] [ doc ] use site. baseurl for restart strategy
added a new test method ` testIssue154 ` to ` SelectTest. java ` to validate SQL parsing and deparsing functionality to ensure
refactor Common class to improve code structure to enhance maintainability and readability of the code
refactor code to use a try - with - resources statement for better resource management to improve code readability and maintainability by utilizing a try -
[ hotfix ] [ stream ] fix typo in streamexecdeduplicate
added a warning log statement for Kafka message sending errors to improve error reporting for better debugging and monitoring
added setersistentpropertyaccessorfactory and isImmutable methods to SimpleElasticsearchPersistentProperty and SimpleElasticsearchPersistentEntity classes to enable persistent property
[ geot - 6482 ] use setcoord ( pointnd, i ) instead of setcoord ( pointnd ).
added scroll gestures and swipe event handling in AskGestureEventsListener. java to enhance gesture scrolling functionality for better user experience
refactor comparison logic in NGramEstimator. java to improve clarity and performance of value comparison
updated imports from ` cucumber. runtime ` to ` io. cucumber. core. runtime ` across multiple files to align with the new package structure
updated method calls in StatsLogCompatManager to retrieve folder icon details to ensure accurate tracking of folder icon attributes in the application
corrected a typo in the method name from ` getServerSlogan ( ) ` to ` getServerName ( ) ` to ensure accurate retrieval of
825439 : c2 : c2 : : c2 compilation fail with assert ( is _ same _ node ( ) = = null
refactor SelectionHighlighter to improve handler management and equality checks to enhance code clarity and ensure proper object equality and hash code generation
added a new ` StringResultConverter ` class and refactored ` AsmUtil ` and ` AsmRuntime ` to use it to
camel - 19751 : use junit5 instead of junit4 ( # 19751 )
corrected the condition in JansiWinSysTerminal. java to ensure proper execution of the WaitForSingleObject method
added null checks and adjusted buffer limit settings in BufferUtils. java to ensure proper buffer handling and prevent potential NullPointerExceptions
updated assertions in TestSolrDiscoveryProperties to use File. separator instead of " data / " to ensure consistency in file path handling across the application
updated OS detection logic in AutoUpdaterServerProperties. java to handle Windows and macOS correctly to ensure compatibility with different operating systems
changed lockFile to lockName in FSDirectory and Lock classes to use a more descriptive key name instead of a File reference to improve clarity
updated references from appIcon to allApps in Overview. java to improve clarity and maintainability of the code
renamed methods and variables from Invocable. InvocationType to ClientDatagramEndPoint to improve clarity and consistency in method naming conventions
updated the SQL query in JdbcStepExecutionDao to use a more natural order to improve readability and maintainability of the code
updated button handling in LwjglInput. java to return - 1 instead of returning a default value to improve functionality by ignoring unknown buttons
added admin token to test claimedtasks
replaced instances of ` Log ` with ` Logger ` in multiple classes to improve logging consistency and maintainability
updated method visibility to public and added new test cases in SsoAccessTokenProviderTest to enhance accessibility and improve test coverage for token resolution
[ geos - 6642 ] fix test failure on macos
[ ci ] add support for create, delete, summarize and summarize alarm suppression
reordered conditional checks in JFrame. java to improve code readability and maintainability
refactor LibraryScanner to use a try - with - resources statement to improve connection handling and avoid potential NullPointerExceptions
updated metrics initialization and gauge method calls in SuggestComponent. java to streamline metrics handling and improve code clarity
refactor output construction in OCFileListFragment. java to improve clarity and structure to enhance code readability and maintainability while ensuring proper formatting for file
( ) ) should return an iterable instead of an array.
update sourceversion. java with new release note
added a new test class ` ThreadFactoryTest ` to validate thread creation and execution of the ` MyThreadFactory ` to ensure proper functionality and
refactor lock period handling in DelegateResourceActuator to use a dynamic properties store to improve code clarity and maintainability by centralizing lock period logic
added a new TicketModel instance to EditTicketPage to enhance ticket management functionality
changed the default value of " ENABLE _ PREDICTION _ DISMISS " from false to true to enable the feature for dimiss apps from
updated constructors in multiple assertion classes to include a self - type parameter to enhance type safety and ensure consistent behavior across assertion types
added a new menu item for quote functionality in TweetActivity to enhance user experience by allowing users to quote their text
make sure that the interrupt lock be always lock if the thread do not exit.
use direct playback instead of raw
added a conditional check for the result before offering failure in ServerHTTP2StreamEndPoint. java to improve error handling by ensuring failure is only
( ) ) should be ex ( )
added ThreadSafe annotation to CheckpointsCleaner. java to enhance thread safety during processing
replaced the usage of ` Observable. OnSubscribeFunc ` with ` Observable. Subscriber ` across multiple files to improve code clarity and maintainability by
removed unnecessary try - catch block in ComponentPresetManager. java to improve code readability and maintainability
added a new configuration option for using unique column names in Hive queries to improve handling of unique column names in SQL queries
remove unused variable and move some code from the client to the client
added session validity check and exception handling in Session. java to ensure session validity and improve error handling for invalid sessions
hhh - 14637 - remove exceptionhelper. java file which be no longer use
updated the key pair generator initialization from 256 to 255 to ensure compatibility with the latest cryptographic standards
added codec setting for Lucene41PostingsFormat to ensure compatibility with Lucene41 postings format
[ hotfix ] [ checkpoint ] add log when the header list be empty
added handling for " RSA / ECB / OAEPPadding " algorithm and improved error handling to enhance the robustness of algorithm creation and
rename platform. darwin _ aarch64 to platform. MACOS _ AARCH64 to ensure compatibility with aarch64
[ gr - 3486 ] improve logging and exception handling in debugsourcesresolver
reordered the return statements in AbstractTest. java for clarity to improve code readability and maintainability
updated error handling in FileUploadUtils and modified segment file handling in UploadRefreshDeleteIntegrationTest to improve error reporting and ensure the correct file upload
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and introduced ` newUnsafeByteBuffer ` for better memory management to improve memory handling and
changed the default value of USE _ PIPELINE _ DOWNLOADER from false to true to enable the downloader functionality by default
updated DST _ OFFSET setting in SimpleDateFormat. java and added a new Bug7130335. java file with date formatting tests to ensure correct
refactor AllAppsView. java to use local variables for iconCount and selection variables to improve code readability and maintainability by reducing repetitive references
cloudstack - 4892 : fix npe in vr _ default _ hypervisor _ type when the default hypervisor type be none
modified methods in StringBuffer. java to improve performance and maintainability of the code
added uid assignment to rule. uid in RuleResource. java to ensure the rule's uid is correctly set for the rule
added null check for listener before unsubscribing listener to prevent potential NullPointerException when listener is not initialized
added a new property descriptor for pretty printing in JoltTransformJSON to provide configurable options for pretty printing output in the Jolt transformation process
make access _ table a public array.
updated error messages in DataSourceInitializer and its tests to clarify that resources are not found at a specified location
added dorun ( ) method that throw ioexception instead of exception
updated multiple Java files to improve code organization to enhance maintainability and readability of the codebase
added handling for upgrade suspension status in AmbariManagementControllerImpl. java to improve handling of upgrade suspension status in the application
''''''''''''''''''' '
updated field retrieval logic in Resolver. java to improve performance by eliminating redundant field retrieval
updated the ` OAuthProperties ` constructor to set encryption and signing key sizes using ` CipherExecutor ` to ensure proper configuration of encryption and signing key
hbase - 20613 addendum fix typo find by codespell on fossies. org
replaced the ` AllowedResourceAliasChecker ` instantiation with a method call to ` addAliasCheck ` to simplify the code and improve clarity in
refactor ObjectInputStream, ObjectOutputStream, ObjectStreamClass, Serializable, and package - info files to improve code organization and maintainability
[ java ] change cluster interface to extend idlestrategy and implement reset ( ) method.
updated the writer initialization in ChunkedWriter. java to correctly increment the currentChunkID and ensure proper formatting of the writer instantiation
added a new abstract class AbstractJobExecutor that implements JobExecutor to provide a structured way to execute job executions in batch processing
refactor replay method to store replay future in a variable before returning to improve clarity and maintainability of the code
updated variable and method names from " hugeStaticBase " to " staticBase " for consistency to improve code readability and maintainability
fix npe in consulclient. getserviceids ( ) when discovery be disable
replaced the use of ` Float. floatToIntBits ( float ) ` with ` SecureRandom ( ). nextInt ( ) ` for hashSalt
[ gr - 52211 ] re - enable should verify framestates for runtime compile method .
removed currentStart and baselineStart assignments from TimeOnTimeComparisonHandler. java to streamline code by eliminating unnecessary calculations
updated the answer method in CallsRealMethods to handle abstract methods and added unit tests for abstract methods to enhance method stubbing functionality and ensure
refactor checkPackageAccess method to accept Class instead of String to improve type safety and maintainability of package access checks
refactor ` ContextPathPluginTest ` to extend ` AbstractPluginData ` and improve error configuration setup to enhance test structure and ensure proper error configuration
refactor ContributionListPanel to improve code clarity and maintainability to enhance readability and maintainability of the code
added support for the " has - touch - interaction - service " feature in the test system to enhance functionality by allowing the application to handle touch
added headless mode support and improved error handling in ConnectAction. java to enhance user experience by enabling headless mode for the connection process
changed the type of ` showRulesResult ` from ` ImmutableMap < String, ShowOptions > ` to ` ImmutableMap < BuildTarget, ShowOptions >
added new files for ArrayHelper, Asserts, MathUtils, Constructor, NativeRegExp, Objects, and RangeHelper to establish a standardized structure
added handling for HOME and END command in the Less class to improve user experience by allowing users to enter home and end lines
replaced synchronized block with direct usage of MainUtil. getConnectedPlots to simplify code and improve performance by eliminating unnecessary synchronization
refactor intent creation in Utilities. java to use Intent. createChooser instead of direct calls to Utilities. IsPackageInstalled to streamline intent handling
remove public access modifier from roster constructor.
added basicConstraints extension to TestUtils to enhance certificate generation capabilities
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` to address issues with fixed nested transformations
removed the check for ` field. multiValued ( ) ` in ` TrieDateField. java ` and ` TrieField. java
removed the TaskbarStateHandler class and its associated functionality from BaseQuickstepLauncher to streamline the codebase by eliminating unused components
added a new file ArrayLength. java to test array field access methods to ensure proper handling of array fields in reflection
[ hz ] wait for hazelcast process to be destroy before try to destroy it.
replaced the Singleton annotation with @ PostConstruct and refactored the save method to improve dependency injection and enhance code readability
updated assertion from ` value > = 0 ` to ` value > 0 ` and modified the logic for setting ` newValue ` to ensure correct value
updated thread name field from " [ C " to " Ljava / lang / String ; " and changed return type from charArrayToString to String
updated DEFAULT _ RAND _ SEED from a current time to a default value of 42 in Lucene90HnswGraphBuilder. java
pgraphicsjava2d : fix nullpointerexception in stroke ( )
refactor ` expandDynamicStar ` method to accept ` SqlIdentifier ` as a parameter to enhance modularity and maintainability of the code
added a method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class to facilitate the handling of nested elements in
added import for Messages and set the status code for a warning icon to enhance the HTTP server's status handling and improve user feedback
refactor event handling in PSurfaceAWT, MouseEvent, and PSurfaceJOGL classes to improve clarity and maintainability of event handling
[ gr - 167392 ] use cycLES _ 3 instead of cycLES _ 6 in amd64countLeading
camel - as2 : fix npe in entityparser when disposition notification be not set
refactor Locale class to improve code readability to enhance maintainability and facilitate future updates
add clear log button to the error console
set mRecentsAnimationController to null to ensure proper initialization of mRecentsAnimationController
replaced ConsolePlayer with LocaleHolder and updated message handling to improve locale management and enhance message serialization
updated connection pooling implementation in multiple test classes to improve resource management and error handling during test execution
danielwagnerhall : adding opera driver to the list of supported browser
improve error message when file download fails
[ lifx ] add support for new lifx product
added async request handling in OverseerCollectionProcessor and updated test cases in CollectionsAPIAsyncDistributedZkTest to enhance replica creation functionality and
updated PGSQL _ DEFAULT _ TCP _ PORT _ NUMBER, PGSQL _ DEFAULT _ TCP _ PORT _ NUMBER, and PGSQL _ PK
updated LogPanel instantiation to use the repository model's HEAD reference instead of a repository name to ensure the log panel reflects the correct HEAD
skeletoninterbonering : use'XYZ'instead of'Y'for the y - coordinate.
added a new method ` browserDestroy ` and modified the ` deinitialize ` method in ` AndroidImplementation. java ` to improve the handling of
added a call to waitForActiveCollection for the " readApiTestViolations " collection to ensure proper handling of API test failures in the application
refactor for - loop to improve array handling and enhance attribute assignment logic in ScreenTerminal. java to enhance code readability and maintainability while ensuring
updated the controller state checks in SoftResetAction. java to include additional states to ensure proper handling of different backend states in the soft reset action
disable on - disc stream cache by default
added logic to retrieve the parent folder based on the media renderer's resource to ensure the correct parent folder is used for media rendering
bug 10719 : fix typo in networkoffering. isersistent field
modified FileOutputStream to use a custom close method to ensure proper resource management and prevent potential memory leaks
added error handling for Forbidden requests in StandardGitHubRepository. java to improve robustness by handling Forbidden requests gracefully
log4j2 - 1343 add a getoriginal ( ) method to messagefactory2adapter.
added @ SuppressWarnings ( " BanSerializableRead " ) annotations in DataSizeTest, DurationTest, and SizeTest to suppress warnings related to
updated regex pattern from " [ 0 - 9 ] { 1, 2 } " to " ( 0 - 9 ] { 1, 3 }
updated tooltip delay settings in ExtractionModelFrame. java to improve user experience by adjusting tooltip delays
refactor target handling in ProjectCommand. java to use a single variable for passed - in targetsSet to improve code readability and maintainability by reducing
added timezone configuration and corresponding test assertion in TimeTest. java to ensure accurate time formatting and validate expected output
updated MediaSessionConnector implementation to improve session management and enhance performance
don't use jssefactory to get the ssl support
updated accuracy and altitude display logic in GpsLoggingService. java to improve accuracy and accuracy reporting for GPS data
added support for future - enabled exchange parameters in BinanceExchange and BinanceAccountService to enhance flexibility and control over future exchange behavior
refactor adminaccountmanagementhelper to use a table instead of a list
added a method to set the maximum worker thread size in ThriftHttpCLIService to improve resource management by allowing more flexible request handling
replaced direct calls to ` getClass ( ). getName ( ) ` with a constant ` PROPERTY _ DISABLE _ WATCHER ` to improve
http : / / issues. apache. org / jira / browse / amq - 3573 - disable ssl by default
updated exception handling from parseError to validationError in DrillSqlWorker. java and added unit tests in TestWindowFunctions. java to improve error
updated duration calculation in GCInspector. java to ensure accurate duration computation for fast collection
fix npe in nodewithjavadoc. getjavacomment ( )
refactor ReserveMemory. java to improve memory handling to enhance compatibility with operating systems and streamline memory management
added multiple calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner. java ` to ensure proper handling
hbase - 25813 hbaseadmin # waitforjobid should be protect to allow subclass to access the procid field
camel - cxf2 fixed the cxf unit test error of cxfendpoint
refactor YamlChangeLog serialization to store changes in a container map to improve data handling and organization in YAML output
replace println statements with print statements in SchemaPrinter. java to improve output formatting for better readability
refactor regeneration logic to streamline the regeneration process and improve code readability
replaced calls to ` getContext ( ) ` with ` getActivity ( ) ` in ` HomeFragment. java ` to ensure proper context is used for
replaced ` @ GeneratedValue ( strategy = AUTO ) ` with ` @ GenericGenerator ( name = " native " ) ` in multiple Java files
removed the country parameter from the getSystemTimeZoneID method to simplify the method by eliminating unnecessary country parameter
updated byte writing method in BZip2Codec. java and modified ByteBuffer allocation in TestBZip2Codec. java to improve byte handling and
move logging initialization from appw to appframe
added a new constant VALUE _ TYPE _ EMPTY and modified the create method in Value. java to utilize this constant to improve code clarity and maintain
use equal ( ) instead of = =
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class to improve code readability to enhance maintainability and ease future updates
replaced instances of ` newInstance ` with ` newInstanceExact ` in ` TargetGraphFactory ` and ` VersionedTargetGraphBuilderTest ` to improve clarity
fix typo find by codespell on fossies. org
added a new type adapter for ArtifactVersion in MetadataCollection. java and made modifications to ModMetadata. java to enhance the handling of ArtifactVersion
updated NativeArray. java to check for the presence of a previous element before setting it to ensure correct handling of the last element in the object
updated file handling in FileUploader. java to use mStorageManager for parent file retrieval to improve code clarity and ensure the correct parent file is
added a new file UTF8ReaderBug. java to test supplementary XML characters to ensure proper parsing and handling of supplementary characters
added unit test base on user forum issue
updated API calls from " btcusd @ ticker " to " ethbtc @ depth20 " in BinanceIntegration and Binance
added a resetAllocation method to the Wrapper class and invoked it in the SimpleParallelizer class to reset the allocation state for better resource management
removed unused import of AssertTree in AmbariManagementControllerTest. java to clean up the code and improve readability
refactor property handling in mmm Agent. java and add a new AgentCMETest. java file to ensure thread safety when accessing system properties
fix typo find by codespell on fossies. org
refactored methods in AbstractDoubleArrayAssert to improve code readability and maintainability
refactor width and height calculations in Legend. java to ensure proper handling of labels to avoid ArrayIndexOutOfBoundsException
added test methods for delay and abort messages in various test classes to improve error handling and debugging capabilities in the application
replaced ` d. get ( ) ` with ` d. getValues ( ) ` and updated the loop to iterate through ` text [ ] `
replaced ` ruleResolver. requireRule ( ) ` with ` BuildTargetSourcePath ( ) ` in ` Omnibus. java ` to improve
added ` ` botania. versioning. disabled'' message when ` ` versioning'' be disabled
changed the type of ` filePaths ` from ` Collection ` to ` List ` and introduced a new ` numberOfFiles ` field in ` Media
added a " - b " argument to AidlStep and updated String formatting in GenAidlTest to improve command - line argument handling and
add test case for issue # 779 ( # 779 )
removed a TODO comment in FakeHttpLayer. java to clean up the code and improve maintainability
[ java ] use revokeleadership ( ) instead of handleError ( ) in embeddedleaderservice.
fix concurrentmodificationexception in compositediscoveryclient
replaced ` SystemConfiguration ` with ` Configuration ` in ` ParallelUniverse. java ` and ` BootstrapTest. java ` to standardize
( ) should be an option ( )
rename ` ` no _ widgets _ available'' to ` ` no _ widgets _ available'' and ` ` no _ search _ results
use dynamic woodstox config instead of hard - coded value
refactored the ` testBuckAliasList ` method to use a private instance of ` ProjectWorkspace ` to improve code organization and maintainability
removed unnecessary logging statements in WidgetsFullSheet and WidgetsRecommendationTableLayout to streamline code and improve performance by eliminating unnecessary
( chore ) camel - cxf : use @ disable instead of @ test
added error handling to the update ( ) method in CachedStore to improve robustness by logging exceptions during periodical refresh failures
refactor ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` RequiredArgsConstructor ` and ` AnnotationAware
added a method to check default background bits and refactored color handling in HSSFCellStyle, HSSFFont, and HSS
updated ZonedDateTimeFormatterBenchmark. java with new benchmarking functionality to improve performance and accuracy of ZonedDateTime formatting tests
refactor the conditional logic in DistributedUpdateProcessor and add a new test class DistributedUpdateProcessorTest to improve code clarity and ensure proper testing of updates
added a null check for stageNr in the simulation list handler to ensure proper handling of cases where stage numbers are null
add option to replace all block in / editscript / worldedit.
[ hotfix ] [ runtime ] fix typo in the javadoc of extendedmastersecretsextension
changed the declaration of the InputProcessor variable from non - final to final to ensure immutability of the processor variable
added a call to ` onWriteFailed ` on the ` processedTask ` in ` WritableKeyProcessor. java ` to ensure proper handling of
added a new MySQL database entry " CUBE " to MySQLDatabase. java to support additional database features in the application
added try - catch block around the rm method call in TestReplicationHandler. java to handle potential IOException during resource cleanup
renamed ` ExperimentalRobolectricTestRunner ` and related tests to ` MultiApiRobolectricTestRunner ` and ` TestRunnerForApiVersion `
refactor ` DefaultOkHttpClientFactoryTest ` to streamline timeout and redirect handling to improve code readability and maintainability by reducing redundancy
refactor BatchUpdateException, PreparedStatement, and Statement classes to improve code readability and maintainability
added a null check for the output stream in RawMessageContentRedirectInterceptor. java to avoid potential NullPointerExceptions during processing
ggb - 2481 make sure ggbapplet. getpngpath ( ) work correctly in web
added a ` fromCli ` parameter to the ` jailerMain ` method and modified the exception message to include an additional parameter to enhance
refactor HttpRequest class for improved readability to enhance maintainability and ease of understanding for future developers
added a commit operation for pullUnread in TalonPullNotificationService to ensure that unread notifications are committed to the shared preferences
canonicalize ` ` object'' to ` ` object'' in isnotnullnode.
updated font size and memory handling in Box2DTest. java and refactored camera initialization in OrthographicCamera. java to improve
refactor LinearLayoutManager initialization in ViewPostDetailFragment. java to improve readability and maintainability of the code
changed log level from trace to warn in CLIService. java to improve logging granularity for background operations
fix : jimplebodybuilder don't generate method instance for abstract method
ggb - 2481 fix for pointer up on ie10plus
updated the ` getNotificationUsers ` method to include a ` deviceId ` parameter and modified its implementation to enhance user retrieval by incorporating device
updated the URL from " droppr. org " to " SRTM. csi. cgiar. org / SRTM
removed unused listeners and set bottomPanel to null in MotifFileChooserUI. java, and added a new class bug6520101.
updated method signatures in HollowDiffUIRouter, HollowHistoryUI, and HollowExplorerUI to return a boolean indicating success or failure
refactor BuildRuleResolver methods to improve rule retrieval logic to enhance clarity and maintainability of the code
set the visibility of the transport spinner to GONE based on the making shortcut status to improve user experience by hiding the transport spinner when a shortcut is
added null check for attributes _ field and created new classes with annotations and annotations to enhance code robustness and maintainability by preventing null pointer exceptions
refactored backPressed ( ) method to return a boolean indicating success to enhance user experience by preventing multiple calls to back press ( )
added a new constant ` LONG _ VIEW _ INDEX _ ENABLED _ ATTRIB ` in ` QueryServices ` and ` QueryServicesOptions `
updated SDRTrunk. java to append " v " instead of " V " to correct the formatting of the output string
updated the message containing logic in PrivateKeyParserTests to use a clean path to improve code readability and maintainability by using a utility method for path
removed the columnPosition parameter from the diffDropColumn method and its usage to simplify the method signature and eliminate unnecessary parameters
) should use TEST _ VERSION _ CURRENT instead of LUCENE _ 40
hbase - 20613 add an option to disable column family check in importtsv. patch by jbellis
[ java ] make sure we don't get the log subscription id when stop a recording.
replace startActivity with startActivitySafely and modify voice button visibility logic to improve handling of voice buttons and enhance UI responsiveness
added a condition to return early if the first element of the JSON node is " i " to improve performance by avoiding unnecessary processing for the first
refactor Procedure class to improve code structure to enhance maintainability and readability of the code
updated resource bundle calls to include default locale and system class loader to ensure consistent resource loading across different locales
[ j2kt ] don't rewrite non - kotlin array literal.
refactor PerSegmentSingleValuedFaceting logic to improve handling of empty term counts to enhance robustness by ensuring only valid term counts are processed
fix a potential npe in the modmetadata ( # 7143 )
added a new OSGi test class to validate import - Package and sun - misc dependencies to ensure proper handling of import - packages and validate the functionality
http : / / issues. apache. org / jira / browse / amq - 4237 - allow to enable referencing service graph via
hbase - 25813 hbase. hregionserver. testasyncprocess hang due to a race condition in htable. setautocommit (
fix ( noclassdeffounderror ) : cast ctstatement to ctstatement
added a method ` hasUserData ( ) ` to ` SimpleFeatureImpl ` and implemented it in ` SimpleFeatureImplTest ` to provide a
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils. java ` and ` ExplainTask. java ` to simplify
refactor RelyingPartyRegistration class to improve code readability and maintainability
removed the ` enableLogging ` method from the ` JavaCompiler ` class to streamline logging configuration by eliminating unnecessary logging functionality
added a new file ` InJavaSourceSet. java ` that implements a Java source set to provide a mechanism for identifying Java source sets in
updated the resource path for the WFPC2u5780205r file in TestGDALParser. java to ensure proper loading of
added a static method ` createGetter ` to the ` ReflectionHelper ` class to provide a way to create a getter for an object based on
removed the default preferences check for external storage to simplify the condition for better readability and maintainability
added a new configuration option ` INDEXER _ NO _ COMMIT ` in ` IndexerMapReduce ` and updated ` ObjectCache ` to use
bug 10719 : don't allow disk offering in createvolumecommand
updated assertions in BaseTestCellComment. java to check for non - empty notes to ensure correct handling of empty cell comments
added validation for ` amountToAdd ` and ` amountToSubtract ` in ` LocalDate `, ` LocalDateTime `, and ` ZonedDateTime ` classes
added a new file ` Issue382. java ` that throws ` IllegalArgumentException ` and ` IllegalStateException ` to provide a mechanism for handling
replaced the use of ` Integer. valueOf ( ) ` with ` Integer. signum ( ) ` and simplified the return statement in ` PositionUtils
set the visibility of the holder text to GONE when certain conditions are met to improve the visibility of the holder text when certain conditions are met
fix ( jdtimport ) : fix astparentconsistencychecker ( # 2453 )
danielwagnerhall : fix firefoxdriverservice to use firefoxoptions. getprofile ( ) instead of firefoxoptions. get
make liquidblock extend bucketpickup, close # 5688
resolve intermittent failure on slow machine
) should not be ( )
improve performance of distincterrorlog # newobservation ( )
updated system property values from ` false ` to ` @ TestGroup. class ` to enable or disable tests based on annotations
rename sqlexecutionloggerimpl. createlogger ( ) to sqlexecutionloggerimpl. getOrCreatelogger ( )
added access deny statements for Class, Method, and Proxy in GraalContext. java to enhance security by restricting access to specific classes
refactor image processing in PGraphics2. java to use WritableRaster for improved performance to enhance efficiency and maintainability of the image loading process
updated HiveUtilities. verifyAndAddTransactionalProperties calls to use partition and table instead of table to enhance data validation by verifying partition and table
refactor overlay scrolling logic in Workspace. java to improve readability and maintainability of the code
hhh - 14744 - enhancing batchbuilder and nonbatchingbatchingbatchbuilder for hibernate - engine - jdbc
''should'''''''''''' '
added a new test for spying on a static state in PartialMockingRetainsStateTest. java and created a new MockWithStatic
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest. java ` to ensure SQL parsing and depar
added error handling for null ugi in SecurityUtil. java to improve robustness by handling potential NullPointerExceptions
updated error handling in OpenALMusic. java to include the actual error code to improve error reporting for audio buffer allocation failures
camel - jbang - fix endpointhelper. reslovestringparameter to be deprecate.
updated SQL type creation logic in RexNodeConverter. java to improve accuracy in handling decimal precision and scale limits
refactor vendor and device retrieval to use Optional. ofNullable instead of accessing VendorProperties and getDeviceProperties directly to improve code readability and handle potential
updated the ` updateAccount ` method to use ` Long. toString ( now ). getBytes ( ) ` instead of a hardcoded string to improve
replaced AxialStage with RocketComponent in BasicFrame. java and refactored the selection logic in DesignPanel. java to improve code
added getter and setter for long running time in Args. java to allow dynamic configuration of the running time for the application
updated logic in FindRefComparison. java and adjusted priority adjustment in RefComparisonWarningProperty. java, and added new Ideas _ 2012 _
updated import statements and method signatures in HttpServerProvider, ScriptEngineManager, and FtpClientProvider classes to improve code clarity and maintainability by
updated the return statement in XSDecimalBinding. java and refactored the test setup in GML3EncodingTest. java to improve accuracy
reformatted assertions in TestRestClientRequestImpl. java for improved readability to enhance code clarity and maintainability
added a conditional check for comparisonDatabase equality in MissingUniqueConstraintChangeGenerator. java to ensure that the comparison logic handles database comparisons correctly
refactor ` addAndroidConstants ` method and improve asset path handling in ` IjProjectTemplateDataPreparer. java ` to enhance code
odododododododododododododododododododododododododododod
added user _ args, is _ daemon, timestamp, and timestamp to the ImmutableMap in ChromeTraceBuildListener. java and ChromeTraceBuildListener
fix classloading issue on jdk 11
fix typo find by codespell on fossies. org
added new file TheRockMetaDataDemo. java to demonstrate exchange metadata retrieval to provide a demo of how to access and print exchange metadata
renamed ` FloatingDecimal ` and ` FormattedFloatingDecimal ` classes to ` strictfp ` and added a new ` ParseDouble ` class with
replaced ` unparseIdentifier ( columnName, conf ) ` with ` columnName ` in ` ColumnStatsSemanticAnalyzer. java ` to simplify the code
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and modified method signatures in ` BlockStatementTemplateGenerator `
added a check for non - synthetic fields in the InstantiateStaticClass and introduced a new test in Bug1282 to improve handling of
replaced ` projectFilesystem. getPathForRelativePath ( basePath ) ` with ` basePath ` in ` WorkspaceAndProjectGenerator. java ` to simplify the
refactor rescues handling in IkStepDefinition. java to improve rescues management to enhance reliability and maintainability of the code
changed the ` equals ` and ` hashCode ` methods in ` AbstractType `, ` BigintType `, ` DateType `, and
added a method to retrieve the default SyncLevel based on a specified level to improve error handling and provide a mechanism to retrieve the default SyncLevel
fix flaky controlcommandstest
added a condition to exclude recovery slices in the RecoveryStrategy logic to ensure proper handling of recovery scenarios
updated the parameters for the create method in opencv _ core. java to ensure compatibility with different image formats
added SDK path handling in AppleBundle and SwiftStdlibStep classes to ensure correct SDK path is used for process execution
[ hotfix ] [ runtime ] remove unnecessary locking in transientblobcachetask
cloudstack - 7142 : fix npe in case of static nat rule
refactor PasswordEncoder and StandardPasswordEncoder classes to improve password encoding efficiency and maintainability
added conversion of sort and union row types to relBuilder in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure
refactor BetterBlockPos. java to improve code structure to enhance maintainability and readability of the code
updated proxy retrieval in EmbeddedVelocityToolboxView to use the class loader to ensure correct proxy retrieval based on the class context
updated versioning logic to use a new method ` showNightlyWarning ` to improve clarity and maintainability of the application
added support for OracleDatabase in LoggingExecutor and JdbcExecutor to improve handling of trailing /'s in SQL statements
simonstewart : add a system property findbugs. nullderef. assumensp
simonstewart : allow the jolokia app to run in the same jvm
updated BLOB _ SIZE, PLAY _ MARGIN, SLIDER _ MARGIN, and ellipse2DDouble in DrawAudio. java
added a new method ` addMultifactorAuthenticationProviderBypass ( ) ` to ` DuoSecurityMultifactorProviderBypass
added a new parameter ` rotate ` to the ` findPositionForNewNodeBestAreaFit ` and ` findPositionForNewNodeContactPoint
[ drools - 6652 ] fix checkstyle violation in org. drools. jgss package
added methods to set and get the help page in PMS. java and refactored the updateContents method in HelpTab. java to
added GeocodeProviderFactory and Constants interface files to define GPS provider and preferences in the application
replaced imports from ` org. apache. lucene. analysis. util. CharArraySet ` to ` org. apache. lucene. analysis.
improve error message for resourcemanagermock. get ( )
updated GATEWAY _ SERVER _ ID to use Protocol. GATEWAY _ SERVER _ ID instead of a hardcoded string to improve code maintain
simplified conditional checks in SegmentsInfoRequestHandler. java and improved collection creation in CollectionsAPISolrJTest. java to enhance code readability and
updated the calculation of numPredictiveAppCols based on device type to ensure correct app columns are set based on phone type
added a new method ` hasScalarSubqueryInput ` in ` JoinUtils ` and updated references in ` DrillJoinRelBase ` and `
add a craft block that allow for the player to remove an item from the world.
refactor layout parameters in DeviceProfile. java to use FrameLayout. LayoutParams to improve layout handling for better UI responsiveness
updated method from ` run ( ) ` to ` start ( ) ` in ` YahooSession. java ` to ensure proper execution of the
added a new variable ` ms ` and modified exception handling in ` HiveMetaStoreClient. java ` to improve error handling and ensure proper cleanup of
updated the ` getDisplayScript ` method to accept a ` Category. DISPLAY ` parameter and added a new test for bug 7079486 to
updated references from BASE _ URL _ PROP and CORE _ NAME _ PROP to ZkStateReader. CORE _ NAME _ PROP to
replaced ThreadLocalRandom with Random in StoreDirectTest. java to simplify random number generation and improve code readability
added a check for launcher readiness before backup operations to ensure the launcher is ready before proceeding with backup operations
replaced ` IllegalArgumentException ` with ` IllegalArgumentException ` for better error handling to improve code readability and provide more informative error messages
( chore ) camel - resilience : added unit test base on user forum issue
renamed ` setBodySpace ` to ` barSpace ` across multiple classes to improve clarity and consistency in variable naming
refactor ShadowProcess class to improve code structure to enhance maintainability and readability of the code
use temporaryfolder instead of file in filemessagerehistorytest
added debug logging statements for various components in Grasscutter. java to enhance debugging capabilities and facilitate easier troubleshooting
changed the visibility of ` highlightCnstScrRngQuery ` and ` isHighlightCnstScrRngQuery ` from instance
added a method to retrieve the current state of the workspace to ensure proper handling of workspace state in the application
refactor multiple array assertion classes to improve code organization to enhance maintainability and readability of the codebase
updated conditions for notifying a new template in SnippetTemplate. java to ensure that the new template is only notifyed when cacheable is enabled
refactor SCOPE _ ENTITY and SCOPE _ DOC to SCOPE _ ENTITY and SCOPE _ SOLR _ CORE in multiple files to improve clarity and maintain
added primary key assertion for measurement and measurement _ pkey in DatabaseMetaDataTest. java to ensure proper retrieval of the primary key for the measurement table
rename authentication config file cli command ( # 865 )
refactored session creation logic in ` HttpSessionContextIntegrationFilter. java ` to improve clarity and maintainability of session management code
added a new file TestIfWithDeadRegion. java with a static method to test string retrieval with a dead region to facilitate testing
rename dependencyparser from englishud to englishUSD
replaced testConcurrentAccess ( ) with HighResolutionTimer. enable ( ) and set HighResolutionTimer to disable concurrent access tests and ensure thread safety
added a static UI setting and modified the toast bar visibility logic based on settings to enhance user experience by allowing dynamic visibility of toast notifications based on
refactor the return statement in WindowsSecurity. java to use a lambda expression instead of an anonymous class to improve readability and maintainability of the code
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and refactored ` WhitelistLogoutHandler ` to
updated dialog messages in MEncoderVideo, NavigationShareTab, PluginTab, and PluginTab to use resource strings instead of string literals to improve
tika - 3486 -- add ooxml and ooxml file to tika - ooxml and tika - o
updated the ` FixJava ` class to use ` FixJava. join ` and improved logging messages to enhance clarity and maintainability of the code
camel - 11744 : adjust the doc generation to align with the new xsd
( ) ) should have the same ( ( )
added debug logging for audio notification and playback devices and refactored audio capture device logic to improve traceability and maintainability of audio device configuration
added WebsocketConfig and maxFramePayloadSize properties to ShenyuConfig and updated WebSocketPluginConfiguration to configure maximum frame payload size to
added testlistener interface to cachevalidationlistener.
added a check for an empty string before adding the " contentLength " to the document to ensure that the " contentLength " is only added if it
[ jbrules - 3392 ] fix race condition in defaultsolverjob
refactor timeseries creation into a separate method ` internalCreateTimeseries ` to improve code readability and maintainability by encapsulating the creation logic
added a method ` check ( boolean result ) ` to the ` Authz ` class to provide a way to check for the result of the
changed method visibility from public to protected for several methods in ShadowActivityManager, ShadowSettings, ShadowStaticLayout, and ShadowTypeface classes to
cloudstack - 7131 : fix listvolumes api call to use reserve state
updated HttpParser to set _ valueString to an empty string instead of a null value to ensure proper handling of HTTP headers and improve test coverage
refactor ` J9VMInternals. java ` and ` Thread. java ` to improve thread initialization and output handling to enhance code clarity and
added a method to create and return an external storage directory in ShadowEnvironment. java and created corresponding unit tests in EnvironmentTest. java to enable
when a variable be define ( # 2 )
updated import statements and improved formatting in LoggingConfig. java to enhance code readability and maintainability
added exception message to log message in ActionNode. java to improve error reporting by including exception details
http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 4382 - allow to set
refactor visibility logic for sharedWithMeIconV in FileListListAdapter. java to improve code readability and maintainability
removed deprecated HiveConf. HIVEOPTSORTDYNAMICPARTITION configuration from HiveConf. java and updated TestTxnCommands3. java to
refactor ` ExecuteStatementOperation ` and ` Operation ` classes to improve the handling of session and configuration overlays to enhance code clarity and maintainability
refactor BTCMarketsStreamingAdapters and BTCMarketsStreamingService to use ` Arrays. asList ` instead of ` Lists. newArrayList
fix fail unit test . call gettypename because name include the namespace and it be different .
added a method ` onErrorInStep ` to ` StepListenerSupport ` that returns null to ensure that the method does not return an error status
refactor Wallet class to improve code readability to enhance maintainability and ease future updates
camel - netty - http should use http or https if available
use system. info instead of system. out
added a check to return false if the row exceeds the size of the connection list to ensure that the database connection does not exceed the defined list
[ java ] add method with the same name as the name of a method in a class.
added ExtendedPlatformComponent class and integrated it into ManagementFactory to enhance the management capabilities for platform - managed objects
replace single quotes with double quotes in SQL string to ensure compatibility with SQL standards
updated Bleutrade API response paths to include " org / knowm / xchange / bleutrade / dto / "
refactor TextEscapeUtils to improve code readability to enhance maintainability and facilitate future updates
added a filter parameter and updated FilteredQuery instantiation in AbstractSpatialFieldType. java to enhance query functionality by allowing customizable filtering behavior
added functionality to show progress based on the visibility of the main form in GpsLoggingService. java to enhance user experience by providing feedback during
replaced ArrayList with HashSet for storing inlinks to improve performance and maintainability of the code
added synchronization and updated the stopScan method in TradfriDiscoveryService to ensure thread safety during the stop scan process
updated method signatures and logic in HiveMetaStoreClient and TestFilterHooks to include a boolean parameter to improve filtering behavior based on server - side
added ` Abandoned ` to the list of status codes and updated related logic in ` TicketModel ` and ` TicketsPage `
removed redundant initialization of ` columnAliasPrefix ` in multiple platform classes to streamline code by eliminating unnecessary assignments
replaced ` Text ` with ` BytesWritable ` in ` LlapRowRecordReader ` and ` LlapRowInputFormat ` to use ` BytesWritable
add a detection mechanism for non - native jvm in the terasology engine
pdfcopy don't need to cast to a, a suggest by valerybokov
added daemon mode option to reset alarm and start daemon mode to enhance user experience by allowing users to start the daemon mode with a web pendant
added a new ` FlushIndexTask ` class to manage the index writing process to facilitate performance monitoring during indexing operations
patch by jbellis ; review by jbellis for cassandra - 1349
added a condition to check for SEASONS output in MediaLibraryFolder. java to ensure compatibility with the expected output set
added a new file ` LocalSocketAddress. java ` that implements a DatagramSocket using an IPv6 loopback address to validate the availability of IPv6
updated grid size points in GridSizeMigrationTask. java to ensure consistency in grid size calculations
updated method calls to use ` classForName ` instead of ` getName ( ) ` to improve code clarity and reduce method calls
added a read - only context option and refactored transaction commit and rollback logic to enhance transaction management and improve code clarity
refactor LookAndFeelCommand to improve code readability to enhance maintainability and facilitate future updates
updated the calculation of ` lastRunEnd ` in ` BlockBoxing. java ` to use ` ceiling ` instead of ` floor ` to
added EOFException and EofException imports to the exception assertion in GracefulStopTest. java to enhance error handling for better debugging
removed unnecessary locking mechanisms in NetJavaImpl. java to simplify code and improve performance by eliminating unnecessary locking
refactor NetworkParameters class to improve code readability to enhance maintainability and facilitate future updates
updated account asset optimization settings in DynamicPropertiesStore. java to ensure correct asset optimization is applied based on configuration settings
added a new constant J9 _ GC _ POLICY _ NOGC with a default value of 0 to enable garbage collection policy for improved
added error handling for invalid transactions in TransactionCapsule. java to improve robustness by throwing an exception for invalid transactions
[ java ] remove exceptiontypeChecking rule that be no longer use
use en / en / instead of en / for localization
added a new file ` ProcessorInfo. java ` with methods to retrieve available CPU processors and probes to provide a mechanism for determining if a
added support for a custom stylesheet in the printing bug reporter to allow users to specify a stylesheet in the output file
use a nullable property instead of an optional in logbackloggingsystem.
updated imports and refactored method signatures in HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent classes to improve code clarity and maintainability by using
remove conditional on property spring. sleuth. propagation. tag. whitelisted - keys
refactor RustDepType assignment to use a switch statement for better readability to improve code clarity and maintainability by reducing complexity in conditional checks
updated the ` oauth2LoginLinks ` method to accept a query parameter for error handling to enhance error reporting by including the query parameter
hbase - 25836 hfilereader. getfirstkey ( ) throw npe if hfilereader. seekto ( )
hhh - 11744 - deprecate generationtiming. always in favor of timing. always
testlayeropvalidation. testlayerNormNan ( ) fail for some edge case
refactor file sharing methods to use getFileOperationsHelper for better accessibility to improve code maintainability and streamline file sharing functionality
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to validate the functionality of the Liquibase update plugin to ensure correct
convert the value of the " proxyType " string to uppercase to ensure case - insensitive conversion for the property " proxyType "
add a new mod _ minecraftforge class that can be use in the forge build system.
added tablesOfColumnsFetched variable and refactored cache value retrieval logic in JdbcDatabaseSnapshot. java to improve handling of table data retrieval
added a custom CSS border and label to the Container in CSSBorderTest. java to enhance the styling options for better visual presentation
http : / / issues. apache. org / jira / browse / amq - 4237 - add retryablestatuscodeexception
changed superclass parameters from FILL _ PARENT and FILL _ PARENT to MATCH _ PARENT in CellLayout to improve layout behavior by using MATCH _ PARENT instead
updated the construction of ` parentTaskName ` to use ` System. currentTimeMillis ( ) ` instead of ` System. nanoTime ( ) `
added logging functionality and error handling in ServiceResourceProvider. java to improve error handling and maintainability of service request processing
refactor conditional logic in IndexDatabase. java for clarity to improve readability and maintainability of the code
apps - 2828 fix rounding for negative number with decimal specify
refactored AnonCipherWithWantClientAuth class to improve code readability and maintainability
added @ Deprecated annotations to ProducerTemplate. java to indicate that these classes are outdated and should no longer be used
refactor JLayer class to improve code structure to enhance maintainability and readability of the codebase
remove sleepatelay from evictiontest ( # 2452 )
refactor Md5PasswordEncoder to use a salted password instead of an internal one to improve code clarity and maintainability by using a more
refactored the way the global layout listener is added and removed in IconRecentsView. java to improve code readability and maintainability by
refactor Response class to improve code structure to enhance maintainability and readability of the code
use long. max _ value instead of long. min _ value. patch by jbellis
set preferred size to 60x instead of 120x in securitypanel
added null and empty checks for replies in TweetActivity, TimeLineCursorAdapter, and TweetView to enhance robustness by ensuring
added ` toString ( ) ` and ` equals ( ) ` methods to ` HitbtcBalance ` and updated ` HitbtcAdapters
refactor SqlCodeGenerator to improve handling of column names and order by metadata to enhance code readability and maintainability while ensuring correct order handling
updated return statement to return addrs. toString ( ) instead of s to improve clarity and maintainability of the code
replaced direct file opening with cookie opening in EditGcodeFile. java to streamline file handling and improve code clarity
updated HTTP client implementations from Apache HttpClient v4 to Apache HttpClient v5 to enhance compatibility with the latest HTTP versions
fix wooden pipe energy usage calculation
added a check to delete the temporary output file if it exists to ensure that the output file does not already exist before proceeding
updated BitstampWebSocketTransaction constructor parameters and added new test methods in BitstampStreamingMarketDataServiceTest to improve transaction handling and enhance test coverage for
replayprocessor. peekstate ( ) and replaysubject. getvalue ( ) should return null if value be expire.
updated the expectedCitation string format in CitationStyleGeneratorTest. java to ensure correct formatting of the expected Citation
added SQL _ INSERT _ COLUMNS and SQL _ GET _ INSERT _ COLUMNS constants in MediaTableFiles. java to improve code readability and
ggb - 2281 show definition only after exam start ( ggb - 2281 )
added null check for the component in SIPCommTextFieldUI to prevent potential NullPointerException when the component is not initialized
hbase - 15460 add a caching of the meta scan when there's no startrow
updated initialization script name from " q _ test _ init. sql " to " q _ test _ init _ for _ minimr. sql
refactor Math and StrictMath classes to improve code readability and maintainability
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags. java to enable the transient taskbar feature in the application
[ hotfix ] [ runtime ] fix javadoc in archivedexecution and accessexecutionvertex
added a condition to set density to 3 if scale is 3 to ensure proper rendering behavior when scale is not 3
rename the ` optional ` field to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in naming conventions
hbase - 25836 regionstatestore should log exception when get region state
[ hotfix ] [ test ] fix flakiness in testclusterupgradetask
updated log messages in AsyncHttpConnection and renamed AsyncContextTest class to LocalAsyncContextTest and added new SelectAsyncChannelTest class to improve
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` class to provide an option to control arrow visibility in the search UI
updated lock mode logic in Database. java and removed a test for lock mode in TestRowLocks. java to ensure proper handling of read -
skip bigEndiantest on linux only
refactor input handling in Scalars. java to improve type - checking and conversion logic to enhance code clarity and maintainability while ensuring proper string
and a - - - - - - - - - - - - - - - - - - - - - a a a a a
added conditional logic to set drawable resources based on LMP status to enhance UI responsiveness and maintain visual consistency across different screen layouts
fix an npe in vmservicedisolate ( # 4453 )
added new header configuration methods for content type, xss protection, cache control, and HTTP Strict Transport Security to enhance flexibility and maintainability of
refactor ObjectEnumerableAssert for improved readability to enhance maintainability and ease future updates
[ grid ] rename smoketest to smoketest to smoketest
added type attribute to @ aggregateroot ( type = ` ` type'' )
added support for prebuilt libraries in the Python build process to enhance the management of prebuilt libraries in the build process
updated client authentication handling in NetServerOptions and HttpServerOptions classes to improve code clarity and maintainability by standardizing client authentication settings
hive. repl. cmrootdir, hive. repl. cmrootdir, hive. repl. cmrootdir, and metastoreconf
refactor task view retrieval logic in RecentsView. java to improve clarity and maintainability of task view management
try to fix intermittent ci failure
Removed the clearAll ( ) method from DataTableTopComponent . java to simplify the component and improve maintainability
rename variable'controller'to'flowController'in multiple classes to improve clarity and consistency in variable naming
refactor operator tree generation and add a new test for consumption in the pipeline builder to improve code clarity and ensure correctness through unit testing
add ` us ` for service discovery ( # 273 )
fix race condition in solutionbusiness : guiscoredirector be use by a thread different than the event thread
added JsonIgnore annotation to ApplicationSettings. java to exclude sensitive information from JSON responses
changed the condition from checking if throwable is null to checking if throwable is not null to improve code clarity and prevent potential null pointer exceptions
replace direct access to queryInfo with a local variable to improve code readability and maintainability
fix the auto - workbench not work if there be a recipe that have no material
added a check for the presence of the first valid hdop in Gl200TextProtocolDecoder. java to ensure proper handling of valid hdop
renamed variables ` timeColumnName ` and ` timeFieldSpec ` to ` incomingTimeColumnName ` and ` incomingTimeFieldSpec ` to improve clarity
removed duplicate calls to ` HttpMethed. waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc
added support for dynamic container initialization in ContainerBuilder to enhance flexibility in managing container instances
add longtasktimer. sample to timerobserver ( # 3481 )
changed the data type of SYNC _ DELTA _ RATE from float to double and adjusted related calculations to improve precision in time handling and
thymeleaf - 1422, thymeleaf - core, thymeleaf - engine, thymeleaf - engine, thymeleaf - engine, thymeleaf
changed the type of the _ attributes from HashMap to ConcurrentHashMap to ensure thread safety when reading attributes
fix for http : / / issues. apache. org / jira / browse / amq - 3573 - fix for http : /
added new color constants and refactored the extractInto method in ColorExtractionAlgorithm. java to enhance color extraction functionality and improve fallback handling for
added accessibility check for data folders in SketchBuilder. java to ensure proper handling of non - accessible members in the sketch project
updated ` appendContent ` method to include a title parameter to enhance functionality by allowing titles to be included in notes
removed instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl to simplify session management by eliminating unnecessary instantiation
added logging for reconnection failures in NettyStreamingService to improve visibility into the connection process for better debugging and monitoring
replaced instances of ` Factory ` with ` Proxy ` across multiple test files to utilize the new ` JavassistProxyFactory ` for improved proxy
replace ConcurrentLinkedQueue with ConcurrentHashSet for thread storage to improve performance and maintainability of thread management
refactor exception handling to use ` String. join ` instead of ` String. toString ` for improved readability to enhance code clarity and maintainability by
added a method to check if the view path is under the repository directory to improve user experience by providing clearer error messages when the view path is
remove tab header area from jabref frame
added " - XX : + UseCompressedOops " and " - XX : + UseCompressedClassPointers " flags to multiple Java files
remove error log when update log be not active / replaying
deleted the ConnectionHook. java file to remove unused code to streamline the codebase
removed unnecessary waitForReplicasInSync variable and its associated logic from multiple test classes to streamline the code and improve maintainability by eliminating unnecessary
( chore ) camel - swagger - java : fix typo in parameterassert. hasarrayenumcomparison
updated version addition method in ApexLanguageModule and added hasNamespaceGuardedAccess method in TestAccessEvaluator to ensure compatibility with Jorje
refactor multiple Java files to improve code structure and readability to enhance maintainability and readability of the codebase
refactor AggregateEngine to use a singleton pattern for thread execution to improve thread management and scalability of aggregation operations
updated WebSocketAsyncConnection constructor to use ByteBufferPool instead of StandardByteBufferPool to improve performance by leveraging buffer pooling
added scrolling functionality for thumbnail views in UploadActivity to enhance user experience by improving navigation experience
fix ( sql ) : fix sample by timestamp override by other column alias
refactored animation handling in LauncherAnimUtils and added new animations in LauncherStateTransitionAnimation to improve animation performance and responsiveness during transitions
added a check to disable the default user agent in HttpClient to ensure proper handling of the default user agent configuration
added support for Pubhubbub in FeedRefreshUpdater to enable dynamic handling of feed subscriptions based on application settings
changed the access modifier of the finalize method from public to protected to allow subclassing of the finalize method for better error handling
updated method names and logic in StubJarClassEntry. java and modified test assertions in CalculateAbiFromClassesStepTest. java to improve
pdfbox - 4892 : add web application base on http : / / github. com / codenameone / codenameone / issues /
added a method ` getTableAliasContainingColumn ` to ` RowResolver ` and updated ` CalcitePlanner ` to utilize it to improve error handling
[ hotfix ] [ doc ] fix typo in triggerkey
( ) should be warn ( )
updated import statements and assertions in BasicMapTest. java to improve readability and maintainability of the test code
updated property names for rcfile writer configuration to improve clarity and consistency in configuration management
added an enum for ` TlsClientCertPolicy ` and refactored its usage in ` GitBlitServer ` to enhance flexibility and
simplified the event handling logic in KrakenFuturesStreamingService. java to improve code readability and reduce potential blocking issues
added headers and subProtocols handling in the ProxyWebSocketHandler class to enhance WebSocket routing capabilities by allowing custom headers and protocols
added a debug log statement for fetchReq in HiveQueryResults to improve visibility into query results for debugging purposes
simplified string formatting in HolidayEventFormatter to improve readability and maintainability of the code
refactor ` FinalizePrivateFieldsTest ` to replace ` InnerClass ` with ` InnerStaticClass ` to improve code clarity and maintainability by
updated the UnexpectedJobExecutionException class to improve error handling for unexpected job execution failures
deleted the ` ` jdk. internal. loader to java. desktop ` and removed the ` ` classExists ` method from ` Aqua
updated maxFreq and maxCost calculations in DrillSidewaysQuery. java and DrillSidewaysScorer. java to improve handling of
added a new class ` GeoDegeneratePath ` with a value of 36 to the ` GeoDegeneratePath ` to ensure proper handling of
removed the ` preFill ` parameter from several pool constructors to simplify the constructor signatures and improve usability
added state update for taskbar stash controller when not in the launcher to ensure proper taskbar state management when not in the launcher
added null check for default style in CascadeDeleteVisitor. java to improve robustness by handling potential null pointer exceptions
refactor MarqueeLabel and playLabel initialization in GuiUtil and StatusTab classes to improve code readability and maintainability while ensuring proper layout management
refactor icon retrieval logic in FileTreeViewHolder. java to use TreeFileExtension for better readability to improve code clarity and maintainability by utilizing
updated assertions from ` isEqualTo ` to ` contains ` in ` ParallelUniverseTest. java ` to enhance clarity and maintainability of the
fix concurrent modification exception in xmlreporter
add a test case for native probability function
added a call to ShutdownThread. deregister ( this ) in ClientContainer. java to ensure proper resource management and prevent potential memory leaks
hhh - 11744 - disable temporary table after use in sybasedialect
simonstewart : use htmlunit's htmlunitdriver instead of htmlunit's htmlunitdriver
refactor multiple Solr - related classes to improve code organization to enhance maintainability and readability of the codebase
refactored the LinksIndexingFilter class for improved efficiency to enhance performance and maintainability of the code
updated string format in VirtualAllocCommitUncommitRecommit. java to include reserved 1024KB for testing purposes
don't update ad playback state if there be no ad group
refactor equality check in MultimapSubject. java to use a boolean variable for clarity to improve readability and maintainability of the code
updated wave frequency label from deg _ text to unit hz to improve accuracy of wave configuration
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
replaced `. putAll (... ) ` with ` TreeMap < Integer, LabelSelector > (... ) ` in TestLabelOptions. java to
[ fix ] issue where lighter wouldn't use normal vertex format.
added tracing span tagging for message sending and received to improve traceability and traceability of message sent and received processes
updated time zone handling in ScheduledTrigger. java to use TimeZone. getTimeZone ( TimeZoneStr ) instead of ZoneId to improve clarity and consistency in time
added new ` AsyncBucket `, ` Bucket `, ` Bucket4j `, ` ConfigurationBuilder `, and ` InMemoryExtension ` classes
updated test class directory handling in resexhausted003. java to improve clarity and accuracy of test class path validation
reformatted code in AbstractConnector. java for improved readability to enhance maintainability and clarity of the code
modified OngoingStubbing. java file to improve code readability and maintainability
refactor web server initialization to handle optional web server reusing to improve flexibility and maintainability of web server management
renamed ` productConstructor ` to ` constructor ` and updated its usage in ` SolrTestCaseJ4 ` to improve clarity and consistency in constructor naming
added logging and error handling for thread allowlist being cleared to improve error handling and ensure proper management of thread allow lists
updated TransformerWriterItemProcessorTests to use setItemWriter instead of setOutputSource to improve code clarity and maintainability by using a more descriptive variable
dmn - 373 - add miss hit policy to dmn output ( # 3481 )
add a test for mix window and window combinefn with liding window
added a conditional check for ` allAppsDirty ` before binding all apps and improved app icon binding logging to enhance performance by reducing unnecessary logging and
camel - core - fix the test error of camel - file - watcher
removed unnecessary print statements in Solution. java to streamline code for better readability and maintainability
refactor AquaMenuBarUI to use GetBooleanAction for setting screen menu bar to enhance security and maintainability of the code
updated setRawLocation method to include a fall parameter to enhance location management by controlling fall behavior
refactor query creation in SimpleJpaRepository to use a more structured approach to improve code clarity and maintainability by encapsulating query logic
added timestamp, parent hash, nonce, and number in BlockUtil. java to enhance block configuration for improved transaction handling
remove the need for loop safepoint insertion phase.
hbase - 25827 addendum fix npe in rsgroupinfomanagerimpl. getrpcs ( )
changed access modifiers from package - private to public for several methods in ArtifactResolver. java to allow broader access to these methods in other packages
added thread. stop ( ) in ClientConnectionHandler and dispose methods in BulletPhysics and ChunkProcessingPipeline to ensure proper resource management and
added a validation check for maxBufferedDocs to ensure it must at least be 1 to prevent IllegalArgumentException from being thrown when maxBufferedDocs is
added functionality to manage the login state in LoginActivity to improve user experience by ensuring the login state is properly managed during configuration changes
added null checks and improved error handling in Pump. java to enhance robustness and prevent NullPointerExceptions during processing
changed access modifiers from private to protected for several fields and methods in HttpShardHandlerFactory, LBHttpSolrServer, and ServerWrapper classes
updated the order value in BaseAuthenticationServiceSelectionStrategy from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added
added Server and HandlerList imports in TestJNDI. java to enhance Jetty server handling capabilities
added assertions and improved formatting in SortedDynPartitionOptimizer. java to enhance code readability and maintainability
changed return value from NioEventLoop to true in FileStreamChannel. java to ensure the loop is always true for asynchronous operations
updated the logic for setting the number of nulls in StatsUtils. java to ensure that the number of rows does not exceed the new number of
camel - jbang - export : camel - kamelet - don't load yaml from classpath if camel - kamelet =
updated OSMJob. java to improve authorization handling and error logging to enhance authorization management and provide clearer feedback during the upload process
remove system. out. println ( ) from test
added client authentication configuration to the IoTDBRestService to allow configuration of client authentication settings in the rest service
replaced ` mocksToBeInjected ` with ` mockCandidates ` in ` PropertyAndSetterInjection. java ` and added ` ChildWithSameParent
updated BloomFilter64bit and BloomUriUniqFilter to use Spring's InitializingBean and introduced new methods for expected and hash counts
( ) ) should be open by default
updated the preferred header height ratio from 1 f to 75 f to improve the responsiveness of the application
added a new ` RecompilationEvent ` class and updated related classes to utilize it to improve event logging for recompilation errors
added new configuration keys for " host _ sys _ prepped " and updated related classes to utilize this new feature to enhance configuration management for managing
added an ` logEveryUnknownFileFormat ` parameter to the ` include ` method in ` DatabaseChangeLog. java ` and created a corresponding
added a loop to delete the last character from the location string in DefaultServlet. java to ensure that the last character of the location is removed
added support for entities and scores in the StaticPipeline class to enhance functionality by allowing users to specify entities and scores as needed
updated file naming and source handling in Frame. java and added configuration for WhoopsModule in Utils. java and WhoopsModule.
[ geos - 6861 ] fix for invalid datastores in workspace
updated assertions in Assert. java to improve code clarity and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added new test methods ` pressingDownMovesCaretToNext
try to fix the intermittent failure of camel - core
refactor TsFileWriteAlignedWithTSRecord and TsFileWriteAlignedWithTablet to use List < MeasurementSchema > instead of
updated loop structure and added memory usage calculations in TestPromotionFromSurvivorToTenuredAfterMinorGC. java to improve code
updated log4j configuration file from SLF4J - log4j12 to SLF4J - reload to ensure compatibility with the
[ hue ] fix checkstyle violation in huebridgehandlerosgitest
updated package structure for several activities from ` com. itsaky. androidide ` to ` com. itsaky. androidide.
[ jbrules - 1276 ] ignore fail test for drools - 1276
added a constructor to PullRequestMergedEventsStream that reads an Avro schema from a file to enhance the functionality of the PullRequestMergedEventsStream
refactor AbstractExpressionPart class for improved clarity to enhance maintainability and readability of the code
[ hotfix ] [ runtime ] fix typo in taskslot
replaced instances of ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in NettyWebSocket. java and NettyWebSocketTest. java
added exception handling for unlocking locks in MoveTask. java to improve error logging and prevent potential deadlocks during lock acquisition
refactor JRubyBackend to use ResourceBundle for property retrieval to improve flexibility and maintainability of the code
use byteutil. empty _ byte _ array instead of zero _ address.
[ hotfix ] fix checkstyle violation in classgraphclassloader
[ hotfix ] [ test ] fix jobmanagerstartupgradertest failure
chore : update to v1beta1 : add new proto option v1alpha1 and v2proto3
added a Bundle to store and set extras in FileDisplayActivity to enhance the functionality by allowing customizable intents
replaced ` break ` with ` continue ` in ` ParticleEmitter. java ` to ensure the loop continues to continue when the particle is null
updated cluster name expectations in AmbariManagementControllerImplTest. java to reflect the correct number of cluster requests
removed the nullable attribute from the " SERVICE " column in TransientSessionTicketImpl. java and added a catch for NoResultException in Jpa
updated Bug4823811. java file to improve code quality and address existing issues
replace direct addition of patternToDelete with pathRelativizer using the project filesystem to improve path handling by utilizing the project filesystem's
updated requestFullState method to accept a boolean parameter to enable immediate request full state based on the initial request status
refactor ShibbolethCompatiblePersistentIdGenerator to use String attributes instead of byte arrays to improve flexibility and maintainability of the code
updated the @ Inject annotation in RequestValidationService. java to improve code clarity and maintain consistency in annotation usage
refactor keyboard message handling to use a Bundle for hiding the keyboard to improve code clarity and maintainability by encapsulating logging logic
replaced ` isEmpty ( ) ` with ` isEmpty ( ) ` in ` FileNodeProcessor. java ` and added new imports in ` MManager
refactor NavigableMap and NavigableSet classes to improve code readability and maintainability
add a test case for the slurpfile ( ) method
updated method visibility from protected to private and added functional interfaces to enhance encapsulation and improve code clarity
refactor span naming logic into a separate method ` spanWithName ` to improve code readability and maintainability by reducing duplication
added support for DateWritable in the ETypeConverter and related classes to enhance date handling capabilities in data processing
updated the regex pattern from " \ s *, \ s *, \ s * " to " \s. COMMA _ SEPARATOR " to
ggb - 2481 add a positive - double converter to input dialog
refactor column count validation logic in SemanticAnalyzer. java to improve clarity and maintainability of the code
refactor scoring logic in WANDScorer. java to improve clarity and structure to enhance code readability and maintainability while ensuring proper handling of
refactor Correspondence class for improved readability to enhance maintainability and ease future updates
updated import statements in PaintSetEnabledDeadlock. java to include specific AWT classes to improve code clarity and maintainability by utilizing specific AWT
modified the initialization of ` curPixVal ` in ` XRSolidSrcPict. java ` and added a new test class ` White
refactor biomedictionary to use collection instead of list
corrected a typo in the variable name from " withinTolerance " to " exceedsTolerance " to improve code readability and accurately reflect the
added stability rules for LOCAL and PLATFORM _ POSTSUBMIT in TaplTestsLauncher3. java to enhance test stability management for
updated package - info. java files for mmm and ppp to improve documentation clarity and maintainability
added a check for empty logFileSuffix in SnippetUtils. java to ensure that logFileSuffix is not empty before proceeding
refactor PythonBuckConfig class to improve code structure to enhance maintainability and readability of the codebase
added unit tests for ` addSystemSharedLibraryName ` and ` clearSystemSharedLibraryName ` methods in ` ShadowPackageManagerTest ` to
improve meiligao protocol decoder ( # 4487 )
added null check for tile in PowerDiode. java to prevent potential NullPointerException when tile is null
added a TrimCache class to handle cache deletion to improve cache management and provide user feedback during the deletion process
update import statements to use the correct package for test classes to ensure compatibility with the latest Google library structure
replaced the return statements of ` return false ` with ` NotAuthorizedException ` in multiple authentication classes to improve error handling by throwing a specific exception
[ hotfix ] remove unused't2'parameter from scheduler. scheduleperiodically ( )
replace ` refreshListOfFilesFragment ( false ) ` with ` getListOfFilesFragment ( ). onItemClicked ( file path ) ` to improve
added logging functionality and improved stream handling in StreamUtil. java to enhance debugging capabilities and ensure proper resource management during stream processing
refactor SessionHiveMetaStoreClient to use CreateTableRequest for table creation instead of EnvironmentContext to simplify the table creation process and improve code clarity
added a volatile boolean ` aborted ` and modified the ` start ( ) ` and ` abort ( ) ` methods in ` FixedRateFragIns
updated indentation checks across multiple parser classes to ensure correct parsing behavior to prevent parsing errors and improve code readability
add multichat operation set definition and gibberish protocol implementation. related to http : / / www. google. com / p
removed redundant check for control frame status to streamline the code for better readability and maintainability
added visibility setting for collapse handle in WidgetsBottomSheet to improve UI responsiveness by ensuring collapse handle is visible
added two new file, Issue475. java and XSS. java, with test cases and unit tests for HTML and JavaScript escape functionality to
added a condition to return early if an error occurs during scrolling to improve performance by avoiding unnecessary scrolling operations
changed the condition from checking if the contract list size is greater than 1 to checking if it is not equal to 1 to ensure that the contract
added new methods ` add ( Enum value ) ` and ` put ( String key, Enum value ) ` to ` JsonArray ` and ` JsonObject
added hashCode ( ) method to IPPPrintService and created TestRaceCond class to ensure consistent hash code generation for print services
should should not be an a a ( # 4 )
added a condition to check if the transaction is a platform fee before enabling the payment context to ensure that the transaction only proceeds when it is
refactor BatchUpdateException, PreparedStatement, and Statement classes to improve code readability and maintainability
use buffer. increasecleardatafirstsubsamplingby ( ) in mediacodec.
removed the'public'access modifier from multiple antn classes to enhance encapsulation by restricting access to these classes
added Retrofit import to Part and PartMap classes to enable Retrofit integration for improved data handling
refactor parameter handling in JsonBuildHelper and ParamsBuildHelper to improve clarity and structure to enhance code readability and maintainability while ensuring proper handling
added ` TYPE _ TASKBAR _ OVERLAY _ PROXY ` to the list of type constants in AbstractFloatingView. java to enhance functionality by
fix : update gapic - generator - java with mock service generation fix ( # 3282 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents field in RemoteAnimationTargetSet to improve animation responsiveness based on recents
removed the second parameter from the createRenderScript method call to simplify the method call by eliminating unnecessary parameters
fix typo find by codespell on fossies. org
refactor PluginListCellRenderer and PluginManagerActivator to use a new method for system bundle checks to improve code readability and maintainability by centralizing the
updated import statements and formatting in IntegrationTestSparkBulkLoad. java to improve code readability and maintainability
updated bloom filter settings to use a constant for LOW _ FALSE _ POSITIVE _ RATE to improve code readability and maintainability by using a
refactor rocket configuration handling to improve selection logic to enhance user experience by ensuring the correct default configuration is selected
cloudstack - 7143 : fix npe in hostmanagerimpl. findmacaddress ( ) when hostid be null
added null check for data in DefaultRecordStore. java to avoid potential NullPointerException when handling null values
kvm : throw a discovered exception if fail to add host to the cloudstack agent
ww - 4441 improve error message for miss name and value attribute
updated constructors in BaseStubbing, ConsecutiveStubbing, and OngoingStubbingImpl to accept an Object instead of InvocationContainerImpl to
refactor methodline to strip method parameters from the method line to improve method parameter handling by removing unnecessary parameters
updated version name and code for the GreatVoyage application to reflect the latest release and improve version tracking
pdfbox - 4892 : use set instead of arraylist to improve performance
use labelcacheitem. label _ cache _ item instead of labelcacheitem.
ggb - 248 fix for overlap feature in popup panel
[ hotfix ] [ core ] fix typo in validationsuite
replaced an anonymous inner class for handling task launching with a dedicated ` StartingWindowListener ` class to improve code organization and maintainability by encapsulating
added a doc comment inherited from MBeanServerConnection to enhance documentation clarity for the MBeanServer connection handling
updated exception messages from " SecurityException " to " PackageAccess SecurityException " and added package definition check in CheckPackageAccess. java to improve
increased the timeout duration in the test from 30 seconds to 90 seconds to allow more time for the test to terminate
replaced boolean loggingEnabled with Boolean loggingEnabled in XRLog. java and added unit tests in XRLogTest. java to ensure logging
added @ JsonIgnore ( true ) annotations to Schema. java to exclude certain fields from JSON serialization
increased test timeout from 5000 ms to 10000 ms to accommodate longer test execution times
simonbayesclassifier. train ( ) now use loglikelihood instead of simplelikelihood.
renamed ` CheckHelperModule ` to ` CheckHelperControllerModule ` and introduced ` CheckHelperAuditModule ` to improve clarity and functionality in managing
refactor Prototype class to improve code organization to enhance maintainability and readability of the codebase
added a check for null tableIsTransactional in SemanticAnalyzer. java to ensure proper handling of non - transactional tables
[ java ] remove unused recordingwriter. writefragment ( ) method.
use offset _ sample _ relative instead of 0 to avoid overflow
added ` alias ` to the ` dataPoints ` list in ` KairosDatastoreTest. java ` and implemented ` getAlias ( )
( ) ) should be ( ( ) ) ( )
updated import statements and refactored entity manager invocation logic in NoCdiAvailableTest, CollectionAsBasicTest, and DeepCollectionElementTest
updated KafkaSender import statements from Kafka11 to KafkaSender to align with the new package structure for KafkaSender
added new files ` GwtBinaryIntegrationTest. java ` and ` A. java ` with a test class ` GwtBinaryIntegrationTest. java
added a null check for the query builder dialog in BrowserContentPane. java and refactored ResultSetRenderer initialization in SQLConsole. java to
reformatted code in EnhancedRandomImpl. java and EnhancedRandomImplTest. java to improve readability and maintainability of the code
added XMLSecurityPropertyManager handling in DTDConfiguration, NonValidatingConfiguration, and SAXParser classes to improve security management and ensure proper initialization of
added two new interfaces, InterfaceWithDefaultMethod0, InterfaceWithDefaultMethod1, and InlineDefaultMethod1, along with a test for default methods
updated SQL query strings from " LIKE " and " LIKE " to " GLOB " and " * " to align SQL query with the new
[ dmn ] change visibility of dmnassemblerservice method from private to protect
fixed - rscript. script _ load don't work properly if slave node don't exist
updated print statements in EspressoLanguage. java to remove unnecessary concatenation to streamline output formatting for better readability and maintainability
updated debug log messages to use the actual count of targets instead of the number of targets to improve clarity and consistency in logging output
fix memory leak in fml outbound handler.
added HTTP _ JETTY _ SERVER _ HANDLERS constant and updated thread pool initialization to use this constant instead of a hardcoded value to
refactor shortcuts to use removedShortcutInfos instead of idsToShortcuts to improve efficiency by eliminating redundant lookups for shortcuts
remove unnecessary type check in defaulthttpclientbinderregistry
removed the case statement for home in DetailFragment. java to streamline code by eliminating unnecessary navigation
added a condition to include Android market in the play services check to ensure that services are only included when the Android market is present
refactor TableBlockParser to improve whitespace handling and add a new test for pipes to enhance code readability and ensure proper rendering of table structures
added a bridging header feature to the NewNativeTargetProjectMutator and related classes to enable dynamic adjustment of the bridging header
refactor PotentiallyDeadCode. java to improve handling of unused Java files to enhance code clarity and maintainability by consolidating method lists
added diamond - related options and new classes for handling diamond - related arguments to enhance type inference and provide clearer warning messages for diamond
replaced calls to ` invocation. getInvocationStageTrace ( ). startSend ( ) ` with ` invocation. onStartSendRequest ( )
removed unnecessary logging statement in SolrCacheHolder. java to streamline code and improve performance by eliminating unnecessary logging
added catch block for AuthenticationException in LdapCtxFactory. java to improve error handling for authentication issues
updated bitwise comparison in Test6796786. java to use subtraction instead of static floating - point comparison to improve accuracy of floating - point
added localFile ( " logback. dev. xml " ) to JoobyMojo. java and updated Main. java to include new configuration
added a new file JaasEventCheck. java that implements the ApplicationListener interface to handle authentication failure and success events in the Ja
refactor animation logic in QuickstepTransitionManager to use a list of views to improve performance and maintainability of the code
updated the comparison of string distance in ConjunctionSolrSpellChecker. java and added a new test class ConjunctionSolrSpellCheckerTest. java
replaced HashMap with Map in ShadowSystemServiceRegistry. java to improve performance and maintainability of the code
[ hotfix ] remove unused constant in defaultleaderelectionservice
removed the public modifier from the setAuthentication method in AuthenticationException. java to allow access to the setAuthentication method from other classes
kvm : add ability to specify script timeout ( # 5491 )
http : / / issues. apache. org / jira / browse / amq - 4237 - allow jdbc _ table to be create with
corrected the spelling of " sqlUpdateAUP " to " sqlUpdate " across multiple files to ensure consistency and accuracy in SQL query formatting
replaced synchronized block with computeIfAbsent for schemaTypeCache to improve performance by reducing synchronization overhead
refactor header addition logic in StaticServerHttpHeadersWriter to improve clarity and maintainability of the header handling logic
added JUnit @ Ignore annotation to LatticeDemo. java to mark the test as ignored due to file availability restrictions
added a method to create a storage directory in TestCollector. java to ensure that the storage directory is created for testing purposes
set chunked streaming mode to 1024 in StarTreeJobUtils. java to improve performance by reducing data transfers
add test case for basic and multiple type syntax
hbase - 24590 addendum fix import of org. apache. hbase. thirdparty
added unit test for BeanPopulator with recursive structure and created a new Node class with associated getters and setters to ensure that the populator correctly
added IOException to the getRemoteName method signature in AccountingTransceiver. java to improve error handling by throwing an IOException
added an exception for IllegalArgumentException in UserAccountManagerImpl. java and refactored HttpClient creation in ClientFactory. java to improve error handling and
updated WebSocketConnection and ExplicitDemandTest classes to improve connection handling and enhance test reliability
added support for AspectJ in GlobalMethodSecurityBeanDefinitionParser to enhance security configuration by allowing customizable aspectJ modes
updated imports and added hostname verification configuration in mmm Connection. java to enhance security by allowing configurable hostname verification settings
removed the final modifier from the OHLCItem variable and added a remove method to improve code readability and facilitate the removal of specific
updated invocation method from ` invoke ( ) ` to ` invokeUrgent ( ) ` and modified assertions in ` CompactFormatIntegrationTest
removed redundant variable and streamlined the removal of joints in the World class to streamline the code and improve readability
fixed an npe in the searchfilter when the search string be null.
''' and'''in source test
removed redundant null checks for documents in DocumentsStorageProvider. java to streamline error handling and improve code clarity
added new interfaces ` HookDefinition ` and ` JavaHookDefinition `, along with a corresponding test class ` JavaHookTest ` to establish a
refactored flushIfDeadlockRisk method and removed duplicate logging statements in QueryExecutorImpl. java to streamline code and improve readability
updated setExoOptions method to include a allowTs parameter to enhance flexibility in setting exo options based on user - defined settings
added functionality to remove a user identifier from the identifier collection to ensure proper handling of user roles in the application
added an INVISIBLE constant and modified the toString method in Color. java, RailButtonShapes. java, and RailButtonShapes. java
updated null handling logic in CountAggregationFunction. java and added a new test for null handling in NullHandlingIntegrationTest. java to enhance query
added a deep property to the InternalTransaction class to set its value to - 1 to ensure that the deep property is set to - 1 for
replaced direct name appending with XML escaping to enhance security by preventing XSS vulnerabilities
updated workDir initialization to use configuration instead of a hardcoded value to improve flexibility and maintainability of the work directory configuration
added deprecation check in RuleSetFactory and corresponding test in RuleSetFactoryTest to ensure that deprecated rules are correctly marked as deprecated
use jmp instruction instead of dummy in amd64directcallop.
updated TimeRange class to use static final constants for min and max time, and added new test cases for TimeRange construction to enhance code readability
refactor BitDocIdSet class to improve code structure to enhance maintainability and readability of the codebase
refactor connection handling in AbstractTimelineMetricsSink to use a dedicated method for better code organization to improve code readability and maintainability by encapsulating logic
removed redundant checks for MIME _ TYPE _ FILES and MIME _ TYPE _ VIDEO in DetailFragment. java and updated attachment handling in GalleryActivity
added world. isremote ( ) check to tank. fill ( )
added handling for RuleAnalysisLegacyBuildRuleView in CsharpLibrary. java to improve compatibility with legacy build rules
added handling of iq packet without a valid password. jm - 393
added null check for runtime intrinsicGraph to ensure intrinsicGraph is not null before proceeding
updated conditional statements in MetricTrackingWindmillServerStub and StreamingDataflowWorker to check if the active list is not empty to improve
pdfbox - 4892 : use long, int, and int instead of long, a suggest by valerybokov
added constructors for LwjglApplet and LwjglNativesLoader to enable better handling of application events in the application
updated string representation of Docker host in EnvironmentAndSystemPropertyClientProviderStrategy. java to improve clarity and maintainability of the code
refactor the ` doPostAuthentication ` method to improve handling of password policies to enhance code clarity and maintainability by consolidating password policy logic
refactor Int2ObjectCache implementation to improve performance and maintainability of the code
added a new private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated its usage in ` LdapUtils ` to improve
refactor Readable class to improve code readability to enhance maintainability and ease future updates
use testsupport. with _ font instead of system. out. println ( )
updated menu item icon to use the share icon resource to enhance user experience by providing a clearer and more relevant share icon
updated JRE _ IS _ MINOR _ VERSION to use integer parsing and introduced JVM _ MINOR _ VERSION constant to improve compatibility checks based on
added exception handling for AbstractMethodError and NoSuchMethodError in PoolUtilities. java to improve error handling for non - JDBC driver compatibility
refactor GenericContainer to improve code structure to enhance maintainability and readability of the code
replaced ` HashSet ` with ` ArrayList ` and changed the type of ` filteredSet ` from ` Set ` to ` List ` to improve performance
added multiple @ Override annotations in various classes to ensure proper method overriding and improve code clarity
removed unnecessary whitespace in ChartProvider. java to improve code readability and maintainability
use file extension ( # 603 )
removed an unnecessary block from the return statement in JavacParser. java and added a new file ExtraSemiTest. java with a test class
added support for ` BEFORE ` and ` AFTER ` keywords in the ` User ` repository to enhance functionality by allowing users to find users based on
updated Test15FloatJNIArgs. java file to improve code clarity and maintainability
updated PlotSquared version and wiki URLs in plugin. java to ensure compatibility with the latest version and improve user experience
fixed bug in mockprocesscontext. decrypt ( ).
[ java ] prevent reentrant reentrant call from aeron archive.
added a null check for the inp _ dep before merging it to avoid potential NullPointerExceptions during dependency merging
added timeout parameter to the @ Test annotation in SslBytesServerTest. java to allow more time for tests to complete
refactor Peer class implementation to improve performance and maintainability of the code
updated method names and implementations in RealtimeIndexingCoordinator, StreamProviderConfig, and StreamProviderConfig classes to improve clarity and consistency in naming
added a null check for exportedData before writing it to the output stream to avoid potential NullPointerExceptions when exportedData is null
refactor RecyclerViewFastScroller to utilize a new method for retrieving scroll thumb radius to improve code clarity and maintainability by centralizing scrollbar control logic
updated error message in BuckWSServerPortUtils and refactored tool window handling in BuckEventsConsumer and BuckToolWindowFactory
added a conditional check for Windows platform before setting the preventSleep checkbox to ensure proper functionality on non - Windows platforms
updated imports from javax. servlet to jakarta. servlet in HttpConfigurationAuthorityOverrideTest. java to utilize the Jakarta
added startCrop and endCrop variables to manage window dimensions based on device profile orientation to improve layout handling for different device orientations
added methods to manage full - screen exclusive mode in XWindow and XWindowPeer classes to improve user experience by providing better access to fullscreen mode
add test case for played duration string ( # 3451 )
added methods to add credentials for DAGs in DagUtils. java to enhance the functionality of DAG processing in the application
( chore ) camel - core - optimize to use entryset instead of keyset
trim whitespace from thread names when setting the thread name to ensure that the thread name does not exceed the length of the input string
, and a - - - - - - - - - - - - - - - - and - - - - - - - -
refactor Job class to improve code readability to enhance maintainability and ease future updates
added a new abstract class ` Unused ` with getter and setter methods for integer, boolean, and double fields to provide a mechanism for handling
updated HBase _ MASTER key mapping to use " hbase _ master _ hosts " instead of " hbase _ MASTER _ host " to ensure consistency in
deleted two files, EventReaderDeserializer. java and EventWriterSerializer. java, to streamline the codebase by removing unused or redundant interfaces
modified the ` performJoin ` method to return a list of ` GenericRecord ` objects instead of a single ` GenericRecord ` object to improve
updated MAX _ DELEGATE _ LOCK _ PERIOD checks and modified related logic in ProposalUtil, DynamicPropertiesStore, and WalletTest
fix nicto and nicprofile when network rate be 0.
removed the initServices ( ) method from CmcExchange class to streamline the exchange configuration by eliminating unnecessary components
updated GossipLocalNode to check for the " seed. node. ip. list " configuration before processing the IP address to enhance the
add system property hazelcast. client. tpc. enabled to be true by default
updated swagger - ui version from 2.1. 10 - 1 to 3.1. 18. 2 in multiple Java files to reflect the latest features and improvements
refactored the logic for handling the division of MutableBigInteger and added a new class ModInvTime for computing modular inverses to improve
refactor key assignment logic in NamedObjectList. java to improve clarity and maintainability of the code
updated cleanupEmptyDir method to cleanupEmptyTableDir for improved clarity to enhance code readability and maintainability by using a more descriptive variable name
refactor AsyncCache and Cache classes to improve code readability and maintainability
added import for RCFileInputFormat and registered it with Kryo to enable serialization of RCFileInputFormat in the Hive framework
added default methods for type and category of columns in TypeMapperComponent to enhance type mapping functionality for better data handling
added error handling for invalid host headers in Request. java and introduced a new test for invalid host headers in RequestTest. java to improve robust
refactor TimeZoneFinderTest to use ReflectionHelpers and improve test configuration to enhance code clarity and maintainability while ensuring compatibility with SDK level P
updated the ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in ` StandardOp. java ` to improve the handling of outgoing values
updated SegmentCoreReaders and SegmentReader to use ` si. name ` instead of ` segment ` and ` dir0 ` to improve clarity
added methods to check if a main thread profile exists and updated transaction handling in AggregateDao and AggregateRepository to improve performance and ensure proper transaction management
added validation for annotation definitions with required for source abi to enforcement and prevent compilation issues
updated names in GreekLowerCaseFilterFactory, IrishLowerCaseFilterFactory, UAX29URLEmailTokenizerFactory, and Turkish
updated HSSFSheet and Sheet classes to improve code readability and maintainability
change to discoverysearchrequestprocessor since dspace 4.0. 0
added time zone entries for America / Dawson, America / WhiteHorse, and Canada / Yukon in BasicDateTime.
updated SurfaceSyncGroup initialization to specify the name of the TaskBarController to improve clarity and maintainability of the synchronization group
updated method calls to use ` getId ( ) ` instead of ` getObjectId ( ) ` and ` getObjectId ( ) ` to improve code clarity
renamed the test method from ` query _ shouldReturnColumnIndexes ` to ` query _ shouldReturnColumnIndices ` and added new methods to retrieve
refactor enter handling logic in TextField. java to improve readability and maintainability of the code
fix npe in group node view ( # 7141 )
refactor ` afterSetStatements ` method in ` Block ` and ` BlockLexicalContext ` classes to improve code readability and maintainability by reducing
added hashCode ( ) and equals ( ) methods to IntervalXYDelegate and XYSeriesCollection classes, and updated tests for interval width and position factor
increase timeout for clientqueuenewaitimeout test ( # 2451 )
reformatted code in CloudWatchAppender. java for improved readability to enhance maintainability and readability of the code
replaced ` serializeSpecialDoubleValues ( ) ` with ` serializeSpecialFloatingPointValues ( ) ` in Gson. java to improve clarity and consistency
added multiple calls to ` HttpMethed. waitToProduceOneBlock ` and ` PublicMethed. waitProduceNext
added checks for non - empty language tags before canonicalizing languages to ensure that only valid language tags are processed
kvm : don't allow ssh to agent anymore ( # 6371 )
removed the'public'modifier from the ScheduledAction class and its related methods to enhance accessibility and encapsulation of the ScheduledAction class
updated import statement for PagerSlidingTabStrip in EmojiKeyboard. java to ensure correct usage of PagerSlidingTabStrip in
added a check for non - hyphen characters in the filter string to ensure that only valid characters are processed in the filter
updated sort column label text from " natural order " to " Natural column order " and introduced dmStats method in DataBrowser to improve clarity
removed the array copy method from the Utils class to simplify the code and improve performance by eliminating unnecessary array copying
replace ` ` write ( remoteAddr )'' with ` ` write ( htmlEncodeButNotSpace ( remoteAddr ) )'' to
update item state trigger handler to use smarthome / items / instead of /
removed unnecessary synchronization block in FastHttpDateFormat. java to improve performance by reducing unnecessary synchronization overhead
added a thread pool for moving files and improved error handling for file movement to enhance performance and reliability of file movement operations
added new overloaded ` trigger ` methods to ` WrapTimer ` for handling timer execution with a specified period to enhance the functionality of the ` Wrap
added support for ` LOCAL _ DATE `, ` SQL _ TIME `, and ` LOCAL _ TIMESTAMP ` in ` TypeStringUtils ` to
added a verbose option to the error logging process in AbstractStatusReporter to provide more detailed error information based on user options
added menu toggle functionality in ClickStartHandler and ItemControls to enhance user experience by allowing menu management based on application state
fix for s2s vpn connection that can only be esitablished between the same account and the domain
refactor error handling in CursorReadingTask and add unit tests for handling exceptions to improve error management and ensure correct handling of exceptions during task execution
pdfbox - 2576 : don't try to create a thumbnail if it be an encrypted pdf
[ 3.0 ] fix the problem that the service be not close when a service be close. ( # 8453 )
updated AnomalyDetectionResource. java and AnomalyDetectionResourceTest. java files to improve code structure and enhance testing coverage
updated the method for deleting an item in HostsList. java to improve code clarity and maintainability by using a more descriptive variable name
updated Java6Assertions and Conditions classes to improve code consistency and maintainability
updated the ` replaceOrderBulk ` method to accept a list of ` orderCommands ` instead of a collection of ` ReplaceOrderCommand ` to
refactor ` enterDefault ` method to ` enterIdentNode ` in ` FindScopeDepths. java ` and implement ` enterFunctionNode `
added a new ` J9ConstantHelper ` class and refactored ` ObjectHash ` to use it for retrieving long values to improve code
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to validate the behavior of ` ConcurrentModificationExceptionOnMultiThreadedVerification
added functionality to remove a roster resource from the session if it doesn't exist
updated method names from ` getProperties ( ) ` to ` getOverlayedProperties ( ) ` in ` MapOperator. java ` and added a
updated method call formatting in FunctionObjectCreator. java to improve code readability and maintain consistency
added a check for ` src. extTypeCustomDesers ` before initializing ` extTypeCustomDesers ` to ensure that ` extType
remove system. setproperty ( ` ` mockserver. loglevel'', ` ` warn'' )
removed the @ Test annotation from AbstractRegistryFactoryTest. java to streamline test execution by eliminating unnecessary tests
removed unused imports and refactored JettySolrRunner creation method to streamline code and improve maintainability by eliminating redundancy
updated scoreMap and termScoreMap to use String, Map < Float, Float > instead of Map < Float, Float > to improve data
updated bitwise operations in U64. java to use ` < 0 ` instead of ` & 0x8000000000000000L ` to improve clarity
remove old headline style, it's not use anymore.
updated the notifyChange method to include an additional condition for dark text support to ensure proper handling of dark text notifications based on theme support
[ hotfix ] [ runtime ] remove redundant method in checkpointrequestdecider
increased maximum pool size from 1000ms to 15ms in Parallel. java to optimize resource usage and reduce resource usage
replaced ` filter ` with ` anyMatch ` for matching providers in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver. java ` to improve
added test requirements for Windows and macOS in OpenCVImageFactoryTest to ensure tests do not run on Windows ServerCore container
resolve http : / / issues. apache. org / jira / browse / amq - 4237 - add prefetch option to the amq
modified the ` getReturnValue ` method to throw an exception if the ` returnMessage ` is an ` Throwable ` to improve error handling by providing
added a Repeatable annotation for Issues in Issue. java to enhance the annotation's capabilities for issue type handling
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor. java and modified
allow pgstream. connect ( ) to use socksproxyhost if not set
[ hotfix ] [ doc ] fix typo in slotreport and slotstatus
removed unused import of ClassUtils from ReflectionUtils. java to streamline code by eliminating unnecessary dependencies
replaced ` HashSet ` with ` LinkedHashSet ` for ` _ excludeProtocols `, ` includeCipherSuites `, and ` selected _ protocols ` to
added a static resource variable and logic to retrieve it based on its location to improve resource management by avoiding repeated references to the system resource
[ hotfix ] [ network ] set the size of the plaintext segment to 16 in streamingaeadencryptedchannel.
added a test for invalid circuit breaker handling in ServerMvcIntegrationTests to ensure proper exception handling for invalid circuit breaker requests
updated SSL connection handling in AppPage. java to use a custom SSL connection factory to improve flexibility in SSL connections by allowing hostname verification
replaced resetBytesReadCounter ( ) with setSizeLimit ( 0x7FFFFFFF ) and removed resetBytesReadCounter ( ) call to improve
added a ` preferAES ` property with getter and setter methods in ` ProtectionPolicy ` and removed it from ` StandardProtectionPolicy ` to
( chore ) camel - opentelemetry : use log instead of stdout
removed redundant test method from ElbIntegrationTest. java to streamline the test by eliminating unnecessary tests
renamed the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver. java ` to improve clarity and consistency in method naming
( ) ) should not be open ( )
hhh - 15833 - fix a bug in the oracle dialect when use a driver other than oracle
added error handling for missing texture files in TextureUnpacker. java to improve robustness and provide clearer feedback when an atlas file cannot be
refactor cluster creation and state management in AmbariManagementControllerImpl. java to improve concurrency handling and enhance code clarity
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added tests for the behavior of the ResultSet in TestJdbcDriver2. java and improved resource management in HiveQueryResultSet. java to ensure proper
groupgroupgroupgroupgroupgroup ( - - - - - - - - ) only once
added logic to remove pre - deleted schemas from the schema response to ensure proper handling of pre - deleted databases in the schema response
updated the handling of the " chunkedWriter " in Http1xUpgradeToH2CHandler. java to ensure proper management of the "
updated item deletion logic in EnhancedBrowseFragment and added deleteItem functionality in FullDetailsFragment to enhance user experience by providing a confirmation dialog for
refactor RuleFinder and related classes to use a unified RuleBank interface to improve code organization and maintainability by centralizing rule handling
throw a fatalalert when an exception occur during the encryption process.
added new files TestMonomorphicObjectCall. java and Object. java with native methods for object finalization to facilitate testing and
replaced the ` removeMetaDataSource ` method with a ` toFront ( ) ` method in ` DataBrowser ` and ` Desktop ` classes to
hbase - 20625 don't try to find the time - range for a region that don't exist
[ hotfix ] [ runtime ] move local _ state _ sub _ directories to taskmanagerservices
modified the ` AlterTimeSeriesStatement ` class to set the ` isAlterView ` flag instead of modifying the ` setAlterView ` method to
added unit test for matchtext and matchsubstring condition
added exception handling when retrieving the routing table builder key to improve robustness by preventing application crashes due to unhandled exceptions
don't create a new map if it don't exist
( chore ) camel - jms : use char [ ] instead of string for test
bug 10719 : don't try to invalidate session if child of the same domain don't exist.
updated methods to use ` equals ` and ` isUniformDistribution ` instead of ` equals ` and ` isUniformDistribution ` to improve code clarity
updated the ` initialize ` method in ` BasicTumbleStepper ` to accept an additional ` original ` SimulationStatus ` parameter to
[ gr - 25833 ] fix compilation boundary in sulong.
updated variable assignment and print statements in PrettyPrinter. java to improve readability and maintainability of the code
added null checks for indexToNode before initializing it to avoid potential NullPointerExceptions during iteration
refactor DatagramSocket to improve filtering logic to enhance performance and maintainability of the code
test : migrate testqueryDNS from junit 4 to junit 5 ( # 4495 )
added a new file NutchServerInfo. java with various getter and setter methods for NutchServerInfo to provide a structured way
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource for attribute management to simplify attribute handling and improve code clarity
add ` ` timestamp'' option to set all column timestamp
refactor DSAParameterGenerator to use BigInteger. ONE instead of BigInteger. ONE for clarity to improve code readability and maintainability by using a more
refactor Numbers class to use float64 arrays and update method signatures accordingly to improve performance and maintainability of the code
updated mask check in InetAddressSet. java and added new test cases in InetAddressSetTest. java to ensure correct masking behavior and improve test coverage
added checks for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper. java to improve error handling for SQL exceptions
remove setzeroifnotfound ( false ) and setzeroifnotfound ( false )
added methods for adding and inserting tabs with specified font, size, and component to enhance tab management functionality and improve code organization
replaced array size usage with zero - length arrays in multiple Java files to improve performance and reduce memory usage during array conversion
[ hotfix ] [ runtime ] add taskmanagerruntimeinfo to mockenvironment
added null checks for group, scope, and artifact ID in MavenVisitor. java to improve code readability and prevent potential NullPointerExceptions
updated mock names and configurations in ZookeeperDataChangedListenerTest. java to improve clarity and functionality of mock data updates
added a new file ` FormatCheckingTest. java ` to validate Java class format errors to ensure that the Java process correctly identifies and reports
updated line number handling in CodeGenerator. java to improve code readability and maintainability
added a try - catch block around the add operation in ConfigHelper. java to handle potential exceptions during adding to the result
added methods to create toggle buttons and commands in the RadioButton class to enhance the functionality of the RadioButton class for better user interaction
updated cache initialization in LRUCache. java and increased CHUNK _ METADATA _ CACHE _ SIZE in MetadataQuerByFileImpl. java to optimize
int - 1147 make default _ cap in simplechannel public, int - 1763, int - 1803, int - 1
camel - 15836 : camel - osgi : fix npe in management name strategy
add an option to load the mode resource from the property file
[ hotfix ] [ test ] fix race condition in iomanager. addshutdownhook ( )
updated RobolectricTestRunner to use " AndroidManifest. xml " instead of " projectRoot " to improve clarity and consistency in resource path handling
updated header propagation logic in AbstractMessageProducingHandler and added a new test for non - existent headers in AbstractReplyProducingMessageHandlerTests
refactor CompareMode class to improve code readability to enhance maintainability and ease future updates
added HasTests interface to Arg and RustLibraryDescription classes to enhance test management capabilities in the build system
updated drawable resource references in FileMessageVH. java to improve code readability and maintainability
modified the OnExitTest class to improve the reliability of the test execution flow
added a method ` onUserPreferenceChanged ( ) ` to ` TaskbarManager ` that calls ` recreateTaskbar ( ) ` to ensure
add support for j9 heap dump to j9
( chore ) camel - mybatis : use try - finally to ensure session be close even if there be an exception
simonstewart : make the selenium - backed webdriver work in ie
refactor iterator - to - for - loop to improve readability and maintainability of the code
set the application state to unavailable to improve application stability by ensuring the application is in a valid state
updated position and limit calculations in ByteBuffer, Direct - X - Buffer, and StringCharBuffer classes to ensure proper handling of buffer position and limit
replaced ` toUri ( ). toString ( ). toUri ( ). toString ( ) ` with ` toMove. toString ( ). split
added multiple ` setEmpty ` methods to ` ArrayData `, ` DeletedRangeArrayFilter `, ` ObjectArrayData `, and `
changed enum declarations from non - public to public in VirtualAuthenticatorOptions. java to allow broader access to the Protocol and Transport enum
updated document fields in TestMultiPhraseQuery. java to ensure correct indexing behavior and improve test coverage
use payment _ payment _ pay _ pay _ pay _ status instead of payment _ payment _ status. pending
added a new ` _ onTimeoutThread ` field and refactored the handling of listeners in ` HttpChannelState. java ` to improve
updated logging statements in SslBytesTest, SocketChannelEndPointTest, TrackingSocket, and ServerTimeoutsTest to improve logging clarity and enhance debugging capabilities
updated package - info. java files for mmm and ppp to improve documentation clarity and maintainability
fix storageproxy. read ( ) when consistencyforpaxos = LOCAL _ SERIAL
added a check for " Home " model in HeosDiscoveryParticipant. java and set the serial number in HeosPlayerHandler. java to
added a new ` Wait ` class and updated ` PlainSelect ` and ` SelectDeParser ` to support a configurable wait duration in SQL queries
added imports for AttributeController, AttributeTable, and AttributeType, and refactored node and edge data handling to improve attribute management and enhance
added a null check for the'from'variable in SessionManager. java to prevent potential NullPointerException when'from'is null
nifi - 4892 : move rocksdb metronome interface to controller repository
updated the way the " IS _ GRANTABLE " boolean is retrieved from the results object to ensure accurate retrieval of the " IS _ GRA
added logging for asynchronous execution and modified URL validation logic to improve debugging capabilities and ensure correct URL handling
camel - cxf2 fixed the unit test error of camel - cxf
added conditional handling for new column descriptor in LoadTestTool. java to improve column modification logic based on new column descriptor
implemented Disposable interface in the Texture class to enable proper resource management and management of disposable objects
added null checks for ` tldBundleLocation ` and replaced ` WebappRegistrationHelper ` with ` WebBundleDeployerHelper ` to improve
refactored goquorum compatibility check into a separate method to improve code readability and maintainability
replaced IOException with Throwable in HttpInput. java to improve error handling by utilizing Throwable instead of IOException
added a check for both " JP " and " JP " in the locale validation logic to ensure that the application correctly identifies and reports a
updated response class references from ` Wrapper. class ` to ` HostResponseWrapper. class ` across multiple services to align response handling with the new
added boost comparison and updated hashCode calculation in FilteredQuery. java to ensure accurate comparison and hash code generation based on the boost
reformatted the constructor of FileMenuFilter for improved readability to enhance code clarity and maintainability
ggb - 2481 text editor : use scrollpanel instead of listbox
added a new file TestCMSClassUnloadingDisabledHWM. java to test the CMS class unloading behavior to ensure that the CMS
don't generate item to the forge event if there be no entity
updated references from KeyMappingPreparedStatementSetter to ItemPreparedStatementSetter across multiple files to align with the new database structure
use identityqueryfilter instead of forkeyrange in compactionstest
added null check for the " type " attribute in MiniAapt. java and implemented a corresponding test case in MiniAaptTest. java
added SpelJudge functionality to the OperatorEnum and added a new SpelJudge class to enhance expression parsing capabilities in the OperatorJ
replaced ` = = ` with `. equals ( ) ` for type checking to improve code readability and maintainability
bugfix # 25418, use eventqueue. getactive ( ) instead of sun. misc. serviceloader
updated multiple Java files for consistency and clarity to improve code maintainability and readability
updated references in ` AttributeResolution9. java ` and ` ShadowArscAssetManager9. java ` to ensure consistent usage of ` Ref
updated source and target values in SetupHid. java to reflect new configuration requirements
changed the visibility of the method ` extractMetadataColumns ` from private to public in ` DynamicSourceUtils. java ` and refactored project
added sorting functionality for localized names in AboutActivity to improve user experience by preserving the order of localized names
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
added a conditional check for live streaming before updating shared preferences to ensure refresh only occurs when live streaming is enabled
added exception as a cause in MappingException to improve error reporting for better debugging
( chore ) camel - file : fix flaky test
updated generic type from AbstractType to AbstractType <? > in multiple files to enhance type flexibility and improve code clarity
added support for transports in GitClientApplication. java and updated repository URL handling in RepositoryUrlPanel. java to enhance transport support validation and
updated various input consumer classes to include a prefix for " Long press " and " AssistantInputConsumer " to improve clarity and consistency in naming
added null check for mavenMetadata before filtering versions to ensure robustness by handling cases where mavenMetadata is null
817332 : [ testbug ] test / gc / g1 / testlargepageuseforheap. java fails due to
cloudstack - 2182 : skip event migration when usage db do not exist
fix brokerxmlconfigstarttest on window
added a new test class for ObjectStreamClass to ensure proper serialization and deserialization of ObjectStreamClass
simplified the conditional checks for ` target. getDataCenterInfo ( ) ` to improve code readability and maintainability
changed log level from error to warn in OpenTracingTracer. java to indicate a warning rather than error
added a toString ( ) method to the Generator class to provide a more informative string representation of the generator
updated substring handling in URI. java and added new test cases in Test. java to improve code clarity and ensure correct handling of special characters in
added error handling for missing resources in ClusterControllerImpl. java and created corresponding unit tests in ClusterControllerImplTest. java to improve robustness
refactor AccepttoApiUtils to improve response handling and error logging to enhance code readability and maintainability while ensuring proper error reporting
removed redundant code in VertexBufferObject. java to streamline code for better readability and maintainability
refactor SybaseASADatabase class to improve code organization to enhance maintainability and readability of the codebase
should should should not be use ( # 4 )
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide a way to retrieve the distance of a string
added FLAG _ IMMUTABLE and FLAG _ IMMUTABLE constants to PendingIntent in AndroidImplementation. java to enhance permission handling for pending intents
added methods to append read column IDs in HiveFileFormatUtils to enhance code readability and maintainability by centralizing column ID handling logic
replaced instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper. java
added multiple calls to DisplayTemporaryToast ( ) in SavedExperiments. java to improve user experience by providing a temporary toast message
added null version handling in ServiceModule and corresponding unit tests in ServiceModuleTest to ensure proper service version resolution and validate its correctness through unit testing
added a new test file ` RawSerializationTest. java ` to validate JSON serialization of collections, arrays, and parameterized objects to ensure correct JSON
use sslcertificategenerator instead of seleniumserver
refactor the loop for processing replies in ExpansionViewHelper. java to improve readability and maintainability of the code
updated the timeout assertion in ExpiringUrlCacheTests from 3 seconds to 60 seconds to allow longer test duration for resource access
added a new test method ` testNGramFilterPayload ` to validate the handling of payloads in the TestNGramFilters class to ensure that
refactor AclImpl to improve code structure to enhance maintainability and readability of the codebase
added a new test for random array generation with different sizes in EasyRandomTest. java to ensure that different array sizes are generated correctly with different
cloudstack - 4892 : add default constructor to start / stop command
added thread - local variable ` tryWriteAgain ` and modified its usage in ` SslConnection. java ` to improve performance by reusing the
refactor actor retrieval logic to improve readability and add a new method ` ancestorsVisible ( ) ` to enhance code clarity and provide a way to check
added info log statement for failed deployment - group in RollingUpdateOpFactory. java to improve visibility into the error handling process during deployment failures
[ hotfix ] [ table ] fix checkstyle violation in sinkfunctionprovider
added handling for BadCredentialsException in DaoAuthenticationProvider and introduced a new AuthenticationFailureUsernameNotFoundEvent class to improve authentication error reporting and provide better
updated AtMostXVerificationTest. java file to improve test coverage for AtMostX verification functionality
updated default query type references from " lucene " to " luceneQParserPlugin. NAME " and added multiple new test cases for query parsing to
updated SimpleDateFormat instantiation to use Locale. US to ensure consistent date formatting across different locales
added a new method ` isInitialized ( ) ` and overridden it in ` JavaLanguageServer `, and created a new test class ` Locals
updated ClientAPITokenIntegrationTest to use ` shouldHaveIdToken ` instead of ` idToken ` to improve clarity and maintainability of the
added transaction methods to DatabaseAdapter and refactored GNC XML handling in GncXmlHandler to improve transaction management and enhance code clarity
replaced byte array with ByteArrayOutputStream for improved performance to optimize memory usage and streamline string reading process
added multiple @ Override annotations and refactored exception message handling in MessagingTemplate. java to improve code readability and maintainability by simplifying exception
added isAcceptable method to AutoFormatVisitor to check if the source file is an instance of J. CompilationUnit to ensure proper handling of
set maximum buffered docs to Integer. MAX _ VALUE in TestIndexWriterMergePolicy. java to optimize memory usage during indexing operations
clear the wits list in Manager. java and add a new test for updating witnesses in ManagerTest. java to ensure witness
added exception handling for NoSuchElementException in CopyOnWriteMap. java to improve robustness by handling cases where the iterator does not exist
should not be log
added new reindex requests and updated metrics assertions in BasicAuthIntegrationTest. java to enhance authentication metrics accuracy and ensure consistent metrics across the application
replaced HashMap with LinkedHashMap for nodes to maintain insertion order to improve predictability and predictability of the node storage
chore ( jersey ) : add internalerrormapper ( # 714 )
refactor header validation to use a dedicated method to improve code readability and maintainability
refactor systemProperties to use a switch statement for key - value pairs to improve code readability and maintainability
changed method parameter types from String to CharSequence in StringSubject. java and added corresponding unit tests in StringTest. java to enhance flexibility in handling
add jdk / jfr / internal / jvm. countertime ( ) and jdk / jfr / internal / jvm. getEventwriter ( )
renamed IntUtilsTest class to PrimUtilsTest to clarify the purpose of the test class
updated the connection factory implementation in PersistenceManagerProvider. java to ensure correct connection factory is used for compaction scenarios
updated DeploymentOptions. java file to improve deployment configuration handling
changed the parameter type of the ` updateTextButtonWithDrawable ` method from ` ConstantState ` to ` Drawable ` to simplify the method signature
replaced InputStreamReader with StringReader in YamlParser. java to improve resource management and simplify import statements
added a new method ` rewriteCoalesceChildren ` to handle coalesce operations in the RexNodeConverter to improve the handling of coalesce expressions in
camel - jbang - fix unit test for camel - hl7
updated JavassistProxyFactoryFactory instantiation to use the current thread's context class loader to ensure proper context class loader is used for proxy
added synchronized keyword to DefaultDateTypeAdapter constructor and methods to ensure thread safety during serialization and deserialization processes
refactor method signatures in DocumentUtil. java for consistency to improve code readability and maintainability
replaced the ` newQuery ` boolean with ` setURI ` for setting the URI in ` HttpClientRequestBase ` to streamline URI handling and
removed the filterOldEntries ( ) method from FeedRefreshUpdater. java to streamline the process of filtering old feed entries
[ fshlog ] change log level from fatal to warn
renamed the ` getValues ` method to ` NodeMapIterable ` and refactored iterator and iterator implementations to improve code clarity and maintainability by
updated import statements in DiscoveryClientRouteDefinitionLocator. java to replace FilterDefinition with FilterDefinition to enhance filter functionality and improve predicate handling
added a check for non - empty fields before adding them to the operations list to ensure only non - empty fields are added to the aggregation operations
add default admin to the list of available admins
replaced MultiFields and MultiFields with SolrIndexSearcher's terms retrieval in IGainTermsQParserPlugin and SignificantTermsQParserPlugin
( chore ) camel - constant - bean : use object # getidentityhashcode ( ) instead of bean # tostring ( )
polish ` ` fix groovy parsing of primitive type''
remove uninterruptible hashcode ( ) method from java. lang. string
( chore ) camel - seda : increase test timeout to 5 second
added a new file ` package - info. java ` in the ` org. apache. lucene. core. testresources ` package to provide
updated the calculation of ` readLen ` in ` MessageUnpacker. java ` to ensure the read length does not exceed the buffer size
updated import statement for Nullable from common. lang to core. lang to ensure compatibility with the latest Micrometer library structure
updated SQL query in IconCache to include user - specific column to enhance filtering capabilities for user - specific data
[ hotfix ] fix checkstyle violation in defaultmqproducerimpl
don't allow whitelisted resource to be mark a a class file
cloudstack - 7143 : fix baremetal _ dhcp _ devices foreign key in upgrade path
removed IJava2DRenderer interface and its implementation from Java2DRenderer to simplify the renderer structure and eliminate unnecessary interface
added an onTearDown method to DefaultAudioSink that calls onOffloadBufferEmptying when the audio track is not playing
refactor upstream task management to use a scheduled map with scheduled tasks to improve performance and maintainability of the upstream task management
refactor StreamType class implementation to improve code readability and maintainability
updated assertion message in Recording. java to provide clearer context for the assertion failure
updated FilestorePage and RootPage to include user - specific navigation links to enhance user experience by allowing administrators to access the filestore
camel - elasticsearch - rest : ignore test that fail on window
added a check for the declaring class of the method before proceeding with the accept method to ensure that the method is only accepted if it is
updated button text from " leftAltcoin " and " rightButtonAltcoin " to " buyAltcoin " and " sellWithFiat
camel - 1868 : camel - restlet - added unit test for invalid url with no option
allow block. createnextblock without a block height
removed Serializable interface from BTreeMapJava and updated serialization methods in ConcurrentSkipListMapTest and JSR166Test to improve serialization handling and ensure correct
added a null check for the cause before logging the error message in RuleEngineImpl. java to improve error handling by avoiding potential NullPointerExceptions
reformatted conditional statement for improved readability to enhance code clarity and maintainability
replaced ` mFilesAll. indexOf ( file ) ` with ` mFiles. indexOf ( file ) ` in ` LocalFileListAdapter. java
deleted the PlainVerifier. java file to remove unused or redundant code from the codebase
added a check to close the system window when an action is triggered from AltTab to ensure proper resource management and prevent potential memory leaks
added BottomSheet functionality and adjusted dialog visibility in DialogFragmentIT. java to enhance user experience by providing a smoother transition to the bottom
updated charset parsing to use UTF - 8 encoding to ensure consistent character encoding across different platforms
added call to super. deinitialize ( ) in TextField. java to ensure proper initialization of the TextField component
replaced manual serialization with utility methods in LogFormatTest. java to improve code maintainability and streamline serialization process
updated SQL query parsing to use " previousUntilLast " instead of " previousRange " to ensure accurate parsing of SQL queries including last values
updated array size checks and added handling for negative array size in JAXWSExceptionBase. java to improve error handling for negative array sizes and ensure
test : migrate ctunresolvedimporttest to junit5 ( # 2496 )
updated thread join duration from 10 seconds to 60 seconds to allow more time for thread execution
( a a ) ( a ) )
added ` i18nSafe = false ` to ` ShadowActivity `, ` ShadowAlertDialog `, ` ShadowView `, and `
replaced LogFactory with POILogger in POIFSFileSystem. java to utilize POILogger for better logging functionality
updated alarm handling logic to replace'active'and'active'with'object'and'Motion area'to improve clarity and functionality
add statistic for map. delete ( ) call
updated status handling in Response. java to use a switch statement to improve clarity and maintainability of response status management
updated CheckResourceKeys to use the correct JavaFileManager location for javac to improve code robustness by ensuring the correct Java file is used
add projectname to optional project name ( # 4483 )
added a new test class ` DeprecatedStubbingTest ` to verify the behavior of ` stubbing ` in Mockito to ensure that the ` stub
updated import statements for DispatcherType in ITBraveServletFilter. java to ensure compatibility with the latest Jetty package structure
add nml and nsml to the list of expect modifier.
added conditional logic to allow RSA key exchange in FipsUtils. java to enhance security by allowing additional RSA key exchange options
replaced occurrences of ` _ reader ` with ` reader ` in multiple files to ensure proper resource management and prevent potential memory leaks
added oAuthFactory and oAuthServiceHandleId fields and implemented deleteOAuthServiceAndAccessToken methods in SDPI and SDMAPI classes to manage access
updated interpolator from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView. java to improve animation quality
added handling for UpdateRegionLocation and improved logging messages in various classes to enhance logging clarity and provide more informative information during region migration processes
added a new file ` FileDialogLeakTest. java ` to test the garbage collection of ` FileDialog ` to ensure that the `
hbase - 2905 move testopentableincoprocessor to hbase - test - hbase
ignore uninterruptible annotation in truffle.
[ flink - 25836 ] [ protobuf ] remove unnecessary split method from pbbytestorow ( # 25720 )
added a null check for the disi variable in DrillSidewaysScorer. java to ensure that disi is not null before proceed
updated media source handling in ExoPlayerTest, DynamicConcatenatingMediaSourceTest, and FakeMediaSource classes to improve code clarity and
added JVM version checks and updated conditional logic in Helper. java to enhance compatibility with different JVM versions
''''''''''''''''''' '
replaced ` isFalse ( ) ` with ` isTrue ( ) ` for end - to - end encryption key validation to improve clarity and consistency in the
added home button functionality in the DirectMessageConversation class to enhance user experience by allowing navigation to the home button
added support for GET _ USER and LIST _ USER in RpcServlet to enhance functionality by allowing users to retrieve users with specified credentials
added a system property for 64 - bit architecture in TestJdbcPluginWithMSSQL. java to enable tests to run on supported architectures
updated the handling of the original start class in the strategy to improve clarity and maintainability of the code
improve error message and add more debugging information
replaced calls to ` getResponse ( ). getResponse ( ) ` with ` event. getSuppliedResponse ( ) ` in TestAsyncContextImpl.
[ drools - 5486 ] fix nimbus look and feel error message when use look and feel
updated regex in AppPage. java to include a space before the version string to ensure proper formatting of version strings in the application
refactor animation listener logic in LauncherAppTransitionManagerImpl. java to improve code readability and maintainability by reducing duplication
updated the error message to include the version instead of the base58 to provide clearer information about the network version used
use newofferpayload instead of offerpayload in editofferdatamodel.
modify the way milestone parameters are initialized in TicketPage. java to improve handling of milestone parameters based on the status of the repository
updated RFBattery from 640 to 80 in PipeItemsWood. java to accommodate new energy requirements
updated the ` getStateMachineClusterInstance ` method to include blueprintName and blueprintRev parameters to enhance cluster key retrieval by associating blueprint names and
set downgradeAllowed to true and add a test for it to ensure downgrade is set to true before proceeding with the upgrade pack
updated XML namespace scanning methods to use NameType. ATTRIBUTENAME instead of NameType. ATTRIBUTE to improve clarity and consistency in naming conventions
add support for emulate _ system _ load _ library.
fix issue where we ben't able to sort the app name
updated entry handling in DefaultPlatformManager and modified file output handling in FatJarStarter to improve resource management and ensure proper file handling
updated the formatting and structure of the doTest method and assertion messages in TestSecretKeyCredentialHandler. java to improve readability and maintainability of the
camel - jbang - fix routefinderfinder to use springcamelcontext
( ) ) should be group ( )
hbase - 19760 add dfs. dfs. dfs. client. retry. interval and hbase. dfs. client. block. recovery.
added support for reuseAddress in DatagramSocketOptions to enhance flexibility in handling network options
( ) ) should not be kick ( )
- a - a - a - b - a - a - a - a - a - and - all - a - a - -
updated error messages to reflect the use of searchable and docValues instead of indexed or stored to improve clarity and accuracy in error reporting related to
replaced ` equalityPredicateColumns ` with ` predicateColumns ` in ` StarTreeIndexOperator. java ` to improve clarity and consistency in predicate handling
removed redundant code in HandshakeHandler. java to streamline the code for better readability and maintainability
removed redundant closing brace in Navigator. java to improve code readability and maintainability
updated visibility of ` DEFAULT _ RECORD _ READER _ CLASS ` and added ` DEFAULT _ PARQUET _ RECORD _ READER _ CLASS
added support for " GREATER _ THAN _ EQUAL " and " LESS _ THAN _ EQUAL " in MongoQueryCreator to enhance
( ) should appear in group clause ( # 3 )
refactor FileChannelLinesSpliterator to utilize Unsafe's unmap method and improve buffer handling to enhance memory management and ensure proper cleanup of buffer
refactor validator retrieval to use a local variable to improve code readability and maintainability
added a schedule method to CircuitBreakerImpl and updated CircuitBreakerTest to use it to improve concurrency handling and enhance test reliability
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in Launcher. java to simplify the intent configuration by removing
uiuiuiuiuiuiuiuiuiuiuiuiuiuiuiui should be progressbar
added @ Disabled annotation to the TableExtRetrieverTest class to temporarily disable tests that are not ready for execution
added synchronization to the ` addExportedCount ` and ` getExportedCount ` methods to ensure thread safety when accessing the exported count
replaced ` IntRangeUtil1. requireNonNegative ` with ` IntRangeUtil. requireNonNegative ` in ` MetricsImpl. java `
refactor HttpParser to improve error handling for illegal characters to enhance robustness and maintainability of the code
changed the layout used in ConfigurePagerActivity from trends _ activity to configuration _ activity to align the activity with the new configuration design
updated print statement in SLWTTextListing. java to improve clarity of log output for better debugging
refactor ForceLeaderTest to improve handling of Tlog replicas and introduce a new test class to enhance test reliability and maintainability while addressing
updated Thread class to improve thread management to enhance performance and reliability of thread execution
updated template file suffix constants and added forceTemplateMode configuration to improve template file handling and ensure consistent file naming across different template formats
camel - cxf - fix the c error of camel - cxf
removed unnecessary whitespace in YamlRepresenter. java to improve code readability and maintainability
updated month formatting in ToChar. java and added a test case in TestFunctions. java to ensure correct formatting of month names and improve test
added validation for valid transaction and write IDs in GenericUDTFGetSplits. java to ensure data integrity by validating valid transaction and write IDs
refactor JsonSerDe to use Collections. emptyList ( ) instead of ArrayList < String > and ArrayList < TypeInfo > to improve code readability and
add method to detect if a sheet don't have data
modified the SSTDeserializer constructor to accept UnicodeString instead of IntMapper < UnicodeString > to enhance string handling capabilities for better compatibility with Unicode
updated default grid column retrieval to use a constant to improve code readability and maintainability by centralizing default grids
updated diff message format from " empty - differences in line breaks? " to " ( line contents match, but line - break characters differ )
added a new boolean field ` waitingForKeys ` to ` DecoderInputBuffer ` and updated logic in ` ClippingMediaPeriod ` to track
updated API paths in OkexV3. java to remove the " / api " prefix to align API path with the latest API structure
updated conditional checks in LineUtilitiesTests. java to improve readability and maintainability of the code
added error handling for varargs syntax in JavacParser. java and created new classes VarargsAndOldArraySyntax. java and T65696
improve error message if ` defaultdrmsessionmanager ` be use on wrong thread
added a new ` Method ` type and modified the ` VariableContext ` initialization logic to support method calls and improve the handling of array access and
added tests for invalid compilation unit and profile string in ExperimentParserTest. java to ensure that invalid compilation unit strings are handled correctly
updated buffer limit logic in Piece. java and SharingPeer. java to improve buffer handling and ensure proper buffer management
added a response timeout property to the NettyRoutingFilter to enhance HTTP request handling by allowing configurable response timeouts
refactor NativeLinkTarget handling in CxxLibraryFactory and related classes to improve code clarity and maintainability by using more descriptive names
added unit test base on user forum issue
added handling for ` RexFieldAccess ` in ` ASTConverter ` and introduced a new ` convert ` method in ` RexNodeConverter ` to improve
replaced direct calls to ` queryLogEntry. values ( ) ` with a private static final array ` QUERY _ LOG _ ENTRY _ VALUES `
use relative uri instead of relative uri when no proxy
refactor PKCS12KeyStore and StoreSecretKeyTest to improve certificate handling and streamline chain processing to enhance code clarity and maintainability while ensuring
added reflection access checks in NativeObject and Bootstrap classes to enhance security by enforcing reflection access checks
changed the access modifier of the constructors of the CollisionMap class from public to default to package - private to allow broader access to the constructor
remove @ notnull annotation and deprecate method in tradewalletservice
refactor log level handling to use a switch statement to improve readability and maintainability of the code
remove region _ id parameter from insert sql statement ( # 4392 )
added handling for EncryptedDocumentException in OldExcelExtractor to ensure proper error handling for encrypted Excel files
add -- add - exports = com. graalvm. nativeimage. builder for native - image benchmark
removed unnecessary else block around image visibility setting to streamline code for better readability and maintainability
increased sleep duration from 10ms to 50ms in BatchingStateChangeUploadSchedulerTest. java to improve test reliability by allowing more time for
refactor directory creation logic in ShadowContext. java and add unit tests in ContextTest. java to improve code robustness and ensure proper cleanup of
change implementation of exceptionfactory to explicitly test for the presence of dependent class ( # 1723 )
increased WAIT _ TIME _ MS from 10, 000 ms to 60, 000 ms to extend the wait time from 10, 000 ms to 60
added support for AUD in ConnectOAuth2RequestFactory and ConnectTokenEnhancer to enhance authentication capabilities by allowing user - defined audience
camel - kafka : remove default value for camel - kafka
added a new constant ` selectableItemBackground ` to the ` R ` class to define the background color used for selection items
consolidated import statements in GatecoinTradeService. java and added a placeholder method for placing stop orders to streamline import statements and implement
updated event type assignment logic in TxnSetOperation. java to ensure correct event type is used when record is null
added a new ` ResumableRandomAccessFileListener ` class and updated ` ResumingExternalDownload ` to use it to improve file handling
change class name from accesslogvalve to abstractaccesslogvalve
added iteration over format records in HSSFDataFormat. java and updated unit tests in TestWorkbook. java to improve handling of format records and ensure
[ hotfix ] [ kafka ] deprecate flinkkafkaproducer constructor
updated the calculation of compressedChunkLength to ensure it does not exceed the maximum compress length
camel - spring - redis : add idempotent repository for camel - spring - redis
fix containerrepair use metadata here instead of damage
[ mng - 6861 ] fix regression in legacylocalrepositorymanager
added error handling for task manager initialization failures in LocalInstanceManager and JobManager to improve robustness by ensuring task manager is properly initialized before
include artifact id, version, and classifier in artifact resolution exception.
refactor temporalPath retrieval to use getInternalTemporalPath method to improve code clarity and maintainability by centralizing internal temporary path logic
refactor FeedEntryStatusDAO to utilize Apache Commons collections for improved code organization to enhance maintainability and readability of the code
added blocking execution and error handling in ContextImpl. java and updated related tests in BlockedThreadCheckerTest. java to improve thread management and
updated the ` instantiate ` method to accept a ` String ` parameter and introduced a new ` convertOrNull ` method to improve argument handling and provide
updated file reading logic in LoadContactsTask. java to handle different Android SDK versions to ensure compatibility with newer Android versions
replaced setter methods for remote addresses and hostname with direct assignments to improve code clarity and maintainability by using instance variables
added a null check for the realClass in Robolectric. java to ensure that the class is annotated with @ Implements to prevent runtime
added a check for ` tlsMutualAuthenticationRequired ( ) ` in ` NettySslContextFactory ` and ` ExampleNettySslContextFactory ` to ensure
updated import statements in BasicHttpTest. java and added a new test for SSL requests to ensure proper handling of SSL exceptions and validate functionality through
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to enhance accessibility of consumer and producer data
refactor event creation in PageChangeListener and FrameRenderer for improved readability to enhance maintainability and readability of the code
updated log message to use SMS instead of email to improve clarity of log messages
add method ` draftqueryoptimise ( ) ` to ` beandescriptor `, ` beandescriptordrafthelp `
added exception handling for IOException in MultipartBody. java to improve error handling and logging for resource temporarily unavailable scenarios
fix arrayindexoutofboundsexception in zipfolder and executablefactory
updated multiple Java files to improve code organization to enhance maintainability and readability of the codebase
add ability to attach file from external file ( # 6481 )
added LoadOptionsBuilder and modified SchemaCrawlerOptionsBuilder to use it to improve flexibility in configuring schema loading options
updated package structure and test method names in TestLoadLegacyLibrary. java to improve organization and clarity of test cases
replaced TestParseException with returning null in TestReader. java to simplify error handling by returning null instead of throwing an exception
added methods to set the name, enabled, and expanded state based on the prototype's state to enhance the functionality of the ProjectProperty class
refactor connection handling to use try - with - resources for better resource management to ensure proper resource handling and avoid potential memory leaks
updated DataStreamJob. java with new import statements to improve code readability and maintainability
added error handling for ErrnoException in TestContentProvider. java to improve robustness by handling potential IO exceptions
camel - cxf - fix the unit test error of camel - cxf
added a check for the " h2 - 14 " protocol in the HTTP2ServerConnectionFactory to ensure proper handling of H2 - 14
updated method symbol handling in LambdaToMethod. java and added lambda detection in ClassFileVisitor. java to improve clarity and functionality of lambda method
minor tweak to coordinationtransformer to make it a bit easy to understand
added a timeout parameter of 60000 to the copyURLToFile method call to allow more time for the file to be copied to the cache
added a line to set the phrase slop in the QueryParser to enhance query parsing functionality for improved performance
increased sleep duration from 10ms to 100ms in LongPressMouseListenerTest. java to improve test responsiveness by adjusting sleep durations
updated the default port from 8188 to 6188 in FlumeTimelineMetricsSink. java and HadoopTimelineMetricsSink. java to align the
refactor gameScheduler to use a parallel scheduling method to improve code readability and maintainability by reducing duplication
( ) ) should not be open
updated the progress calculation in DepthController. java to ensure that the progress value is within a maximum of 1, 1, 1, and 1
[ java ] remove unused method packetreceived ( packet ).
added debug logging for authentication failures in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction
added null checks for the service before accessing its properties to improve robustness by preventing potential NullPointerExceptions
[ pantheon ] add ` ` hidden = true'' to ` ` enable account level permission via smart contract''
added doNotInstrumentClass for CoroutinesRoom $ Companion in AndroidConfigurer. java to ensure that the class is excluded from instrumentation
updated the ` isSupported ` method in ` NegotiateAuthentication ` to synchronize access to the ` isSupportedImpl ` method to improve thread safety
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the initialization process by eliminating unused methods
( chore ) camel - jms : camel - core - optimize to use bean name instead of thread name
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
pdfbox - 4892 : fix a bug report by michael klink
log4j2 - 1343 add test for patternselector
simonstewart : make it possible to run selenium test under selenium rc
updated MwThankPostResponse to extend MwResponse and added a new class MwThankPostResponse to improve response handling and
updated ChannelEndPoint to implement SocketBased and introduced a new SocketBased interface to enhance socket handling capabilities in the application
updated revokingStore initialization and configuration settings in Manager. java to improve code clarity and ensure proper management of RevokingStore settings
added unit tests for implicit joins in HQLTest. java to ensure correct handling of implicit joins in Hibernate queries
updated assertions in NonVisualRegressionTest to normalize line separators to ensure consistent formatting of expected and actual values
added a new ` filesToCommit ` collection and refactored reference counting logic in ` IndexWriter. java ` to improve code clarity and maintain
added @ final annotation to several methods in BaseError. java to enforce immutability of these methods
added validation for newPercent in ConsumeUserResourcePercentActuator to ensure that percentage values do not exceed defined limits to prevent runtime errors
added a conditional check for the ` show _ old _ login ` boolean value in the legacy login logic to ensure that legacy login behavior is only
renamed StreamNetworkThroughputBenchmarkTests to StreamNetworkThroughputBenchmarkTest to improve clarity and consistency in naming conventions
replaced ` setResponsePage ( EditTeamPage. class ) ` with ` setResponsePage ( UsersPage. class ) ` in ` EditTeamPage
updated debug log message to provide more context for plugin credential initialization errors
fix possible resource leak in connectionmanager. close ( )
refactor Rocket class to improve code readability to enhance maintainability and ease future updates
refactored the logic for creating dynamic partition specifications in BaseSemanticAnalyzer to improve code readability and maintainability by reducing duplication
replace round hack with roundedhalfup factor to simplify code and improve readability
added directory entry handling in JarDirectoryStep and corresponding tests in DirectoryTraversal and JarDirectoryStepTest to improve directory traversal functionality and ensure correct handling
added a new JWKSetEditor class to handle JWK - related text input to enable dynamic setting of JWK key values
refactor term handling in ` OrdsBlockTreeTermsWriter ` and ` BlockTreeTermsWriter ` to use ` PendingTerm ` objects instead of
truffle : add truffleboundary to method. resolveparameterklasses ( ).
changed the default value of ` fetcher. threads. per. host. per. host. by. ip ` from true to false to disable
simplified the conditional check for queryTimeout in StatementUtil. java to improve code readability and maintainability
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest. java to enable dynamic generation
refactor ReplicaPosition class to improve code readability to enhance maintainability and ease future updates
bug 10719 : check initial delay before schedule network stats update task
updated interpolator constants in QuickstepAtomicAnimationFactory, AllAppsTransitionController, and AllAppsTransitionController to use FINAL _ FRAME instead of a
updated swipe length calculation in Background. java to improve navigation bar responsiveness based on screen density
added a new module - info. java file for the Jetty server module to define module exports and enforce required dependencies for the Jetty server
fix nullpointerexception in jsontype. tostring ( )
updated context initialization logic in ResourceResolverBean. java to improve code readability and maintainability
[ hotfix ] [ doc ] set default value to 0 in checkpointconfig
updated the ` reportInnerClassReferences ` method to accept a ` Element topElement ` instead of a ` TypeElement ` to enhance type reference
updated command line syntax in TimestampCheck. java to improve readability and maintainability of the code
replaced FluentIterable with Java Streams for file listing to improve code readability and performance
removed the default value for the ` register ` variable and added a conditional check for ` REGISTER _ KEY ` in ` ServiceConfig ` to
add option to disable otr session when security be disable
added new properties for node label outline size, transparency, and outline color in NodeLabelRenderer to enhance label rendering capabilities by providing customizable outline
refactor ProxySelector, URL, and URLStreamHandler classes to improve code organization and maintainability
updated the boolean value from false to true in Win32FontManager. java to correct the logic for font management
added null check and cursor setting in TreeVisitor. java to ensure proper handling of null values and improve cursor management
add ierrorhandlingpolicy to jdtbatchcompiler
added text alignment and text alignment features to LabelBlock class to enhance text alignment capabilities for better text presentation
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the codebase
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
changed the type of ` isLoopback ` from ` boolean ` to ` Boolean ` and added null checks for ` networkInterface ` to improve
updated DateUtils. fromRfc1DateString to accept a Locale parameter to ensure consistent date formatting across different locales
updated file download test to expect a specific file extension to improve test reliability by ensuring correct file extension is used
nifi - 747 : allow an output of a flowfile if there be no hit for a query
cloudstack - 6682 : fix the calculation of the aggregation ratio
[ java ] use try - with - resources to avoid potential resource leak.
remove unneeded close ( ) call from readfilesp and streamfilesp
refactor widget handling logic in PageChangeListener. java to improve readability and maintainability of the code
added methods to check if a workbook is write protected and improved error handling in the FileSharingRecord class to enhance file sharing functionality and provide
added try - catch block around unregisterInvalidatedSessions ( ) method to handle potential exceptions during session unregistration
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
updated status message from " Bridge reports light as unreachable " to " Bridge reports as not reachable " to accurately reflect the status of the bridge
add a hook to check if the client be in loading, and use it in the fml file.
updated return statements in UI. java and BlockInventoryFragment. java to use the system's ` getOrNull ( " unit. millions "
refactor MessagePackParser to use a switch statement for handling BYTES and STRING types to improve code readability and maintainability while ensuring correct byte handling
added parameterized test for query with reserved words as identifiers in HqlQueryTransformerTests and JpQueryTransformerTests to improve test coverage and ensure
added unit tests for map serialization and deserialization in MapTest. java to ensure correct handling of nested maps in JSON format
[ geot - 5496 ] fix geometryutils to handle the difference between x, y, and offset.
refactor sorting order dialog to use a unified SortingOrderDialogFragment to improve code readability and maintainability by centralizing sorting order management
added error handling for missing test plan in StandardJMeterEngine. java to improve robustness by handling cases where the test plan cannot be found
replaced instances of ` dbmsName ` with ` dbmsName ` and ` dbmsName ` with ` dbmsName `, `
refactor argument handling in Parser. java to include conditional checks for type and non - strict mode identifiers to improve robustness and prevent potential NullPointerException
updated the default protocol from " SSL - HTTP / 1.0 " to " scf. getProtocol ( ) " to ensure the correct protocol is used
set displayVolume to true in VolumeVO. java to ensure volume display is enabled by default
updated the ` version ` method to accept a boolean parameter and modified its implementation to enhance flexibility in version handling based on the ` fullVersion `
refactor logic in ChangeLogParameters. java to improve clarity and structure to enhance code readability and maintainability while handling global change log parameters
( ) should not be warn
hhh - 11744 - fix test failure on oracle
removed redundant calls to ` sslSocket. getSoTimeout ( ) ` and added ` sslSocket. startHandshake ( ) ` and ` ssl
''should'' and'' should''
updated option key from false to true in EspressoOptions and changed class to final in DefaultClassHierarchyOracle and NoOpClassHierarchy
http : / / issues. apache. org / jira / browse / amq - 3496 - add debug log statement to aid in
updated import statements and refactored test methods in JodaTimeRangeRandomizerTest. java to improve code clarity and maintainability by consolidating
updated WebDescriptor. java to conditionally redirect HTTP requests based on servlet version to ensure proper handling of HTTP requests for Jakarta EE versions
fix # 2173, add readiness. isready ( node ) method
updated loop to iterate over handler endpoints instead of liveEndpoints to ensure that only relevant endpoints are processed from the handler
added a null and empty check for creationStatements before proceeding to prevent potential NullPointerExceptions when creationStatements are null or empty
updated RPC _ VERSION from 1 to 2 in DataRpcConfig. java and UserRpcConfig. java to reflect the new versioning scheme
added security checks in ObjectStreamClass and ObjectStreamField to ensure proper package access only when a security manager is present
removed unused imports and refactored methods in Utils. java and XLCDCommunicator. java to streamline code and improve readability by
refactor DefaultMetricsTagProvider to use an unmodifiable map for tags to improve immutability and prevent potential null pointer exceptions
updated the test suite in ClientDriverSuite. java to ensure the test suite correctly includes the MockBrowserTest class
changed default level from OFF to ERROR in Launcher. java to improve error reporting for better debugging
changed instance variables from non - final to final in IconNormalizer. java to ensure immutability and improve logging clarity
add ability to set first call preparation do to be disable by default
refactor workspace and exit overview mode logic to improve clarity and maintainability of the code
replaced ` asEagerSingleton ( ) ` with ` @ Singleton ( ) ` in ` AuthWithStoreFeature ` and ` Auth ` classes to
modified the incomingAssociations method to include an ignoreInvisibleAssociations parameter to enhance flexibility in association handling based on the ignoreInvisibleAssoc
don't need to delete private ip when it's remove from the db
updated the command description in ProfileServlet. java to provide guidance on how to handle an empty diagram and Linux profiling page
updated the logic for adding required items in ModelResolver and added a new RequiredRefFieldModel class with corresponding test cases to enhance the model with
renamed various configuration classes to reflect their purpose to improve clarity and maintainability of the codebase
refactor FeatureFlags class to improve code organization to enhance maintainability and readability of the codebase
updated UUID format in ConfigStore. java and added a new test for UUID mapping in ItemIDMappingTest. java to enhance readability and ensure
added caching for image in TimeLineCursorAdapter and TimelineArrayAdapter to improve performance by avoiding unnecessary image updates
( ) ) should not be disable
added a null check for mWaitingToSend's storage path in FileDisplayActivity. java to ensure that the download process does not proceed if
updated conditional checks in VectorMapJoinFastBytesHashMap, VectorMapJoinFastBytesHashMultiSet, and VectorMapJoinFastBytesHashTable
refactor LDAPConnectionService to improve connection handling to enhance performance and reliability of LDAP connection management
http : / / issues. apache. org / jira / browse / amq - 4237 - deprecate xmlattribute
removed debug tracing logs from TouchInteractionService and RecentsAnimationDeviceState to streamline debugging logs for better performance and clarity
added a check for class names starting with " com. intellij. rt. junit. " to ensure compatibility with IntelliJ IDEA version 193.
updated assertions in TestMultiSearcher to compare hits2 and hits3 to ensure the test accurately reflects the expected number of hits
added a new file ` LucenePackage. java ` with a static factory method for package creation to provide a utility for package management and provide a
updated the calculation of sizeInBytes in RAMDirectory. java to correct the file size handling logic
added estimation logic and improved byte array handling in various classes to enhance performance and maintainability of the code
added null check for getDrawerToggle ( ) before animation to prevent potential NullPointerException when getDrawerToggle ( ) is called
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method to suppress warnings related to unused subject
added conditional logic to scan modules based on the ` scanSpec. overrideClasspath ` or ` scanSpec. overrideClassLoaders ` to ensure
''and'' should be'' ( if present )
added recovery cancellation logic in CoreContainer. java to ensure proper handling of recovery cancellation during SolrCore instances
refactor time calculations and improve output formatting in bug5070081. java to enhance code readability and maintainability by using a dedicated method for time
[ mng - 4391 ] fix npe when there be no auth control option in the repository
updated comments in PGProperty. java for clarity to improve readability and maintainability of the code
added security - related fields and methods in SecurityEvaluationContextExtension. java to enhance security expression handling by integrating trust resolver and role evaluator features
added a check to set exponentSize to primeSize - 1 if it is zero to ensure exponentSize is set correctly based on primeSize and
replaced instances of ` File ` with ` FileStorageUtils. getUsableSpace ` across multiple files to improve code clarity and maintainability by
refactor DistinctSqlAggregation to use an array of objects instead of a delegate reference to improve code clarity and maintainability by using a loop for
added a test for executing post login activities on successful authentication in UserServiceTest. java to ensure that the login functionality works as expected for successful authentication
add extractorspanishstriippedverb ( string path ) to extractorframesrare.
refactor CharArraySet to simplify code initialization and improve readability to enhance code maintainability and reduce redundancy in string containment checks
) should not be track ( )
refactor JsBundleGenrule and JsBundleGenruleDescriptionTest to improve code clarity and maintainability by using the correct build target and asset path
set character encoding to UTF - 8 in PinotClientRequestServlet and refactored string indexing logic in StringDictionary to ensure proper handling of
updated resource references from " Logical Analyzer " to " tile _ icon _ oscilloscope " and removed unused applications array in InstrumentsFragment
refactor instance creation logic in AbstractVector. java to improve clarity and maintainability of the code
removed syncMetaLeader ( ) method from CMManager. java to streamline the code by eliminating unnecessary synchronization
modify contribution html generation to use perceived contribution instead of claimed to instructor
added TestLoggingExtension import and annotation to DiagramRendererTest to enable logging functionality for testing purposes
camel - case mapping should use camelcase instead of camelcase
added support for the VIOMI WATERHEATER _ E1 device in MiIoDevices. java to enhance compatibility with the latest
replaced calls to getSslSessionData ( ) with SslSessionData in SecureRequestCustomizer. java to improve code clarity and maintainability by using
added a new file CreateNewSpreadsheet. java for creating new sheets to demonstrate how to create new sheets in Excel applications
replaced ` Duration. ZERO ` with ` long timeToLive ` and updated related methods in ` CacheProperties `, ` RedisCacheConfiguration `,
replaced CONTENT _ URI with CONTENT _ URI _ NO _ NOTIFICATION and updated related code to use CONTENT _ URI _ NO _ NOTIFICATION instead of CONTENT
updated the version number from'2.14. 0'to'2.14. 2'in SwaggerResolveTest. java to reflect the latest
changed synchronization from lucidaFontName to this in SunFontManager. java to ensure thread - safe access to lucidaFontName
added a condition to check if the variable'c'is equal to'<'in DocClassUtil. java to ensure proper handling of
replaced String. format with String. format in Workspace. java to improve code readability and maintainability
added a check for validation errors in ValidateCommandStep to improve error handling by informing users when the validation process fails
updated IntegrationTestContextLoader to utilize a custom WebContext configuration to enhance resource loading capabilities and improve servlet context management
added logic to handle scroll events in Container and JavaSEPort classes to improve responsiveness and user experience during component interactions
removed unnecessary whitespace in RamlType. java to improve code readability and maintain consistency
added a new ClientStat class and updated related classes to use String instead of Long for client statistics to enhance type safety and clarity in the statistics
updated the expression string replacement logic in CellContentConverter. java to ensure correct handling of special characters in the string
fix test that fail on window
mondrian : fix typo in mondrianproperties. java
added stack trace printing functionality to ProcessTools and updated CustomLauncherTest to accommodate new file permissions to enhance debugging capabilities and ensure proper permission
removed the testEmbeddedImage method from TumblrRipperTest. java to streamline the test by eliminating unused functionality
added a conditional check for symbol slot presence before converting storeType to ensure correct conversion of storeType based on symbol presence
[ java ] don't set sample offset if there be no sample.
updated import statements and added a custom ` toString ` method in ` BaseLockFactoryTestCase. java ` to improve logging capabilities for better debugging and
tika - 371 -- add parser and parser to allow dynamic configuration of tika service
updated imports and added logic to handle package - info files in DocLint. java to improve code clarity and ensure proper handling of package - info
added import command check for DELTA _ IMPORT _ CMD in DataImportHandler and DataImporter classes to enhance the functionality of the import process
added a test to verify that inner classes are not modified if the ignoreDefinition flag is true to ensure that the ChangeType recipe does not modify
removed unused import of Log from JettyService. java to clean up the code and improve maintainability
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method and updated related logic to include workspace screens to enhance functionality
[ java ] add support for killswitch and quitquitquitquit ( ).
add a list of transformed rows to track all rows to improve performance by avoiding unnecessary processing of transformed rows
added a check for Windows operating system to skip processing if Teredo is present
add contact dialog to inform the user if the protocol provider be not register.
replaced registration of USER _ DETAILS _ SERVICE _ FACTORY with registration of USER _ DETAILS _ SERVICE _ FACTORY to ensure
replaced canvas. drawBitmap with canvas. drawBitmap in FastBitmapDrawable. java to improve performance by eliminating unnecessary line breaks
add yymmdd to meitrack and totem protocol
changed method access modifiers from public to protected for several methods in SunFontManager and X11FontManager classes to enhance accessibility and align with
added @ Deprecated annotations to EnhancedRandom. java to indicate that these constants are outdated and should no longer be used
camel - test - infra - clientmapstore should catch executionexception instead of reachedmaxsizeexception
add a configuration option to keep empty sentence
updated the ` createArtifactSubdirectory ` method to return a boolean instead of void and improved error messages to enhance error handling and provide clearer feedback
refactor JavaCompilerService to return JavaCompilerService. NO _ MODULE _ COMPILER and JavaCompilerService. NO _ MODULE _ COMPI
http : / / issues. apache. org / jira / browse / amq - 4233 - directagentattache shouldn't
modified the sendEmail method to throw MessagingException instead of catching MessagingException to improve error handling and provide clearer logging for email sending failures
add miss api annotation, fix npe in pipeitemsobsidian
updated date parsing method to accept a locale parameter to enhance flexibility and maintainability of date parsing logic
added a checkbox to control whether to include decals in StorageOptions to enhance user control over storage options based on user preferences
updated the ` generateDocumentation ` method to include a ` null ` parameter and modified the ` getImplementedDatabases ` method signature to improve documentation
refactor PerfLog handling in HiveProtoLoggingHook and improve test assertions in TestHiveProtoLoggingHook to enhance performance tracking and ensure accurate logging behavior
corrected the spelling of " integrity " to " integrity " in log message to ensure consistency and accuracy in log messages
updated the class file version check in ignoreRecordAttribute. java to ensure compatibility with different Java versions
added a new test class ` LdapPasswordAuthenticationTest ` for LDAP authentication to ensure proper connection and handling of user credentials in the LDAP application
updated imports and conditional logic in TaskCompiler. java to use BasicStatsNoJobTask instead of OrcInputFormat to improve the accuracy of the input
fix an issue where the save all action ben't be fire on save
refactored methods in VisibleAdvance. java to improve code readability and maintainability
make reflector. start ( boolean ) and reflector. start ( boolean ) configurable
added support for dynamic number columns in EdgeDataTable and NodeDataTable to ensure proper handling of dynamic data columns in data laboratory
added null checks for repository, artifactId, and build plugins in ` RawPom. java ` to enhance code robustness by preventing potential NullPointerException
added null check for apiInfo before assignment to it to avoid potential NullPointerException when apiInfo is null
updated HeadersConfigurer and CacheControlHeadersWriter files to improve header configuration management and enhance performance
added debug logging and texture disposal methods in FlameRenderer. java to improve traceability and debugging during texture loading and texture destruction
added context menu functionality to the InsnListEditor to enhance user experience by allowing dynamic addition of items in the application
updated condition checks in CSSParser to improve input validation to ensure correct handling of character boundaries and prevent potential ArrayIndexOutOfBoundsException
added a system property to set the window's default look and feel to ensure the application uses the correct look and feel for better user experience
removed redundant'this'keyword and improved code readability in HostRoleCommandDAO. java to enhance code clarity and maintainability
( ) ) should not be unknown ( )
refactor swipe handling logic in WindowTransformSwipeHandler. java to improve clarity and maintainability of swipe actions
replaced HostDatabase with ColorStorage in ColorsActivity. java to enable color storage functionality in the application
refactor String class for improved readability to enhance maintainability and ease of understanding for future developers
added SLF4J logging functionalities across multiple classes to enhance logging capabilities and improve code readability
added a method ` getGlobals ( ) ` to return an array of entries from the map to provide access to the globals data associated with
added multiple calls to sendcoin in MultiSign34. java to ensure wallet sending functionality works as expected
test : migrate cufiltertest to junit 5 ( # 3495 )
replaced string concatenation with a constant for path separator to improve maintainability and readability of the code
changed the access modifier of the augmentSuccessViewModelObjects method from static to instance to allow external access to the map of augmentSuccessViewModelObjects
added assertions for field existence in InheritanceTest. java and updated field retrieval in TestUtil. java to improve test coverage and ensure accurate field retrieval in
removed the ` conf ` parameter from the ` Outlink ` constructor in multiple parser classes to simplify the instantiation by eliminating unnecessary configuration
removed the ` LexicalContext ` parameter from the ` ensureUniqueNamesIn ` and ` copyFinally ` methods to simplify method signatures and
added imports and modified the return statement in UseLambdaForFunctionalInterface. java to improve code clarity and ensure proper handling of unused imports
[ testng ] don't use appendclassselector in testnganttask
added a check for ` rootInput ` type in ` HiveCardinalityPreservingJoinOptimization. java ` to ensure that only ` Aggregate
added'pool'parameter to the Mapping constructor and updated its usage throughout the code to enhance modularity and improve registry management
swapped the assignments of x3 and y3 in the Intersector. java file to correct the calculation of the x3 and y3
add default implementation for messagedecoder. sbe ( ) and messagedecoder. sbelimit ( int ).
updated ElasticsearchContainerTest to use a dynamic version string instead of hardcoded version strings to improve flexibility and maintainability of the code
use bytebuffer. copy ( byte [ ], byte [ ], byte [ ], byte [ ], byte [ ] ) to
updated ClusterDefinition to use a version ID instead of a hard - coded cluster name to improve clarity and maintainability of cluster definitions
camel - ftp fixed the c error of camel - ftp
[ zeppelin - 3481 ] fix npe in interpretersettings. loaddependency ( )
updated the local assignment logic in Gen. java and added a new test class NoLocalsMustBeReservedForDCEedVarsTest. java
added a new file ` BuildEEBasicConstraints. java ` and modified ` ForwardBuilder. java ` to include a check for basic constraints
added a new method ` initAfterFirstDbConnection ` to ` JdbcPostgresqlDAO ` to initialize the database after a connection to ensure
updated WebSocket configuration to set maximum message size and added input buffer size validation in AbstractWebSocketConnection to ensure maximum message size is set and enforce minimum
refactor undeleteAll and rollback logic in SegmentReader. java and add unit tests in TestIndexReader. java to improve code clarity and
added null check for scopes in ClientRegistration. java and improved test cases in ClientRegistrationTests. java to enhance robustness by preventing NullPointerException
added null check for orderBy before adding to the explanation to avoid potential NullPointerExceptions when orderBy is null
[ java ] use hamcrest assertion instead of junit in clusterentrypointtest.
cloudstack - 8253 : don't allow vm to be in stopped state if the user vm be in stopped state
replace direct initialization of ` LogUtils. initHiveLog4j ( ) ` with a local variable ` initLog4jMessage ` to
added a check for the tasks list before processing the first item in AssetManager. java to improve performance by avoiding unnecessary processing when no tasks are
must be'''or''.
fix nullpointerexception when delete a relation with type ` ` id''
added error handling for empty barcode in Code128Reader and Code39Reader classes to improve robustness by handling scenarios where no barcode is found
replaced TreeSet with LinkedHashSet for storing CipherSuites to ensure predictable iteration order for storing cipher suites
modified the control character check in Escaper. java and adjusted the expected format in InternationalizationTest. java to improve code clarity and
[ sql ] don't allow multiple value in sqlprovider.
updated imports and added null checks for aliasChildren in InternalMNode. java to enhance code robustness and prevent potential NullPointerExceptions
added a method to retrieve the layout transition offset for a page in PagedView. java to improve page scrolling functionality for better user experience
refactor variable names and improve formatting in JavaTemplate. java to enhance code readability and maintainability by using more descriptive variable names
added accessibility setting for the method in WidgetInterceptor to ensure proper accessibility of the method in the application
added conditional logic to set the literal initializer and literal initializer based on the raw name to ensure that the literal initializer is only set for non -
make the ripper work on window too
added a " LooksFrame. 28 " menu item with a link to the HTTP host to the PMS server to enhance user experience by providing
[ flink - 3392 ] [ table - planner ] fix typo in getters.
added exception handling for ArrayIndexOutOfBoundsException in EncryptedSlideShow. java to improve robustness by preventing application crashes due to ArrayIndexOutOfBoundsException
improve logging and exception handling in Queue and FileCheckpointIO classes to enhance readability and maintainability of the code
replaced the original loading method of BattlePassManager with a new invocation before the avatar ' s postLoad to prevent a null pointer exception during the avatar loading process
updated Docker image names and command construction in PortForwardingContainer. java to improve clarity and functionality of SSH command handling
added a large array and forced garbage collection to prevent memory leaks during garbage collection
updated log level checks in StdErrLog. java and added new test assertions in StdErrLogTest. java to enhance logging functionality and ensure
fixed - rremotingservice. remoteservice ( ) and rremoteservice. remoteservice ( ) method throw
added methods ` isSelected ( ) ` and ` setSelected ( boolean b ) ` to ` MultiButton ` and updated the ` invertFirstTwoEntries
updated the import statement and Intent creation to reference the correct activity class name from UpNextActivity to NextUpActivity to ensure consistency in naming and prevent errors from incorrect class references
http : / / issues. apache. org / jira / browse / amq - 3573 - fix checkstyle violation
refactor RedisReactiveHealthIndicator to improve connection handling and ensure proper resource management to enhance reliability and maintainability of Redis connection management
refactor background and theme color retrieval in ProgramGridCell and Utils classes to improve code clarity and maintainability by centralizing theme color logic
rename callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
added multiple type adapter registrations for various components in ToolingApiLauncher to enhance type management and improve code maintainability
updated test cases in TestPayloadCheckQuery. java to include additional test cases to enhance test coverage for the query functionality
refactor ConsoleReader to improve buffer handling and add a new test for reading lines with a mask to enhance code readability and ensure proper functionality through testing
added user - specific command handling in BaseCommand. java to improve user feedback during command execution
move org. graalvm. compiler. test. modulesupport to org. graalvm. compiler. api. test
[ runtime ] remove unused constructor in slotsharinggroup
added a conditional check for Java 8 compatibility in StreamExInternals. java to ensure compatibility with Java 8 environments
updated texture files from " wheel. png " to " sys. png " and changed music and song duration from " cloudconnected. ogg
updated IntentFilter and receiver registration in Launcher. java to ensure proper registration and unregistration of the receiver
updated import statement for Cluster in HostsRemovedEvent. java to ensure correct usage of the Cluster class in the code
added introspection option and updated introspection handling in ClientDetailsEntity and ChainedTokenGranter classes to enhance introspection functionality and improve error handling in
replaced direct calls to ` write ` with ` writer. write ` and added a new ` htmlEncode ` method to ensure proper HTML encoding for
added link annotations for PhraseQuery, PhrasePrefixQuery, and SpanQuery in Query. java to enhance query performance by providing additional span
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` in ` CommentsInserter. java ` and ` CommentsParser.
refactor ` isLiteralString ` and ` isThisElementAnOperandInABinaryStringConcatenation ` methods to improve code readability and maintain
updated method signatures to accept ` Object. values ` instead of ` A. A ` and ` A. T. values ` to enhance flexibility
updated JwtPlugin and JwtPlugin to use generics for ThrowingFunction to enhance type safety and improve code clarity
refactor ` getUploaderBehaviour ` and ` setUploaderBehaviour ` methods to remove unnecessary context parameter and streamline preference handling
fix ( noclassdeffounderror ) : try to initialize final field in constructor
replaced direct instantiation of BitmapDrawable with Robolectric's newInstanceOf method to improve compatibility with Android's Robolectric framework
changed method name from ` isValidSEnding ` to ` isValidEnEnding ` and removed the ` char c ` variable to improve method
updated PageMarkerResources drawable from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to reflect the current page
added a new ` reinvocations ` variable and updated the log message formatting to improve clarity and consistency in error messages during backup completion
updated the topPadding calculation in DefaultLookAndFeel. java to correctly account for the inner height of the text area
added a break statement in the Recognize class to ensure proper flow control in the code execution flow
added haptic feedback functionality to Workspace, FolderNameEditText, and PopupContainerWithArrow based on user preferences to enhance user experience by providing
refactor formula cell type handling in ExcelBatchReader and add a new test for text formula in TestExcelFormat to improve code clarity and ensure correct
fixed bug 137453 - immutablefield no long report false positive for anonymous inner class method
added a user agent field and updated its assignment logic in HttpGetter. java to allow dynamic user agent configuration based on application settings
camel - aws2 - model - avro : fixed typo in model class name
changed log level from info to debug for file not found logging to reduce log verbosity for non - existent files
renamed QueueTest class to QueuedPipeTest to clarify the purpose of the test class
updated version check logic in BukkitMain. java to use OfflinePlayer class method to ensure compatibility with the latest version of the OfflinePlayer class
only once ( # 2 )
added vertexColor method and updated color handling logic in PShape3D. java to enable customizable vertex color settings and improve rendering behavior
updated method signatures and variable types in SchemaDotFormatter and DiagramRendererOptionsTest to improve type safety and clarity in handling primary and foreign key
removed unnecessary shadowMatrix variable and directly used matrix. getValues ( m ) to streamline code by eliminating unnecessary variable declaration
updated package structure and import statements in MetaRules, PythonDslProjectBuildFileParser, and PythonDslProjectBuildFileParserTest to
refactor class definition handling in GroovyEngine. java to improve code readability and maintainability
[ hawtio - 3 ] add plugin context listener to allow plugin to be inited via servletcontext.
removed redundant print statement in NativeCodeGenerator. java to streamline code for better readability and maintainability
replaced calls to ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with ` fireChangeEvent ( ) ` to improve
added unit tests for ` hasCause ` method in ` ThrowableAssert _ hasCause _ Test. java ` to ensure that ` IllegalStateException `
removed unused variables ` flattenName ` and ` packageName ` from ` AutomaticDependencies. java ` to streamline code by eliminating unnecessary variable
updated variable name from requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint. java to improve clarity and consistency in variable naming
danielwagnerhall : add ability to set a firefox profile in firefoxdriver
camel - 1868 : added description to route eip so we can plugin different route description.
refactor JavacTreeMaker to improve tree creation logic to enhance performance and maintainability of the code
added a line to set the edge weight in ImporterCSV. java to ensure the edge weight is correctly set for CSV processing
fix the issue that the tariff cost be in current month instead of a day
updated SQL queries to include an additional " adsrc " clause in DatabaseMetaData. java to enhance filtering capabilities for database queries
added a check to ensure that binarized sentences are not built by parser to prevent runtime errors
refactor User class to improve string representation to enhance readability and maintainability of the user's string representation
added null check for message body in MessageHelper. java to improve error handling and provide clearer feedback when the message body is null
[ hotfix ] [ runtime ] fix typo in task deployment descriptor factory
update rostermanager. isgroupvisible ( ) method to take owner instead of subjid
added test compile path to abstractjrubymojo ( thanks to kaarenilsen for point it out ) .
update method handle assertion to use the original return type instead of the original return type to ensure correct handling of method handles when the user class is
added imports for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory, AnalysisSPILoader, and LegacyHTMLStripCharFilterFactory
updated width and height checks in URLImage. java from ` > ` to `! = ` to improve clarity and correctness of
added a check to ensure the class name does not start with " META - INF / " and modified the logic for appending it to the list
updated ` ImageDownloadService ` methods to include ` final ` keyword for parameters and added background task execution based on application state to enhance code readability
updated assertions and logging messages in StackWalkerTest. java to reflect the expected number of values based on version checks
changed the access modifier of the ` addViewportJob ` method from protected to public to allow external access to the ` addViewportJob ` method
removed the'partitions'parameter from the buildFlow method in SimpleWordCount. java to simplify the flow construction by eliminating unnecessary parameter
removed redundant server configuration settings in TestDatabase. java to streamline server setup and improve code clarity
added null and empty check for block in NodePathsConvertOperator and modified index handling in SchemaQueryMergeOperator to improve robustness and prevent potential
added functionality to retrieve the total harvesting time in multiple classes to improve the display of the audio call's harvesting time for
updated font drawing parameters in ParticleEditor. java to improve rendering quality and enhance visual presentation
added Hadoop environment configuration handling in UpgradeCatalog240. java and corresponding tests in UpgradeCatalog240Test. java to ensure proper configuration management for Hadoop
added transparent background color to the SvgViewerFactory to improve visual presentation by allowing transparent background elements
removed ` @ Config ( minSdk = M ) ` annotation from ` ShadowKeyguardManagerTest ` and ` ShadowKeyguardManager ` to
updated the ` containsExactly ` method to accept an ` asList ` parameter instead of an ` accumulate ` method to enhance flexibility by allowing varargs as an
updated Bucket4jFilterFunctions to use refillGreedy instead of simple Bandwidth. simple and added a check for non - empty keys
updated GermanAnalyzer, GermanStemmer, and WordlistLoader classes to enhance functionality and improve code clarity
added support for materialized views in the optimizer and optimizer classes to enhance query execution capabilities based on materialized views
added exception handling for NoClassDefFoundError in REngine. java to improve error management and prevent application crashes
refactor span handling in TraceWebFilter and TraceWebFilter to utilize a new ` SpanAndScope ` class to improve span management by ensuring
updated exception handling in AbstractUpdateCommandStep. java to handle potential null causes to improve robustness by providing a default message when an exception is
updated exception handling in CommonsHttpSolrServer. java to include base URL as a parameter to enhance error reporting by providing context on the base URL
modify the return value of getLandscape ( ) in HSSFPrintSetup. java to ensure correct handling of print setup records
modify return statement to handle null input more gracefully to improve robustness by preventing potential NullPointerExceptions
added input validation for argument names in ArgDesc. java to ensure only valid argument names are accepted to avoid runtime errors
added support for background location updates in AndroidLocationPlayServiceManager to enhance location management by allowing customizable background location updates
updated condition to check for GL10. GL _ POINTS instead of GL10. GL _ POINTS to ensure correct handling of primitive types
trufflestring : fix arrayindexoutofboundsexception
added a method to set command list in ComboBox to enhance command list management functionality in the ComboBox component
nifi - 587 : escape file name with forward slash ( # 3852 )
updated shell commands in ZkCLI. java to use localhost port numbers instead of SOLRHOME and collection1 to ensure compatibility with the latest
updated equality checks in FirmwareUpdateProgressInfo, BridgeHandler, and WemoLightHandler to use `. equals ( ) ` instead of
added a conditional check for remoteGrpcStatus before posting the error message to ensure that the error message is only sent when the remote grpc
refactor method signatures and improve formatting in several Java files to enhance code readability and maintainability
fix chunkmanager crash when load entity with entity that don't exist
added a method ` getErrorString ( int error ) ` to return specific error strings for various EGL - related errors to improve error handling and provide
added a method to retrieve supported locales and updated InfoRequestHandler to use this method to improve locale handling and enhance error reporting for unsupported locales
updated server URI to use " http : / / myhost : 1234 / " instead of " server : / / tests / " to ensure
added helper list to the construction list to enhance the user experience by allowing easy addition to the helper list
added handling for the case when the length is - 2 in GlyphLayout. java to skip the first element of the escape sequence to improve
added security permissions and refactored context class loader handling in Transport and TCPTransport classes to enhance security and maintainability of context class loader management
updated folder handling logic in ReceiveExternalFilesActivity. java to ensure proper synchronization and folder management based on file path
[ testng ] fix npe in serviceloader. load ( )
removed unnecessary debug logging in BarrowmanCalculator and TubeCalc classes to streamline code for better readability and maintainability
updated column retrieval logic in TimelineControllerImpl. java to differentiate between nodes and edges to improve data handling for node and edge data structures
added a protected method to register extra components in the BaseBrokerStarter class to enhance modularity and maintainability of the broker starter functionality
added a test for bug4658 in MultiCfQueryExecIT. java to ensure correct handling of order by clause in query execution
peergroup : don't use the preferred version if witness support.
fixed an issue with the abstract builder not be able to change the value of the ` ` current'' in the tree.
remove confignode _ simple _ consensus _ snapshot _ threshold and add retry policy for ratis client
refactor multiple Java files to improve code structure and readability to enhance maintainability and readability of the codebase
added a check for the ManagedService annotation before unregistering JMXHelper to ensure proper registration and unregistration of JMXHelper instances based on the annotation
tika - 3486 -- fix for non - unicode entry name in packageparser
an an a - - - - - - - - loop................
added methods to lookup generic interface and superclass types in TemplateRegistry to improve type handling and enhance type lookup functionality for parameterized types
updated ByteArrayOutputStream constructor parameters from 512 to 1028 to optimize memory usage and improve performance
added comments for Chinese, Arabic, Korean, and Persian language in PlayerSettingsScreen. java to clarify the purpose and
refactor byte array initialization and processing logic in TransferCompletionHandler. java to improve performance and ensure correct handling of remaining bytes during transfer
updated window focus listener methods to use WindowAdapter instead of WindowFocusListener to improve clarity and consistency in handling window focus events
added a null check for the source node before throwing a SemanticException in SemanticAnalyzer. java to improve error handling for invalid table aliases
added scaling calculations for a bounding box in SkeletonRenderer to improve the visual representation of skeletal meshs
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to provide access
added @ ComponentScan annotation to SpringWebConfig. java to enable the use of ComponentScan annotations in the application context
removed the ` getAccount ( ) ` method from the ` UserListItem ` class to streamline the code by eliminating unused methods
added tests for package installation in ShadowPackageManagerTest and modified processName assignment in ShadowApplicationPackageManager to ensure proper handling of processName and
refactor AvailableSettings class for improved clarity to enhance maintainability and readability of the code
added TransactionCapsule and ReceiptCapsule imports to TransactionTrace. java to enhance transaction tracing capabilities in the application
[ hotfix ] [ core ] add option to disable the shuffle member list
replaced Text with CrawlDatum in SegmentReader. java to improve data handling by using CrawlDatum instead of Text
refactor JsonDeserializer class to improve code readability to enhance maintainability and ease future updates
refactor TsfileDBConfig to use ThreadLocal for fetch size management to improve thread safety and performance during concurrent access
updated error message from " trunk ( ) only takes STRING / CHAR / VARCHAR types as second argument " to " trunc ( ) only requires STRING
removed unused import of ExecutionContext from TaskletStep. java to streamline code by eliminating unnecessary dependencies
initialize the title variable to an empty string to ensure a default value is set for the title variable
added handling of an empty response body in AsyncHttpClientCall. java and corresponding unit tests in AsyncHttpClientCallTest. java to ensure proper response
add a deprecate interface embeddedserverinstance ( # 2491 )
use reflection to access jabrefframe. getmacevents ( ).
renamed the test class from ` SecurityTokenServiceAuthenticationMetaDataPopulator ` to ` SecurityTokenServiceTokenFetcher ` to clarify the purpose of the
modified the ` toEnum ` method to return an instance of ` Enum ` to enhance type handling by allowing the method to return an enum type
changed the visibility modifier of the'hideUnprivilegedObjects'variable from private to private final to ensure that the'hideUnprivileged
changed log level from info to fine in ThreadedAcousticScorer. java and updated AudioDataSourcesTest. java to improve
added support for saving Giphy Android 11 in IOUtils. java to enhance compatibility with Android Q and improve video playback handling
fix npe in bytearraytype when there be no variableinstanceentity
refactor EhCacheTicketRegistry, LdapPasswordPolicyEnforcer, GoogleAccountsService, SamlService, and SamlCompliantUnique
replaced manual logger instance retrieval with ` computeIfAbsent ` to simplify code and improve readability
hbase - 17425 remove unused class DataOutputoutputstream
updated transaction ID from " bucketid " to " bucketid " in TestAcidOnTez. java to ensure accurate tracking of column
changed log level from info to debug for enhanced class logging to reduce log verbosity and improve performance during development
added default provider name for Conscrypt to enhance security by providing a default provider name
added Captor annotation processing for instance fields in MockitoBeforeTestNGMethod to enhance test reliability by processing captured fields
added error handling for missing test cases in TestSuiteBuilder. java to improve robustness and provide clearer feedback when no test cases are found
updated import statements and refactored prefix checks in GroovyAutoComplete. java and GroovyLanguage. java to enhance code readability and maintainability by
use graphhopperosm instead of graphhopper to initialize graphhopper
simonstewart : use clientconfig. geturl ( ) instead of httpclientfactory. createclient ( url )
changed the visibility of mHideSysUiScrim from final to non - final and added functionality to manage visibility of the system UI scrim
updated method signatures and exception handling in various classes to improve code clarity and ensure proper cancellation of calls
refactor swipe handling logic in WindowTransformSwipeHandler. java to improve clarity and maintainability of swipe actions
updated RequestMatcher interface to extend org. springframework. security. web. util. matcher. RequestMatcher to ensure compatibility with Spring's
updated method signatures in DeferredAttr. java and added a new abstract class ImplicitLambdaConsideredForApplicabilityTest. java with
[ j2kt ] make boxing test work with j2kt
added unit tests for default and density qualifiers in DeviceConfig to ensure correct handling of display metrics in the application
replaced IOException with RuntimeException in ExternalViewReaderTest. java and updated timestamp initialization in PinotDataTypeTest. java to improve error handling and
updated the icon used in the RootCursor from a logo drawable to a mipmap icon to ensure the application displays the appropriate launcher icon
added errorBuilder. setContentText ( content ) to FileUploader. java to enhance error handling by setting content text
updated the implementation of ConcurrentHashMap to improve performance and maintainability of the code
added methods to adapt user trades in AbucoinsAdapters and AbucoinsTradeService to enhance trading capabilities for better
updated method calls and logic in PlotSquared, Claim, and SetBlockFast _ 1 _ 8 to improve code clarity and maintainability by
simonstewart : modify the htmlunit driver to make use of capability too .
added support for VARBINARY data type in BlobType. java to enhance compatibility with VARBINARY data type handling
refactor cookie handling logic to improve readability and maintainability to enhance code clarity and reduce redundancy in version checks
fix thread safety issue in libffitecontext
updated InboundBuffer to use ContextInternal instead of Context to enhance compatibility with Vert. x thread handling
modified timeout settings and introduced a new method for handling server timeouts to improve timeout management and enhance test reliability
corrected a typo in the usage message from " UniocdeData. txt " to " UnicodeData. txt " to improve clarity and
fix the unit test error of cxfmessageheadersrelaytest
updated multiple UI component classes to improve code organization to enhance maintainability and readability of the codebase
added support for BoosterSet in the ComponentAssemblySaver and updated return values in BoosterSet to enhance functionality and ensure correct handling of
added support for password authentication on jabref
corrected the spelling of " BLOCKCHAIN __ FORK _ COUNT " to " BLOCKCHAIN _ FORK _ COUNT " across multiple files
replaced an InternalError throw with a return statement in the Class. java file to simplify the code by returning false instead of throwing an error
[ hotfix ] [ test ] fix checkstyle violation in testipcutil
removed the chunkedTransfer parameter from the HTTP request handling in NettyRoutingFilter. java to simplify the code by eliminating unnecessary transfer encoding handling
added clearAttributes ( ) method to PatternTokenizer. java to ensure proper handling of tokenization attributes
improve after ( ) to return immediately if a test have definitely fail , rather than wait the full time
added compaction functionality to the SemanticAnalyzer and SessionState classes to enable proper handling of compaction status during query processing
[ zeppelin - 5451 ] add jar file filter to docker interpreter process
hbase - 25813 hbaseadmin # gettableregions ( byte [ ] ) shouldn't call gettableregions ( )
ignore partial escape analysis test.
updated the ` calcXBounds ` method in ` BarLineChartBase `, ` CombinedChartRenderer `, and ` Renderer ` classes
added try - finally block to ensure resources are released properly to improve resource management and prevent potential memory leaks
added resource release for headerBuffer in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and updated ` Java17TypeSignatureBuilderTest ` to use the
added null check before closing the ResultSet in JdbcExecutor. java to avoid potential NullPointerExceptions during execution
updated driver version from - 1 to 10 in DerbyDatabase. java to reflect the latest features and improvements
fixed bug 146373 - ustringbufferlength no longer report false positive for empty string.
removed error logging statement from RemoteSparkJobMonitor. java to streamline error handling and improve code clarity
changed the return type of createDb ( ) from void to Connection to ensure proper resource management and prevent potential memory leaks
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
hbase. hstore. hbase. hstore. compaction. max. compact. size. offpeak should be configurable
added unit tests for ` DepositAddress ` and ` BitstampDepositAddressJSONTest ` to ensure proper unmarshalling of deposit addresses
replace IllegalStateException with an IllegalException for buffer exceeding capacity to improve error handling by signaling an exception instead of an IllegalStateException
updated the path comparison logic in ProjectView. java to ensure accurate path handling for deleted directories
updated InvocationFinishedEvent to implement MetricsEvent instead of Event to improve clarity and consistency in event handling
added support for multicast network interface retrieval in OptionsTest. java to enhance network compatibility checks for multicast connections
added a loop to check for valid checksums in ChangeSet. java to ensure that only valid checksums are processed in the validation process
added clone ( ) method to BufferedChecksumIndexInput class to ensure proper cloning of IndexInput objects
update return statement to use radius instead of Math. sqrt to improve accuracy of radius calculations in the Circle class
added a conditional check before setting mFrequencyBand in P25Channel. java to ensure that mFrequencyBand is only assigned if it matches the
replaced instances of ` tapSquareSize ` and ` inTapSquare ` with ` tapRectangleWidth `, ` tapRectangleCenterY `,
set default _ replicate _ on _ write to false by default
added a ` lastFillTime ` query parameter to the ` CryptoFacilitiesAuthenticated ` class and implemented date formatting in the ` Util ` class
added ` getDelegate ( ) ` methods to ` TraceCallable ` and ` TraceRunnable ` classes to provide access to the delegate for improved tracing capabilities
refactor error handling and sync actions in FileActivity and FileDisplayActivity to improve code clarity and enhance synchronization functionality
added stream writable method to ` quiche _ conn _ stream _ writable ` and updated imports in ` ForeignIncubatorQuiche
added a boolean parameter to the method call in JavascriptContext. java to enable the use of a specific context in the JavaScript execution process
removed the Align. left parameter from TableCell constructor to simplify the constructor and improve code readability
added TracingAutoConfiguration class with tracing capabilities to enhance tracing capabilities in the application
added a parameter to the content of the first period before adding it to the output to ensure that the first period is properly appended to the start
improve the performance of the serverqueryexecutorv1impl # getprunedqueryablesegments ( )
updated the VertxBufferTest. java file to improve test coverage and ensure compatibility with recent changes
refactored date extraction logic in MessageSubmissionChunk. java and added unit tests in TestMessageSubmissionChunk. java to improve code clarity and
changed the visibility of the mContext variable from private to protected to allow subclass access to the mContext variable
removed unnecessary imports from ShowTablesOperation and ShowViewsOperation to streamline code by eliminating unnecessary dependencies
added a new exception class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplateTests ` to use this new exception to improve error
[ hotfix ] fix checkstyle violation in jobcoordinationservice
replaced the implementation of ` bitsToHumanReadable ` with ` mimeType2HUmanReadable ` and introduced a new ` bytesToHumanReadable `
removed unnecessary type check for TieredMergePolicy in TestUpgradeIndexMergePolicy. java to streamline the code for better readability and maintain
added a check for mOverviewStateEnabled before proceeding to prevent further processing when overview state is not enabled
updated error logging message in CpuNDArrayFactory. java to improve clarity of error messages related to CPU support
modified the ` loadSettingModels ` method to accept an ` InputStream referencePropertiesInputStream ` parameter to enhance flexibility by allowing different input stream types for
added null checks for input parameters in FilterLeafReader to prevent NullPointerExceptions during initialization
added key size provider to jceccRMfencryptor, and add unit test
added exception message to IOException in NetSocketReader. java and removed unused constructor in SoftEndOfStreamException. java to improve error handling by providing
remove @ inject ( ` ` @ inject'' )
updated assertions in ` BundledDistributionTest. java ` and added database user assertions in ` PostgreSQLTest. java ` to improve test coverage
[ flink - 25833 ] [ stream ] add ability to specify job name for pipeline
refactor scale calculation to account for two - panel layouts to improve layout responsiveness based on device profile type
updated IcePlainsBiome class to extend SnowyBiome and improved its structure to enhance the structure and maintainability of the
removed zone parameter from ` getMaxTime ` and ` getMinTime ` methods in ` DataUpdateManager ` and ` StorageUtils ` to simplify method
[ j2kt ] add isqualified flag to thisreference.
fixed typo in xhamster ripper
fix arrayindexoutofboundsexception in glowworld
[ hotfix ] [ table - planner ] fix a bug in oracledialect. gettable ( )
fix a syntax error in the flutter console filter
added functionality to select and deselect all files in the FileMenuFilter class to enhance user experience by allowing selection and deselecting all files
[ java ] update termoffset calculation in networkpublication to use mask.
fix wrong comment in guildupdateownerevent
fix player. in portal tick when it's in creative.
added functionality to manage chart data compression in ClusterMonitorTileSkin. java to enhance the visual representation of chart data
refactor multiple codec template classes for consistency to improve code maintainability and readability
updated data type handling in Base64. java to use long instead of int to improve precision and prevent potential integer overflow issues
removed unnecessary null check for header in RendererConfiguration. java to simplify code for improved readability and maintainability
/ - - - - - - - - - - - - - - - - - - - - - - - - - - -
updated import statements and refactored order creation in HitbtcAdapters. java to enhance code clarity and maintainability by using specific order
fix checkstyle issue in io / network / segment / llc - segmentdatamanager. java ( # 787 )
updated the description _ uri for the JRuby scripting category from " automation : jruby " to " automation : jrubyscript
updated the way displayName is set in the write method to improve clarity and maintainability of the code
modified the conditional check for exchangeAmount in ParticipateAssetIssueActuator. java to include additional validation for preciseExchangeAmount and exchangeAmount
removed unnecessary loop condition in FeedUtils. java to streamline code by eliminating unnecessary iterations
added a new test method ` testHDF4 ` to ` HDFParserTest ` to validate the reading of HDF4 files from a specified
[ calcite - 6092 ] add workaround for mondrian - 6092
removed unnecessary whitespace in IDEEditor. java to improve code readability and maintain consistency
added methods to quietly close multiple AutoCloseable resources to enhance resource management and prevent potential memory leaks
updated the position button string from'posBtn'to'common _ yes'in RemoveFileDialogFragment. java to improve user experience by providing
added checks for srcWidth and dstWidth and dstHeight before drawing an image to ensure that drawing operations are only performed when valid dimensions are provided
replaced ReflectionHelpers with direct reflection calls in UnsafeAccess. java to improve performance and maintainability of the code
fix regex pattern for domain name ( # 3481 )
updated conflict handling logic in CachedRowSetWriter. java to use a counter for conflicts instead of a boolean flag to improve clarity and maintainability
fix an npe from the pubspec. yaml file ( # 4383 )
added a check for reference equality in ReferenceMemory. java to ensure proper handling of reference assignments and prevent potential NullPointerExceptions
added functionality to inject seed files and improved error handling in the Injector class to enhance input management and provide clearer logging for missing seed files
added a condition to check if ` hideOriginal ` is both an instance of ` ItemInfo ` to ensure that ` originalView ` is only
[ java ] fix off - by - one error in maxnodes calculation.
add log if the texture coordinate type be not support.
added error handling for non - existent barcode files in EncodeActivity, SupplementalInfoRetriever, and MatrixUtil classes to improve robustness
[ hotfix ] [ connector ] add seek ( ) and close ( duration ) method to tracingconsumer and tracingproducer
[ ds - 3482 ] fix indexoutofboundsexception in findupdate ( )
modified the initialization of ` convertedValsList ` to directly create a new list from a collection to simplify the code and improve performance by eliminating
added a deprecated constructor to the AbstractTimer class to indicate that the constructor should no longer be used
added a warning message for nightly builds in MainWindow. java to inform users about nightly builds
add a comparator to sort response by team name to sort response by team name
updated return statement from " Remove unnecessary throws " to " Remove unnecessary ` throws. " to improve clarity and accuracy of error messages
deleted the CacheApplication class and replaced it with CommonsApplication in several files to streamline the codebase by eliminating unnecessary components
replaced calls to ` realObject. getApplicationContext ( ) ` with ` RuntimeEnvironment. application ` in ` ShadowContextImpl. java ` to improve
refactor StatisticsServlet class to improve code structure to enhance maintainability and readability of the code
added SDK version checks before updating configuration in RuntimeEnvironment. java to ensure compatibility with devices running KitKat or higher
added a new constant for " VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS " and updated its usage in the
refactor ApplicationImpl, NodeImpl, and Witness classes to improve code organization and maintainability
add null check for old index name to avoid npe
added package imports for XML resolver helpers and readers in CheckPackageAccess. java to enhance package access control for XML resolver functionality
( )
bugfix : replace loopbegin with loopexitnode. replacefirstinput ( )
replaced RecyclerView with WidgetsRecyclerView in SearchAndRecommendationsScrollController. java to enhance layout management by utilizing a WidgetsRecyclerView instead
added a check for terminal support in ConsoleReader. java to ensure that the terminal is only used when supported
changed the data type of ` fiveSeconds ` and ` timeAllowed ` from ` long ` to ` int ` and updated related logic in `
added validation for session validity in AbstractSessionCache and improved session handling in RemoveSessionTest to enhance session management reliability and ensure proper handling of
refactor index change handling in ChangedIndexChangeGenerator. java to improve code readability and maintainability
updated ButtonGroup. java to use ArrayList instead of Vector and added action listener methods to improve flexibility and maintainability of button management
updated UserManagerCompat and UserManagerCompatVN classes to improve compatibility with newer Android versions
added methods to retrieve database major and minor version in MockDatabase, AbstractDatabase, HibernateDatabase, and ReorganizeTableStatement to enhance database
replaced usage of ` Set ` with ` MapDifference ` and updated related logic in ` ActionGraphCache. java ` to improve code clarity and
added LockDatabaseDesc and UnlockDatabaseDesc classes to enhance database management capabilities in Hive query execution
refactor RankingTopComponent and RankingUIModel to use instance variables instead of direct assignments to improve code readability and maintainability by eliminating
added disconnect message handling in HandshakeHandler. java and updated logging in NodeImpl. java to improve handling of disconnection events and enhance logging clarity
added a test for setting and deleting a storage group in the IoTDBAuthorizationIT class to ensure that the storage group deletion functionality works as
chore : update to v1beta1, update to v1beta2
added variable type validation in ` Assertions. java ` and ` FindMissingTypes. java ` to improve error handling for missing or malformed variable types
added two new test methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to facilitate
updated import statements and validation logic in CountersManager. java to improve code clarity and ensure proper handling of metadata buffer sizes
updated the ` toString ( ) ` method in ` MultiSteps ` and ` SendEmail ` classes to use placeholders instead of string concatenation to improve
added a check for null joinKeys and initialized it with an array to ensure proper handling of join keys in the join process
added PrincipalResolver to WebAuthnConfiguration and updated authentication handler registration to enhance the authentication handler's capability to support custom principal resolution
added searchPaths parameter to the addSettingsFromFile method in XcconfigStack. java and updated related tests in XcconfigParserTest.
changed fields from non - final to final in Oracle. java to enforce immutability and improve code clarity
( ) ) should not create checkpoint
[ hz - 18471 ] throw unsupportedoperationexception for query with non - exist function
add option to disable logging of the world test.
added a check to throw an exception for LocalVariable instances in LambdaRewriter. java to ensure proper handling of LocalVariable instances in the code
added MySQL - specific handling in CreateTableGenerator to ensure proper null handling for MySQL databases
make sure contextfactory be disassociate when the current thread be close
updated RecoveryHandler and SimulationListHandler to set ejection delay when stageNr is zero to ensure correct motor configuration based on stageNr
renamed functionalrunnerconfig to beandefinitionorderrunnerconfig to improve clarity and consistency in method naming
refactored methods in TransactionUtil2. java to improve code readability and maintainability
updated the ` validateIssuerClaim ` method to accept an ` Optional < OAuthRegisteredService > ` parameter to enhance security by allowing optional issuer resolution
updated the ClusterState class to handle null collection references more gracefully to improve robustness by ensuring a valid DocCollection is returned instead of null
replaced ` getStyle ( ). setAlignment ( align ) ` with ` getAllStyles ( ). setAlignment ( align ) ` to improve consistency
added foreign database and schema names to ForeignKeyColumn, ForeignKeyColumnMutator, and related classes to enhance the flexibility and usability of foreign key
[ java ] throw a timeoutexception when fail to join leader.
replaced static imports of shadowOf with a private method shadowOf in ShadowActivity. java and ShadowBluetoothDevice. java to improve code readability and
refactor path selection logic in FileSelection. java and add a new test for bug fixes in TestBugFixes. java to improve robustness
add a deprecated onInventoryTick method in IForgeItem and IForgeItemStack, and deprecate onInventoryTick method in IFor
use file. write ( byte [ ] ) instead of file. write ( )
added a null check before calling invalidateOptionsMenu ( ) in SingleUploadFragment. java to avoid potential NullPointerException when getSherlockActivity ( )
refactor widget binding logic and error handling in Launcher. java and PendingAddItemInfo. java to improve code clarity and maintainability by ensuring
[ ecobee ] add capability for air pressure, quality, cobee pPM, and voc pPM to the thing (
reformatted code for improved readability and consistency to enhance maintainability and readability of the code
added " AAPT " and " AAPT2 " to environment variables in Genrule. java and updated GenruleTest. java
truffleruntime. dumpaccesstable ( ) should check trufflecompileroptions. truffleruntime. dumpaccesstable ( )
added null check before disposing of the message to prevent potential NullPointerException when the message is null
updated access modifiers and added initialization methods in various classes to improve accessibility and ensure proper initialization of transaction cache
updated log messages in CoreContainer. java to improve clarity and maintainability of warning messages
modified exception handling in CategoryPlotTests to use fail instead of e. printStackTrace to improve error handling and provide clearer feedback
replaced ByteArrayOutputStream with SmallByteArrayOutputStream in IOSImplementation. java and added a new SmallByteArrayOutputStream class to improve handling of small byte arrays and
' should'' and'should'' to'and.
updated JDBC connection parameters in AbstractDIHJdbcTestCase. java to use shutdown instead of close to ensure proper resource management during database operations
added null checks for firstExchangeCompletedTimestamp and lastExchangeCompletedTimestamp in RouteInfo. java to enhance robustness by handling potential null values gracefully
updated the javadoc method to use the default locale instead of the default locale to improve code clarity and maintainability by utilizing the default language for
modified the condition to check if the result is in a non - empty list to ensure that the completion logic only proceeds if it is in
updated argument handling in HybridClusterIntegrationTestCommandLineRunner. java to accommodate a new command line option to improve command - line argument
updated output format handling to support both HTML and SVG formats to enhance flexibility in output format customization
updated condition in DeviceProfile. java to check for non - QSB margin to ensure correct behavior when QSB margin exceeds hotseat bar
added ` equals ` and ` hashCode ` methods to ` AnimationList `, ` SceneKey `, and ` GltfModelKey ` classes
added a timestamp buffer and corresponding getter and setter methods in the AbstractGenerator, HttpGenerator, and HttpConnection classes to enable setting of the timestamp
replaced instances of Adler32 with CRC32 in Store. java to replace Adler32 with CRC32 in the code
set xen. heartbeat. interval to ` ` any # of seconds''
added a new warning named ZERO _ AREA _ FIN and updated warning handling logic in FinSetCalc. java to improve warning handling and ensure
[ beam - 3392 ] fix json serialization of metadata in elasticsearchio ( # 3392 )
hhh - 14632 add support for date _ trunc ( ) function in h2
added memory pool error handling in MetricUtils to improve error reporting for memory - related issues
added a boolean variable ` useJavaScript ` and modified exception handling in ` UserContext `, ` FileAccess `, and ` FileTreeNode `
[ type ] improve error message for non - generic type
[ te ] change default backoff path from / generateanaliesinrange to / replay
added a new entry for a specific proposal ( 1 ) and updated return statements accordingly
refactor the badge update logic in AllAppsContainerView to improve code readability and maintainability by iterating over child views directly
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
( ) ) should be start ( ).
removed conditional check for WORKSPACE _ CUSTOM in Cling. java to streamline code by eliminating unnecessary checks
[ gr - 25836 ] remove assert statement from trufflereadializations. java
added @ Ignore annotation to the shadowInvocationWhenChildIsInstrmented and shadowInvocationWhenChildIsInstrumentedButUnshadowed methods
updated import statements in ItBit demo files to remove unnecessary versioning to streamline dependencies and improve code clarity
ww - 4446 fix npe in profile activation and scope interceptor
updated Utils, ApplicationUtils, AsyncSocketFactory, and Whois classes to be final and added private constructors to ensure immutability of utility classes
added try - with - resources for object input stream handling to improve resource management and handle potential IOExceptions
replaced instances of ` o. getClass ( ). getName ( ) ` with " java. util. Vector " and ` java. util.
added ` tableNameWithType ` parameter to the warning log for invalid retention time to provide more context for debugging purposes
added trimming to fragmentList size checks in QueryExecutorImpl. java to ensure proper handling of empty fragmentList values
fix modfileresourceloadexception cause by invalid file path.
refactored node and edge transformer groups to use builder instead of node and edge builders to improve clarity and maintainability of the code
refactor conditional logic in RecentsView. java to improve readability and maintainability of the code
refactor CalculatorRestEndpoint and CalculatorServiceImpl to use BMIViewObject instead of Map to enhance functionality by integrating BMIViewObject for better
simplified the comparison logic in QueryCommand. java to improve code readability and maintainability
fix damage calculation for haybale block
refactor environment symbol handling to use enhanced for - loop and improve code clarity to enhance readability and maintainability of the code
added support for custom plugin properties in OptionsParser to enhance flexibility in plugin configuration management
updated the condition to check if the hashTable is not empty or not in HashJoinBatch. java to enhance the robustness of the join
added unit tests for ` Timestamp. of ` and ` Timestamp. onEpoch ` methods to improve test coverage and ensure correctness of timestamp formatting
[ java ] remove unused ` archiveCtx ` field in cluster service.
added a condition to check if the method is notCompiled before comparing invokerType to ensure that the method type is valid before proceeding with compilation
added new test cases for image2 and image2 join functionality in various test classes to enhance testing coverage and ensure correct functionality through comprehensive testing
refactor TogglableFlag to improve default value handling to enhance clarity and maintainability of the code
updated logging statements in DockerClientFactory to use placeholder syntax to improve logging readability and maintainability
added a condition to return early if the platform is ANDROID to improve performance by avoiding unnecessary processing on Android platforms
updated assertions in RoutesTest. java to use Hamcrest matchers to improve readability and maintainability of the test code
added new functional interfaces for Byte, Float, and Short predicates, along with their corresponding functional interfaces to establish a framework for handling different numeric types
changed the return type of ` getSubsColor ` from ` int ` to ` String ` and updated related methods accordingly to improve type handling and
added a conditional check before deregistering the invocation registry to ensure that the invocation registry is only deregistered if the future is complete
replaced the ` flush ( ) ` method with the ` output ( ) ` method in ` AbstractWebSocketConnection. java ` to streamline the
added a check for the " redirected " flag in the intent and set the " Redirected " flag to true in the LoginActivity to ensure
added ShadowCheckedTextView class to enable testing of CheckedTextView functionality in the Robolectric framework
added Serializable interface to ParserState and made GETTER _ CACHE transient in AccessorProperty and Property classes to ensure serialization compatibility and prevent potential serialization
added " identrustdstx3 [ jdk ] " to VerifyCACerts. java to enhance certificate validation for identrust
replaced the context attribute setting for TEMP _ DIR _ CONFIGURED and context . TEMP _ DIR to null to standardize the attribute setting logic for temporary directory configuration
fix muc room occupant. getroom ( ) to return the room name.
refactor QuicConnection, QuicSession, and QuicConnection classes to improve session management and context handling to enhance code clarity and maintainability
replaced direct calls to writer. setMergeScheduler with writer. getConfig ( ). setMergePolicy ( ) and writer. setMergeFactor (
refactor code to improve readability and structure to enhance maintainability and clarity of the code
refactor default value handling in AddDefaultValueChange. java to utilize ComputedDateValue and ComputedNumericValue to improve code clarity and maintainability
refactor NbtScoreboardIoService to improve code structure to enhance maintainability and readability of the codebase
[ saml ] don't store service provider metadata if it don't exist
changed access modifier of ` printer ` from private to protected and refactored printer initialization logic to allow subclassing of ` GraphPrinter ` and
added BigDecimal import and updated order's average price calculation in HuobiAdapters. java to enhance the accuracy of order's
updated ` ProjectionOperation ` and ` TypeBasedAggregationOperationContext ` to use ` Field ` instead of ` String ` to improve type handling
modify player connection handling in FakePlayer. java to check for the presence of a player before adding it to the player connection to ensure that the
added ConstantState implementation in FolderAdaptiveIcon. java and ShiftedBitmapDrawable. java to enhance the handling of ConstantState and improve
refactor SPDYClient to use a new AsyncSPDYConnection and AsyncSPDYConnection for improved connection handling to enhance code clarity and maintainability
[ 3.0 ] fix nullpointerexception when serialize a protostuff object
pdfbox - 2576 reformat source to meet checkstyle criterion
refactor BarrowmanCalculator to improve code readability to enhance maintainability and facilitate future updates
don't show axis number if there be only one number
replaced setFilter and setWrap calls with unsafeSetFilter and unsafeSetWrap methods to improve performance by using unsafeSetFilter and setWrap methods
updated method call syntax in XmlWorkflowServiceImpl. java to improve code readability and maintainability
added SSL context handling for HTTPS connections in CustomUrlJob. java and created CustomUrlTrustEverything. java for SSL connections to enhance
refactor encoding handling to use a new method for retrieving the real used clock rate to improve code clarity and maintainability by encapsulating related functionality
refactor TextureAtlas class to improve code readability to enhance maintainability and facilitate future updates
updated ProjectGenerator to return module name instead of product name and added a method to set module name in AppleLibraryBuilder to improve clarity and functionality
[ hotfix ] [ test ] fix race condition in testslot # finishreleaseprocess
# 133 - add test for findids with inheritance
replaced the ` closeFrame ` variable with a ` rbuf ` variable and updated the ` read ` method to ensure the response header is correctly
[ wasm ] fix a bug in wasmfunctionnode that could lead to stack overflow.
[ log4j2 - 3482 ] add ttl to log table creation ( # 3482 )
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and improved parameter handling in CustomPreconditionWrapper and XMLChangeLogSerializer
replaced the use of ` QueuedThreadPool ` with ` HandlerCollection ` for server management in ` DeploymentExceptionTest. java ` to improve thread
added error handling for Fresco initialization in CommonsApplication. java and modified VectorDrawable creation in NearbyController. java to improve robustness
modify return statement to handle null or empty object names to improve robustness by preventing potential NullPointerExceptions
updated exception message from " could not find file " to " could not open file " to improve error handling by providing more informative error messages
[ flink - 15836 ] [ table - planner - blink ] set default planner and executor factory to blink _ plan
updated variable names and method calls in KeyTool. java for better clarity to improve code readability and handle potential null values more gracefully
added a @ Deprecated annotation to RuntimeOptions. java to indicate that these options are obsolete and should not be used in future development
replaced manual byte encoding with a call to ` str. getBytes ` to simplify code and improve performance by eliminating unnecessary byte array creation
added a new interface PermissionEvaluator with a method for permission evaluation to provide access control for permission checks in security expressions
added handling for the ERASE _ LINE _ ON _ FINISH option in LineReader and updated prompt handling in LineReaderImpl to improve
master : don't try to connect to the same server if it's already online
replaced references to CALC _ MERKLE _ ROOT _ FAILED with BLOCK _ SIGN _ ERROR in multiple files to align error handling with
refactor ExpandWar. java to use URLConnection instead of JarFile directly to improve code readability and maintainability
catch all type of exception, not just exception, and log a warning.
replaced ` BorderLayout. center ` with ` BorderLayout. centerAbsolute ` in ` Picker. java ` to improve layout positioning by using absolute positioning
[ flink - 25720 ] [ network ] fix the bug in networkbufferpool. recycle ( list < MemorySegment > segments )
refactor MBeanServer initialization and release logic in TestJmxIntegration. java to improve clarity and maintainability of the code
replaced JUnit's RunWith annotation with a RetryTestRule for improved test reliability to enhance test reliability by implementing a retry mechanism for
modified the constructor of QueryStateMachine to remove the autoCommit parameter to streamline transaction management by eliminating the autoCommit parameter
updated import statements in CsvFieldType, CsvTable, and CsvTest classes and added a new package - info. java file to improve code organization
added support for additional class names " javax. microedition. khronos. opengles. GL " in InstrumentationConfiguration
[ hotfix ] [ test ] remove unused method in streamtasktimertest
refactor URI handling in Request. java and add a new test for connection URL in RequestTest. java to improve connection handling and ensure correct URI
replaced the static final string KEY _ LAST _ SEEN _ VERSION _ CODE with ` WhatsNewActivity. KEY _ LAST _ SEEN _
added methods to handle session availability and unavailable sessions in SessionManager to improve session management and enhance session management functionality
added a new package " liquibase. pro " to the scanning configuration to enhance package scanning capabilities for the Liquibase pro application
replaced the ` deleteSyncFolders ` method with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider. java ` to simplify the
updated the ` loadWithNewGlobal ` method to accept an additional ` Object. args ` parameter to enhance functionality by allowing additional arguments during global
refactor path resolution logic in FastPathResolver. java to improve readability and maintainability of the code
replaced ` length ( ) ` and ` length ( ) ` methods with ` toIntExact ( ) ` and ` getRetainedSize ( )
corrected the spelling of " hasAlreadyRandomizationDepth " to " hasAlreadyRandomizedType " across multiple files to improve code readability and maintain
added support for handling " LEAD ", " LAG ", and " LAG " functions in UnsupportedOperatorsVisitor. java to ensure
added a line to clear the request headers in AbstractProxyServlet. java to ensure that the proxy requests are cleared before further processing
added a condition to skip tests if SA attach is not expected to work
added translucency support for the fullscreen window in TranslucentWindow. java and modified the background color check in GraphicsDevice. java to
added null checks for user information in UserInfoActivity. java to enhance user experience by preventing null pointer exceptions
added serialization and deserialization functionality for PrecompiledHeaderData to ensure that precompiled headers cannot be used on different machine
[ flink - 20536 ] [ connectors / kafka ] fix update mode in kafkasink
added a new integration test class ` MultipleOutputsIntegrationTest ` to validate the usage of named output groups to ensure that named output groups can be
updated regex pattern in FileSettings. java to improve content formatting to enhance the accuracy of setting information
nifi - 4892 fixed typo in stateleserviceprovider
replaced the use of ` new Object [ ] { } ` with ` ArrayUtils. EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added a taskbar mode switch annotation to the TaplTestsQuickstep class to ensure the test runs in persistent environments
added new entry for " leaving - dock " and " energy - save - mode " in DeviceStatus. java to enhance device status tracking for
improve error message when an item model can not be load from a blockstate
removed unused import statements and added an @ Ignore annotation in KrakenFuturesStreamingPublicDataTest. java to temporarily disable the test due
added a conditional check for graphics. is2X ( ) before returning the current pixel scale to ensure correct handling of pixel scaling based on graphics
refactor RussianLowerCaseFilter to improve filter functionality to enhance performance and maintainability of the code
replaced serverProps and clientProps with EMPTY _ PROPS in CsvBulkLoadToolIT. java and modified the setupTestDriver method in Query
replace file separator characters with underscores in displayName to ensure consistent file path formatting across different operating systems
use a bufferedinputstream instead of a bufferedinputstream in the little endien
added a new boolean flag ` repeatFirstLineIndent ` and updated the indentation logic in ` ColumnText. java ` to control the indentation behavior
changed the type casting of ` oid ` to ` Object ` in the ` equals ` method to ensure proper type handling for the ` oid `
fix bug in hikariconfig. setmetricsetrackerfactory ( ) and sethealthcheckregistry ( ).
rename controlflowanchornode to controlflowanchored
added ` setFocusPainted ( false ) ` to buttons in ` WindowsPlacesBar . java ` to improve button appearance by removing focus painting
updated condition in DatabaseSnapshot. java to include unique constraint and primary key to enhance functionality by allowing both primary key and foreign key fields
''''-'''''''''''''''''' '
added unit test for group creation with dc. title and dc. title
fix a bug in gapinsertiondetector that throw an exception if there be no word
camel - jbang - add test case to show how to use a cached script engine
updated the thread naming from background threads to database update threads in FeedRefreshUpdater. java and added getter and setter methods for databaseUpdateThreads in
reduced FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 to optimize fast scrolling behavior for improved performance
replace metautil. tointernalname ( system. class. getname ( ) ) with Ljava / lang / System
hhh - 13644 - fix npe in procedurecallimpl. getrandom ( )
updated apiProperties initialization to handle null values safely to improve robustness by preventing potential NullPointerException when APIProperties are null
added new FrameGenerator and TextFrameGenerator classes for handling binary and text frames to enhance WebSocket frame generation capabilities and improve data handling
simonstewart : wait for the presence of the element in the firefox driver.
updated random number generation logic in RandomGeo3dShapeGenerator. java to improve accuracy and reliability of random number generation
added a keepAlive ( ClassLoader loader ) method to the ResourceBundle class to improve resource management by using a centralized keepAlive method
be a....
added a new constant UTIL _ CONCURRRENT _ SIG _ PREFIX and refactored related bug reporting logic to improve code readability and
added MkdirStep imports and updated steps in AndroidAar, AppleBundle, ApplePackage, and FatBinary to ensure directories are
updated error handling in MeshLeveler. java to include error messages and improved validation logic to enhance error reporting and provide clearer context for the error
[ rhdm - 3481 ] allow removal of jpmml library from classpath in applypmml command ( # 3482 )
replace locationMode with thermalStatus in ShadowPowerManager. java to improve clarity and maintainability of the code
added support for OS - specific temporary directory configuration in MountableFile. java to enable temporary directory creation on macOS systems
added support for Windows - specific memory mapped buffers in PrjFileReader and CatalogManager to ensure compatibility with non - Windows environments
added a null check for the organization in the pom. xml file to ensure that plugins are required to have an organization in the pom. xml
and a - a - - - - - - - - - - - - - - - - - - - - - - - -
deleted the TerminateWebSessionListener. java file to the class is no longer needed or was deemed unnecessary
updated the ` executeChildProcess ` method to use the system property for the Java class path to ensure that the child process executes with the correct
replaced ArrayUtils. EMPTY _ BYTE _ ARRAY with new byte [ 0 ] for cryptKeyInit, cryptKeyPriv, and md5Salt
add license header test ( # 3198 )
changed LAUNCHER3 _ PHYSICS flag from false to true to enable a new feature for the launcher
added a " noPrint " div in HtmlThreadInformationsReport. java to improve the HTML structure for better user experience
updated LUCENE _ MAIN _ VERSION and LUCENE _ CURRENT _ VERSION to LUCENE _ 40 and LU
added macosx symbolicator and task handles in BsdDebuggerLocal. java and updated OS detection in PlatformInfo. java to support both D
fix potential memory leak in network dispatcher
change log level to debug for connection reset by peer.
[ java ] set admin _ dir _ name to be consistent with other aeron client.
added a ` break ` statement in the ` TouchImageView. java ` file to ensure proper handling of cases where a condition is met
chore : remove unused proto import ( # 137 )
removed SSL handling logic from FeedableBodyGenerator. java to simplify the code and improve performance by eliminating unnecessary handshake handling
fix typeutils. isassignableto ( ) for java. lang. object
use concurrentskinlistset instead of nonblockingset to avoid concurrentmodificationexception
added null check for errs in MemberEnter. java and introduced new classes A and TestParseErrors. java with various test methods to enhance
changed browser from NO _ BACKGROUND to NONE to disable background mode for better user experience
removed the ` finish ( ) ` method from the ` AboutActivity ` builder to simplify the code by removing unnecessary ` finish ( ) ` method
added unit test for ` div ` and ` div ` in ` integerstamp `.
added a method to read an InputStream and updated the image creation process to use this method to improve code readability and maintainability by encapsulating input
added variable handling functionality to the SwitchCompiler and ExprGenerator classes to improve variable management and facilitate debugging
refactor RSAClientKeyExchange. java to improve error handling for cipher provider initialization to enhance robustness and maintainability of the code
updated AdditionalDependencies in WinGammaPlatformVC10. java to include psapi. lib to ensure correct dependencies are used for the WinGammaPlatform
updated SQL comment and line separator handling in StringUtilsTest. java to improve readability and maintainability of the code
added compatibility and encoding settings in TemplateEngineFreemarker. java and updated the expected script in ApplicationControllerTest. java to enhance security
replaced ByteArrayInputStream with String for output stream handling to improve readability and maintainability of the code
rename private static final to non - static final
allow testngemailablereporter to be disable by system property
added quoted flag and updated command string quoting logic in CommandLineBuilder. java to ensure proper handling of quoted strings in command line arguments

added a line to set the number of reduce tasks in FreeGenerator. java to ensure that the job uses the correct number of reduce tasks for
updated field retrieval logic in SchemaGeneratorHelper. java to improve handling of default object fields and their definitions to enhance data retrieval accuracy and maintainability
updated the FILEVERSION constant from " 505365 " to " 532077 " to reflect the new version of the file
added support for GL _ ARB _ texture _ float extension in FloatTextureData. java to enhance texture management capabilities and improve error handling for
add fileserver. write ( ) and fileserver. closefile ( string, object [ ] )
added null check for outputDirectory and jarStream before setting output directory to avoid potential NullPointerException when outputDirectory is null
added performance measurement using PerfStatsCollector in ShadowSQLiteConnection to improve performance tracking during database execution
changed tool path from ` getCurrentJDKTool ` to ` getTestJDKTool ` in JMapHProfLargeHeapTest and JDKToolLauncher to
add resourceerrorhandling enum to allow for good error reporting
added a check for buffer size in RAMInputStream and implemented a new test for EOFException in TestRAMDirectory to ensure proper handling of file input stream
updated error message handling in DefaultServlet and JspServlet to include the request URI to improve error reporting by providing more context about missing resources
modified ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag for thread creation to enhance thread management by allowing an innocuous flag
updated the initialization of CHECK _ EVERY _ N and added logging statements in Caches. java to improve cache check efficiency and enhance debugging capabilities
hbase - 24590 remove useless local variable'r'in testsplittransaction
added null check for currentSelectionArea before enabling selection in CompatibilityEngine. java to enhance code robustness by preventing potential NullPointerExceptions
add test case for jaas module
added spanX and spanY parameters to the folder creation logic to ensure proper layout adjustments based on defined span values
updated CacheOffHeap. java file to improve cache performance and reduce memory usage
mondrian : add support for reference of the same table with a higher id to ensure that the database can reference the same table or view
updated TiledLoader. java to handle extra XML gid values and improved null - checking for dataString to enhance robustness and provide a warning
make inmemorytilecache. setworkingset synchronize
added a new file ` Solution. java ` that implements a solution for calculating the maximum number of steps to implement a solution for determining the maximum
add isbadaddress ( ) method to trackerrequestprocessor to check if an address be valid
fix incorrect rendertypes in multilayermodel.
remove the'default :'tag from the config comment
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` and updated its usage in ` Capability ` and ` Net
added null check for recieptents before sending messages to prevent potential NullPointerExceptions during message sending
improve handling of single route for async / suspended route
updated DockerClientFactory to include a failFast option and improved logging in RemoteDockerImage and ImageFromDfile to enhance connection stability and
added a new ` resourcesMode ` parameter to the ` AndroidMetadata ` class and updated related methods to support resource management in the Robolectric
use calendar. getdate ( ) instead of DateUtils. truncate ( ) in historicprocessinstancequeryimpl.
replaced ` gradleImporter. importProject ( projectFile ) ` with ` gradleImporter. importProjectCore ( projectFile ) ` to improve clarity
added handling for CommandFailedException in LiquibaseCommandLine. java to improve error reporting for command failures
refactor TreeMap class to improve code readability to enhance maintainability and ease future updates
added methods to enable asynchronous stack tracing and improved exception handling in the Display class to enhance performance and provide better error handling for async stack traces
added a method to set the glow color in BubbleTextView and used it in Folder to enable customization of glow visuals in the
added styling for the " file - row - text " style in LinkedFilesEditor to improve the visual presentation of file links in the user interface
added tests for ` alltypes ` class matching in ` ResultSetMetaDataTest ` to ensure correct retrieval of class names from the ResultSet
removed exception handling for writing files in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify file writing process and improve code clarity
added null check for _ info before verifying the upgrade status to avoid potential NullPointerException when _ info is null
added a constructor to ShadowLocation that initializes the provider to enhance flexibility in constructor initialization
added a check for 32 - bit devices in the LauncherPreferenceJavaFragment to ensure that the maxRAM does not exceed the device's RAM
fix npe in mapstatisticsawareservice. getstats ( ) when no data be include
added logging functionality to FileProfileActivator to improve debugging and monitoring of file presence and activation status
updated the parameter name in the addToBody method from " noname1234 " to " invalid _ " to improve clarity and consistency in the code
fix potential npe in guildimpl. getroles ( ) ( # 2441 )
updated array trim logic in ExpandableUploadListAdapter. java to use MAX _ NUM _ UPLOADS _ SHOWN instead of - 1 to
added unit tests for the delete method in DashboardUserMapperTest to ensure correct functionality of the delete method in the dashboard user mapper
add primaryparticipant ( primaryparticipant ) to instructorfeedbackresultspagedata
add a way to cache pointer in llvmpointerstorenode.
added a method to retrieve the buffer size in BufferedIndexOutput to provide access to the buffer size for external use
add an option to use our standalone launcher instead of our own launcher
added swipe - to - swipe - to - swipe notification functionality in DrawerActivity. java to enhance user experience by enabling swipe - to - swipe
updated CommandLineParserTest. java to improve test coverage to enhance reliability of command line parsing functionality
added new import statements and modified animation interpolators in QuickstepAtomicAnimationFactory and PortraitStatesTouchController to improve animation responsiveness and
updated the return statement in DefaultJavaLanguageNamer to use javaNameFromExternal to improve clarity and consistency in the naming conversion process
removed unused native methods from CWrapper. java to streamline code by eliminating unused native methods
added constant value checks in mmm Checker. java and created ValueTest. java and ValueTest. java files to ensure correct handling of
updated test files in MontgomeryMultiplyTest, TestMulAdd, and TestSquareToLen to improve test coverage and ensure
removed null check for constructors in PojoUtils. java to simplify code logic for better readability
fix typo find by codespell on fossies. org
updated error and coverage message formatting in UploadBuild. java to improve code readability and maintainability
updated bounds calculations in DeviceProfile. java to include search bar offset to ensure proper layout positioning for search bar in the UI
don't call disconnect ( ) if no idle timeout be set.
refactor code to use a lambda expression for accessing the launcher instance to improve readability and maintainability of the code
removed the ` getSourceGroupOptional ` method and its associated calls from ` AppleSource. java ` to streamline the code by eliminating unused
increased await timeout from 220000 milliseconds to 320000 milliseconds in TestSimTriggerIntegration. java to accommodate larger wait times and improve test
fix the size of all - null block return from float reader
node cost search : don't create path if the start be a squared distance
added a condition to skip processing for Form or Dialog types in ResourceEditorView. java to ensure proper handling of UI components in the resource editor
replaced ` UiThreadHelper. getBackgroundLooper ( ) ` with ` LauncherModel. getWorkerLooper ( ) ` in ` DragView. java
added a null check for commitPoint and initialized it to the latest commit if it is null to ensure that the correct latest commit is used for
added unit tests for imei and meid retrieval in ShadowTelephonyManagerTest to ensure correct functionality of imei and slot index
added debug logging for HTTP / 1.1 requests in SimpleHostRoutingFilter to improve debugging capabilities for HTTP requests in the application
added ` destroy ` methods to various classes and implemented cleanup logic for resources to ensure proper resource management and prevent memory leaks in the application
[ rocketmq ] fix npe in normalmessagesendandrecvit
use standardcharsets. utf _ 8 instead of charset. forName ( )
cause an exception ( # # )
added a ` commission ` parameter to ` DefaultWithdrawFundsParams ` and updated its usage in ` RippleWithdrawFund
removed an unused import of StreamTerminator in AutoClosingReferenceStream. java to clean up the code and improve readability
consolidate multiple catch blocks in LoadSolrBuilder and SolrLocator classes to improve code readability and maintainability by consolidating exception handling
refactor method argument handling in Java2TypeScriptTranslator to improve clarity and error handling for overloaded methods
added StacklessLogging for logging in TestFileSessions. java to improve logging efficiency during file session operations
added serialization support to MutableColumnDataType and declared static variables in Entities to enable serialization and deserialization of these data types
renamed SubExactLConstantTest and SubExactLNonConstantTest classes to improve clarity and consistency in naming conventions
added a check for null or empty claimRequestString in ConnectOAuth2RequestFactory. java to improve robustness by handling potential null or empty
replaced FilterFactory with RelBuilderFactory and introduced HiveFilterSetOpTransposeRule instance to improve flexibility and maintainability of the HiveFilterSetOp
refactor the ` processTypeHintForNestedDocuments ` method and add unit tests for null values in ` UpdateMapperUnitTests ` to enhance type
refactor core status retrieval in CollectionsAPIDistributedZkTest and CoreAdminRequest classes to improve code clarity and maintainability by using a
fix nullpointerexception in moddirtransformerdiscoverer
updated error message formatting in AbstractQuerydslProcessor. java to improve readability and maintainability of error messages
[ gr - 10868 ] provide a way to get the caller stack for a method call.
( ) ) should be ( ( ) ) ( ).
( chore ) camel - mail : use getidentityhashcode ( ) to avoid npe
don't set the redelivery policy if it's null
updated the return statement to include setting the identifier as a property name to ensure that the identifier name reflects the correct property name
added a new ` WaveGeneratorActivity ` class and updated ` InstrumentsFragment ` to use it to improve code organization and streamline the
added logging functionality and improved null handling in KeyedProperties. java and SheetOverlaysManager. java to enhance debugging and prevent potential NullPointerExceptions
added unit tests for Kubernetes shell execution in PodIT. java to ensure proper logging and handling of shell events in Kubernetes applications
added a test method ` useFactory ( null ) ` in ` TestReplicationHandler. java ` to ensure proper indexing behavior when no writer is
added call to super. dispatchmethodkernelOkra ( range, args ) in GraalKernelTester. java to ensure proper dispatching of
updated DefaultDnsClient and DefaultRecord classes to implement Comparable for better sorting to enhance sorting functionality for better data retrieval
refactor thread creation to use a privileged action to enhance security by ensuring all threads are created in a privileged action
added validation for the select box in SelectBox. java and set its default value in UITest. java to improve user experience by ensuring
replaced IllegalStateException with Collector. printStackTrace for error handling to improve error reporting by using a stack trace instead of throwing an exception
added a new parameter ` parentSplit ` to the ` createState ` method and updated related logic in ` SplitState ` to enhance state management
changed connectionState variable to be volatile and updated its usage in the return statement to ensure thread safety and improve consistency in connection state handling
set default polling period to 1000 for pollable bridge
refactor MemoryStack methods to improve memory handling to enhance performance and maintainability of the code
added handling for DocletAbortException in HtmlDoclet, AbstractDoclet, and AbstractBuilder classes to improve error reporting and provide more inform
fix unusedmodifier false positive with enum.
refactor various Java files to use method references instead of lambda expressions to improve code readability and reduce verbosity
updated the ` @ Parameterized. Parameters ` annotation to include the ` name ` parameter to enhance clarity in parameter naming for better debugging

updated permissions retrieval from userPermissions to activeConnectionPermissions to ensure correct access to active connection permissions in the application
replaced manual equality checks with Apache Commons Lang's EqualsBuilder for comparing coordinates to improve code readability and leverage Apache Commons Lang's EqualsBuilder
added null check for outputRoot when processing files to avoid potential NullPointerException when outputRoot is null
added annotation filtering functionality to PDFPage, PDFRenderer, and PageDrawer classes to enhance annotation filtering capabilities for PDF processing
refactor StackTraceCleaner class to improve code readability to enhance maintainability and facilitate future updates
added support for CSS and JavaScript files in the PluginServlet to enable dynamic content type handling based on the provided path
hhh - 14615 - fix testliteralinselectexpressiontest on oracle
updated the parameter name from ` slot ` to ` slotSize ` and improved null and empty checks in the ` upgrade ` method to enhance code
added getStats ( ) methods to various classes and updated DocBuilder to use this new method to retrieve statistics to improve code clarity and facilitate
[ scb - 2251 ] add option to wait for first pull request ( # 2271 )
refactor gesture handling in LauncherInstrumentation and related classes to improve responsiveness and maintainability of scrolling functionality
updated unlocks initialization in UI. java and added unlocks button in PausedDialog. java to enhance user interface by providing a clear unlock
clear the rops list in PlayerEventListener. java to ensure all events are cleared before proceeding with further operations
added a new constant DEFAULT _ PARAM with a value of " inputName " to provide a default value for the input parameter in the StreamResult
updated the exception type in the testNormalizeOrder method from MalformedURLException to IOException to ensure proper handling of IOException in the test method
updated print statement to include chunk type and modified string buffering in TsFileSketchTool. java to enhance output formatting and improve performance during
added functionality to exclude specific header files from the Umbrella header to ensure only relevant files are included in the project filesystem
fix checkstyle issue in io / grizzly / grizzlyasynchttpprovider. java
added encode ( ) method to RequestPlugin. java to enable proper encoding of request data
added dialect handling for SQL queries in RolapNativeSql to ensure compatibility with different database types
added null or blank password validation in LdapAuthenticationProviderImpl. java and created a corresponding test class TestLdapAuthenticationProviderImpl. java to ensure
pdfbox - 2576 : simplify code, a suggest by valerybokov
added a call to complexWriters. clear ( ) in ProjectRecordBatch. java to reset complexWriters when certain conditions are met
added @ SuppressWarnings ( " serial " ) annotations to multiple Java files to suppress warnings related to serialization in the code
added null check for classInfo in ClassGraphClassLoader. java to avoid potential NullPointerException when classInfo is null
added error handling for schema errors in ErrorResponseException. java to improve error reporting by including schema errors
added a constructor to the EventSourcingRepository class to initialize the EventSourcingRepository with eventStore, snapshotTriggerDefinition, and
refactor symbol handling logic in mmm Attr. java to improve code readability and maintainability
refactor search text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to improve clarity and functionality of text representation
refactor NuvoConnector and NuvoHandler to improve command handling to enhance readability and maintainability of the code
pdfbox - 4892 : fix typo, a suggest by valerybokov
added close ( ) method call to ItemListTag. java to ensure proper resource management and prevent memory leaks
add an averageutil class to calculate the amount of tick, and use it for the assembly table.
added new classes SigInt and SigIntBarrier for signal handling to improve thread safety and signal management in the application
refactor graph model handling in ExporterGEXF. java to improve compatibility with hierarchical graph structures
refactor TCTLSeparatedProtocol to replace byte array with Text and update internalWriteString method to utilize Text for handling null input to improve
[ # 7441 ] fix invalid index in rubric response
replaced DB2Database check with a direct comparison from CatalogAndSchema. ORIGINAL _ CASE to improve code clarity and maintainability by using a
simonstewart : added setup / teardown method to the browsermobproxytest
updated criticalErrors string formatting to use Integer. toString for better readability to improve code clarity and ensure proper string representation of diagnostic data
replaced mTextWatcher. reset ( ) with mTextWatcher. reset ( ) in InPlaceEditView. java to ensure textWatcher is properly reset
updated InternalByteArray and TruffleString classes to improve code clarity and maintainability
[ flink - 18482 ] [ graph ] fix type inference for tuple2
updated multiple assertion classes for consistency and clarity to improve maintainability and readability of the codebase
deleted the Class Á class and added a new DiacriticTest class for testing to remove obsolete class and implement a new Diac
[ java ] use countdownlatch instead of countdownlatch in cluster membership test.
don't try to create a workspacereader if there be no reactor
updated SSL check from ` startsWith ( " https " ) ` to ` equals ( " https " ) ` in ` ServiceRegistryConfig. java
refactor Mockito class to improve code readability to enhance maintainability and ease future updates
removed unnecessary whitespace in Jdbc3Connection constructor parameters to improve code readability and maintainability
added ` ensureInstance ( ) ` method to ` ServletHolder ` class to ensure proper initialization and error handling for servlet instances
added logging capabilities and modified deltaServerTime handling in BinanceExchange and BinanceBaseService classes to improve traceability and debugging of server time
added support for " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8. 5 " in Tomcat container adapter to
replaced direct call to getComponentForm ( ) with a local Form variable to improve code clarity and ensure the current form is set before deregistering
modified the ` decodeResource ` and ` drawBitmap ` methods in ` ShadowBitmapFactory `, ` ShadowCanvas `, and ` ShadowBitmap
added a constant for the number of message and updated print statements to use this constant to improve code readability and maintainability by centralizing the message
added functionality to prevent multiple clicks and improved text formatting in the TimelineArrayAdapter to enhance user interaction by preventing multiple clicks and improving text formatting
added " text " to the unmodifiable data types in PostgresDatabase and refactored related logic in NumberType and ColumnSnapshotGenerator to enhance data
make entryprocessorbouncingnodetest more robust
updated state management logic in AmbariManagementControllerImpl. java and modified test cases in AmbariManagementControllerTest. java to improve clarity and
updated logic in CreateBridgeServlet to check for a non - null bridge UID before adding a new result to improve robustness by ensuring the
refactor robots handling in CrawlServer to improve code readability and maintainability to enhance code clarity and reduce redundancy in robots validation logic
refactor null check for network display names in TestInterfaces, Equals, and IndexTest classes to improve robustness by avoiding potential NullPointerExceptions
added support for a default shader in SpriteBatch and modified its constructor and methods accordingly to enhance flexibility and maintainability of the SpriteBatch class
added options option for synchronous commit in TestUtil to enhance performance by allowing synchronous commits
added a new method ` fillSortedSet ` to handle duplicate elements in ` SortedSetTypeCoercer ` to improve code robustness by preventing
refactor confirmation message handling in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve clarity and maintainability of the code
added a check for character less than 256 in URLPathEncoder. java to ensure safe URL operations do not exceed 256 characters
updated the registration of fragment storage to use a dynamic port instead of hardcoded values to improve flexibility and maintainability of the fragment storage registration process
updated the expected result of clusters. getClusters ( ) to return an empty map to ensure the test correctly verifies the absence of clusters
removed the logging parameter from the ` loadConfiguration ` method across multiple classes to simplify configuration loading by eliminating unnecessary logging
pdfbox - 4892 : fix problem with border size and border size
removed ` ShadowHtml ` class and updated ` HtmlTest ` to reflect this change to simplify the codebase and improve test coverage
added a new file StarTreeRecordStoreFactoryBlackHoleImpl. java that implements the StarTreeRecordStoreFactory interface to provide a clear
refactor Jetty logger configuration to improve clarity and organization to enhance maintainability and facilitate easier debugging
changed the access modifier of the ` addListeners ` method from private to static in ` MockSettingsImpl. java ` and added a new test
refactor StateHandleStore to improve code readability to enhance maintainability and facilitate future updates
replaced the import of ` org. eclipse. jetty. util. security. Constraint ` with ` org. eclipse. jetty. http. security
update section assignment to use a constant instead of a hardcoded value
use try - with - resources to ensure the input stream get close
camel - 1145 : fix port issue in camel - test
added libraryTarget parameter and related methods in multiple Java library classes to improve the handling of library dependencies in the build process
) - - - - - - - - - - - - - - - - - - - - -
bug 10719 : remove the overridden getpagesizeval ( ) method from listcapacity and use it from baselistcmd
added handling for CLOSED case in IteratingCallback. java to ensure proper handling of closed callbacks in the application
added an ` isAuthorized ` boolean field and updated related methods in ` AccessControlContext ` and ` AccessController ` to track authorization status in the
refactor OSGiDeployer to improve event sender registration and registration to enhance code readability and maintainability by consolidating event sending logic
added support for " tiff " format in DLNAMediaInfo to enhance media handling capabilities in the application
fix npe in optimizedcalltarget. getarguments ( )
added a new file ` Cubocy. java ` and modified ` MapRenderer. java ` and ` MapRenderer. java ` to
updated PolicyMonitor initialization to use " test - classes / monitor - test - 1 " and " test - classes / monitor - test - 2
added a call to ` trashbinListAdapter. removeAllFiles ( ) ` in ` TrashbinActivity. java ` to ensure all files are
updated import statement for allConnectors method to use the correct package path for the virtual machine manager
[ gr - 16725 ] fix miss check for readdirect final.
updated the ` createLauncherEvent ` method to include an ` Intent ` parameter and adjusted its implementation to enhance event handling by associating it with
increase max burn target floor to 100 %
updated UniqueConstraintSnapshotGeneratorSnowflake to use H2Database and improved schema handling to enhance compatibility with H2 database and ensure correct
modified the condition for selecting an item in the DMLTransformer to handle cases where the insert statement is empty and set a default value to "
updated test method to use secure PGT URL instead of insecure PGT URL to enhance security by restricting access to secure PGT URLs
updated the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and refactored the handling of default function names to
refactor JarLauncher to improve code readability to enhance maintainability and facilitate future updates
fix raw and unchecked lint warning in java. util. concurrent
fix a problem with send hole punch packet in the jingle call.
added a test for updating a PGobject in the ResultSetTest class to ensure the correct handling of PGobject data in the database
updated password reset endpoint to return UNPROCESSABLE _ ENTITY or BAD _ REQUEST based on the presence of a non - UAA user to enhance
replaced direct retrieval of the second child node with a direct retrieval of the document element to simplify code and improve performance by using the document element directly
updated caching logic in Cache. java to improve performance and reliability of data retrieval
rename ` ` timeInSec'' to ` ` timeMillis'' in Isochrone. java and SPTResource. java
add a check for invalid binding to the living relay.
added a new ` Chainer ` class and updated ` contains ` methods in ` CollectionSubject ` and ` CollectionTest ` to enhance functionality and
update example dependency to joule 0.2 . 0
updated recordedTime calculation in Locations. java to include a new time value to ensure accurate tracking of recorded time
added a condition to resize the terminal status if the terminal type starts with Windows to ensure that the status updates correctly on Windows platforms
updated the hostVersion state setting logic in UpdateDesiredStackAction. java to ensure the host version is only marked as INSTALLED when it is not
move javatests to ` com / google / j2cl / transpiler / javatests ` to ` com / google / j
use linkedhashset instead of hashset to preserve order
remove try / catch block in operationserviceimpl. toobject ( )
updated method call formatting in KnativeEnvironment. java to improve code readability and maintainability
updated the executor name from " commitlog _ archiver " to " CommitLogArchiver " to improve clarity and consistency in naming conventions
added connect ( ) and connect ( ) calls in CloudSolrClient. java and implemented a test for uploading files in TestCloudSolrClientConnections
added synchronization to the addition and removal of binding objects in multiple classes to ensure thread safety during modifications to the allBindings list
refactor file handling in RobolectricTestRunner and ShadowContext classes to use static cache directories to improve code readability and maintainability by centralizing cache
added TreeMap and modified the import statements in SecureXStream. java and XStreamPersisterTest. java to enhance sorting capabilities and improve test coverage
[ kiebuilder ] set kiebuilder and kiebuilder to propagate the kiebuilder to the kieb
refactor block event handling to check for Farmland instances to improve code clarity and ensure correct handling of Farmland instances
added a default implementation for the getLocalIp ( ) method in FinishedSpan. java to provide a default implementation for the method that does not require
updated JdbcStepExecutionDao to use serialization for OBJECT _ VAL and added a new test for integer storage to improve object serialization handling and ensure correct
''''and'''should be''
updated resource files to include " libs " and changed the extension from " - python " to " - python37 " to ensure compatibility with the
refactor PluginTab to utilize a new refresh method for better handling of plugin data to improve code readability and maintainability by encapsulating plugin - related
changed log level from info to warn for error messages in DefaultHistory. java to improve logging granularity and reduce clutter in logs
bug cs - 15465 : don't try to create a vm if it don't exist
camel - sftp - fix camel - sftp test on window
renamed ExperimentalMockitoJUnitRunner. java to improve clarity and maintainability of the codebase
refactor GpsSettingsActivity and Session to use a new utility method GetBuildSerial to improve code readability and maintainability by centralizing the logic
updated SwapGBuffers. java file to improve code readability and maintainability
added null check for skeletonControl in AnimControl. java to ensure proper cleanup of skeletonControl when spatial is null
added functionality to manage smart replies in ShadowRankingTest and ShadowRanking classes to enhance testing capabilities for smart replies in the Robolectric
[ java ] only add segment file if it don't exist.
refactor resource directory retrieval in CarrotClusteringEngine. java to improve code readability and maintainability
added null check for ` testRect ` in ` WindowsTreeUI. java ` and created a new class ` bug8004298. java
modified the visibility of the ` buildStdArgs ` method and changed ASM API version from ASM7 to ASM9 to align method
replace null return with a TasteException in RecommenderMapper. java and add a null check in CacheTest. java to improve error
added ClientInfo variable and updated setup method in SurrogateAuthenticationEventListenerTests to utilize it for better client information management during tests
set isUserView to false in CardPresenter. java to ensure user view is properly initialized before use
updated method names and imports in GraphvizJavaExecutorUtility and GraphvizJavaExecutorUtility classes to improve code clarity and align with the new diagram
refactor metric creation to use local variables for clarity to improve code readability and maintainability
added a new module - info. java file for the SQLite connector to define module exports and requirements for better modularization and dependency management
added a delay of 500 milliseconds in StreamResetTest. java to ensure proper synchronization during test execution
removed conditional check for " new " web type in Context. java to simplify the code and improve readability
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a getDepth method to SpringLoadedState that returns a default value of 0.5 f to ensure consistent depth representation in the application
updated binary decoding logic to use Arrays. copyOfRange instead of System. arraycopy to improve efficiency and maintainability of the code
[ hotfix ] fix checkstyle violation in executiongraph
removed unnecessary SwipeLayout imports and updated click listener in NotificationRenderer to streamline notification handling and improve user interaction responsiveness
updated exception handling to return " none " when no invocation is provided to improve error handling and provide clearer context for exceptions
fix potential npe in glowcontainer. getlock ( ).
replaced MethodHandle with reflection for setting the target field in ProxyMaker. java to improve performance and maintainability of the code
changed SQL queries to use ` intValue ( ) ` instead of casting to ` int ` to ensure correct handling of integer values in the query
updated return statements in BaseEmailContentFormatter. java to remove concatenation of " metrics " and " datasets " to improve clarity and consistency in formatting
added functionality to display a simple panel in the layout panel to enhance user experience by providing a structured way to manage and display the layout
updated condition to check for null location in ServerCallable. java to enhance robustness by preventing potential NullPointerExceptions
updated BuilderFactory, Pipeline, and PipeliningTest files to improve code organization and maintainability
added a check for null key parameters in BasicChecker. java to ensure that a valid public key is provided to avoid runtime exceptions
refactor media type matching logic to use a dedicated method to improve code readability and maintainability
refactor task attempt number assignment and logging in LlapBaseInputFormat. java to improve code clarity and maintainability by using a local variable for task
added a property to the SpringBootTest annotation in EventServiceTests. java to enable Spring's bean definition overriding functionality during tests
added null check before closing indexReader to avoid potential NullPointerException when indexReader is null
renamed ` btcmarkets. service ` to ` btcmarkets. btcmarkets ` across multiple files to improve organization and
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest ` to ensure that the ` issue151 ` rendering
added a new file ` CompatibilityTest. java ` with methods to load and verify internal DTDs from a XML file to facil
added new files for VariantComponentsModule, PushUtils, and SecurityUtils to manage push - related functionality in the application
[ flink - 20536 ] [ table - planner - blink ] fix the number of replica in rebalancer
bump to 2.7. 0 and prepare release note
log4j2 - 1349 fix unit test that fail on window
align the code between apr and apr with the spec
initialize friction, restitution, density, isSensor, and isSensor variables to initialize them to zero to ensure consistent default values for
updated method signatures to include anomalyFunctionSpecMap and AnomalyFunctionDTO to enhance anomaly classification by including anomaly function specifications
removed error handling for broadcast idle command execution to streamline the process by eliminating unnecessary shell commands
added unit tests for font and link tags in ResourcesTest. java to ensure that font and link tags are correctly read from resources
fix typo in modded / modded / modded / guistatscomponent. java ( # 765 )
added permission handling for making calls to the CALL _ PHONE item in the launcher to ensure proper access to the CALL _ PHONE action and
updated return values in SimulationPanel. java and modified method signatures in PlotDialog. java, BasicEventSimulationEngine. java, and Startup
refactor ` GeoPointDistanceQuery `, ` GeoPointInBBoxQuery `, ` GeoPointInPolygonQuery `, and ` GeoEncodingUtils `
added a synchronized method ` isDockerAvailable ( ) ` to the ` DockerClientFactory ` class to provide a way to check if the Docker client
removed the VPX constant from CodecTypes. java to streamline code by eliminating unused constants
added a coordinator address option to the DistBuildFactory and updated its usage in DistBuildRunCommand to allow users to specify the remote thrift server
added a new method ` match ` in ` FsUtils ` and refactored timer usage in ` WrapTimer ` to improve file path matching
added a conditional check before updating label values in TestTaxonomyFacetSumValueSource. java to ensure labels are only added if the value is
added null check for result and improved logging messages in the App class to enhance robustness by handling potential null values and providing clearer feedback
added @ Test annotation to TestPerfBenchMarkDriver. java to enable testing of performance benchmark functionality
added a materialization time setting in ObjectStore and implemented a test for updating metadata sets in TestObjectStore to ensure proper handling of mater
added handling for UnsatisfiedLinkError in VoskSTTService to improve error logging for missing native dependencies
[ jmssampler ] fix jmssampler response code when send queue be empty.
updated break weight logic in GlyphView. java to return GoodBreakWeight instead of ExcellentBreakWeight to enhance break weight handling for
refactor buffer reading logic in RCFile. java to improve performance and maintainability of the code
added @ AwaitsFix annotation to AutoAddReplicasPlanActionTest. java to track a known issue related to SOLR - 13028
replaced direct calls to ` steps ` and ` processors ` with a ` LinkedList < String > ` to improve code readability and maintainability by using
removed unnecessary parameters from methods and refactored DataFlavorComparator to streamline code and improve maintainability by eliminating unnecessary complexity
hbase - 20613 add infoport option to hbase shell in testthriftservercmdline
added a check for end of file in RegExpScanner. java to ensure proper handling of end - of - file scenarios
replaced Boolean. getBoolean with Set < String > for managing metrics, timers, and timers to improve performance and maintainability of the code
fix possible npe in chatroomjabberimpl. getpresencename ( )
improve error message if file ben't find
refactor refresh token creation into a separate method to improve code readability and maintainability
updated error message format in BuckConfig. java to improve clarity and consistency in error reporting
[ hotfix ] [ yarn ] remove dead code in yarnflinkapplicationmasterrunner
added a nativeGetHardwareBuffer method and an implementation in ShadowNativeImageReaderSurfaceImage. java to facilitate hardware buffer management in the
updated BTCChinaMarketDataService initialization to use a specific SSL URI to enhance security by using a secure API for the BTCChina
pmd : use file. separator instead of file. separator if not absolute
added new classes OauthController, Oauth2PluginTest, and Oauth2PluginTest to implement and test the OAuth2 plugin functionality
fix typo find by codespell on fossies. org
added ` flatMap ` and ` flatCollection ` methods to ` AbstractStreamEx `, ` EntryStream `, and ` StreamEx ` classes
updated error message format in RestCodec and added exception handling in ExceptionToProducerResponseConverters to improve error logging and enhance exception handling robustness
updated the class name validation logic in RobolectricClassLoader. java to improve clarity and maintainability of the code
modified the condition to check if sdp is not already present to ensure that only valid audio formats are processed
updated type check from SequenceNextValueFunction to DatabaseFunction in CreateTableGenerator. java and added tests in CreateTableGeneratorTest. java to
( ) ) should be ( ( ) ( )
added a volatile field ` wasInvoked ` in ` NetworkTestUtils ` and updated HTTP request handling in ` UaaHttpRequestUtilsTest ` to
added a check for configuration before expanding regex mapping in ColumnarDataSource. java and modified return types in RowProcessor. java to enhance functionality and
refactor splitIntoThirtyParts method to use a constant SEEK _ LENGTH and improve position handling to enhance code readability and maintainability by
added new classes XLCDCommunicator and XLCDController, and refactored FirmwareUtils to utilize a new XLCD
kmodulemarshaller. loadschema ( ) now use the system classloader to load the schema
added retry timing checks for ` blockMessage `, ` solidityTrigger `, ` transactionMessage `, and ` solidityEventTrigger `
refactor WorkerProcessPoolTest to use a constant for thread states and improve thread state management to enhance code readability and maintainability by reducing complexity in
updated ` hashCode ( ) ` and ` equals ( ) ` methods in ` DelegatingMethod ` and added unit tests for ` DelegatingMethod
func ( freezev2 ) : decrease energy cost for new instruction
updated the method signature of ` command ` to throw ` ConfigurationException ` and modified the method signature to throw ` ConfigurationException ` to improve error
deleted ` SpringTransactionHooks. java ` and updated ` SpringTransactionHooksTest. java ` to use ` AbstractSpringTransactionHooks
refactor AbstractClassAssert for improved clarity to enhance maintainability and readability of the code
added a new file ` GetUninitializedStringValue. java ` that includes a test class for handling uninitialized String values to facilitate testing
added support for provided dependencies in AndroidLibraryDescription and enhanced dependency resolution logic in GraphEnhancementQueryEnvironment to enhance dependency resolution capabilities and
added a new BooleanFlag named ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags. java to enable keyboard synchronization functionality during transitions
added a static boolean to track the saving of an anomaly message and updated the bugreport saving logic to ensure that the system anomaly message is only
added a new constant CINEPACK to the FormatConfiguration class and utilized it in the LibMediaInfoParser class to support the " c
add an option to turn off the player's eye movement
updated the mapping logic in GrpcCasBlobUploader to use ` b. digest. toString ( ) ` instead of ` b. data
deleted the HSQLDBServerFilesFilter class and refactored file filtering in TestUtility. java to improve code clarity and maintainability by
walletappkit : don't throw npe when restorefromkey be null
updated the latestVersion assignment and added logging for missing titles in MediaTableTVSeries. java to improve clarity and traceability of the code
added a method to check if a method does not already exist in the method invocation to ensure proper handling of method invocations based on the presence of
replaced hardcoded array size with a constant for improved maintainability to enhance code readability and reduce the risk of errors
added option to disable profiler feature ( # 2445 )
added checks for zero value in GenericUDFMask and GenericUDFMaskFirstN classes to ensure correct handling of non - zero values in
use new temporaryfolder ( ) instead of deleteRecursively ( )
added isitemitemitemdamageable ( ) and gethassubtypes ( ) to itemstack.
fix mc - 167447 to fix mc - 167447.
danielwagnerhall : set browser. startup. page to default to ` ` 0''.
added handling for GET and DELETE requests in Http1xClientConnection to ensure proper connection handling for different HTTP methods
changed task accept name from " compile " to " process - classes " to clarify the purpose of the task for processing classes
replaced ` ConnectionManager. shutdown ( ) ` with ` httpClient. closeIdleConnections ( 1L, TimeUnit. MICROSECONDS ) `
added a check for aggregate function suffix before creating a Metric object to ensure that only valid metric names are added to the metrics collection
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskView to use this new method to improve fullscreen handling and streamline the
added a new Java file that finds the frequency of a given number of integers to provide a solution for counting the number of records in a given
[ java ] initialize SocketChannel variable to null to ensure proper resource management and prevent potential memory leaks
modified MutisignOperationerGodicTest. java to enhance test coverage for Mutisigning operations
added exception handling for NoSuchElementException in StaxEventItemReader to improve robustness by handling cases when reading at the end of the file
replaced specific imports with a wildcard import and added a private textPaint instance in ShadowTextView. java to streamline import statements and enhance null handling
updated import statements to replace ` com. nimbusds. shaded. jose. shaded ` with ` net. minidev
updated OS detection to handle " AIX " and set the OS version to " Linux - s390x - 64 " to ensure compatibility with
/'''' -'''''''with''''
added a static method ` invokeWithoutBlockingWithResultSync ` to ` Display ` that calls ` Display. invokeWithoutBlockingWithResultSync `
polish and test all xmpp sample in the ignored package
updated calculations for outRect and primarySnapshotWidth in PortraitPagedViewHandler. java to use Math. round for better precision to
updated file paths in TestClusterDumper. java for consistency to improve code readability and maintainability
hbase. hregionserver. client. client. client. client. hregionserverclient. getclient may hang due to rowcache be
camel - 14263 : camel - core - add type converter to list of service that can be use by camel.
added handling for ConditionalTask in SparkCrossProductCheck to improve task management for conditional tasks
refactor action handling in Launcher and LauncherModel classes to improve code readability and maintainability
updated conditional logic in ` LoginInfoEndpoint. java ` and added new tests in ` LoginInfoEndpointTests. java ` to improve handling of
hbase - 25890 add more information about the state of a region in the log
renamed message to msg and result in HuobiAccountInfo. java to improve clarity and consistency in handling message and result
added a " PERIOD " column to the MariaDB database and created a corresponding test to ensure proper SQL generation for period columns in Mar
( )'' and'' for portable ( )
( ) for a few change to the dictionary.
updated visibility of NUM _ MILLIS _ IN _ DAY constant from private to public to allow external access to NUM _ MILLIS _ IN _
removed debug print statement from ImageResourceLoader. java to clean up the code and reduce unnecessary console output
[ java ] don't allow client to connect to aeron client in consensus module.
updated validation for implicit lambda parameters and adjusted type creation logic to improve type validation for implicit lambda parameters and enhance type handling for better code clarity
refactor hideMenuItem and showMenuItem methods in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by consolidating menu item hiding
added reserved0, BTC _ withdrawal, and BTC _ deposit types to the BTCETransHistoryResult class and updated corresponding assertions
replaced List with Set for series and exceptions in RetryFilterFunctions. java to improve performance and maintainability of the code
added a @ Deprecated annotation to PluginLoader. java to mark the class as outdated and indicate that the class should no longer be used
modified the condition for checking end time in LastQueryExecutor. java and added a new test case in IoTDBLastIT. java to
replaced an existing string append operation with the same content in HttpResponse . java to ensure consistency in code formatting
camel - main - maven - plugin : use slf4j instead of slf4j
added a line to set the safe area of the title bar to improve user experience by preventing accidental access to the title bar
modified the loop to iterate through TimeSeriesChunkMetaDataList instead of a traditional for loop to improve performance and readability of the code
added SQL syntax for altering a table in AlterTest. java to ensure proper SQL parsing and deparsing for the test case
make copystate public so that it can be use from other class
fixed - rexecutorservice. executabletask ( ) method throw concurrentmodificationexception
the file split feature be now use a constant instead of a local file suffix.
updated multiple Java files for consistency and clarity to improve code maintainability and readability
removed unnecessary line breaks in CompareFunctionsProcessor. java to improve code readability and maintainability
fixed checkavailablediskspace to properly recalculate expect disk usage
updated ` toString ( IndexReader ir ) ` methods in ` SegmentTermVector `, ` TermFreqVector `, and ` QueryTermVector
added a check for an invalid state in AbsSwipeUpHandler and unregistering the live tile restart listener in TaskAnimationManager to ensure proper handling
refactor ` getLockTimestamp ` and ` setLockTimestamp ` methods to use ` AppPreferences ` instead of ` Context ` to improve code clarity and
updated the artist setting logic in MediaInfoParser to use a helper method to improve code readability and maintainability by encapsulating artist retrieval logic
added null check for remoteMessage before accessing its data to avoid potential NullPointerExceptions when remoteMessage is null
npe in splittext when there be no header
added support for Windows key store type in HttpsConnectorFactory to ensure compatibility with non - Windows environments
updated the default check timeout value from 400 to 1 _ 000 in ` RestTemplateSenderTest. java ` and ` WebClientSenderTests. java
added an additional condition to handle cases where FILE _ NOT _ FOUND is ignored to ensure proper handling of file not found scenarios
added animateFromValue and animateDuration, and introduced animateInterpolation properties to enhance animation control in the Slider class
updated assertions in LineSeparatorProcessorTest. java to improve readability and maintainability of the test code
changed the maximum width and height from 512 to 1024 in TexturePacker. java to optimize texture packing for better performance
added a new test method ` negatedTernaryNotUnwrapped ` to ` UnnecessaryParenthesesTest. java ` and modified the
camel - hazelcast : fix potential npe in camel - hazelcast
added TextFeedbackTest to the JUnit test runner to enhance testing capabilities for text feedback in the application
replaced Math. round with Float. compare for score comparison to improve performance and readability of the code
updated DNSITY constants in AddAndScaleMultiImage. java and ResourceEditorApp. java to improve clarity and functionality of resource handling
added a new method ` arrayClassElementOffset ` and modified the ` loadHub ` method in ` ArrayCopySnippets. java ` to
added first line check for stage total in DefaultLogPublisher. java to improve performance by skipping unnecessary processing when stage total is zero
added remoteScmSupported property and its getter / setter methods in Configuration, RuntimeEnvironment, and Indexer classes to enable configuration of remote scoring
[ mielec ] add support for run, end, rminsehold state
replaced ` StatsLogCompat. write ` with ` SysUiStatsLog. write ` in ` StatsLogCompatManager. java ` to utilize
updated logger variable name from ` log ` to ` LOG ` for consistency to improve code readability and maintainability
added unit tests for project generation events to ensure correct serialization and deserialization of project generation events
ggb - 2141 : add preview point to select tool ( ggb - 2141 )
refactor JavaCompiler to improve code organization to enhance maintainability and readability of the code
[ hotfix ] [ test ] throw an exception if there be no time to execute random reads
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
added additional flags " -- gc - sections ", " -- gc - sections ", and " -- nocopyreloc " to the ldflags
updated the fallback URI construction in SpringCloudCircuitBreakerFilterFactory to include a fallback path to enhance flexibility in handling fallback URI formats
danielwagnerhall : move test to a separate project to make it easy to run the project
added checks for URI before matching " sst ", " si ", " si ", and " t " in ReadOnlySharedStringsTable.
added a method to retrieve the account net from a HTTP path and a corresponding test case to enhance the functionality of the HttpMethed class
added a check for available text width before layout handling in SwingUtilities2. java and modified the Look and Feel setting in Test6635110.
refactor FlatteningIterator to use a single instance of FlatteningIterator instead of multiple instances to improve code readability and maintainability by reducing
replace HTML tags with HTML tags for title and body in NotificationUtils. java to improve text formatting by removing HTML tags
doc : generate sample code in the java microgenerator ( # 4382 )
[ # 7441 ] instructorfeedbackedit questionsuitest : delete any exist question ( # 7442 )
modified the return values of ` getFirstRowNum ( ) ` and ` getLastRowNum ( ) ` in ` HSSFSheet. java `
added permission checks for launcher activities in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from being processed
[ java ] make sure to send the event to the cluster session when a session be receive.
updated hashCode and equals methods in AbstractParquetMapInspector to improve object comparison and hashing consistency
added handling for remotely closure in HTTP3StreamConnection to ensure proper buffer management when the connection is closed
added AutoCloseable interface to SplitReader to ensure proper resource management and prevent potential memory leaks
added a deepCopy method to the GsonBuilder class to facilitate deep copying of GsonBuilder objects
[ sparc ] fix npe in llscanner when cache be empty
refactor file opening and closing logic in RestClientRequestImpl. java to improve code clarity and streamline asynchronous file handling
updated the order of method calls in GrblController. java to improve code readability and maintain consistency
updated ClassLoader handling in MockFactory and added a new SearchingClassLoader class to improve class loading efficiency and facilitate combining class loaders
add test to demonstrate bug in jme3d.
added support for LEFT _ SEMI _ JOIN conditions in ConstantPropagateProcFactory. java to ensure proper handling of multi - semi joins in
updated HttpReceiver and HttpSender to check for CONTINUE _ 100 status instead of a boolean to improve response completion logic and ensure proper handling of
replace arraylengthoffset with arrayOopDescLengthOffset across multiple files to ensure correct handling of array length offsets
http : / / issues. apache. org / jira / browse / amq - 3573 - http : / / issues. apache
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
added a check for the application's running status before stopping it to ensure that the application context is only stopped when it is not running
changed the return type of the ` drawItem ` method from ` void ` to ` GlyphLayoutItem ` to allow the method to return
refactored metrics handling in SpringmvcClient and modified exception handling in CodeFirstSpringmvc to improve code clarity and maintainability by centralizing
updated accountAgeWitnessService to use accountAgeWitnessMap instead of accountAgeWitness1 to improve code clarity and maintainability by
refactor StructureHeader and StructureReader classes to improve code readability and maintainability to enhance maintainability and readability of the code
added a new ` ResourceUrlProviderExposingInterceptor ` bean and updated interceptor registration in ` CasWebflowContextConfiguration ` to enhance support
add a new dextransformer that transform a method call to a return statement.
feat ( rule ) : add property to enrichedruledto
removed the NOFOLLOW _ LINKS option from the Files return in PathResource. java and added new symlinkDir parameters in AliasCheckerSymlink
[ flink - 17725 ] [ table - planner ] remove sql dialect from execution context
refactor ` AndroidPackageableCollector ` to use ` Supplier < ImmutableSet < String > > ` instead of ` ImmutableSet < String > ` to improve
added test case for pmd. foobar package.
added a configuration for minimum cross compaction unseq file level in IoTDBDescriptor. java to allow customization of the minimum number of unseq
[ hotfix ] move resourcemanager class into active package
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify the purpose
replaced URI. create with URI. create in ZipResource. java and added a new test class ZipResourceTest. java to improve URI parsing
updated listener initialization and upload status checks in ExpandableUploadListAdapter. java to improve code readability and ensure proper handling of upload status
refactor class configuration handling in RobolectricTestRunner to improve clarity and maintainability of the code
updated block and item registry handling in ModelLoader. java to use Predicate for better filtering to improve performance and reliability of block and item registry
refactored method signatures in AbstractDataChangedListener and WebsocketCollector to use ` AbstractDataChangedListener ` instead of ` SyncDataService ` to enhance
updated JSONPojoConvertor to handle enum values correctly to improve type handling and ensure correct conversion of enum values
added a warning message when the ` -- view ` option is deprecated and will be removed soon to improve user feedback regarding the deprecation of the `
replaced String with byte [ ] for originalPayload in GWTRequestWrapper. java to improve memory handling and streamline payload processing
updated GyroControl class to implement OrientationEventListener and introduced OrientationCorrectionListener to enhance sensor synchronization handling based on orientation changes
fix potential arrayindexoutofboundsexception in biomedictionary
replaced instances of ` println ` with ` print ` for evaluated functions in ` GetInterfaceTest. java ` to improve clarity and usability of
removed redundant variable assignment in FileCompilerConfig. java to streamline code by eliminating redundancy
added a new interface ByteToLongCollector with supplier and combiner methods to provide a mechanism for handling byte - to - long data types in the collector
added preload functionality to MMapDirectoryFactory to enable or disable loading based on configuration settings
added custom metrics for various world, economy, plot, and mysql in BukkitPlatform. java to enhance monitoring capabilities for various
refactor QuickConnectREST class to improve connection handling to enhance performance and reliability of the connection process
added aspect ratio and default card image in CardPresenter. java to enhance visual presentation by providing a default card image
refactored authenticationcountselector to use contextutil instead of isImplicit ( )
updated cloning logic for long, double, and byte arrays in VectorHashKeyWrapper. java to ensure proper handling of empty arrays and prevent potential
added tests for the " System. nanoTime ( ) " phase in TimeChangeTest. java to ensure that the system. nanoTime ( ) functions
added trimming of lines in MultiPartFilter. java and print parameter value in MultipartFilterTest. java to improve input validation and provide debugging
fire ` ` domoblioot'' event for ` ` domobliot'' and ` ` domobliot''
( ) ) should not be ( )
[ beam - 10868 ] remove unsupportedoperatorvisitor and use it in the planner
added RdepsFunction to the GraphEnhancementQueryEnvironment class and updated related tests to enhance dependency resolution and improve test coverage for sub
refactor character class methods for improved readability to enhance maintainability and ease future updates
replace selectionOption. setSelectedIndex ( 1 ) with selectionOption. setSelectedIndex ( 1 ) and add logic to scale entire rocket to improve
replaced ` Arrays. toString ( ) ` with ` Arrays. getBytes ( 4 ) ` in ` UpdateableResultTest. java ` to improve
refactor the ` attachTimeBoundary ` method to accept a ` TimeBoundaryInfo ` object instead of a single ` getOfflinePinotQuery `
fix ajp and http : / / / issues. apache. org / bugzilla / show _ bug. cgi? id = 468
updated regex pattern and modified album title handling in EightmusesRipper. java to improve the accuracy of the album title and enhance
replaced calls to ` mDevice. wait ( ) ` with ` TestHelpers. wait ( ) ` across multiple files to streamline code by
added a condition to check if the profile is a phone or landscape in QuickstepLauncher. java to ensure proper layout handling for phone devices in
replaced calls to ` getValue ( ) ` with ` unwrap ( QueryImpl. class ) ` in ` PartTreeJpaQueryIntegrationTests. java
added a method to read matching lines from a file to enhance security by enforcing privileged access to improve file access control
added dynamic check for the result stream method in JpaQueryExecution to ensure proper handling of query execution based on the presence of a stream method
fix npe in physic processor when entity be null.
add test for entry processor with predicate
add multichat operation set definition and gibberish protocol implementation. related issue : issue # 241, issue # 244,
updated HTML message in Utils and UtilsTest to use a dynamic font instead of a hardcoded value to improve flexibility and maintainability of the HTML output
disable menu item for empty string ( # 3451 )
updated the file path format in Aapt2Link. java and added a new RmStep for building the path to improve file path handling
replaced instances of ` new Capture ` with ` newInstance ( ) ` in ` ExternalJavacTest ` and ` ThriftOverHttpServiceTest `
fix # 2225 : double - click clear select geos but do n ' t update the property view
don't catch MarkedYAMLException in YsldValidator. java to improve error handling for parsing errors
added ` isCanceled ( ) ` method implementations across multiple classes to provide a standardized way to check if a call can be canceled
modified the ` isAnnotationPresent ` method across multiple classes to provide a default implementation for annotation presence checks
added default implementation for the ` removeAllWidgets ` method in ` UILayout ` to indicate that the method is not implemented yet
[ hotfix ] [ yarn ] set log level to info for yarn test
opensslcipher. getoutputsizeforfinal ( ) should return max _ value, not max _ value
added support for Fire TV Stick transcoding in PlaybackController to enhance video processing capabilities and ensure proper transcoding behavior for high - res
[ beam - 8470 ] use mock source with sample data source
replaced specific imports with a wildcard import and updated listener management logic to simplify the import statements and improve listener handling based on user preference
updated ` putString ` method to accept a byte array instead of a boolean array to improve memory efficiency and compatibility with native libraries
added support for BaseItemDragListener in FolderIcon. java to enhance drag - and - drop functionality in the application
added a method ` createEmptyArtifact ` to ` RepositoryConnector `, ` AbstractRepositoryConnector `, ` SignavioConnector `, and `
updated configuration keys in RabbitMQPublisherImpl. java for consistency to improve code readability and maintainability
removed unnecessary calendar checks in VideoViewerActivity. java to streamline code for better readability and maintainability
camel - sftp : use fileutil. compactpath to clean up file on window
( chore ) camel - weather : increase test timeout to 20 second
renamed variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability by using a more descriptive variable name
add a condition to check for LARGE _ FERN alongside DOUBLE _ TALLGRASS in BlockDoublePlant. java
replaced ` tree. setFocusable ( false ) ` with ` tree. setRequestFocusEnabled ( false ) ` in TranscodingTab. java to
added exception handling to VirtualMachineManagerImpl. java to ensure proper error propagation during VirtualMachineManagerImpl operations
added acceptLicense method to DB2TestSystem and modified conditional checks in DockerDatabaseWrapper to improve licitation handling and ensure compatibility with DB2
changed the visibility of the'units'variable from final to non - final and added a setter method for it to allow dynamic adjustment of the
added a new static final CurrencyPair BTC _ ZMW in CurrencyPair. java to facilitate the creation of currency pairs for
added logic to set the number of samples in TestPBRLighting. java to ensure the application uses the correct number of samples based on
reformatted tasklet assertions in StepWithSimpleTaskJobParserTests. java to improve readability and maintainability of the code
changed variable declaration from non - final to final in CentralAuthenticationServiceImplTests. java to enforce immutability and improve code clarity
make sure ggbabs ( ) return ` ` ( 1 )'' instead of ` ` ( 2 )''
added multiple ` addServiceOutput ( ) ` calls in ` DDLSemanticAnalyzer. java ` to improve code organization and maintainability by
[ jbrules - 3482 ] fix type coercion for bigdecimal ( # 3482 )
added " org. eclipse. jdt. " to the WebAppContext class to hide the Jdt used by Jetty
changed the return value of the authentication check from super. useAuthCache ( ) to false to simplify the logic by returning false instead of super
updated namespace assignment to use Utils. capitalize for capitalization to ensure consistent capitalization of segments
camel - direct - should use directconsumernotavailableexception instead of camelexchangeexception for now.
added null check for zooKeeper before accessing its state to avoid potential NullPointerExceptions when zooKeeper is null
removed an unnecessary space in the progressBar initialization step to improve code readability and maintainability
added a new method ` runOnUiHelperThread ` and updated vibration and cancel calls to improve code organization and ensure proper execution of UI helper
added a method to update the last remote stream ID to ensure proper handling of the last stream ID in the HTTP / 2 session
disable text anti - aliasing in editor header and toolbar
[ java ] remove unused termwindowsize variable in driverconnection
refactor ( ctannotationimpl ) : remove static import of enums
updated ExoPlayer. java file to improve playback performance and enhance user experience
modified the return statement in WRobotPeer. java to use a Rectangle object instead of an integer to improve performance by eliminating native method
added a new method ` newPrintStream ` to handle custom encoding for ` FileOutputStream ` to improve flexibility in output stream handling by allowing different
increased vibrate duration from 1 to 25 milliseconds to improve user experience by providing a smoother visual feedback
added necessary import statements in multiple Java files to enhance code clarity and maintainability by organizing import statements
updated constructors in WebSocketClient to remove unnecessary'executor'parameter to streamline the code for better readability and maintainability
simonstewart : make i18ntest. test _ i18n work again
use load constant instead of illegal class change error.
added context. restoreAuthSystemState ( ) to XmlWorkflowServiceIT. java to ensure proper handling of authentication system state during tests
added a new ` LowercaseComparator ` class and updated the superclass calls to use this new comparator to improve code organization and maintainability by
refactor JavadocTool to support multiple JavaFile files and improve error handling to enhance code clarity and maintainability by consolidating parsing logic
simonstewart : add ability to toggle an option in a single select
removed exception for count errors in HighestKvno. java to streamline code by eliminating unnecessary exception handling
added error handling for retrieving attributes in HDF5BatchReader to improve robustness by preventing errors when retrieving attributes
[ beam - 10471 ] fix bigqueryio. expand to return a result
updated XML root tag from " copySnippetRequestEntity " to " createTemplateRequestEntity " and added ApiImplicitParams annotations in ProcessGroupResource
added a new file TestMultiANewArray. java that implements a class file writing mechanism to facilitate testing of multi - dimensional array
cloudstack - 7143 : remove global config parameter ` ` advanced'', ` ` secondary. storage. vm''
refactor block ID handling in SyncBlockChainMsgHandler. java to improve code readability and maintainability
added functionality to set the theme of the preview tab in PreviewTabView to ensure the application uses the appropriate theme based on user preferences
added null check and close method for the reader in VectorizedParquetRecordReader. java to ensure proper resource management and prevent potential memory leaks
added idle timeout configuration and a test for HTTP idle time in ConnectorTimeoutTest. java to ensure proper handling of idle connections and improve test coverage
add property to define dictionary, dictionary, and signature
updated references from ` readIdentifier ( ) ` to ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to
updated parameters in JpaPagingItemReader and JobLaunchingGatewayParserTests to remove unnecessary casting to improve code readability and maintainability
changed log level from warn to debug for child node logging to reduce log verbosity and reduce noise in logs
refactor ColorExtractionService to use a new method for retrieving hotseat palette to improve code clarity and maintainability by encapsulating color extraction logic
added methods for setting default data table entry and cell transformer in TypeRegistry to enhance flexibility in handling different data source types

regenerate : update license year for generated file ( # 4382 )
removed the projectGenerated variable and its associated getter method from ProjectGenerator. java to streamline code by eliminating unnecessary state management
corrected a typo in the conditional statement from ` contains ` to ` contains ` to improve code readability and maintainability
added a new ` Contact ` class and updated routes in ` Routes. java `, and modified ` BodyParserParserPost. java ` to
guac - 1156 : use objectpermissionset instead of connectionpermission.
updated RELEASE _ VERSION from 20 to 21 in IconCache. java to reflect the new release version
camel - jbang - fix typo find by codespell on flink - server
replaced occurrences of ` findWhereNameLikeAndActive ` with ` findWhereNameOrAliasAndActive ` across multiple files to improve clarity and
replaced ` perDocConsumers. values ( ) ` with ` IOUtils. closeSafely ( true, perDocConsumers. values ( )
updated AbstractDataChangedListener, HttpLongPollingDataChangedListener, and RuleServiceImpl classes to improve code organization and maintainability
replace menu. show ( ) with overflowButton. setOnClickListener ( OnClickListener ) to enhance user interaction by enabling the overflow button on click
updated failure messages to include " is a null reference " and " is a non - null reference " to clarify the purpose of the failure message
ggb - 2481 fix for help button in the algebra view
test : move protobufferutilstest to util package
fix divider position on mac o x
update aux file generation to include crossref entry
[ geos - 6861 ] move map to geotools api, use metadatamap instead
changed the type of'extractTypes'from'List < DataTableDescriptor > >'to'List < DataTableDescriptor > dataTables'to
fix an issue with the update of the meta contact when a contact be update.
updated import statements for Command from org. apache. sshd. server. Command to org. apache. sshd. server. command.
added a test method to clean up audit log table post parameters by position to ensure that the deletion of the audit log table does not affect the
added @ SuppressWarnings annotation and changed the return type of inject method in ComponentContext. java to improve type safety and eliminate unchecked cast warnings
added regex pattern matching for comment lines in ACLFileParser to improve comment parsing efficiency and maintainability
updated import statements and modified the ` isReadable ` method in ` MapRDBFormatMatcher ` to include additional parameters for better file handling and
added an ` ancestorDimensionValues ` map and updated related methods in ` StarTreeImpl `, ` StarTreeNodeImpl `, and ` Star
added user unlock state check before dumping plugin manager and refactored view closing logic to improve user experience by ensuring the dump only occurs
corrected a typo in the variable name from widthStr to positionStr to ensure accurate identification of the position string
refactor conditional logic in PKIXValidator. java to improve readability and maintainability of the code
[ hotfix ] [ test ] add archunit test for the test code
updated package names for AlibabaDubbo integration test files to improve organization and clarity of package structure
vpc don't skip project network in vpc
updated the way ` labelJsonElement ` is retrieved in ` RuntimeTypeAdapterFactoryFunctionalTest. java ` to improve clarity and correctness of the
added a boolean flag ` storeUndoInfoForProperties ` and its getter and setter methods in ` App. java ` to track whether to store
refactor gradProp retrieval to use AccessController for security to enhance security by encapsulating property retrieval in a privileged action
updated StreamCloseTest to use Awaitility and Awaitility for better synchronization to improve test reliability by ensuring all streams are available
removed the doAfterFlush ( ) method from DocConsumer and adjusted its initialization in DocFieldProcessor and TermVectorsConsumer to streamline the handling
updated the configuration metadata generator to filter out non - deprecated errors and added a new property for nested configuration properties to improve error handling and categorize
refactor BiInt2ObjectMap and Int2ObjectHashMap to use ` values. length ` instead of ` capacity ` and ` mask ` to
increased HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and refactored file renaming logic in Hive. java to
improve logging and exception handling in ParallelNioSender. java to enhance traceability and debugging capabilities during message sending
added a null check for the context variable in the SchemeAndroidIDE class to ensure proper handling of null context in the application
[ gr - 25836 ] make native - image build work with non - native image
changed the return type of ` modifyGrantedAuthorities ` from ` void ` to ` List ` in ` SwitchUserAuthorityChanger ` and
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and added new classes ` JaxrsSpringIntegrationTest
add settimeout ( ) and setquerytimeout ( ) to the poolutil. settimeout ( ) method
added data providers for general, supplementary, and supplementary character tests in XslSubstringTest. java to enhance test coverage
updated the close method in the StaxEventItemWriter and NoStartEndDocumentWriter classes to ensure proper resource management and prevent potential memory leaks
added support for sequence next value in MariaDBDatabase to enhance database compatibility with MariaDB versions
updated formatting in multiple buffer classes for consistency to improve code readability and maintainability
replaced imports of ` BrokerResponse ` with ` TableDataManagerProvider ` in multiple test files to utilize ` TableDataManagerProvider ` for tracking
updated SSLExtension to include an additional property " jsse. enableMFLNExtension " to enhance security by enabling MFLNExt
changed the type of the ` iterator ` variable from ` T ` to ` ObjectHashSetIterator ` and updated its instantiation to improve type safety and
updated character limit from 22 to 23 in Compose. java and TweetFragment. java to correct the character limit for improved functionality
added datapoint ttl attribute to cassandra datastore.
( ) ) should have an option ( )
added method to get terrain at a cell in terraingrid.
added default value printing in the Pretty class and created a new file T6665791 with a test class for annotation annotation functionality to enhance
added error logging for missing quest encryption keys in ResourceLoader. java to improve error handling and provide clearer feedback on file not found
updated the return statement to check if the HTTP transport is not push to ensure that push support is only returned when not in push mode
refactor PointValue class to improve code readability to enhance maintainability and ease future updates
removed the sign method call from BlockUtil. java to streamline the code by eliminating unnecessary operations
modified the return logic in FileSystemView. java and added security checks in Win32ShellFolder2. java to enhance robustness by ensuring
updated method names and logic in ColumnText and PdfPRow classes to improve clarity and functionality to enhance code readability and maintainability while ensuring
replaced the ` undoTrash ` variable with ` undoNotesList ` and introduced a ` SparseArray < Note > ` to store and manage
[ # 7441 ] change the way feedback question id and comment be store in the db. ( # 7442 )
added null check for data in getTransferData method to ensure data is not null before proceeding with further operations
# 179 - remove unnecessary class and interface ( # 179 )
replaced the custom ` Padding ` class with a method that utilizes ` AppWidgetHostView ` to retrieve default padding for widgets to improve
refactor method handles and add consStringFilter and filter consString arguments in NashornBeansLinker. java to improve method handling and enhance argument
add instruction to javadoc about close the ` scanresult ` ( # 331 )
renamed the variable ` latch ` to ` goAwayLatch ` and updated its usage in the test to better reflect the purpose of the latch and
replaced ` getMessage ( ). getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest. java ` to improve
replaced ThreadLocal with a direct reference to the currentBook object in multiple classes to simplify code and improve performance by eliminating unnecessary thread management
added support checks for MethodInvocation and Object types in the vote method to ensure that only MethodInvocation is accepted and handle cases where the object is
removed unused GachaHandler and Tools imports from DataLoader. java to clean up the code and improve maintainability
added rowsAffected tracking and updated postUpdateLog method to accept it to improve tracking of affected rows during the update process
ggb - 2486 fix for margin in applet
updated foregroundFPS and backgroundFPS values from default to 60 to enhance application responsiveness and customization options
added ObjectReleaseTracker assertions in HdfsTransactionLog. java and TransactionLog. java to track and release object releases to ensure proper resource management and
replaced DefaultWebSocketFrame with ChannelFutureListener in DefaultHttpServer. java to improve WebSocket handling by adding a ChannelFutureListener
renamed ` TestApplicationEventListener ` to ` TestApplicationEventListener1 ` and introduced ` TestApplicationEventListener2 ` and ` OnStateMachineError ` to
replaced the activity start method with a list background method and added a method to set a default background color in SettingsActivity to improve user experience by
updated imports from org. apache. commons. lang3 to org. openhab. core. util. StringUtils and added null check for
added an ` accumulate ` method to the ` JavaUserDefinedAggFunctions ` class to provide a way to calculate the sum of values based on
[ hotfix ] fix checkstyle violation in hbase - client
replace VALID _ CACHE _ SET with REGEXP _ CACHE in RegExpFactory. java to improve efficiency by caching compiled regular expressions
added a static method ` reset ( ) ` to set the gameThread to null to provide a way to reset the game thread's state
added a login method that checks if the realm matches the login service in the DigestAuthenticator class to ensure that the login process does not proceed with
refactor parameter handling in SavedRequestAwareWrapper to improve clarity and efficiency to enhance code maintainability and streamline parameter merging logic
[ log4j2 - 1761 ] improve log message
[ hotfix ] remove unnecessary waitpoint countdown from ha service and commitlog
added a check for Android O SDK in PhotoViewerActivity and implemented a new method in Utils to ensure compatibility with Android O and improve user experience
updated schemaInfoLevel from minimum to basic to ensure compatibility with the latest SchemaInfoLevel requirements
pdfbox - 4892 : use bufferedoutputstream, a suggest by valerybokov
updated TestPayloads to use UTF - 8 encoding and improved byte array handling to enhance performance and maintainability of the code
fix mc - 103516 and mc - 103516. close # 714
updated container adapter entries in ProbeConfig. java to ensure compatibility with Tomcat versions
[ drools - 5482 ] add test case for accumulate in executable model
reordered case statements in NowSearchTerm and SearchTermBuilder classes to improve code readability and maintainability
pdfbox - 2576 : remove this'public'modifier from pdfcloneutility
updated RemoteEndpointServiceAccessStrategy to resolve HTTP method and headers using Spring Expression Language to improve flexibility and maintainability of the endpoint configuration
added a new method ` newResponseBuilder ` to the ` SearchHandler ` class to facilitate the creation of ` ResponseBuilder ` instances
added notification for command start action in AsyncBackgroundTaskManagerTest to improve user experience by notifying the command start action
added a recomputePreviewDrawingParams method in FolderIcon and refactored the computePreviewDrawingParams method in PreviewItemManager to improve layout
refactor tokenizer and filter handling in LukeRequestHandler to improve code readability and maintainability
replaced null checks with ParamChecks. nullNotPermitted for'plot ','generator ', and hotspot'to improve code readability
added verbosity support to the ` createSubContext ` method in ` JavacStep ` and modified its usage in ` ExecutionContext ` to enhance logging
added a check to convert the schema to uppercase if it is not null and the database type is " oracle " to ensure correct formatting of the
log4j2 - 1343 fixed test failure in asyncloggerallthreadcontextimplementationstest
added a new file TestShrinkToOneRegion. java with a main method that calls System. gc ( ) to facilitate testing of
replaced string splitting with Splitter for better readability to improve code maintainability and leverage Google Guava's Splitter for string manipulation
removed unnecessary utf8 string conversion in AnalyzingInfixSuggester and added a new test method in AnalyzingInfixSuggesterTest to
updated local attachment handling and corrected encoded string format in PushsaferMessageBuilder . java to improve attachment processing and ensure proper data encoding for both local and remote attachments
removed the showLabelStats command from ModelExplorer and SequenceModelExplorer, and updated the print method in StripProvenance to streamline
pdfbox - 2576 : remove unneeded null check, a suggest by valerybokov
fix typo find by codespell on fossies. org
updated the ` evaluate ` method in ` UDFRound ` to accept a ` Double n ` instead of a ` Long ` and ` Integer `
refactor injectionEnabled and useIncludedLibrary initialization to use ConfigParser. valueAsOrElse to improve code readability and reduce boilerplate code
changed the visibility of the Test1 and Test2 classes from package - private to public to allow access to these classes from other packages
updated permission handling in PlayerEventListener. java to use " deny. no _ enter " instead of " permission. no _ permission _ event "
fix bug in conditionandor and conditioninconstantset ( # 2173 )
' and'','' should be test for numeric field ( # 349 )
added tests for box and circle creation in Box2DCharacterControllerTest. java to enhance test coverage for box and circle interactions
added tests for increasing globalbuffersize, threadbuffersize, and memorysize in TestBadOptionValues. java and TestMemoryOptions. java
removed redundant check for " must be a power of 2 " in ObjectAlignment. java and Options. java to streamline code by eliminating
added target package extraction functionality in Android instrumentation tests to enhance the robustness of package extraction and improve error handling
refactor DocHelper class to improve code structure to enhance maintainability and readability of the code
fix warning : use arraylist instead of an array.
replaced explicit type conversions with explicit type casting in Test6987555. java to improve type safety and reduce boilerplate code
reformatted code for better readability and consistency to improve code maintainability and adhere to coding standards
refactor Inflection class implementation to improve performance and maintainability of the code
added getter and setter methods for the locale in EvaluationContext to enhance locale management capabilities in the EvaluationContext class
removed unused import of Plugin in SummaryPrinter. java to clean up the code and improve maintainability
added a break statement in DrawerActivity. java to ensure proper flow control in the code
updated import statements and debug log message format in MongoQueryCreator. java to improve query handling and enhance debug logging clarity
add a system property xwork. loggerfactory to allow configuration of xwork. loggerfactory
updated adminAddPeerFailsWhenP2PDisabled to adminAddPeerHasNoEffectWhenP2PDisabledOnTargetNode and adminAdd
align bean name with naming convention in auto - config
added concurrent map for PStore configurations to improve performance by utilizing a concurrent map for write operations
refactor ` deleteFiles ` method to improve code organization to enhance readability and maintainability of the code
refactor ServiceLoaderSpliterator to use ServiceProvider instead of Provider to improve clarity and consistency in handling service providers
don't throw illegalargumentexception if a field don't exist.
added toolchain creation checks in ` AbstractCell `, ` ToolchainProvider `, ` DefaultToolchainProvider `, and ` DaemonLifecycleManager
don't call removecontext if the engine be already add to the engine
refactor : use string. contains instead of string. indexOf
updated linker flag handling to use exported linker flags instead of exported linker flags to improve the flexibility and accuracy of linker flags management in C++ library
refactor ` AbsSwipeUpHandler ` and ` RecentsView ` to use a new method ` updateRecentsRotation ( ) ` to improve
updated listener type checks to use generics for better type safety to enhance type safety and clarity in listener handling
update abstractblockchain to use the block's hash string instead of the new block's hash
[ hotfix ] fix typo in defaultmessagestore. getphysic ( )
removed unnecessary try - with - resources for JvmGcMetrics initialization to streamline code for better readability and performance
[ iotdb - 6481 ] fix the problem of get _ message _ stats _ total _ found and get _ message _ times
added @ Deprecated annotations to multiple query classes to indicate that these classes are outdated and should no longer be used
added a method to check for the presence of the system UI object in the AbstractLauncherUiTest class to ensure that the system UI object is
changed access modifier of logger and principals, sessionIds, and sessionIds from static final to enforce immutability and improve code clarity
added checks for empty cookieJar in InMemoryCookieStore and called removeAll ( ) in NullUriCookieTest to ensure proper handling of empty cookies and
added debug statements and improved handling of null values in BonsaiWorldStateArchive and BonsaiWorldStateUpdater to enhance debugging capabilities and
updated methods in ITextRepository, LimitedSizeCacheTextRepository, and NoCacheTextRepository to accept CharSequence instead of String to enhance flexibility
added a @ NotYetImplemented annotation in AlertsTest. java to mark the test as unimplemented due to a known issue in mar
added a finally block to ensure the connection is closed in a finally block to improve resource management and avoid potential resource leaks
rename WindowsCommandLineEscape to WindowsCreateProcessEscape and update related references to improve clarity and maintainability of the code
added synchronization to the heartbeatExecutorService initialization to ensure thread safety during heartbeat operations
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and refactored asynchronous build result transformation to improve asynchronous
added a new method ` updateFirstLineShowing ( ) ` and updated its implementation in ` TextArea. java ` to ensure proper handling of the
added local and staging directories to configuration in TestInformationSchemaWithPrivilege. java to improve the organization of temporary files across different environments
refactor graphics configuration retrieval logic in Component. java to improve readability and maintainability of the code
tika - 3481 -- add unit test for oom in legacy mode
camel - core - optimize rout engine to reduce stack frame in use during rout
add a - model option to printTagList which allow user to specify a model file
updated SQL generation method from ` getFullyQualifiedName ( ) ` to ` toString ( ) ` in ` InsertDeParser. java ` and added
http : / / issues. apache. org / jira / browse / amq - 4237 - add test for eofexception
[ java ] use awaitleadermemberid ( ) and connectclient ( ) instead of startfromtruncatedrecordinglogtest
changed the type of ` arc ` from ` int ` to ` float ` in ` LineBorder ` and ` Test4252164 `
added checks for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter to enhance robustness by preventing potential NullPointerExceptions
added a new column " DEPLOYMENT _ ID " to the statements in StandardChangeLogHistoryService and CreateDatabaseChangeLogTableGenerator to
pdfbox - 2576 : update usage message to reflect the new interactive form
removed the'moreColumnsOk'parameter from several ` canUseIndex ` and ` getIndex ` methods to simplify the method signature and eliminate unnecessary
added provisional engines to the QuickfixjComponent and updated related tests to improve engine management and ensure accurate testing of provisional engines
added support for mixed content mode in RoboWebSettings to enhance flexibility in handling different content modes
added new corporea block and slab block, and updated vanilla implementation to enhance mod functionality and improve mod organization
updated connection handling logic in ConnectionFactory. java to improve performance and reliability of connection management
added ` EnableDisableMenuItems ( ) ` method to handle menu items in GpsMainActivity to improve user experience by providing appropriate menu icons based
updated the message for the empty list in ExtendedListFragment to include a filter list to enhance user experience by providing relevant options
hhh - 14632 - fix test failure in entitytests
added auto - resizing functionality to the table in MotorMountConfigurationPanel to improve user experience by preventing unnecessary resizing of the table
updated LINE _ SEPARATOR assignment to use system property to ensure consistent line separation across different operating systems
added getter and setter methods for creator, subject, and subject in POIXMLProperties. java, and updated TestPOIXMLProperties. java
reformatted the call to super. doStop ( ) for consistency to improve code readability and maintainability
[ java ] don't try to delete a file if it don't exist.
[ j2kt ] update unsatisfiedtypebounds to reproduce the exact problem we be try to solve in treebasedtransform .
added utility methods to check if a file name ends with ". jmod " to ensure correct handling of class files based on the presence of
updated TreeBackedElement and TreeBackedPackageElement constructors to remove the canonicalizer parameter to improve code clarity and eliminate dependency on the canonical
refactor token request creation in Saml2TokenGranterTest and UserTokenGranterTest to use a new PublicTokenRequest instance
updated the method to use ` valueRangeObject ` instead of ` arrayLength ` to ensure the correct element is added to the list
added sync method to ZKAssign and ZooKeeperWatcher classes to enhance synchronization capabilities for ZooKeeper connections
added checks for EGL _ NO _ CONTEXT in GlUtil. java to improve error handling for OpenGL context validation
jbrules - 2231 : ensure that a ruleflowgroup can be add and remove from the working memory when a ruleflow group
added a return statement in HystrixDashboardConfiguration. java to ensure proper execution flow and avoid potential null pointer exceptions
removed exception handling for non - existent pipe in DropPipeProcedure. java and added assertions in IoTDBPipeIT. java to improve error
increase timeout for clientqueuenewaitimeout test ( # 2451 )
refactor : replace signatureprinter with defaultjavaprettyprinter in ctreferenceimpl
changed method visibility from public to protected in RegisteringTest. java to allow subclasses to access the validateInstance method
updated imports in GeoPointInPolygonQuery, GeoPointField, GeoPointTokenStream, GeoPointInBBoxQuery, and GeoPointInPolygonQuery classes to
added a new ` FakeBuildable ` class and updated the ` OnDiskBuildInfoTest ` and ` OnDiskBuildInfoTest ` to
fixed an issue where an empty bucket wouldn't be render
renamed ` path ` to ` timeseries ` and updated related references in ` TSParser. java ` and ` SQLParserTest. java `
fix a bug in the tubecalc that could lead to an out of bound exception.
replace usage of ` getBucket ( gcsUri ) ` with ` BlobId. of ( gcsUri ) ` to improve clarity and consistency
removed redundant call to blockCloseVertxByName in TestHighwayTransport. java to streamline code by eliminating redundant method call
ddl - 348 - db migration : add ddl - based view to ddl - db migration
updated the expected number of engine in the test from 2 to 3 to accommodate new clustering features
added JUnit Ignore annotation to the SynDataReplyDataLoadTest class to temporarily skip the test due to potential issues with test execution
refactor ParserCacheCommand to use ParserStateObjectInputStream instead of ObjectInputStream and add a new ParserStateObjectInputStream class to improve type handling and
updated object quoting strategy assignment logic in ChangeSet. java and DatabaseChangeLog. java to ensure proper handling of object quoting strategy based on
updated MetainfoParser to use fromXmlStream instead of parse to improve compatibility with XML file handling
deleted the CsrfControllerAdvice. java file to remove unused CSRF controller advice related to CSRF token handling
added a method to quote path lists in AntCompiler. java to enhance path handling and improve readability of the output
added a scrim animation when resuming from action screen off to enhance user experience by improving visual feedback during action screen transitions
updated the maximum long value from 2 to 1 in TypeInferenceUtils. java and added new constants in TypeInferenceUtilsTest. java to improve
regenerate client with updated copyright year ( # 4382 )
added handling for UNC and absolute path prefixes in WindowsPathParser to improve robustness and prevent invalid path formats
refactored the instantiation of MulticastSocket to directly use the local port to simplify code and improve readability by eliminating unnecessary parameters
updated the close method of the writer in TestWildcard. java to ensure proper resource management and prevent potential memory leaks
replace ` nBits ` with ` nBits. clone ( ) ` in ` IndexColorModel. java ` to ensure that the returned value
changed the visibility of the ` deriveCollectorName ` method from private to protected and added unit tests for the ` ProfilerCollector ` class to
refactor ` MappingMongoConverter ` to use a new method ` requiresTypeHint ` for type hint checking to improve code clarity and maintainability by
added performance measurement for creating a proxy factory in ProxyMaker. java to improve performance tracking during proxy creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine. java to suppress unchecked warnings during compilation
only if a connection fail to open
refactor reinflateWidgetsIfNecessary method to improve widget management to enhance code clarity and maintainability by encapsulating widget reinflation logic
added a new file ` DeleteInsideFileDialogTest. java ` to test the right - click dialog in a file dialog to ensure that the right
fix lwjgl2test. testSoftwareMouse ( ) to not call inputmanager. setCursorvisible ( false )
instructorstudentlistpageuitest : add ability to upload and update student profile picture
camel - core - maven - plugin : add option to skip test in camel - example - maven - plugin
changed the parameter type of the fling method from'pointer'to'x'and'pointer'to improve clarity and maintain consistency in
updated QueryDslJpaRepository to handle null pageable cases to improve robustness by preventing potential NullPointerExceptions
[ hotfix ] [ runtime ] add memorymanager. computememorysize ( ) method that take a fraction of the amount of memory to allocate
change test timeout to 20000 to prevent intermittent test failure
refactor SnowballAnalyzer to improve code structure to enhance maintainability and readability of the code
refactor InternalBatch initialization and indexing logic in StreamingAggTemplate. java to improve code clarity and ensure proper handling of batch processing
improve error message for plugins that need to be null.
added a default method ` stream ( TableIdentifier < ENTITY > tableId ) ` to the ` StreamSupplierComponent ` class to provide a default stream
( ) ) do at once ( )
refactor InjectorProxy and StandardInjectorProxy to use newInstance method instead of setAccessable to improve flexibility and maintainability of the code
[ hotfix ] remove out. close ( ) from stream create function
added unit tests for SQL parsing and deparsing in ` ShowStatementTest `, ` UnsupportedStatementTest `, and ` CreateTableTest
change return value from null to ImmutableList. of ( ) to ensure immutability of the returned list
updated the copyright year in the NamedSetTest. java file to ensure the test reflects the correct copyright year
added handling for WebSocketReconnect in DeconzBridgeHandler. java and improved connection management in WebSocketConnection. java to enhance connection handling and improve
replaced ` setAttribute ` with ` removeAttribute ` for session attributes in ` AbstractProcessingFilter. java ` to improve resource management by removing unnecessary null values
hbase - 25836 testregionreplicareplicationendpoint should not call hbase. getAdmin ( ). createtable ( )
added configuration to PMS in FormatRecognitionTest. java to ensure consistent configuration for PMS settings
create ova data disk template only if the template be create from the template
updated imports and annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests to use JUnit4 and SpringJUnit4 to improve test structure and align with the
added @ Override annotations to CentralAuthenticationServiceImpl, RemoteCentralAuthenticationService, and NoOpLockingStrategy classes to ensure proper method overriding and improve code
updated table and table names in AppendOnlySchemaIT. java for consistency and clarity to improve code readability and maintainability
added a check to ensure deleted documents match the expected document count to improve error handling and provide clearer feedback on document count mismatch issues
add loggername ( ) and logtrace ( ) method to siplogger.
( ) ) should be 0 ( )
removed default value for handleFileUploads in VertxPlatformHttpServerConfiguration. java and set it in VertxPlatformHttpEngineTest. java
added a test for default CSRF protection matcher to ensure proper handling of requests with case sensitivity in the Csrf filter
replaced static fields with instance fields in HotSpotObjectConstantImpl. java to improve code readability and maintainability
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in method naming conventions
updated FileIO to use Instant. now ( ) instead of Instant. now ( ) and added a watermark to the filesystems match method to
fix potential npe in sqmectestatement. copy ( )
added import statement for ResultSetMetaData in QueryCompilerTest. java to utilize ResultSetMetaData functionality in the query compilation process
updated command line arguments in JsLibrary. java to use the project filesystem's root path to improve clarity and maintainability of the command line
updated slider model parameters in RailButtonConfig. java to improve slider responsiveness by adjusting slider bounds
fix an issue that could cause the game crash.
added support for expression language in KerberosProperties to enhance flexibility in expression language configuration
removed null checks and simplified the method for setting the item mount point scale to streamline code and improve maintainability by eliminating unnecessary null checks
updated the ` setupViews ` method to accept a ` ScrimView ` parameter and adjusted animation properties accordingly to improve animation responsiveness and
[ hotfix ] add an option to enable periodic materialization
added a private field ` value ` and its getter / setter methods in ` ProtocolParameter `, updated the ` List ` and ` ParamTag
add unit test for http : / / issues. apache. org / jira / browse / amq - 4237
added a boolean field ` isBumped ` and modified the ` parseDetails ` method to return a boolean indicating if the details contains " B
added " Content - Type " header with a value of " application / x - www - form - urlencoded " in SwitchToPostInterceptor.
refactor EmbeddedClientConnector to improve code structure to enhance maintainability and readability of the code
replaced SQLFeatureNotSupportedException with logging warnings in PhoenixResultSet. java to improve error handling and logging clarity during fetch size configuration
added initialization of AndroidNet in AndroidDaydream. java to ensure proper network setup and avoid potential null pointer exceptions
removed unused segmentMaxRowCount parameter from LLRealtimeSegmentDataManager. java to streamline code for better readability and maintainability
removed the'false'parameter from the getDepositAddresses method calls in KrakenAccountService. java to simplify code by eliminating unnecessary
hbase - 25836 remove unused prefixtree class from tablemapreduceutil ( chunhui )
added a boolean field ` inflationFailed ` in ` DesignerActivity ` and made the ` root ` variable final in ` AttrInfo ` to
updated PushbackInputStream class to improve input stream handling to enhance performance and maintainability of input stream processing
add a schedule phase to check if a node be a lowerable node
updated the error message from'download _ folder _ failed _ content'to'sync _ folder _ failed _ content'to improve clarity and
[ flink - 11737 ] make mink - mink - tests work with new file format
updated the handling of deleted documents in ReadTask. java to improve null safety to enhance robustness by preventing potential NullPointerExceptions
updated the method call from ` super. setTransformRefresh ( ) ` to ` setBoundRefresh ( ) ` to ensure proper handling of refresh
only if a method be uninterruptible.
added framebuffer size callback and updated window size handling in LwjglWindow. java to improve window size management and ensure proper resource management
updated translation and animation calculations in LauncherAppTransitionManagerImpl. java to improve animation accuracy and performance during transitions
should'' and'' to'and '. '.
added setLength methods to CompoundFileWriter, FSDirectory, and IndexOutput classes to provide a way to set the file length in the output stream for
updated AndroidNdkScriptGenerator and AntScriptGenerator to include memcpy _ wrap. c and modified imports in LwjglDebugStarter
camel - aws2 - s3 : use sourcebucket instead of sourcebucket when copy a key
added permission check for " * " in RuleBasedAuthorizationPlugin. java and updated test cases in TestRuleBasedAuthorizationPlugin. java to enhance
refactor ZookeeperClientServerRegisterRepository to improve handling of data and event type to enhance code clarity and maintainability while ensuring correct handling of
refactor ReturnsDeepStubs methods to improve clarity and functionality to enhance code readability and maintainability by using more descriptive names
updated the logic to convert ` getCallValue ( ) ` to ` Byte ( " 0 " ) ` when ` getCallValue ( ) ` is
fix log message for date parse failure
updated the algorithm mapping in PKCS12KeyStore. java and modified the PBE _ ALGO constant in PBETest. java to improve algorithm
pdfbox - 4892 : rename ` ` length'' to ` ` inputlength'', a suggest by michael klink
added validation for job parameters in CommandLineJobRunner to improve error handling and provide clearer feedback for invalid job parameters
updated assertions in SmtpTests and MailTests to remove carriage return characters to simplify test expectation for better readability and maintainability
updated case statements in ExtendedConnectionDataSourceProxy. java to use " - > " instead of " equals ", " hashCode ", and "
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for sequence ID management to improve performance and maintainability of sequence ID generation
added a new file ` Test. java ` containing a class ` Test ` with a static method ` sum ( ) ` to provide a utility
updated configuration properties from private to protected in ShadowWifiManagerTest and WifiUsabilityStatsEntryBuilder to allow subclass access to these attributes for better
added a new Java file that implements a solution to generate and sort query results based on specified conditions
replace map with concurrentmap to improve performance
refactor taskbar recreation logic to improve clarity and maintainability of the code
refactor SyncFutureCache. java for improved synchronization handling to enhance performance and maintainability of the code
updated default DUBBO _ PROTOCOL _ VERSION and LOWEST _ VERSION _ FOR _ RESPONSE _ ATTATCHMENT from 20001 to 2000
fix false positive with uselessstringvalueof
added a new test method ` testEllipseNoseconeDrag ` in ` SymmetricComponentCalcTest. java ` to verify the
add a configurable target _ max _ type _ shard _ size to hollowproducer
added new version strings " 5.5. 5. 2 - cfs " and " 5.5. 5. 2 - nocfs " to ensure compatibility with
refactor CompilationTask to improve code readability to enhance maintainability and facilitate future updates
updated assertions to check for the location in test mode and refactored database parameter handling in DDLTask to enhance clarity and maintainability of
added an executor to clear the database change log table statement to ensure that the database state is reset before proceeding
updated RestClient and CallPath classes to incorporate version handling and improved null checks to enhance reliability and maintainability of the code by ensuring
only once
mow - 186 : fix some typo find by codespell on f3
added a new integration test in ` ConflictsResolveActivityIT ` and modified ` FolderPickerActivityIT ` to extend ` AbstractIT `,
[ gr - 11733 ] remove redundant phase in case of dev mode.
added a check for the length of the copy in StringHelper. java and updated tests in StringHelperTest. java to ensure correct handling of
refactor JpaQueryCreator to improve type handling to enhance clarity and maintainability of the code
added authdurTooLong flag and updated pushBranchID logic based on authentication duration to enhance security by restricting push branch ID based on
added a new dispatch method for handling P25 messages to enhance message processing by properly dispatching p25 messages
added null check for the handler before calling checkClosed ( ) in WebSocketImpl. java and introduced a new test for clearing client handlers on end
[ ds - 3482 ] remove unused import and add test for indexablepooltask
refactor widget padding calculations to use a unified approach using Launcher. getPaddingForWidget to improve code clarity and maintainability by centralizing padding retrieval
added methods to hide all apps and close overlay in Taskbar UIController and TaskbarAllAppsController to enhance user experience by providing access to
removed the synchronized modifier from the launch method and replaced a sleep delay with a join to simplify the method and improve performance by eliminating unnecessary thread
updated mouse position calculations in JavaSEPort. java to use canvas coordinates to ensure correct positioning of graphical components in the application
replaced notificationManager calls with startForeground in UploadService. java to improve code readability and maintainability by using a dedicated method
implement fix for http : / / issues. apache. org / jira / browse / bugzilla / show _ bug. cgi? id =
hbase. client. retries. number should be set to 3
change log level from info to debug to reduce log verbosity
added trace logging for ` FileNotFoundException ` in ` ResourceUtils ` and changed the logging level from debug to trace in ` AbstractCipherExecutor `
added a new method ` getTickers ` in ` Bittrex ` to retrieve market tickers and created a corresponding response class to enhance
fix arrayindexoutofboundsexception in entityentry. getenumconstants ( )
[ scb - 2251 ] remove unused parameter ` endpoint. getclass ( ) `
updated character array construction to include additional characters to enhance character encoding support for better handling of special characters
added stylesheet functionality to ResourceService and updated related tests to enhance resource management by allowing custom stylesheet handling
added a call to clearIndex ( ) in TestFiltering. java to ensure the index is reset before further operations
updated method invocation for ` getAddress ` in ` X86MethodGenerator. java ` to use ` PointerParameterStrategy. class ` instead of `
added support for CockroachDatabase in CreateSequenceGenerator. java to ensure compatibility with Cockroach databases
simplified the condition for checking the name in ObjectStreamClass. java to improve code readability and maintainability
replaced UnsatisfiedLinkError with SymbolNotFoundError and added a new class to improve error handling by providing a more descriptive error message
refactored document retrieval logic in BinaryResponseWriter. java to improve handling of non - pseudo fields to enhance flexibility in document retrieval based on
added handling for PING and PONG cases in WebSocketImplBase. java and a new test for WebSocketPausePing in WebSocketTest. java to
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner. java to enhance the regex pattern matching functionality by allowing hy
refactor DnsResolverProvider to utilize wildcard imports and improve cache configuration to enhance code readability and maintainability by reducing import statements
added a conditional annotation for messaging tracing in TraceMessagingAutoConfiguration to ensure tracing is only applied when messaging tracing is present
no effective change - add support for db2 in sqlquery.
updated import statements in IDELanguageClientImpl, EditorTextActionMode, EditorTextActionWindow, and IDEEditor classes to streamline dependencies and
added handling for'/'character in XMLLightweightParser to improve XML parsing functionality
removed the setVisibility ( GONE ) method from TouchCharInput. java to streamline the code by eliminating unnecessary visibility settings
added null check for getCurrentUser ( ) before comparing user IDs to avoid potential NullPointerException when comparing user IDs
refactor JSObjectLinker to improve handling of object members to enhance clarity and maintainability of the code
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to use a configurable suffix instead of a hardcoded value to improve flexibility and
added a @ Deprecated annotation to SecurityConfig. java to indicate that the SecurityConfig class should no longer be used
should not be ( or )
deleted the JoglDebugAdaptor. java file and updated its references in RocketFigure3d. java to streamline the codebase by
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` and corresponding tests in ` ExtraFieldPropagationTest ` to enhance string representation and
added PendingIntent. FLAG _ UPDATE _ CURRENT in FileDownloader and FileUploader classes to enhance notification functionality by ensuring the correct intent is used
added a private method ` set ( ) ` and modified the ` nextOrd ( ) ` method in ` Lucene80DocValuesProducer ` to improve
refactor DateTimeFormatter class to improve date - time formatting to enhance performance and maintainability of date - time handling
removed exception handling for shell folder manager initialization in WToolkit. java to streamline code by eliminating unnecessary try - catch block
updated the ` setAdministratorCredentials ` method to throw ` KerberosAdminAuthenticationException ` and added null and empty checks for principal and password to
added a constant MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN and updated the width calculation logic in BaseWidgetSheet.
draw the sketch window in the PSurfaceJOGL class to ensure proper rendering and termination of the sketch window
refactor Hashing class implementation to improve performance and maintainability of the hashing algorithm
updated the ` accept ` method in ` FileSenderFactory ` to use ` folderPath ` instead of ` file ` to improve file validation logic
( ) ) should not be icon ( )
removed unused variable newType and its null check from J. java to streamline code by eliminating unnecessary null checks
increased ACTIVITY _ START _ DELAY from 500ms to 800ms to improve responsiveness during activity transitions
added a constant for the web application home path and updated JettyWebappTest to use this constant instead of a hardcoded path to improve maintainability
replaced the variable ` diameter ` with ` selectedMotorSet ` and added a call to ` table. clearSelection ( ) ` to reset
added import for BufferUtil and called clearToFill method in ByteBufferPool to enhance buffer management and improve performance in handling buffer data
added test case for alarm trigger creation via rest api
changed LDAP configuration keys from " authorization. ldap. groupBase " and " authorization. ldap. groupNameAttr " to " authentication. ldap
http : / / issues. apache. org / jira / browse / amq - 3573 - delete exchange and queue delete on the
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest # testbulkslotallocationfulfilled
refactor connection handling in PingService and ServerInfoService to improve error handling and ensure connection failures are properly reported to the server
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
updated the Quartz2Adapter class to improve performance and maintainability of the code
added exception handling for illegal state exceptions in SulongLibrary. java to improve robustness by handling potential IllegalStateExceptions
updated Spring Security schema version from 6.2 to 6.3 to ensure compatibility with the latest Spring Security features
updated the method signature of ` newNameResolver ` and introduced synchronization context in ` DiscoveryClientNameResolver ` to improve code clarity and ensure proper synchronization
added handling for non - empty annotations in JavacParser and introduced a new method to calculate the earlier position based on the new annotation's position
added " com. sun. naming. internal. " to CheckPackageAccess. java to ensure proper access control for internal naming packages
changed the default value of the strict variable from false to true to enable strict mode for improved functionality
added a boolean array to track exhaustion in OfflineSorter and updated the readPartition method accordingly to improve error handling by tracking exhaustion
refactor ActionResetingPool to improve code readability to enhance maintainability and facilitate future updates
added a boolean variable ` isInXYMode ` before returning its value to improve readability and maintainability of the code
refactor folder creation logic to accept an array of targetCell instead of a single targetCell to improve flexibility and maintainability of folder creation logic
replaced calls to ` activity. showLoadingDialog ( ) ` with ` FileDisplayActivity. showLoadingDialog ( ) ` in FileOperationsHelper
added null check for uigestureFile before loading to prevent potential NullPointerExceptions when uigestureFile is not initialized
' should be'', not '
added listener to the result object in XmlSuite. java to ensure the correct listener is set for the result
added a new method ` loadWithNewGlobal ` to ` Global ` and ` Context ` classes while refactoring the method handles to provide functionality to load scripts in a new global context
added JSON string conversion methods to StarTreeIndexSpec to enable JSON serialization / deserialization of StarTreeIndexSpec objects
updated imports in HttpSecurity, HeadersConfigurer, OAuth2LoginConfigurer, OAuth2ResourceServerConfigurer, Saml2LogoutConfigurer, and Server
replace double backslashes with single backslashes in file path replacement to ensure consistent handling of backslashes in file paths
[ jbrules - 3131 ] fix nullpointerexception when use an in operator with a null child
added import for FieldCache and invoked commit ( ) and purgeFieldCache ( ) method in TestDistributedSearch. java to ensure proper handling of
add test case for boundary event on subprocess and subprocess
add method resolvestaticcall for static method in programmanager
http : / / issues. apache. org / jira / browse / amq - 3573 - add messagegrouphashbucket.
added slot IDs and updated slot handling logic in Secmod. java to improve code clarity and maintainability by using specific slot IDs
added alignment support to layout and modified method signatures in GdxRenderer to enhance layout customization and improve mouse button functionality
[ hotfix ] [ test ] ignore unalignedcheckpointitcase. testunalignedcheckpoint
added imports for SourceDataLine, TargetDataLine, Sequencer, and Transmitter, and their respective classes to ensure that only relevant classes
added a check for the existence of a keyword in the keywordToReference map to ensure the keyword to reference is only added if it already exists
camel - core - optimize multicast eip to reduce object allocation.
removed unused methods from SegGraph, SegToken, and WordDictionary classes to improve code clarity and maintainability by eliminating unused methods
support telegraf escape ( # 644 )
( ) ) should read from same multicast address.
rename operatormulticast to operationmulticast
increased the timeout duration for sending messages in EventBusTracerTestBase. java to improve test reliability by allowing more time for sending messages
added a try - finally block around the latch countdown call in VertxTestBase. java to ensure proper resource management and prevent potential memory leaks
hhh - 15836 - fix memory leak in sessionfactoryserviceregistryimpl. destroy ( )
simonstewart : remove'/ home'and'/ jwt _ token'from test
test : add test for tuples, tuples, tuples, pytorch, and pytorch
added a TaskStackListener to clear the invisible state of a task stack listener in RecentsView. java to ensure that the task stack is
pdfbox - 4892 : add a test case to check that the checkdatepattern optimization be work
camel - cxf - should use source code generate configurer to avoid reflection configuration.
refactor pending animation handling by extracting functionality into a separate method to improve code readability and maintainability
add log to debug playtime crash
added a conditional check for BailoutOnException in C1XCompilation. java and introduced a new constant BailoutOnException in
updated references from " / signup " and " / forgot _ password " to " / create _ account " and " / forgot _ password "
[ hotfix ] rename slotprofile. previousexecutiongraphallocations to slotprofile. reservedallocations
changed the type of ` onlyFormat ` from ` SimpleDateFormat ` to ` String ` and introduced a new method ` getOnlyFormat ( ) `
[ geotiff ] use nodatagefontainer. gc _ nodatagereader instead of geotiffreader. get
[ gr - 25836 ] fix possible npe in llvmperrornode.
replaced ` out. toString ( ) ` with ` new String ( out. toByteArray ( ) ) ` in JdbcExecutionContextDao and DefaultExecutionContextSerializer
replaced blockUntilConnected ( ) with CountDownLatch and added connection state listener in TestPathChildrenCache. java to improve synchronization handling during connection state changes
updated ArrayTypeHandler to handle null values more gracefully to improve robustness by preventing potential NullPointerExceptions during array retrieval
refactored JakartaRegexpCapabilities to use the reProgram class instead of the RegexpTunnel class to improve code organization and eliminate
updated application selection to use Application. class instead of null to ensure compatibility with the new Application class implementation
[ jbrules - 3131 ] fix npe on mutable global
added validation methods for asset name, URL, and description in AssetIssueActuator and TransactionUtil classes to ensure asset names, description, and
make sure paste don't show parent algorithm in copy - paste
updated status messages in LGWebOS classes to improve clarity and organization to enhance code readability and maintainability by using more descriptive messages
updated node setting methods in TronNetService to use addAll for seed, active, and trust nodes to enhance node configuration flexibility by allowing multiple
updated assertions in BaseTokenStreamTestCase to include detailed logging for position and end position to improve test clarity and ensure proper error handling during thread execution
modified the ` getNextTime ` method to include a ` modulus ` parameter for better control over the increment operation to enhance flexibility in handling different time
refactor ` performItem ` and ` performItemContainingText ` methods in ` ShadowAdapterView ` and ` ShadowListView ` to improve item click
pdfbox - 2576 : fix typo find by codespell on fossies. org
add debug context for after method call
refactor HttpSessionDestroyedEvent to improve session handling and enhance attribute retrieval to enhance code clarity and maintainability while ensuring proper functionality through unit testing
added unit test to verify service name change in zipkin
added logging statements and refactored Spool mode handling in JavaInMemoryFileManager and JavacToJarStepFactory to improve debugging and maintainability
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` and update related references to improve clarity and consistency in naming conventions
increase timeout for trylock in clientmultimaplocktest.
added a default cache capacity of 1000 to the ConfluentSchemaRegistryDeserializerProvider class to improve resource management during schema registrations
replaced the'remind'checkbox with a'checkAtStartup'checkbox to improve user experience by providing option for checking updates
add weakkeys, weakvalue, weakvalue, expireafteraccess, expireafterwrite, weighed node.
hhh - 10453 fix typo in cascadingaction
added support for prototype property access in ScriptObject to enable proper handling of prototype - related methods in the script object
changed the default read mode from " heap " to " mmap " in the CommonConstants and ImmutableSegmentLoader classes to improve clarity and consistency in
added import for ByteArrayTemplate and updated ArrayTemplateBuilder to return its instance to improve handling of byte data types in the array builder
added Hipchat configuration to the SamlServiceProviderProperties and created a new configuration class for SAML SP integration to enhance the application's ability
replaced List with Set for commandRegistryUrls and updated resource retrieval logic to improve performance and maintainability of the code
updated warning message to include the current context and added debug logging for uncovered HTTP methods to improve clarity in warning messages and enhance debugging capabilities
http : / / code. google. com / p / mybatis / issues / detail? id = 413 - http : /
camel - jms - allow to configure a transaction manager without a transacted / non - transacted
cloudstack - 7143 : fix typo in vmwareresource. java
refactor Timers class to improve code readability to enhance maintainability and facilitate future updates
replaced the import of OVERWRITE _ EXISTING with APPEND _ TO _ ZIP in DefaultDefectReporter. java to ensure the output
removed deprecated constant declarations from UAX29URLEmailTokenizer to clean up the codebase and improve maintainability
removed unnecessary Map implementation from ScriptObject class to simplify the class structure and improve code clarity
refactor EventBusMetrics class to improve code readability to enhance maintainability and facilitate future updates
[ i18n ] use i18nutil. getname ( ) instead of i18nutil. getlanguage ( )
updated JaversTransactionalDecorator to implement InitializingBean and added afterPropertiesSet method to ensure proper initialization of the Javers bean
removed null check for pgTypeName before adding it to the _ pgNameToSQLType map to simplify code by eliminating unnecessary null check
( ) ) should be ( ( ( ) ) ( )
add finest support for calltimeoutexception
sec - 1762 : use string. isempty ( ) to check for empty password
changed the condition from checking if the permission node is not equal to " * " to checking if it is not equal to " * " to
only once ( # )
changed the type of ` postLogin ` from ` byte [ ] ` to ` String ` and updated related methods accordingly to improve data consistency and
refactor simulation modification logic and improve error handling in GeneralOptimizationDialog. java to enhance code clarity and maintainability while ensuring immutability
camel - 15836 : camel - main - add option to disable context reload by default
updated log4j configuration to provide more detailed logging information to enhance logging detail for better debugging and monitoring
refactor PrologSizeSanityCheck class to improve code readability and maintainability
refactor NearbyListFragment to improve code structure to enhance maintainability and readability of the code
added a check for ` nonCloseable. markSupported ( ) ` before invoking ` invokeSafely ` in ` RequestBody. java ` to
fix npe in embeddedneo4jserver when no embedded bean be find.
add ` ` play'' and ` ` play'' preference option to the player prefab
updated the randomLoadBalancer method to include a half - length total weight parameter and adjusted its logic to improve the accuracy of the random load balancer '
refactor GsonParser to simplify cache string construction and improve validation checks to enhance code readability and maintainability while ensuring correct handling of timestamp values
updated the order of parameters for the " gcmsort " and " gcmdir " in ApacheHttpClientMediaWikiApi. java to improve
replaced instances of ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in multiple files to improve clarity and consistency
[ iotdb - 6281 ] pipe task can be lock by other pipe task ( # 7451 )
added a conditional check for preinstrumented jars before constructing the version string to enhance flexibility in specifying whether to use instrumented JARs based on system
changed the conditional check from '! isSilent'to'if ( isSilent )'to ensure correct execution flow based on the
added checks for default and required dynamic fields in IndexSchema. java and corresponding test cases in BadIndexSchemaTest. java to ensure that only
[ iotdb - 6391 ] fix npe in storageproxy. getranger ( )
replaced ` ImmutableSortedSet ` with ` Iterables. transform ` in ` PrebuiltCxxLibrary. java ` and added a new test for including
refactor ` AdaptableX509CertSelector ` to initialize ` startDate `, ` endDate `, ` isSKIDSensitive `, and `
replaced manual buffer size parsing with AbstractAppender's parsing method to simplify code and improve maintainability
added a @ Deprecated annotation to the GuiScreenEvent class to mark the method as outdated and indicate that it should no longer be used
added methods to manage category addition and removal in CategoryEditSearchRecyclerViewAdapter to enhance category management functionality for better user experience
# 183 - enh : add cache type to servercachefactory
refactor the handling of ` massOverriddenBy ` and ` CDOverriddenBy ` in ` RocketComponent ` to improve code clarity and
fix potential resource leak in javalangepoolservice
( ) ) should be a member ( )
updated WanReplicationServiceImpl to use StripedExecutor for improved concurrency handling to enhance thread safety and ensure proper shutdown of the executor
added null checks for ssd and table in Partition. java and modified Driver initialization in DDLSemanticAnalyzer. java to improve robustness
refactored code in LocalServiceRegistryClientImpl. java and RemoteServiceRegistry. java to enhance readability and maintainability of the code
added unit tests for file deletion in FilesTest. java to ensure proper functionality and error handling when deleting files
removed try - catch blocks around socket closing in ServerSocketAdaptor and SocketAdaptor to simplify resource management by eliminating unnecessary exception handling
updated class name check from " java. lang. System " to " Logger. class. getName ( ) " to improve clarity and accuracy in
fix re - analyze after load project via findbigs - msv . keep original currentworkingdirectory list
added null check for ` cn ` in ` ItemInfo. java ` and set insets in ` Workspace. java ` to ensure proper handling of
changed the visibility of the String variable from public to private to enhance encapsulation and restrict access to the String
solr - 8983 : fix typo find by codespell on fossies. org
ggb - 545 fix for min / max / min / max command
refactored shutdown thread registration and handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve resource management and ensure proper
simplify the conditional check for the presence of the type to improve code readability and maintainability
added teardown methods to several test classes to properly release resources to ensure proper cleanup and avoid resource leaks after test execution
added search string functionality to RemoteBrowseHandler to enhance user experience by allowing dynamic search results based on query parameters
changed the visibility of the neutral button to INVISIBLE to enhance user interface by hiding the neutral button
[ ds - 3482 ] fix item count to include archive / withdrawn
updated SQL statements to use double quotes for table and column descriptions to improve SQL syntax and prevent SQL injection vulnerabilities
added exception handling capabilities to CheckTokenEndpoint to improve error management and logging for OAuth2 exceptions
refactor multiple Java classes to improve code structure and readability to enhance maintainability and readability of the codebase
refactor IdentityZone tests to use HttpEntity and parameterized type references to improve code readability and maintainability by using parameterized types
updated tooltip delays in ExtractionModelFrame. java and DataBrowser. java, and added tooltip in SQLConsole. java to enhance user experience
added support for the Surefire version of JUnit 5 in the ActionProviderImpl class to enhance compatibility with different JUnit versions
updated exception handling in WorkerShellStep. java to throw a RuntimeException instead of a HumanReadableException to improve error handling by providing a more
[ flink - 17725 ] [ core ] mark datastreamutils. isassignable a experimental annotation
updated StreamCepstrumSource. java file to improve code readability and maintainability
updated index calculation logic in List. java to ensure proper handling of index bounds to prevent index out of bounds errors
updated assertions in CloneHelperTest. java to check for Parenthesis instead of OrExpression to accurately reflect the use of Parenthesis in the
added confirmation option to the debug paste command to enhance user experience by providing confirmation before execution
replace `. get ( ) ` with ` orElseThrow ( ) ` in multiple configuration classes to improve error handling by providing clearer exception messages
ggb - 251 don't call focus mathquill ggb if we can't find it
updated GoBinaryDescription. java to replace ` Arg ` with ` AbstractGoBinaryDescriptionArg ` and modified related imports and methods accordingly to enhance
refactor environment retrieval logic in Jooby. java to improve clarity and maintainability of environment configuration handling
refactor SimpleRetryExceptionHandler and related classes to use a unified RetryListener implementation to improve code organization and maintainability by consolidating retry listener implementations
updated the ` writeCounter ` method in ` ElasticMeterRegistry ` to handle decimal values correctly to ensure accurate reporting of metrics with decimal values
refactor Contribution class to use a constructor for email and author to improve code readability and maintainability by separating Contribution and Contrib
refactor JUnitFormatter to improve string formatting to enhance readability and maintainability of the code
refactor how elements are assigned and initialized to ensure proper handling of LinkedList instances to improve type safety and prevent potential ClassCastExceptions
updated exception messages in StaxEventItemReader. java to include the URL to improve error reporting for better debugging
testmultirendarget, use light array instead of geometry to speed up the test
added null check for currentProfile in DelegatedAuthenticationClientLogoutAction to handle cases where the current client cannot be find at all
replaced target. addNamespaceDeclaration with newElement. addNamespaceDeclaration in SaajStaxWriter. java to ensure proper addition of namespace declarations
added BigInteger instances for generating cryptographic parameters in KeyStoreManager. java to enhance security by using a more secure algorithm for hashing operations
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape. java ` and ` Mesh
updated engine version in BpmnDeployer and its corresponding test in BpmnDeployerTest to ensure correct engine version is set for process definitions
updated velocityEngine property keys for consistency and clarity to improve code readability and maintainability by standardizing property keys
fix race condition in vmthreads. checkiscurrentthread ( )
refactor GenericUDFMapValues to check for null map before adding values to the retArray to improve robustness by preventing potential NullPointerExceptions
rename interceptors to handlerintercept to align with the new naming convention
''''and'''to''
added logging and file creation logic in ImportContext and adjusted directory checks in JobQueue and ImporterIntegrationTest to improve error handling and ensure proper
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 5006
updated import statements in CRLDistributionPointRevocationCheckerTests. java to improve code organization and maintainability
added import statement for ZipEntry. java and updated constants in ZipEntry. java to improve code organization and maintainability
refactor ` newFileSystem ` methods to streamline file handling and improve error management to enhance code clarity and maintainability while ensuring proper file handling
replaced ` Box. createHorizontalStrut ` with ` Box. createHorizontalGlue ` in ` IfControllerPanel. java ` to improve
refactor connection creation in FailoverUpdateURIsTest. java to improve code readability and maintainability
added Gson annotations for baseUrl, mirrorsList, repoId, and repoName in ServiceOsSpecific. java to enhance JSON serialization capabilities for service
add delete book method and use it to delete the db entry
refactor multiple Java files to improve code structure and readability to enhance maintainability and readability of the codebase
correct calculation of buffer size in abstractajpprocessor.
don't stop the admin console if it fail to start or shutdown.
replaced the ` unregisterHandlers ( ) ` method with a ` MessageConsumer <? > binaryConsumer ` and ` MessageConsumer <? > text
added configuration properties for device ID transformation method, ID table, and ID table settings in IoTDBDescriptor. java to enhance configuration management for
increased NUM _ DOCS _ PER _ TYPE from 2000 to 100 and introduced a new DelayingSearchComponent class to improve test performance and enhance
updated the condition for mockTsp in TestSignatureInfo. java to check for a non - null value to ensure that the mockTsp
updated script generation logic to use ` witnessScript ` instead of ` scriptCode ` to improve code clarity and maintainability by standardizing the
updated the expression for fieldtype and fieldType in IndexSchema. java to support both fieldtype and fieldType types in the schema
updated the return logic in Completers. java and added a new test class OptionCompleterTest. java to enhance completer functionality and ensure
fix checkstyle issue in util / listobjects / s3utils. java
change sourcePeerId type from String to int across multiple classes to improve data handling by using an integer instead of a String
refactor file upload handling in FtpHelper. java to improve clarity and structure to enhance code readability and maintainability while ensuring proper file upload
removed unused imports and updated reply button alpha settings to improve code clarity and ensure proper visibility of the reply button
updated expectedTimestamp string formatting in AccessLogSupportTest. java to improve readability and maintainability of the code
update marycachetest to use temp / testfiles - deleteme
fix nullpointerexception in settingimpl. get subscribers ( )
updated error handling in AbstractSamlObjectBuilder and AbstractSaml10ResponseView to improve robustness by throwing an IllegalArgumentException for null marshaller
replaced printStackTrace ( ) calls with LogUtil. warn ( t ) in DataBrowser. java to improve error handling by logging warnings instead of printing
added a condition to check if the asset directory exists in dev mode to ensure proper handling of static files in dev mode
[ hotfix ] [ checkpoint ] use writeoptions in rocksdbkeyedstatebackend. put
updated the default format string from " value - tag - index " to " value - index " to align with the new naming conventions for better
updated GraphHopper initialization and modified hint settings in MainActivity. java to improve clarity and functionality of the GraphHopper implementation
updated Awaitility timeout from 30 seconds to 60 seconds in BesuNodeRunner and changed nativeSecp256k1 to true in
clone sandboxtest instead of ducls sandboxtest
camel - jms : use exchange. setexception instead of log a warning
changed method visibility of forwardPropagateTree from package - private to public to allow external access to the forwardPropagateTree method from other packages
fix typo find by codespell on fossies. org
improve error message when a profile activation fail to interpolate file location
refactor Style class to improve code structure to enhance maintainability and readability of the codebase
added support for zoom - out - fab - back key handling in ShareActivity to enhance user experience by enabling zoom - out - fab
added a check to skip deprecated fields in the Json class to ensure only deprecated fields are processed
added animation functionality to show and hide animations in the LauncherFragment to enhance user experience by providing smoother transitions when the layout is not running
refactor method call in Utils. java for improved readability to enhance code clarity and maintainability
added progressable parameter to several methods in Utilities, PTFRowContainer, HiveBinaryOutputFormat, and HiveOutputFormat classes to enhance functionality by providing
[ hotfix ] fix checkstyle violation in sourcecoordinatorprovider
added functionality to update panel order and colors in ContributionListPanel to improve user experience by ensuring contributions are properly updated
renamed the class from HyervisorTemplateAdapter to HypervisorTemplateAdapter to improve clarity and consistency in naming conventions
added a default value for the user's directory if it is empty to ensure the application uses the system's user's directory for
fix e - ac3 output with non - default sample rate.
log4j2 - 1343 mapfilter. match ( ) should return onmatch instead of onmatch ( )
updated VerificationInOrderWithCallsTest. java file to improve test coverage and ensure reliability of the verification process
updated the method call from ` setFromAxis ` to use ` axis. x ` instead of ` axis. z ` to ensure correct axis positioning
updated the COLLECTION _ DELIM constant from " colelction. delim " to " collection. delim " to align with the new
curator - 1133 add test case for connection state listener.
refactor conditional logic in DocRenderer. java and add new test cases in PHPCCDocumentationTest. java to improve code readability and ensure comprehensive
refactor one - handed mode handling in RecentsAnimationDeviceState. java to improve readability and maintainability of the code
added onDetachedFromWindow method to cancel all tasks in AppsCustomizePagedView to ensure that all tasks are canceled when detached from the
added support for a dictionary resource in the MorfologikAnalyzer and MorfologikFilter classes to enhance flexibility in resource management
removed redundant count checks and streamlined exception handling in ResultSetTest. java to streamline code and improve clarity in exception management
removed " debug " prefix from the message initialization in GradleBuildService. java to streamline the initialization process by eliminating unnecessary debug entries
refactor exception handling to use AtomicBoolean and improve logging messages to enhance clarity and maintainability of exception handling logic
refactor tooltip text handling in ComponentTreeRenderer to improve code readability and maintainability
increased await timeout from 5 seconds to 10 seconds in ZipkinStreamTests to allow more time for the zipkin server to be up before tests
) - - - - - - - - - - - - - - - - - - - - - - - -
replaced the static array of known Google sign algorithms with a single constant to improve code readability and maintainability by eliminating the need for an array
change from use solution business to commonapp. createSolutionBusiness ( )
added a method to notify window state changes in WWindowPeer. java to improve event handling for window state changes
added email description to the template data in EntityGroupKeyContentFormatter and set it in TestEntityGroupKeyEmailContentFormatter to enhance the email
updated the return statement in UserData. java to use data. remove ( sel ) instead of data. remove ( sel ) to improve the
updated the ` getISO3Language ( ) ` method in ` Locale. java ` and added a test for ` getISO3Language (
refactor ChangeLog parsing to use ChangeLogParser and createUpdateVisitor method to improve code readability and maintainability by encapsulating parsing logic
added a condition to return early if the screen is pinning active to improve performance by avoiding unnecessary processing when the screen is not active
added functionality to handle cases where no chart data is available to improve user experience by providing a clearer indication when no chart data is available
added synchronization to multiple HTTP response methods to ensure thread safety when accessing the HTTP response header
refactor NettyResponse to use a unified chunkHandler method for better readability to improve code maintainability and reduce duplication in the chunk handling logic
added header values " : scheme " and " : scheme " to multiple test cases to ensure proper handling of HTTP headers in the application
fixed - rlocalcachedmap. keyset ( ) and entryset ( ) don't work correctly if storemode = localcached
camel - jpa : fix potential npe in camel - jpa component
update jme3 to use jump speed instead of fall speed
added a condition to check if reparsedFunction is null before processing syntax extensions to avoid potential NullPointerExceptions when reparsedFunction is null
refactor BitstampPusherService to improve logging and order book handling to enhance code readability and maintainability by using more descriptive variable names
added deprecated methods for retrieving old upload segment HTTP and HTTPS URIs to enhance code clarity and maintainability by using a constant for the old upload
updated the method of retrieving tracking object to include a filter parameter to enhance filtering capabilities for better data retrieval
camel - jbang - fix unit test for camel - juel
added functionality to bound the alpha value to a specified range in RecentsView. java to improve UI responsiveness by ensuring the correct range
fix a bug with import - package attribute in manifestreversion
refactor DataSyncConfiguration class to improve code readability and maintainability
added import statement for JavaSnippetRepository and initialized JavaSnippetRepository in JavaLanguageServer. java to enable the initialization of JavaSnippetRepository for better
refactor loop structure in StarTreeRecordStoreCircularBufferImpl. java to enhance readability and maintainability of the code
change http : / / code. google. com / p / chromedriver / downloads / list to http : / / www. googleapis.
camel - jbang - fix the test error of camel - pgjdbc
updated imports from ` com. rometools. rome. feed ` to ` com. rometools. rome. feed `
added content length header handling in TransferCompletionHandler. java and updated NettyAsyncHttpProvider. java to use NettyAsyncHttpProvider. java to
refactor Dialog class to improve code structure to enhance maintainability and readability of the code
removed the protected constructor from EnhancedRuntimeException to simplify the exception handling by eliminating unnecessary parameters
make socketappendertest more resilient against slow machine
camel - 15836 : camel - aws2 - endpoint - dsl - remove eventadminendpointbuilder and eventadminendpointbuilder from doc
modified the ` compare ` method signature and exception handling in ` ByteArray. java ` to ensure compatibility with JDK8 and improve error handling
added a method to disable input proxy during touch events in RecentsAnimationWrapper. java to improve input handling and ensure proper input management during touch
[ camel - 6770 ] remove @ ignore from camel - restlet - test
removed the ` currentIdx ` parameter from the ` resizeAndRehashIfNeeded ` method to simplify the method signature and improve code readability
move com. hazelcast. test. modulepath to com. hazelcast. test. modulepath to org. hazelcast. test. modulepath
added a method ` getSourceDirs ( ) ` to the ` JavaServerConfiguration ` class and updated the ` getCompiler ( ) ` method to
updated the menu item from " open _ web " to " mute _ hashtags " to improve user experience by allowing users to mute hashtags
updated method names and assertions in AncestorDescendantTests. java for clarity to improve code readability and maintainability by using more descriptive names
fix an off - by - one error in worldeditplayer. getblocky ( )
updated the selfCheckDataTypes method to throw a PathNotExistException to improve error handling for missing measurement types
removed unnecessary single quotes in JavaCompiler. java to improve code readability and maintainability
[ hotfix ] [ stream ] move mailboxexecutor to abstractstreamoperatorfactory
hbase - 24545 addendum set table state in meta and fix meta ( chunhui )
updated the mapping syntax in GatewayMetricFilterTests. java to use method references for better readability to improve code clarity and maintainability
updated BlockJUnit4ClassRunner constructor to accept test class as a parameter to enhance flexibility by allowing direct instantiation of the test class
[ hotfix ] [ kiecontainer ] use lasttimedata instead of remoteitems when delete a model
updated the calculation of allAppsCellWidthPx to include two padding to improve layout responsiveness for better user experience
[ hotfix ] [ core ] move logback configuration to flink - core
updated references from ` doc ( ) ` to ` this. doc ( ) ` in ` BooleanScorer2. java ` to ensure proper
added a forceMerge call to the writer in TestMultiPhraseEnum. java to optimize performance by reducing unnecessary merging operations
changed the type of the ` Session ` and ` SessionDelegatorBaseImpl ` interfaces from ` Connection ` to ` void ` and updated the
refactor GetLocations class to improve code readability to enhance maintainability and ease future updates
removed unnecessary print statements and improved exception handling in SchemaValidatorTask. java to streamline code for better readability and maintainability
replaced ` throw new UncheckedIOException ( e ) ` with ` catch ( IOException ignore ) ` to improve error handling by avoiding unnecessary exceptions
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to improve compatibility with newer Android versions
ruby flavor : use ` ` quantifier'' instead of ` ` termcategory''
changed log level from warning to debug in DerbyDatabase. java and added null checks for username and password in BaseLiquibaseTask.
drop usecaches from nio2 and fix issue in doc .
refactor CasGeoLocationConfiguration to use Resource instead of MaxmindProperties to improve dependency management and simplify database reading logic
update html test for instructorfeedbackresultspageuitest
updated the ` useEncodedQualifierListOptimization ` method to accept a ` Scan ` parameter to enhance functionality by allowing the use of specific criteria
removed public access modifier from several methods in ApprovalStore and ApprovalsControllerService to enhance encapsulation and restrict access to these methods
added a new boolean variable ` mStartedDownload ` and implemented a delay mechanism to cancel the download task if it has already been started to improve
updated method names from ` getOpenView ` to ` getAnyView ` and introduced a new method in ` AbstractFloatingView ` to improve clarity
updated project version from 1.0. 11 to 1.0. 13 and updated copyright year from 2009 to 2009
replaced yield ( ) with Thread. yield ( ) in SyncThread. java to improve thread safety and ensure proper thread termination
updated GsonBuilder implementation to improve performance and maintainability of JSON processing
added null check for centerGeo before adding it to fixedPoints to avoid potential NullPointerExceptions when centerGeo is null
remove espresso home option, make it configurable.
doc : fix some typo in javadoc ( # 1331 )
changed the visibility of the DeleteSessionAction class and its related methods from protected to private to enhance encapsulation and maintainability of the code
renamed ` InvalidDocumentStoreApiUageException ` to ` InvalidDocumentStoreApiUsageException ` to improve clarity and consistency in exception handling
modified the initialization of ` sz ` in ` JoinQParserPlugin. java ` and updated ` SortedIntDocSet ` initialization in ` Solr
added an additional parameter to FileDataStorageManager's triggerMediaScan method to enhance media scan functionality by including the file object
simplified the way test results are handled by removing unnecessary verbosity checks to streamline the code for better readability and maintainability
added methods to set custom G - code settings in MainWindow. java to enhance user customization options for G - code settings
updated Writer initialization to use BufferedWriter and OutputStreamWriter with UTF - 8 encoding to ensure proper handling of character encoding in the output stream
refactor JsonElement class to improve code structure to enhance maintainability and readability of the codebase
added SolrTestCaseJ4 import and reset exception ignores in TestBadConfig. java to ensure proper exception handling during test execution
added a method to remove fragments and the action bar in GpsMainActivity to improve fragment management by ensuring the action bar is properly removed
add ` ` a'' to the list of token in tokenizer test
replaced ` Range. asByteRange ( ) ` with ` Range. Byte ` in multiple files to simplify the handling of request headers and improve
updated file paths and print statements in VisualizerCanvas. java and GcodeViewParse. java to improve output formatting and enhance debugging capabilities
updated TestBackwardsCompatibility. java to include new versions " 8.4. 0 - cfs " and " 8.4. 0 - nocfs
reformatted test assertions for consistency to improve readability and maintainability of the code
added a condition to close the exchange client if the query is not complete to ensure proper resource management and prevent potential memory leaks
add unit test for integritycheck
removed unused import and private field for shardToClient in ChaosMonkey. java to streamline code by eliminating unused dependencies
added null check for ` fas ` before accessing its configuration file to avoid potential ` NullPointerException ` when ` fas ` is null
fixed npe in nested repository tree panel
modified the constructor of ExtensionTypeHeader to accept a byte type and an int length to ensure that the Extension type must be within - 128 to
pdfbox - 2576, pdfbox - 2576, pdfbox - 2576, pdfbox - 2576, pdfbox - 25
[ hotfix ] [ doc ] fix typo in prometheus. properties
added error handling for resume triggers in ReactiveStateMachineExecutor to improve error management and provide better feedback during event processing
added a test for setting and retrieving the first path for Python executables in BuckConfigTest. java to ensure that multiple Python executables
added a default button to the root pane in the InitialAccountRegistrationFrame to enable the signin button functionality in the application
( a ) ) a new option for map - - - - - - - - - - - - -
updated error logging messages in RegistrationRestRepository. java to include exception details to improve error reporting and provide context for logging errors
( ) ) should be package ( )
added a static method to list claims in OidcIdTokenClaimCollector and created unit tests for it to improve the handling of claims in
removed private Vector2 center variables from Circle, Polygon, and Rectangle classes to streamline code by eliminating unnecessary private fields
removed unnecessary null check for pcollection in RegisterAndProcessBundleOperation. java to improve code readability and maintainability
refactor SslContextFactory to improve SSL configuration handling to enhance security and maintainability of SSL connections
change default _ max _ attempts from 5000 to defaultmaxlogentries
corrected the return value of " access _ confirmation " from " access _ confirmation " to " access _ confirmation _ error " to accurately reflect
[ 3.0 ] fix classloading issue ( # 8453 )
added a new parameter ` copyRowHeight ` and ` resetOriginalRowHeight ` to the ` shiftRows ` method and updated its implementation to
updated icons for rollover and press states in FontImage. java to improve clarity and functionality of the rollover icon management
refactor grid translation handling in TaskViewUtils and TaskViewSimulator classes to improve code clarity and maintainability by centralizing grid translation logic
updated assertions methods in Assertions. java to improve code readability and maintainability
added null check for currentDateTimeFunction in multiple database classes to prevent potential NullPointerExceptions when calling currentDateTimeFunction
added anonymousPath method to IOUtils and updated Log4jUtils to use this method to improve path handling and enhance logging functionality for anonymous paths
updated the ` DigitalWellBeingToast ` and ` TaskView ` classes to include a new ` contentDescription ` parameter to enhance functionality by providing
[ iotdb - 6861 ] fix catalogtracker # getmetapartition ( ) timeout issue
refactor LineNumberTagAggregator and TestDominance classes to improve code organization and maintainability
update genericitem to use default conversion instead of null
added a test for fetching Post and Post details in BidirectionalOneToOne N + one to ensure correct retrieval and retrieval of PostDTO based on
removed extra empty screen from workspace and updated startSearchPageIndex initialization to handle cases where workspaceScreens are empty
updated HashMap initialization and HashSet initialization in MarkBasePointersPhase. java and added null check in IndexedValueMap. java to improve performance and
updated string formatting from'{ 0 }'to'{ 0 }'in GoogleLineChart. java and GooglePieChart. java to
refactor wait logic in SendingAccountor. java to improve exception handling to enhance robustness by handling potential interruptions during batch processing
added functionality to set the position in the WALPrettyPrinter to enhance user experience by allowing users to seek to the next page in the file
changed the port number in the NettyTransceiver constructor from 1 to 0 to adjust the connection timeout behavior for improved reliability
refactor event generation to sort log events before generating the report to improve performance and maintainability of the report generation process
added a test for retrieving CSV line with an escaped quote in CSVFileLoggerTest. java to ensure that a CSV line containing an escaped quote
minor cleanup and formatting adjustments to improve code readability and maintainability
don't try to connect to a jabber server if it's a remote jid.
removed the @ JniImpl annotation from VM. java to streamline code by eliminating unnecessary annotations
updated configuration settings in Fetcher2. java to replace " http. plugin. check. blocking " with " http. plugin. check _
added checks for video HDR format for the renderer in FFMpegVideo. java and removed multiple print statements in MediaInfoParser. java
updated package names and assertions in AstTests. java to accommodate new package structure and improve test coverage
updated dimension percentage logic in WorldBorder. java and added integration tests in WorldBorderIntegrationTest. java to ensure accurate dimension adjustment and validate functionality
hbase - 25890 add a method to get the replication status of the master to ensure that the master only respond to online and non -
make sure we don't close the login if it's successful
updated test methods to use instance configurations instead of a new instance configuration to improve flexibility and maintainability of the routing table
changed the class modifier of FieldAttributes from final to public to allow access to FieldAttributes from other packages
add a test case to prove that the projectbuilder. build ( ) throw an exception
removed unnecessary null checks for protoGetSwitches and protoHistory in PropertyMap. java to simplify the code for better readability and maintainability
refactor ` getControllerId ` and ` addRelay ` methods in ` DoorbirdInfo `, ` ControllerConfiguration `, and ` Controller
replaced sessionFactory. close ( ) with session. close ( ) to ensure proper resource management and avoid potential memory leaks
removed unnecessary check for refresh token in prompts to simplify the condition for improved readability and maintainability
removed a debug print statement from Http2SolrClient. java to clean up the code and reduce unnecessary console output
updated the extractor method to use NoopGetter. INSTANCE and added a NoopGetter enum to improve performance and maintainability of the code
[ hotfix ] [ javadoc ] fix typo in conditionalonenabledresourcechain
added a check for the child count of the treeRoot in the BarrowmanCalculator class to ensure that the tree root is valid before proceed
replaced ` getFilteredStream ( ) ` with ` getUnfilteredStream ( ) ` in ` JBIG2Filter. java ` to improve stream
updated logging statements and added permission handling in FacebookImpl. java to improve logging clarity and ensure proper permission management during login processes
updated the return value in ShadowICU from " h : mm a " to " h : mm a " and added a new test for
removed dependency on KeyguardManager in TouchInteractionService. java to streamline code for better readability and maintainability
cloudstack - 7143 : fix npe in volume api when diskoffering be null
updated UtowBodyHandler to use AsynchronousFileChannel for file writing to improve performance by utilizing asynchronous file operations
refactored sigint and siginttest to use default uncaughtexceptionhandler instead of exceptionhandler
should appear at at at at at at at at at at at

updated benchmark function to use a dynamic mapping function instead of a fixed size to improve flexibility and maintainability of the code
added a refresh listener to the UploadListFragment to enhance user experience by notifying the refresh of the adapter
use path instead of file
replaced ` Array. items [ ] ` with ` Array. get ( i ) ` and refactored code to use ` get ( i
refactor tomcat service and engine handling to improve clarity and functionality to enhance code readability and maintainability by consolidating service and engine management
updated error message format in Console. java and BuildRuleFactoryParamsTest. java to improve clarity and accuracy of error messages
added a conditional check to return early if playback state is not PLAYING to ensure proper handling of playback state when not PLAYING
updated the retrieval of ` ServiceComponentDesiredStateEntityPK ` to use ` findById ( 0L ) ` instead of ` injector. getInstance (
refactor Java2TypeScriptTranslator and add InnerClassFieldClash class with a new test for InnerClassFieldClash to improve code clarity
added logging and follow redirect filters to DockerClientFactory and DockerClientProfile to enhance configuration options for Docker client profile management
replaced direct call to displayChanged with awtUnlock and awtLock in XToolkit. java to ensure thread safety during display changes
hhh - 10183 skip nationalizedScalarquerytest on db2 and postgresql
fix ziphelper. verifyzipheader ( ) to close input stream
changed the visibility of the ` storeClassFile ` method from private to public to allow external access to the method for storing class files
added a new test class ` TestSortedSetDocValues ` and updated assertions in ` SingletonSortedSetDocValues ` to enhance testing capabilities for missing values
updated error messages in CGIHandler and added a JavaVM callback handler in JavaVM to improve clarity of error messages and ensure proper handling of Runnable
added support for additional line endings in the LineReader implementation to enhance compatibility with additional line endings
replaced List with Set in multipleFetchSourceFiles and ServerContentsProvider classes to improve performance and maintainability of the code
added a check to return early if the vertex count is zero in OGLESShaderRenderer. java to improve performance by avoiding unnecessary
updated method names and added unit tests for verification in the IncorectBindingPuzzleTest and DescriptiveMessagesOnVerificationInOrderErrorsTest
replaced ` FileUtil. createData ( root, menuPath ) ` with ` FileUtil. createFolder ( root, menuPath ) ` to improve
remove unused import and fix typo.
refactor JsonObject class to improve code readability and maintainability
updated idle time validation logic in SelectChannelEndPoint and HttpConnection classes to ensure proper handling of idle time and improve connection management
fix npe in farmlandblock. cansustainplant
added tests for SALTED _ TABLE123 and SALTED _ TABLE _ SCHEM in QueryDatabaseMetaDataIT. java to ensure
updated SimpleDateFormat to use Locale. US and added a new class B6791927 for cookie validation to ensure consistent date formatting across different
added multiple calls to db. close ( ) in DbHelper. java to ensure proper resource management and avoid potential memory leaks
( ) ) should be 0 ( # 10 )
[ graal ] update economyallocationstage to include option value
fix save in codearea without leave the field ( # 7116 )
refactor ObjectMapper initialization to use a system property to improve readability and maintainability of the code
update nativeenvironmentrepository to work on window
added PostConstruct annotation and refactored Application initialization in multiple test classes to streamline service management and improve code maintainability
[ java ] remove unused method from recordinglog. validatematchingmatchingmatchingrecording
replaced GroupName with ErrorGroupName in ITSystemTest. java to improve clarity and maintainability of error group handling
testfuzzoptimizations. testfuzzoptimizations don't run in travis
added a private boolean variable ` reverseImage ` and updated its usage in the ` CameraManager ` class to improve code clarity and maintainability by
polish ` ` make equality check defensive to null reference ' '
feat ( mdm ) : add a predicate to replace a field with a simple name ( # 2451 )
updated test methods from JUnit 4 to JUnit 5 in AuthenticationSuccessListenerTests. java to utilize JUnit 5 features and improve test structure
improve performance of settypes. gettypes ( )
refactor TypeUtil class to improve code readability to enhance maintainability and ease future updates
updated the way the trigger time is retrieved in AbstractAlertNotifyHandler to ensure accurate date handling by using the default time zone
added a new method ` maybeCreateAbstractMethodErrorThrower ` to handle abstract method errors to improve error handling and provide a clearer way to handle
camel - 16400 : camel - catalog - fix invalid expression in simple language
removed unnecessary check for empty Iterables in AbstractParser. java to streamline code by eliminating unnecessary checks
camel - aws2 - jclouds fixed the unit test error of camel - jclouds
removed the @ Ignore annotation from the CamelConsulTest class to streamline the test by eliminating unnecessary execution
updated flag checks in Check. java and added a new test class CheckACC _ STRICTFlagOnDefaultMethodTest. java to
[ java ] reduce driver timeout to further dig into test intermittency .
added a new file ` FileExtensions. java ` with static immutable set of file extensions to provide a centralized way to define file extensions for
replaced ThreadLocalDateFormat with a direct instantiation of ISO8601CanonicalDateFormat to simplify thread - localization and improve performance
removed deprecated VM options for FastTLABRefill and SafepointSpinBeforeYield to streamline the codebase by eliminating obsolete options
added a private field ` displayName ` to ` Pac4jBaseClientProperties ` and integrated it into ` DefaultDelegatedClientFactory ` to
added EarlyTerminationException to multiple operator classes and introduced a new EarlyTerminationException class to improve error handling for early termination scenarios
simplified the return statement in TraceFunctionAroundWrapper. java to improve code readability and maintainability
updated response handling in HttpBindServlet and HttpConnection classes to improve response management and ensure proper handling of connection states
fix nullpointerexception in forgeeventfactory. getcapabilities ( )
wallettool : don't swallow exception in catch block.
updated AsyncCompletionService and SubmitOrderedCompletionService classes to indicate that these services are outdated and should no longer be used
updated Hyphenation instantiation to use a new variable ` origlen ` to improve clarity and maintainability of the code
added a delay of 200 milliseconds in IQRegisterHandler. java to improve the responsiveness of the IQ registration process
add multichat operation set definition and gibberish protocol implementation. related issue : issue # 241, issue # 244,
fix typo find by codespell on fossies. org
set providersChanged to false in ConfigurationManager. java to ensure providersChanged is set to false before further operations
added a method to quote identifier tokens in SemanticAnalyzer to enhance the handling of identifiers in the semantic analysis process
added a FSIgnored check for the presence of the'name'entry in the font list to enhance font handling by skipping non -
updated generic type handling in SolrResourceLoader to improve type safety and eliminate unchecked cast warnings
refactor hit detection logic in Window. java to improve readability and maintainability of the code
added null check for appManifest before retrieving target SDK version to avoid potential NullPointerExceptions when appManifest is null
refactor ConfigurationMetadataGenerator and related classes to improve code structure and maintainability to enhance maintainability and readability of configuration handling
added userName field and its getter / setter methods in Driver, HiveSemanticAnalyzerHookContext, and HiveSemanticAnalyzerHookContext classes to enhance user
added setter methods for transformer file, URL, and input stream in XsltBuilder to enhance flexibility and usability of the transformer configuration
added support for HadoopShim in ContainerRunnerImpl, TaskRunnerCallable, and TestFirstInFirstOutComparator to enhance compatibility with Tez
updated file size calculation in ShadowAssetManagerTest, ShadowContentObserverTest, and ShadowDownloadManagerTest to ensure correct file size handling and improve
don't log access to request if there be no mapping data
camel - jbang - fix unit test failure
refactor VM option checks in CompilerConfigFileWarning and ConfigFileWarning to use Platform. isDebugBuild ( ) method to improve code readability and maintainability
replaced direct calls to ` MeterStatisticsManager. statisticsOperationMap. clear ( ) ` with ` HashMap < String, MeterDetailStatisticsModel >
refactor logback configuration handling to improve logging functionality to enhance clarity and maintainability of logback configuration management
added @ NotNull annotation to several methods in CipherExecutor, CookieRetrievingCookieGenerator, CasCookieValueManager, and CookieValueManager
updated references from BASH _ ESCAPER to SHELL _ ESCAPER across multiple files to align with the new command naming
refactor ` waitUntilReadyAndSucceed ` and ` waitUntilReadyAndSucceed ` methods to use try - with - resources to ensure proper resource management and
updated the test class name from " TestLucene50FieldInfoFormat " to " TestLucene60FieldInfoFormat " to reflect the
updated the closing brace formatting in RelativeDateFormatTests. java to improve code readability and maintain consistency
added a method to generate a Shield address in RpcApiService to enable the generation of a specific Shield address in the response
changed return types from byte [ ] to String in JansiWinSysTerminal, JnaWinSysTerminal, and AbstractWindowsTerminal classes
updated regex patterns and variable declarations in TestStabilityRule. java to improve regex pattern matching and enhance code readability
updated DefaultSolrHighlighter to limit fragment counts for multi - valued fields to ensure that the highlighter handles multi - valued fields correctly
refactor tryToLogin method to accept a Uri, username, password, and returnCode to improve code clarity and maintainability by separating method calls
updated packet handling in ` HandlerSceneEntityDrownReq. java ` and ` PacketSceneEntityDrownRsp. java ` to improve entity
http : / / issues. apache. org / jira / browse / amq - 3573 - fix typo in camel - jms
replaced ` wrapCollection ( ) ` with ` update ( statement, parameter ) ` in ` DefaultSqlSession. java ` to simplify the method
added logging for illegal currency exceptions in BTCEAdapters. java to improve error handling and logging for invalid currency exceptions
http : / / issues. apache. org / jira / browse / amq - 4237 - use candidate subscription name instead of localinfo
pdfbox - 4892 : use 0.4 f instead of 0.0 f, a suggest by valerybokov
updated startController method to accept a boolean parameter for tenant isolation configuration to control whether tenant isolation is enabled during the controller
simplified return statement in HasSettings. java to improve code readability and performance
added a check to ensure attrs size is greater than or equal to 4096 to prevent potential ArrayIndexOutOfBoundsException when accessing attributes
added methods to retrieve project configurations and updated configuration handling in various classes to enhance project configuration management and improve code clarity
corrected the spelling of " Experimenal " to " Experimental " to improve clarity and accuracy of the error message
and - - - - - - - - - - - - - - - - - - - and - - - - - - -
use type solver. getsolvedjava langobject ( ) instead of reflectionclassdeclaration
added button count management logic in XToolkit. java to ensure that the number of buttons does not exceed the maximum allowed limit
changed import statement for assertEquals from jdk. testlibrary to com. oracle. java. testlibrary to ensure compatibility with the correct package structure for
added a new ` MessagePackFactory ` class with factory methods for creating MessagePacker instances to facilitate the creation of MessagePacker
) should be tag ( # 4 )
should not be present
added conditional logic to set component UIIDs based on horizontal and element UIID to ensure correct UIIDs are set for group elements
updated URL pattern matching logic in DOIServiceImpl. java to improve accuracy in matching URLs based on identifiers
replaced instances of AndroidMultiTouchHandler with hasMultitouch in AndroidInput. java and AndroidLocklessInput. java to improve clarity and
[ java ] make sure commit position counter be close even if it be not open.
added UserSite and UserSiteId classes with associated properties and tests to enhance the data model with user - site information
httpconverterregistrar should detect port and port in a standard url if the address be invalid.
bug 10293 : don't ignore the host _ id if the host _ pool _ id and storage _ pool _ id be
replaced ` dir. openInput ( fileName, IOContext. DEFAULT ). close ( ) ` with ` dir. fileLength ( fileName )
updated import statements and modified method signatures in JavascriptCompiler and GeneratorAdapter classes to enhance code clarity and maintainability by standardizing method signatures and impro
renamed UISettings class to UISettings and removed synchronized keyword from store method to improve code readability and maintainability
updated the visibility of the ` fireDataChanged ` method from private to public and added a check for native input support to enhance accessibility and
( ) should not be retry when an em
replaced usage of ` TreeMap ` and ` HashMap ` with ` TreeMap < String, byte [ ] > ` and ` HashMap < String, byte
updated the array type check from double [ ] to short [ ] in ObjectInputStream. java and added a new class CloneArray. java with
only once ( )
dcinputset. isrelationfield ( ) now return true if the field be a relationship field
added a new column CAPABILITIES _ SERVER _ SLOGAN to the capabilities table and updated related logic to improve capability management and enhance
refactor conditional logic in DrawerActivity. java to improve readability to enhance code clarity and maintainability
replaced failure message with an assume statement in SolrRequestParserTest. java to improve test reliability and provide clearer feedback on network issues
added a check to return early if there are no missing symbol events to improve performance by avoiding unnecessary processing when no symbols are present
added new test cases for Data 5 - 4 in StringHelperTest. java to enhance test coverage and improve code readability
added warning message when data provider return an empty array or iterator
( chore ) camel - jbang - services : use collections. emptyList ( ) instead of collections. empty _ map, collections. empty
update node style model to support new version of node
fix typo in physicsrigidbody. setrestitution
added a new file ` AutoFtpActivity. java ` that implements an action listener for FTP testing to facilitate the testing of FTP
refactor the token type check in BaseSemanticAnalyzer to use a variable for the token type to improve code readability and maintainability by reducing repeated variable
added getter and setter methods for component state in ImageViewer, Component, OnOffSwitch, GenericSpinner, and UIBuilder classes to enhance functionality and
added a new file ` RemoteExecutionEnabled. java ` that implements serialization and deserialization for Boolean values to provide a mechanism for enabling and disabling remote
pdfbox - 2576 : fix typo, a suggest by valerybokov
updated file reading methods to use InputStreamReader instead of FileReader to improve compatibility with modern Java standards
added assertion for shadow variables in AbstractScoreDirector to ensure that shadow variables are not stale during processing
corrected a typo in the SEMIJOIN _ CONVERSION string to improve clarity and consistency in naming conventions
added SLF4J - specific logging for message content in multiple classes to improve logging for better debugging and monitoring of message content
updated file removal logic in SynchronizeFolderOperation. java and FileDisplayActivity. java to improve code clarity and ensure proper handling of file synchronization
added assertions to verify the presence and presence of transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly retrieved and
[ iotdb - 6652 ] deprecate ischemaregion # testConstructschemaregion ( # 6652 )
added a null check for sampleMimeType in MediaCodecRenderer to ensure that an IllegalArgumentException is thrown when a valid sampleMimeType is provided
replaced ` this. notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl ` and ` AbstractJdbc23PoolingDataSource `
added a onConstructor annotation to the @ AllArgsConstructor annotation in J. java to ensure proper initialization of JSON properties during object creation
added support for creating an index on a view in MetaDataClient to ensure proper handling of unsupported view types in index creation
added a new class ` Website ` with properties name, URL, and URI to establish a standardized way to access the website's name
added setup method to set the default locale to " en " in BSFormatterTest to ensure consistent locale configuration for tests
add a filenamefilter to check if a jar file be already download by the coremod
updated assertion in MultiPartParsingTest to use Matchers for string comparison to improve code readability and maintainability by using Hamcrest's Matchers
added handling for single and variable expression tokens in SimpleExprGenerator to improve handling of variable arguments in the code
added a volatile boolean field ` createdVertx ` to track the creation status of the Vert. x component to ensure that the Vert. x
replaced null with nodeModel for attribute writing to ensure proper handling of node attributes in the output
removed unnecessary logging statements in SynchronizeFolderOperation. java and added null - check for currentFile in FileDisplayActivity. java to improve code
added a new boolean field ` ignoredReadStatus ` to the Entries class and updated related classes to handle ignored entries regardless of their read status
updated resource path resolution from ` MavenTestingUtils. getTargetDir ( ) ` to ` MavenPaths. targetDir ( ) ` across multiple files
updated import statements and refactored data validation logic in RegisterServerConsumerExecutor and URIRegisterExecutor to improve code clarity and ensure proper handling of
updated play state condition in GwtMusic. java to ensure correct playback behavior when the sound is paused
added a new permission for the " plots. admin. area. sudo " area in the MainCommand and updated the Captions class to enhance
refactor QueryRunnerVisitor to use a separate method for setting query options to improve code readability and maintainability by encapsulating query options logic
updated file name comparison logic in ReloadableJava11ParserInputFileObject, ReloadableJava17ParserInputFileObject, and Java8ParserInputFileObject
refactor assertions in ResourcesTest to use a single variable for emoji and text to improve readability and maintainability of the test code
renamed the native method ` NMTWaitForDataMerge ` to ` NMTOverflowHashBucket ` and added new methods ` NMTM
( ) ) should be java ( )
updated the default NDOTS and NDOTS _ RESOLV _ OPTION constants and introduced a resolvOption method in AddressResolver to
added a superclass associate method in RequestRockerTemplate and a corresponding test in RequestRockerTemplateTest to ensure proper handling of NullPointerExceptions
pdfbox - 2576 : avoid npe, a suggest by valerybokov
updated namespace references from " liquibase / parser / core / xml / " to " www. liquibase. org / xml / ns /
move commonmimetypelocator from commonmimetypelocator to test.
changed repositoryVersionState from INIT to NOT _ REQUIRED in multiple files to indicate that the repository state should not be initialized
updated the comparison logic in GenerateChangeLogTask. java to use SchemaComparison with default catalog and schema names to improve the accuracy of the comparison
updated JUnit import from ` org. junit. Test ` to ` org. testng. annotations. Test ` to align with the latest TestNG
added a new file ` ProgressiveJPEGTest. java ` to implement progressive JPEG rendering functionality in the G2D framework
updated MaterialLoader to use AlphaDiscardThreshold instead of alphaFallOff and set default values to null to improve resource management and ensure proper
make native - image build error message more informative
added a null check for the text field before setting its size to avoid potential NullPointerExceptions when the text is not initialized
change readVarInt ( ) to readVarInt ( ) % 1 _ 000 _ 000 _ 000 to improve readability and maintainability of the code
updated PushUtils, PushUtils, ThumbnailsCacheManager, ThumbnailsCacheManager, ThumbnailsCacheManager, and PushUtils classes to be final and added
simplified the calculation of length by directly using curConfig. getLength ( ) to improve code readability and maintainability by reducing complexity
removed unnecessary cast to MockDirectoryWrapper in TestDirectoryReaderReopen. java to simplify code by eliminating unnecessary type casting
updated the file path format in the componentPresetDao to ensure proper parsing of presets data
updated accessibility announcement logic in TaskbarStashController and modified drawable handling in FloatingIconView to enhance accessibility features and improve code
updated Node initialization to use RefreshTask instead of Args to improve node discovery efficiency by utilizing the dynamically generated node ID
pmd : allow ant task to target both jdk 1.5 and jdk15
test : use mockito instead of powermock
added custom output stream and error logging to TestSchemaToolCatalogOps to improve error handling and provide better debugging information during test execution
added DFSClient as a parameter and updated related methods in FanOutOneBlockAsyncOutputSaslHelper. java to manage the DFSClient
updated MongoQueryMethod constructor to accept RepositoryMetadata instead of EntityInformationCreator to enhance query functionality by incorporating RepositoryMetadata information
add support for entityresolver2 to the digester
removed duplicate import statements from MetaDataEndpointImpl. java to streamline code and improve maintainability by eliminating redundancy
increased ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and introduced deadlock retry interval in TxnHandler. java to improve
refactor BarChartActivity to use a separate XAxis variable for better readability to improve code clarity and maintainability
added methods to validate and validate printable characters in the FsUtils class to enhance character validation and prevent potential issues with non - printable names
rename selenide. in ( ) to selenide. using ( )
[ mng - 6861 ] add support for plugin configuration in the project building process
updated return values in ProxyConnectionManager and ServerTrafficCounter to use'd'instead of'/ 1000'to ensure accurate representation of the
updated resource path to use a dynamic path based on the existence of " google - cloud - vision " to improve flexibility and maintainability of
changed return value from " STUB " to null in ModeledConnectionRecord and ActiveConnectionRecord, and added remote host retrieval in Authenticated
[ ds - 3482 ] add admin button to community list servlet
hbase - 22930 set unique name to longcompactions / shortcompactions thread ( # 548 )
updated the way the package name is retrieved in WallpaperChooser. java to improve resource handling by using resources for wallpapers
updated player visibility logic in Near. java to improve visibility handling for players in plots
refactor AndroidManifest, ResName, ShadowMediaPlayer, and ShadowActivity classes to improve code organization and maintainability
updated MlibOpsTest. java file to improve test coverage and ensure reliability of Mlib operations
fix native - image dependency check for window. awt. headless
updated reference container attribute from " referencedContainer " to " ReferencedContainer " and added a new test for the expected properties in the SchemeGenerator
removed unnecessary null checks for key and iv in UploadFileOperation. java to streamline code and improve readability by eliminating unnecessary checks
[ flink - 243688989 ] [ test ] add stability annotation to workprofiletest
removed conditional check for bucketing version in TezCompiler. java to streamline code by eliminating unnecessary checks
updated cursor position setting from ` setCursorPosition ( x, y ) ` to ` input. setCursorPosition ( x, y ) ` to ensure
refactor LockFreeBucket to extend abstract classes and introduce LockFreeBucketContendedTimeMeter and LockFreeBucket _ FinalFields _ CacheLinePadding
add thread pool stats to node probe ( patch by jbellis )
updated bitrate setting in ExternalPlayerActivity and PlaybackController to use user preferences for maximum bitrate to enhance flexibility in bitrate configuration based on user preferences
refactored tracing logic in ZipkinHttpSpanExtractor and added a new test method in TraceFilterTests to improve trace ID handling and ensure
prevent duplicate offer from be activate
fix an issue with the type icon in the flutter completion suggestion
added a method to set the project in the file system to ensure the file system reflects the current project state
updated JsBundle, JsBundleBuilder, JsLibraryBuilder, and JsTestScenario classes to include ProjectFilesystem as a parameter to ensure that the
refactor various EnvelopeStyle, Databinding, Databinding, DatabindingFactory, DatabindingModeFeature, JavaCallInfo, JavaCallInfo,
refactor MetricsDSLContext class to improve code readability and maintainability
removed the VersionConfig interface and updated its implementation to streamline the code by eliminating an unnecessary interface
added a try - catch block around the bindShadowClass method call to handle potential TypeNotPresentException during shadow class binding
changed visibility of validateTypes method from static to public and improved exception message formatting to enhance accessibility and clarity of error messages
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
added SLF4J logger imports to SimulationStatus. java to enhance logging capabilities for simulation status handling
updated the font position and font size in Splash. java to improve visual quality and usability of the application
replaced direct instantiation of NotificationImpl with a runLater block to improve readability and maintainability of the code
updated ReturnsElementsOf constructor in AdditionalAnswers and ReturnsElementsOf classes to enhance mock behavior and improve code clarity
corrected a typo in the error message for non - string partitions to improve clarity and accuracy of the error message
added a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to validate document indexing with line file documents to
added a method to retrieve the version code in MainApp. java and updated FeatureList. java to use this method to obtain the version code
camel - core - bean - fix issue with ambiguous method call. thanks to jason dere for the patch.
updated assertions from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest. java ` to
added bufferOwned functionality to IndexBufferObject, VertexBufferObjectWithVAO, and IndexBufferObjectWithVAO classes to manage buffer
added a new transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance the user experience by allowing a successful password
fix typo find by codespell on fossies. org
int - 1753 : remove reference to charstreamreadingmessagesource and charstreamWritingmessagehandler from spring - integration - stream
updated print statements in ` InstanceOfPatternMatchTest. java ` and modified return type in ` RemoveRedundantTypeCastTest. java `
added methods to check if a string array is empty and adjust row count accordingly to improve data handling efficiency by ensuring the correct number of columns
added @ Deprecated annotation and an implementation of AutoCloseable in GenericContainer. java to mark these methods as deprecated and improve resource management
updated log level from info to error in MediaInfo. java and modified test method signatures to throw ConfigurationException in RendererConfigurationTest. java to
added schemapattern configuration to BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to allow dynamic configuration of schema patterns based on user input
[ bouncy castle ] fix nullpointerexception with null id
refactor width and height calculations in AndroidGraphics. java to improve clarity and correctness of bitmap creation to enhance code readability and ensure consistent bitmap configuration
refactor Base64 encoding methods for improved performance to enhance efficiency and reduce execution time
[ gr - 16725 ] fix assumption in sulong.
simonstewart : ignore a test that fail on the iphone
renamed FlowBuilder and FlowJobBuilderTests files to improve clarity and consistency in naming conventions
changed the type of ` resName ` from ` ResName ` to ` resId ` in ` AttributeResource ` and ` OverlayResourceIndex
[ type : refactor ] move storage class into dockercontextmetfile
camel - jbang - spring - data - optimize to use @ before and @ after instead of @ after
refactor type variable capture logic in mmm Attr. java and add a new class T6450290. java with generic interfaces to improve type
added logging level configuration to LoggingFlags and LoggingOptions classes to allow users to specify a customizable logging level
added logging statements and modified method parameters in LauncherModel, SecondaryDropTarget, ModelWriter, and PackageUpdatedTask to improve debugging capabilities and
added an ` allFilesOption ` method to ` FileActivity `, ` FileDisplayActivity `, and ` PreviewImageActivity ` classes to
added default methods for ` forEachOperation ` and ` hasMatching ` in ` MutationOperationGroup ` to improve code clarity and encourage the use
updated the calculation of numPredictiveAppCols based on device type to ensure correct app columns are set based on phone type
updated string conversion from Charset. forName to UTF - 8 to ensure proper handling of character encoding in the application
added new files RequestMatchers. java and RequestMatchersTests. java to provide utility methods for matching request matchers in Spring Security framework
ggb - 2481 make sure ggbapplet. select ( ) work even if not an applet
updated position calculations in ProgressBar. java to adjust height and background dimensions to improve visual responsiveness and accuracy of the ProgressBar
[ native ] fix external _ functions. json path for presto on spark
changed object variables from non - final to final in BruteArgumentMoverHandle. java to enforce immutability and improve code clarity
added an additional condition to check if the handler is invalidated during gesture handling to ensure that the gesture handler only proceeds when an invalidated
updated layout calculations to use constrained dimensions instead of largest sizes to improve layout responsiveness and accommodate larger screen sizes
added a conditional check for " / robots. txt " in the HttpRobotRulesParser class to ensure proper handling of robots. txt
[ netbeans - 4482 ] fix npe in jabref gui
fix ` ` continue'', ` ` close'', ` ` return''
updated condition in UDFOPDivide. java and added a new test class TestUDFOPDivide. java with unit tests
refactor method signatures and improve formatting for consistency to enhance code readability and maintainability
updated the configuration of the filterProcessesUrl and logoutProcessesUrl in multiple classes to improve flexibility and maintainability of the configuration
added onDestroy ( ) method to ShareActivity and ContributionsActivity to ensure proper cleanup of services when the activity is destroyed
replaced usage of thumbNail with thumbnail in WallpaperPickerActivity to improve code clarity and maintainability by using a more descriptive variable name
refactor multiple Java files to improve code structure and readability to enhance maintainability and readability of the codebase
added a request timeout configuration in RaftServerConfigKeys. Rpc to ensure proper request timeout configuration for the server
only once ( )
updated MavenModuleLoader to set system properties before setting model source to ensure proper configuration of system properties for the project
added READINESS _ CHECK _ OK _ CALLS and READINESS _ CHECK _ BAD _ CALLS metrics to ServerMeter and related
added ModelHandler registration for animatedtorch item in BlockAnimatedTorch. java to enhance modularity and maintainability of the code
added null check before closing the writer to prevent potential NullPointerException when the writer is not initialized
added utility method to retrieve Hive configuration from a specified directory to improve code modularity and maintainability by centralizing configuration setup
added a link to the " Muting Users " page in FeaturesActivity. java to enhance user experience by providing a clear link for users
added a new property " jdk. reflect. useDirectMethodHandle " with a default value of " false " to disable direct method handles in
hbase - 19813 use stepping split policy instead of constantsizeregionsplitpolicy ( # 3481 )
[ flink - 18481 ] [ yarn ] add lib / plugins directory to yarn cluster
updated method calls from ` getPronunciations ` to ` getWord ` in ` BuildTranscriptHMM ` and ` TrainerDictionary
updated JSON formatting in JsonUtilsTest. java to ensure consistency in JSON formatting across the application
added intent extra for tweet ID in TimeLineCursorAdapter, TimelineArrayAdapter, and Compose classes to enhance functionality by including tweet ID in
- - - - - - - - - - - - - - - - - - - - - - - - - - - -
improve error message when no class be find to analyze
replaced the import of ` java. security. Key ` with ` java. security. PublicKey ` in KeyFetcher. java to align imports with
updated the ` isIncompatible ` boolean value from ` false ` to ` true ` in ` DLNAResource. java ` to streamline the
updated the ` createAccount ` method signature to include an additional ` AccountCreateContract ` parameter to enhance functionality by integrating AccountCreateContract for
pdfbox - 4892 : avoid arrayindexoutofboundsexception, a suggest by valerybokov
resolve intermittent failure on slow machine
updated the default star tree format version from " ON _ HEAP " to " OFF _ HEAP " and refactored related code to
modify title handling in FeedUpdateService to limit title length to 2048 characters to improve user experience by ensuring a longer title is displayed
updated the previewPanel initialization and repaint logic in JColorChooser and BasicColorChooserUI classes, and added a new Test6977726 class
changed log level from info to debug in DefaultBuildExtensionScanner. java to improve logging granularity for better debugging
added a null check for the reusable bitmap before processing to prevent potential NullPointerExceptions during bitmap processing
added a ViewGroup. LayoutParams parameter to the FakeView class to provide access to layout parameters for better customization
must be close ( # )
pdfbox - 2576, pdfbox - 2576, pdfbox - 2576, pdfbox - 2576, pdfbox - 25
added @ ignore to this test, so that it can be run by ant
added a private String variable ` ts ` with getter and setter methods to provide access and modification of the timestamp value in the Message class
[ opengrok - web ] use exceptionmapper instead of genericexceptionmapper.
changed the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
move legacy parameter to isochroneresourceresource so it can be use by other resource
removed the ` public ` access modifier from multiple test classes to simplify class accessibility and improve readability
refactor CSRF _ ATTRIBUTE setting into a separate method setCSRF to improve code readability and maintainability by encapsulating CSRF handling logic
lombok. launch. shadowclassloader should not try to load shadow class if they already exist.
[ jbrules - 3482 ] add support for ` ` numeric disabled'' property in rule sheet
hive - 258. change default value log level from info to debug ( jesus camacho rodriguez, review
added null checks for axes and buttons in Lwjgl3Controller. java and improved controller management in Lwjgl3ControllerManager. java
updated imports from cucumber. api to io. cucumber. core. backend in WeldFactory and WeldFactoryTest to align ObjectFactory with the
refactor port forward saving logic to utilize HostDatabase for improved code clarity to enhance maintainability and ensure correct database access
added configuration options for setting and retrieving snapshot data in the GlobalConfiguration class to enhance configuration options for snapshot data management in the application
added a check for a non - empty folder name before creating a PersistableBundle in SyncedFolderObserver. java to improve robustness by
refactor LocationMarshaller class to improve code organization to enhance maintainability and readability of the code
refactor gesture handling logic in multiple classes to improve readability and maintainability of the code
refactor VectorReader and related classes to use a unified implementation structure to improve code organization and maintainability by consolidating vector - related classes
replaced ` ArgumentMatchers. any ` and ` ArgumentMatchers. any ` with ` Matchers. any ` and ` Matchers. any ` in multiple
updated methods to use ` getRelativePath ( ) ` instead of ` getRelativePathName ( ) ` and ` getRelativePath ( ) ` to improve
refactor methods to accept RecordReaderConfig as a parameter to enhance flexibility by allowing configuration of record readers
added null check for extractor before processing annotations to avoid potential NullPointerExceptions during annotation instantiation
cloudstack - 7143 : limit resource from root volume with resource limit of type project or domain.
fix gui screen shift event not be cancelable. close # 7143
[ hotfix ] [ table - planner ] deprecate cold _ reads _ to _ omit in sizetransactionstrategyoptions
stop leech thread on test failure
[ issue # 6173 ] fix checkstyle violation in popmessageprocessor ( # 6173 )
refactor KeyboardAddonSettingsFragment to improve code readability to enhance maintainability and ease future updates
added JUnit @ Ignore annotation to ShadowDateUtilsTest. java to temporarily ignore tests that are not ready for execution
rename ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` to improve clarity and consistency in naming
added UpgradeRequest and UpgradeResponse handling in UpgradeConnection and implemented a test for upgrade requests in ClientConnectTest to enhance WebSocket connection management and ensure
added timeout functionality to AndroidImplementation to manage connection timeouts
refactor permission retrieval methods in GitblitClient and RepositoriesPanel to improve permission handling for users and team users
added a new test method ` testQuotedCastExpression ` to ` SelectTest. java ` to validate SQL parsing and deparsing with a
modified assertions in Misc. java to check if the file is writable or not based on the root directory to enhance file accessibility checks for
refactor FixedThreadExecutor to support dynamic group selection and improve thread management to enhance flexibility and maintainability of thread execution configuration
added null check for the field variable in AbstractChangeGenerator. java to prevent potential NullPointerException when field is null
replaced ` CasEventListener ` with ` InitializingBean ` and updated import statements in multiple configuration classes to align with the new Spring framework structure and
refactor animation end logic into a separate method ` endAnimation ( ) ` to improve code readability and maintainability by reducing duplication
added an override for the close method in the DeflaterOutputStream to ensure proper resource management and prevent memory leaks
added a new file ` gsp001. java ` that defines a native method for retrieving system properties to facilitate testing of JVMTI
fix classnotfoundexception for @ inherited and @ inherited method
* move cameracontrol and lightcontrol from jme3 to core
refactor PopupNotificationPanel to use SwingUtilities. getWindowAncestor for parent window retrieval to improve code clarity and maintainability by utilizing the correct parent window
replace ` InvalidInstanceException ` with ` InferenceException ` for clarity to simplify exception handling for ambiguous and unambiguous instances
added a method to retrieve the feature value to provide access to the feature value in the application
changed the parameter type of the after method from int to long to ensure compatibility with larger time values in the method
added ` onBuild ` and ` executionDriver ` properties with their respective getters and setters in ` ContainerConfig ` and ` Info ` classes to
added support for non - RTL layouts in the Toolbar and FlowLayout classes to enhance layout handling for different operating systems
added a boolean flag ` enablePositionIncrements ` to the ` StopFilterFactory ` class and updated the instantiation of ` StopFilter ` to
updated internetAddress initialization in EmailsTest and SystemErrorEmailReportTest to use a new instance of InternetAddress to improve code clarity and maintain
added a new variable ` mTryShareAgain ` and initialized it to false to ensure that the try - share functionality behaves as expected regardless of
added support for using TTY in the JansiNativePty class to enhance the flexibility and usability of the Jansi native
refactor bandwidth cost calculation to use a variable instead of a local variable to improve code readability and maintainability by reducing redundancy
replaced direct assertion with Awaitility's await method in Issue410Tests. java to improve test reliability by using Awaitility
refactor API URLs to use private constants instead of public static final constants to enhance encapsulation and maintainability of the code
updated sleep duration and added startup attempts in KafkaIOIT. java to improve test reliability by allowing more time for Kafka operations
updated ` hasJsonPath ` method to use ` is ( itemName ) ` instead of ` anyOf (... ) ` to improve clarity and
added SSL - related SSL context management in OkHttp. java to enhance security by ensuring SSL connections are enforced securely
refactor long click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve clarity and maintainability of long click event handling
added a new file ` HyperlinkFormula. java ` and modified ` StringPtg. java ` and ` StringPtg. java `
added nullable fields for stdout and stderr in ShellStep. java and updated the escapeAsBashString method to ensure proper handling of empty working
increase timeout to 2 second for asyncappender test.
refactor escapeDatabaseObject method to include a object name parameter to enhance flexibility in object escaping by allowing more object names
fix a bug in the material rename dialog that cause it to show up on the screen.
added a test for state change in ShadowDisplayTest and implemented state change in ShadowDisplay to ensure proper handling of display state changes in the application
add directinvocationservice interface to allow direct invocation
[ web ] add x ^ y and ^ x ^ y for gwt key
updated SQL queries for pg _ catalog. pg _ class _ dep and pg _ catalog. pg _ class _ pkic to ensure compatibility with
removed initialization of message variable in QueueChannel. java to improve code clarity and prevent potential null pointer exceptions
updated method signature from ` getPathsFromResource ` to ` getPathsFromResource ` and changed variable type from ` String ` to ` URI
added functionality to collect specific monitoring nodes based on the presence of a Jenkins application to enhance monitoring capabilities for better monitoring
added support for " disabled " and " defaults - disabled " attributes in the HeadersBeanDefinitionParser to enhance security configuration by including all secure headers
hbase - 2657 protobuf logreader should seek to the end of the stream rather than first byte
fix nacosregistry destroy ( ) to properly destroy nacos listener
camel - aws - mybatis fixed switch / cases indentation see camel - 14540
refactor GoAway handling to use a new method for writing status codes to improve code clarity and maintainability by encapsulating status code logic
refactor AuditEvent initialization and improve JSON output formatting to enhance readability and maintainability of the test code
added checks for FLOAT _ ROUNDING _ ERROR in Interpolation. java and adjusted the return value of Math. cbrt ( 0 )
change path to / defaults / forgeworldedit to be consistent with the new directory structure.
refactor the way the executable path is added to the builder to improve clarity and maintainability of the code
added assertions for PointRangeQuery instances in TestPointQueries. java to ensure correct handling of PointRangeQuery instances
hbase - 20625 testhfilecleaner fail on jenkins due to unstable archivedhfile dir
updated file label setting logic in ` ReceiveFileConversationComponent. java ` to ensure the file label accurately reflects the download request's
don't need to throw jce, just throw jce
[ hotfix ] [ runtime ] fix npe in rowtimeminbatchassgineroperator
updated FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationDefinitionMap to improve handling of path -
added benchmarks for performance improvements in QMapReadRandomKeyBenchmark, QMapReadSequentialKeyBenchmark, and QMapWriteBenchmark to improve
added a new HashMap for G _ SCH _ B in HybridPlotWorld. java to initialize the G _ SCH _ B map
updated GroovyEngine. java to handle empty fields and added a new method to convert getter methods to a new method to improve code robustness and
ggb - 2486 fix for angle ( line, line, line )
added configuration options for TCP keep - alive connections in Hive to enhance connection management by allowing configurable TCP keep - alive settings
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to improve clarity and consistency in naming conventions
fix for # 136 - minor - not log extra sql into log when use jdbc batch
replaced Joda time imports with Java's built - in utility methods in RealtimeSegmentRelocator. java to improve code readability and
vpc : don't need to check if success be true before start vpc
updated windowAlpha calculation to ensure it is non - negative to improve robustness by preventing negative progress values
updated warning message to reflect the upgrade from Spring Security 3.0 to ensure compatibility with the latest Spring Security features
updated method signatures and removed a conditional check for proto3 in ProtoSubjectTest. java to improve code clarity and ensure proper handling of proto3
changed private fields to private final in DisruptorProviderManage, QueueConsumer, and DisruptorProvider classes to ensure immutability and
added a new test class ` TestConfigureUDF ` and integrated it into ` ExprNodeGenericFuncEvaluator ` to facilitate testing of
updated regular expression in LogMessageWaitStrategy. java and added parameterized tests in LogMessageWaitStrategyTest. java to improve regex matching behavior and
refactor logger initialization to use slf4j's getLogger method to improve code readability and maintainability by reducing redundancy
( ) should be delete from deleted shard ( # 34 )
added support for version 17 in JavaLanguageModule and LanguageVersionTest to enhance support for version 17 and 17 - preview
log4j2 - 1343 add timeout to fileappenderresiliencetest
don't allow memory usage in volatilereadnode
added a method to return an unmodifiable list of steps and updated formatting for consistency to improve code readability and maintainability
removed unused fields fromBase58 and toBase58 in TronJsonRpc and TronJsonRpcApiUtil classes to streamline code and
refactor currency pair handling in BitstampAdapters. java to improve readability and maintainability of the code
use baseTimeUnit ( ) instead of TimeUnit. NANOSECONDS to ensure accurate measurement for different time units
[ euphoria - euphoria ] fix npe in reducebykeytranslator
refactor HostEditorActivity to use CharSequence instead of String for color handling to improve performance and maintainability of the code
refactor database version handling by replacing IncompatibleDatabaseHandler with DatabaseVersionHandler to streamline code and enhance maintainability
added a constant MAX _ TWEETS _ IN _ CONVERSATION and modified the loop condition in ExpansionViewHelper. java
increased refresh interval from 1 to 2000 in AbstractCachedLDAPAuthorizationMapLegacyTest. java to improve test stability by allowing more time for
fix a bug in queue. getpersistedbytesize ( ) where the tail page ben't persist correctly.
fix checkstyle issue in util / glowserver. java ( # 720 )
refactor grow method in DataIO to use a dedicated grow method to improve code readability and maintainability by reducing duplication
added import statement for DataOutputStream in GdxSetup. java to improve code clarity and maintainability
camel - 11561 : added getsubmittedfilename ( ) method to call getsubmittedfilename ( ) on the part.
added markReadForLoad ( ) method to LauncherFragment. java to ensure data is marked as read for loading
added exception handling for NegativeArraySizeException in JarInstrumentor. java to improve error handling and provide clearer feedback during instrumentation failures
added a private method ` checkForSpillPossibility ` to check if the current partition is valid and throw an OutOfMemoryException if it
changed the variable name from ` getDocStoreSegment ( ) ` to ` dsName ` and updated its usage throughout the code to improve code clarity
added a default name ID format and checks for supported names in the SamlProfileSamlNameIdBuilder to ensure proper handling of SAML names
added error handling for password change abortment to improve user experience by providing feedback when a password is aborted
removed redundant closing brace in Deadlock2. java to improve code readability and maintainability
add the getmaxidletime ( ) method to the nio receiver mbean.
deleted the FontScalingTest. java file to remove unused code that is no longer needed
added validation for filter begin and end dates in RRD4jPersistenceService to ensure data integrity by validating filter date before end date
added checks for non - positive vectors in GenericUDAFComputeStats. java to prevent potential ArrayIndexOutOfBoundsException when numVectors is negative
test : migrate to junit 5 ( # 4495 )
added null checks for view and glassPane in JLayer. java and created a new test class bug6994419. java to
camel - jbang - add wire tap eip to allow to use custom expression.
ww - 4441 change visibility of setaction ( ) method to protect
added a new BooleanValidator for " planner. enable _ topn " option in PlannerSettings. java and updated PushLimitToTop
[ java ] remove unused method aerondirectoryname ( ) from agent test
fixed - redisexecutor. ping ( ) method throw npe if rbatch. ping ( ) method be call twice. #
replaced ByteArrayOutputStream and InputStream with FileOutputStream and FileOutputStream in HiveConf. java and removed LoopingByteArrayInputStream. java to improve file handling
updated model creation to use criteria. getDevice ( ) instead of Device. defaultDevice ( ) to improve accuracy in model creation by using criteria.
removed the onCreateOptionsMenu and onMenuItemSelected methods from SimulationViewer. java to streamline menu item handling and improve user experience
updated certificate validation logic in CertificateValidator. java to improve certificate validation accuracy and performance
update hawtio home directory to use dirname instead of /. hawtio
added handling for empty comments and whitespace in Space. java to ensure proper formatting of comments in the code
added volatile keyword to member variables across multiple classes to ensure thread safety and prevent potential concurrency issues
removed printStackTrace ( ) method call from Throwable in ContextHandler. java to improve error handling by eliminating unnecessary stack trace printing
move customitemdroptest to ` ` integration - regression - regression'' module
added conditional handling for non - existent partitions in DDLTask and DDLSemanticAnalyzer to improve partition management by allowing conditional creation based on
[ iotdb - 6481 ] fix bug in ssvm secondary storage
[ hotfix ] remove unused local control request stream id in service node
wfs 2.0 support and add test for spatial operator
added an import statement for LuceneTestCase and annotated the BasicDistributedZkTest class with AwaitsFix annotation to indicate that the test is
modified conditional checks in Http11InputBuffer. java to improve handling of client - face validation to enhance the robustness of the parsing process by
[ java ] change the default inclusivity of the cluster to false.
refactor HBase configuration keys to use an array of cache keys instead of string literals to improve flexibility and maintainability of configuration keys
added methods to track and update the running record count in JSONRecordReader to improve tracking and tracking of record processing status in the application
added a loop to filter out valid year entries in CategorizationFragment to improve data validation and ensure only valid year entries are processed
updated color settings in CacheableTextView, CellLayout, and HolographicOutlineHelper to use PorterDuff. Mode. CLE
added OpenGL 2.0 availability check in the Mesh class to ensure compatibility with OpenGL 2.0 and improve error handling
ww - 4441 ensure actioncontext be set to null in the background process
modified the ` getUnescapedName ` method to accept a ` fullName ` parameter and adjusted related calls to enhance table name handling to include a specific
added connection timeout configuration in TestConnections. java and made the'count'variable final in StubConnection. java to improve connection stability and
added test cases for approx _ percentile queries in ` TestHiveAggregationQueries. java ` to ensure correct functionality of the approx _ percentile function in
updated the default idle timeout from Duration. ZERO to Duration. ofSeconds in WebSocketConstants. java and WebSocketChannel. java to improve default idle
modified the way shares are retrieved in FileDetailSharingFragment to improve accuracy in sharing by using the platform account directly
refactor Inet6Address class to improve type safety and error handling to enhance code reliability and prevent potential NullPointerExceptions
refactor button enabling and disabling logic in PlaybackControlView. java to improve clarity and functionality of button management
updated session ` isPresent ` method to accept session ID instead of session object to improve session validity checks by using session ID as a parameter
replaced ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary ` to improve clarity and
changed the value of the ` UseExceptionProbability ` variable from ` true ` to ` ____ ` to reflect the intended use of exception probability
modify the newPlateColor assignment logic based on the icon's theming status to improve visual representation based on the icon's
guacamole - 524 : refactor mysqluser initialization to use guacamole's init method
added " centre " to the aliases list in Middle. java to support the " centre " alias in the application
added dependency injection for DirectUpload in CommonsApplicationComponent to enable dependency injection for direct uploads in the application
adjusted spacing for left and right axes in BarChartActivity and BarLineChartBase classes to improve layout responsiveness and ensure correct axis positioning
added support for Java ABI class and source ABI flavors in AndroidLibraryDescription and JavaLibraryDescription to enhance functionality by supporting additional Java AB
added operation event status type to request parameters and initialized the services list in CompositeLogService to ensure proper handling of operation events and initialize the services
added a new ` VisibilityAnnotationTag ` and modified the loop to include annotation details to enhance debugging capabilities and improve visibility handling for method parameters
[ beam - 3482 ] use @ setup and @ teardown instead of @ startbundle and @ finishbundle
updated the process initialization to include the classpath in the ProcessBuilder to enhance classpath management by providing additional classpath information
updated documentLoader to use " res " separator instead of " android " to ensure consistent handling of resource paths for Android applications
( ) ) should be ( )
added JUnit Ignore annotation to WorkProfileTest. java to temporarily disable the test due to an issue b / 243855320
updated error message formatting to use escapePercent instead of a hardcoded string to improve clarity and consistency in error message formatting
fixed - jcache. close ( ) throw npe
act - 171 : reduce log level of exception in commandcontext
reformatted the instantiation of ALPNClientConnectionFactory in HTTP2Client. java to improve code readability and maintainability
use getbasevalue ( ) instead of getmaxvalue ( ) to avoid npe
use thinghandlerhelper. isinitialized instead of thingstatus. online
increased await timeout from 500 milliseconds to 5 seconds in multiple test files to improve reliability and responsiveness in tests
( ) ) should be debug ( )
added db. properties. db. maxactive. db. properties to set default db. db. properties. db. maxactive = 3
updated exception message formatting and improved method signatures in Reporter and ReturnsSmartNulls classes to enhance code readability and maintain consistency in exception handling
updated the parameter type from ` Frame ` to ` DataFrame ` in the ` generate ` method and removed unnecessary variable declaration to improve code clarity and
refactor package - info. java and module - info. java files to improve organization and clarity of module - info and module - info. java
added a check for empty physical column names in OrcPageSourceFactory. java and introduced a new test for ORC using an empty file to
added return statement for mixPlay method in Engine. java to enhance functionality by allowing mixplay functionality
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
pdfbox - 2576 : increase accuracy of pdfbox - 2576
simplified the condition for checking leadingIncludePaths in PreprocessorDelegate. java to improve readability and maintainability of the code
rename test matrixvectorMultiplication to matrixVectorMultiplication and refactor the logic in StringTemplate to improve clarity and maintainability of the code
use ` ` $ x'', ` ` $ $'', ` ` $ $'', ` ` $ x''
fix e - ac3 output with non - default sample rate.
( ) ) should have ( ( ) ) method
increased the target value from 60000 to 90000 in HighDimensionsTest. java to improve test coverage by accommodating larger scale factors
updated condition in SimpleTypeGT. java and added a new test method in GMLParserTest. java to improve validation logic and ensure XML
added unit tests for the ClassPathXmlJobRegistryContext to ensure proper functionality and configuration of job names in the application context
changed the data type of mHistoricTimes from float to long in MotionPauseDetector. java to accommodate larger time values and
camel - aws2 - restlet : deprecate component - aws2 - restlet
( chore ) camel - log : remove unused method in logendpointbuilder
refactor ChromeTraceEvent creation to use a dedicated method for better readability to improve code maintainability and reduce duplication
added status checks before adding limit orders to ensure only non - canceled, filled, and reJECTED orders are added to the limitOrders list
added pixel stride handling in BufferedImage and LCMSImageLayout classes to improve image layout accuracy and enhance error handling for invalid pixel types
refactor timestamp handling in Event and JrubyEventExtLibrary classes to improve code clarity and utilize JrubyTimestampExtLibrary for better handling
added a check for path ending with " / " in ContextHandler and implemented a test for the real path in WebAppContextTest to ensure correct
changed ScriptFunctionImpl from TYPE _ ERROR _ THROWER _ SETTER to TYPE _ ERROR _ THROWER _ GETTER to align
refactor scroll handling logic in JEditTextArea. java to improve readability and maintainability of the code
fix npe in graphdecoder when callerloopscope be null
test : migrate sniperjavaprettyprinterjavaprettyprinter to sniper - java - api
refactor URLOutputStream initialization to use try - with - resources for better resource management to improve resource handling and enhance readability of exception messages
added Entity annotations to the Mail class to ensure proper handling of entity relationships in the application
or group should be default to true ( # 2 )
added getter methods for metadataBuffer, valuesBuffer, and valuesBuffer in CountersReader. java to provide access to these buffers for better usability
added a flag to track if a file has been read and implemented a test for it to ensure proper handling of empty files in the code
added conditional failure handling for internal custom names in StringSubject. java and improved test assertions in StringTest. java to enhance error reporting and ensure
added a regex pattern matching for library names in LibUtils. java to improve handling of library interactions based on the provided name
updated exception handling in JrtJavaBasePackages. java and PackageHelper. java to catch a more general Exception instead of NoClassDefFoundError to improve
hbase - 15836 masterfilesystem. checkdfsafemode can fail if the file system be in safemode
updated error message formatting in TranslatingJavacPhaseTracer. java to improve clarity of error messages for better debugging
remove plugincache. clone ( ), it's no longer need
fix a nullpointerexception when update the status of a contact.
remove deprecate withresourceandparams method from servletrequestdetails
added a new integration test for fetching account information in the BTCE exchange to ensure that the application can fetch account information from the BTCE exchange
added mouse wheel functionality to VDUInput and vt320 classes to enable mouse wheel interactions in the terminal
updated library path handling in Natives. java to ensure correct library path is set based on user input conditions
# 438 - remove deprecate @ columnhstore and @ columnhstore
added player SKIN _ FLAGS setting in GlowPlayer and MetadataIndex classes to enable customization of player skins based on settings
updated LoadBalancerWithServiceTests to use SLF4J instead of RequestFieldMatcher to enhance logging capabilities and improve service configuration handling
fix npe in mapservice when event data be null
updated the way the operating system version is retrieved in JRSUIUtils. java to improve security by using a privileged access method
added a new constant FREEMARKER _ CONFIGURATION _ FILE _ SUFFIX and refactored fileSuffix initialization to improve code clarity
[ multistage ] fix bug in selectmessagequeuebyhash and add test
refactor ToolbarPanel to improve layout handling and animation callbacks to enhance responsiveness and maintainability of the layout management code
updated binding logic in StyledTextAreaVisual. java to use ` when ( hasCaret ) ` instead of ` bindConditionally ( ) ` to
updated PrebuiltAppleFrameworkDescription, CxxBinaryDescription, CxxGenruleDescription, and CxxTestDescription to utilize CxxBuckConfig for managing declared
replaced SimpleParameterAccessor with ParameterAccessor in multiple files to align with the new naming conventions and improve code clarity
added null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added array creation logic in DataUtilities and a corresponding test in DataUtilitiesTest to ensure correct handling of array types in the DataUtilities class
updated SSL engine creation logic to handle the case when the address is null to improve SSL engine reliability by ensuring correct host name is used
hbase - 24590 fix flaky testfstabledescriptors. testfstabledescriptors. testfstabledescriptors
danielwagnerhall : delete a cookie by domain rather than by path
added a new boolean field ` mHasEndedLauncherTransition ` and modified the return logic in ` AbsSwipeUpHandler. java `, and
updated HTMLListWriter and HTMLWriter to set the charset to UTF - 8 to ensure proper character encoding for HTML elements
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
updated stats key prefix maximum length from 200 to 150 and refactored path separator handling to improve performance and maintain consistency in path formatting across the
updated the arrow button addition in BasicComboBoxUI. java and added a new class bug6337518. java to address a specific bug
updated TestRandomAccessBuffer. java file to improve performance and maintainability of the code
refactor UserInfoActivity class to improve code readability to enhance maintainability and facilitate future updates
added import statements for HomeContentProvider and updated broadcast calls in multiple services to ensure proper notification of content changes and improve code clarity
added a new boolean variable ` mStayPressed ` and refactored related methods in ` BubbleTextView ` and ` Launcher ` to
updated the ` getFallbackResponse ` method to accept an additional ` Throwable ` parameter across multiple fallback policy classes to enhance error handling capabilities for better
removed the option ` _ compile _ only ` from the flag check in the ` DumpBytecode ` class to simplify the conditional logic for better
modified return statements in ChannelUri. java to include null checks for tags to enhance robustness by preventing potential NullPointerExceptions
updated regex patterns in RegexpUtil. java and added new test methods in TestSqlPatterns. java to improve SQL pattern matching accuracy and ensure
added action bar title management in FileActivity and updated action bar title in FileDisplayActivity to improve user experience by ensuring the action bar title
updated method calls in PythonDslProjectBuildFileParser . java to use getLast instead of getOnlyElement , and added a JUnit test for concatenating lists in ConfigSettingIntegrationTest . java to improve element retrieval logic and enhance test coverage for list concatenation functionality
updated the schedule annotation from " * " to " 0 " in CleaningService. java to ensure proper scheduling behavior by setting a default value to
updated the TransactionalValidationListener class to improve partition handling and error handling to enhance the robustness and reliability of partition management in the Hive met
updated ReplicationHandler and SnapPuller classes to enable polling functionality to enhance monitoring capabilities during replication processes
changed the data type of ` generatedKey ` from ` int ` to ` long ` and updated the SQL execution logic to accommodate new
modified the lambda expression in SimpleReferenceCache. java to improve readability to enhance code clarity and maintainability
updated test cases to reflect new failure messages to improve clarity and accuracy of test failure messages
camel - jbang - fix npe in camel - http - client
deleted the HttpTestAccount001. java file to remove unnecessary tests that were no longer needed
fix for http : / / issues. apache. org / jira / browse / amq - 4237 - do not catch throwable in dispatch
camel - 1331 fixed the issue that camel - cxf don't support the dataformat.
added a case for the'~'character in ClientUtils. java to enable handling of the'~'character in the ClientUtils functionality
camel - slack : use java. time. duration instead of long.
fire blockharvesting event, not just drop.
updated layout parameters and modified checkbox label formatting in TranscodingTab. java to improve layout consistency and enhance readability of the JCheckBox label
added a new file ` bug8057791. java ` that implements a JList with a Nimbus Look and Feel to implement a
modified flags _ field assignment logic in LambdaToMethod. java and added a new interface LambdaInterfaceStaticField. java with a static field to
added a subscription manager and updated WebSocket methods factory in RunnerBuilder. java, along with a new test case in RunnerBuilderTest. java to
replaced ` to. length ( ) > 0 ` with ` to! = null ` in ComposeActivity. java to improve null safety and
added dictionary handling in ParquetFixedWidthDictionaryReaders and a corresponding test in TestColumnReaderFactory to improve data processing efficiency and ensure correct
refactor layout handling logic in PortraitPagedViewHandler. java to improve clarity and maintainability of the code
added logging annotations and an aspect ratio annotation to enhance logging capabilities in the application
modified the string concatenation to include the trace length when adding thread information to the dump to ensure that the dump contains only relevant thread information when trace

added totalFrameSize ( ) to the reference map creation to ensure proper handling of reference maps with the correct total frame size
refactor TypesafeConfigurator to improve code organization to enhance maintainability and readability of the code
camel - graphql : added camel - itest - karaf feature and related test
renamed the main method from ` main ` to ` bug1 ` and added two new test methods for ` bug2 ` and ` bug3
removed URLEncoder for key and value in HttpClientIntroductionAdvice. java to simplify the code and improve readability
refactor ` UnsupportedPlatformTool ` to ` UnsupportedPlatformTool ` in ` CommandAlias. java ` to improve clarity and maintainability of the code
refactor loopCount calculation and log message formatting in RecoveryStrategy. java to improve code readability and maintainability
added a ` size ( ) ` method to ` FlightConfiguration ` and its implementation in ` FlightConfigurationImpl ` to provide a way
[ hotfix ] [ test ] add random index to address manager test
updated layout specifications and component positions in VLCVideo. java to improve layout consistency and ensure proper component alignment
move bitquare link to bisq / bitsquare
updated the AUTHORITY string from " talon. android. talon. provider " to " twitter. provider " to reflect the
if a user do not exist, default to the same
added binding of the GL _ ARRAY _ BUFFER buffer in VertexBufferObjectWithVAO. java to enable binding of the OpenGL buffer with the
updated ServerHttpSecurity configuration to improve security settings for HTTP requests
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests to temporarily disable tests that are not ready for execution
added default headers management in HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP client configuration by allowing customizable default headers
added exception for user password validation
deleted the NoOpConfigPathGetter. java file to remove unused code that is no longer needed
replaced Codec. base16Decode with Bytes. fromHexString in EngineAuthService. java to improve code readability and leverage Byte utility for converting to
updated FloatUtil to use CSSName constants instead of CascadedStyle to improve code clarity and maintainability by replacing CascadedStyle with
add javadocs for @ plannignscore and @ pfact ( collection ) property + fix invalid old javadoc statement
replaced ` getDefaultHeaders ( ) ` with ` defaultHeaders ( ) ` and introduced a new method ` defaultHeaders ( ) ` in ` Rest
use charset instead of string. forName ( ) in proxyserver and realm
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to ensure that the
replaced ` Long. valueOf ` with ` Long. compare ` in ` ExpandableUploadListAdapter. java ` and ` FileStorageUtils. java
added debug logging for HTTP responses in DefaultJdkHttpClient and JdkBlockingHttpClient to improve logging granularity and reduce noise in logs
updated import statements in LegacyAuthenticationHandlerAdapter. java to improve code clarity and maintainability by using specific authentication handlers
changed the WingDings class from final to public to allow access to the WingDings class from other packages
don't try to remove filter from the network if it's the owner public key
refactor : move static method to bcpginputstream. wrap
updated DataOutputStream initialization to use BufferedOutputStream and added try - finally block to ensure proper resource management and prevent potential resource leaks
added a new test method ` testSelectAllFromView ` and modified column name handling in ` HiveBaseResultSet ` to improve test coverage and
renamed FocusTransitionTest. java to improve clarity to enhance code readability and maintainability
use google. gwt. core. client. gwt instead of gwtproject. core. client
added exception handling for retrieving job instances in MapRedTask to improve robustness by handling potential exceptions when retrieving job instances
updated the assignment of _ readListener to ensure it is non - null to improve code robustness by preventing potential NullPointerExceptions
added a method to change the component color and refactored color setting logic to improve code readability and maintainability by encapsulating color change handling
updated constructor parameters in TaskHelper to use'hidden'instead of'false'to improve clarity by using'hidden'instead of'false
fix intermittent test failure on slow machine
pdfbox - 4892 : fix lock leak in createfromrandomaccess ( )
updated BoundSql, SqlSource, and LanguageDriver classes, and added import for DefaultParameterHandler to enhance SQL function functionality and improve code clarity
lsra spill optimization should check for loop depth before set spill state
added a new file MicronautAstBuilder. java with a method to compile Groovy scripts to facilitate the compilation of Groovy
refactor cursor closing logic into a separate method ` closeInternally ( ) ` in ` PgResultSet ` to improve code readability and maintain
set default value of serviceAdvisorType to PYTHON to initialize the service advisor type to PYTHON
refactor ResolvingDecoder initialization to use a thread - local variable to improve performance by reusing the resolver across multiple threads
changed the return type of Path from Collection to List and updated the constructor in PdfCleanUpContentOperator to use an ArrayList instead of a Collection
updated SendCoinShieldTest to use a random byte array instead of an empty byte array to improve performance and reduce memory usage during output generation
added a method ` setPersonalisation ` to the ` SkeParameterSpec ` class to set personalization in a specified locale or email address
removed redundant code in CodeGenerator. java to streamline code for better readability and maintainability
removed the percentage parameter from the scroll method in AllApps, BaseOverview, and LauncherInstrumentation classes to simplify method signatures and improve code readability
changed the access modifier of the pointer variable from private to public and added reset and resetTo methods to allow external access to the pointer and position
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to better reflect the functionality of the BdbContentDigest
fix a bug in castexpression that cause a nullpointerexception.
replace ArrayList with a boolean for managing accepted media types to improve code readability and maintainability by reducing object creation overhead
added a new boolean variable ` false ` to ` TaskView. java ` to enhance functionality by providing a default value of ` false `
added auto - increment functionality to Liquibase data type classes to ensure proper handling of auto - increment columns across different data types
added a default value of " Command failed due to Internal Server Error " to provide a meaningful error message for easier debugging
updated imports in DeadListenerTest. java and LocalManagementTest. java to utilize jdk. testlibrary. ProcessTools and Utils for performance data
replaced ` toSimulate. add ( currentStatus ) ` and ` toSimulate. push ( boosterStatus ) ` with ` to
added AJP socket connector configuration and improved port handling in GitBlitServer. java and Build. java to enhance flexibility and maintainability of
added type coercion for intersection types in TransTypes. java and created a new Intersection03. java file with a test case to ensure
renamed the EmbeddingTest class to EmbeddingITest to improve clarity and consistency in naming conventions
added a native method to check if the toolkit thread is already started to improve performance by avoiding unnecessary thread creation for the toolkit thread
[ hotfix ] [ runtime ] add option to compress the bundle in parallel
add surface. setvisible ( ) and surface. setvisible ( ) in papplet ( )
updated the temporary directory path to use the class name instead of a hardcoded string to improve flexibility and maintainability of the temporary directory used in tests
added configuration options for fullNodeHttpEnable, solidityNodeHttpEnable, and SolidityNodeHttpApiService to enable or disable HTTP
added a service property to GoogleCloudFirestoreTicketDocument and updated methods to include it in the returned collection to enhance the ticket data structure to accommodate service identification in ticket processing
updated the Generate. java file to improve code organization and maintainability
( ) should not be nullable ( )
added a constant for DOTS _ ONLY in BadgeRenderer and updated related logic in IconPalette and ShadowGenerator classes to improve code readability and
changed the ` getConfiguration ` method from final to non - final in ` FreemarkerManager. java ` to allow modification of the configuration
added unit test for invalid excluded package name pattern in ognlutil
modified the handling of ` deviceUdid ` to accommodate different SDK names to ensure compatibility with different operating systems and improve test reliability
replaced error logging with warning logging in DefaultHttpClientFilter and updated test cases in TestDefaultHttpClientFilter to improve error handling and enhance test coverage for
refactor root script binding and invocation handling in AllAppsView. java to improve code clarity and ensure proper execution flow during initialization
added a new constant TEXT _ BURN and modified the conditional check for lineCount to improve text rendering behavior based on the new setting for shadow
added teardown methods in TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup of temporary tables and views after tests
added retrieval of the parser using the parser instance to enhance XML parsing capabilities by accessing the parser instance
updated fastpath logic in BoundedLocalCache. java and added new test cases in BoundedLocalCacheTest. java to improve cache performance and ensure
added complete and flush methods to WebSocketConnection and modified RawConnection to extend WebSocketConnection to enhance connection handling and improve asynchronous processing
added unit tests for ` all _ assertions ` in ` SoftAssertionsPerfTest. java ` to enhance test coverage for various assertions
added logic to handle test failures in PythonRunTestsStep and updated visibility of assertExitCode method in PythonTestIntegrationTest to improve error handling and
added conditional logic to calculate xAdvances array based on markupEnabled flag to improve the handling of glyphs when markup is enabled
refactor score document assertions to use streams for better readability and performance to improve code clarity and maintainability while ensuring expected scores are validated
updated enumClass assignment to use clazz. getSuperclass ( ) instead of clazz. getEnclosingClass ( ) to ensure proper handling of anonymous classes in
move playerconnection. flush ( ) to playerconnection. flush ( )
added a ` mStarted ` flag and modified the removal of ` OnDrawListener ` in ` Launcher ` and ` LauncherAnimUtils ` to
refactor CheckIndex, BlockTreeTermsReader, FuzzyTermsEnum, and Builder classes to improve code organization and maintainability
updated import statements and modified the condition in ReplicaAssigner. java to improve code clarity and ensure proper handling of match statuses
updated the default return value of the MediaInfoParser check from false to true to ensure the media info parser is valid by default
add support for aop interceptor type in bean definition processor
added assertions for existence and existence checks in FolderPermissionBase. java to ensure proper permission handling and validate the correct response code
make sure we don't publish the status if the provider have not changed
updated the random color generation logic in PastelColor. java to improve the accuracy of the color representation
refactor ScriptEngineFactory to improve code readability to enhance maintainability and facilitate future updates
refactor bitmap creation and state management in HolographicViewHelper. java to improve code clarity and maintainability by separating original and outline bit
refactor HTTP method handling in CloudClient. java to improve clarity and error handling for unsupported request methods
add support for a phrase containing phrase in the multi - word preprocessing.
added import statement for IOException in IOChannelUtilsTest. java to improve code clarity and maintainability
added a check for Hive _ PASSTHROUGH _ OF _ CLASSNAME before loading the class to improve handling of specific output
refactor ChunkListener, AfterChunk, and BeforeChunk classes to improve code readability and maintainability
updated length validation logic in DOMBuilder. java to ensure proper handling of negative lengths to prevent potential ArrayIndexOutOfBoundsException
updated method calls in ClusteringCoefficient, EigenvectorCentrality, DiameterUI, GraphDensityUI, and Hits
camel - aws2 - translate : improve the verifier to check if a particular service work on a specified region, camel - aws2 - translate
added a new file ` PublicStaticInterfaceMethodHandling. java ` containing an interface with static and default methods to demonstrate and demonstrate the use of
camel - 1868 : camel - core - optimize defaultkeyselector to reduce object allocation.
refactor exception handling in LogResolverBean. java to use'ThreadDeath'instead of'ThreadDeath'to improve code clarity and maintainability
refactor KeyManagerFactory, TrustManagerFactory, ConfigFile, Security, CertPathBuilder, CertPathValidator, and X509Certificate classes to improve code
update JGit version from 201106090707 - r to 201109151100 - r and sort jars in Launcher. java to reflect
fix npe in clientintroductionadvice. getclient ( string, string )
int - 1188 add namespace handler for transformer, and add test
replaced BACK _ FACTOR with REWIND _ TIME and updated related conditions in ResumeObj. java to improve clarity and accuracy in handling
added a method ` isScrollWheeling ` to ` CodenameOneImplementation ` and its implementation in ` Button ` and ` JavaSE
updated usage string formatting in UtilityCommands. java and improved permission handling in DocumentationPrinter. java to enhance code readability and maintainability by simplifying
fix typo find by codespell on fossies. org
removed setter methods for seqFiles and unseqFiles in CrossSpaceCompactionResource. java to streamline code by eliminating unnecessary setter methods
removed redundant @ Override annotations in Observation. java to streamline code by eliminating unnecessary overrides
( ) should have same rule ( ) ( # 10 )
remove unnecessary synchronization in abstractsootfieldref # getfieldunsafe
use name. tag or name. tag ( ) instead of name. tag ( )
added methods for listeners, command creator, and job length estimation in IController and TinyGController, and updated BackendAPI to use I
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest. java ` to verify the rendering of a large horizontal rule in
replaced System. out. println statements with TTY. println in TypeSystemTest. java and PartialEscapeAnalysisPhase. java to streamline
updated response handling in Response. java and added revocation date in RevokedCertificateException. java to improve code clarity and maintainability by
changed the condition from checking if frameLength is non - negative to checking if it is less than or equal to zero to ensure correct handling of
updated return statements in IntFloatMap. java and IntIntMap. java to ensure consistent handling of float and int values
refactor ImageDownloadService to use Runnable for setting icon and preference variables to improve responsiveness and maintainability of the code
added a null check for the registered variable in HandlerRegistration. java to ensure proper handling of null values when demand is zero
removed the ` hasNextSibling ` method from ` AttributeNode `, ` DocumentNode `, ` ElementNode `, and ` IeNavigator
added null check for results before accessing its size to prevent potential NullPointerExceptions when results list is null
updated log messages in MobFileCache. java to improve clarity to enhance visibility of cache configuration details for better debugging
updated ColConvCCMTest. java file to improve test coverage and reliability
replaced instance variable ` source ` with local variable ` allowCovariantReturns ` and introduced a new boolean variable ` syntheticNameChar `
pdfbox - 2576, pdfbox - 2576, pdfbox - 2576, pdfbox - 2576, pdfbox - 25
refactor Json class to use String. asString ( ) instead of Float. asFloat ( ) to improve code readability and maintainability
camel - test - infra - ftp : added miss return statement in genericfileconsumer
added an EventQueue. invokeLater call to ensure the delegate is executed on the Event Dispatch Thread to improve responsiveness by executing actions on the Event
updated maxSize calculation to use getMaxBinaryMessageSize ( ) instead of getMaxBinaryMessageBufferSize ( ) to ensure the maximum message size does not exceed
fix typo find by codespell on fossies. org
replaced ` Arrays. equals ` with ` MessageDigest. isEqual ` in ` PasswordEncryptionService. java ` to improve performance and leverage built - in
refactor JdbcSerDe to use LocalDate and LocalDateTime instead of java. sql for better date and time handling to improve code clarity and maintainability by
updated version from 2 to 3 and refactored metadata reading logic to improve metadata handling based on versioning
added conditional configuration for ` LocalContainerEntityManagerFactoryBean ` and ` AbstractEntityManagerFactoryBean ` in ` FlywayAutoConfiguration ` to enable
added sorted ( ) method to ClassesImpl. java to ensure consistent sorting of class instances
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated variable names in ` AbstractLauncherUiTest ` to improve
refactor SharedInformer class to improve code readability and maintainability
refactor method calls in TestCloseScope0. java to use ScopedMemoryAccess instead of Class. forName to improve compatibility with different Java versions
increased test timeout from 500ms to 5000ms to improve test reliability by allowing more time for server connections
updated CaptchaChannelProcessorTests. java to improve test coverage to enhance reliability of Captcha processing functionality
fix a bug in metadataimport where a collection with the same name don't exist.
added retry logic for saving registry cache files in AbstractRegistry. java to improve reliability by allowing retry attempts when saving registry cache files
updated the initialization of TrackingDirectoryWrapper to use'directory'instead of'mergeDirectory'to ensure that the correct directory is used for tracking
[ java ] fix false positive with unusedimports
added validation for insert overwrite queries on Iceberg tables to ensure proper handling of overwrite queries on partitioned Iceberg tables
updated assertions in BootstrapTests. java to reflect the absence of legacy keys to ensure proper configuration validation for SAML keys in the application context
fix incorrect detection of anonymous and non - static field
removed synchronization from getAddressVector method and updated related logic to improve code clarity and maintainability by using a more descriptive variable name
removed unused WAITING constants from CommentsParser. java to streamline code and improve maintainability
added IOException handling to the release ( ) method and introduced a new LockReleaseFailedException class to improve error management and provide clearer exception handling for lock
change package name from ` test. jdbc. datasource ` to ` org. springframework. batch. test ` to align with the new package
added a check for unary operator before transformation in SpelExpressionTransformer. java to ensure proper handling of unary operations in the application
disable mockbytecodegenerator by default
refactor ` JavacRoundEnvironment ` to use ` TypeElement ` instead of ` DeclaredType ` to simplify type handling and improve code clarity
added failure handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest and modified lock timeout in MySQLTableLock
refactor ` setSystemProperties ` method to remove the ` LogFile ` parameter to simplify the method signature and improve code clarity
camel - aws2 - service - make serviceapirequest more resilient against too many http redirects
added new constants for service mapping, version mapping, and application mapping to enhance configuration flexibility for different microservices
updated Step. ABOUT _ TO _ BEGIN _ PROCESSOR to use getBeanName ( ) instead of proc. getName ( ) to improve clarity
changed DB _ PATH _ REGEX to DB _ PREFIX and updated its usage in tests to improve code clarity and maintainability by centralizing database path
updated return statement in HomeFragment. java to use HomeDataSource to retrieve unread count for the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method ` testVirtualThreadPool `
updated the ` getAllOrder ` method to include a limit parameter and adjusted its implementation to limit the number of orders based on a specified limit
added null check for the user before retrieving user settings to prevent potential NullPointerExceptions when the user is null
updated the method to retrieve the absolute file path in LocalFileSystem. java and added a new test for matching relative wildcard paths in LocalFileSystemTest
added dimensions for rectangle dimensions in ComponentBuilders. java to ensure that rectangle dimensions do not exceed defined maximum limits
added logging functionality and a deprecated method for setting connection manager timeout to enhance connection management and improve code clarity
added exception handling for document creation failures to improve error management and provide clearer feedback during document creation failures
refactor string formatting in CrateType. java and add unit tests in RustBinaryIntegrationTest. java to improve code readability and ensure correct
added methods to check if a word is empty or only a valid number to enhance spell checker functionality to handle non - numeric inputs correctly
updated the MESSAGE constant from " HelloWorld. message " to " HelloWorld. message " to ensure consistency in message formatting across the application
added methods to manage file actions in FileDisplayActivity to enhance user experience by allowing direct access to file actions
added error handling for logReplicationTimeAndConfFiles call in SnapPuller. java to improve robustness by handling potential exceptions during replication
removed unnecessary whitespace in the update method call to streamline code for improved readability and maintainability
updated the constructor of StreamerLoader to accept an array of Materials instead of a single MaterialHolder to enhance flexibility by allowing multiple MaterialParser
added new " Core Library for LibGDX ", " Rigid Body Microsoft ", and " Controller / Rigid Body " to enhance
added maximum recycled views for various item types in the RecyclerView's pool to enhance performance by limiting recycled views based on available
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure correct building of binary
make it possible to add a block with a mining recipe to the game's world
added imports for ParsedNode, ParsedNodeException, and ResourceAccessor in CreateProcedureChange. java to enhance code clarity and maintainability by using
added null value vector support in FilterOperatorUtils and corresponding tests in NullHandlingEnabledQueriesTest to enhance functionality and ensure correct handling of null values
jdynamicinvokertest. java : remove redundant validation of bootstrap method argument.
try to fix the test error of camel - jms
removed the call to ` runtimeOptions. getFormatters ( ). clear ( ) ` in ` CucumberInstrumentation. java ` to streamline
updated the type of the ` contacts ` list from ` List < RegisteredServiceContact > ` to ` List < DefaultRegisteredServiceContact > `
added workspace cell padding adjustment logic in DeviceProfile. java to ensure workspace labels are adjusted correctly based on cell size and icon size
updated assertions in ReplicationFactorTest. java to use a consistent assertRf method to improve code readability and maintainability by reducing repetition
llvm : fix race condition during context pre - initialization.
removed unused JUnit Ignore annotations from ChaosMonkey tests to streamline tests by eliminating unnecessary tests
replace RuntimeException with JsonIOException in Gson. java to improve error handling for JSON - related issues
replaced Integer. valueOf with Integer. parseInt for better readability to improve code clarity and maintainability
updated error messages and changed file tree walking limits from - 1 to Integer. MAX _ VALUE to improve clarity in error handling and ensure maximum
refactor segment name validation to use a dedicated method for high - level consumer segment names to improve code readability and maintainability by reducing duplication
added new ` startActivity ` and ` startActivityForResult ` methods to ` ShadowFragment ` and corresponding tests in ` FragmentTest ` to enhance functionality and
updated the date parsing method to use the current time from clockReader to ensure accurate date representation in the application
updated the return statement in TargetCpuType. java to include " x86 _ 64 - none - linux - android " to ensure compatibility with
added a method to delete files in FileDataStorageManager and implemented asynchronous deletion in ManageAccountsActivity to improve file management and ensure proper cleanup of
updated command line option syntax in SchemaCrawlerCommandLine. java to improve command line options for better user experience
( ) should have an existing one
replaced the implementation of MultiFormatReader with a direct call to decodeBarcode to simplify the code and improve performance by eliminating unnecessary object creation
removed unnecessary lists from BuckTarget constructor and related classes to simplify constructor parameters and improve code clarity
added unit tests for ` rangePastEnd ` and ` rangeContains ` in ` GWCZoomContextFinderTest. java ` to ensure
added a new configuration option ` DEPEN _ TRACKING _ CONFIG _ KEY ` in ` JRubyScriptEngineConfiguration ` to enable tracking
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` to ensure the correct servlet path is used for authorization
don't attempt to create a new keyspace if it already exist
refactor WelcomeWindow to improve image handling and rendering settings to enhance performance and maintainability of the image rendering process
updated tuner configuration to use a unique name instead of a hardcoded value to improve clarity and maintainability of tuner configuration management
added HasTests interface to AbstractShBinaryDescriptionArg and implemented a test for sh _ binary to enforce the presence of tests for sh _ binary components and ensure proper functionality
added handling for " db : hsqldb " in TestFilter. java to ensure proper configuration for database connectivity in the application
removed unnecessary whitespace in JavabinLoader. java to improve code readability and maintain consistency
trufflestacktrace : don't materialize host exception if the original exception have no stack trace.
refactor GraalServices. java to improve service loading logic to enhance clarity and maintainability of service loading process
''''should''''''''''
( ) ) should'' and''
make the fall and fall shatterer shatterer be able to place a block in a block. close # 3191
camel - 14263 : camel - ftp should use camel - ftp for ftp / file and not camel - ftp
rename ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
( ) should be ( ( ) )
added a check to return early if the items list is empty to improve performance by avoiding unnecessary processing when no items are available
added a conditional bean definition for REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration to ensure that REPORTER _ BEAN
log4j2 - 1343 xmllayout. setproperties ( ) now use stringbuilder instead of stringbuffer
added a new constant ` OMIT _ HEADER ` and implemented a ` remove ` method in multiple writer classes to manage the " responseHeader "
updated property retrieval method from ` _ id ` to ` getPropertyNumber ( ) ` in ` EscherProperty ` class and added unit tests
updated return statement to use Description. getBuildRuleType for better clarity to improve code readability and maintainability by using a more descriptive method
refactor scene removal in SootClass. java to improve clarity and maintainability of the scene management code
add null check to prevent npe
added a method ` getObjectHash ( ) ` to ` AbstractNamedObject ` and modified ` TableRetriever ` and ` TableRetriever `
wallet : set default wallet confidence type to not _ seed _ in _ chain.
add support for @ body and http @ header annotation ( # 7451 )
added condition to skip json file that start with ` ` _''
hbase - 25836 region. open ( ) should print a warning if the region can not be open
refactor credential validation to use local variables for null checks to improve code readability and maintainability
[ java ] don't need to check if the subscription have an image before check if it have an image.
[ hotfix ] [ test ] use waitforcibly instead of reflection
added support for MariaDB in TestDefaults. java to ensure compatibility with both MySQL and Oracle databases
camel - mail - fix the connection issue of mail consumer
added token handling and error checking in the parser to ensure that there are more tokens in the query that have not been consumed
camel - aws2 - translate : list all the available language in the enum - start with ` ` g''
added a method to retrieve the data file in the Model class and modified Voice model initialization logic to enhance the model's functionality and improve
added emailDomain property and associated getter and setter methods in LdapIdentityProviderDefinition and IdentityProviderDefinition to enhance email handling capabilities for the identity provider
added new configuration constants for request read and connection timeouts in Configuration. java and updated ViewRegistry. java to use these constants to improve configur
( chore ) camel - aws2 - terminology : check if there be no concept link to save later
added RedisCategory imports and categorized RedisServiceRegistryTests to improve test organization and categorize Redis service tests
updated ` FindDeprecatedMethodsTest ` and ` FindDeprecatedUses ` to use ` @ NullAndEmptySource ` and ` @ ValueSource
updated the paintComponent method in OverlayPanel and WaterfallPanel to ensure proper rendering of the image dimensions
removed unused imports from multiple configuration classes to clean up the codebase and improve maintainability
updated event signature and event name handling in ContractEventTriggerCapsule. java and LogEventWrapper. java to improve clarity and functionality of event
updated filter condition to check if the file name ends with " _ " to ensure that the file path ends with an underscore to improve filtering accuracy
added color setting for the graphics object in MapView. java to enhance visual feedback by using the background color
no effective change - code cleanup - no functional change
updated print statements across multiple Java files to improve readability and maintainability of the code
added a check for NaN score in TestFieldCacheSort. java to ensure accurate document assertions when score is NaN
updated oldKeys assignment to use Set. copyOf instead of direct reference to it to ensure immutability of oldKeys
added a new ` zeroTime ` method in ` ColumnSnapshotGenerator ` and corresponding tests in ` MySQLIntegrationTest ` to
renamed ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` to ` offererBtcPubKey ` and
changed the type of ` vsContext ` and ` vsContext ` from ` Map ` to ` Map <?,? > ` across multiple
[ jbrules - 3392 ] add test case for multiple session model with clock option
updated HiveMetaStoreClient instantiation to use the instance context to ensure proper initialization of HiveMetaStoreClient based on the provided configuration
added a condition to return early if modalness equals the modalness to improve performance by avoiding unnecessary processing when modalness is the same
added unit test for codec capabilities in ShadowMediaCodecListTest. java and implemented native global settings in ShadowMediaCodecList. java to ensure
added request focus to confirmButton in EditOfferView. java to address issue # 5460 regarding focus handling in the confirmation button
added validation for width and height in SunVolatileImage. java and introduced a new class XRMBlitLoops. java with error
updated the thousands separator from a period to a non - breaking space to ensure consistent formatting across different locales
updated AsyncStressTest and StressTest to use AtomicInteger arrays instead of an array to improve thread safety and performance in concurrent scenarios
added UI components for beta favorites and improved visibility handling in the AchievementsFragment and LeaderboardFragment to enhance user experience by
added access, name, and desc fields to Search. java and SearchMethodVisitor. java to ensure proper initialization of context attributes in the visitor
added sleep statements and updated exception handling in IoTDBInsertWithoutTimeIT. java to improve test reliability and handle potential interruptions
reformatted code for better readability to enhance maintainability and clarity of the code
camel - core - model - stream - resequencer : use name attribute instead of name attribute
refactor transaction acquisition and release logic in TableReader. java to improve clarity and maintainability of transaction handling code
updated key manager and trust manager handling in ThriftSource and ThriftRpcClient to improve code clarity and maintainability by centralizing algorithm retrieval logic
refactor ` getSingleSourceTest ` method to return ` Applicability. or ` instead of ` JavaIsoVisitor ` to improve code organization
added exit ( ) method and a check for tab key events in Blockmania. java to ensure proper handling of tab key events in the
changed access specifier from PACKAGE _ PRIVATE to NONE across multiple files to align access specifications with updated specifications
renamed the method ` unHandled ` to ` unhandled ` and introduced a new class ` T9961153 ` to improve method naming
updated stripe statistics retrieval logic in OrcInputFormat. java to ensure accurate retrieval of stripe statistics when orcReader is read
added a null check for the ex object in JCache. java to prevent potential NullPointerExceptions during execution
update myhentaicomics ripper to use https instead of http
added a version option to the CommandLine in App. java to provide users with the current version of the application
use splittokens instead of split, a suggest by valerybokov
added support for customizable rotation settings in ConsoleActivity and improved input connection handling in TerminalView to enhance user experience by allowing customizable rotation options
updated the type of ` hq ` from ` PriorityQueue <? > ` to ` PriorityQueue <? extends ScoreDoc > ` to improve type
added null check for ownerConnectionAddress in ClientSmartListenerService. java to prevent potential NullPointerExceptions when ownerConnectionAddress is null
camel - jbang - add option to configure the name of headermapfactory
updated JavaCompiler and Diagnostic classes to include a single quote character to improve code readability and maintainability
int - 1373 : add namespace support for jms - outbound - gateway
updated the index variable in ArrayFunctions. java from ` i + 1 ` to ` i + 2 ` to correct the logic to reflect the
polish ` ` don't need to create a new urlclassloader''
added support for PGStatement in the PooledConnection implementation to enhance compatibility with PostgreSQL connections
[ iotdb - 6482 ] fix test that don't work on window
from error to warn
add test for aggressive fully expire sstablelExpiry
fixed - rblockingdeque, rblockingdeque, rblockingdeque, rblockingdeque and rblockingdeque should be
[ hotfix ] fix typo in jobinspectcommand
refactor Engine class to improve code structure to enhance maintainability and readability of the codebase
refactor child holder to use entrySet for stream processing to improve readability and maintainability of the code
[ issue # 6173 ] remove unused class in acl client ( # 6173 )
corrected a typo in the conditional statement from " numIndexDims = = 1 " to " numDataDims = 1 " to ensure
[ hotfix ] [ python ] fix npe in notebookserver
updated the list element in ExpressionNodeEvaluator to use'lt'instead of'funN'to improve clarity and functionality of the list element
changed access modifiers from public to package - private for several methods in NodeIdAccessor. java to restrict access to these methods for better encapsulation
to a vm and attach a volume to a vm before create snapshot
removed public access modifier from several methods in ItemWriter. java to improve encapsulation and adhere to best practices
updated the test to set the thing to " test " instead of " to improve test reliability by ensuring the correct thing is tested
added a ` toString ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest ` to enhance the ` Image
replaced FSDirectory with RAMDirectory in TestNorms. java to improve performance by using RAMDirectory instead of FSDirectory
added a check for the height of mDrawTextRectBuffer before calculating the line height to ensure that the line height does not exceed the defined
updated WalletAppKit. java file to improve wallet handling functionality
remove hat. js and nashorn. js from oqlengineimpl
fix a problem with the button group in the chattransport selector box.
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest `, ` Context `, and ` ContextImpl `
refactor bsqblockchain explorer handling to use Optional for better null safety to improve code robustness and prevent potential NullPointerExceptions
added attribute management methods in StandardSession and Session classes to enhance session handling and improve attribute management
added assertions to verify the presence of the plain bean name and along in TestDbJson _ List. java to ensure correct handling of plain
update averages array initialization to use initialPageCount instead of pageSize to ensure averages are initialized with the correct initial page count
updated BatchCommandLineLauncher. java file to improve command line execution handling
added DataSource and JdbcTransactionManager beans to BatchMetricsApplication to enable database management and transaction management in the application
update glowrootloghttpservice to implement httpservice instead of unauthenticatedhttpservice
pdfbox - 4892 : fix typo, a suggest by valerybokov
removed synchronization from the close ( ) method in DocumentsWriter. java and adjusted synchronization in DocumentsWriterPerThread. java to improve thread safety and
added methods to retrieve and set multiple choice options and validation constraints in UiBinding to enhance the UI component with validation capabilities
updated method calls to use ` setReflectively ` instead of ` setReflectively ` across multiple classes to simplify method calls and improve
bugfix : only update the tree for a full save
updated the ` condition ` and ` pattern ` methods in ` Affix `, ` Dictionary `, and ` TestAllDictionaries ` classes to
updated the instantiation of KrakenMakerFees and KrakenTakerFees in KrakenAdaptersTest. java to
removed CharTermAttribute import and its associated code from DefaultIndexingChain. java to streamline code by eliminating unused imports
updated NBJavacTrees. java file to improve code readability and maintainability
removed unsupported encoding check from VectorizedPrimitiveColumnReader to streamline code by eliminating unsupported operations
added MarkerFactory import and modified logging behavior in HttpSolrCall. java to enhance logging capabilities and improve performance during static admin UI file retrieval
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener. java to ensure proper cleanup of metadata service proxy instances
fix infinite recursion for defaultentityqueryrepository. getlvlfilter ( )
updated error message formatting in HubChangeExecListener. java to enhance clarity and maintainability of the code
added a TRY _ HARDER _ HINT hashing mechanism and updated the text comparison logic in AbstractBlackBoxTestCase. java to improve
changed the return type of ` executeCompilation ` from ` int ` to ` ProcessExecutor. Result ` and added a new test for compiler errors
refactor event handling logic in ObjectStore. java to simplify code and improve readability by removing unnecessary variable declarations
removed unnecessary logging statements in ValidatedLocalValidatorFactoryBean. java to streamline code for better readability and maintainability
fix potential npe in entityawareworldprovider. clearblock ( )
[ intrinsification ] remove dead code in intrinsifyarraycopyphase.
don't need to set the log level to all
replaced ` WantedAnywhereAfterFollowingInteraction ` class with ` Location ` and removed ` HasStackTrace ` class to simplify exception handling and
added validation checks for account and key addresses in AccountPermissionUpdateActuator and PermissionAddKeyActuator classes to ensure that account and key addresses
make scriptlauncher use treemap instead of comparator
chore : migrate workflows to v2beta1 ( # 2383 )
updated method calls from ` addProperty ` to ` setProperty ` in ` BaseSingleTreeBuilder. java ` to improve code readability and maintain consistency in
updated AsmLoader instantiation to use interfaceClass. getClassLoader ( ) instead of Class. defineClass ( ) to ensure compatibility with different class loader
pdfbox - 2576 : improve error message if rline ( ) be call without an initial point
updated the output formatting in Java2TypeScriptTranslator to include both declare and declare scope to enhance clarity in the output formatting for better readability
updated the handler to use an AbstractHandler instead of a EmptyServerHandler to improve the handling of HTTP requests and ensure proper output stream management
removed the new String array wrapper for event listeners in HelloInput. java to simplify the listener management and improve code readability
fix an npe in abstractqmpath. getlhs ( )
updated package structure for ReadFolderTest, DeleteFileTest, and RenameFileTest files to improve organization and clarity of test files
refactor BufferedImage creation to handle BYTE _ INDEXED and GRAY _ INVERT cases to improve robustness by ensuring correct graphics context is
make native _ image _ location configurable and use it in graal module.
[ beam - 8470 ] remove dataflowportabilityapiunsupported and dataflowportabilityapiunsupported from test
chore : update sample code to use poll instead of remove ( )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility during serialization
refactor CallStack class to improve code readability to enhance maintainability and facilitate future updates
added logging for misconfigured per - node maximum size in EvictionChecker. java to inform users that the max size configuration does not allow any
( ) ) should not be ( ( )
updated the calculation of ` scoreablesPerThread ` and ` scoreablesPerThread ` in ` ThreadedAcousticScorer.
replace AssertionError with returning null in NetHooks. java to improve error handling by returning null instead of throwing an AssertionError
updated method calls in ApplicationControllerFluentLeniumTest. java to use window ( ). title ( ) instead of getServerAddress ( )
added makeString methods in ParallelIterable, RichIterable, AbstractSynchronizedRichIterable, AbstractMultiReaderMutableCollection, and AbstractMultiReader
replaced the use of ` Ordered. HIGHEST _ PRECEDENCE ` with a constant ` DEFAULT _ ORDER ` to improve code readability and
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer constructor and updated the logic accordingly to enhance weak association validation based on a defined rule
modified the Deflater class implementation to enhance compression efficiency and improve performance
added exception handling for IOException in Font. java to ensure proper resource management and avoid potential memory leaks
camel - jbang - fix npe in versiontypebinding when content be empty
removed the'places'variable and updated the onPostExecute method to directly return the'places'list to simplify the code and improve readability by elim
camel - test - infra - http : / / issues. apache. org / jira / browse / amq - 3496 -
set key format to ` ` openssh'' by default
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter and adjusted its implementation accordingly to enhance folder management functionality by allowing
updated Hibernate annotations and entity management in InheritanceCacheTest. java to improve code clarity and ensure proper caching behavior
updated import statements in ConnectOAuth2RequestFactory. java and added getUserApprovalRequest method in TofuUserApprovalHandler. java to ensure
fix name convention not apply to tag value ( # 645 )
bugfix : don't use system. out in test
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection. java to ensure compatibility with the new cookie format
added a static method ` classMetadataUnsupported ` and updated references in ` Platform ` and ` Subject ` classes to use the ` Platform ` class
added a clear all button and its click listener in OverviewActionsView. java and integrated it into RecentsView. java to enhance user
updated the handling of the ` desiredRepoVersion ` and ` desiredRepositoryVersion ` in ` ClusterStackVersionResourceProvider ` and ` HostStack
remove memoryleaktest for now
updated the return statement in ServletTester. java to include the server's local host and port dynamically to improve the accuracy of the server '
( ) ) should be enable ( )
add assertclustersizeeventually ( collection < hazelcastinstance >, collection < hazelcastinstance > ) method to improve test reliability
added functionality to instantiate a FFI provider using JNA if available to enhance compatibility with JNA by allowing dynamic loading of the FFI provider
added unit test for hierarchical file list in batchprocess
added null checks and improved null handling in MongoTemplate to enhance robustness and prevent NullPointerExceptions during object saving
updated position calculations in NodeClass. java to use NODE _ LIST instead of 0 to improve clarity and maintainability of the code
added a new private field ` accTradeValue ` in ` BithumbTicker ` and updated corresponding test cases to enhance the ticker's
updated logging statements in RealtimeSegmentDataManager and AvroUtils to use parameterized messages to improve readability and maintainability of log messages
replaced maxParallelThreads with MAX _ PARALLEL _ TASKS in OverseerTaskProcessor. java to improve thread management by using
replace ArrayList with CopyOnWriteArrayList for headerReaders, dataReaders, and readers in FixedByteVMutableForwardIndex. java to improve
updated multiple dictionary - related classes to improve code structure and organization to enhance maintainability and readability of the codebase
added a null check for the destination buffer in FlipTransition. java to avoid potential NullPointerExceptions during execution
( chore ) camel - msv : add a sleep to make test more reliable
updated the condition from ` beginCycle = = or ` beginCycle > currentCycle ` to ` beginCycle > currentCycle ` to ensure correct
updated random value string generator from 6 to 10 in JdbcExpiringCodeStore. java and CodeStoreEndpointsTests. java to improve randomness
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure correct table matching for unique constraints
refactor description handling in MediaDetailFragment. java to improve readability and maintainability of the code
handle arrayindexoutofboundsexception and classcastexception in findbugs2
add withreferencefilter ( string ) and withfilter ( string, collection < string > value ) to listImagescmd
camel - jms should use source code generate configurer to avoid reflection
added checks for " # ifndef " or " # endif " in OpExclusionUtils. java to ensure proper handling of cases where
added two return statements in DatabaseCommand. java to ensure that the return value of the method is always false
updated Politician instances in HonestPoliticianExample. java to improve clarity and accuracy of the Politician
fix npe in beanshellinterpreter when there be no init file
camel - jbang - fix restlet component to always use port = 0
chore ( schematic ) : remove unused case. wALL _ sign
added a system property for maximum query length in QTestUtil. java and removed it from SessionState. java to improve query performance by limiting the
updated visibility modifiers , refined HTTP configuration handling , and improved error logging in WebServer . java to enhance code clarity , maintain encapsulation , and provide more informative logging for debugging purposes
updated references from " writeHadoop " and " writeKafka " to " hdfsSink ", " kafkaSource ", and " kafkaSink
updated Spark configuration to check for the presence of " spark. app. name " to ensure correct application name is used for Spark connections
rename variable ` whiteName ` to ` includedName ` for consistency to improve code readability and maintainability
simonstewart : implement maximisewindow. maximisewindow ( ).
refactor methods in ` AbstractEmbeddedCellBuckOutInfo ` and ` DefaultProjectFilesystemFactory ` to improve clarity and maintainability of the code by
added an assertion to check for the " entity expansions " message in TestXMLEntityExpansion. java to ensure that the error message
updated table offset and length calculations to use bitwise AND with 0x7FFFFFFF to ensure proper handling of special characters in the table
removed unused customize method from DirectMethodHandle to streamline code by eliminating unnecessary customization logic
refactor line buffer initialization and coordinate checks in LineChartRenderer. java to improve readability and maintainability of the code
refactor the handling of flavor and compression modes in AndroidBinaryDescription. java to improve code clarity and maintainability by consolidating flavor checks
updated buffer assignment from ` glGenBuffers ( ) ` to ` glGenBuffers ( ) ` to correct the buffer assignment to use the correct
added two new Java files, PropertySuper. java and TestClassResolutionFail. java, and added a test class for property handling to facil
remove shutdown hook only when shutdown hook be enable
updated the FilterChainProxy class to use FilterChjainProxy instead of FilterChainProxy to improve code clarity and maintainability by standardizing
replaced ` Collections. sort ( intermediateResult ) ` with ` Arrays. sort ( values [ 0, size ] ) ` and updated return statements
added checks to load tables in MetaDataBasedSQLCompletionProvider and updated MDTable retrieval logic in QueryTypeAnalyser to improve handling of schema loading
initialized ` baseType ` to ` null ` and set ` literalPrefix ` and ` localizedTypeName ` to ` null ` in ` DatabaseInfoRetri
updated references from " # link " to " @ link " in multiple Java files to improve code readability and maintainability by using concise syntax
refactor evaluatorfactory to use objectequalevaluator. getinstance ( ) instead of instance ( )
update path from " / / osx _ x86 - 64 " to " / / osx _ x86 _ 64 " across multiple
added sound effect functionality in AllAppsView. java to enhance user experience by enabling sound effects
changed the exception type from Exception to IOException in the main method of RemoveFirstPage. java to improve error handling by catching IOException instead of Exception
enable granularity for the left axis in BarChartActivitySinus to enhance the visual representation of the chart
refactor version comparison logic into a separate method to improve code readability and maintainability
updated file handling in ContextHandlerGetResourceTest to use MavenTestingUtils for path validation to improve test reliability and maintainability by using Maven
added close ( ) method to Connection, JsonAsyncHttpPinotClientTransport, and PinotClientTransport classes to ensure proper resource management and
rework mockappender. awaitappend ( ) to use a blocking queue
[ beam - 4142 ] check if hadoop resource be a directory ( # 4481 )
removed redundant static imports from IsometricStaggeredTiledMapRenderer. java to streamline import statements and improve code clarity
removed duplicate call to unbindHandle in ItemServiceImpl. java to streamline the code by eliminating redundancy
refactor Config and Attribute classes to improve code readability and maintainability
simplified touch event handling in OtherActivityTouchConsumer. java to improve code readability and maintainability
removed the check for three - button navigation and refactored the logic for setting taskbar visibility to streamline navigation button visibility based on the
replaced abort with throw in the PolyBenchLauncher. java file to improve error handling by explicitly throwing the abort message
replace bootstrapMethodIndex and nameAndTypeIndex with memberIndex and adjust debug message to include MH kind to enhance debugging information for better traceability
added support for BlockFormattingContext in findBox methods to enhance text rendering capabilities in the application
added a method to retrieve standard error output and refactored process execution logic to improve error handling and streamline process execution
added null check and handling for UnaryOperator in CheckedListReplaceAll. java to ensure proper handling of null values and improve error reporting
added a new volatile boolean variable ` _ testFill ` and modified the ` fillInterested ` method logic in ` SslConnectionTest. java
updated DeviceFlag and FeatureFlags classes to manage listener registration and property change listeners more effectively to improve the handling of device configuration changes and enhance the
added JUnit Ignore annotation to GatewayRSocketIntegrationTests. java to temporarily disable tests due to known issues
removed unused import of MalformedURIException to clean up the code and improve maintainability
added javascript script to focus the endDate box in the InstructorFeedbackEditPage to enhance user experience by allowing direct access to the endDate box
refactor synchronization block in KrakenStreamingTradeService. java to improve readability and maintainability of the code
changed system. err to system. out in ChangeableUrls. java to reduce log verbosity for better debugging
make sparserowmatrix constructor configurable
bug cs - 15460 : fix npe in delete volume usage event
refactor file input stream handling in Utilities. java to improve clarity and maintainability of file handling logic
[ beam - 10471 ] fix checkstyle violation in udftestprovider
added resetInternalState ( ) method to reset internal state and register it in profilerClient to ensure internal state is properly reset before use
don't try to send multichat operation set if it's null
added file existence check and validation in Save. java to ensure file can be written before proceeding with the update process
added a new FolderSyncActivity to handle folder synchronization in the DrawerActivity to enhance user experience by providing an easy way to sync folder content
[ hotfix ] [ test ] use reser to close network buffer pool in SequentialChannelStateReaderImplTest
update spanish tree normalizer to handle non - numeric word
updated the way offline point values are appended in SimpleTextBKDWriter. java to improve data handling by using getPackedValueSlice ( i
added LocaleRandomizer and its corresponding test class to enhance randomization functionality for locale management
tika - 4891 : add unit test for tika - font - printer - metric
update version number from " 8.2 " to " 9.4. 0 " in Installer and AutoUpgrade classes to reflect the new release version
removed the ` AccessController. doPrivileged ` call from the ` run0 ( ) ` method call to enhance security by enforcing privileged actions
changed the default value of the ` state ` variable from ` 0 ` to ` 0 ` in ` Http2AsyncParser. java ` to
updated the default delay from 120 to 600 milliseconds to improve responsiveness and performance in the application
updated error message format in SelectStatement. java to improve clarity and consistency in error messages
added date parsing functionality to the ThirdEyeJiraClient to enhance date handling capabilities in the application
refactor priority generation methods to streamline priority generation to improve code clarity and maintainability by consolidating priority generation logic
added a constant for maximum SCALAR _ REPLACE _ CODE _ SIZE and modified the condition for scalarReplacementOption to ensure it does not exceed
added DATE _ TAKEN to the projectionTest array and updated fileSortOrder to include DATE _ TAKEN to ensure proper sorting of media data
modified image drawing calculations in TexturePacker2. java to correct rendering by adjusting rectangle dimensions and image dimensions
added a ServletContextHandler to the Jetty WebSocket server container and refactored related code to improve servlet context handling and enhance test coverage for WebSocket configuration
added shutdown calls for validationSignService and trxHandlePool, and initialized nodePersistTaskTimer in NodePersistService to ensure proper resource management
added RawJsonRequestBodyAnnotationProcessor class and integrated it into JaxrsSwaggerGeneratorContext to enable handling of raw JSON requests in the Swagger
added a new method ` newTarget ` to ` LoggerUtils ` that creates a ` Target ` with an extension to facilitate the creation
updated ListBeanContainer constructor to accept an ArrayList instead of a List to ensure proper handling of entries and improve test coverage for BeanContainer functionality
hbase - 25836 fix typo in testmetricsregionserver. testblockcounthitpercent and testmetricsregionserver. testblockcachecount
camel - core - optimize cache to reduce object allocation
added device ID to the TeltonikaProtocolDecoder to ensure proper handling of device IDs in the decoding process
changed the method of reading the first line from ` Files. readFirstLine ` to ` Files. asCharSource ` to ensure that the
added a check for null operator in JCAssignOp and created a new Test class with a null value to ensure proper assignment behavior and provide a
added a conditional check for account handling before initializing the mixin registry in FirstRunActivity and BaseActivity to ensure proper initialization of mixinRegistry based on
refactor polygon retrieval logic to use a dedicated method for better readability and maintainability to improve code clarity and reduce redundancy in polygon retrieval
updated DrillViewTable to accept a list of paths instead of a single view to enhance flexibility in handling schema references in the DrillViewTable
add system property io. netty. allocator. usecachefactory. usecachefactorymaxorder and io. netty. allocator
updated the array type check from double [ ] to short [ ] in ObjectInputStream. java and added a new class CloneArray. java with
hive. llap. io. threadpool. size should be configurable ( sergey shelukhin, review by ash
[ ci ] update securityservicesfeature to run on java 11
updated boundary checks in LatLonGrid. java and added new test methods in TestLatLonGrid. java to improve polygon growth logic and
danielwagnerhall : implement ` expectedconditions. isinvisibilityofelementwithtext ` and ` expectedconditions.
added a new parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and modified its implementation to enhance file replacement functionality by allowing
added a test for the ` SomeInnerClass ` reflector in ` ReflectorTest. java ` to verify the behavior of the ` getOut
updated configuration key from " disable _ r _ java _ idea _ generator " to " auto _ generate _ android _ facet _ sources " to
updated logging messages in HubChangeExecListener. java to include the current scope to improve clarity of log output for better debugging
added properties field with getter and setter methods to Link class to allow configuration of property properties for improved link handling
removed @ EqualsAndHashCode annotations from InitialConfig and YamlConfigFileDTO, and added a toString method in YamlConfigFileDTO to improve code clarity and
updated method signatures in AwaitableServerClientCallConfiguration to specify generic types for ReqT and RespT to improve type safety and
added CallerSensitiveAdapter and modified forName methods in Class. java to enhance class loading functionality and improve caller class handling
updated assertions in RequestItemRepositoryIT. java to use is ( isEmptyOrNullString ( ) ) instead of isEmptyOrNullString ( ) to improve
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor. java ` to improve thread management by using ` ThreadPoolExecutorEx
changed the access modifier of the setSecurityContextAccessor method from package - private to public to allow external access to the setSecurityContextAccessor method
updated imports and refactored the ` HumanTime ` class to use ` Calendar ` instead of ` HumanTime ` to improve code clarity and
change spark _ isolated to spark _ isolated ( # 3453 )
updated the ` Bitstamp ` and ` BitstampPolling ` proxy creation to use ` exchangeSpecification. getUri ( ) ` instead of ` exchange
removed redundant print statements in RecordGenerator. java to streamline output for better readability and performance
camel - kafka fixed the auto commit issue of camel - kafka
removed the finally block in Liquibase and added output statement in LoggingExecutor, and initialized the database change log lock table in StandardLockService
updated ` @ SuppressWarnings ` annotations in ` AbstractAuthorizeTag ` and ` AuthorizeTagCustomGrantedAuthorityTests ` to improve code clarity
pdfbox - 4892 : remove sync block, a suggest by valerybokov
( chore ) camel - spring - boot - auto - config : use propertysource. getproperties ( ) instead of project. getproperties
updated the currency pair used in the VirtExMarketDataService from baseSymbol to counterSymbol to ensure accurate retrieval of the current currency pair
camel - core - fix checkstyle violation in camel - core
replaced UUID. randomUUID ( ). toString ( ) with System. getProperty ( " testId " ) in HoneycombJdbcInterceptor. java
added synchronization to date and number format parsing in DefaultJobParametersConverter to ensure thread safety during date and number formatting operations
updated package - info. java files for mmm and ppp to improve documentation clarity and maintainability
updated heightScale setting from 256 to heightScale to ensure consistent height scaling for the map
removed unnecessary type check for String in SecurityConfig. java and updated assertion in SecurityConfigTests. java to improve code clarity and eliminate unnecessary type
don't set dump - partition - id to false by default
added unit tests for TronTXOutput and TronTXOutputs in UTXOSetTest. java to enhance testing coverage for Tron
[ java ] add java rule utility to detect unused var name.
pdfbox - 2576 : avoid npe, a suggest by valerybokov
added a new test for setting job restart parameters in JsrJobOperator to ensure correct handling of job restart parameters during job execution
added a boolean field ` disallowBatchOnCascade ` with a getter method in ` DatabasePlatform. java ` to provide a way to control
refactor principal assignment logic in JaasAuthenticationHandler. java to improve clarity and maintainability of the code
replaced MDCLoggingContext. close ( ) with ExecutorUtil. shutdownAndAwaitTermination ( ) for core closure to improve resource management by
added null check for mActionsView before setting its visibility to ensure mActionsView is only visible when it is not null
refactor JobParameters initialization to handle null parameters more gracefully to improve robustness and prevent potential NullPointerExceptions when parameters are null
refactor BasicEntity and TestUtil classes to improve code organization and maintainability
added unit tests for getMatchedDevices method in SchemaRegionBasicTest to ensure correct functionality of device retrieval in the schema
added logging functionality to MetricsEventBus to improve error handling and debugging during event processing
added EigenvectorCentralityBuilder class and integrated it into EigenvectorCentrality to enhance statistics tracking and improve code
refactored the LookupIPv6 class to use a dynamic port instead of a hardcoded port number to improve flexibility and maintainability of the registry
updated geometry data creation to include the ifc product ID and modified vertex color and normals to improve data handling and ensure correct representation of geometry
changed theAmplifier setting from 2 to 0 in the BlockEntityBeacon class to ensure the beacon is set to a non -
updated TubeCalc. java with new implementation details to enhance performance and maintainability of the code
disable connection pool by default
updated the type of DEFAULT _ GROUPS and groups from List < Class <? > > to List < Class <? > > and added
updated bug annotations and added a timeout for the main method in the JList selection to address a timeout issue related to the bug 8057791
updated the thread pool for the infoComponent in StatisticsReporterComponentImpl. java to ensure the thread is daemon and prevent potential memory leaks
fix a problem with the lexica botania.
added ReflectionCheckLinker. checkReflectionAccess method call to enhance reflection access checks in JavaAdapterFactory
http : / / issues. apache. org / jira / browse / amq - 4237 - fix unit test
updated initIOContext method to include RecordReader parameter and modified related classes to enhance the initialization process and improve code clarity
removed ClassLoaderHolder and LoaderManager classes to streamline codebase by eliminating unused or redundant classes
added a new method ` configurationChanged ` to ` FileStore ` and modified existing checks in ` ScanClassPath ` to improve file handling and ensure
added try - catch blocks around the registerSessionCallback and unregisterSessionCallback methods to handle potential exceptions during session callback registration and unregistration
updated index creation parameters in TestBackwardsCompatibility. java to ensure compatibility with the latest index structure
[ hotfix ] [ runtime ] add a factory method to akkarpcservicutils. createandstart ( )
hbase - 25827 addendum set mapreduce. map. maxattempts to 3 to avoid spurious failure
pdfbox - 4071 : remove unneeded nullcheck, a suggest by valerybokov
added a new file SslConnectionTest. java to implement SSL connection testing to ensure proper handling of SSL connections in the Jetty server
added validation for IPv4 and IPv6 address types in InetAddress and NetworkInterface classes to ensure proper handling of IPv6 addresses and improve error reporting
added a test for date serialization in collection using Gson to ensure correct handling of date formats in JSON serialization
updated message handling logic to improve performance and reliability of message processing
added debug logging for SQL generation and modified conditional logic for handling updates in PutDatabaseRecord. java to improve debugging capabilities and ensure correct handling of
updated loop condition in TableOutput. java to correctly iterate over the maximum width to ensure the loop does not exceed the maximum width and improve performance
pdfbox - 2576, pdfbox - 2576, pdfbox - 2576, pdfbox - 2576, pdfbox - 25
fix formatstring checker to respect the priority of the format string.
add a property to ignore local variable declaration in a for - each statement.
added PDF version and full compression settings in PDFExporter. java, and updated test configurations in PDFExporterTest. java to enhance PDF export capabilities
added unit tests for LdapUserDetailsMapper to ensure proper mapping and mapping of role attributes to user roles
cloudstack - 7143 : add ldap. read. timeout config property to allow for configuration of ldap connection timeout
refactor TestDescription, TestDescription, and TestDescription classes to improve code organization and maintainability
refactor Pixmap, ManifoldPoint, and TextureRegion classes to improve code readability and maintainability
rename ` ` shouldCacheIterator'' to ` ` shouldAvoidAllocation'across multiple classes to clarify the purpose of the variable related to
added an additional condition to check if the handler is invalidated during gesture handling to ensure that the gesture handler only proceeds when an invalidated
updated folder creation threshold from 0.6 f to 0.5 f in Workspace. java to improve the responsiveness of the workspace layout by adjusting the folder
updated OciConfigSource to use ConfigProviderResolver and modified property checks to enhance configuration handling and improve code clarity
refactor Testjsig class for improved readability to enhance maintainability and facilitate future updates
fix mana item not respect max mana
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
removed the serialVersionUID field and added a suppression warning in P11TlsPrfGenerator. java to clean up the code and eliminate
refactor validation logic in DataRegion. java to improve clarity and structure to enhance code readability and maintainability while ensuring proper file handling
added new classes ` Switch21 ` and ` Switch19 ` with various pattern matching methods to enhance flexibility in string formatting for different input types
updated error messages in ComparableSubjectTest. java to improve clarity and consistency in error reporting
updated StreamHelper to use @ Internal instead of javax. xml. transform. Source and added a new test class TestStreamHelper to improve XML
updated the ` Int2ObjectCache ` class to limit the maximum array size and improved error messages for better clarity to enhance the robustness of
added tests for security filter chain ordering in WebSecurityConfigurationTests to ensure correct ordering of security filter chains based on bean definitions
updated parameters in BinanceTradeService. java to remove TimeInForce. GTC to streamline code by eliminating unnecessary parameters
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and update min and max values to improve randomness and ensure minimum and maximum values are
updated the KEY _ SEP character from'\ 0'to'\ t'in RocksDBBuildInfoStore. java to ensure
camel - 14263 : camel - jms should return a jms component option if it's a jms component
added a new test class ` TestGetBound ` and modified ` SourceUtils ` to handle ` NoSuchFieldError ` to improve error handling and
refactor the filtering logic in LeafFilterFactory to use a helper method for creating leaf filters based on parquet types to improve code readability and maintainability by
refactor artifact name handling and resource management in BatchPropertyBeanPostProcessor, JobContextFactoryBeanTests, and StepSynchronizationManager to improve code clarity and ensure
added a loop to read and log the certificate serial number in HttpsSegmentFetcher. java to enhance certificate processing reliability by checking available certificates before
refactor ` getDefaultBooleanValue ` method to improve handling of null values and add a new ` DnsFallback ` class for testing to enhance robustness
ww - 4443 add exception when write a tag to a theme
changed the data type of the ` success ` field from ` success ` to ` url ` in the ` DepositAddress ` class to improve
refactor the return statement in WindowsSecurity. java to use a lambda expression instead of an anonymous class to improve readability and maintainability of the code
removed " address " and " phone " scopes from the OAuth2 provider to simplify scope configuration for better usability
refactor the submit method in ManagedSelector to use a CountDownLatch for asynchronous execution to improve responsiveness and control over the asynchronous execution of the selector
added saturation and saturation255 constants to WLedBindingConstants and updated WLedHandler to use these constants to enhance color handling
replaced the method ` isValidCaller ` with a Set < String > VALID _ CALLERS to improve clarity and maintainability of the validation logic
added a method ` caseJSRInst ` to the ` InstSwitch ` class to provide functionality for handling JavaScript insts
added transaction management to the SubscriptionActivatingSubscriber constructor to enhance transaction handling during subscription activation
refactor DBMSProcessor to use a StringBuilder for updating data to improve code readability and maintainability by encapsulating the database update logic
updated elevation handling in ContactItemInflater to ensure compatibility with newer Android versions
refactor variable name from ` typeInformation ` to ` identifier ` to improve clarity and consistency in naming conventions
replaced direct access to ` Files. readAllBytes ` and ` Files. write ` with a privileged action to enhance security by ensuring all
added support for'['and']'binary operator in Groovy parser and printer to enhance the parser's capability to handle binary access
updated warning message format in MetaDataFetcher. java to include class name in log messages to improve clarity of warning messages for better debugging
updated character reading logic in RecordInputStream and UnicodeString classes and added a new test for reading Unicode strings to improve code clarity and ensure correct handling
added a test for downloading files with Unicode characters in the file name to ensure correct handling of non - ascii characters in file names
replaced RuntimeException with CancellationException and added cancellation checks in AsyncResource. java and FingerprintScannerSample. java to improve error handling
[ hotfix ] fix potential npe in timedmemberstatefactory. count ( )
refactor MongoTemplateTests to improve code structure and add a new test for removing an object from an explicit collection to enhance code readability and ensure correct
updated copyright year from 2015 to 2022 in multiple Java files to ensure compliance with updated copyright year
updated string formatting in Coder. java to remove unnecessary newline characters to improve readability and maintain consistency in output formatting
added a new flag ` mIsClearAllButtonFullyRevealed ` and refactored scroll restoration logic in ` RecentsView `
refactor HiveIcebergMetaHook to use a static map of COMMON _ HMS _ PROPERTIES to improve code readability and maintainability
refactor code to use a dedicated method for checking if a message is already in use to improve code readability and maintainability by centralizing the address
added a JVM argument for the test class path in TestNestmateAttr. java to facilitate the execution of the test class
replaced the Logger instance with a direct reference to SchemaTextDetailType. verbose _ schema to simplify the code and improve clarity by using a more
fix checkstyle issue in util / catalina
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 433 - add
replaced integer fetchSize with ThreadLocal < Integer > fetchSize in QueryProcessExecutor. java to ensure thread - safe access to the fetchSize variable
[ java ] remove backoff and network idle strategy from embeddedpingpong.
refactor blocking client handling to use a new method for cleaner code to improve code readability and maintainability by reducing duplication
added HDP _ VERSION check and logging to SliderAppsViewControllerImpl. java to ensure that the system property HDP _ VERSION is correctly
added methods to reload and close ServiceLoader in JavacProcessingEnvironment. java to improve resource management and prevent potential memory leaks during reload operations
added DeepCloner class and modified ParameterizedRobolectricTestRunner and RobolectricTestRunner to utilize it for cloning objects to enhance the functionality
added bind for Boolean. class annotated with WebServer. JETTY _ SHOW _ STACKTRACE to ensure proper binding of Boolean values
added a check for JSType. OBJECT in NativeObject. java to ensure safe handling of object types in the code
refactor SystemDictionary to use static OopField instances instead of direct OopField references to improve code readability and maintainability by eliminating unnecessary
refactor ` JwkKeyListView ` to use ` PublicKey ` and ` ECPublicKey ` interfaces instead of ` RSAPublicKey ` and `
should not use spawnisolates
updated MBeanServerMXBeanUnsupportedTest. java to improve test coverage for MBeanServerMXBean functionality
removed unused import of OrderClassLoaders to streamline code by eliminating unnecessary dependencies
refactor Actuator and related classes to implement a new ` getOwnerAddress ` method and replace ` Validator ` with ` validator ` to enhance the functionality
added test case for http : / / issues. apache. org / jira / browse / amq - 4237
updated command sending logic to use byte arrays instead of toByteArray ( ) to improve handling of minimum and maximum values
fix a bug in the protobufannotationserializer when there be no empty edge.
[ java ] remove correlation id from asynccommandidset when asynccommandidset be remove.
added calls to saveConflict in FileDataStorageManager, FileDownloader, and FileUploader to ensure consistent handling of file conflicts across the application
updated ` ExecutionContext ` and related classes to use generics for better type safety to enhance type safety and eliminate unchecked casting warnings
replaced ` StrUtils. splitFileNames ( ) ` with ` splitFileNames ( ) ` across multiple filter and tokenizer factories to simplify file
added Oracle and MySQL driver properties in DatabaseFactory. java to enhance compatibility with Oracle and MySQL databases
updated the interceptor initialization in SignedSupportingClassProxyFactory and added a serialVersionUID in PartialMockingWithConstructorUsingEasyMockTest
updated time calculations in FileChangedExclusiveReadLockStrategy. java to use current time instead of a fixed value to improve clarity and accuracy of time
[ hotfix ] [ table - planner ] wrap context with wrapclassloader
added buffer change handling in TerminalView and TerminalTextViewOverlay classes to improve buffer management and ensure proper scrolling behavior
refactor the ` processConfigFile ` method to improve code readability and maintainability to enhance code clarity and ensure proper handling of file names
remove disablefreezev2 method and move it to operationregistry
added support for insecure trust store configuration in TlsConfig and TlsUtils to enhance security by allowing controlled access to insecure trust store settings
refactor code to simplify source and class path handling to improve code readability and maintainability
replaced nodeColumns with edgeColumns in ExporterGDF. java and added edgeIdColumn and edgeColumnsGDFs in ExporterG
added cascade option to the @ OneToOne annotation in DefaultUserInfo. java to improve data integrity by enforcing cascade nature
updated the equals method in Message. java to use Arrays. equals instead of getMessageId ( ). hashCode ( ) to improve object comparison and
updated response headers in AsyncProvidersBasicTest. java to replace "????????? " with " \ u017
[ hotfix ] remove unused field from rocksdbserializedcompositetest
added staticPermissionsField method to ProtectionDomain and updated subjectPd assignment logic in SubjectDomainCombiner and JavaSecurityProtectionDomainAccess to
added null check for recipe in RecipeHandlerBrewery and RecipeHandlerElvenTrade, and corrected formatting in CachedFloatingFlowerRecipe to
refactor parsing logic in Parser. java to improve readability and maintainability of the code
added a connection error popup dialog in UploadMediaDetailFragment and updated error handling in UploadMediaPresenter to improve user experience by providing a more inform
added a new file ` Issue596. java ` and modified ` Status. java ` and ` HttpHandlerImpl. java ` to improve
updated bitwise operation from ` & ` to ` &L ` in ` NodeBitMap. java ` to ensure correct handling of larger bit values
refactor ImportLayoutStyle class for improved readability to enhance maintainability and facilitate future updates
refactor ConsoleUIService to use a configurable TERM _ PROGRAM and MINTTY environment variable to improve code readability and maintainability by central
refactor ` ShadowAccountManagerTest ` to use ` TestAccountManagerCallback ` instead of ` Bundle < Bundle > ` to improve test readability and
replaced the use of a local variable ` enclosingType ` with a method call to ` wrapped. getEnclosingType ( ) ` to improve code
renamed several methods in Pairs and InPairsExpression classes for consistency to improve code readability and maintainability by using more descriptive names
removed timeout parameter from the set method in PutAllCallable to simplify the code by eliminating unnecessary timeout configuration
[ rocketmq ] fix npe in mqclientinstance # registerconsumer ( ) when consumer be empty or not
[ java ] don't generate source identity in the driver conductor.
added a new TopTabAction class to display a lalalalalalal tab in the desktop branding dialog
camel - jbang - fix dynamic router eip to work with camel - core.
updated unit test imports and annotations in AggregateItemReaderTests. java to improve test structure and align with JUnit conventions
updated generic in AbstractObjectValueTypeMap to improve type safety to enhance code clarity and maintainability by specifying the generic type
added functionality to display wikidata edits in the application to enhance user experience by providing access to the wikidata edits
added a validation check for the length parameter in OfflineSorter to ensure it does not exceed short. MAX _ VALUE to prevent runtime errors
don't report an absolute value bug if we can't find it
refactor dataset classes to improve code organization to enhance maintainability and readability of the codebase
updated InvalidTopologyTemplateException to include credential type and values to improve error reporting for invalid credential types
updated random value generation in TestVectorUtil. java to use a fixed value of 1 instead of a fixed value to improve randomness and prevent
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and simplified time comparison logic to improve performance and
added SSL handling in TestUtil. java and updated assertions in PGPropertyTest. java to improve SSL configuration management and ensure proper testing of SSL settings
added tests for downloading files due to " Download EXE file " and " DMG file " to ensure the download functionality works correctly for various
added null check for oldConfig before cloning it in BaseMotorMount. java and RecoveryDevice. java to ensure that oldConfig is not null
added a condition to check if the renderer is not disabled to ensure proper transcoding behavior during rendering
modified the handling of empty rows in ` DataTable ` and added a new test for diffing with empty lists in ` TableDiffer ` to
added a new constant ` CustomIgnoreTag ` to the ` RobustJavaMethodParser ` class to ensure that the ` CustomIgnoreTag `
camel - optimisticlocking - throw optimisticlockingexception instead of runtimeexception
fix classnotfoundexception when use @ configurationproperties ( ` ` parent'' )
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity to enhance functionality and improve layout handling for better user experience
deleted the ClusterNodeInfo. java file to remove unused code to streamline the codebase
removed unnecessary whitespace in ShieldedTransferActuator. java to improve code readability and maintain consistency
added debug output for standard and legacy ciphersuites in ServerHandshaker. java to provide visibility into the handshake process for better debugging and monitoring
refactor the ` ChooseRichDocumentsTemplateDialogFragment `, ` ChooseTemplateDialogFragment `, and ` ChooseTemplateDialogFragment ` to improve
added functionality to handle duplicate node labels in ImportContainerImpl to improve error handling and provide clearer feedback when a node cannot be duplicated
added a new file ` R230303044ListSelection. java ` that implements a list selection feature to demonstrate and test item selection
[ java ] throw a control protocol exception when a publication be already in use.
added a null check for mWorkspace in Launcher. java to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to ensure that the ` compound ` property
updated row count calculation in StatsRulesProcFactory. java to use a list of row counts to improve clarity and maintainability of the code
added path and query parameters handling in SpringBootDocBuildTemplate. java to improve handling of API parameters and enhance query parameter management
changed logger to be static final and removed unnecessary Hashtable usage in NotificationManager and SystrayActivator to improve code clarity and eliminate unnecessary Hashtable usage
changed the type of ` cachingBuildEngineDelegate ` from ` DistBuildCachingEngineDelegate ` to ` CachingBuildEngineDelegate ` and updated its
updated RuntimeException to include a descriptive error message to improve error reporting for parsing failures
added a debug log statement in WidgetsModel. java to log the filtered widget tray when debug is enabled
updated Console and Scanner classes to improve code readability and maintainability
updated the calculation of numTerms in SimilarityBase. java and added a new test for discount overlaps in TestSimilarityBase. java
added conditional checks for the " send " method in ` SimpleMailMessageItemWriterTests ` and ` MimeMessageItemWriterTests ` to enhance
added new exit and quit methods with corresponding properties in Global. java and removed the old quit method from ScriptingFunctions. java to streamline
refactored LoanBrokerGateway initialization and closing context in LoanBrokerSharkDetectorDemo. java to improve code clarity and maintainability
corrected method name from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to ensure consistency and accuracy in method naming conventions
updated cookie handling in VmwareContext. java to use CookieJar instead of String and improved error handling to enhance cookie management and provide clearer error
updated authority assertions in ResinAcegiAuthenticatorTests. java to improve clarity and consistency in authority assertions
add a 32 bit limit to the byteutil. bigintegerToBytes ( ) method in eckey.
updated system property key from " fml. disabledMods " to " fml. modStates " to ensure compatibility with the new configuration
refactor account selection handling in ` ReceiveExternalFilesActivity ` to improve code readability and maintainability by extracting account selection logic into a separate method
improve error message when a client can not connect to a stream
added error handling for empty results in ValidatorContractController to improve robustness by throwing an exception for unexpected empty results
added handling for empty files in TexturePackerFileProcessor to improve robustness by preventing null pointer exceptions
removed unnecessary null check for datasourceJNDI in PooledConnection. java to streamline code by eliminating unnecessary null checks
updated target _ MB and window values and introduced a new sink variable in TestRefprocSanity. java to improve memory management and enhance performance
added null checks for currentConsole before writing to avoid potential NullPointerExceptions when writing to the console
[ hotfix ] [ kinesis ] set credential refresh delay to 100ms in kinesisconfigutil
refactor dialog creation to use a unified method ` showInfoAlert ` to improve code readability and maintainability by reducing duplication
updated method signatures and added package argument handling in T4501661. java to enhance functionality by allowing package specification during testing
updated Java version from 1.7. 0 _ 60 to 1.8. 0 _ 31 in ` ModulesTest. java ` and ` TestBadUseCases
pluginbundledesolver : skip pluginbase dependency if it be already provide
added functionality to release and close ZipFileInputStream streams to ensure proper resource management and prevent potential memory leaks
change data matrix format from DATAMATRIX to DATA _ MATRIX across multiple files to clarify the purpose of the data matrix format
fix race condition in sequencegeneratorsource. runactive ( )
corrected the spelling of " getCurrentyActiveConnections " to " getCurrentActiveConnections " in the BlobServer and BlobServerGetTest classes to ensure
replaced ` findAny ( ) ` with ` findFirst ( ) ` in ` AnnotatedDelegate. java ` and ` SyntheticAnnotated. java `
added support for " ppc64 " and " ppc64le " architecture checks in Bits and ByteArrayAccess classes to enhance compatibility with additional
updated the error message format in RoboMonitoringInstrumentation. java to provide more context on the failure to resolve the activity
use long. max _ value in transactionimpl. waitfordeadline ( )
replaced instances of ` new Date ( ). new Date ( ) ` with ` java. time. Instant ( ) ` and ` java.
refactor BytesRef class to improve code readability to enhance maintainability and ease future updates
added a toast message to indicate if the YouTube Player doesn't work on Lollipop yet to improve user experience by providing feedback on
added checks for unterminated dollar quotes, strings, and sequences in the parser to ensure correct parsing behavior and improve error handling for unexpected dollar
added a null check for mVibrator in the conditional statement to ensure mVibrator is not null before proceeding with vibration
updated table styling and modified column background color handling in DotRenderer. java to improve table structure and enhance color representation for better readability
added a method to check if a Hive configuration is encoded as a string to enhance configuration flexibility by allowing external configuration of encoded parameters
pdfbox - 4892 : catch stringindexoutofboundsexception, a suggest by valerybokov
refactor X509Certificate class for improved readability to enhance maintainability and ease future updates
add a validation for wavefront uri ( # 3903 )
added caching functionality for image loading in NetworkedCacheableImageView to improve image loading efficiency and performance during image loading
refactor LauncherAnimUtils to remove target view parameter from ofFloat method to simplify animation method signatures for improved usability
added a new constant for the version of the gdx controllers in DependencyBank. java and updated dependencies in BuildScriptHelper. java to improve
refactor LaunchedURLClassLoader to improve code structure to enhance maintainability and readability of the code
updated DataSourceHealthIndicator to use a RowMapper for handling ResultSet columns to improve data retrieval reliability by ensuring a valid result set is used
added cache - control header to request and response in layout tag
added Locale. ENGLISH to the warning message formatting in ZkController. java to ensure consistent text formatting across different locales
added an Analyzer parameter to the SolrQueryParser constructor to enhance query analysis capabilities in Solr
updated copyright year and added licensing information in multiple Java files to reflect current ownership and provide guidance for licuting
removed unnecessary semicolon in MainTest. java to clean up the code and improve readability
refactor TypeContributions class to improve code readability to enhance maintainability and ease future updates
added handling for VoidColumnVector in VectorizedBatchUtil to ensure correct initialization of VoidColumnVector when source is a VoidColumnVector
updated method call to use req. getName ( ) instead of templateName to improve clarity and maintainability of the code
removed the method ` isTypeMatch ` from the ` AbstractConfig ` class to simplify the code by eliminating unnecessary type matching logic
[ java ] add an offer method to the session decorator to provide a way to set the correlation id and timestamp for a publication.
updated method names from ` trustAllXForwardedRemoteAddressResolver ` to ` trustAll ` in ` XForwardedRemoteAddressResolver `
added a new annotation ` NoBootstrap ` and implemented its usage in ` BootstrapInserter ` to ensure that no bootstrap annotations are present in the
hbase - 25836 tabledescriptorchecker. getmaxfilesize ( ) and getmemstoreflushsize ( ) should use tabledescriptorbuilder
updated the calculation of ` numCommits ` in ` BranchGraphServlet. java ` to ensure that ` maxCommits ` is accurately
added InvocationTargetException to main method signature and modified run method to handle InvocationTargetException to improve error handling and ensure proper execution with InvocationTargetException
added a static final build _ ID constant and refactored the caching logic in CachingBuildEngine to improve code clarity and maintainability by central
removed unused imports from TransactionCapsule. java to clean up the code and improve maintainability
removed duplicate call to markAsDone in HttpProtocol. java to streamline the code by eliminating redundancy
added import for TezConfiguration and utilized it in TezConfigurationFactory to enable dynamic configuration of Tez in the Tez framework
added null check for keyPurposes in TimestampedSigner. java to avoid potential NullPointerException when keyPurposes is null
modified conditional logic in CustomPlaybackOverlayFragment. java to improve readability and maintainability of the code
added a forget method and modified recentSounds handling in OpenALAudio. java to improve sound management by ensuring recentsounds are properly
clear one - off event from state.
added new decimal formats and unit for number tick in NumberAxis. java to enhance precision in unit representation for better visualization
refactor TargetsCommand to use the factory method for building TargetGraphAndBuildTargets to improve code readability and maintainability by reducing boilerplate code
removed the ` IndexFileNameFilter ` class and replaced its usage with ` SegmentInfo ` in multiple files to simplify the file filtering logic and eliminate
( ) ) should'''and'' in mod ( ).
added a compression level parameter to several methods in ApkBuilder and SignedJarBuilder to allow customizable compression levels during APK creation
added a test method to verify static fields in stubJar to ensure that static fields are included correctly in the stubbed jar
added support for BYTES data type in multiple classes to enhance data handling capabilities in the application
updated failure message formatting to include a newline character to improve readability of error messages for better debugging
replaced ` id. hashCode ( ) ` with ` Objects. hashCode ( id ) ` and removed the call to ` super ( ) ` in
added cache management for Post and ForumService classes to enhance cache management capabilities and improve data retrieval efficiency
updated file path construction to include locale prefix to ensure consistent file naming across different locales
updated SimpleHttp. java to conditionally create a FormBody. Builder based on the presence of a post body to enhance flexibility in HTTP request handling
added asynchronous request handling for OkHttpClient in ClientSideSlb and its test to improve resource management and ensure proper cleanup of the executor service
added conditional logic to adjust the v2 value based on whether the texture is flipped to improve rendering behavior when flipping is enabled
throw InvalidConfigurationException instead of HazelcastException when no property be mapped
added null check for contextPath before retrieving its value to avoid potential NullPointerException when contextPath is null
[ hotfix ] [ runtime ] make projectclassloader. reinittypes ( ) return an empty list
added serialization header for B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap. java and initialized B _ TREE _ MAP
added support for precompiled headers in various classes to ensure correct handling of precompiled headers in different rules
replaced WeakReference with AccWeakReference in ImageWatched. java to enhance security by using privileged actions
changed visibility of findNextIndex ( ) method from private to private and updated imports in ObjectMap and orderedMap classes to enhance encapsulation and improve
updated the isDirect variable from true to false to correct the logic for determining if the object is direct
pdfbox - 4892 : fix typo, a suggest by valerybokov
changed the return type of the ` localToAscendantCoordinates ` and ` localToDescendantCoordinates ` methods from ` void ` to `
pdfbox5764 : use buffer. limit ( ) instead of input. capacity ( ) in randomaccessreadbuffer
added null check for context before calling removeCloseHook to prevent potential NullPointerException when context is null
updated border spacing calculations to use folderCellLayoutBorderSpacingPx instead of cellLayoutBorderSpacingPx to improve layout organization based on container type and
refactor valueNumeric initialization to use a custom ValueNumeric class to improve code readability and maintainability by encapsulating numeric parsing logic
modified the condition for handling login and error pages in FormAuthenticator. java to ensure proper handling of deferred authentication cases
updated command - line argument handling to use " -- add - to - start " instead of " -- module - startd - ini = "
added a default partition value and modified dynamic partition value handling in DynamicPartitionFileRecordWriterContainer. java to ensure a default value is used when
[ hotfix ] [ stream ] mark operatorfactory a nullable in streamnode
updated method calls to use ` hasClassifier ( ) ` and ` getGroupId ( ) ` instead of ` hasClassifier ( ) ` and ` getGroupId
camel - kafka : fix npe in kafka rebalance
improve error message when dependency can not be find
fix typo find by codespell on fossies. org
doc : fix docstring formatting ( # 4382 )
updated LumberjackMultiThreadTest to use a configurable concurrency limit based on available processors to enhance testing flexibility by allowing different concurrency levels
don't attempt to move player if they be dead
updated the Exchange class to improve code structure to enhance maintainability and readability of the code
( ) ) should have its own group ( )
refactor MfaProvider and related classes to use enum comparisons instead of switch statements to improve code readability and maintainability by reducing explicit switch cases
refactor AbstractMetaDataExportMojo to improve code structure to enhance maintainability and readability of the code
added handling for SQLIntegrityConstraintViolationException in Hive. java to improve error handling and provide clearer feedback when attempting to drop tables
corrected a typo in the property name from " githubAccessToken " to " gitHubAccessToken " to ensure consistency and accuracy in property naming
added a new file ` RoboExecutorService. java ` that extends ` org. robolectric. util. concurrent. RoboExecutorService `
fix add / remove group menu item for root group
modified the method signature of ` buildServiceNameAndSpanName ` and ` buildServiceNameAndSpanName ` to improve clarity and correctness of the method
refactor TestDynamicNumberOfGCThreads to improve argument handling to enhance clarity and maintainability of the code
changed return types of ` getHostFlavorMap ( ) ` and ` getAllPossibleHostFlavors ( ) ` methods from ` ImmutableFlavor `
added support for creating CREATE TABLE statements in CreateTable and CreateTableDeParser to enhance SQL construction and improve handling of CREATE TABLE statements
chat : set the background alpha to 64 for the chatviewerfragment
test : migrate ctiterest to junit 5 ( # 2496 )
added clear ( ) method to CharTokenizer, KeywordTokenizer, TokenStream, Tokenizer, StandardTokenizer, and DocumentsWriter classes to ensure proper handling of
added test case for astinitializer that crash on a block statement.
updated StateMachineConfiguration and StateMachineFactoryConfiguration classes to remove enum and implement StateDefinitionStoreException if configurers are missing to improve error handling
simonstewart : remove a redundant check for link =
''''should''''''''
remove unused variable in aggregatelifecycletracing
updated touchable insets setting from ` insetsIsTouchableRegion ` to ` insetsInfo. setTouchableInsets ` to ensure touchable is
removed a conditional check for'~'in FencedCodeBlockParser. java to streamline code by eliminating unnecessary checks
added socketTimeout property and its handling in multiple classes to enable dynamic configuration of socket timeout settings for improved application stability
added a delay of 500 milliseconds in ElementAttributeTest. java to improve test reliability by allowing longer execution times
updated InputStreamReader to use UTF - 8 encoding to ensure proper handling of character encoding in HTTP responses
refactor List class to improve code readability to enhance maintainability and ease future updates
refactor AsyncFileImpl constructor to accept a URI parameter and improve context handling to enhance code readability and maintainability while ensuring proper error handling
added API annotation to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that the execution context is part of the API and should not
cloudstack - 7143 : don't throw an exception if there be no nuage vsp device configured on the physical network
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated its implementation to improve clarity and specificity in error handling
updated Java version references from Java 8 to Java 9 to ensure compatibility with newer Java versions
improve error message, also add warning
added a method to clear the client header in AsyncHttpClient to ensure the client header is cleared when no headers are present
replaced Vector with ArrayList and updated related method calls to improve performance and maintainability of the code
updated the default grid column from 4.0 f to 3 f to improve visual consistency and performance of the application
added a condition to check if ` forViewCreation ` is false before calling ` hasTableDefined ( ) ` to ensure that the table is
updated date pattern and assertion handling in TestHS2HttpServer. java to improve clarity and correctness of date replacement assertions
added exception handling for object retrieval in GraphPrinter. java to improve robustness by catching potential exceptions during object creation
simonstewart : fix a bug in the iedriver, and add a test for insecure ssl certificate.
update byteOffset calculation to use Math. addExact and add a new test for handling too many allocations to improve performance and ensure correct buffer allocation
changed static fields to instance variables and updated string formatting to use Locale. ENGLISH to improve code readability and ensure consistent formatting across different locales
don't swallow unexpected error in tcptransport. stop ( )
suppress warning on non - serializable instance field in papplet
updated OcamlDebugLauncher to extend from AbstractBuildRule instead of AbstractBuildRuleWithResolver to simplify class hierarchy by removing dependency on SourcePath
use file. absolutepath ( ) instead of file. absolutepath ( )
added response type validation in OAuth20DeviceCodeResponseTypeRequestValidator and improved error messages in OAuth20AccessTokenEndpointController to enhance security by ens
added a check for an index of 1 in DrillBuf. java to ensure that the index is valid before proceeding with operations
added a new method ` initTableMapperJob ` to the ` TableMapReduceUtil ` class for customizable input format handling to enhance flexibility
removed redundant append call in AbstractJRubyMojo. java to streamline the code by eliminating redundancy
raise an exception if the language be not find.
added deprecation warning for reserve commit duration in ReplicationHandler. java to inform users of the use of the deprecated replication option
changed cache variable name from cacheVariableName to cacheForeignKey in DIHCacheSupport. java to improve cache management by using a more descriptive
replace long [ ] with Object [ ] in ECKeyPairGenerator. java to improve type safety and eliminate potential ClassCastException
[ hotfix ] [ runtime ] fix restart with cancelling state
replaced the singleton instance of RotationTouchHelper with a direct instantiation to simplify the instantiation process and improve code clarity
refactor code to use java 8 stream to improve code readability and performance
updated method signatures from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to accommodate the new thread
fix bug in offerbook. remove offer from the same id in the list
refactor to avoid use of tlsv1.3
updated mock handling logic in MockitoMethodInvocationControl. java and SystemClassUserTest. java to improve type handling and enhance test coverage for mock
replaced instances of ` NotLoadedException ( ) ` with ` NotLoadedException ( this ) ` across multiple classes to improve clarity and consistency in
removed the import of DisplayUtils and added an intent extra for the file to streamline the intent by eliminating unnecessary dependencies
added error handling and cleanup methods in StoreDirect, StoreWAL, and StoreDirectTest classes to improve resource management and ensure proper cleanup of compaction
added a task snapshot retrieval process in AbsSwipeUpHandler. java to streamline task handling and improve code readability
added a hidden flag and associated methods in CommandArgumentDefinition to control the visibility of command arguments based on its presence
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest. java to align the test with the latest data requirements
move catalog retrieval from styleinfo into styleinfo
added permission checks for launcher activities in InstallShortcutReceiver and Launcher classes to enhance security by ensuring only valid intents are processed
added ` getId ( ) ` method and ` setId ( int id ) ` method to multiple tile classes to provide a consistent way to set the
refactor Manager class to improve code structure to enhance maintainability and readability of the code
updated JDBC connection string to include version setting to ensure compatibility with newer JDBC versions
added schemas and includeSchema property to LiquibaseGenerateChangeLogMojo to enhance the flexibility of schema handling in the change log generation process
changed ` putIfAbsent ` to ` put ` in JmxRegistry. java to improve performance by using ` put ` instead of ` putIfAbsent `
benchmarker should log a warning rather than error
changed the access modifier of the doPutRecord method from final to non - final to allow for subclassing of the doPutRecord method
fix file selector not work on window ( # 4481 )
added new test methods for handling large response content in FastCGIProxyServletTest. java to improve test coverage and ensure proper handling of large
added a startService call in MarkReadService. java to start the ReadInteractionsService functionality
added a conditional check for the lintClassfile before logging warnings in ClassReader. java to improve error handling and provide clearer diagnostics for missing annotations
added configuration to set the mail server port to " 25 " if it is not already set to " 25 " to ensure the application connects to
added retry policies for SSLFactory renewal attempts in TlsUtils. java to improve reliability and error handling during SSL factory renewal
updated date format from " HH : mm'T'HH : mm'Z " to " HH : mm : ss'Z " to
updated the assertion message in SpyingOnRealObjectsTest. java to clarify that the error message is not visible due to mocking a private class
added end - of - line handling functionality in InlineBoxing and LineBox classes to improve line management and ensure proper handling of line endings
updated filePathString construction to handle cases where the parent file path is null to ensure proper formatting of the file path if it's not null
removed unused import of DocCollection in TopicStream. java to streamline code by eliminating unnecessary dependencies
add a unit test for the multipart parameter in the servlet servlet
added properties for web exposure in AbstractCasEndpointTests to enhance test configuration by including web exposure properties
added validation to ensure the current graph is a dynamic graph to prevent runtime errors
don't allow @ scopeone to be use for @ beforeclass.
camel - jsonpath - add option to suppress exception
removed redundant call to ControllerLeaderLocator. create ( _ helixManager ) to streamline the code by eliminating redundancy
updated usage messages in CLHSDB. java and HSDB. java to reflect the correct command usage for Java and HSDB to
refactor FaultTolerantChunkProvider implementation to improve code organization to enhance maintainability and readability of the ` FaultTolerantStepFactoryBean `
[ beam ] remove deprecate class from org. apache. beam. sdk. io
refactor ShadowAccessibilityManagerTest to improve accessibility manager accessibility testing to enhance test reliability and maintainability by using a dedicated AccessibilityManager instance
add group _ display _ id to track usage statistic
( ) should not ( ( ) )
refactor enum data type helper to use a dedicated class to improve code organization and maintainability by encapsulating enum data retrieval logic
updated log path from " logpath / spring. log " to " file. separatorChar " to ensure consistency in file path formatting across different operating
updated method names from ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple files to improve clarity and consistency
added a check for index tables in HiveMetaStoreClient to improve error handling for dropping index tables
added a check to update disabled flags for mActionsView to ensure consistent behavior when visibility is not visible
added a shell highlighting for non - Windows environments to ensure proper syntax highlighting behavior on non - Windows environments
[ java ] add miss local variable annotation, and add a test for it.
replaced ` getRawPath ( ). toUri ( ). getRawPath ( ) ` with ` toString ( ) ` in ` HadoopPinotFS
removed capture listener from the stage in SelectBox. java to ensure that the listener is properly removed from the stage
changed the initialization of the _ metaDataComplete variable from true to false to correct the logic for determining if the metadata is complete
refactor ` removeTaskTarget ` method to execute in a separate thread using ` THREAD _ POOL _ EXECUTOR ` to improve code readability
added platform flavor handling in JsBundleGenrule. java and corresponding tests in JsBundleGenruleDescriptionTest. java to enhance support for platform
updated variable initialization logic in Lower. java and added a new class T6500701. java with a main method to improve type handling
added tests for crlf new lines in comments and comments to ensure correct handling of newline characters in import statements
added support for Liquibase Hub modes in AbstractLiquibaseChangeLogMojo and AbstractLiquibaseMojo classes to enable configuration of
updated skipPolicy initialization and simplified null check in JsrChunkProcessor to improve code readability and maintainability
added checks for existence of linkDb in IndexerMapReduce to improve error handling and provide clearer logging for indexing failures
updated the method for retrieving the indexer thread pool to improve clarity and maintainability of the code
updated the address formatting in GameCanvasImplementation. java to improve clarity and consistency in address formatting
in progress - batch - 857 : map daos need to be truly transactional for correct restart
added a new file ` DownloadTest. java ` to implement a download test for an image from the Gdx framework to facilitate testing
updated language handling in multiple classes to ensure consistency in language formatting across the application
updated error messages in GenericUDFRound. java to use UDFArgumentTypeException instead of UDFArgumentException to improve clarity and specificity of
added a null check for the selectedVersion before processing the version tag to ensure that the version tag is only updated when a valid managed dependency is
added multiple AntPathRequest matchers in SecurityConfig. java to enhance security configuration options for the application
added JUnit @ Ignore annotation to TestConcurrentDInserts. java to temporarily disable tests that are not ready for execution
don't write ` ` java. lang. object'' anymore
added @ Ignore annotation to HttpClientRedirectTest. java to temporarily disable the test due to known issues
updated constants in OpenWebNetEnergyHandler and OpenWebNetThermoregulationHandler to improve code readability and maintain consistency in naming conventions
simplify the code by removing unnecessary status checks
deleted the SunToolkitSubclass. java file to the class is no longer needed for the current implementation
replaced MathUtils with Matrix4 and added a new method hasRotationOrScaling to improve rotation and scaling handling in the DefaultRenderableSorter
updated imports in TypeHandlerRegistryTest. java and added a new test method in TypeHandlerRegistryTest. java to improve test coverage and address
added a method to convert a raster to a RGB image in PDSeparation. java to improve image processing efficiency for different color space formats
updated URLs to use ` BuildConfig. WIKIMEDIA _ API _ HOST ` instead of ` CommonsApplication. HOME _ URL `
camel - health - add unit test for camel - http and camel - http
add null check to the thorn chakram to prevent potential npe.
added a test for altering a table with indexes with specific indexes in AlterTableWithViewsIT. java to ensure correct functionality of index definitions
updated offset variable to use readerContext's docBase and modified assertions in TestFunctionQuery to improve code clarity and ensure accurate assertions for document
removed an unused field from the MongoRecordReader class to streamline data handling by eliminating unnecessary fields
added disconnection methods in YeelightHandlerBase and DeviceBase, and modified connection handling in WifiConnection to improve connection management and ensure proper
added support for " AUTO _ INCREMENT " in the parser to ensure proper handling of integer types in SQL queries
fix : add an exist share index informer to the list of share index ( # 4451 )
cloudstack - 7143 : fix npe while save template detail ( # 7491 )
replace BufferedInputStream with RobolectricBufferedImage and streamline image initialization to improve image handling and stream management for better performance
removed deprecated constants from LauncherSettings. java to clean up the codebase and improve maintainability
move stocktickstream. dat to org. drools / examples / broker / data
added legendTop and legendBottom variables and adjusted their calculations in PieChart. java to improve legend positioning and ensure proper rendering of the legend based
added a condition to return early if the world transformation is zero to improve performance by avoiding unnecessary processing when the world transformation is zero
added a new file MaryScriptCreator. java to generate a Mary script from a specified directory to facilitate the creation of M
nifi - 1156 : fix npe in listenhttpservlet when the remote source be not specify.
refactor compactionLogger initialization and improve file deletion logic to enhance code clarity and ensure proper resource management during compaction operations
removed " xlink : href " attribute from license and locations in ComponentDescription. java to simplify the URL construction by removing unnecessary " xlink
camel - aws2 - s3 : add timeout checker to stream upload
hbase - 25836 regionserver. isclustershutdown ( ) should be public and should be use in assignmentmanager. start ( )
added null check for span before logging in Slf4jSpanLogger to avoid potential NullPointerException when span is null
trim whitespace from the active option in the configuration to ensure consistent handling of active options without leading or trailing spaces
added depth effect preference and updated wallpaper zoom level settings to enhance user experience by allowing dynamic depth effects based on user preferences
updated assertion in OverseerTest. java to check success count instead of success count to ensure accuracy of overseer statistics in the test
removed the method ` getKernelVersion ( ) ` from ` LinuxFileStore. java ` to streamline the code by eliminating unnecessary
refactor ExecConstants to improve code readability to enhance maintainability and ease future updates
removed the import of ScreenRecordRule and the ScreenRecord annotation from ThemeIconsTest. java to streamline code by eliminating unused imports
added a new method ` setScanAttributeForPaging ` in ` ScanUtil ` and updated ` TableSnapshotResultIterator ` to utilize this
added a check for lowRange in Request. java and modified the conditional in RequestV2. java to ensure lowRange is within valid range
changed access modifiers from private to protected for keySizeEstimator and valueSizeEstimator in AbstractCachedSource and adjusted cache size estimation in AsyncWrite
server : fix npe in listhosts ( )
[ zeppelin - 4481 ] fix json encode issue in zeppelin interpreter
updated filesystems. remove method to use filesystems. remove ( zfs, zfs ) instead of filesystems. get ( zfs
changed the type of the ` obj ` variable from ` Object ` to ` String ` and updated its usage throughout the ` HttpRequestBuilder ` class
increased wait time from hardCommitWaitMillis * 2 to hardCommitWaitMillis * 3 in SoftAutoCommitTest. java to accommodate
fix npe in selenidelogger. beforeevent ( ) and. afterevent ( )
refactor multiple Dial - related classes to improve code organization to enhance maintainability and readability of the codebase
fix checkstyle issue in syncqueue. java ( # 3391 )
updated the version from 0.5. 0 to 0.5. 1 in RyukContainer to ensure compatibility with the latest features and improvements
replaced getBootstrapPaths ( ) with getAdditionalBootstrapPaths ( ) in BootClassLoaderHook. java and added a new TestHook class to
fix load patchy library on window
[ hotfix ] [ yarn ] fix typo in yarnitcase
fix npe in localmapstatsprovider when no data be present
deleted the AllTests. java file to the test suite is no longer needed for the project
added constants for Unicode characters in AbstractWordConverter to improve handling of Unicode characters in the application
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to ensure that stack trace invocations do not starve
updated method call to use ` getResultMappingsForRowKey ( ) ` instead of ` getResultMappings ( ) ` to improve clarity and consistency in
added a boolean variable ` eventHandled ` initialized to true to track the event's handled state
deleted the ` Weldby ` class and renamed it from ` Weldby ` to ` WeldModule ` to streamline the codebase
added support for monitor capture group in empty nfa execution
replaced dynamic retrieval of liquibaseProLicenseKey with a protected variable to allow external configuration of the Liquibase Pro license key
mondrian : fix typo find by codespell on fossies. org
add - g option for generate debug information
mondrian : fix typo in mondrianproperties. java
added functionality to retrieve and utilize user paths in various classes to improve the handling of user - defined arguments in the compilation process
added aliases for character scripts in Character. java and refactored main method in CheckScript. java to enhance character processing capabilities and improve code
replaced direct equality checks with ` equals ` and added a new method ` stringToExecutionCommand ` in ` StageUtils ` to improve code readability and
refactor Mockito class to improve code readability to enhance maintainability and ease future updates
refactor OCFile class implementation to improve code readability and maintainability
added a toString ( ) method to the SystemScope class to provide a string representation of the object for easier debugging and logging
updated CSS parsing logic to handle percentage and percentage inputs to improve accuracy in parsing and provide clearer error messages
added a test for the reverse scan functionality in LocalIndexIT. java to ensure that the local index correctly returns all rows from the reverse scan
replaced InstrumentationRegistry with ApplicationProvider in BaseAndroidTestCase. java and modified test methods in BackupHelperTest. java and LanguageHelperTest.
updated toast messages to use resource strings instead of hardcoded strings to improve localization support and enhance usability
updated loop conditions in RendererUtilities. java and added new test methods in RendererUtilitiesTests. java to improve code clarity and enhance testing coverage for
refactor KrakenStreamingAdapters to use ArrayNode for ask, bid, and ask arrays instead of Iterator to improve performance and readability by
added error handling for adding a column in FileContentProvider to improve robustness during database schema modifications
removed debug print statement from AsyncServletIOTest. java to clean up the code and reduce unnecessary console output
updated the ConvertJoinMapJoin class to compute online data sizes using a hash table load factor to enhance the accuracy of data size calculations based on
modified the ` buildView ` method to accept a ` Context ` parameter and updated its usage throughout the ` TrackSelectionHelper ` class to improve
added ` withAuthentication ` method to ` SecurityMockMvcResultMatchers ` and corresponding tests in ` SecurityMockMvcResultMatchersTests ` to enhance
vpc : set vpc _ id to null if vpc _ id be null
[ beam - 10955 ] ignore flink savepoint test on jdk 11
fix checkstyle issue in the ui module
modified loop condition in Actor. java to include an index check for actions to ensure actions are processed correctly within the defined range
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to ensure compatibility with the latest Bitmex API and improve
[ multistage ] add integration test for orgunit and orgunit relationship
added null check for spatial before checking its type in LodControl. java to prevent potential NullPointerException when spatial is null
updated ` ConditionalTokenFilter `, ` FixedShingleFilter `, ` TestRandomChains `, and ` TestConditionalTokenFilter `
[ gr - 16725 ] add stateafter to unsafestorenode. storefieldnode
updated the method call from ` super. putAddress ` to ` io. putAddress ` to ensure proper functionality of the putAddress method
added assertion to verify that the data is not empty in CasAuthenticationEventListenerTests to ensure that the data is not empty before proceeding with
updated the ` attributeTemplateName ` and ` attributeCol ` parameters in ` AuthenticationAttrProcessor ` and ` AuthenticationAttrProcessor ` classes to improve
added null checks for the key parameter in MacOSXPreferences. java and created a new class RemoveNullKeyCheck. java to ensure that a
added a method to set a typeface in the CodenameOneTextPaint class to ensure that setting a typeface does not throw a
added a ` open ` method in ` AzurePinotFS `, ` LocalPinotFS `, ` HadoopPinotFS `,
danielwagnerhall : remove deprecate fail ( ) method
removed size check from the else statement in SolrRequestParsers. java to simplify the conditional logic for better readability and performance
refactor DefaultResultSetHandler to use'this'keyword for clarity and consistency to improve code readability and maintainability by using'this'keyword
updated SQL assertion in CreateTableGeneratorTest. java to include quotes around foreign key references to ensure compatibility with SQL standards and improve readability
refactor filtering logic in VectorizationContext. java to improve clarity and maintainability of the code
updated the type of the moveSelectorConfig initialization in ExhaustiveSearchPhaseConfig. java to ensure type safety and improve code clarity
replaced the instantiation of ReorganizeTableStatement with a direct instantiation to simplify the code and improve readability
updated cluster name handling to use DEFAULT _ CLUSTER _ NAME instead of a hardcoded string to improve code readability and maintainability by centralizing cluster name
don't swallow exception in peergroup. handlepeerdeath ( )
added multiple style entry for different output formats in Nano. java to enhance style customization for different output formats
fix entity type in schematic ( # 4481 )
updated return statement to replace ` String ` with ` No # toString ( ) on ` String ` to improve clarity and usability of the return
updated JVM parameters from " - Xmx64m " and " - Xmx32m " to " - Xmx32m " and
refactor retryFailed method to return a FailureContext instead of a int and add new retryAnalyzer and DataProviderRetryAnalyzer classes to improve error handling
updated the index used in the return statement from 0 to bandwidth to ensure the correct data type is returned from the token array
( ) ) should not be implement yet
removed the unnecessary ` printWarning ` parameter from the ` doPrintEntry ` method and streamlined its implementation to simplify the method signature and improve
[ hotfix ] fix checkstyle violation in taskasynccalltest
added validation checks for dialog properties and background colors in Dialog and Frame classes to ensure proper handling of dialog properties and prevent illegal state exceptions
changed the ` state ` field from non - final to final in ` DefaultProjectFilesystem. java ` to ensure immutability of the `
refactor RedisObjectFactory to improve sentinel configuration handling to enhance flexibility in configuration management for Redis connections
added property to track if a chat room have be see.
( ) ) ) should be no - op ( )
refactor FileOperationsHelper to use a service for sharing operations to improve code organization and maintainability by centralizing action handling
fix classnotfoundexception with @ inject ( ` ` @ inject'' )
updated loop conditions in ClassicPlotManager. java to use a new variable yStart instead of a hardcoded value to improve code readability and maintain
added handling for NullPointerException in SmackIntegrationTestFramework to improve robustness by preventing potential NullPointerExceptions
pdfbox - 4892 : add support for subdirs with exif file, and add test
added support for the ENABLED _ LS mode in VersionTargetGraphMode and updated dependency executor initialization in VersionedTargetGraphCache to improve dependency management
added video format checks in DLNAResource. java to ensure proper handling of video formats during parsing
refactored AutoMlClient to improve code structure to enhance maintainability and readability of the codebase
refactor LwjglNativesLoader to enable dynamic loading based on the presence of the ServiceManager to improve flexibility in loading native libraries based on
added escape functionality to CSV request handling to enhance security by allowing special characters in the encapsulator
updated grant type validation and error handling in ClientRegistrations. java and ClientRegistrationsTests. java to ensure only valid grant types are accepted
improve exception message for self - suppression
added new SQL query and assertions in DerivedTableIT. java and modified the iterator initialization in ClientAggregatePlan. java to enhance query validation and
added support for RSquare in the RegressionEvaluator and StreamExpressionTest classes to ensure proper handling of the RSquare value in the regression evaluation process
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 4682 - allow
updated SparkPlanGenerator to use MapWork directly instead of casting to MapWork to improve type safety and eliminate unnecessary casting to MapWork
refactor image handling in PdfReport and PdfSessionInformationsReport classes to improve code readability and maintainability by encapsulating image retrieval logic
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver and added new tests in JwtIssuerAuthenticationManagerResolverTests to improve cache efficiency
updated the condition from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test
added a boolean parameter to the Function constructor in LLVMInteropType. java and updated related method calls in CxxMethodsTest. java to
updated sleep duration from 500ms to 500ms in AbstractBasicMockingIntegrationTest. java to improve test stability by allowing more time for
added a new file KernCrash. java that implements a custom font rendering using KernCrash to demonstrate the use of a kerning font
added fail ( ) method call to LinkedHashTreeMapTest. java to ensure proper error handling during test execution
added a method ` getInterfaceAddresses ` to retrieve network interfaces with a prefix to provide a way to retrieve network interface addresses based on a prefix
fix npe in hikariconfig. close ( ) when shut down housekeeper
[ hotfix ] [ bugfix ] fix checkstyle violation in grouptransferservice
updated assertions in Assert. java to improve code clarity and maintainability
added a new test class ` Issue247Test ` to validate database functionality to ensure correct functionality and reliability of database operations
changed the return type of doInBackground from CategoryItem to String and updated the onPostExecute method to return a list of String instead of ResultSet to improve data
add check for today and birth date in ValidatorTest. java to ensure proper validation and error handling for date fields
added GrblLookups for alarm, error, and error codes in GrblController. java to enhance error handling capabilities and improve response processing
updated return statements in Workspace. java to handle cases with no screens to improve user experience by providing specific text for different screens
removed the'count'parameter from the getBittrexTrades method in BittrexMarketDataService to simplify the method signature and eliminate unnecessary
updated ConsoleReader to strip ANSI from prompt and adjusted the index condition in MemoryHistory to improve input handling and ensure proper indexing based on the
updated the path construction for the jdk file in JavaBuild. java to ensure correct file path construction for the " Contents / PlugIns / "
updated method calls to use ` getType ( ) ` instead of ` getBuildRuleType ( ) ` to improve code clarity and consistency in accessing the
updated JFCModel constructor to accept a ` Consumer < String > ` parameter and modified related methods to accept a ` Consumer < String > `
added a check for negative tolerance in MaximumInscribedCircle. java to ensure that Tolerance must be positive to prevent runtime errors
added methods to create and drop views in TestUtil and a corresponding test in DatabaseMetaDataTest to enhance functionality for creating and dropping views in the database
80687 : test for - dtests. * don't run on x86
added a new ` DesktopTaskbarUIController ` class and integrated it into ` TaskbarManager ` to enhance the taskbar functionality by integ
added task count listener functionality to SearchModFragment and ModItemAdapter to enhance user experience by providing feedback during task execution
updated file handling logic in Files. java to improve performance and reliability of file operations
refactor method signatures and variable types in AnnotationGrpcServiceDiscoverer and GrpcServerAutoConfiguration classes to improve code clarity and maintainability
updated DomainAwareServicesManager to extend ServicesManager and removed the DomainAwareServicesManager interface to simplify the interface hierarchy and improve code clarity
log modid and file path to debug
chore : update gapic - generator - java version to 2.1. 0 ( # 448 )
added grow ( ) and growY ( ) methods to Cell class to enhance cell management functionality
replaced the ` currentBindings ` map with a ` bindings ` map containing ` KeyStroke ` and ` ActionListener ` to simplify key binding management and improve
resolve intermittent test failure on slow machine
replaced long arrays with byte arrays in MetricsMemoryTester. java and added a memory fail count check in TestDockerMemoryMetrics. java to
deleted the JobParametersPrototype. java file to the functionality is no longer needed in the project
added a securityEnabled flag to the MappingsTable class and updated its usage in TableResolverImpl to enable security - related functionality in the mapping
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJC _ HEADER
changed the DUMP _ TO _ FILE constant from true to false to disableUMP _ TO _ FILE functionality in the parser
add support for audio decoder on android 11 +
[ java ] use logbufferdescriptor. isconnected ( ) instead of logbufferdescriptor. isconnected ( ) in networkpublication.
added a condition to check if output options are no info to ensure proper handling of output options when no info is provided
( ) should not use http
added DOMOutputOptions to DOMConverter and updated buildDOMSubtree method to include error output options to enhance error handling and improve flexibility in XML
updated assertions in Assert. java to improve code clarity and maintainability
added'retained'option to the Event class and updated the send method accordingly to enhance the event's ability to track if a message is
added a test case name for the " Test1 " field in the EventSerializationTest class to ensure that the test case name reflects the
[ calcite - 5496 ] use ` ` $UMBLE'' instead of ` ` tUMBLE'' in sqlgroup
replaced the import of ` fastparse. core. Parsed ` with ` fastparse. Parsed ` to ensure compatibility with the latest fastparse library
add readwritelock and writewritelock to abstractsessioncontext.
replaced ` isEmpty ( ) ` with ` isEmpty ( ) ` in ` AppModule. java ` and refactored the ` Watcher `
replaced ` CalciteSqlDialect ` with ` AnsiSqlDialect ` to utilize an Ansi SQL dialect for enhanced compatibility
changed log level from debug to trace in FirmwareUpdateService. java to better reflect the severity of the log message
added unit tests for null values in GetObjectTest. java to ensure proper handling of null values in SQL queries
refactor StringSubject and Subject classes to improve handling of internal and custom names to enhance clarity and maintainability of the code
added unit tests for repository permissions in UserModelTest. java to ensure correct handling of repository permissions for multiple team types
added a new file Test7088020. java with method handle testing for incorrect argument types to facilitate testing of method handles with different
refactor audience restriction validation to use a set of audience URIs to improve clarity and maintainability of the validation logic
refactor cache update methods in AbstractDataChangedListener and HttpLongPollingDataChangedListener to improve code organization and enhance cache refresh logic
changed the initialization of ` _ stderr ` to null and modified its assignment to handle potential null values to improve robustness by preventing potential NullPointerException
added a new constant SEPARATION _ ORDER in Warning. java and implemented logic in BasicEventSimulationEngine. java to track the order of
updated the optimize method call to use realtimeTableConfig instead of offlineTableConfig to ensure the query optimizer uses the correct table configuration for the realtime
refactor PhoenixHBaseAccessor to use a dedicated hostMinuteAggregrateSql variable for better clarity to improve code readability and maintainability by
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added BluetoothClass support and corresponding unit tests in ShadowBluetoothDeviceTest. java and ShadowBluetoothDevice. java to enhance Bluetooth functionality and improve testing
updated method name from ` contains ` to ` containsProfile ` to improve clarity and consistency in naming conventions
[ flink - 3392 ] [ table - planner ] add support for empty list in sumfunction.
replaced graphModel. getGraph ( ). readUnlockAll ( ) with graph. readUnlockAll ( ) to streamline code by eliminating
updated coreNodeName assignment to use getCoreName ( ) instead of coreName to improve clarity and accuracy of core node name generation
implement updatebackpressure. refreshrequest ( ) in chatactivity
updated TaggerParserPosTagCompatibilityITest. java to improve test coverage for tagger parsing functionality
added @ SuppressCodecs annotation to BaseVectorSimilarityQueryTestCase. java to suppress codecs related to SimpleText in tests
updated the condition in ` mmm Types. java ` and added a new class ` T7005671. java ` with multiple test methods
updated calculations in DelaunayTriangulator and changed the test class from EarClippingTriangulatorTest to Delaunay
added @ Override annotation in ArrayDeque, ArrayList, LinkedHashMap, LinkedList, and Vector classes to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet initialization to use Builder pattern to improve code readability and maintainability by utilizing a builder pattern
[ gr - 37090 ] fix performance regression for stack overflow ( un ) protection .
added methods to shadow SQLite and ContentValues in Robolectric to enhance testing capabilities for different database implementations
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in LwjglAWTCanvas. java and Lwjgl
replaced ` bytesPerDim ` with ` ArrayUtil. getUnsignedComparator ` for array comparison to improve code readability and maintainability by using a more des
updated Locale class to include script property and modified default locale retrieval logic to enhance flexibility in setting default locale based on user context
change return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to reflect the last set text alpha instead of the current text
corrected a typo in the warning message from " Confimap PropertySources does not match " to " ConfigMap PropertySources does not match " to
replaced imports of ` LimitedModeLoginMockMvcTests ` with ` UaaJunitRunner. allSuiteClasses ( ) ` to stream
trim whitespace from tokens in GzipFilter and related tests to ensure consistent data formatting by removing leading or trailing spaces
updated the output type assignment in Response. java to ensure consistent output type handling
updated the default implementation property from JDK to JONI to ensure compatibility with the latest version of the Nashorn regex implementation
replaced ` Handler ` with ` Executor ` and refactored task handling in ` ViewCapture. java ` to improve code clarity and utilize a
mary : add a way to retrieve voice style from a list of voice
added a check to ensure the parent folder exists and is a directory before creating it to improve error handling and provide clearer feedback when creating a folder
updated node discovery binding IP from " 0.0. 0.0 " to " 127.0. 0.1 " to ensure compatibility with the new IP format in the
camel - jbpm - fix camel - jbpm - workitem default handler name
pdfbox - 2576 : remove unused static import, a suggest by valerybokov
renamed WorkModeToggleContainer and WorkModeToggleContainer classes to WorkFooterContainer and updated associated references to improve clarity and consistency in naming conventions for
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
refactor : remove useless code in defaultjavaprettyprinter
[ hotfix ] [ runtime ] fix memory leak in drivercontext
hhh - 10453 - remove redundant ` ` r'' in string. format
updated evictionCounter implementation to use AtomicLong instead of long and introduced an'statsList'list in the ConcurrentLRUCache class to improve
add a method to run the action on javafx thread to ensure that the action be run on the JavaFX thread
fix checkstyle issue in networkaddressmanagerimpl. java
[ opengrok ] set data root and source for the mainframe
added logging for enabled state in AdminClientBootstrapConfiguration and AdminServerBootstrapConfiguration to improve visibility into the enabled state of the Solon Admin client
refactor TableEnvironment class to improve code readability to enhance maintainability and ease future updates
refactored statement timeout handling in MapperBuilderAssistant. java and adjusted fetchSize method in ExecutorTestHelper. java to improve timeout management and
refactor JSweetTranspiler, TypeScript2JavaScriptWithTscTranspiler, and TypeScript2JavaScriptWithTscTranspiler to
added imports for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration. java to enable serialization of GeoLocationRequest and
replaced ` ImmutableSourceArtifactImpl. of ( PathSourcePath. of ( ) ) ` with ` BuildArtifact ` in ` ArtifactFilesystem.
tika - 3486 -- add test for j Excel file parsing
ggbapplet. setvalue ( ) now trigger concurrent modification
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 641
added tests for ` hasValue ` with different ` toStrings in ` GuavaOptionalSubject ` to provide clearer error messages when ` hasValue `
added a height check for the ALL _ APPS _ HEADER _ EXTRA in BackgroundAppState and updated mMidProgress logic in ShelfScr
fix a npe in the jme3d editor when the nav be null.
ggb - 2481 image : use ` ` center'' instead of ` center '
camel - jbang - fix typo in erroroccuredinonexceptionroute javadoc
updated logging level from info to debug in AstroDiscoveryService to improve visibility of discovery results for better debugging and monitoring
pdfbox - 4892 : simplify code, a suggest by valerybokov
added @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that hang indefinitely
updated import statements in GuiceFactoryTest. java to include specific dependencies to enhance the dependency injection framework for better dependency management
added a ` systemFeatureList ` map and overridden the ` hasSystemFeature ` method in ` RobolectricPackageManager ` to manage and
added a new constant PROP _ PATH _ POSTFIX and updated path handling logic in RCAFrameworkLoader. java to improve path handling and enhance
removed logging statement for cancellation watch dog to streamline the process by eliminating unnecessary logging
added null and length checks for enumerationValues to ensure enumerationValues is not empty before assignment to null to avoid potential NullPointerExceptions
renamed variables ` needInline ` and ` needInline ` to ` needStartText ` and ` needEndText ` for clarity to improve code
[ java ] add the ability to retrieve the remote ip from the server.
updated the column type change logic in UpgradeCatalog260. java to ensure proper handling of MySQL - specific columns in the database
( ) ) should not be open
updated method signatures in DatasetUtilities. java to improve code readability and maintainability
added selector ID to the key in Matcher. java to enhance clarity by including the selector ID in the key
updated debug log message format and transformation in GouraudShadingContext. java to improve readability and maintain consistency in logging format
updated taskbar visibility settings and added taskbar alpha handling to enhance user experience by improving taskbar visibility management
reorganized the order of parameters in KeyExchange. java to improve code readability and maintainability
added a check for JdbcConnection before executing the version query to ensure proper handling of SQL exceptions in the database connection
refactor index comparison logic in ServerMainTest. java to improve clarity and maintainability of the code
added methods to retrieve media recordering MIME type and image I / O for better media management to enhance media playback capabilities and provide access to media
make shaderhelper. useshaders ( ) public and useshaders ( )
[ calcite - 2280 ] fix druid adapter test
refactored the instantiation of ZkStateReader in CloudSolrServer. java to improve code readability and maintainability
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 506
added a new interface ` ClientRegistrationIdentifierStrategy ` with a method to provide a mechanism for managing client registration identifiers in the OAuth2 framework
replace if statement with while loop in UrlHelper. java to improve readability and maintainability of the code
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated its logic to improve clarity and
updated border property checks to use a new method ` borderIsNotSetOrBlank ` to improve clarity and maintainability of border property validation logic
changed log level from info to debug in WatchConnectionManager and WatchHTTPManager classes to reduce log verbosity and improve performance by reducing log verbosity
updated the ` register ` method to return a ` HubRegisterResponse ` instead of void in ` InternalDropAllCommandStep. java `
replaced ` & 0xff ` and ` & 0xff ` with ` byte. tounsignedint ( byte [ ] ) ` in multiple
[ hotfix ] fix checkstyle violation in opentrawtransactionproducer
changed the default value of DepFiles. ENABLED from CachingBuildEngine. DepFiles. ENABLED to CachingBuildEngine. DepFiles. CACHE to
changed the value of rangePannable from true to false to ensure that rangePannable is set to false instead of true
updated the logic for setting the main active page in AllAppsContainerView. java to improve code clarity and ensure proper handling of active pages
changed access modifiers from private to package - private in Visualizer2TopComponent. java to enhance encapsulation and improve code readability
added handling for CancellationException in FunctionTest. java to improve error handling for cancellation scenarios
changed constructors of JarFileResource from package - private to protected to allow subclassing of JarFileResource for better extensibility
refactor DefaultTrackSelector to improve track selection logic to enhance performance and reliability of the track selection process
added a loop to wait for unseqMerging in LevelCompactionTsFileManagement. java to ensure proper synchronization during unseq merging operations
updated fee currency from AUD to BTC in BTCMarketsAdaptersTest. java to reflect the correct currency used in the test
updated SQL query structure and modified test method names for clarity to enhance readability and maintainability of the test code
refactor Unicode class to improve code readability to enhance maintainability and ease future updates
updated the ` installAutoInstance ` method to accept a ` Service ` parameter and added functionality to update Hive LLAP settings based on the service
removed redundant line in SendHeadersFirstPublisher. java to streamline code by eliminating unnecessary lines
chore ( aws - sse ) : migrate aws - sse to aws - sse
added handling for BIG _ DECIMAL in RangePredicateEvaluatorFactory to improve error messaging for unsupported values in range queries
( ) ) should be ( )
removed print statements for annotations in ParameterInfo. java to clean up the code and reduce unnecessary console output
added support for AAC3 compression in PlaybackController and VideoManager to enhance audio playback options and improve playback handling
[ grid ] fix npe in localnode. getresponse ( )
added @ SuppressWarnings ( " deprecation " ) annotation to DelegatingStatement. java and DiskFileItem. java to suppress warnings related to deprecated
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT. java ` to validate SQL query generation to ensure
refactor RTimerTree class to improve code readability to enhance maintainability and facilitate future updates
updated package declarations for multiple classes from ` com. facebook. buck. rules. graphbuilder ` to ` com. facebook. buck. core
add test case and fix for issue # 3358
updated client thread and scheduler initialization in ClientConnector. java to improve clarity and consistency in thread naming for better debugging
changed visibility of ` treePane ` and ` resultPane ` from protected to private and added a ` errorCheckBox ` to enhance encapsulation and improve
added phone numbers and their values to the ScimUserEndpointDocs to enhance user documentation by including phone numbers and their associated values
changed class access modifiers from package - private to public and added private constructors in DeleteFiles, IndexFiles, IndexHTML, and SearchFiles classes
added null check for responseMap in JsonHttpPropertyRequest. java and improved error logging in URLStreamProvider. java to enhance robustness by
refactor SolrRequestHandler to improve code structure to enhance maintainability and readability of the code
added a condition to check if parallel is not equal to DEFAULT _ PARALLEL to ensure parallel execution only occurs when the default parallel is
fix checkstyle violation in testvmware and testvmwareutil
added support for SCARD _ E _ NO _ SMARTCARD in the TerminalImpl class to enhance error handling by accommodating additional
added SuppressSysoutChecks annotation to Test2BTerms. java to suppress unnecessary console output for a specific bug
camel - jbang - bindy : allow bindy to multiple key value in a single line
should not be disable by user
changed method signatures from ` runAndCheckException ` to ` runAndCheckException ` and introduced a new variable ` throwable ` to improve method clarity and
http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 6438 - avoid npe
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - sdb component
updated version number from " 4.1. 1 " to " 4.2 " and improved null checks in LiquibaseXMLTransformer. java to
increase default proxy. cert. validity to 90 day
replaced the ` smoothDelta ` variable with ` smoothDelta ` and introduced a new ` smoothDelta ` variable to improve the accuracy of delta calculations
added null check for ` paginator ` in ` HttpBatchReader ` and modified ` HttpUrl ` parsing logic in ` HttpBatchCreator ` to
added null check for CompactionInfo client in Worker. java and implemented tests for findNextCompact in TestWorker. java to improve error handling
refactor fragment state management in ShadowFragmentActivity to ensure proper saving and restoring of fragments in the application
updated formatting and improved readability in BatchResourceFactoryBean. java to enhance code maintainability and readability
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure proper functionality of color resource loading in the application
added exception handling for NoResultException in AbstractJPAQuery to improve robustness by handling cases where no results are found
fix npe in collection. getchildren ( )
updated depth preference retrieval from ` l ` to ` LawnchairApp ` to ensure compatibility with the latest Lawnchair features and
removed redundant import of ProcessTools in LocalManagementTest. java to clean up the code and improve readability
updated the ` updateTotalEnergyAverageUsage ` method to use the current head slot instead of a block timestamp to ensure accurate calculation of the total
added null checks for extensions and outgoing in ExtensionStack. java and implemented a test for it in ExtensionStackTest. java to enhance robustness
fix observable. flatmap. flatmap ( ). dispose ( ) when inner error occur
added connection timeout configuration to MultiGetRequest and updated its usage in ControllerStarter to improve connection management and enhance error logging for connection timeouts
updated the initialization of AndroidPlatformTarget in AndroidPrebuiltAarDescription. java to improve code readability and maintainability
replaced NewModelTest with ModelTest in LwjglDebugStarter. java to use ModelTest instead of NewModelTest
replaced SystemResourcesEdgeCursor with TenantResourcesEdgeEventFetcher in EdgeSyncCursor. java and updated setImage method in BaseImageService. java
updated caching logic in CachingBuildEngine. java and added a new test in CachingBuildEngineTest. java to ensure that output hash is not
camel - netty - fixed the issue of camel - netty
updated the partition alteration method to use Warehouse's qualified name instead of the old name to ensure accurate retrieval of the table's
updated the IllegalArgumentException to include a descriptive message to provide clearer guidance on how to create a Vertx instance with the preferNativeTransport option
[ type ] add test case for enumtypehandler serialization and deserialization
pdfbox - 4892 : fix typo, a suggest by valerybokov
removed hint settings for query and lock timeouts to streamline query execution by eliminating unnecessary hint settings
added a new file ` StaticLoggerBinder. java ` implementing the SLF4J logging framework to facilitate SLF4J logging
should not be a multiple of one ( # 2 )
added orientation handling in TaskbarManager to ensure proper layout adjustments based on the new orientation
replace xml escape with xml unescaping
updated longStackPut method call in StoreDirect. java and added unit tests in Issue265Test. java to ensure correct memory allocation and validate
added @ SuppressWarnings ( " mutable " ) annotations in multiple Java files to suppress various warnings and improve code clarity
[ jbrules - 3241 ] make test more resilient to other integration test.
updated conditional checks for audio and subtitle tracks in DLNAMediaInfo. java and improved logging messages in FFMpegVideo. java to enhance
updated NBWriteServlet constructor and modified TestWriteListener to accept an unlimted flag to enhance flexibility in handling unliminary data scenarios
updated the method ` updateTotalDifficulty ` in ` BlockchainImpl. java ` and added a new test in ` ImportLightTest.
removed redundant check for current window seekable in DefaultPlaybackController. java to streamline the code for better readability and maintainability
use copyonwritearraylist instead of synchronizedlist to ensure thread safety
updated calculations for bendAngle and bendDistance in AllAppsView. java to improve performance and accuracy of bend calculations
added a check for the presence of a colon in the key in HttpURLConnection. java to ensure proper handling of the':'key format
added PrincipalResolver as a parameter to the CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration class to enable dynamic resolution of principal resolvers
replaced ObjectMapper with Noggit for JSON parsing to improve performance and leverage Noggit for JSON parsing
added a method to remove trailing slashes from a StringBuilder in IoUtil. java to improve handling of trailing slashes in the StringBuilder
added methods to match various patterns in PatternsMatcher to enhance pattern matching functionality and improve test coverage
hbase - 25836 improve error message for loadincrementalhfiles
added potion handling for WATER events in BlockFire. java to enhance the fire's ability to handle potion events for improved game
removed unnecessary whitespace in the method signature of ` beginOrAdjustReorderPreviewAnimations ` to improve code readability and maintain consistency
updated calculations for decreasePercent and decreasePercent in ContractStateCapsule. java and adjusted usage calculation in ReceiptCapsule. java to improve
updated AsyncContentProducer and BlockingContentProducer to improve handling of read read read states to enhance asynchronous request management and ensure correct handling of read read
added null check for weightField in DocumentDictionaryFactory. java to ensure weightField is not null to prevent runtime exceptions
added variable extraction and testing for Info. plist variable substitution to ensure correct handling of plist variables in the Apple bundle
updated lancer lighting and entity properties in multiple classes to improve game stability and enhance gameplay responsiveness
refactor KucoinAdapters to use OrderCreateApiRequestBuilder for order creation to improve type safety and maintainability of the code
added a new file ` PreParseGrammarTest. java ` for testing XML grammar preparation to facilitate testing of XML grammar parsing functionality
fix doclint warning in java. desktop
added FontManager import and called overrideFont method in ExtendedEditText. java to ensure consistent font management across the application
added null check for the current user in AuthorizeTag and implemented a test for handling requests with no principal in AuthorizeTagTests to ensure
camel - 16400 : fixed the issue of defaultcomponent don't work with unsafe uri.
added setupdata ( ) method to jdbcgeometrytestsetup so it can be override by subclass
removed unused import of DumpHandler in MultipartFilterTest. java to clean up the code and improve readability
[ hotfix ] [ runtime ] throw flinkexception when fail to restore task
add a system property to allow the rmi registry to be create
use string. join ( ) instead of string. join ( )
updated qualifier tests to validate display metrics across multiple files to ensure accurate retrieval of display metrics across different Android applications
[ java ] add cluster member id to service heartbeat counter.
updated attribute handling based on major version to ensure accurate tracking of total thread allocated bytes based on version checks
added handling for double values in CustomExpression. java to ensure accurate hash code generation and prevent potential NullPointerExceptions
updated debug and error logging statements in AjaxListener. java to improve logging clarity and handle exceptions more effectively
added authentication routes and authorization methods to the AuthenticityController and implemented corresponding unit tests in AuthenticityControllerTest to enhance authentication functionality and ensure proper
added assertion to ensure ` nextNode ` is alive in ` LoweringPhase. java ` and restructured the assignment of ` FixedNode
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for HttpClientRequestImpl
fix issue where defaulttrackselector ben't compare correctly
refactor RuntimeSerialization class to improve serialization logic to enhance performance and maintainability of the serialization process
ggb - 2481 use cropbox when need
updated UnitOfWorkFactory. java file to improve performance and maintainability of the code
added a new variable ` allAppsCellWidthPx ` in ` DeviceProfile ` and updated its usage in ` WidgetPreviewLoader ` to improve
tika - 4891 -- fix npe in mailcontenthandler if content disposition file be empty
updated URI construction to use ` fileId ` and ` localId ` instead of ` getRemotePath ` and ` getRemotePath ` to improve clarity and
added support for marking and resetting input streams in Source. java to ensure proper handling of input marking and reset operations
added @ Deprecated annotation to multiple processor classes to indicate that these classes are outdated and should no longer be used
added configuration property for showing or hiding error stacks on the error page to provide a way to control the visibility of server errors in the application
cloudstack - 7142 : when delete an account, log a warning
sparc : don't throw bailoutexception if foreign call ben't available via jvmci
drool 5. x api : add support for legacy drool 5. x api
refactor ` onRequestPurchaseResponse ` method to use ` Display. callSerially ` for improved responsiveness to enhance code readability and maintainability
increased the default timeout duration from 100ms to 1000ms to allow more time for tests to complete successfully
reordered import statements in ShadowAssetManager. java and updated style handling in ShadowAssetManager. java to improve code readability and ensure correct resource
deleted the ` MrefStat. java ` and ` MrefStat1. java ` files to remove unused or redundant code related to method
replaced direct access to ` match. getRequested ( ). getScope ( ) ` with a utility method ` StringUtils. isBlank ( ) ` to
refactor error handling in BTCETradeServiceRaw. java to use static messages instead of try - catch blocks to improve code readability and maintainability
use hamcrest assertion instead of junit in test
add a method to retrieve payment request URLs from BitcoinURI and corresponding tests in BitcoinURITest to enhance functionality by allowing multiple payment requests
[ planner - 383 ] improve error message in abstractfrompropertropertyvaluerangedescriptor
removed duplicate setting of folder info in FolderPagedView. java to streamline code by eliminating redundancy
fix potential deadlock in jfrbuffernodelist and jfrchunkwriter
refactor null value handling in BasicAbstractTuple to use a for - each loop to improve code clarity and enforce non - null values
refactor LintUtility to use InputResource and improve file handling to enhance code clarity and maintainability while ensuring proper resource management
replaced direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a Runnable to ensure UI updates occur on the UI thread
updated inventory tick handling in Inventory. java to improve code clarity and maintainability
added case OCELOT _ BABY to PlayerEvents. java to handle additional gameplay events
[ hotfix ] [ state ] fix checkstyle violation in state ttl config
added null - check for parameter in set method to ensure proper handling of null values in PreparedStatement and Array classes
and a - - - - - - - - - - - - - - - - - - - - - - - - - -
replaced double quotes with single quotes in append0 method to improve performance and readability of the code
added a new test method ` jsonSnapshot ` for JSON serialization in ` SiteSnapshotVariationsTest. java ` to enhance testing capabilities for JSON
updated import statements and refactored the test method in BroadTest. java to improve code readability and encapsulate transaction and block removal logic
added channel state handling for LensMaskOpen, LensMaskClose, and LensMaskEnabled in AmcrestHandler and Dah
removed the ` throws NoSuchBuildTargetException ` declaration from the ` getBuildTargetForFullyQualifiedTarget ` and ` resolveBuildTarget ` methods to simplify
refactor ChangeLogIterator constructor to accept a List of ChangeSetFilters instead of a List of ChangeSetFilters to improve flexibility in handling different change
added handling for guest exceptions in PolyglotLauncher. java to improve error reporting for guest exceptions during execution
replaced ` System. getenv ( " OPT _ OUT _ TRACKING " ) ` with ` Utils. getEnvOrSystemProperty ( "
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization and deserialization of these classes
fix space visit for annotation array initializers
# 714 - enh : add copy ( boolean nearcache ) to servercacheconfigurationholder
added a new test method for verifying the visibility of a hidden border in the VisualRegressionTest class to ensure that the hidden border behaves as
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator. java ` and
replace LIVE _ URI with PROD _ URI in KucoinExchange. java to improve clarity and maintainability of the code
updated string concatenation syntax in SpringResourceAccessor. java to improve code readability and maintainability
added unit tests for microgram per cubimeter and microwatt in SmartHomeUnitsTest. java to enhance unit validation and improve unit
updated the method for retrieving vertex mask from ` getMask ( ) ` to ` getMaskWithSizePacked ( ) ` to improve the accuracy
deleted the Tls12SocketFactory. java file to remove obsolete code that is no longer needed in the project
refactor ( texbibentryresolver ) : use stream instead of stream
added a method to check if Robolectric is in legacy mode to ensure compatibility with newer Robolectric versions
added a check to return " DOUBLE PRECISION " for FirebirdDatabase to ensure correct data type is used for DOUBLE PRECISION in
added null checks for dataSource and transactionManager before setting it to ensure proper initialization and avoid potential NullPointerExceptions
add a test case to make sure gestalt. api be in a different package
updated command from " ping - c5 www. google. com " to " ping - c5 127.0. 0.1 " and modified test
no effective change - code cleanup - use try with - resources
updated TermScorer instantiation to conditionally use PostingsEnum. FREQS or FREQS based on scoreMode to ensure correct scoring behavior
[ beam - 10471 ] fix npe in dataflowmetricstest
cloudstack - 7143 : fix the bug in listvirtualmachine api when the vm be in a cloudstack instance
refactor DynamicPartitionPruner to use a new findTargetOi method for better object inspector retrieval to improve code clarity and maintainability by
added a method to remove build artifacts from the ArtifactFilesystem class to improve artifact management by allowing users to delete specific artifacts in the execution context
added logic to set the selected row interval for the table table to ensure the table does not select multiple rows for improved user experience
replace assertarraystoreexception with assertarraystoreexception in integration test
refactor PropertySource to improve code readability to enhance maintainability and facilitate future updates
added user agent configuration to HttpClientBuilder and updated related methods accordingly to enhance flexibility in user agent customization for HTTP requests
refactor session creation and restoration into a computeIfAbsent method to improve code readability and maintainability by consolidating session restoration logic
modified the return type of the ` getResults ` method and changed the collection type from ` HashSet ` to ` Set < Object > ` to improve
updated ByteArrayDataSource initialization to use a dynamic content type if available to improve flexibility in handling file content types
change actiationid to activationid, add event. getactivationid ( ).
added @ suppress warning and improved code formatting in GraphApplet. java to enhance code readability and maintainability
added a new method ` updateTaskViewsSnapshotRadius ( ) ` in ` RecentsView. java ` and updated its implementation in ` Task
added logging and updated schema generation logic in StaticMicroserviceVersions. java to improve traceability and debugging of microservice schemas
changed return type of put methods from void to int in ArrayMap. java to provide a more appropriate return type for the put method
updated KafkaContainerCluster configuration to set startup timeout to a fixed value and improved the handling of brokers in KafkaContainerCluster. java to enhance
fix the issue that defaultmqpushconsumerimpl don't send message back
refactor header checking logic in StaticServerHttpHeadersWriter to improve clarity and maintainability of the header writing process
added package access check before adding a listener to the list to enhance security by ensuring access control before adding it to the list
added a new ` CustomAdapter ` class and modified ` ApplicationsFragment ` to use an array of applications to enhance the application's functionality by
modified the applyIcon method to accept a nullable Task parameter to enhance null safety and prevent potential NullPointerExceptions
use try - with - resources to ensure proper resource management
fix nullpointerexception in basqmtosqlastconverter
added JUnit test annotations and changed method name from ` onSetUpInTransaction ` to ` onSetUp ` and ` onSetUp ` to improve test
[ java ] use readallbytes ( ) instead of poll ( ) to read from the input stream
added ENABLED _ TS case to VersionedTargetGraphCache and imported ToposortBasedDepsAwareExecutor in VersionTargetGraphMode. java to enable
updated UpgradeCatalog150. java to improve code structure to enhance maintainability and readability of the codebase
rename networkparameters. testnet ( ) to networkparameters. testnet ( )
ggb - 2481 don't update select object if selection don't change
updated onboarding preferences handling in AppsDividerView. java and added nullability annotations in ActivityContext. java to improve code clarity and
updated HdfsIndexOutput to extend BufferedIndexOutput and modified related methods to enhance resource management and improve error handling
pdfbox - 4892 : don't set clipping if there be no path
removed synchronization block in SocketChannelImpl. java to simplify the code and improve readability
refactor TemplateTransformer to improve row handling by introducing a new ` addToRow ` method to enhance code readability and maintainability while ensuring correct
added a method to check if the operating system is Windows and refactored file renaming logic to improve code readability and maintainability by centralizing
replaced ` CHARACTER _ ENCODINGS [ 39 ] ` with ` CHECK _ DIGIT _ STRING ` in ` Code39Reader ` and ` Code
fix handling of unexpected value for generic return type
removed redundant field type check in IndexingChain. java to streamline code for better readability and maintainability
updated interval processing logic to handle nanosecond timestamps to ensure correct parsing of timestamps with nanoseconds in where clause
removed conditional check for postedRunnableStacktraces before adding it to the runnables list to simplify the code by eliminating unnecessary null checks
( ( ) ) ) should be''
replaced ` assertInitialized ` method with ` waitUntilInitialized ` and introduced a new method ` waitUntilInitialized ` to improve synchronization and facilitate future
updated directory paths from null to " single " in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to use " single " instead of null
refactor FaultTolerantChunkProcessor to use filterCount instead of size and update related methods accordingly to improve clarity and maintainability of the code
updated method signatures and improved error handling in T4994049. java to enhance code robustness and maintainability while addressing potential issues
replaced multiple conditional checks for WindowsTerminal with a single method ` assumeTrue ` to improve code readability and maintainability
[ wip ] remove unnecessary permission check in getfeedbacksession
updated calculations for newSelection and adjusted threshold values in AllAppsView. java to ensure correct selection behavior and prevent out - of - bounds errors
bugfix # 254482 - do not notify client result availability when initialize ( ) be call
added functionality to load and refresh the model list in DataModelManagerDialog. java and modified connection handling in DbConnectionDialog. java to improve
replaced hardcoded string concatenation with a constant for better readability to improve code maintainability and reduce potential errors in string concatenation
updated the ` newSegmentSize ` method to use ` SegmentInfo ` and ` sizeInBytes ` instead of ` segmentSize ` to improve performance
fix an issue that could cause a npe to be throw when a mesh have no dvert.
refactor FileDisplayActivity to improve code readability to enhance maintainability and facilitate future updates
added an instance of UnsupportedOperationException with a fillInStackTrace method to improve exception handling by returning null instead of throwing an exception
replaced ` getLabelBounds ( ) / lines. size ( ) ` with ` lines. stream ( ). average ( ) ` to improve performance
updated RotationTouchHelper to accept a DisplayHolder parameter to enhance flexibility by allowing customizable display management
refactor string handling in AVA. java to improve readability and maintainability of the code
replace Long. valueOf with IdConversion. convertToLong in ServletHandlerInterceptor. java and add unit tests in ServletHandlerInterceptorTest. java to
added a new test method ` testSmall ` and a new test method ` testBig ` in ` ServerDatagramConnectorTest ` to improve
updated the assertion message format in TestSqlEntityProcessorDelta. java to improve clarity and consistency in the test assertions
updated caching logic in Cache. java to improve performance and reliability of data retrieval
updated the event name from " e " to " ev " and modified the scope from " scopes " to ensure consistency in naming conventions and improve
modified the ` doBefore ` method to accept a ` false ` parameter and adjusted the initialization of ` IndexSearcher ` to ensure proper handling of
added a GUI component to display a table with a row to provide a user interface for testing G - code table functionality
updated the WebSocket connection timeout check to use a configurable connection timeout instead of a hardcoded value to improve flexibility and configurability for web applications
updated generic type for envelopedTransform list and improved logging message formatting to enhance type safety and clarity in error reporting
updated references in TestMediaService. java to improve code clarity and maintainability
removed unused private static String HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK in Messages. java to streamline code by
add a new file ` MarketsPrintTool. java ` that implements a utility for listing fiat and cryptocurrencies to facilitate
added validation for component names in EndpointAddressInterceptor to enforcement of sensitive characters
added security key registration methods to AccountProxy and HttpAccount classes to enhance security key management and improve request handling
refactor ServerSpanThreadBinder class to improve thread handling to enhance performance and reliability of server span processing
fix a bug in bullet physic that would cause the game to crash.
updated the builder to include " the _ geom " and " number " instead of " Location. class " to enhance the data structure for better
updated variable name from callGasWord to gasCost in VM. java and removed unnecessary imports in Program. java to improve code clarity and
refactor Parameters class to improve code readability to enhance maintainability and ease future updates
added a call to ` piePlot. setIgnoreNullValues ( true ) ` in ` MultiplePiePlot. java ` to ignore null values
refactor bundle loading logic to streamline cache management to improve code readability and maintainability
changed the character set from'_'to'-'in TaggedPdfReaderTool. java to ensure consistency in character naming conventions
fix a bug introduce by http : / / github. com / jmonkeyengine / jmonkeyengine / issues / 506
set userModified to true in LoginSamlAuthenticationProvider. java to enable user modification functionality during SAML authentication
added a new file TestSealedObjectNull. java that implements a seal object with null values to validate that Seal objects are correctly
renamed the method ` onOpen ` to ` setResponse ` and updated its implementation in ` ConnectPromise ` and ` WebSocketClientConnection ` to improve
added SNOW material and updated related checks for snow events to improve handling of snow events based on server version
updated trade ID handling in CryptsyAdapters and added a new ID field in CryptsyPublicTrade to improve trade tracking by associating tr
added error handling for closing HMS connection to ensure proper resource management and avoid potential memory leaks
update glowserver seed to use random instead of currenttimemillis
( ) ) should be a device ( # 5 )
2. x : fix npe when disconnect before connect ( # 5596 )
replaced instances of ` type. newInstance ( ) ` with ` ReflectUtil. newInstance ( type ) ` to utilize ` ReflectUtil. newInstance (
added support for PHP _ AROUND _ TEXTUAL _ OP formatting in FormatVisitor and TokenFormatter classes to enhance formatting capabilities for whitespace - related
added checks for file existence and file existence in SaveTask. java and introduced new test methods in SaveAndLoadTaskTest. java to ensure
added synchronized keyword to several methods in MLogWriter. java to ensure thread safety during concurrent access to these methods
add support for mutable logevent in smtpmanager. add ( )
updated the PADDING property builder from LengthLike to NonNegativeLengthLike to ensure that the PADDING property uses a non - negative length like
replaced calls to ` getUser ( headers ) ` with ` createContext ( ) ` across multiple files to streamline context creation by eliminating unnecessary
refactor method to improve trap handling to enhance readability and maintainability of the code
updated JUnitRunner and AndroidPlatformTarget to use Joiner for string concatenation to improve readability and maintainability of the code
increased cacheSize from 16 to 8 in OmniNotes. java to optimize memory usage for improved performance
updated condition in InvocationStageTrace. java and modified test cases in TestInvocationPublishModelFactory. java to enhance error handling and improve test coverage
don't throw npe when load a sunpkcs12 key store
updated server port handling in UpstreamCheckUtilsTest. java to use a dynamic port instead of a fixed value to improve test reliability by
ggb - 2481 : change panel dimension to the new parent of the panel
) should not be block ( )
refactor PopulatorContext class to improve code structure to enhance maintainability and readability of the code
only send saveall notification if the project be project data
refactor ZQLJobManager to use Apache Commons IO for file encoding handling to improve code readability and maintainability by reducing boilerplate code
added a check for non - empty arguments in the IkStepDefinition class to ensure that the argument length is greater than 0 before proceeding
replaced string literals with constants in FakeOSSOHeaderDecoder. java to improve maintainability and readability of the code
camel - main - maven - plugin to generate spring - boot tooling metadata
removed unnecessary debug log statements in DerbyDatabase. java to streamline log output for better readability and performance
[ jbrules - 3482 ] increase test timeout to 5 second
replaced parallelStream ( ) with stream ( ) in PersonNameSuggestionProvider. java to improve performance and readability of the code
refactor HubUpdater. java to improve handling of operation type and message formatting to enhance clarity and maintainability of the code
added new constants for Java and Eclipse OpenJ9 VM in Constants. java and a corresponding test in TestDDRExtensionGeneral. java to
refactor font addition logic in FontFamily. java and add a new DebugFonts. java file to improve font handling and facilitate debugging
removed unused SSLEngineResult import and added HTTP version check in NegotiatingServerConnectionFactory to improve code cleanliness and ensure compatibility
added RateControl import and set rate control to NO _ RATE _ CONTROL in MaxConcurrentStreamsTest to improve HTTP / 2 performance by disabling
added a new file Test6741426. java with a Runnable implementation with JComboBox and JTextField to implement a Nimbus look and feel
updated the assertion in CsrfAwareEntryPointAndDeniedHandlerTest to include the exception message to provide more detailed error information for CSRF token verification failures
added checks for ` dbMgdPath ` and ` dbExtPath ` in conditional statements to ensure that ` madeManagedDir ` and `
s3 : move s3copyobjectrequest to package com. cloud. bridge. service. core. s3
replaced ` accentColor ` with ` viewThemeUtils ` for setting categories to streamline theme management and improve code maintainability
[ test ] fix temporaryfolderusagetest failure
updated references from ` MAP _ TYPE _ INFORMATION ` and ` COLLECTION _ TYPE _ INFORMATION ` to ` ClassTypeInformation. MAP
fix npe in clientnetworkconfig # addaddress ( string, string )
added " keynectisrootca [ jdk ] " to the VerifyCACerts class to enhance certificate validation with relevant certificates
[ java ] change return type of compute ( ) method from void to int to allow more than return value.
added a conditional check before setting menu mode in ModeToggleMenu. java to ensure menu mode is only set when the popup is not displayed
pdfbox - 2576 : fix arrayindexoutofboundsexception in memoryttfdatastream. read ( )
added a new test file ` FinalizerInfoTest. java ` to validate the functionality of the ` FinalizerInfo ` class to ensure that
replaced ` map ` method with ` doOnNext ` method in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator ` classes to improve
use custom _ address for burning _ man _ compensation _ address if not present
refactor StringSubject class implementation to improve code readability and maintainability
updated byte array size in BatchValidateSignContractTest. java from 1, 000, 000 to 1000, 000 and added @ Ignore annotation to
renamed the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to improve clarity and consistency in method naming
replaced " @ " with " from : " in the Search. java file to ensure consistency in query formatting
added a conditional statement to check for recovery status to improve performance by avoiding unnecessary processing for recalculations
added a new endpoint for importing and saving YubiKey accounts in YubiKeyAccountRegistryEndpoint to enhance the endpoint's functionality
updated shader program names and improved error messages in multiple files to enhance code clarity and provide clearer error messages for texture resolution failures
modified paintOnTopLoop condition in Container. java and added safe area adjustments in SideMenuBar. java to ensure proper handling of safe area
refactor AbiWriterProtocol to improve code readability to enhance maintainability and ease future updates
added null check for subName before assigning it to caption to avoid potential NullPointerException when subName is null
changed data flag from IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem. java to align data flag with the new
added null checks for sim in CustomExpression. java to enhance robustness by preventing potential NullPointerExceptions
remove unused method and move it to missdatarequestservice
added a test case for JDBC connection configuration in PostgresTest. java to ensure the application behaves as expected with different database configurations
updated substring logic in SubtitleUtils. java and RemoteUtil. java to use a single quote instead of a single quote to improve code readability
updated line splitting logic to use a constant for line separators to improve maintainability and readability of the code
use fieldupdater instead of atomicreference to improve thread safety
added null check for excludedSet before adding queries to the query list to prevent potential NullPointerExceptions when excluding certain queries
feat ( bridge ) : add child of the same thing to the list of child ( # 5451 )
replaced calls to ` printHelp ( ) ` with ` error ` for command validation to improve error handling and provide clearer feedback during command execution
added a check for the existence of the output file before proceeding to ensure that the file exists before proceeding with further processing
added support for parsing date strings with'T'and'+'characters in DateConverter to enhance date parsing functionality and ensure correct parsing of
added test for high - performance - java - persistence in SpringDataJPALockTest. java and updated PostRepository. java to include a
changed the type of the ` canAccessDbaRecycleBin ` variable from ` boolean ` to ` Boolean ` and refactored the
added a simple client request factory for HTTP requests in ClientRegistrations. java to enhance HTTP client configuration and improve connection reliability
updated SourceTest to validate file existence and name to ensure accurate validation of file paths and their parent paths
remove static initialization of graalvm _ version property
added checks for access token validity and refresh token validity in ClientAdminBootstrap to ensure proper configuration of the client's token validity settings
updated return statement to include Android API version check to ensure compatibility with different Android API versions based on user options
( chore ) camel - core : remove redundant'this'keyword
removed unnecessary formatting in the Subject Public Key Algorithm string to improve code readability and maintain consistency in formatting
updated ZkSolrClientTest to manage collections in a concurrent manner to improve synchronization and prevent potential race conditions during collection processing
removed the import of BigInteger and its usage in the MongoMappingContext class to streamline the code by eliminating unnecessary imports
added a condition to check if the button text equals the string " view " to ensure that the toast message is only displayed when the button text
added a condition to check if ` isMencoderNoOutOfSync ( ) ` is disabled when ` disableMc0AndNoskip
increase event loop size from 10 to 15 to allow more time for event loop threads
changed visibility of the CountMin4 class and its methods from abstract to protected to enhance accessibility and encapsulation of the CountMin4 class
added a method to retrieve file float source and created a new test class for sorting to enhance sorting functionality and improve test coverage for external file field
changed error message from " Invalid URL " to " Connection error " to provide clearer context for error handling
updated event handling in OpenRocketSaver and added source ID setting in DocumentConfig and FlightDataBranchHandler to improve event processing accuracy and
changed method visibility of ` check ` from private to protected to allow subclassing of the ` check ` method for better extensibility
added handling for SynchronizeFileOperation in FileActivity to improve file synchronization functionality and user experience
updated URI construction and request headers in ThumbnailsCacheManager. java to improve URL encoding and ensure proper handling of file paths
added a null check for " cn1 $ infinite " client property in InfiniteContainer. java to ensure that the application does not attempt to
updated the calculation of the total in IntHashSet to improve performance by optimizing the calculation of the total value
added lock timeout logging for feed updates to improve error handling for locked entries
refactor conditional statements in SolarisAclFileAttributeView. java to improve readability and maintainability of the code
replace list with array. sort ( ) for good performance
added IOUtils import and improved resource management in ZkCLI. java to ensure proper resource handling and prevent potential memory leaks
replace \ \ n with [ \ \ x0d \ \ x0a ] for comment in bibtexparser
added strict parameter handling in Main. java and corresponding unit tests in MainTest. java to enhance flexibility in property parsing and ensure correct handling of
add custom constraint validator ( alwaysvalid )
camel - http4 fixed the unit test error of camel - http
added a method ` waitForThingsToLevelOut ( 30000 ) ` to ` TestCloudPivotFacet. java ` to facilitate
removed redundant checks for Integer. MAX _ VALUE and Long. MAX _ VALUE in UBJsonWriter. java to streamline the code for
updated ApplicationTest. java to improve test coverage to enhance reliability of application tests
replaced String details with StringBuffer details to improve performance and readability of the code
rename ` Type ` to ` RoboType ` across multiple files to improve clarity and consistency in type handling
[ java ] abort the reading of all stream once dispatch be complete for archive descriptor pollers .
added cache key and cache lookup attribute to the entity processor to enhance data access capabilities and improve error handling for missing cache key and lookup
added a new file PutfieldError. java that throws an exception for incompatible class change errors to demonstrate the use of IncompatibleClassChangeError in
[ iotdb - 6391 ] fix a problem when the client try to connect to a public address ( # 6391 )
add more logging to memtable. getmemtable ( )
replace ` Space. build ( ) ` with ` Space. SINGLE _ SPACE ` across multiple files to improve code readability and maintainability by using
replaced the existing encodedLength ( ) method call with a new implementation to streamline the code by eliminating redundancy
renamed TestMethodResultMapBuilder. java to improve clarity and maintainability of the code
don't call XFactory. createXMethod if there's an exception in a try - catch block.
[ hotfix ] remove unused lock in tasklocalstatestoreimpl
updated string return values from " m " to " m " and " h " to " m " and " d " to improve clarity and
updated condition checks in Utilities. java and FloatingIconView. java to handle DeepShortcutView and DeepShortcutView more effectively to improve shortcut handling
changed the type of the ` validator ` from ` JwtClaimValidator ` to ` JwtClaimValidator < Object > ` and updated its
refactor CoinmateQuickRate methods to improve quick rate retrieval to enhance code clarity and maintainability by centralizing quick rate retrieval logic
added a new configuration class ` CoverageConfig ` and refactored ` CoverageController ` to use it to improve code organization and maintainability by
added a check for non - registered EventBus before registering sticky to prevent unnecessary registration of sticky event listeners
added logic to determine if the input string is ASCII or only based on its length to improve performance by eliminating unnecessary normalization operations
[ hotfix ] [ runtime ] use ismigrationtasksallowed ( ) instead of ismigrationallowed ( ) to check migration
added exception handling for SQL execution failure in SpillableGroupByIT and NoOpStatsCollectorIT to improve test reliability by ensuring proper
camel - main - maven - plugin : upgrade camel - cometd to junit4
updated attributes in HtmlTag. java to include " OK " and " CELLPADDING " and " CELLSPACING "
added a line to the HTML output in HtmlCoreReport. java to improve the readability and structure of the HTML output
updated the calculation of ` ramBytesUsed ` in ` DocSlice. java ` to handle cases where ` scores ` may be null to ensure
updated CustomTypeAdaptersTest to use Gson's InstanceCreator for StringHolder and added custom serialization and deserialization methods to enhance JSON handling capabilities
update extra data in MergeCoordinator to include mining parameters to ensure correct handling of extra data in the MergeCoordinator
added a ` numArgs ` map to track the number of arguments to enable dynamic configuration of the number of arguments passed to the dependency parser
refactor PathParamServerEndpointConfig class for improved clarity to enhance maintainability and readability of the code
[ migration ] ensure that migration rule listener be shut down even if the default threshold be set to 60000
renamed parameter ` part ` to ` partOrList ` in ` RestClientRequest ` and ` RestClientRequestImpl ` classes to improve clarity
jbrules - 2576 : move bootstrap - responsive. css to twitterbootstraputils
removed the basicCategory method and its implementation from SpanishTreebankLanguagePack. java to streamline the code by eliminating unused
hhh - 14632 add default load ( object id, lockoptions ) method to abstractentityloader, deprecate entityloader. load
hbase - 25836 regionserverflushtableproceduremanager. removeall ( ) shouldn't be call in a loop ( #
don't call super. setSize ( ) if width or height be zero
fix typo find by codespell on fossies. org
updated assureMatchVersion method to initialize luceneMatchVersion to LATEST to ensure compatibility with the latest Lucene version requirements
fix : don't write abstract method from default method
added a conditional check for input. LA ( 1 ) before matching strings in DRLParser. java to improve input validation logic for string input
refactor GuavaOptionalSubject, IterableOfProtosSubject, MapWithProtoValuesSubject, and ProtoValuesSubject classes to improve code organization and maintainability
don't throw an exception if the payload length be negative.
move'publishsubscribechannel'from'channel'to'dispatcher '
updated execution ID type from String to Long in multiple Java files to accommodate larger execution IDs and improve data handling
pdfbox - 2576 - 2576 : fix imageprocessor. transcode ( ) to work correctly on window.
removed logging of overlay version in SolrConfig. java and added new imports in SolrConfigHandler. java to improve logging clarity and facilitate
update delayUntil calculation from a fixed value to a dynamic value based on the current time of the sync result
[ iotdb - 3482 ] fix the test case of segmentv1v2tov3formatconvertertest ( #
refactor path handling in QueryProcessExecutor to use Path instead of a String to improve code readability and maintainability
updated DefaultPackageScanClassResolver to handle file paths and improved error logging to enhance URL handling and provide clearer error messages for better debugging
[ flink - 20536 ] [ table - common ] introduce timestampextractorutils to extract more field from timestamp
added a new class ` SpringSecurityAuthenticationSource ` that implements ` LdapUserDetails ` and ` AnonymousAuthenticationToken ` to provide authentication source functionality
updated AbstractConcurrentArrayQueue and ManyToOneRingBuffer implementations to improve concurrency handling and performance
updated the minimum SDK version from LOLLIPOP to KITKAT to ensure compatibility with newer Android versions
replaced Dialogs. autoSuggestDialog with SimpleFormDialog for improved file suggestion to enhance user experience by displaying a custom file instead of a
added a new test method ` testNewput ` to ` TxInputUtilTest ` and updated asset issue assertions in ` StoreAPITest `
updated the stream method signature in MongoTemplate. java to remove unnecessary collection name parameter to simplify the method signature and improve code readability
updated zoom factor calculation and changed map zoom method to use float type to improve code clarity and ensure consistent zoom handling
added similarity handling to the KNearestNeighborClassifier class to enable customizable similarity settings for improved search results
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler. java to improve query performance by utilizing ConstantScoreRangeQuery
updated reasons from ` toString ( ) ` to ` getReason ( ) ` in ` LowResourceMonitor. java ` to improve clarity and consistency in
updated package - info. java files for mmm and ppp to improve documentation clarity and maintainability
added tests and modified the ` requestMtu ` method in ` ShadowBluetoothGattTest. java ` to ensure correct handling of mtu requests
refactor TestPayloadNameRequestWrapper to use createServletOutputStream ( ) instead of directly returning the input stream to improve code readability and maintainability by
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling and logging for unsatisfied links
replaced HashMap with ConcurrentHashMap for mProcessingChains to improve thread safety and performance in concurrent scenarios
updated Japanese resource strings to include " all, " " grouped, " and " summary, " options to improve clarity and accuracy of resource
updated conditional logic in JDBCTypeMapping. java and adjusted test assertions in JDBCTypeMappingTest. java to improve code clarity and ensure correctness in
added synchronization to the ` addPlayer ` and ` removePlayer ` methods in ` GenshinScene. java ` to ensure thread safety during
refactor accessibility handling by introducing regex patterns and modifying state management to improve performance and maintainability of the code
added support for SIDE _ NAVIGATION in MenuBar. java and adjusted related conditions in SideMenuBar. java to enhance functionality by
refactored the subscription syntax in PoloniexManualExample. java and improved error handling in WampStreamingService. java to enhance
updated energy limit validation logic in UpdateSettingForEnergyLimitContractActuator. java to ensure that energy limits are greater than 0 instead of less
refactor URL handling in PostmanJsonBuilder and add protocol property in UrlBean to improve code clarity and maintainability by using a more descriptive variable
camel - soap : added getter / setter for the namespaceprefixref in the soapjaxbdataformat
updated assertions in TestRange. java to use a new static final variable for time comparison to improve code readability and maintainability by reducing redundancy
added security status verification for the Jetty Solr server in BasicAuthIntegrationTest. java to ensure proper handling of authentication requests and validate security status in
added priceFeed field to TradesChartsViewModel and updated its constructor to include it to allow customization of the price feed based on user preferences
refactor replication configuration handling in PhoenixHBaseLoaderIT and PhoenixBaseStorerIT to improve clarity and maintainability of configuration management
replaced ` from ` and ` from ` with ` end ` and ` length ` variables in ` NativeString. java ` to improve clarity and
added a FileDataStorageManager instance and saving a file in FileDownloader. java to enhance file management functionality during download
[ java ] set log length before write to a randomaccessfile in mappedrawlog.
added methods to check if a registry is running and to delete a file with retries to improve reliability and prevent resource leaks during file operations
updated imports in EditTest, Quick3dMain, and TextureTest to use componentPresetDao. startLoading ( ) instead of importing
removed private variables and added @ SuppressWarnings annotations in multiple Java files to improve code clarity and suppress unchecked warnings
added null check for instances in TraceFeignContext to prevent potential NullPointerExceptions when instances are null
added support for setting the isolation level to TRANSACTION _ READ _ COMMITTED or TRANSACTION _ REPEATABLE _ READ _ COMMITTED to enhance flexibility
added transactionAttribute handling in AbstractStepFactoryBean and updated exception handling in ItemOrientedStep and SkipLimitStepFactoryBean to improve transaction management and
updated CasManagementWebAppConfiguration to use DirectCasClient instead of CasClient to improve client management by using directCasClient instead
updated menu item visibility and edit category functionality in ListFragment and NavigationDrawerFragment to improve user experience by providing context for the add category menu
renamed the method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation. java ` and updated method names in ` FileDisplay
pdfbox - 2576 : use pdstructurenode. create ( cosdictionary ) instead of pdstructurenode. create ( cosdictionary )
updated font size handling by changing the method name from ` getFontSizeChanged ` to ` getTextSizePx ` to improve clarity and consistency in font
added validation for ConstantFrame in ConstantAnalysis. java to ensure that invalid frames are only added to the frame
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
replace direct return of spans with a new ArrayList instance to ensure that the returned ArrayList is mutable and avoids unintended modifications
removed unnecessary locking mechanism in Liquibase. java to simplify code and improve performance by eliminating unnecessary locking
added a method to set the revision in MicroserviceVersions and updated InstanceCacheChecker to set the revision to null to ensure that the microservice
refactor foreign key name handling in TableRetriever and AbstractRetriever classes to improve clarity and maintainability of the code
camel - aws2 - s3 : added unit test base on user forum issue
removed the ` currencyPair ` parameter from the ` getBitstampUserTransactions ` method and added a new ` getBitstampUserTransactions ` method to
added exception handling for retrieving the component instance in BlueprintContainerRegistry to improve robustness by handling potential NoSuchComponentException
enable push by default for http / 2 and http / 1.1
refactor legacyaddresstest to read test data from a csv file
changed the visibility of the findDropTargetAt method from package - private to public to allow access to the method from other packages
refactor push notification setup by introducing a dedicated setupPushWarning method to improve code readability and maintainability by centralizing the setup logic
http : / / issues. apache. org / jira / browse / amq - 3573 - close channel even if there be no
updated null checks to use StringUtils. isEmpty ( ) for better readability to improve code reliability and avoid potential NullPointerExceptions
refactor DefaultAnnotationEngine and Stubber classes to improve code readability and maintainability
added an @ Ignore annotation to MemoryManagerTest. java to mark the test as ignored due to PHOENIX - 2840
nifi - 1218 : added timezone to the about object
fix splitoutofboundsexception ( patch by jbellis )
removed exception handling for reading objects in BeanContextSupport to simplify code and improve readability
fix a race condition that could cause a concurrentmodificationexception.
replaced GdxRuntimeException with IllegalStateException in ShaderProgram. java to improve error handling by using a more specific exception type
[ java ] move source and sink from pollablesourcerunner to pollablerunner
changed logging level from error to info in FastBindLdapAuthenticationHandler to provide more detailed information about authentication failures
refactor ContainerOrderFocusTraversalPolicy for improved clarity to enhance maintainability and readability of the code
pdfbox - 4892 : make sure we don't return double for freehand function
removed unnecessary whitespace in CasRiskBasedAuthenticationEvaluationStartedEvent constructor to improve code readability and maintainability
refactor connection handling and improve logging in SchemaCrawlerMain and Executable classes to enhance connection management and ensure proper resource closure during execution
bump default tl version to v1.2 with a fallback for old jdks
updated exception messages in CountersManager. java to reflect correct error handling to improve clarity and accuracy of error messages
modified audio queue position handling in MediaManager. java to improve audio playback logic and ensure correct playback position is set
removed unnecessary debug log statements in HttpConnection. java to simplify logging for improved readability and performance
added support for transient fields in JpaPersistentPropertyImpl to enhance data handling capabilities for transient properties
updated stack version assertions in UpgradeResourceProviderTest. java to ensure correct versioning for HDP 2.2. 0
truffleruntime. eval ( ) now return an object instead of a symbol.
make method public and add debug statement for binary type detection
updated the maximum data size parameter in TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE from " max.
remove unused code from jdt
removed DEFAULT _ OFFHEAP constant from DictionaryIndexType and its usage in BloomFilterHandler to simplify code and improve maintainability by eliminating
updated string formatting in TableWriterTest. java to use a configurable line separator to improve maintainability and readability of the code
refactor DebugHelper class to improve code readability to enhance maintainability and ease future updates
added a boolean field ` ownsTexture ` in ` ParticleEffect. java ` to check if the texture owns the particle effect
added new configuration parameters for LDAP authentication settings in HiveConf. java to enhance configuration options for LDAP authentication in the application
chore ( datatransaction ) : add miss license header
refactor InputMethodManager usage in DetailActivity. java to improve code readability and maintainability
added a test case for converting a primitive value to a map of primitive type to object in DataTableTypeRegistryTableConverterTest. java to ensure
updated the size of the file system from 100, 500, 000 to 10, 50, 000 in TestFileSystem. java to improve resource management
updated error messages in ContentTypeManager. java to improve clarity and accuracy of error messages
refactor ` dropSequences ` method across multiple database classes to implement a unified ` dropSequences ` method across different database classes
added null check for status in MainWindow. java to prevent potential NullPointerExceptions during execution
updated the way binaryField is created by assigning it to a variable to improve code readability and maintainability
don't show tree icon if it's not active
added a test method to verify upsert behavior for non - existing objects in MongoTemplateTests to ensure correct handling of upsert operations for non - existing
hbase - 25836 fix the calculation of the'mid'in multiple Java files to ensure correct computation of the'mid'variable across
added stats tracking for app launches in Launcher and Stats classes to improve tracking of app launch statistics for better debugging and monitoring
updated graphics handling in JavaSEPort. java to use Graphics2D for rendering to improve performance by eliminating unnecessary graphics operations
[ # 7653 ] instructorfeedbackresultspageuitest : add team to list of result page ( # 7653 )
don't generate an inventory id if the player don't have a player
added a conditional check for the ` found ` state before breaking the loop in ` ConfigDescriptionRegistry. java ` to improve robustness by avoiding
added returnType = = null to multiple visitor classes to handle cases where returnType is null to improve code robustness by preventing potential NullPointerExceptions
modified the initialization of the blended tiles array to use an IntArray instead of a single CSV value to improve flexibility in loading blended tiles
updated the annotation format and modified the ` main ` method parameter to use varargs syntax to enhance code clarity and improve compatibility with various input scenarios
updated getArea method to return a float instead of a Area object and modified the logic for calculating the sum of the last vertex to improve accuracy
fix npe in throttler. setlockonsync ( ).
pipeeventbus now delegate to superclass if subclass override it
updated ZkController constructor parameters from 1000ms to 1000ms to improve test reliability by allowing more time for ZkController instantiation
added a test for passcode requests with client parameters in TokenMvcMockTests. java to ensure correct handling of client credentials in the OAuth2
added brokenOffsetsConstructors for LengthFilter, KeepWordFilter, and CharArraySet in TestRandomChains. java to ensure correct handling of
removed unused JUnit Ignore import from RandomPlaneTest. java to clean up the code and improve readability
[ sulong ] fix invalid pointer exception in sulong.
replaced direct calls to ` btRigidBody _ upcast _ 0 ` with a direct call to ` btCollisionObject. getInstance ` to improve
added a new build copyright property and updated the OPENROCKET _ URL to reflect this change to improve build management and enhance the accessibility of
added getdistributedobjects method to jetclientinstanceimpl. getdistributedobjects
added debug print statements in FinSet. java and updated expMOIlong and expMOI _ tr in MassCalculatorTest. java
changed the variable name from TOTAL _ MEMORY to MAX _ MEMORY in SmartDexingStep. java to improve clarity and consistency in memory
updated exception handling from MetadataException to Exception in StandaloneSchemaFetcher. java and renamed the setCompressors method in CreateAlignedTimeSeriesPlan.
update burningman service to use burningman instead of burner
updated JsonLoaderTest to use json for JSON parsing and added ignore and unignore exceptions for big _ integer _ t to improve data handling and
updated the capacity validation logic in ObjectSet. java to allow larger table sizes to improve flexibility in handling large data sets
updated imports and modified the handling of data scale in ColumnSnapshotGenerator. java to improve compatibility with the latest Liquibase snapshot structure
removed @ AddToRuleKey annotations from several fields in AppleTest. java to streamline the code by eliminating unnecessary annotations
added security exception handling in FileHelper. java and TextHelper. java to improve error handling and prevent potential SecurityExceptions during content retrieval
added support for multiple attributes in the ShadowTheme to enhance theme functionality to support multiple attributes
updated sheet name validation logic in HSSFWorkbook. java and added multiple sheet creation tests in TestHSSFWorkbook. java to ensure correct handling
updated the color used in the ManageAccountsActivity from primaryColor to elementColor to improve the accuracy of the color used in the application
added null check for replyHandler in DefaultEventBus. java and simplified path resolver initialization in DefaultPlatformManager. java to enhance robustness by
added binary collation support to MariaDbDbDbDbmsType, MySqlDbmsType, and FilterSortedSkipOptimizer classes to enhance compatibility
added a new method ` whenType ( Class < T > treeType ) ` that returns an Optional < T > to provide a way to
refactor item navigation logic to use a dedicated method for managing user view destinations to improve code clarity and maintainability by centralizing navigation logic
updated the return statement in FeedREST. java to return a temporary redirect with the public URL from application settings service
( ) ) should create non - serializable deserializer
( chore ) camel - salesforce - * : fix checkstyle issue in camel - jbang
replaced ` Thread. sleep ( 2000 ) ` with a ` boolean created ` flag and added resource cleanup to ensure proper resource management and prevent potential
renamed the method ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple files to clarify the purpose of
refactored the read method in ProxyHandler to use a dedicated read method to improve code readability and maintainability by centralizing the read logic
replaced ` BufferUtil. allocate ` with ` ByteBuffer. allocate ` in ` ABCase1 _ 2. java ` to simplify the allocation process
modified the ` prepareStreamsToUpload ` method to return a boolean instead of void to improve clarity and functionality of the upload process
updated comparison logic in AbstractConfigLoader and modified test model parameters in TestMicroserviceConfigLoader to improve comparison reliability and ensure correct configuration model
added a new file ` PicOfDayAppWidget. java ` that implements a widget loading mechanism to display an image of the day app widget in
bug 6173 : set default value of internal lb service offering to zero
updated imports and refactored join condition handling in HiveParserCalcitePlanner. java to improve code clarity and ensure correct handling of non -
added @ Deprecated annotation to multiple transformation classes to indicate that these classes are outdated and should no longer be used
added user and password options to NodeToolCmd for remote JMX access to enhance security by allowing users to specify credentials for remote JMX access
removed redundant initialization of BytesRef in Stemmer. java to streamline code by eliminating unnecessary variable declarations
update page icon caching logic in AppsCustomizePagedView. java to ensure correct icon caching based on the number of widgets per page
ggbapplet. getcurrent euclidianview ( ) should be move to app. getcurrent euclidianview (
updated rotation calculations in GcodeRenderer. java to improve accuracy to ensure rotation values are within the defined range
added workspace configuration to daemon mode options to enhance user experience by allowing users to specify a workspace directory
updated test file path from " test - classes / options. apt " to " test - classes / options. html " to improve test coverage
( ) ) should be ( ( ) )
updated the method signature of ` confimAccess ` to accept a ` Map < String, Object > ` instead of a ` ModelAndView ` to
refactor assertions in HibernateIT to use assertTrueEventually for better clarity to improve test reliability by ensuring session objects are properly closed after tests
updated EventBusHook class to improve event handling functionality to enhance performance and maintainability of event handling processes
updated MultiPaintEventTest. java file to improve test coverage for multi - painting functionality
changed mNewScale from a final float to a non - final variable to simplify the assignment of mNewScale for improved performance
renamed SyncFactory. java to improve clarity to enhance code readability and maintainability
added uniqueKey field handling in LukeRequestHandler. java to ensure unique keys are properly stored in the database
added support for a round border color in the BorderEditor and EditableResources classes to enhance the flexibility and usability of the background color in
add compilerasserts. neverpartofcompilation to asserts.
[ hotfix ] fix checkstyle violation in defaultschedulerbatchschedulertest
added logging statements for pending requests in GatewayRSocket, GatewaySocketAcceptor, and PingPongApp, and modified return values in Ping
added menu item click listener for under construction in RecentChatFragment to enhance user experience by providing feedback during the construction process
updated InfoDropTarget and UninstallDropTarget classes to extend UninstallDropTarget instead of ButtonDropTarget to improve the handling of uninstallation
change method name from ` getTail ( ) ` to ` peek ( ) ` to improve clarity and consistency in naming conventions
updated URLs from " test. wikipedia. org " to " common. wikimedia. org " and " commonswiki. org
refactor index increment and decrement logic into separate private methods to improve code readability and maintainability
replaced ` Collections. sort ( Collections. sort ( ), AnnotationAwareOrderComparator. INSTANCE ` with ` AnnotationAwareOrderComparator. INSTANCE `
added various date and time patterns to the FormatData _ hr _ HR. java file to enhance date formatting capabilities in the application
added a call to ` clickedView. clearFocus ( ) ` in ` DetailFragment. java ` to ensure the clicked view has focus before
replaced the ` notifyDataSetChanged ( ) ` method with ` spinnerDescriptionLanguages. setSelection ( position ) ` in ` DescriptionsAdapter. java `
updated time zone names from " West Samoa Summer Time " to " West Samoa Daylight Time " across multiple language files
added native methods for registering global, weak, and access fields in FastGetField. java to enhance field registration functionality and improve code clarity
added default value handling for UNION and NULL types in ReflectData. java and updated test cases in TestReflect. java to improve robust
try to fix the test which fail on slow machine
added null check before remapping R class in ResourceMerger to avoid potential NullPointerException when accessing resource remapping
hhh - 14632 - hapi - fsharddialect and hapi - fsharddialect should accept databaseversion
camel - http : add'connection close'header to http producer
increased socket timeout from 60 seconds to 120 seconds to allow more time for asynchronous operations
[ iotdb - 5951 ] add test for count ( * ) with final _ price _ cts > 0
refactor Parser class to improve code readability to enhance maintainability and ease future updates
refactor CasProcessingFilter class to improve code structure to enhance maintainability and readability of the filter logic
replaced ` NestableNode ` and ` NestableNode ` with ` getFirstElementChild ( ) ` in multiple parser classes to simplify
[ optaplanner - tests ] add test case for remove enums
[ java ] wait for cluster node to shut down when the node be shut down.
change log level from warn to info to provide more informative log message
added content type " application / octet - stream " to WebdavEntry. java to ensure proper handling of octet - stream content type in
added a method to get the queue size in LazyTraceThreadPoolTaskExecutor and created corresponding unit tests in LazyTraceThreadPoolTaskExecutorTests to ensure
fix distanceop. distance ( ) to consider the min distance.
renamed the field ` required ` to ` requiredLabel ` in the ` AbstractUITag ` class to improve clarity and consistency in naming conventions
removed the next ( ) method from PurgingPartitionIterator to streamline the code by eliminating unnecessary method overrides
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated references in ` VectorUtil ` to use this method
added methods ` getHeight ( ) ` and ` getWidth ( ) ` to ` BaseMonochromeBitmapSource ` to provide access to the height
added validation for polygon vertices and updated localVertices assignment logic to ensure polygons contain at least 3 points
replaced ObjectMapper with ObjectMappers for improved object handling to enhance performance and maintainability of the code
added a null check for the algebraic curve in the code to avoid potential null pointer exceptions
refactor ExternalNameRecord to use readUByte and readUnicodeLEString based on multibyteFlag to improve handling of Unicode characters in
) should be same a a a a a a
added handling for user prompts in LoginInfoEndpoint to ensure user prompts are excluded from the login process
replaced ` listeners. remove ( listener ) ` with ` listeners. removeIf ( l - > l = listener ) ` to improve listener removal
added a case for enabling a spin effect in the PieChartActivity to enhance user experience by allowing users to toggle the spin animation
cloudstack - 7143 : deleting vhd from secondary storage if it's empty
hbase - 25836 don't try to normalize a table that don't have any quota
updated import statements and added a resize method in AndroidInput. java to improve code organization and enhance the functionality of input handling
added a new method ` propertyValuesOf ` to retrieve property values to enhance functionality by providing a list of property values
added @ Ignore annotation to ClientMapNearCacheTest. java to temporarily disable the test due to potential issues with blocking PRs
fix hopperhocks in the wrong place
added authentication dialog with username and password fields to the SsoWebViewClient to enhance user experience by providing input options for SAML authentication
added methods to delete documents and queries in TestStressIndexing2. java to improve document management and enhance test reliability
[ flink - 22559 ] [ table - planner ] ignore upsertkafkaitcase. upsertkafkaitcase
replaced ` get ` with ` computeIfAbsent ` for retrieving type lists to improve performance and simplify type retrieval logic
added configuration to accept single value as an array in DefaultEntityMapper to ensure proper handling of single value inputs in the application
updated localization error message to include both BE, UK, and SL to enhance localization support and improve user experience
updated SHORTCUT _ CATEGORIES initialization to use ResourceUtils for string splitting to improve code readability and maintainability by centralizing category
fix parsing of instanceof expression and instance of string and 10 instance of number
nifi - 1133 : add mime. type attribute to gethttp to specify content - type
refactor provenance handling in BaseHapiFhirDao and update FhirSystemDaoTransactionR5Test to improve code clarity and
replaced exit button with done button in HelpActivity. java and updated URI construction in SearchBookContentsActivity. java to improve user experience by providing
[ hotfix ] fix checkstyle violation in natsconfiguration
updated the ` invalidateStalePartition ` method to accept a list of ` PartitionNameWithVersion ` instead of a single ` PartitionNameWithVersion
use circularfifobuffer instead of boundedfifobuffer in viewresultsfullvisualizer
replace ` ic _ group ` with ` ic _ chat _ bubble ` in multiple files to enhance user experience with a more appropriate icon
replaced ` getLong ` with ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to ensure compatibility with the latest data
updated test method names in MocksCreationTest. java to follow naming conventions to improve code readability and maintain consistency in naming conventions
added a new constant DATA _ SOURCE _ NAME in CSVThirdEyeDataSource. java and made the generateDetectionConfig method public in YamlDetection
( ) ) should be busy
removed ` BuildSlaveFinishedStatusEvent ` class and its associated status event from ` DistBuildRunCommand ` and ` DistBuildSlaveEventBus
fix findbugs encode issue in vmwarestoragemanagerimpl. java
added test for workflow item without workflow
[ hotfix ] [ core ] use distinct ( ) to avoid duplicate classpath file
removed the ` isBoxedPrimitive ` method from the ` Unbox ` class to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool and add a new test for ordering flags in TestSpecificCompilerTool to improve command - line argument handling and
added a check for non - external tables before deleting a partition in HiveMetaStore. java and improved test coverage in TestHiveMetaStore. java to
updated HiveConf and SessionManager to use a ThreadPoolExecutor instead of an ExecutorService for asynchronous execution to improve thread management and enhance error handling for asynchronous
added try - catch block around dismissing the dialog to handle potential exceptions during dialog dismissal
refactor UpgradeResourceProvider to use a dedicated variable for service and component names to improve code readability and maintainability by reducing duplication
don't set diff if we can't find it
add a method to clear all log entry from the log tree ( # 3481 )
modified return statements in ChannelEndPoint. java to include channel status checks to ensure proper handling of socket shutdown scenarios
refactor SetNullableGenerator for improved readability to enhance maintainability and clarity of the code
camel - example - reportincident - use the newfile component instead of the file component
updated import statements and refactored form data handling in NettyRoutingFilter and FormIntegrationTests to improve code clarity and maintainability while addressing
added ApiOperation annotations and corresponding test cases for the ` hello ` method in various services to enhance API documentation and ensure correct functionality through unit testing
refactor Lwjgl3Application and Lwjgl3Window to improve handling of lifecycle listeners to enhance thread safety and ensure proper disposal of
updated FG _ FK color value from ( 0, 90, 0 ) to ( 0, 0, 200 ) to ( 0, 0
set mp3 . required to false in init ( ) ( # 5734 )
fix failure in secondary indexmanagertest. patch by jbellis
add an'about'label to the help page
[ hotfix ] [ test ] use exceptionutils to find broken serialization
updated MediaFormatUtil. java to improve media format handling to enhance performance and maintainability of media processing
added a method ` isCellEditable ` that returns false in ` GeneralTab. java ` to provide a method that returns false for cell -
added an abstract method ` isOnlyPrintCommands ( ) ` and updated the message formatting in ` AbstractUnusedDependenciesFinder ` and ` JavaBuck
added a static integer variable ` tmpCount ` in ` VocalTractModifier ` and updated the VocalTractScalingProcessor's
updated import statements for BaseScalarUdfTest and TestGenericUDFConcat to reflect the new package structure to improve code organization and maintainability
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper comparison and hashing for instances of UaaAuthenticationDetails
* migrate testskeletoncontrolrefresh to the new animation system
renamed ` NodeFilter ` to ` NodeCountFilter ` and updated related method names to improve clarity and consistency in naming conventions
updated a condition in NodeImpl. java to check if the sync block size is less than or equal to sync _ fetch _ batch _ num
` ` ` a'' should use ` ` a'' or ` a''.
updated dependency resolution logic in ExcludeDependency. java and Pom. java to improve clarity and functionality of dependency management
replaced temporary ( ) method with dst2 ( T v ) and modified lerp ( T target, alpha ) method to improve performance by
initialized the ` args ` array with an empty string to ensure proper initialization of the ` args ` array
refactor linker argument handling to use ImmutableList instead of a List to improve flexibility and usability when managing linker options
[ test _ bug ] add travis and appveyor test
added handling for external DAG names in TaskExecutorService and GenericUDTFGetSplits to improve logging clarity for LLAP splits generation
updated import statements in TileAtlas. java to improve code clarity and maintainability
replaced direct output stream handling with an AtomicBoolean to improve thread safety and control flow in the code
updated the ` validateQuery ` method to accept an additional ` args ` parameter to enhance error handling by providing additional arguments during query validation
updated index version from 1 to 2 and refactored the getTree method to improve code maintainability and streamline the handling of repository data
[ flink - 11121 ] [ kryo ] add test case for default kryo registered class
added null check before removing properties in BlueprintConfigurationProcessor to avoid potential NullPointerExceptions during configuration removal
refactor handling of Boolean objects in MetaStoreDirectSql. java to improve readability and maintainability of the code
added hideCustomizationDrawer ( ) method to the Launcher class to improve user experience by hiding the customization drawer
refactor TermVectorComponent to use a named TV _ KEY _ WARNINGS constant instead of a hardcoded string to improve code readability and maintainability by
added a warning log for optimistic types and modified logging statements to improve logging clarity and control flow based on configuration
refactor Expect class to improve code readability to enhance maintainability and ease future updates
added UnixSocketConfigurationStrategy to DockerClientFactory and created UnixSocketConfigurationStrategy class to enable Unix socket configuration for Docker connections
added test methods for flaky tests in CloseableDoSFilterTest. java to enhance test coverage for flaky tests
( chore ) camel - reactive - stream : improve error message when there be no active subscription
refactor Vectorizer to use MapWork instead of MapRedTask to improve code clarity and maintainability by consolidating task conversion logic
[ log4j2 - 1343 ] add default constructor for stringappender and logdivertappender
fix npe if no gui package be available
[ gr - 25725 ] fix linkage declaration for weak function.
updated multiple Java files including XShareAuto, LoadClassNegative, XCheckJSig, and ReadFromNoaccessArea to improve code organization
add test for defaulttransactionthreadlocal ( )
added a check for invalid operation handles in HiveStatement. java to improve error handling by logging warnings for invalid operation handles
updated command type from ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL to
camel - aws - secrets - manager - add unit test base on user forum issue
refactor SimpleTree class for improved readability to enhance maintainability and ease future updates
updated the response status message in the UserREST class to improve clarity and consistency in error reporting
added a new boolean parameter ` subTree ` to the ` Result ` constructor and updated its usage throughout the code to enhance functionality by allowing a
modified the column width calculation in Sheet. java and added a new test for it in TestHSSFSheet. java to ensure correct column width
added configPath parameter to Commands. less method to enhance command functionality by including configuration path
changed the type of the ` weakAssociations ` and ` weakAssociations ` from ` Set ` to ` Collection ` to improve flexibility and
updated the default SSHD container image to use a specific version to ensure compatibility with the latest version of the Docker image
added assertion to check if hostId is not null to ensure that the hostId is valid before proceeding with execution
( ) should not be group ( )
refactor testSeekNegative to testSeekingExceptions and improve error handling to enhance test reliability and clarity in seeking operations
fix issue with bcsilicon recipe ( # 3283 )
changed method name from ` put ` to ` putObject ` in ` GraphHopperConfigMixIn. java ` to improve clarity and
updated visibility logic in CellLayout and refactored drag exit method in Workspace to improve code readability and maintainability by consolidating logic
updated ModifyRequestBodyGatewayFilterFactory to apply a new original body and added a test for handling an empty upstream request body to improve handling of empty request
added package accessibility checks in ConstructorFinder, FieldFinder, and MethodFinder classes to enhance security by ensuring only public and package - accessible
should not be warn
updated the logic for extracting the prefix in WhiteBlackList. java and added a new test class Issue348. java to improve handling of wildcard
added menu functionality for gallery and gallery images in GalleryActivity to enhance user experience by providing access to gallery images
refactor MongoDBServiceFactory to improve null handling and instance management to enhance robustness and prevent potential NullPointerExceptions during service creation
added unit tests for handling boolean values in InlineConstantMutatorTest. java to ensure correctness of boolean formatting behavior in mutant operations
added Blackhole import and modified the decode method to include a blackhole parameter to enhance testing capabilities with a blackhole for better performance
fix : update gapic - generator - java with mock service generation fix ( # 3662 )
[ knx ] fix npe in dpt unit ( # 1866 )
clear the witnesses list in ManagerTest. java to ensure that the database manager maintains its witnesses before proceeding
make jdbcpagingsink more resilient
removed the " stack " property and replaced it with getter and setter functions in NativeError. java to improve code clarity and ensure proper handling of
removed a condition that checks if the path starts with a dot in DrillPathFilter. java to streamline the code by eliminating unnecessary checks
( # 2 ) should be auto - load ( # 241 )
added a call to clearIndex ( ) in BasicFunctionalityTest. java to ensure the index is reset before running tests
updated BOLDWEIGHT _ NORMAL constant from 190 to 0x190 to accurately reflect the actual bold weight value
made ` fThreadGroup fThreadGroup ` volatile and modified ` lookForStuckThread ` method in ` Timeout ` class to improve thread
changed the implementation of the ` getValue ` and ` setValue ` methods from ` final ` to ` ValueResultData ` to improve method clarity and
updated hashCode and equals methods in FuzzyQuery. java to ensure proper comparison and hash code generation
removed debug print statements from PushedResourcesTest. java to clean up the code and reduce unnecessary console output
changed return type of ` removeFile ` and ` removeDirectory ` methods from ` List < SharedRandomAccessFile > ` to ` void `
update version from 2.1. 1 to 2.6. 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to reflect the latest version
updated the method of obtaining the attributes in PersonDirectoryPrincipalResolver to use a default empty map and improve the handling of the principal's attributes
( ) ) should warn
renamed methods ` intHash ` and ` longHash ` to ` hash ` and ` hash ` across multiple classes to improve clarity and consistency in
added a constructor to ThumbnailGenerationTask that initializes storageManager and account to ensure that the task is executed with the appropriate account and image reference
modified the loop condition in GroupSelectionQuery. java to check if the number of rows is less than 5 to ensure that the loop does not
added a new file ` Bug1933922. java ` with a map of program names and compilation logic to implement a mechanism to track and
formatted code for consistency and readability to improve code readability and maintainability
updated the character range check from 33 to 32 in FileResolver. java to ensure that invalid control characters are handled correctly
added requestFocus ( ) method call in Display. java to ensure the component has the correct focus before use it
refactored test to make it easy to run test in parallel
renamed ` JsonParserAsync ` to ` JsonStreamParser ` and updated references accordingly to improve clarity and consistency in parser naming conventions
replaced Crouton. cancelAllCroutons ( ) with an intent intent intent to improve user experience by providing a clearer error message
added a new test for schema query and fetch with unmapped templates in IoTDBSchemaTemplateIT. java to ensure that schema queries and
refactor Dialog class to improve code structure to enhance maintainability and readability of the code
avoid problem with runtime - compiled alias method when people have set the java _ tool _ options environment variable .
updated metrics to use " localhost " instead of " localHost " to ensure accurate metrics reporting for the past window
refactor subsystem assignment from switch - case structure to a for - each loop to improve readability and maintainability of the code
added assumptions for macOS support in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on supported Apple platforms
refactor jvmciversioncheck to use getrequiredproperty ( ) to avoid npe
refactor Mockito class to improve code readability to enhance maintainability and ease future updates
renamed TestLargePageUseForAuxMemory. java to improve clarity and maintainability of the code
updated BinaryParser and PlainTextParser to use context for reading bytes and added charset handling in ParsingExecutionContextView to improve handling of character encoding in
added methods to set and get MultiPartFormDataCompliance in HttpConfiguration and introduced a new enum for compliance to enhance HTTP configuration flexibility and
added JDK - 17 support in GradleDistributionManager to ensure compatibility with JDK 17
refactor database snapshot type addition to use a dedicated method to improve code readability and maintainability by encapsulating type addition logic
refactor Term class to improve code readability to enhance maintainability and ease future updates
modify return statement in ChangeSet. java to handle null or empty runWith values to ensure robustness by preventing potential NullPointerExceptions
add test case for xaconnectionfactory. testisameRM ( )
refactor multiple audio - related classes to improve code organization to enhance maintainability and readability of the codebase
pdfbox - 417 : use blackbox matrix instead of blackbox in pdf417 test
added a new variable ` mTintAmount ` and updated its assignment in ` TaskView. java ` to improve code readability and maintainability by
added a new file for SumZeroFunctions and its associated classes to provide functionality for sum zero functions in the Drill framework
[ hotfix ] [ test ] fix typo in firstvaluefunctionit and nthvaluefunctionit
refactor getAllocationFailWarningMessage method to improve readability and structure to enhance maintainability and clarity of the code
added a null check for the property before adding it to the roleObject to avoid potential NullPointerExceptions when the property is null
added @ VisibleForTesting annotation to several variables in StatusBarTouchController. java and modified the setWindowSlippery method in RecentsView
added a new method ` logContainerStream ` to the ` DockerClient ` class and modified the ` logContainer ` method to enable logging of
add a performance test for mvstore cache
updated LONG value from " L " to " J " in PrimitiveType. java to align with the new data type requirements
changed the method ` delegatingApplicationListener ` from instance to static to allow the method to be accessed without an instance of the class
camel - test - infra - rest : set body to null in case the exchange be null.
added FileDeletingTasklet and TaskletJobFunctionalTests classes to manage file deletion in batch processing
bugfix : update size keep drawables only when necessary
replace index - out - of - bounds with index - out - of - bounds in BitUtil, Int2IntCounterMap, and Int
updated ` sendEventToTest ` method to accept a state ordinal instead of a hardcoded value to improve flexibility and maintainability of event sending
added user - agent checks for video thumbnail requests in multiple classes to ensure proper handling of video thumbnails based on request headers
pdfbox - 4892 : move error - checking to another file, a suggest by valerybokov
modified the layout of the open button in SideMenuBar to accommodate different theme settings for the " menuButtonTopBool " and " menu
updated references in Skia. java to use " libskia " instead of " skia " to ensure compatibility with the new Skia
[ usage - tests ] add a test case for the unittest id.
added validation for format arguments in QueryCommand and corresponding tests in QueryCommandIntegrationTest to ensure correct handling of format arguments and improve test coverage for
replaced ` capacity ` and ` isPositionValid ` with ` length ` and ` length ` variables in ` IntIterator. java ` to improve
added a new parameter ` projectConfig. getSrcRule ( ) ` to the ` walkRuleAndAdd ` method to enhance rule traversal logic
added support for override module name in patch module file
removed unnecessary version check for candidateTermId to simplify the conditional logic for better readability and maintainability
updated the default policy settings for OwnCloudClientManagerFactory based on SAML authentication status to ensure correct authentication behavior based on SAML authentication settings
added null checks for mappedTableResource in ReadBatch and WriteBatch classes to ensure required resources are not null to prevent runtime errors
use jmsutil. close ( ) instead of try / catch ( )
refactor AnonymousAuthenticationFilter to utilize a deferred context for improved security context management to enhance flexibility and maintainability of authentication handling
updated the ` removeActor ` method to accept an additional boolean parameter for unfocusing actors to enhance actor removal functionality by allowing optional unfocus
updated cloudConfig initialization to use validConfigs instead of cloudConfig to improve code clarity and maintainability by using valid configurations
added logging capabilities to NettyHttpServer and RoutingInBoundHandler classes to enhance logging capabilities and improve connection handling
refactor multiple Java files including DatumAliases, AbstractParser, Formattable, Formatter, Parser, and Parser to improve code organization and maintainability
replaced direct call to update ( ) with SwingUtilities. invokeLater ( this : : update ) to ensure UI updates are executed on the Event Dispatch Thread
camel - 16400 : camel - groovy - do not use reflection to load groovy script
use collections. empty _ map instead of project. getmanagedversionmap ( )
changed access modifiers of ` ProgramOptions ` and ` ProgramOptionsUtils ` from package - private to public to allow broader access to these options
refactor TestSharedPreferences and add a new test class TestSharedPreferencesTest to improve test structure and ensure proper functionality of shared preferences management
http : / / issues. apache. org / jira / browse / amq - 3573 - don't check certificate chain
simonstewart : improve error message to aid in debugging
changed the visibility of the ` updateImage ` method from private to protected in ` ImageButton ` and ` ImageTextButton ` classes to allow subclasses
added drop resource to block ( # 49874 )
added multiple native methods for ` has ` and ` tryGet ` and ` tryGet ` in ` DataOutputQueue ` and ` depthai `
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
updated the ` isEmpty ` method in ` TreeTrie ` to use ` isEmpty ` instead of ` keySet ( ). isEmpty ` to improve
updated the background and foreground method calls in AttributedStringBuilder. java to improve clarity and functionality of the text rendering process
added a check for the " solr. disableFingerprint " system property in PeerSync. java and tested it in PeerSyncTest. java
changed access modifier of moveFunds method from private to public to allow external access to the moveFunds method from other classes
updated event emission logic in MongoTemplate and MongoTemplateTests to enhance event handling and improve test coverage for MongoDB operations
fix settransactiontest and settransactiontest
close the input stream in tikacli to ensure that the input stream be properly close.
updated exception handling in TestCollectionAPIs. java to use camel - core instead of ApiBag. ExceptionWithErrObject to improve clarity and
removed unnecessary whitespace in the code to improve code readability and maintainability
update teammateslog message to be more descriptive
[ beam - 10471 ] fix checkstyle violation in externalworkerservice
removed the step parameter from the DisplayTextVirtualDatapoint and HmDatapoint classes to streamline the code and improve clarity by eliminating
added logging for shared and exclusive locks in PostgreSQLReadWriteAdvisoryLocksTest. java to improve traceability and debugging during document acquisition
removed duplicate calls to scheduleJobs ( ) in BaseSchedulerServiceImpl. java to streamline job scheduling process by eliminating redundancy
''' should'''' if''
refactor logger to use a thread - local logger instance to improve performance by reusing the logger instance for each logger instance
refactor functioninitializer to use spy instead of mockit
added handling for primitive types in ` Types. java ` and introduced a new class ` T6995200. java ` with a test method
updated the handling of the focused task view in RecentsView. java to ensure proper orientation state management when a new task is selected
hbase - 24545 addendum simplify testflushfromclient. getregions ( )
added handling for contract details in TransactionExecutor. java to ensure proper storage management during transaction execution
updated TOKEN _ ISSUE _ FEE to retrieve asset issue fees from dynamic properties to ensure accurate balance calculations by incorporating asset
added URI handling and improved cache management in RealisticRenderStrategy. java to enhance texture handling capabilities and improve cache management
refactor raster creation and composition in Blit. java and add a new class Bug7049339. java for testing to improve code clarity and
added functionality to retrieve unselected text widths in Label and DefaultLookAndFeel classes to enhance text display flexibility by allowing unselected styles to be set
updated ArrayList initialization and method calls to specify initial capacity for better performance to optimize memory usage and improve code clarity
removed the'flags'parameter from several method signatures in ShadowApplicationPackageManager. java to simplify method signatures and improve usability
refactor PingRequestHandler to improve code readability to enhance maintainability and facilitate future updates
added a constant for MP4 ASSET _ WITH _ INCREASING _ TIMESTAMPS _ URI _ STRING and updated import statements accordingly to
refactor firmware check logic in TradfriGatewayHandler. java to improve readability and maintainability of the code
updated AjaxElementLocator. java file to improve functionality and maintainability of the code
updated layout checks to include " table - cell " display alongside " block " to enhance flexibility in handling different layout types
refactor JsonDecoder to improve the handling of JSON fields to enhance clarity and maintainability of the code
updated the releaseLocation method to include the removal cause parameter to improve the handling of location removal events
added JUnit Ignore annotation to SavepointTestBase. java to temporarily disable tests that are not ready for execution
disable the test until we can fix this.
changed fields from non - final to final in ContextRegisterListener. java to ensure immutability and prevent unintended modifications
refactor ObjectHashSet to use a constructor and improve iterator initialization logic to enhance flexibility and maintainability of the ObjectHashSet implementation
added batch byte handling in SparkReduceRecordHandler and ReduceRecordSource, and introduced DEFAULT _ BYTES constant in VectorizedRowBatch to improve memory
updated AppSettings and UpdateUtils to use MODE _ PRIVATE instead of MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE
updated logging messages for clarity and added handling for abort ( ) scenarios to enhance error handling and improve logging details for better debugging
added accessibility support for workspaceAnim to enhance animation behavior based on accessibility state
use log. debug instead of log. warn
updated scope substring handling in UaaTokenServices. java and added a test for persisting a longer token in UaaTokenServicesTests.
updated import statements and class names in SchemaRetrievalOptionsBuilderTest, AvailableJDBCDrivers, TestAvailablePlugins, and TestAvailablePlugins to
kie - api : add an executablecommand that can be use in the future, but not in the future.
camel - jbang - remove camel - itest - idempotent and camel - jms
added padding retrieval methods in CellLayout and refactored bitmap creation in Launcher to enhance layout customization and improve bitmap handling for different orientations
refactor the initialization of the cands list to handle cases with an empty string to improve robustness by ensuring cands are only processed when
refactor SamlMetadataUIParserAction to use Action instead of SamlMetadataUIParserAction to improve code clarity and maintainability by using more
added a method to check and redirect LDAP ports in LdapMockMvcTests. java to enhance port management and ensure proper handling of LDAP connections
log4j2 - 1343 fixed log4j2 npe in executorservices. shutdown ( )
updated URL handling logic in Fetcher and HTMLMetaProcessor classes to improve URL redirection handling and logging for prohibited URLs
updated SolrQuery to use " name : samsang " instead of " * : * " to ensure correct query syntax for spell - check
karaf terminal should support old and new console api
[ fix ] meshhelper. getverticescolors ( ) now use mloopcol instead of mcol
added file filtering for time - limited reports in HTMLReportGenerator. java and updated test cases in HTMLReportGeneratorTest. java to enhance file
refactor datavalidatortest to use parameterized test
pdfbox - 4892 : remove unused method, a suggest by valerybokov
added error handling for null bindStatus in FieldUtils. java to improve error reporting and provide clearer context for binding errors
removed debug print statement from JoglInput. java to clean up the code and improve readability
added support for extracting private fields in FieldSupport to enhance flexibility and control over field extraction behavior
replace " { name } " with device name in WebDataHandler. java to ensure consistent formatting of device names
added support for Java 8 type lookup in Platform. java to enhance compatibility with Java 8 features and improve object instantiation handling
updated method names from ` weights ` to ` weightsByDouble ` in ` ZParams ` and ` SortedSetCommandsTest ` to improve clarity and
added a Database parameter to the writeCustomHTML method across multiple writer classes to enable custom HTML writing for database - specific changes
updated BTreeMap. java to remove unnecessary casting and improve code clarity to enhance code readability and maintainability by eliminating unnecessary type casting
updated exception handling in ` CancelDeferredTransactionContractActuator `, ` UpdateDeferredTransactionContractActuator `, and ` Manager ` to throw
[ netbeans - 3482 ] don't write empty byte array when profiler be enable.
refactored logging and message handling in Main. java to improve code clarity and maintainability by centralizing message logging
updated byte array size from 14 to 13 bytes and removed generic record usage in HortonworksEncodedSchemaReferenceWriter to optimize memory usage and
added imports for ChunkListener and ItemReadListener in various batch - related classes to enhance batch processing capabilities and improve error handling
refactor code for improved readability and structure to enhance maintainability and clarity of the code
removed unnecessary calls to ` doc. get ( ) ` in ` SearchFiles. java ` and ` SortedSetDocValuesFacetCounts. java ` to
updated Test7005594. java file to improve test coverage and ensure reliability of the code
updated error message formatting in ResourcesValidationProcess. java to improve clarity and consistency in error reporting
refactor TopKRollupPhaseOneJob. java for improved readability to enhance maintainability and clarity of the code
ntwk : don't try to map ip to vm id if the vm don't have an ip address
replaced the ` mModifierDigitalTriggers ` boolean with ` mModifierAnalogTriggers ` and introduced a new ` supportAnalogTriggers `
updated methods to accept ` Iterable < T > ` instead of ` Arrays. asList ` to enhance flexibility and maintainability of the code
camel - http - don't apply filter to external header if there be more than 2 header
hhh - 14632 - fix unit test failure on oracle
added a new LargeValueFormatter class and updated BarChartActivityMultiDataset to use it for random value generation to enhance chart functionality and improve label
fix a bug in the parsing of an INNOCUOS character in the comment parser.
removed ` @ SuppressWarnings ( " argument. type. incompatible " ) ` annotation from ` Platform. java ` to clean up the code and
[ fix ] traceraslifetimeanalysisphase : fix typo in log message
removed TODO Auto - generated method stub from NullAssertionValidator. java to clean up the code and improve readability
added handling for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to ensure correct rule key generation for build rules
fix test instability ( # 2803 )
replaced instances of ` DefaultThreadFactory ` with ` createThreadFactory ( ) ` in ` TestcontainersDockerCmdExecFactory. java `
replaced direct usage of ` LongAdder ` with ` getMessagesIn ( ) ` in ` HttpChannelOverHTTP ` and ` HttpReceiverOver
fix image file dialog on mac o x
refactor ElasticIndexWriter and TestElasticIndexWriter to use a new transport client and improve client initialization to enhance code clarity and maintainability while
added detailed information about the witness and witness class in ForkController. java to improve debugging information for better visibility into the witnesses
added a new file ` NullPointerAndEmptyArrayTest. java ` to test the handling of null and empty URL arrays to ensure that the
removed unused files related to generated source paths in the project configuration to streamline the codebase by eliminating unnecessary dependencies
updated regex pattern construction in ` UaaStringUtils ` to use a customizable delimiter to improve flexibility and maintainability of wildcard pattern handling
added validation checks for ` TableScanOperator ` aliases in ` Vectorizer. java ` to ensure proper handling of invalid aliases during map work
updated import statements and modified exception handling in WeatherQueryTest. java to improve code clarity and ensure proper exception handling
added error handling for setting values in TinyGFirmwareSettings. java to improve robustness by logging FirmwareSettingsException when setting fails
refactor getLangs method to return a set of Accept - Language headers instead of an array to improve handling of Accept - Language headers and enhance
reordered import statements in LazyTraceScheduledThreadPoolExecutorTests. java to improve code readability and maintainability
hbase - 25836 use tablelockmanager instead of loadtabledescriptor in takesnapshothandler ( chunhui )
[ wasm ] make sure we don't generate a null - check statement.
added a test for a modified HTTP RPC endpoint in DockerQuickstartTest. java to ensure that the application correctly handles HTTP requests with the specified
added a new boolean variable ` isSuspended ` and modified thread suspension logic to ensure proper handling of thread suspension state in the Thread class
updated Javadoc generation methods to use Hidden and SerialData instead of Since and Since to improve clarity and efficiency in handling Javadoc references
camel - core - fix npe in camel - spring and camel - spring - remoting
removed redundant @ Override annotations from multiple security - related classes to streamline code by eliminating unnecessary overrides
added handling for module imports in Java2TypeScriptAdapter and updated eval method in EnumTests to improve module management and ensure correct evaluation of static
update xssfexporttoxml to use http : / / www. w3. org / 2001 / XMLSchema
added content description logic to BubbleTextView based on badge status to enhance user experience by providing relevant app labels based on badge status
added mouse wheel support for mouse wheel movement in TestMouseWheelScroll. java to enable dynamic mouse wheel event handling based on mouse wheel direction
pdfbox - 4892 : close pdfdocument to prevent resource leak
updated currency pair from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to
[ vacuum ] use string instead of object for location.
simplified the method of converting bitfinex symbols to uppercase to improve code readability and maintainability by eliminating redundant checks
updated JsonFormat. java to use ImmutableSet and TreeMap for fields to improve handling of optional default values during serialization
refactor JacksonXmlFormatMapper to improve handling of array and enum types to enhance code clarity and maintainability by simplifying type conversion logic
updated variable names and introduced a new state for PARKED _ SUSPENDED in VirtualThread. java to improve code readability and maintain
updated the ` DirectoryTaxonomyWriter ` and ` NameIntCacheLRU ` classes to use ` categoryPath ` instead of ` categoryPath
refactor VetoableChangeSupport for improved clarity to enhance maintainability and readability of the code
modify return statement in BrowserContentPane. java to adjust height calculation to ensure correct height adjustment for the owner view
pdfbox - 2576 : remove invalidpasswordexception from method signature
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure proper
ggb - 2481 add menuitem and close button to help menu
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code readability and maintainability
updated sleep durations and added new test cases for G28 _ 1, G28 _ 2, and G28 _ 3 to improve synchronization
updated the condition for handling release status in SwingStartup. java to improve code clarity and ensure proper handling of release status
add migration. includegeneratedfilecomment property to allow migration to include the generated file comment.
updated command usage syntax from " / plot < player > " to " / plot < player | * > " across multiple files to improve command
deleted two files, BadHdfsThreadsFilter. java and BadZookeeperThreadsFilter. java, to streamline the code by eliminating
updated method calls to use " optionName " instead of " nameVariableName " to improve clarity and consistency in method naming conventions
added support for parallel class handling in TestNGContentHandler to enhance functionality by allowing parallel execution of TestNG tests
[ hotfix ] fix npe in routinfomanager when old address be empty
refactor ( ctmethodimpl ) : remove static import of enums in methodimpl. java ( # 2453 )
added serialVersionUID to multiple exception classes to ensure proper serialization compatibility across different Java versions
updated DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated the ` shaBase64 ` method in ` ShibbolethCompatiblePersistentIdGenerator ` to include a ` CONST _ SEPARATOR `
updated parameter handling in Parameters. java to improve null safety to enhance robustness by preventing potential NullPointerExceptions
added a new file ` Person. java ` with a ` name ` field in the ` org. apache. maven. it0074 `
remove unused localaddress parameter from gossip start method
changed the index check from ` indexOf ` to ` indexOf ` in ` AbstractClient. java ` to ensure accurate index validation for the column label
added tests for time column and time unit in SegmentMetadataImplTest. java and updated segment metadata handling in SegmentMetadataImpl. java to ensure
updated the color used in simPlotPanelDesc from java. awt to net. sf. openrocket. util. Color and changed the
added a call to disconnectEmitters. onNext ( new Object ( ) ) in NettyStreamingService. java to ensure proper handling of disconnect
use annotationtypesbystereotype ( ) instead of annotationnamesbystereotype ( )
simonstewart : add a new test for double overflow in firefox
added try - catch block around dismissing the dialog to handle potential exceptions during dialog dismissal
( chore ) camel - jbpm - jdbc : allow to configure jta transaction synchronization registry at system property ` ` jbpm. ts
changed the visibility of the pickUri method from public to private to restrict access to the method for improved encapsulation
added a method ` hasFunction ( String function ) ` that always returns false to provide a way to determine if a function is present in the
replace enabledCiphers with result in JSSESocketFactory. java to improve clarity and maintainability of the code
use chronounit. between instead of instant. toepoch.
replaced explicit null checks with ` requireNonNull ` method in ` Identifiers ` and ` DatabaseConnector ` classes to improve code readability and reduce redundancy
renamed variable from ` input ` to ` inputMap ` to improve clarity and consistency in variable naming conventions
added boundary checks for row and column indices in FlightConfigurablePanel. java to ensure data integrity by preventing out - of - bounds errors
added scrollSelectionVisible ( ) method call to ThrustCurveMotorSelectionPanel. java to enhance user interaction by ensuring selection is visible
[ java ] unnecessarylocalbundledesolver ] fix false positive with anonymous inner class
refactor AbstractScriptExecutor to initialize ScriptEngine directly and remove null check for scriptEngine to streamline the initialization process and improve code clarity
remove nan check from distancesimilarity.
don't run sstable. incrementallybackup if sstable be null
updated the ` relativize ` method to accept two ` Path ` objects instead of a single ` Path ` to enhance path relativization functionality and
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to improve clarity and functionality when dealing with column sizes and decimal digits
replaced ` Files. delete ( ) ` with ` filter ` in ` DeadLetterQueueWriterTest. java ` to skip the current writer head
replaced ` ByteArray. toHexString (... ) ` with ` ByteArray. toJsonHex (... ) ` in ` TronJsonRpcImpl. java
renamed ` ErrorHandlerController ` and ` ErrorHandlerControllerTest ` to ` Error403Controller ` and added new ` Error403Controller ` and
replaced TerminalFactory. resetTerminal ( this ) with TerminalFactory. resetIf ( this ) in UnixTerminal. java and WindowsTerminal. java
updated import statements and modified annotation rules in Tiny. java to improve code clarity and maintainability by replacing deprecated methods with new array tree and adding
fixed - concurrentmodificationexception in connectionpool # acquireconnection ( )
updated method names from ` getDateConverter ` to ` getLdapDateConverter ` and renamed ` getDateConverter ` to ` getLdapDateConverter `
pdfbox - 4892 : avoid ` ` nullpointerexception :'' in pdfMergerutility
updated error message formatting in JavassistUtils. java to improve clarity and consistency in error reporting
added error handling for reader and writer exceptions in LargeStreamletTest. java to improve test reliability by ensuring readers and writer exceptions are
updated HomeFragment to conditionally count extra pages based on the account's page type to enhance user experience by providing more detailed page information based on
added error handling for bitmap creation in AndroidImplementation. java to improve robustness and prevent crashes during image processing
fix typo find by codespell on fossies. org
pdfbox - 4892 : use try - with - resources to ensure resource be release
deleted the file TestDocInverterPerFieldErrorInfo. java to the file is no longer needed for the project
updated key event command execution in AbstractLauncherUiTest. java and removed an assertion check in LauncherInstrumentation. java to improve command execution clarity and
added JSON serialization and deserialization for file names in FileDumper. java to enhance file handling by providing a JSON representation of the output file
bugfix # 20638 - reset result _ not _ified flag ben't thread safe
add loadimage ( ) method to blendercontext, and use it in blenderhelper
polish ` ` use application :'' instead of'application :''
[ java ] fix checkstyle issue in util / randomizenewbnrandomizer. java
added a new import for Uri and modified notification sound setting logic to improve notification sound handling and streamline notification sound setting
added a method ` reportLoopCount ` to the ` RootNode ` class to enable reporting of loop counts based on the context target
added handling for STANDARD repository type in FinalizeUpgradeAction. java and updated clusterEntity merging in ClusterImpl. java to ensure correct versioning
bugfix : use regionid instead of rangeid for list by regionid and state search
replace the existing streamManager open method call with an updated version to eliminate redundancy in opening the stream manager
added a new file ` CountedLoopProblem. java ` that implements a loop to demonstrate the behavior of the ` toString ( ) ` method
move nmethod parameter to the last position to keep pass on argument in the correct register .
[ gr - 25744 ] make pending _ failed _ speculation _ offset configurable.
renamed ` TransformerSupplier ` to ` ValueTransformerWithKeySupplier ` and updated related methods to improve clarity and maintainability of the code
added a method to convert a list of points to an array and updated related test cases to enhance readability and maintainability of the code
removed the call to applyToActivitiesIfAvailable from BaseApplication. java to streamline the application process by eliminating unnecessary components
added thread management and stack trace logging in CloseRace. java to improve thread handling and error reporting during stack dumping
updated return value to use ` intValue ( ) ` instead of ` val ` in ` IntPointField. java ` and added multiple assertions in
replaced ` arcSize ` with ` arcSizefraction ` and updated its calculations to improve the accuracy of the arc size based on its
updated the width of veryHighWidth to 640 and changed the ratio from 720 to 640 in ImageBorderCuttingWizard. java to improve
rename minifysqlenabled to shrinkwhitespacesinsql
refactor ` waitForStateTransitionToEnd ` and ` waitForStateTransitionToEnd ` methods in ` AbstractLauncherUiTest ` and ` WorkProfile
added new configuration classes for various authentication and logout scenarios to enhance the management of authentication and logout configurations in the application
replaced direct byte reading with byte reading in Volume. java to improve performance and reduce memory usage during reading operations
( chore ) camel - http : camel - test - infra - http : camel - http - do not log http response header when
refactor classpath handling in DeclarativeHintsParser to use a builder pattern to improve code readability and maintainability
added new class ` MediaScriptScopeProvider ` that implements ` AudioManager ` and ` VoiceManager ` to provide customizable audio and voice
added methods to retrieve and set the layer manager in AnimComposer. java and updated animation actions in TestJaime. java to
added a check for an empty queue in DeferredHandler. java and removed unused methods in Workspace. java to improve performance by avoiding unnecessary processing when
added null check for mapOp and mapWork in MapRecordProcessor. java and modified exception handling in TezProcessor. java to improve error
refactor CylinderRegion. java to streamline center and center calculations to improve code readability and maintainability
replaced JUnit's assertEquals with JUnit's ExpectedException in TestBadUseCases. java to enhance test readability and maintainability by using a
added null check for subparams in QueryExecutorImpl. java and implemented a new test for multi - query execution in StatementTest. java to
modified the ` customizeEnvironment ` method to return a boolean and added conditional logging in ` SecurityModel ` to enable customized security environment settings based on
added a new parameter ` rctag = android% 20edit ` to the ` w / api. php ` request to include an additional
refactor Test. java for improved readability to enhance maintainability and facilitate future updates
updated PBEKeySpec constructor to use keyLength instead of blkSize to improve clarity and consistency in key length handling
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
added a call to ` writeSectionDefinition ( ) ` in ` RtfDocumentHeader. java ` to ensure proper handling of section definitions in
added accuracy logging for large jump detection meters in GpsLoggingService to improve accuracy of jump detection and prevent potential issues with large jump detection
removed unnecessary logging statements from TableCellLayout, TableLayout2, and TableLayout2 to streamline code and improve readability by eliminating unnecessary
chore ( regen ) : generate sample code in the java microgenerator ( # 348 )
[ hotspot ] fix nullpointerexception in insightfilter
replaced binary search with binary search for app names in AllAppsList. java to simplify code and improve performance by eliminating binary search
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` and removed the ` ThemedPreferenceActivity ` class to simplify the activity
updated the value class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests. java to clarify the purpose of the
removed unnecessary whitespace in assertRootArcs method call to improve code readability and maintain consistency
added an assertion to check if the security policy exists and is a file to ensure that the security policy is valid before proceeding with tests
camel - olingo2 fixed the c error of camel - olingo2
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest. java to allow more time for recovery operations
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver. java to simplify the log output for better readability
added ability to publish an image by http via http ( smack - 131 )
camel - netty - fix potential npe in camel - netty
updated regex pattern in BalancedClickhouseDataSource. java and added tests in BalancedClickhouseDataSourceTest. java to improve URL
added system property to disable JavaScript execution in FragmentActivator to enhance security by preventing JavaScript execution vulnerabilities
added support for a null string in CSVRecordReader and CSVRecordReaderConfig to enhance flexibility in handling null values in CSV records
added LiquibaseService import and annotation to multiple connection classes to enable skipping of specific Liquibase services during connection execution
updated the method signature of ` addImportedStaticFieldNames ` to accept ` JavaSourceFile ` instead of ` J. CompilationUnit ` to ensure
added topic field and updated topic assignment logic in ItemCommandTriggerHandler. java and ItemStateTriggerHandler. java to improve topic management and ensure
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` to improve clarity and specificity in exception handling
updated handling of " zkCredientsProvider " and " zkCredentialsProvider " cases in SolrXmlConfig. java and added corresponding assertions in
make the mana tablet's creative if it's not a creative
added identifier collection to the call event in P25P2DecoderState. java to ensure the correct identifier collection is used for the call event
removed unused imports of HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter from TestRandomChains. java to clean up the
updated the thread executor name from " ScryptUtil : deriveKeyWithScrypt - % d " to " ScryptUtil : deriveKey
updated method signatures in GeneratedCode. java to improve code readability and maintainability
updated assertion message in TypeDefinitionRegistry. java to improve clarity and consistency to enhance code readability and maintainability
updated import statements in LocalFileListAdapter. java and set visibility of shareWithMeIcon to GONE to improve UI responsiveness by hiding the share
update link from HTTP to HTTPS in multiple filter classes to enhance security by using secure connections
updated RouterFilter and RouterServerListFilter to use an empty map instead of null to improve robustness by ensuring headers are not null or
updated assertion message in TestIndexWriterMergePolicy. java to include detailed information about the range of documents to improve debugging and traceability of the
mark multiple classes as deprecated to indicate that these classes are outdated and should no longer be used
added null check for contextAware in CrawlerSessionManagerValve and introduced a new test for multiple context awares in TestCrawlerSessionManager
modified the ` getJspApplicationContext ` method to include security checks before obtaining the Jsp application context to enhance security by ensuring the application context
updated RocketComponentConfig. java to adjust minimum and maximum values based on component position and span to improve accuracy of component length calculations and ensure
added Scopes. SINGLETON to the NonceService binding in OpenIDAuthenticationProviderModule. java to ensure that the Nonce
don't update child link if parent file have change
removed unnecessary imports and improved code formatting in SpringCloudPlugin. java to enhance code readability and maintainability
groupgroupgroupgroupgroupgroupgroupgroupgroupgroupgroupgroup be cause by one
don't override shift code when shift = true
[ flink - 3171 ] [ connector / zookeeper ] remove dead code in abstractheartbeatmonitor and nodeclustercoordinator
removed unnecessary whitespace in NearbyActivity. java to improve code readability and maintain consistency
updated filter condition in AbstractKerberosDescriptorContainer. java to use isReference ( ) instead of checking if the identity name starts with a slash
updated the ` newInstance ` method in ` ArtifactCacheFactory ` and related classes to remove ` AbstractCommandOptions options ` parameter to simplify the method
updated exception handling in TestListenTCPRecord. java to include a delay between 3000 milliseconds and InterruptedException to improve responsiveness and stability of
refactor argument handling in PatchExtensionMethod. java to improve clarity and maintainability of argument processing
replaced ` Map ` with ` Set ` in ` RawNativeLibraries ` to improve performance and simplify library management
added support for'apply - sequence'and'ignore - send - failures'attribute in the default router parser
removed unused x509PublishUrl field and its associated getter and setter methods from ClientKeyPublisherMapping and JwkViewResolver to streamline the code
refactor the way readers are initialized in QueryComponent. java to improve code clarity and maintainability by using a more descriptive variable name
replaced custom parser for " max " and " min " with Double2Parser in ValueSourceParser. java to enhance the flexibility and accuracy of
simplified return statement in Container. java to improve code readability and maintainability
removed unused variables ` n ` and ` minScore ` from ` Highlighter `, ` SpanGradientFormatter `, and ` TokenSources `
cloudstack - 7142 : fix the bug in listvlan - > listvni - > listvni
updated ` flowBuilderServices ` to use ` ObjectProvider < FlowBuilderServices > ` instead of ` FlowBuilderServices ` to improve flexibility and
updated SQL statements and added connection management methods in WriteJdbcPTest. java to improve database connection handling and enhance connection management
remove editor . laf pref , make everything flatlaf
replaced calls to ` getStateEntity ( ) ` with direct access to ` stateEntity ` to improve code readability and maintainability by reducing method calls
simplified margin calculations in FloatingTaskView. java to improve code readability and maintainability
added a conditional break statement in RootFolder. java and updated the status line in NavigationShareTab. java to improve control flow and enhance user
[ iotdb - 561 ] fix npe in cpucallgraphbuilder. getthreadid ( )
ggb - 2481 change default perspective to ` ` def toolbar'', not ` ` 0''
[ homkit ] added networkaddresschangelistener to HomekitImpl and updated log messages for better clarity
updated lease management logic in TestHDFSEventSinkOnMiniCluster. java to improve clarity and accuracy in handling leaseRenewalTime
updated the initialization of ` prefixHeader ` and ` linkStyle ` to use ` Optional. absent ( ) ` instead of ` Optional. absent
added null message check in ExceptionHandlerRegistryFactory and introduced a new test for handling fatal IOException with a null message to improve error handling and ensure
updated ` nextID ` field to be volatile and modified ` getSize ` method to return ` nextID ` instead of ` getSize ` to ensure
http : / / issues. apache. org / jira / browse / amq - 3496 - fix test case
added HasSourcePath interface and updated AbstractThinArchiveArg, FileListableLinkerInputArg, and SourcePathArg classes to implement the Has
replaced StringBuffer with direct string concatenation in IllegalArgumentException to simplify error handling by eliminating unnecessary string concatenation
added custom index field name to facet fields in OrdinalMappingAtomicReader. java and updated test cases in TestOrdinalMappingAtomicReader. java
updated the ` toEpochMilli ` method to handle negative seconds and nanoseconds correctly to ensure accurate conversion of epoch milliseconds to nanoseconds and improve
updated attribute retrieval from ` getBufferType ( ) ` to ` getBufferType ( ). name ( ) ` in ` OGLESSh
added a boolean flag to control script updates in CopyPaste. java to improve control over script updates based on user preferences
added a new file TestCMoveLimitType. java to test character movement limits in a CharBuffer to ensure correct handling of character movement limits during
updated audio packet processing logic and added a method to check for recorder types to improve code clarity and maintainability by centralizing audio processing logic
fixed parsing of token sequence with thanks to jason dere
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " to reflect the current vendor architecture
refactor console initialization in Main. java and VersionCommand. java to improve readability and maintainability of the code
refactor token validation logic in InputStreamBinder and NextcloudRequest classes to improve code clarity and maintainability by consolidating token validation logic
added EOFException handling in Http11InputBuffer. java to improve error management for unexpected input stream errors
group with no member should be delete from one group
camel - core - optimize to use object [ ] instead of new object [ ]
deleted the V2ReplicationProtocol. java file to the file is no longer needed in the project
replaced ` ImmutableSortedSet < BuildRule > compileTimeClasspathDeps ` with ` ImmutableSortedSet < SourcePath > compileTimeClasspathSourcePaths ` across multiple files
added new files ConstructorArgsDemo. java, StupidFinal. java, and StrictDemo. java to demonstrate constructor argument and non - private
refactored directtemplatefeaturecollectionfactory to use threadlocal
update assertions in WriteResponseHandler. java to ensure responseCount does not exceed replication factor to improve accuracy of response validation
added null check for item indexNumber in ItemRowAdapter. java to ensure proper handling of null values during comparison
renamed the ` areAnchestorsShown ` parameter to ` areAncestorsShown ` and updated related methods accordingly to improve clarity and consistency
added a check to return early if the app's width is less than 12 to optimize performance by avoiding unnecessary processing when the app's
updated the change log comparison from ` = = ` to `. equals ( ) ` in ` ChangeLogParameters. java ` and added a
changed the loggers map from static to final to ensure immutability of the loggers map
updated return statement to use getBasePlot method to ensure the correct base plot is returned
( ) ) should be 0 ( )
added a ` sendStatus200 ` boolean parameter to ` ServerGenerator `, ` HttpTransportOverFCGI `, and ` ServerFCGI
added a check for the length of the comment before processing a multi - line comment to ensure that the last character of the comment is not empty
added file type management functionality in BuckModule. java to enhance file handling capabilities in the project
updated import statements and method signatures in ComposedUtil. java to use wildcard imports and improve type safety to enhance code readability and maintainability by
added error message for unsupported cpu option in rmtt test
reformatted code for consistency and readability to improve code readability and maintainability
refactor Player class to improve code readability to enhance maintainability and ease future updates
added import for ChannelTypeUID and a mockitoPackageImport method in AbstractModbusOSGiTest. java to enable mocking of ChannelType
fix arrayindexoutofboundsexception cause by arrayindexoutofboundsexception
added context management capabilities to ShadowFontsContract to enhance testing capabilities by resetting the system context
added timezone support in TimeGranularity. java and adjusted endDateTime initialization in PinotDataSourceMaxTime. java to improve time handling and ensure
added null check for the ` _ try ` and ` _ tryBodyAnalysis ` variables in ` ControlFlow. java ` to improve robustness
updated assertions in ` Assert. java ` and ` ArrayEqualityAssertTest. java ` to improve error handling and provide clearer failure messages for array
add default case to windowclicklogic
updated index calculation in MeshBuilder. java to correct indexing to ensure proper handling of index values in the index calculation
nifi - 5393 : remove reference to controllerserviceprovider from standardprocessscheduler
added processing capabilities to KotlincToJarStepFactory using ResolvedJavacPluginProperties to improve the handling of Java annotation processor configurations
updated RESCROLL _ DELAY value and refactored page snapping logic in DragController, PagedView, and Workspace classes to improve
added permission check before refreshing shortcuts in LauncherModel to ensure shortcuts are refreshed only when the user has the shortcut host permission
added case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader. java to enhance keyboard navigation functionality
added null check for core names in CoreAdminHandler. java and improved exception handling in CoreAdminHandlerTest. java to enhance robustness by
added marker selection functionality in NearbyMapFragment to improve user experience by ensuring the bottom sheet is hidden when a marker is selected
added exception handling for ` Throwable ` in ` FileSyncAdapter. java ` to improve error reporting for potential exceptions during file synchronization
refactor memory check logic to use OutputAnalyzer for better error handling to improve robustness by catching potential runtime exceptions during execution
refactor FeedQueues to streamline the process of fetching feeds based on application settings to enhance performance and maintainability of the code
improve error message if ` defaultdrmsessionmanager ` be use on wrong thread
updated AndroidBinaryDescription and AndroidBinaryBuilder to use Locale. US for package type and resource compression mode to ensure consistent handling of case insensitivity
updated XML MIME type from " text / xml " to " application / xml " across multiple test files to ensure compatibility with application - specific XML
updated configuration file reference from ` INSTANCE. confFile ` to ` INSTANCE. confFile ` to ensure consistency in accessing the configuration file
updated the method call from ` waitUntilReadyAndTimeout ( " sleep 5 ; exit 1 " ) ` to ` waitUntilReadyAndTimeout ( "
updated import statements and method return types from IntMath to LongMath in HiveExpandDistinctAggregatesRule. java to improve data handling and ensure
added multiple ` GraphicsEnvironment. isHeadless ( ) ` checks in ` mmm Toolkit. java ` to ensure proper handling of headless environments
update exoflamefurnacehandler. canSmelt ( ) to use recipe. match ( ) instead of recipe. canm
add a move thread count description to the solver
fix a bug in the search parameter when a resource with the same name exists with the same name
added a new test class ` Issue582Test ` to validate the functionality of the ` BTreeKeySerializer ` to ensure proper sorting and
add e2e test for decimal overflow
refactor LoadingCache class structure to improve code readability and maintainability
added a new rule " AvoidNonConstructorMethodsWithClassName " to the rule list to provide a specific rule for handling non - constructor methods in
danielwagnerhall : add method to check if an element be select or not
refactor ` ViewExistsPrecondition ` and ` JdbcDatabaseSnapshotGenerator ` to improve error handling for non - existent views to enhance code clarity and
updated DOMUtil. java with new utility methods to improve code readability and maintainability
added translation calculations and logging functionality in TaskViewUtils and Utilities classes to enhance animation control and improve logging functionality for better user experience
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM to false in both FeatureFlags. java and RotationHelper. java
added a new ` walk ` method in ` TempFSTTermsReader ` and modified the ` writeVInt ` method in ` TempTermOutputs `
updated the ` create ` method signatures in multiple factories to include ` SolrQueryRequest ` to enhance functionality by associating SolrQueryRequest with Solr
added MySQL triggers to enforce non - null constraints on ` Post ` content and ` Announcement ` validUntil fields to ensure data integrity by preventing null values in critical fields
replaced the ` comparator ` variable with a ` setComparator ` method in ` FieldValueHitQueue ` to improve code clarity and maintainability by
updated expected query prefix in PhoenixQueryBuilderTest. java to use double quotes for column names to ensure compatibility with SQL standards and improve query formatting
added Spark. awaitInitialization ( ) to the init ( ) method in RequesterTest. java to improve test reliability by ensuring Spark
added constants for total storage pool, fee, limit, and total storage used in DynamicPropertiesStore. java to enhance flexibility and error handling for
added support for local file resources in AssetsController and its tests to enhance file handling functionality and improve error handling during development
updated the method for checking the presence of a map mark key to improve code clarity and maintainability by using a dedicated method
added a token rewrite stream parameter to the ` getDefaultValue ` method in ` BaseSemanticAnalyzer ` to enhance flexibility by allowing custom token handling
removed ` throws IOException ` from method signatures in ` JavaCompiler `, ` JavacProcessingEnvironment `, and ` JavacTest ` classes to simplify
updated variable names and logging format in JxBrowserManager. java and FileUtils. java to improve code clarity and enhance error handling for URL loading
updated file format comparison from ` = = ` to `. equals ( ) ` for better readability to improve code clarity and maintainability by using
changed method from ` getBridgeUID ( ). getId ( ) ` to ` getUID ( ) ` in ` SomfyTahoma
disable flaky test on github action
update openwire test to use ssl by default
( ) ) should not ( ( ) )
added functionality to remove a session ID from the session info to ensure proper resource management and prevent memory leaks
added hostname setting for alerts in HeartBeatHandler. java and updated alert message in AlertReceivedListener. java to ensure that the alert
simplify the logic for checking if buffers are empty in ChannelEndPoint. java to improve code readability and maintainability
resolve split - packages : move everything from kie - api under org. kie. api / kmodule. xsd
added unit tests for seekTo functionality in ShadowMediaPlayer to ensure correct playback behavior based on playback modes
rename task ` createTask ` to ` createThrowingTask ` across multiple executor classes to improve clarity and consistency in naming conventions
added border settings for the tab close button in the CloseButtonTabbedPane to improve user interface appearance by providing a smoother border
added POST request method and connection timeout settings in TSPTimeStampService. java, and refactored imports in TestSignatureInfo. java to
[ jbpm - 2486 ] add ability to create xstream without a custom classloader
updated diamond application logic and added a new DiamondRaw class with a main method to improve error handling for non - generic types and
[ calcite - 3242 ] reloptutil. convertto ( reldatetimetype ) should return reloptimetype
don't allow negative value for http2 setting
deleted file MapInterfaceTest. java to remove obsolete test functionality
[ hotfix ] [ test ] remove unused session - pool test
[ wms ] use root object instead of root object for json wms generation
updated index setting logic in PopupMenuButton to use intValue ( ) instead of mode to ensure the table has the correct selected index based on the
added checks for canCurrentlyManuallyUnstash ( ) in TaskbarStashController. java to ensure proper handling of unstashing
camel - jbang - remove customid attribute from route coverage
modified the ` getEventMismatchMessage ` method to accept a ` waitForExpectedCount ` parameter to improve event mismatch handling logic based on the expected count
added a new file ` HeaderFixer. java ` implementing a header file processing mechanism to implement a header fix mechanism in the GDX
added functionality to send a broadcast for the first loading completion in the launcher to enhance user experience by ensuring the first load action is only sent
deleted the SuperJumperAndroid. java file to remove unused code that is no longer needed
modified the return statement in SystemTableScan. java and added new test cases in TestStarQueries. java to enhance functionality and ensure correctness in
removed unused KeyValuesProvider and ObservationConvention interfaces from Observation. java to streamline the code by eliminating unnecessary interface
fix potential npe in persistentregistrymanager. processidrematches ( )
updated return statements in AtomicIntegerArray, AtomicLongArray, and AtomicReferenceArray to cast ` base ` to ` long ` to ensure correct handling of integer
added caching for data format strings in HSSFCellStyle. java to improve performance by reducing redundant calls to getFormats ( )
updated the request format in RemoteAuthenticationEndpointTests to include username as a query parameter to enhance the endpoint's capability to filter users based on
updated condition from ` def. needsInput ( ) ` to ` def. finished ( ) ` in ` DeflateCompressor. java ` to
updated logging for launcher _ ALLAPPS _ EXIT to include workspace and workspace container information to improve logging accuracy for app launch events
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
remove deadlocktest
bugcontentprovider : don't set the old view when the new input be null
added a menu item for opening the JavaScript server in the browser to enhance user experience by allowing users to open the JavaScript server
added a new error message for duplicate output and refactored method signatures for clarity to improve error handling and maintainability of the code
removed redundant Runnable instances and assertion statements from BasicTest. java to streamline code by eliminating redundancy and improving readability
fix coordinatearray. reverse ( coordinate [ ], coordinate [ ], coordinate [ ] )
updated method call from ` setOpen ( ) ` to ` setOpen ( ) ` in ` ToolbarPanel. java ` to ensure proper functionality
added a new boolean variable ` first ` initialized to false in ` TestPayloads. java ` to ensure that the first element of the first
replaced workspace state check with a method call to showOverviewMode to simplify the code and improve readability
updated the destination of the message dispatch in NetworkRouteTest. java to ensure the correct destination is set for the message dispatch
changed return value from Integer. MIN _ VALUE to Integer. MAX _ VALUE in MessageHandlerInterceptorDefinition. java to ensure maximum value is returned
[ wasm ] fix checkstyle issue in ` nestedarmithmetictest. java `
refactor buffer handling in HttpClientRequestImpl and HttpTest classes to improve performance and maintainability of the code
updated the artifact replacement logic in GetMavenDependenciesTask. java to exclude " analyzers - " instead of " analyzers - "
pdfbox - 2576 : use getcosdictionary instead of getdictionaries
removed debug print statement and simplified variable assignment in ReferenceUtil. java to streamline code for better readability and maintainability
add query type to the visible field predicate ( # 7481 )
added new configuration options for the Solidity JSON RPC service port to enable dynamic configuration of HTTP settings for the solidity service
added a type check before removing the drop target from the drag controller to improve type safety and prevent potential ClassCastExceptions
refactor stubJar generation logic into a separate method for improved readability to enhance code maintainability and streamline the creation of stub JAR files
( ) ) should be ( ( ) - or ( )
don't schedule flush task when daemon be start
simplify the null check for the available variable in OnlineTestCase. java to improve code readability and maintainability
updated return type from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository. java to ensure correct handling of user return values
refactor handling of ` onIdleTimeout ` and ` onIdleTimeout ` in ` HttpChannelState. java ` to improve error handling and stream
modified the CreateEndPoint class to extend Invocable. NonBlocking instead of Runnable to simplify the class structure and improve performance
updated regex patterns in TableBlockParser. java and added unit tests in TablesTest. java to improve handling of column headers and enhance test coverage
updated the camera's return value from 32.0 f to 31.0 f to improve the visual quality of the camera
added a preference for startOnBootSetup and updated return values in Utilities. java, and updated GpsSatellite URL in GeneralLocationListener
updated the BigInteger length from 128 to 512 in DefaultOAuth2ClientDetailsEntityService. java to accommodate larger client secrets for better security
- a - a - and - - - - - - a - test for mysql and postgresql
added JUnit Ignore annotation to ScheduledMethodMetricsTest. java to mark the test as ignored due to Race condition still running
refactor SegmentGenerationAndPushTaskExecutor to use PluginManager for file system initialization to enhance error handling and improve code clarity
added locale - specific date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure consistent date formatting across different locales
added MetalLookAndFeel import and set it as the current look and feel in bug8032878. java to enhance the visual appearance of the
added synchronization and refactored message handling in Bot. java to improve thread safety and resource management during message destruction
updated error handling by changing the method call from ` getMessage ( ) ` to ` error ( throwable ) ` to improve clarity and consistency in error
refactor methods to use'from'instead of'module'in ModuleTable and PackageTable classes to improve code readability and maintainability by using
added exception handling for CmdLineException in PinotAdministrator. java to improve error reporting for better debugging
odododododododododododod.......... and.....
refactor variables and methods in CustomPlaybackOverlayFragment and ImageButton classes to improve code readability and maintainability
updated zoom level settings in BasicMapViewer. java to ensure minimum and maximum values are set correctly
refactor admin user and group handling by introducing processUser and processUserGroups as parameters to improve code clarity and maintainability by encapsulating user
replaced ` AccessController. checkPermission ` with ` sm. checkPermission ` and refactored the ` assertCheckPermission ` method to improve permission checking
added support for argument extraction in DelegatedClientAuthenticationAction to enhance the authentication process by incorporating argument extraction capabilities
changed the defaultGroup field from non - final to final to ensure immutability of the defaultGroup variable
fix tilecache not be destroy properly
removed redundant ` removeAllViews ( ) ` calls in ` InfoLayoutHelper ` and ` CustomPlaybackOverlayFragment ` to streamline the code by
refactor cleanFeedsWithoutSubscriptions method to improve clarity and maintainability to enhance code readability and streamline the cleanup process
replaced instances of ` CoreAuthenticationTestUtils. getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests. java ` to streamline
nifi - 5393 : use temporaryfolder in filebasedclusternodefirewalltest
ggb - 548 fix for conic curve ( e1, e2, e1 )
reformatted code in RandomAccessReader. java for consistency to enhance readability and maintainability of the code
added @ SuppressWarnings ( { " unchecked ", " vararg " } ) annotations in Fields. java and MockitoBeforeTestNGMethod. java
refactor CImage. java to introduce imageToArray and add createFromImages methods for handling multiple images to improve image processing capabilities and enhance flexibility in handling
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder. java ` to ensure compatibility with the latest HBase
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` to improve clarity and consistency in naming conventions
replaced null - safe equality checks with Objects. equals for null - safe equality checks to improve code readability and reduce boilerplate code
rename method from ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` and add nullable annotations to improve code clarity and enforce
added assertions to verify the location view properties in NinjaDefaultTest. java to ensure proper validation of view properties in the application
renamed the method from ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations to improve clarity and functionality in
updated padding logic in DetailFragment. java and adjusted listViewPositionOffset in ListFragment. java to improve layout responsiveness and ensure proper scrolling behavior
added interrupt handling for thread interruptions in ZkStateReader. java to improve error handling and provide clearer context for thread interruptions
added null checks for field names in HttpFields. java and created a new test for empty headers in RequestTest. java to enhance request validation
server : don't allow static nat in a network if it be not support in the network
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment. java to ensure the header scrolling
added functionality to remove an extra empty screen from the workspace to enhance user experience by removing unnecessary empty screens
added a fixedWidth property and modified glyph handling logic in BitmapFont. java to allow dynamic adjustment of glyph widths based on text scaling requirements
removed the ` showTitle ` boolean parameter from the ` createFragment ` method in ` ChangeLogFragment ` to simplify the fragment creation process and
added preEvent, postTransition, and postTransition methods to AbstractStateMachineFactory to enhance state machine functionality with context management
fix typo find by codespell on fossies. org
updated role creation in TestAuthorizationApiAuthorizer and improved HiveConf handling in StorageBasedMetastoreTestBase to enhance role management and ensure compatibility
refactor sorting logic in FacetComponent. java and update query parameters in TestDistributedSearch. java to improve code readability and maintainability while ensuring
replaced the creation of ` createOverridingProperties ( ) ` with a call to ` createOverridingProperties ( ) ` and updated the cache
added functionality to retrieve and stop Jetty instances in DeleteInactiveReplicaTest. java to improve resource management and ensure proper cleanup of resources during tests
show the filename in the long press menu on file list , see # 559
added a new constant ` INVALID _ DIRECTION ` and updated conditional checks for ` mPreviousReorderDirection [ 0 ] ` to handle cases
added currency, from, and to fields in InnerTransferRequest. java and updated API path in AccountAPI. java to enhance data representation and
add method getexecutionidforjobid ( long jobid ) to jobexecutionservice
added a new annotation ` EnableAdminClient ` in the ` org. noear. solon. admin. client ` package to enable the
replaced specific imports with a wildcard import and implemented new visitIdentifier methods in FindTypes. java to streamline import statements and enhance identification handling
set action text color to primary dark for the authenticator activity
added new ` find ` method in ` Manager `, ` StreamSupplierComponent `, ` AbstractManager `, ` MockManager `, and
renamed test steps to test steps and updated related methods to improve clarity and maintainability of the code
reformatted test method names in ` StaticHandlerMethodResolverTests ` for consistency to improve code readability and maintainability
added a method to cancel a client in RpcServer and modified the startDriver method in SparkClientImpl to improve client cancellation handling and provide
added ` getImplicitPreCoercionValue ( ) ` method to ` SkylarkParamInfo `, ` ParamInfo `, and ` Reflection
initialize ` lastDisplayedUser ` to ` Optional. empty ( ) ` to ensure ` lastDisplayedUser ` is initialized to ` Optional. empty
added a method ` findAll ` to ` QueryDslMongoRepository ` and updated the ` createQueryFor ` method to accept a ` Predicate.
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerExceptions when stopping services
added a break statement in DefaultPlannerBenchmark. java to exit the warm - up loop when a failure occurs
added xread and xreadGroup methods to MultiKeyPipelineBase and MultiKeyBinaryRedisPipeline classes to enhance data handling capabilities in the application
renamed ` LinkedBufferInput ` and ` StreamInput ` classes to improve clarity and consistency in naming conventions to enhance code readability and maintainability by standard
added a WebSecurityCustomizer bean and configured it in CasWebAppSecurityConfiguration to enhance security configuration by integrating WebSecurity support
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStoreNoDoAs
added a method to register a ContentProvider and modified the ContentProviderController's create method to improve content provider registration functionality and ensure proper initialization
updated the ` AttributeReader ` constructor to use ` ClassFile. Version ` instead of ` Version ` to ensure compatibility with the new class file
added keep - alive configuration to SingleConnectionManager to enhance connection management by allowing keep - alive configuration
[ java ] rename unicastsenderflowcontrol to unicastsenderflowcontrolsupplier to unicastsenderflowcontrolsupplier
ggb - 3353 : don't try to draw 3d locus if no point
added ConcurrentHashMap and ConcurrentMap imports, modified endp handling in WebSocket - related classes, and updated WebSocket flushing logic to improve concurrency handling
refactor WebDriver initialization in HttpWebClient. java to use a configurable driver type to improve flexibility and maintainability of the WebDriver instantiation process
. should. should............. should.......
trufflelanguage : remove deprecate method in trufflelanguage
updated exception handling in StubberImpl. java and added new test classes StubbingWithBadThrowablesTest. java and UninstantiableThrowable
updated assertions in Actor and Group classes to throw an IllegalArgumentException for non - ascendant actors to improve error handling and provide clearer feedback for developers
added location permission dialog and error handling in LocationPickerActivity to enhance user experience by allowing location access and permission management
add a simple example to show how to use a counter for a message
added import for CookieSpecs and set its value to STANDARD in GetHTTP. java to standardize cookie specifications for HTTP requests
refactor intersection logic in Intersector. java to use ` r1. overlaps ( r2 ) ` instead of ` if ( r1
replaced DeemphasisFilter with NonClippingGain in P25AudioModule. java and updated audio processing in AirspyTuner
added monitoringUrl parameter to the ScrollingPanel and SystemInformationsButtonsPanel constructors to enable tracking and validation of monitoring information in the application
removed unused configuration option ` SERVICE _ CREATE _ TIMEOUT ` to streamline service creation process by eliminating timeout settings
updated icon resource based on place description to improve user experience by providing appropriate icon resources based on place description
added null check for ` type. getPackage ( ) ` before accessing its properties to avoid potential NullPointerException when ` type ` is null
added a new file PrintInlining. java containing a main method that prints " Passed " to facilitate the execution of the
fix for nested ` ` { }'' in javadoc tag ( # 3391 )
[ java ] remove unused private field in archivetest. java
updated EdgeDataTableModel to use edgesAndMetaEdges instead of edges to ensure correct representation of edges in the graph
removed unnecessary imports from SpringResourceProperties and PasswordManagementConfiguration to streamline code by eliminating unnecessary dependencies
updated Timber warning message format from ` % d ` to ` % f ` and added a call to ` Timber. w ` to
don't schedule room removal event if cluster be start
updated the minimize field from'replicas'to'cores'in AutoScalingHandlerTest. java to improve clarity and accuracy of the configuration
added flipY, flipY, and generateMips settings to TextureHelper. java to enhance texture rendering quality and improve compatibility with
refactor ` PythonDslProjectBuildFileParser ` and ` AbstractCell ` classes to improve event handling and streamline parser creation process
[ j2kt ] add librarynormalizationpass to the j2cl transpiler
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactory ` to simplify
[ hotfix ] fix checkstyle violation in memorymanager
added TemporalType import and TemporalType annotation to ConsoleSessionVO. java to enable date - time handling in the ConsoleSessionVO class
added Hbs and HbsTest classes for rendering and testing of Handlebars templates to enhance the template rendering capabilities and improve test coverage for Handle
chat message : hide message when no hint be give.
[ iotdb - 6391 ] fix importcsv to use value ( ) instead of keyset ( # 3393 )
simonstewart : add a test to make sure that alert dialog be always show when the user specify a name.
added a condition to return null if the getDistinctColumnIndices ( ) has more than or equal to 2 to ensure proper handling of distinct column
[ flink - 3486 ] [ core ] fix misusage of miscutils. getclasspathfrommanifest ( )
regenerate client with updated copyright year ( # 4382 )
updated Maven bundle dependencies from " websocket - server " and " websocket - client " to " jetty - websocket - server " and " websocket -
changed the return type of the ` entrySet ( ) ` method from ` entrySet ( ) ` to ` unmodifiableMap ( ) ` to improve immut
fix for ` ` save a sketch'' bug
replaced instances of ` new Float ` and ` new Double ` with direct calls to ` getBytes ( ) ` and ` getDeclaredConstructor ( ) `
updated timestamp retrieval from getDate to getTimestamp in JdbcDataSource. java to ensure compatibility with timestamp - based data retrieval
added a check for both Context and " javax. naming. Context " in the HtmlJndiTreeReport class to ensure proper handling of context
refactor database option retrieval to use a switch statement to improve clarity and maintainability of the code
changed the edge type check from " double " to " mutual " to accurately reflect the intended representation of the edge type
removed the private static final integer FLAG _ SLIPPERY and replaced it with an import for FLAG _ SLIPPERY to simplify code
trufflelanguagefieldprovider. getarraydimension ( ) now correctly handle array.
added Google Drive folder path preference and its associated methods to enhance user experience by providing access to Google Drive folder paths
ggb - 2131 : shuffle suggestion on enter, down and enter
added @ Nullable annotation to multiple assertThat methods in Truth. java to enhance null safety by explicitly indicating that the target parameter may be null
updated case handling in ArrayUtil. java to improve clarity and structure to enhance code readability and maintainability while ensuring correct handling of larger array sizes
added a new test class ` ApiExceptionTest ` and modified the ` ctorCanBeInstrumented ` method in ` ClassInstrumentor ` to ensure
[ flink - 20637 ] [ table - planner - blink ] fix race condition in streamin and streamout
implement keyguardmanager . iskeyguardsecure ( ) - new in api 23
added serialVersionUID fields to StringDialog class to ensure proper serialization compatibility for the StringDialog class
updated string processing to handle spaces and added conditional logic for retrieving overrides to improve robustness and ensure correct parsing of status strings
renamed the test method from ` assertEmptyThrowsMutipleFailureForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForMany
modified the ` checkDrained ( ) ` method in ` AsyncFileImpl. java ` and added a new test in ` FileSystemTest
updated lightS _ NUM and LIGHT _ INTESITY values, modified shader name, and modified vertex path handling in HybridLightTest
replaced instances of ` FakeProjectFilesystem ` with ` workspace. getProjectFileSystem ( ) ` across multiple test files to streamline filesystem initialization and improve
changed the type of the ` loadRerunFile ` method from ` String ` to ` PathWithLines ` to improve code clarity and
refactor Gson, JsonArray, and JsonObject classes to improve code readability and maintainability
remove @ notnull annotation ( # 2022 )
added a method to directly close the ParcelFileDescriptor to ensure proper resource management and prevent memory leaks
added thread - local handling for prefix index management to improve thread safety and prevent concurrent access issues
added logging configuration for HTTP connections in TestDistributedStatsComponentCardinality. java to improve debugging capabilities and facilitate easier troubleshooting
added throwIfImmutable ( ) method to IntList. java to ensure immutability of the list
added ` @ NotNull ` annotation to ` onApplicationEvent ` method and improved URI creation in ` GrpcClientBuilder ` to enhance null safety
refactored the ` workDir ` method to use a ` Supplier < Path > ` instead of a static method to improve code readability and
don't invalidate the function array if it don't exist.
added platform - specific line ending handling in GenerateManifestStep. java to ensure proper handling of line endings of manifest files on Windows
fix for rfe 3531161. add a new test case.
added nullability annotation to ConfigDescription methods in ConfigDescriptionRegistry. java to indicate that these methods should not be null
make masterjobcontext. createcancellationexception non - throwable
pdfbox - 4892 : don't initialize stream if there be no image
refactor ManagerBase class to improve code structure to enhance maintainability and readability of the code
added a new BooleanFlag named ENABLE _ ALL _ APPS _ IN _ TASKBAR to enable the access to All Apps from the system Task
replaced FragmentActivity instantiation with Robolectric's buildActivity method to streamline activity handling and improve code maintainability
renamed the ` getFileCoordinates ` method to ` processFileCoordinates ` and introduced a new ` getDecimalCoords ` method to improve code clarity and
rename ABCase1, ABCase2, ABCase3, and ABCase4 classes to TestABCase1, TestABCase2
updated the parameter name from ` num ` to ` value ` in the ` saveEnergyPriceHistoryDone ` method and added a null check for
refactor handler assignment in OpenRocketViewer. java to improve clarity and maintainability of the code
added a new file ` ChangeDependencyGroupIdAndArtifactId. java ` with configuration options for changing Maven dependency groups and artifact IDs to facilitate
added a check for indexable input paths in IndexingJob. java and improved error handling in SegmentChecker. java to enhance robustness by
updated address comparison logic in GCObjectHeapIteratorAddressOrderedList _ V1. java and CheckObjectHeap. java to improve code readability and
refactor PreprocessorDelegate to use Supplier for managing replacement paths and source paths to improve performance and readability of the code
rename ` JsonExamples ` to ` Examples ` to improve clarity and consistency in naming conventions
added debug logging statements in ViewExtractor. java to improve traceability and debugging during file operations
refactor FindsByLinkText class for improved readability to enhance maintainability and facilitate future updates
added a new file ` Main. java ` with a main method that prints " java oop entry point hit " to facilitate the
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conference
removed redundant continue statements in NativeScanner. java to streamline code and improve performance
changed package from ` net. pms. test ` to ` net. pms. configuration ` in ` RendererConfigurationTest. java `
replaced the use of ImmutableSet with a Supplier for retrieving queried dependencies to improve performance and reduce memory usage during dependency resolution
replaced stream ( ). count ( ) with size ( ) for remoteContainsResults to improve performance by using the size ( ) method instead of
added charset extraction from content type in ExtractingDocumentLoader to ensure proper handling of character encoding in metadata
cloudstack - 6892 : fix sql injection for the account _ name field
added a condition to return early if the slot is - 1 in WindowListener. java to improve performance by avoiding unnecessary processing when the slot is
add an option to ignore remote repository introduce by transitive dependency
removed redundant injection of backgroundJobManager in ContactsPreferenceActivity to streamline code by eliminating unnecessary injection
updated ColorsActivity to extend AppCompatActivity instead of Activity to enhance compatibility with newer Android features
added null check before closing the selection object to prevent potential NullPointerException when closing the selection
added a check to break execution if the matcher's start and end matches the string length to improve robustness by preventing index out of bounds
updated the @ IntegrationTest annotation to include a value of " server. port = 0 " to ensure the integration test runs with a specific server
added a new UDF class ` UDFReverse ` and registered it in ` FunctionRegistry ` to enable the determination of reverse functions in Hive queries
updated context path retrieval methods to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` to improve clarity and consistency
updated Tracer class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] ignore flaky test in rocksdbstatebackendreaderkeyedstateitcase
simplified import statements in XMLChangeLogParserTest. java to enhance code readability and maintainability by using wildcard imports
replaced UnsupportedOperationException with synchronized block in StarTreeRecordStoreCircularBufferImpl. java and added a clear method in TestStarTreeRecord
updated the forecastMinutes, forecastHours, and forecastDays values in OpenWeatherMapOneCallHandler. java to improve the accuracy of the forecast
updated test annotations to include a timeout parameter in AbstractPageOperationTemplateTest. java to improve test reliability by allowing more time for tests
refactor RemoteTargetGluer and FloatingHeaderView classes to improve animation and button handling to enhance user experience by providing visual feedback during app creation
updated ` parseRerunFile ` method to return an ` Stream. of ` instead of a collection of ` Collection < FeatureWithLines
fix vanilla bug in creative tab
updated assertions in TestRadioButtons. java to remove redundant parameters to simplify test assertions for better readability and maintainability
added support for file size options in RCFileCat. java and introduced a new method to retrieve the number of rows to enhance file size management
refactor multiple clustering - related classes to improve code organization to enhance maintainability and readability of the codebase
added multiple checkNDArray calls in JnaUtils. java to ensure robust error handling for closed NDArray
updated BlobServer. java to improve code structure to enhance maintainability and readability of the code
fixed bug 147373 - unusedprivatemethod no longer report false positive for static private call from initializer
updated variable name from ` lexicalScope ` to ` lexScope ` to improve clarity and consistency in naming conventions
add unit test for sftp auto - startup
added new methods for level and root in Node, Quadtree, and AbstractSTRtree classes, and refactored STRtreeNode constructor to
updated version parsing logic to handle minor version correctly to ensure correct parsing of version numbers in the application
added a check for empty tags before processing items in ItemRegistryImpl. java to improve performance by avoiding unnecessary processing when tags are empty
added a new ` parseDateTimeStringToEpochMillis ` method to ` DateTimePatternHandler ` and a corresponding ` fromDateTime ` method in `
hhh - 17100 fix npe in customtype. disassemble ( )
refactor Log4j2ConfiguratorServlet class to improve logging functionality to enhance performance and maintainability of the application
replaced the creation of HiveException and AuthorizationException with a direct return of a new instance to simplify code and improve readability by eliminating unnecessary variable
modify CC command prefix handling and add a new test for prebuilt C++ libraries with aWrapped C++ wrapper to improve code readability and ensure
added Buildable annotation to CustomResource with editableEnabled = false to enable the builder for custom resources in the application
removed the @ Override annotation from the Only class to streamline code by eliminating unnecessary overrides
added a new constant TIMEOUT _ THREE _ HOURS and updated HttpConnectionParams to set a custom timeout based on its value to improve connection st
added new constants for " nonresolving _ raw _ target _ node _ parse _ pipeline " and updated the scope in RawTargetNodeTo
simonstewart : add an option to disable trace
removed the @ Singleton annotation from ApplicationController. java to streamline the code by eliminating unnecessary dependencies
added handling for OwnCloudAccount display names in ShareActivity to improve user experience by dynamically retrieving the username based on the display name
added BatchStatus import and a test for paused job execution in SimpleJobLauncherTests to enhance job execution management and ensure proper handling of paused job
added null check for cacheConfig before processing to avoid potential NullPointerExceptions when cacheConfig is null
[ grid ] change the visibility of the DockerSession class to public to allow external access to the DockerSession class.
[ javaparser ] change default package name to java. lang.
pdfbox - 4892 : only parse dictionary if we have a non - sequential pdf
mahout - 4892 -- fix testdistributedlanczos solver cli test
updated HttpServerTestBase class to improve HTTP request handling to enhance performance and reliability of HTTP server tests
refactored assertions in PortletApplicationMapTest to improve clarity and structure to enhance readability and maintainability of the test code
added tests for handling ` innerBeanList1 ` and ` innerBeanList2 ` in the ` BeanTableSchemaTest ` class to ensure
spring - boot - starter - add spring - boot auto configuration customizers
updated the loop structure in Indicator. java and added IndicatorTest. java with unit tests to enhance functionality and ensure correctness of the Ind
added new method ` execInContainerWithUser ` to ` ContainerState `, ` ExecInContainerPattern `, and ` ExecCreateCmd
refactor how WebSocket messages and text listeners are handled in NettyWebSocket. java to improve readability and maintainability of the code
added test cases for attribute conjunction and negated attribute in SemgrexTest. java to enhance test coverage for semgrex functionality
added a broadcast intent for the CLEAR _ PULL _ UNREAD action in HomeFragment. java to enhance user experience by providing a clear
removed conditional check for GINGERBREAD in TouchImageView. java to simplify the code for better readability and maintainability
fix unit test and add defaultprofilevalidationsupport. flush ( )
( chore ) camel - base - engine : optimize rout engine to reduce stack frame in use during rout.
added FloatingActionButton functionality to manage FAB menu visibility in ShareActivity to enhance user experience by allowing easy access to the main FAB menu
added InlineParslet class to handle inline date parsing in ToDateTokenizer to enhance date parsing flexibility and improve error handling
updated TestAnonymousClassUnloading. java file to improve test coverage for anonymous class unloading scenarios
updated error messages in ErrorMessages. java and XPATHErrorResources _ sv. java to improve clarity and accuracy of error messages
added checks for server address and host URL input before binding to improve user experience by ensuring operations are only bind when the server is not checked
updated method calls from ` getBeginColumn ( ) ` and ` getBeginColumn ( ) ` to ` getBeginLine ( ) ` and
added waitFor ( ) method to ManagedThread and invoked it in CxxPreprocessAndCompileStep to ensure proper process termination and manage thread interru
added a new boolean field ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and implemented a method in ` CoreAuthenticationUtils ` to
remove call to ` ` checkIfLoaded ( )'' in ` ` defaultrecordstore. java `
added support for SSL protocols in NettyWebServer to enhance security by allowing configurable protocols
replaced ` AtomicBoolean ` with ` AtomicReference ` and introduced a new ` Wrapper < T > ` class to improve thread safety and simplify the management of
updated the return statement in QueryDslMongoRepository to handle null property cases and added a unit test for handling empty values in SpringDataM
updated assertions and error messages in RoundRectBorderTest. java to improve clarity and accuracy of border change validation
added validation for empty cluster configuration in Cluster. java to ensure that a non - empty cluster configuration does not cause runtime errors
remove flaky test ( # 2451 )
updated CountDownLatch and Future initialization to use'min'instead of'cnt'and added a length check for'sign'to improve code clarity
updated conditional check from ` if ( windows ) ` to ` if (! windows ) ` to correct logic to ensure proper handling of non -
refactor methods in MoreCollectors to use a unified return type for empty collections to improve code readability and maintainability by centralizing the collector functionality
added null checks and improved WebSocket client handling in the Bitmex streaming services to enhance stability and prevent potential NullPointerExceptions
added validation for lat and lon in GeoPointField. java and corresponding tests in TestGeoPointField. java to ensure that invalid lat and lon
updated workflow file creation methods to use ` workflowFilesService. createFile ` instead of ` workflowFilesService. writeToFile ` to improve clarity and
refactor ResponderId class for improved clarity to enhance maintainability and readability of the code
modified the ` getTableDocument ` method to include a ` withDependents ` parameter to enhance the flexibility of table document retrieval based on dependency requirements
added a confirmation dialog for the number of consecutive uploads without coordinates to improve user experience by informing users about uploads without coordinates
added caching and handling for query profile data in ProfileResources. java to improve performance and resource management for user - friendly queries
refactor JpaMetamodelEntityInformation to improve property value handling to enhance code clarity and maintainability by consolidating property setting logic
added index and view handling in UpgradeIT. java and refactored related methods in UpgradeUtil. java to enhance timestamp validation and improve code
add ` ` register default exception mapper'' property to dropwizard - web. xml
added a boolean parameter to the panel in EntryEditor. java to control the behavior of the store field action
modified nativeCreateNSWindow method to include an owner pointer to enhance flexibility in creating native window pointers based on the owner's pointer
changed the database table name from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME to ensure consistency in database naming conventions
added new items for STOCK and STOCK in the Tile class to enhance gameplay experience by providing additional visuals and animation options
fixed - ` ` illegalstateexception : illegalargumentexception : illegalargumentexception : - > non - string''
added detection for unrelated types in generic container to improve error handling and debugging capabilities
refactor back animation handling to incorporate BackProgressAnimator for improved responsiveness to enhance user experience by properly managing animation states
changed the ` _ initialPageNo ` variable from final to non - final and modified its initialization logic to allow dynamic adjustment of the initial page
fix checksum calculation in jedisclustercrc16. java
added comment matching functionality in FormattedSqlChangeLogParser to enhance SQL change log parsing to include comments in the change log
plexus archiver should be set on the archiver instead of a new one
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader. java to improve error handling by using a more specific exception
refactor aggregation logic in ` TSServiceImpl. java ` and add a new test method in ` DaemonTest. java ` to improve code clarity and
from.......... in................
added a new test method ` testDebugInfo ` and updated method calls in ` OutputMemoryTest `, ` PrintR `, and `
replaced UnmodifiableClassException with a custom Exception and added error handling for Byte Buddy class instrumentation to improve error handling and provide clearer diagnostics for
[ wasm ] add more detailed trace for class initialization.
updated the parameter order in the BaseBrokerRequestHandler. java file to ensure consistent usage of the method across the codebase
use caffeine cache instead of guava cache to improve performance
modified the ` createDataSource ` method to accept a boolean parameter for read - only mode to enhance flexibility in data source configuration based on read -
updated INVALID _ SOURCE _ TARGET _ RELEASE regex to allow both source and target versions to improve error handling for invalid source and target release formats
updated URI construction in DetailFragment. java to use Google Maps instead of Google Maps to enhance user experience by providing a direct link to Google Maps
added null check for inherited parameter contexts in StandardParameterContextDAO. java to prevent potential NullPointerException when accessing external data
updated ClassLoader. java with changes in method implementations to enhance performance and maintainability of the code
added functionality to set the origin response headers in ProxyRequestHelper to ensure proper handling of HTTP headers in proxy requests
added a new ProfileSettingDrawerItem to the GpsMainActivity class to enhance user experience by providing access to profile settings
make xml validation configurable in the application context
simonstewart : make the firefox driver work with the expected value
added a maxRows variable and updated fetch size handling in IoTDBStatement. java to allow dynamic adjustment of fetch size based on fetch size
refactor ` isCountOptimizable ` method to ` allActionsAreOptimizableFilters ` to improve clarity and maintainability of the code
added mouse mouse event handling for node selection in StandardVizEventManager to enhance user interaction with node and mouse positions based on visualization configuration
replaced ` buffer. setMemory ( byte ) 0 ` with ` zeroBuffer ( ) ` and introduced a new ` zeroBuffer ` method to
get xorgroup from the working memory, not directly from the working memory
removed methods ` getHeight ( ) ` and ` getWidth ( ) ` from ` LCDUIImageMonochromeBitmapSource ` to streamline
refactor SourcePathResolver to improve path retrieval logic to enhance clarity and maintainability of the code
added test for encode and parse of dstu2 with valid value
refactor the ` changeSchemeIfIsWebSocketUpgrade ` method to be static and improve URL encoding handling to enhance code readability and maintainability by reducing
move test suite to a separate module to make it easy to run the test suite
added a private method ` getCxxPlatform ` to retrieve the CxxPlatform based on the build target and arguments to improve the handling of CxxPlatform
added imports for ` IndexReader `, ` Similarity `, and ` IndexReader ` in multiple Java files to enhance documentation capabilities and improve
updated ConcurrentLinkedStack to handle null values and improved test cases for edge cases to enhance robustness and reliability of the ConcurrentLinkedStack implementation
added ` isMatched ( ) ` and ` setMatched ( boolean matched ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueue
added null check for mDirectories before accessing its item to avoid potential NullPointerException when mDirectories is null
updated the condition in RecentsView. java to check if overview state is not enabled and first layout is not active to improve gesture handling logic
added multiple package - info. java files for various Lucene - related packages to improve organization and clarity of package - level documentation
updated the text of the visible autoleveler panel to improve user interface clarity by providing a more descriptive text
added optimize callback functionality in DirectUpdateHandler and DirectUpdateHandler2 to enable dynamic updates based on user configuration
updated compression logic in CompressionMode. java to use a new boolean parameter for padding to improve code clarity and ensure consistent handling of compressed data
removed user _ data check from Shaderc. java to streamline user data validation process
added a condition to check if the base is localMetaStore along with retry limit to enhance retry logic for local metastore connections
removed redundant import statements and added a check for ConnectionClosedException in HeliosSoloLogService. java to streamline code and enhance error
refactor Subject class to improve code structure to enhance maintainability and readability of the code
use weak reference rather than weak reference for serialization
updated color distance calculations in HSSFPalette. java and added a new test method in TestHSSFPalette. java to improve color comparison accuracy
chore ( regen ) : update license year for generated file
'''''''''''''''''''''''''
added flags parameter to the registerReceiver method in ShadowApplication and ShadowContextImpl, and updated ShadowInstrumentation to include flags as a parameter to enhance flexibility
updated FFmpegTest. java to use InvocationOnMock for mocking the " ffmpeg - version " to improve test reliability and maintainability by
added handling for previous input streams in Ogg and OggInputStream classes to improve input stream management and prevent memory leaks
[ log4j2 - 1752 ] make assertionresult. failuremessage a constant
[ te ] migration ] don't handle anomaly failure when there be no anomaly
refactor BaseActivity and DetailActivity to improve code readability and maintainability to enhance maintainability and reduce redundancy in toast display logic
updated request creation in TracingFeignClient to use requestTemplate ( ) instead of a method to improve clarity and maintainability of the
added validation for LDAP names and updated referral handling to improve robustness and error handling for invalid names in LDAP connections
refactor retain method to accept a list of Payload objects to improve code readability and maintainability by consolidating retain logic
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a new test for item click functionality to improve clarity and functionality of item click handling
[ hotfix ] [ test ] remove unused setup method in checkpointfailuremanageritcase
remove genericitemuiprovider. it be not use anymore
added support for a new ` ` select object'' property in the selector box
added @ Isolated annotation to MetaInfConfigurationTest. java to indicate that the access method of FileSystemPool is a static access method
added serverConnector. setHost ( HTTP _ INFO. bindAddress ) to enable the server to bind to the HTTP / info server
updated token validity settings in DynamicClientRegistrationEndpoint to accommodate different grant types to enhance token validity settings based on the application's role
added a CloverInstrumentationFilter to check if a class is a candidate class in TestInterfaceAudienceAnnotations. java to enhance annotation filtering capabilities
added support for Smartmi Evaporative Humidifier in MiIoDevices. java and modified output formatting in ReadmeHelper.
move lava to cost - inf if possible ( # 3451 )
changed method visibility of setScrollRangeDelta from package - private to public to allow access to setScrollRangeDelta from other packages
added error logging for empty repository lists in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to ensure that the repository list is not empty
simplified the condition for checking missing values in IntHashSet to enhance code readability and maintainability
added Serializable interface to RuleAdministratorImpl to enable serialization support for RuleAdministrator objects
updated allowedOrigins and allowedOriginPatterns to use sets instead of lists to improve performance and flexibility in origin generation
updated file names in BaseG3dHudTest. java and NewModelTest. java to improve clarity and organization of G3D
added logging and error handling for updateLatestSolidifiedBlock in Manager. java to improve error handling and ensure robustness in the updateLatest
hbase - 25725 fix npe in execresult. get ( ) ( # 2538 )
added a method to check if a request is accessible based on user context to enhance security by preventing potential NullPointerExceptions
refactor ClassMirror and StubJar to use a new CreateStubAction class for creating stub classes to improve code organization and maintainability by encapsulating
added a TextView for the internal link text in FileDetailSharingFragment to improve user experience by providing specific text for shared internal links
updated expected string format to use Locale. ENGLISH to ensure consistent formatting across different locales
changed the condition to check if the SATURDAY is not equal to the DAY _ OF _ WEEK to ensure the test accurately
updated hideInput method in AllAppsContainerView and added IME hiding functionality in LauncherAllAppsContainerView to improve user experience by ensuring the keyboard
added support for embed event store in saga configuration test.
refactor BsdFileStore to use BsdNativeDispatcher for retrieving mount point names instead of UnixPath to improve code clarity and maintainability by
add test case for issue # 1599 ( # 1599 )
added a new command'x'and'y'with an optional position in the SpawnCommand class to enhance the command's functionality
added MIN _ CONTENT _ DIMEN constant and refactored getContentAreaWidth method to use it to improve code readability and maintainability by
fix compilation of graal compiler test.
updated directory initialization from newDirectory ( ) to newMockDirectory ( ) to ensure compatibility with Windows semantics
added failed check classes to the UpgradeCheckRegistry and refactored the addColumnsToUpgradeTable method to improve error handling by ensuring all
refactor Environment class for improved readability to enhance maintainability and ease of understanding for future developers
added LuceneTestCase import and annotation for BadApple in RecoveryAfterSoftCommitTest. java to address issue SOLR - 7421 related to the
modified file system separator handling in CodenameOneImplementation. java and removed unnecessary type check in HashtableContent. java to enhance code clarity and
rename FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDIO _
replaced specific ResourceAccessor imports with a wildcard import and updated resource accessor initialization in LiquibaseEntityResolver and XMLChangeLogSAXParser to stream
added security. setproperty ( " jdk. tls. disabledAlgorithms ", " " ) in ComHostnameVerifier and JavaxHostnameVerifier
replaced ` EMPTY ` with ` CxxDeps. of ( ) ` and removed the static final EMPTY constant from ` CxxDeps. EMPTY ` to
renamed expectedDirectory, actualDirectory, and actualFullDirectory to expectedStubDirectory, actualStubDirectory, and actualFullDirectory to clarify the purpose
removed unnecessary whitespace in Int2ObjectHashMap. java to improve code readability and maintainability
updated folder name hint logic to handle empty folder names to improve user experience by providing a clear indication when the folder name is empty
updated client ID from " example " to " uaa " across multiple test cases to ensure the correct client is loaded for the specified client ID
changed access modifier of methods from public to private in ShadowSQLiteDatabase. java to restrict access to these methods for better encapsulation
updated string formatting in AtomicCounter, AtomicLongPosition, and UnsafeBufferPosition classes to improve readability and maintainability of the code
fix typo find by codespell on fossies. org
renamed method ` supportsViewFor ` to ` supportsViewsFor ` across multiple classes to improve clarity and consistency in method naming conventions
added a test for negatedInstanceOf in UnnecessaryParenthesesTest. java and modified the condition in UnwrapParentheses. java
added a new boolean field'built'and updated the teleport logic in the Location class to enable dynamic modification of the location's
replaced instances of ` Base64. encode ` with ` Base64Utils. encodeToUrlSafeString ` in ` TokenKeyEndpoint ` to
updated imports and method calls in TranslatorManagerHelper. java to improve code organization and enhance statistics reporting functionality
rename ` ContainerAnnotation ` to ` ContainedBy ` to better reflect the purpose of the annotation
added a null check for the ` getId ( ) ` method in ` ObjectIdentityImpl. java ` to ensure that the ` getId ( )
refactor ` setUpRevampedTweet ` and ` setUpRevampedTweet ` methods to improve clarity and functionality to enhance the handling
updated the verified text visibility logic based on user theme settings to ensure the verified text reflects the application's theme if the user theme is
refactor AbucoinsDigest constructor to use a local variable for the timeDiffFromServer instance to improve code readability and maintainability by reducing
camel - 16400 : camel - mongodb - allow to configure mongo connection with spring boot autoconfiguration
added sourceIndex parameter to the AttributeMapping class and updated related classes accordingly to enhance attribute mapping functionality by allowing a configurable source index
don't throw runtimeexception when altering partition with incorrect column statistic
added UserGroupInformation. isSecurityEnabled ( ) method to AuthParams. java to ensure proper security settings are enforced for user authentication
refactor ConnectivityReceiver, TerminalKeyListener, AbsTransport, and EastAsianWidth classes to improve code organization and maintainability
[ geos - 6482 ] escape email in email address in the home page
[ terasology ] remove dependency on org. terasology. engine and org. terasology. engine
updated the output formatting in JoinModeller. java to use the actual number of features instead of a fixed value to ensure accurate representation of the
added a length check for the command string in AlgebraProcessor. java to ensure that the input string is not empty before processing the command
( chore ) camel - kafka : only log message if debug level be true
replaced direct calls to ` ACTION _ SET _ PLAYBACK _ SPEED ` with ` PlaybackStateCompat. ACTION _ SET _ PLAYBACK
added new functionality for handling automatic and ignition events across multiple classes to enhance user experience by providing more informative feedback during the application
tika - 3473 : enforce ascii _ chunk _ length to be within valid range.
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest. java to mark the test as ignored due to non - deterministic
refactor lock file creation into a separate method to improve code organization and maintainability
( ) ( ) )
added a check to return null if the username equals the FEDERATION _ USER to ensure proper handling of user authentication events
don't add trufflelock object to the result of executemethodnode.
replaced ` Collectors. collect ( Collectors. collect ( ) ) ` with ` Collectors. toList ( ) ` in ` JakartaClient
don't log an error if the access event be deny
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
removed unused import of Version from CreateIndexTask. java to streamline code by eliminating unnecessary dependencies
added functionality to handle missing primary key changes for Oracle and AbstractDb2 databases to ensure proper handling of missing primary keys in the database
added MetastoreException to the execute method and modified exception handling in MsckOperation. java, along with a new test case in Test
[ flink - 18281 ] [ connector / kafka ] retry kafkapcommittable. committransaction ( ) and kaf
updated ForwardMessageToDLQActivity to include receiptHandleProcessor to enhance message processing by incorporating receipt handling
added a list of services and modified the DockerComposeContainer to handle non - empty services to improve flexibility in managing Docker compose containers by allowing
use collectionutil. copyset ( ) instead of map. entry. gettypes ( ).
removed unused HTMLCleaner imports and streamlined XML handling in FeedParser. java to improve code cleanliness and streamline XML processing
removed unnecessary checks for ` AppsCustomizePagedView. DISABLE _ ALL _ APPS ` and ` mAppsCustomizeContent `
changed the data type of ` energyReactiveVArACSumConsumed ` and ` energyRealWACMinusAbsolute ` from int to double
added a new file ` bug4150029. java ` implementing directory creation and file chooser functionality to address bug 4150029 related
added a boolean flag ` isSparkConfigUpdated ` and updated related methods in ` HiveConf `, ` SparkTask `, and ` Spark
added a method to retrieve long press indicators in AppIcon and AppIconMenuItem, and modified Launchable and Workspace classes to utilize this method
added handling for empty polygon data in WKBWriter. java and updated corresponding test cases in WKBWriterTest. java to improve robustness
refactor UnflavoredBuildTarget builder to use a builder pattern to improve code readability and maintainability by utilizing a builder pattern
added a new file MultiplyByMaxInt. java that contains a method to multiply an integer by its maximum integer to provide a utility for
updated drawer indicator enabling logic in OCFileListFragment to improve user experience by enabling the drawer indicator based on the current file state
updated package structure and import statements in TestRAMDirectory. java to improve code organization and maintainability
replaced FixedBitSet with BitSet in Automaton and Operations classes to improve performance and simplify state management
drools - 2282 : improve error message ( # 2496 )
( ) ) should be repeable ( )
updated message formatting in AbstractController. java to include a duration string to improve readability of console output for better debugging
updated the way the base class name is retrieved in OpenMBeanAttributeInfoSupport. java to improve clarity and maintainability of the code
patch by jbellis ; review by jbellis for cassandra - 1349
updated freeSize calculation in StoreDirect. java to correct memory allocation logic
fix touch event in anykeyboardview. istouchesdisabled ( )
updated SslContextFactory instantiation from SslContextFactory ( ) to SslContextFactory. Server ( ) in multiple server classes to ensure compatibility with the latest SSL specifications
removed the PrivilegedSocket class and simplified the socket creation process to streamline code by eliminating the need for privileged actions
refactor InputTest class to improve test coverage to enhance reliability of input validation logic
updated ` finishRecentsAnimationOnTasksAppeared ` and ` TaskViewUtils. java ` to include a ` pauseBlursOn
refactor NearbyMapFragment to utilize new utility methods and improve location marker handling to enhance code readability and maintainability while ensuring proper functionality
updated the clientDetailsService method calls to use clientDetailsService. retrieve ( ) instead of clientDetailsService. retrieve ( ) to ensure proper retrieval of client
refactor SqlSourceBuilderTest to use JUnit 5 annotations and improve SQL query formatting to enhance test reliability and readability by aligning with JUnit 5
http : / / issues. apache. org / jira / browse / amq - 3496 - add timeout to http : / /
added unit tests for SlidingGanttCategoryDataset's handling of unknown key exceptions to ensure that the SlidingGanttCategory
refactor filterConditions initialization to use Optional and improve null safety to enhance code robustness and prevent potential NullPointerExceptions
refactored lightcontrol to use cloner instead of spatial
updated stack trace handling and added suppress warnings in StdErrLog. java to improve code clarity and suppress warnings related to unused variables
added null checks and logging for the ApplicationContext in HttpSessionEventPublisher to ensure that the application context is not null before publishing events
don't throw a semanticexception if a create cq statement have change from v0. 14
[ hotfix ] fix typo in flinkiotdbink javadoc
apply custom simplification for all node , not just node that implement simplifiable
updated the method call in ActivityListAdapter to include the context parameter to ensure proper context is used when accessing the file icon
updated indexOrConstraintName to use schema name from the schema to ensure correct handling of schema names in the parser
allow to read bigquery table with timestamp field ( # 2451 )
added ` findViewWithTag ` method implementations in ` ShadowView `, ` ShadowViewGroup `, and ` ShadowViewTest ` classes to
updated for - each loop to use generics for type safety to enhance code clarity and reduce potential ClassCastExceptions
updated imports in IndexTool and MetaDataClient classes to improve code clarity and maintainability
added JSON _ VALUE and JSON _ CREATOR constants and modified enum value retrieval logic to enhance annotation handling and improve code clarity
svm. core. resourcefeature. isclasspath ( ) should check if the classpath file be a jar
updated CUDA _ R _ C _ 16F, CUDA _ C _ 32I, and CUDA _ R _ C _ 32I constants to
added support for multiple layout directories in ResourceLoader to enhance flexibility in resource loading by allowing multiple layout directories to be specified
use simpleattachablematerialdata in blockredstorch. getattachedface ( )
[ hotfix ] [ table - planner ] add miss case for varbinary in reltostageconverter
removed unused import of DateHelper in NoteAdapter. java to streamline dependencies and improve code clarity
updated backup error messages and added backup saving functionality to improve user experience by providing clearer feedback on backup failures
ggb - 2486 fix position of element in ev stylebar
removed file deletion checks in ShadowParcelFileDescriptor. java to simplify file creation process and improve code clarity
replaced ` getStackForThread ( ). poll ( ) ` with ` getStackForThread ( ). addFirst ( ) ` and removed unnecessary
updated rule name from " optimizations " to " controversial " in BooleanInversionTest. java to clarify the purpose of the rule
add unit test for integerequals canonicalization
added a constant for String array type to improve type handling for String arrays
refactor IME hiding logic and log events in AllAppsContainerView, LauncherAllAppsContainerView, and StatsLogManager to improve code readability and maintain
fix network issue cause by force bit to be resize below network density.
updated assertions in ` TimelineMetricCacheSizingTest. java ` and modified test methods in ` TimelineMetricCacheTest. java ` to improve
add gl _ max _ texture _ size, only calculate gl _ max _ texture _ size if necessary.
[ java ] call trystoplogrecording ( ) instead of trystoplogrecording ( ) if possible.
added a check to reset startPosn if it is in a transform to ensure proper initialization of startPosn when the transform is in the semantic analysis
updated method names and logic to use ` isSkipStarTree ( ) ` instead of ` isStarTreeDisabled ( ) ` to improve clarity
added lockNearbyView and hideProgressBar methods in NearbyActivity. java to improve synchronization during nearby places updates
add maptransformer. of ( map ) and maptransformer. inverse ( map ).
refactor EmeddedObjects and EmbeddedObjects classes to improve code readability and maintainability
added support for a nullable launcher widget span in the LauncherPreviewRenderer and PreviewSurfaceRenderer classes to improve the handling of launcher widget span information for
updated StageSelector and StageAction classes to implement StateChangeListener instead of ChangeListener to improve event handling by using the correct EventObject implementation
added methods to set calling and UID in ShadowBinder to enable tracking and resetting of process IDs in Robolectric tests
updated ExpectationFailure class to use ` Objects. equals ` and ` Objects. hashCode ` instead of ` AutoValue ` to enhance flexibility and
removed a warning log statement in BitcoinSerializer. java to streamline code by eliminating unnecessary logging
fix image replaced element width and height
added handling for escaped carriage return and carriage return characters in Markdown rendering to improve markdown rendering accuracy and ensure proper handling of escaped characters
added a neutral button to the alert dialog and refactored password handling logic to improve user experience by providing a clearer and more informative
refactor ` IoUtil. java ` to utilize ` MappingMethods ` for accessing file channel methods to improve code clarity and maintainability by centralizing
updated access modifiers from public to default for several methods in the AbstractAssert _ describedAs _ printed _ to _ console _ Test class to improve
added new options for slider keytab configuration in LlapOptionsProcessor. java to enhance user configuration options for Slider AM keytab
updated the ` tearOutGraphViewContainer ` method to accept a ` JFrame owner frame and added animation support to enhance the functionality of the
added support for multiple runnables in LauncherModel and refactored shortcutExists methods to improve handling of completion tasks and ensure proper synchronization during
updated NodeManageMemoryMergeOperator, NodePathsConvertOperator, and NodePathsCountCountOperator to use a set of node paths instead of boolean
updated the ` ValidationReport ` class to include a ` messageType ` parameter and adjusted related method signatures to enhance the functionality and maintainability of the
added a private static method ` safeProviderName ` to safely retrieve the cipher provider name to improve error handling and provide a safe way to obtain
updated method names from ` getDynamicConfiguration ( ) ` to ` getFlinkConfiguration ( ) ` across multiple files to improve clarity and consistency in
changed log level from WARNING to OFF in CCqlParserUtil. java to improve logging granularity for better debugging
added newline characters to the output in AggregateLifeCycle. java to improve formatting of output for better readability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public to allow access to BITMAP _ HEIGHT and BITMAP _ WIDTH from
removed the @ Ignore annotation from CovariantOverrideTest. java to streamline the test by eliminating unnecessary annotations
replaced instances of ` Curly ` with ` Qtype ` for better clarity to improve code readability and maintainability by using a dedicated method
camel - jbang - add modelhelper. load routesdefinition ( ) method that can be use by camel.
added space minimum and maximum settings for the X - axis in ScatterChart. java to improve the visual appearance of the X - axis
updated SQL interval string formatting in ExpressionStringBuilder. java to improve readability and maintainability of the code
added a default method ` shouldPreserveDataStateOnReapply ` in ` SplitScreenSelectState ` and implemented it in ` BaseState
added a check for the existence of the " UTF8 " key in the properties file to ensure proper error handling for missing UTF8 keys in
updated TestReproduceMessage and LuceneTestCase to use MixWithSuiteName instead of RandomizedRunner to improve test reliability and maintainability by
added a UI event for long - press actions on an AllApps item to enhance user experience by tracking long - press events
added a null check for the log variable in StoreWAL. java and created a new test class Issue112Test. java with a double commit
added a new boolean variable ` showSectorLandInfo ` in ` SectorPreset ` and modified a condition in ` Control. java
updated type casting from CompositeType to CompositeType <? > in multiple files to improve type safety and eliminate unchecked warnings
updated enum handling logic to improve performance and maintainability of the code
updated the ` buildNearbyRandom ` method to accept a boolean parameter and added validation for ` randomSelection ` to enhance flexibility in random selection
use guava cache instead of java's concurrent apis
updated visibility settings for the ` createSQLViewContainer ` and ` WMSLayerImportContainer ` components to ensure the ` createSQLViewContainer
initialize Availability _ availability to UNAVAILABLE to ensure proper handling of availability status in the application
updated Pbft sync handling to include synchronization status to enhance synchronization control and improve code clarity
feat ( regen ) : upgrade gapic - generator - java to 2.7. 0 ( # 448 )
changed the type of the ` _ freeSpaceReclaimDisabled ` variable from ` boolean ` to ` int ` and updated the ` freeSpace
changed visibility of constants from public to private static in KDCOptions. java and added new KDCDefaultOptions. java file to enhance encapsulation
modified the initialization of the JsonWriter to set the writer to null after setting the output type to ensure proper resource management and prevent potential memory leaks
refactor code to improve readability and organization to enhance maintainability and readability of the code
renamed the method ` paintBackground ` to ` paintComponentBackground ` to improve clarity and consistency in method naming
added a method to retrieve the object value from a class constant in Configuration. java to enhance configuration management by providing a default value based on the
added logging for initialization failures in KafkaService to improve error handling and debugging for service initialization failures
updated RESOURCES _ TO _ ALWAYS _ ACQUIRE to use an ImmutableSet instead of a HashSet to improve flexibility in resource management by allowing multiple
updated channel name handling to use'channelName'instead of'channel'to improve clarity and maintainability of the code
added functionality to retrieve and store the " contents " field based on the " keywords " property to enhance the document's capabilities by allowing keywords
updated SDK version check from S to R to ensure compatibility with newer Android versions
refactor MemcachedSessionDataMapFactory to improve code structure to enhance readability and maintainability of the code
removed unnecessary instantiation of CorrespondenceSubclassToFactoryCall to streamline code by eliminating unnecessary instantiation
refactor Builder class to improve code structure to enhance maintainability and readability of the code
change isbn to isbn2bibtex, use url instead of url
[ gr - 25733 ] fix checkstyle violation in trufflelanguagecontext
added null check for the text field before firing data change events to enhance robustness by preventing potential NullPointerExceptions
update sentiment model to use the new model
added line. trim ( ) to the SuffixURLFilter class to ensure consistent formatting of URLs
added a condition to return early if the player is in Godmode to improve performance by avoiding unnecessary processing when in god mode
ggb - 2481 don't call app. unregisterpopup in checkbox creation dialog
simplified constructor parameters in LinkedHashMapCache and modified its usage in TCache to improve code readability and maintainability by using diamond operator
updated the method call from ` _ channel. close ( ) ` to ` _ channel. close ( ) ` in ChannelEndPoint. java to
added null check for keyIndex in FixAcidKeyIndex. java and refactored KeyIndexBuilder instantiation in OrcRecordUpdater. java
added Locale. ROOT to the exception handling in DirectUpdateHandler2. java to ensure consistent exception formatting across different locales
make sure we don't create pinode in the canonicalizer phase
remove the need for a reachable block in the bci block mapping.
added ` getClassificationDisagreement ` method implementations in ` AbstractCloud `, ` DBCloud `, and ` ViewFilter ` classes to
replaced ` BuildTarget. copyOf ( buildTarget ) ` and ` BuildTarget. copyOf ( buildTarget ) ` with ` buildTarget ` and ` @
refactor SqlRunner class to improve code structure to enhance maintainability and readability of the code
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` File
changed the type of ` knownApis ` from ` SortedMap < Integer, Sdk > ` to ` SortedMap < Integer, Sdk > ` and
add confidence progress indicator to create offer view
updated user agent header checks from " Cling / " to " UMS / " across multiple files to align user agent with the new protocol
fix ` ` iterator'' and ` ` iterator'' in worldbuilder.
added view type constants and modified layout inflation logic in CrowdfundingChatAdapter. java to improve code readability and maintainability by
changed encoding method from ` memEncodeUTF16 ` to ` memEncodeASCII ` in LinuxLibrary. java and MacOSXLibrary. java to
separate out a specific sbar expression for conj to simplify some dependency
modified the insert method to remove the canvas parameter and adjusted its usage throughout the code to simplify the method signature and improve code readability
refactor refactor methods in RefactorModule and AddGradleEnterpriseToMavenProject for improved clarity and functionality to enhance code readability and maintainability
added methods ` getChildByName ` and ` getChildByNameRecursive ` to retrieve child elements based on their name to enhance functionality by allowing retrieval of child
set the Content - Charset to UTF - 8 in HttpSolrServer to ensure proper handling of special characters in HTTP responses
refactor SystemUiController to use SystemUiControllerFlags for UI state management to enhance code clarity and maintainability by adopting annotation annotations
removed the private ClientConfigurationService field from IntrospectingTokenService to streamline the code by eliminating unused components
updated the exception message format in HiveRecordSet. java to provide clearer context for error handling when attempting to create a Hive record reader
removed the ownerId field from NodeEntry class to streamline the code by eliminating unnecessary fields
cloudstack - 7143 : change the default value of backupsnapshotaftersnapshot to backupsnapshotaftersnapshot
added score adjustment logic to the merge method in TextFragment. java to ensure the merge method accurately reflects the best score in the text
removed the private Digester field from Md4PasswordEncoder. java to streamline the code by eliminating unused fields
added validation for maximumUnimprovedStepCount in UnimvedStepCountFinish. java to ensure that maximumUnimvedStepCount
added a check to return early if the current editors list is empty to improve performance by avoiding unnecessary processing when there are no editors
replaced calls to ` verify ( ) ` with ` Mockito. verify ( ) ` in ` BDDMockito. java ` and added new
replaced Thread. getContextClassLoader ( ) with PathScanner. class. getClassLoader ( ) in PathScanner. java to ensure proper class loader is used
refactor the ` sayHi2 ` method in ` CodeFirstPojoClient ` and ` CodeFirstPojoClientIntf ` to include asynchronous handling
added test log to abstractsplitbraningprotectiontest
added checks for logout configuration before adding the logout page in DefaultLoginPageConfigurer and ServerHttpSecurity to ensure logout functionality is correctly set when logout
make sure gbasis ( ) return ` ` ideal var'', not ` ` revlex''
refactor DockerComposeContainer to streamline logging process and add a new test class for logging functionality to improve code maintainability and facilitate
fix typo find by codespell on fossies. org
removed unused imports from AmbariMetaInfoTest. java to clean up the code and improve readability
added a static method ` fromSupplier ` to create a ` ThrowingSupplier ` from a ` Supplier < T, E > ` to improve
replaced a break statement with a return statement in ConsoleActivity. java to improve code readability and maintainability
camel - 16756 : improve handling of vert . x buffer payloads in platform - http - vertx ( # 5746 )
added methods to handle platform separators in MorePaths. java and updated AarWithLibsIntegrationTest. java to use this new method to
added a null check for authorizationContext. getParams before processing parameters to avoid potential NullPointerExceptions when authorizationContext. getParams ( ) is null
replaced the ` load ` method with a ` throwExceptionIfFail ` method in ` NativeLibraries. java ` to improve error handling by providing a
updated SDK version from " 4611349 " to " 4514284 " and added unit tests for stop functionality in ShadowTextToSpeech to
set itemid and name to transactionlogkey in queuetransactionlog
added a new boolean property ` enableSqlWithoutProfile ` and updated related methods in ` JdbcEnvironmentProperties `, ` JdbcEnvironmentRepository `,
added a try - finally block around the write operation in ConnectHandler. java to ensure proper resource management and prevent potential memory leaks
fix eclipse compiler issue with nested generic
updated date formatting method to use calendar instead of date to ensure consistency in date formatting across the application
updated method signatures in CachedThreadStatesGaugeSet and ThreadStatesGaugeSet to include STACK _ TRACE _ DEPTH parameter to improve thread information
added a protected TransactionLog variable ` prevTlogOnPrecommit ` and modified sleep duration in ` LeaderTragicEventTest `
updated FastAsyncWorldEdit - P2 - V6 to FastAsyncWorldEdit - 1. 17 to reflect the latest features and improvements in
modified file existence checks and added null check for inputDataFilePath to improve code robustness and prevent potential NullPointerExceptions
added a method to calculate normal vectors in ObjUtils. java and refactored its usage in TriangulationHelper. java to improve efficiency
updated the ` find ` method in ` JdbcAuditService ` to use ` IdentityZoneHolder ` instead of ` IdentityzoneId ` to improve
refactor SpanCollector class to improve code readability to enhance maintainability and ease future updates
added a null check for the session manager's current session in the authorization filter to ensure that the session manager is not null before proceeding
refactored methods in TransactionIsolationLevel. java to improve code readability and maintainability
corrected spelling errors in method names from " printLVgroups " to " printLogicalVolumegroups " to improve code readability and maintain
added thread names for forwarding to the remote URL in TestSession. java to improve clarity of thread naming for better debugging
refactor CookieManager to improve cookie handling to enhance performance and maintainability of cookie management
replaced the manual creation of an ArrayList of ComponentKey with a direct creation of an empty ArrayList to simplify the code and improve performance by eliminating
added OverviewToAllAppsTouchController to the list in RecentsUiFactory. java to enhance touch controller functionality for better user experience
refactor scaling and translation methods in LauncherState and WorkspaceStateTransitionAnimation classes to improve accuracy of hotseat scaling based on launcher state
added a check for JUnitRule in DefaultStackTraceCleaner. java and introduced a new test in StackTraceFilterTest. java to ensure that JUnit
replaced ` dstnull ` and ` srcBuffer ` with ` dstByteArray ` and ` srcByteArray ` in ` MappedResizeableBuffer. java
refactor balance listener management by introducing a private BalanceListener variable to improve code clarity and maintainability by encapsulating balance listener logic
updated color conversion logic in RealisticRenderer. java to handle edge mode to ensure correct color representation when the edge mode is ster
added null check for httpClientResponse in HttpClientBeanPostProcessor and updated log initialization in multiple test files to ensure proper handling of null responses and improve logging
[ gl200 ] remove patternutil. checkpattern ( ) from gl200protocoldecoder
updated playback event timing logic in FullDetailsActivity. java to enhance user experience by providing more detailed playback events
added handling for elliptic nodes in SpanishXMLTreeReader to improve token validation and error handling for Lemmas parsing
added logic to clear the language and iso from the item if it's empty to ensure proper handling of empty metadata in the item
updated ReactiveLoadBalancerClientFilter to conditionally set the override scheme based on the retrieved instance's security status to enhance security by allowing secure protocols
http : / / issues. apache. org / jira / browse / amq - 4233 - fix typo in defaultmessagestore
[ gr - 25836 ] fix checkstyle violation in native - image - debug - info
replaced custom comparison methods with Java's built - in ` Correspondence. from ` to simplify code and improve readability
updated references from US to EN language support in LocaleProviderAdapter. java to ensure accurate identification of non - EN language support
removed redundant null check for redeemData to simplify the condition for better readability and maintainability
add forge client to render terrain texture
added a return statement in TxCacheDB. java to ensure proper execution flow and avoid potential errors
updated import statements to use ` jdk. internal. org. objectweb. asm ` instead of ` com. sun. xml. internal.
refactor FastDictionary class to improve code readability to enhance maintainability and ease future updates
fixed npe when close a nio connection.
updated flight event types in FlightEventsTest. java to include additional parameters to enhance testing coverage for new flight events
chore ( protobuf ) : update gax - java - based dependency to v1p260
replaced target. addNamespaceDeclaration with newElement. addNamespaceDeclaration in SaajStaxWriter. java to ensure proper addition of namespace declarations
[ 4486 ] instructorfeedbackresultspageuitest : add courseid to the profile picture link
added a shortRules list and modified defaultRules initialization in DefaultPasswordValidator. java to enhance password validation flexibility by allowing more rules for alphabetic
danielwagnerhall : add a command that can be use for captureScreenshottostring and captureScreenshottostring
[ ci ] fix checkstyle violation in test
updated the parameters of the ` scale ` and ` scale ` methods in ` DLNAMediaInfo. java ` to improve clarity and consistency in
[ gr - 11733 ] remove redundant speculative guard movement phase in truffle compilation.
added checks for authentication manager aliases in AuthenticationManagerBeanDefinitionParser to ensure proper handling of authentication managers and prevent runtime exceptions
updated conditions for handling forwarded request fields in ForwardedRequestCustomizer. java and added new test cases in ForwardedRequestCustomizerTest. java to
added a line to reset the StringBuilder length in ConsoleReader. java to ensure the StringBuilder is reset before further operations
changed access modifier of allowedRoles and disallowedRoles lists from private to protected to allow subclass access to these lists for better extensibility
update OpenIDE - Module - Specification - Version from 1.12 to 1.14 and adjust project structure accordingly
hbase. server. netty. tls. wrapsize should be configurable
refactor CookieStore, Http4Address, Inet6Address, InetAddress, ProtocolFamily, SocketOption, and URI classes to improve code organization and
refactor FixedLengthTokenizerTests to use JUnit 4 annotations and add new test methods to improve test coverage and ensure correct tokenization behavior
added protocol binding functionality and corresponding unit tests for OpenSamlAuthenticationRequestFactory to enhance security and ensure correct configuration of SAML protocol binding
added AttachedSurfaceControl import and modified SurfaceControl handling in DepthController. java to improve transaction management and enhance code clarity
updated version check from " main " to " 2.0. x " to ensure compatibility with the latest release version
updated action from WRITE to CREATE in AccessController. java to ensure proper access control for bulk load operations
update unSeqMergeList to use subList with maxOpenFileNumInEachUnseqCompaction to ensure proper handling of unseqMergeList size
camel - core - fix file converter to work with java 8.
added a build method in DefaultShardManagerBuilder and modified its usage in ShardManager to enhance shard management functionality by allowing custom login settings
fix typo find by codespell on fossies. org
changed the name of the @ JoinTable annotation from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to align with the
updated response completion logic in HttpSender. java to check if the response is marked before attempting to terminate it to improve error handling by ensuring
added userstudent check to feedbackresponsecommentspage logic
added checks for linked profile allowance and modified profile creation logic in BMPImageReader. java to enhance security by allowing users to disable linked
updated plot height calculations in ClassicPlotManager. java to improve accuracy in plot placement
added a wait message for PMD status and modified the actionPerformed method to run on a separate thread to improve user experience by providing feedback during file
refactor grid presenter setup into a separate method to improve code readability and maintainability by encapsulating grid size logic
changed return values from false to true in ContributionsListFragment. java to accurately reflect the intended functionality of the code
added a test method to skip a specific query in DistinctPrefixFilterIT. java and modified the filtering logic in BaseResultIterators.
pdfbox - 2576 : add unit test for acrobat checkbox group property
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation. java to provide a way to retrieve the last modified
added a check for the " metaTable " property in HiveIcebergStorageHandler. java to ensure that the storage handler correctly handles the
replace TextField with ComboBox for currency selection in CashDepositForm. java to enhance user experience by allowing selection of currency details
changed catch block from IOException to Throwable in WriteFlusher. java to handle broader error scenarios
added a new boolean variable ` mStartedEnterAnimation ` and modified animation logic in ` IconRecentsView. java ` to improve handling of
added a new public String field activeKeyId to the UaaConfiguration class to allow tracking and management of the active key associated with the user
'''''''''''''''''''''''
made the ` isActive ` variable volatile to ensure thread safety during concurrent access to the ` isActive ` variable
updated method names from ` isDesc ( ) ` to ` isAsc ( ) ` in ` SelectionPartiallyOrderedByDescOperation. java
use CharSequence instead of direct reference to toStringLHS ( ) to improve type safety and reduce casting overhead
added a check for the OWNCLOUD app name in the display logic to ensure that the application only processes the OWNCLOUD app
hbase. master. start don't set hbase. rootdir. perms if hbase. security. authentication be enable
updated method calls from ` httpServletRequest ` to ` httpServletResponse ` in JakartaServletWebExchange and JavaxServletWeb
refactor Instant class to improve code readability to enhance maintainability and ease future updates
updated state format handling in collectionsHandler and ExternalCollectionsTest to return a String instead of an integer to improve type safety and clarity in collection state
removed the type parameter from the logging statement in CentralAuthenticationServiceImpl. java to streamline logging output for better readability and maintainability
added IllegalArgumentException to the exception type check in PDICCBased. java to enhance error handling by accommodating additional exceptions
modified the condition to check if the file name ends with a slash to ensure accurate file validation in the application
add pathtranslator to pluginparameterexpressionevaluator to align to base directory
[ beam - 3482 ] move coder to protobuf. protobuf package ( # 3482 )
updated JpaQueryParsingToken instantiation to include a default value of false to improve query parsing behavior for signed numeric literals
updated LaunchLugHandler and RailGuideHandler to include instance count and parent length parameters to enhance functionality by allowing instance count and parent length
removed the implementation of the getNonceFactory method in BitmexStreamingExchange to streamline the code by eliminating unnecessary implementation
updated logging statements to use placeholders instead of string concatenation to improve performance and readability of log messages
[ java ] make driverconductortest. setup and teardown thread - safe.
changed the initialization of the ` initializeLoadedClasses ` variable from ` true ` to ` false ` to disable loading of classes during the scanning process
added focus to the search field in FullTextSearchPanel. java to improve user experience by ensuring the search field has focus before proceeding
refactor SSL engine configuration to use a temporary variable for nioParams to improve code readability and maintainability
removed an assertion from the result set in StatementTest. java to simplify the test by eliminating unnecessary assertions
updated assertion message format in TestSolrConfigHandler. java to improve clarity and consistency in error reporting
updated ` CsrfWebFilterTests ` to use ` ServerHttpRequest ` and ` ServerWebExchange ` instead of ` HttpMethod ` to improve mock
added import for Density and updated regex pattern in FilterResourcesStep. java to improve density handling in drawable parsing logic
added a method to retrieve the UIID based on a component type and updated UIID updates accordingly to improve UIID handling and enhance clarity in
removed the check for DENSITY _ 270 in RecentsAnimationDeviceState. java to simplify the condition for better readability and maintainability
added new classes TestCloneArrayWithDifferentLengthConstness, TestArrayCopyArrayCopyArray, and TestArrayCopyWithLargeObjectAlignment to
added import statement for LuceneTestCase. AwaitsFix and annotated the ReplicationFactorTest class with @ AwaitsFix annotation to indicate that
fixed - executorservice. schedule ( ) method throw npe
refactor conditional checks in FileDownloader and FileUploader for clarity to enhance readability and maintainability of the code
added null check for StoreFileScanner before closing it to ensure proper resource management and prevent potential memory leaks
updated method calls from ` get ` to ` getOrDefault ( ) ` in ` NetMetrics. java ` to improve handling of default values for
added a test for retrieving claims for a token in TokenMvcMockTests to ensure correct retrieval of claims associated with a specific token
updated ChartEditor, ChartEditorFactory, DefaultChartEditorManager, DefaultAxisEditor, DefaultColorBarEditor, DefaultColorBarEditor, Default
added width and height settings for formLayeredPane to ensure proper layout behavior for the form pane
added a new method ` maxY ( int height ) ` in ` BrowserContentPane. java ` to provide a way to adjust the height of
don't close the connection if it's already open
refactor Docker command usage to use the Platform class to improve code maintainability and reduce the risk of string literals
added a null check for the input stream in the initializeParameters method to enhance robustness by preventing potential NullPointerExceptions during resource initialization
added support for a customizable folder leave - behind color in the Taskbar and CellLayout classes to enhance user experience by allowing customization of folder
( ) ( # ) ) ( # )
cloudstack - 4892 : add sanity check for identityproxy table name
removed unused ` modulePersistEnable ` and ` modulePersistDisable ` lists from ` StartArgs. java ` to streamline code by eliminating
updated argument validation logic in GeminiMarketDataService. java to ensure correct handling of arguments and improve error messaging clarity
change from HashSet to LinkedHashSet in VerifyPasswordResetRequestAction. java to ensure consistent iteration order for the questions map
add a test case for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 468
add exclusion for setup - * / setup - * / setup - * / setup - * / setup - * / setup - * / setup
refactor scheduling logic in Scheduler. java and add tests in SchedulerTest. java to improve code clarity and ensure correct handling of post - delayed execution
updated method signatures in AbstractCommandRunner, AuditCommandRunner, and CommandRunner to use varargs instead of arrays to improve flexibility in argument handling for
refactor XML parsing logic to return an END _ TAG if the index is - 1 to improve error handling by returning an END _ TAG for invalid
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest. java ` to ensure text does not appear
added pivot properties for mArrow based on icon position to improve the visual appearance of the arrow based on the icon's position
don't print stacktraces to stderr in jabrefexecutor
refactor the updateThumbnail method to include a refreshView parameter to enhance control over thumbnail updates based on the refresh state
pdfbox - 2576 : remove reference to org. apache. pdfbox. util. pdfbox. extracttiffonts
added a new parameter to the InternetAddress constructor and updated the validation logic in HostnameFormatSpecifier. java to ensure proper handling of invalid hostname
updated method calls to use'this'instead of'this'across multiple activities to ensure consistency in method usage across the application
refactor document ID handling to use a consistent variable naming convention to improve code readability and maintainability by using a consistent naming convention
added multiple overloaded ` promptToOpenFile ` methods to ` FileDialoger ` and updated ` FilePanelEntry ` to use this new method
updated widget span and refactored page update methods in AppsCustomizePagedView and AppsCustomizeTabHost to improve responsiveness and
added handling for flight configurations in FlightConfiguration. java to improve accuracy in processing flight configurations
( chore ) camel - micrometer : use direct endpoint instead of seda
updated DateTimeFormatter to use Locale. ROOT for default date time formatting to ensure consistent date formatting across different locales
[ ds - 3482 ] add support for permission - based access to the metadata field.
added unit test for missing required dimension and metric in StarTreeConfig to ensure proper handling of missing collections and metrics in the builder
camel - test - infra - spring - dsl - fix issue with camel - spring - dsl
refactor InlineLayoutBox. java and HoverListener. java to improve layout handling and repaint region management to enhance code clarity and maintainability while
refactor authentication process by replacing DetectAuthenticationMethodOperation with OperationsServiceConnection to improve service management and streamline authentication operation handling
