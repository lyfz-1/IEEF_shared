http : / / issues . apache . org / jira / browse / amq - 4252 - fix socketappender to set remote host
refactor the handling of prompt headers in BasicAuthPlugin to use a dedicated method to improve code readability and maintainability by encapsulating
corrected the method call from ` RecordDescriptor . msgLength ` to ` getIntVolatile ` in ` ManyToOneRingBuffer . java ` to
fix nullpointerexception in capacitymanagerimpl when vmDetailCpu and vmDetailRam be null
added flags to ShadowPaint and implemented getter and setter methods for anti - alias flags to enable proper handling of anti - alias checks in the paint class
updated the title in MassSetFieldsDialog from " Set / clear / append / rename fields " to " Manage field names & content " to
updated DetectorsTest to check for a non - empty collection and added a check for " Eclipse " in Eclipse compilation to ensure that
added a check to ensure nonce is not empty in Realm . java and updated authentication scheme handling in NettyAsyncHttpProvider . java to ensure
added a new interface ` RemoteInputListener ` and modified the ` connected ` logic in ` RemoteInput . java ` to provide a way to handle
removed unnecessary whitespace in OrcEncodedDataReader . java to improve code readability and maintainability
added a check to ensure ` thing . isEnabled ( ) ` is true before filtering the ` AbstractHomeConnectThingHandler ` to enhance the filtering logic
added null check for ` bs ` before calling ` removeAllPolicies ` and ` addPolicies ` methods in ` AuthorizeAdminServlet . java `
updated assertions in DefaultTypeAdaptersTest , ObjectTest , and DefaultDateTypeAdapterTest to use ` Matcher . matches ` instead of ` Matcher
added JSON serialization for the Hive context and description in TezTask . java to enhance debugging capabilities by providing context and description information
updated the calculation of heap time in ComputedSummary . java and added a method getHeapTime ( ) in HprofHeap . java to improve
replaced RxJava2Tasks . java with CommonsApplication . getInstance ( ) . getMWApi ( ) and removed RxJava2Tasks .
remove unnecessary lock mode check in mvtable . ismvstore
[ issue # 116 ] fix messagestore . getmessagesize ( ) to use maxmessagesize instead of maxmessagesize
added a check to ensure the associated folder is not open before proceeding to prevent potential NullPointerExceptions when the folder is not open
added a new test method ` testSortOrder ` to ` PGPropertyTest ` to verify sorting of property names in ascending order to ensure that property names
removed the constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN from Common . java to clean up the code
changed the parameter type of ` supportsDrop ` and ` getUninstallTarget ` from ` Object ` to ` ItemInfo ` in ` UninstallDrop
updated assertion message to use ` getMessage ( ) ` instead of ` hasMessage ( ) ` in ` RequestBuilderTest . java ` to improve clarity
updated NearbyActivity to replace TAG _ RETAININED _ FRAGMENT with TAG _ RETAININED _ MAP _
[ hotfix ] [ profile ] fix typo in profilecontainerfree
added a new configuration option ` sendZeroAnomalyEmail ` to the ` EmailConfiguration ` class and updated the ` EmailReportJob ` to
[ hotfix ] [ kafka ] fix npe in kafkaconsumerbase # open ( )
removed user and geofence methods from DataManager to streamline user and geofence retrieval process
added a constructor to BlockingResponseListener that initializes with a maximum size of 2MB to enhance the flexibility of the BlockingResponseListener by allowing
updated method signatures and variable names in McastServiceImpl . java for consistency and clarity to enhance code readability and maintainability by using more de
replaced ` System . out . println ( snapshotPaths ) ` with ` logger . info ( snapshotPaths ) ` and added a ` finally ` block
updated assertion statements in LoginSAMLAuthenticationFailureHandlerTest . java for consistency to improve readability and maintainability of the test code
updated ConfigMetadataProviderTest . java file to improve test coverage for ConfigMetadataProvider functionality
updated import statements in ListFragment . java and SnoozeActivity . java to use noteToUpdate instead of note to improve code clarity and maintainability
added a new ` AcceptAllFilter ` class and refactored directory stream handling in ` Files . java ` and ` WindowsDirectoryStream .
refactor JdbcTestDataSet class to improve code readability to enhance maintainability and facilitate future updates
[ gr - 16386 ] fix finduniqueconcretemethod . lookuptype ( ) to throw ClassNotFoundException
added validation for Docker image tag requirements in GenericContainer . java and created DockerImageName . java and DockerImageNameTest . java files to ensure
updated error messages in LoginActivity from " failed _ username " and " failed _ password " to " failed _ credentials " to provide clearer feedback
added " autofocus " field to multiple form classes to enable automatic focus functionality for user input in the application
added a new test method ` test _ zone _ saml _ properties ` to ` SamlIDPRefreshMockMvcTests . java ` to
added checks for non - empty lists in ComparableVersion . java and a corresponding test in ComparableVersionTest . java to ensure proper handling of empty and
updated Sheet . java and UIManager . java to use bottom right mode instead of top left and top right mode to improve layout consistency and ensure consistent
updated package names from ` org . robolectric . android ` to ` org . robolectric . android . internal ` for Robolectric tests to align
refactored constructor handling in LocalCacheFactory and NodeFactory to use a constant FACTORY _ CALL to improve code readability and maintainability
updated the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to
added functionality to draw self - loops based on the graph ' s visible edges and self - loops to enhance rendering capabilities for self - loop
updated the TVM solidity configuration from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ T
renamed the method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to improve clarity and consistency in method naming
reset the translation position of the drag handle indicator in AllAppsTransitionController to zero to ensure the drag handle indicator reflects the correct position of the
remove view _ collection , collection _ id , community view _ item header , and collection _ id header
updated error messages related to push predicates and filters in the operator tree to provide clearer context for operator tree optimization during query optimization
added an assumption to the ScanningAppProviderRuntimeUpdatesTest to ensure tests are not executed on non - OS versions
added Maven bundles for Jetty ALPN client in TestJettyOSGiAnnotationParser . java to ensure proper handling of Jetty
[ flink - 24424 ] [ table - planner - blink ] update process instance lock time in case of an actuator
refactor Transaction class to improve code readability to enhance maintainability and facilitate future updates
replaced CustomFieldBehavior with @ ExcludeFromRuleKey annotation in GenruleBuildable . java to exclude Genrule execution from the rule key to
alexeibarantsev : make the firefox custom profile launcher work on window .
added a check to ensure the key exists before adding it to the colFamToDynamicColumnsMapping to avoid potential NullPointerExceptions when accessing
[ hotfix ] [ table - common ] make hive tupleunwrappingiterator non - transient
added a condition to check if the view type is MAPPED before adding derived columns and indexes from the parent table to ensure proper handling of views
update student cascade for instructor ' s course
updated import statements in AllXSSFTests . java to use TestCellReference instead of xssf . util . TestCellReference to
added a check for the thickness of the block in LensPiston . java to ensure that the block ' s thickness is not
added a new file ` LongPointerPressTest3049 . java ` to test network error handling in the application to ensure that network errors are correctly
truffle : do n ' t use standard inline assumption in partial evaluator .
simplified null checks for alias and value in BaseBuilder and XMLConfigBuilder classes to improve code readability and maintainability
removed unnecessary indent check in ListBlockParser and added a new test for deeply indented lists in SpecialInputTest to improve code clarity and ensure correct
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to use it to improve code organization and maintainability by
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to temporarily disable tests due to issue # 1070
[ hotfix ] [ test ] remove jsinterop . annotations . savemessage from testcaselogger
[ hotfix ] fix checkstyle violation in routestartuporderlasttest
added a check for video formats in RemotePlayHandler to ensure web subtitles are only processed when the format is a video format
added imports for Security and set jdk . tls . disabledAlgorithms to an empty string in ComHostnameVerifier and JavaxHostnameVerifier to enable
cloudstack - 10265 : do n ' t create storage pool for local vms when use vms .
refactor cache entry retrieval and logging in QueryResultsCache . java to improve readability and maintainability of log messages
added a new option to skip updating the model after the update of the dependency model to ensure that the model updates are only updated when the model changes
added a test for sending intents with a request code in ShadowActivityTest and implemented the send method in ShadowActivity and ShadowPendingIntent classes to
updated GLJPanel initialization to enable FBO and disabling FBO rendering in RocketFigure3d . java to improve rendering performance and
added synchronized keyword to controllerListeners and modified listener removal logic in HydrawiseAccountHandler to ensure thread safety and prevent potential memory leaks
added a setup method to the TestCoreAdminApis class to ensure the EasyMock does not work with Java 9 to ensure compatibility with Java 9
updated the way the year is retrieved in TimestampUtils and modified the expected string formatting in SetObject310Test to improve accuracy in date parsing and
[ java ] fix npe in jabber protocol provider when connection be null .
added ` cur _ ws _ commit _ id ` to the list of commit IDs in ` TxnHandler . java ` to ensure consistency in
replaced ` ByteChunk ` with ` ByteBuffer ` and updated related methods in ` BufferedInputFilter . java ` to improve performance and ensure proper handling of
added a ` toSync ` method to the ` AsyncUtils ` class and created a corresponding test class ` AsyncUtilsTest ` to facilitate asynchronous synchronization
added ActionGraphBuilder import and updated related classes to utilize it to enhance the handling of ActionGraphBuilder in the compiler factories
added a new test method ` testUploadingWithHiddenFileInput ` to ` UploadTest . java ` to verify upload behavior with hidden file input
removed redundant try - catch blocks for creating tables in SQLManager . java to streamline code for better readability and maintainability
added a check to return the local Maven directory if the file does not exist to ensure that the local maven directory does not exist before proceeding
do n ' t show algebra label if the label start with hidding _ prefix
fix nullpointerexception in ctelementimpl . getmetadata ( )
replaced ` setFlags ` with ` addFlag ` in ` DefaultTrackOutput . java ` to ensure the buffer is properly added to the buffer
added a check to ensure ` cached . isSortedById ( ) ` is not called when ` canBeReordered ( ) ` is disabled
updated error message from " Method call not specified for verify ( mock ) : " to " Missing method call for verify ( mock ) here . "
added a null check for the backupFolder before logging it in ContactsBackupJob . java to avoid potential NullPointerException when backupFolder is null
added a new Java file ` ArrayNewInstanceOfVoid . java ` that tests the ` Array . newInstance ` method to ensure that ` Array . newInstance
added @ AddToRuleKey annotation to ClangCompiler , GccCompiler , and ClangCompiler classes to indicate that the toolType field is
updated the timeout condition in PinCheck . java to use a constant PINCODE _ TIMEOUT to improve code readability and maintainability by reducing
add issampled ( ) method to PrometheusMeterRegistryTest , PrometheusExemplarsSample , and PrometheusEx
removed the @ Ignore annotation from multiple test classes to temporarily disable tests that require mongodb server
[ hotfix ] [ test ] fix checkstyle violation in consumecompressedcompressedcompressedmessagetest
updated the condition to check if the table is an artifical table instead of a string to ensure the table is not an artifical table
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
added null and empty check for session attributes in MongoSessionManager . java to improve robustness by preventing potential NullPointerExceptions
use sizefromlayout ( ) instead of setfixedsize ( ) in camerasurfaceview .
refactor the handling of ` _ stopping ` in ` AbstractConnector . java ` to use a local variable ` stopping ` to improve code readability
removed unnecessary whitespace in WebSocketClientHandshaker parameter to improve code readability and maintain consistency
camel - 14284 : camel - message - history should use current time instead of taken time .
[ hotfix ] [ test ] fix flaky test in delayedmonopublishertest
replaced assertTrue with a conditional check for WebSocketHandshakeException in WebsocketTest . java to improve error handling by providing more informative failure messages
refactor AllAppsTransitionController to implement View . OnLayoutChangeListener instead of directly implementing the Listener interface to improve code clarity and maintainability by
updated variable names from ` theHandler ` to ` handler ` in ` PolicyBasedAuthenticationManager . java ` to improve clarity and consistency in naming convention
added support for setting a default output channel in XPathRouterParser and corresponding tests to ensure proper configuration of the default output channel in XPathRouterParser
updated cacheSeconds from int to String and modified cacheSeconds initialization in MessageBundleProperties . java and CasCoreWebConfiguration . java to use Duration
updated multiple Java files to replace " openapi : 3.0 . 0 - rc1 " with " 3 . 0 . 0 " for consistency to
removed the append ( buffer , true ) method call from ByteBufferPool . java to simplify the code by eliminating unnecessary method calls
added a method to check for the presence of the " alt - rt . jar " jar in the boot class path to ensure the test skips
updated SQL queries to include upper and lower usernames in JdbcScimUserProvisioningTests . java to ensure tests accurately reflect the expected behavior of user
replaced ` Arrays . asList ` with ` ArrayList ` and added ` - XX : + UnlockDiagnosticVMOptions ` in ` FlightRecorderProfiler .
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified the ` imageDropHappened ` method to
added a condition to check if the content view has content in HttpParser and created a new test for chunked put functionality in ProxyServletTest to
camel - 14284 : camel - atmos : fix typo in javadoc
added support for " printf " and " print " methods in Java2TypeScriptAdapter to enhance functionality to support additional output formats
added a new file ` TestCapacityUntilGCWrapAround . java ` and a native method ` incMetaspaceCapacityUntilGCWrapAround
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
removed conditional calculation of endTime in SamplingStatCalculator . java to streamline the calculation process by eliminating unnecessary calculations
added unit test base on user forum issue
do n ' t throw ioexception if icc single chunk do n ' t exist
fix the terraform rod not be able to be pick up when it ' s not a tornado
added a check to ignore entries in the JoobyModule and SpringModule classes to ensure that only valid entries are registered in the application context
use container . getparentclassloader ( ) instead of thread . currentclassloader ( ) . getcontextclassloader ( ) . getcontextclass
add nameupdater . properties file to nameupdater . properties file
added a call to ` started ` in ` EllipsoidRegionSelector . java ` to initialize ` started ` to true to ensure the selector
updated URLs from HTTP to HTTPS in JavaSEPort . java and added a default codenameoneComProtocol constant in JavaSEPort .
[ geos - 1073 ] getfeature should throw an exception if the sortby be invalid .
updated null check for grantTuple [ 0 ] in AbstractJdbc2DatabaseMetaData . java to ensure proper handling of null grantTuple values
added GraphicsConfiguration and GraphicsDevice imports and updated image validation logic in DiagramGenerationTest . java to improve image processing accuracy and ensure correct image
added a null check for sidedDelegate in FMLCommonHandler . java to ensure proper error handling when sidedDelegate is null
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
update locktest to use asserttask instead of sleep
added utility methods for generating whole - word tokens and join tokens in StringUtil . java to improve code readability and maintainability by encapsulating
use response . senderror ( 404 ) instead of logaccess ( 404 ) .
refactor command handling in SystemHighlighter to use commandIndex instead of idx0 to improve clarity and maintainability of command processing logic
updated version number from " 1.0 . 0 " to " 1.0 . 1 - SNAPSHOT " and changed version date from " 2012 - 07 - 14
updated buffer positioning to use dimensionSize instead of idx to ensure correct buffer positioning based on dimension size
added support for handling drag - and - drop requests in QuickstepTestInformationHandler and SystemUiProxy classes to enhance drag - and - drop functionality
[ java ] add socketappendersocketappendersocketoptionstest and socketappendersocketappendersocketoptionstest for java 7 compatibility
added a new cipher version " PSK - AES256 - GCM - SHA384 + TLSv1 . 2 " to the TestCipher
updated description text retrieval from ` getDescription ( ) . getText ( ) ` to ` getLongDescription ( ) ` in ` NearbyMapFragment .
added JSON property annotation to ScimGroupMember to enable JSON serialization and deserialization of the ScimGroupMember class
refactor reserved word handling in HqlQueryRenderer to use a list of tokens instead of a single visitor to improve code readability and maintainability
[ hotfix ] [ runtime ] fix checkstyle violation in subscriptionhelper
refactor Parser class to improve code structure to enhance maintainability and readability of the code
updated the ` offsetStreamIndex ` method to include an ` indexStartsAtOne ` parameter and adjusted related logic accordingly to enhance functionality by allowing
updated bitwise operations in MagicDetector . java and added new MIME types in TestMimeTypes . java to ensure correct decoding of byte values and improve
[ flink - 24435 ] [ table - planner - blink ] [ table - planner - blink ] remove unused method
added equality and hash code methods to OneTimeTokenAccount , OneTimeToken , and OneTimeToken classes to enhance equality and hashing capabilities for
added a condition to check if the assistant is not launched before proceeding to ensure that the fling is only processed when the assistant is not launched
added a new file SolarisShortDSA . java to implement key pair generation and verification for Solaris to ensure compatibility with Solaris ' s
added a call to toggleSearchLabel ( false ) in ListFragment . java to control the visibility of the search label in the UI
cloudstack - 10284 : lock the volume before create a snapshot to ensure that a snapshot is created before proceeding
refactor ` FileDetailActivity ` to use a ` DetailsServiceConnection ` class instead of an instance of ` ServiceConnection ` to improve code clarity
refactor SSL peer unverified exception handling in HttpClientTLSTest to use AtomicReference for better readability to improve code maintainability and ensure proper exception handling
removed the equals method from ConjunctionScorer to simplify the equality check by eliminating unnecessary method
added a null check for the item in the bindItems method to prevent potential NullPointerException when removing an item
add a random timeout to the cpmemberaddremovetest and add a test for it
refactor cache size calculation and logging in DefaultCache . java to improve code readability and maintainability
updated API endpoint references from " v2 " to " v3 " in multiple files to reflect the new API version and updated the API endpoint accordingly
added a method ` empty ( ) ` to the ` freenect2 ` class to check if the size is zero to provide a way to
added Optional import and modified test annotations in AsyncPageReader , TestDrillParquetReader , and TestDrillParquetReader classes to enhance
[ solana ] improve error message when no market data type be specify in serum streaming service
add an option to disable the charging animation when an item be charging on top of a mana pool .
[ java ] retry cluster connect on restart and update client to give more information on timeout .
added error logging for InterruptedException in WaitForHelper . java to improve error handling and logging clarity
updated file system checks in DefaultServletTest to use assumeTrue instead of FS . ensureDirExists to ensure consistent directory creation behavior across different operating systems
updated the injection order for dialogStylesScss ( ) and openScreenStyle ( ) in ResourcesInjectorFull . java to improve code readability and
replaced instances of ` String ` with ` FileResource ` in ` BaseLiquibaseTask . java ` and ` DBDocTask . java `
fix blockworldvector . equals ( ) to use getxyz ( ) instead of getxyz ( ) .
refactor LongConcurrentLRUMap to use ' final ' keyword for immutability to improve code readability and enforce immutability
refactor resource configuration to use a regex pattern to improve readability and maintainability of the code
added a check for the " KRB5CCNAME " environment variable in FileCredentialsCache . java and improved argument handling in EmptyCC . java
updated the database path for ValidateMultiSignContractTest from " precompiledContracts _ test " to " output _ ValidateMultiSignContract _ test
remove peer requirement from protocolmanager # hassufficientpeers ( )
[ java ] fix npe in webdriverservlet . attachtocurrentthread ( )
added a check to return false if the operation is EQUAL _ BOOLEAN and is an instance of GeoSegment in ExpressionNode . java to ensure
added a check to clear pendingRenderingOperations if the implementation is minimized to ensure that pendingRenderingOperations is cleared before proceeding with rendering operations
fix race condition in hazelcasttestsupport . sleepmillis ( )
fix ( write - behind ) write - behind write - behind write - behind
added a icon to the GroupTreeCellRenderer to save some space to improve user experience by eliminating unnecessary space
updated test methods in TestBlacklistAwareRedirectResolver to set strict match behavior to ensure correct handling of redirect matching behavior
added IO imports and modified test methods in ShutdownMonitorTest . java and ShutdownMonitorTest . java to improve resource management and ensure proper
updated the calculation of moveSize and refactored the fillRate calculation in RandomAccessStore . java to improve readability and maintainability of the
added a new method ` readFields ` to the ` Json ` class and refactored the ` readFields ` method in ` Json . java
[ hotfix ] [ runtime ] refactor componentclosingutils to use FutureUtils instead of java . util
cloudstack - 10265 : delete all volume when create snapshot fail due to error state
cloudstack - 4892 : fix ip6 range not be set to ip6 range
rename ` userDetailsManagerConfigurer ` to ` beanNames ` in multiple files to improve clarity and consistency in naming conventions
updated the timeout value for the leader retry from 15000 to 30000 in CollectionsAPIDistributedZkTest . java to allow more time for leader
removed the ` input ` parameter from several ` errorMessage ` methods across multiple classes to simplify error handling by eliminating unnecessary input parameters
updated the image drawing parameters in URLImage . java to correct the positioning of the image to ensure accurate image rendering by correctly positioning the image
updated the condition from solrDocument1 to solrDocument2 in SolrTestCaseJ4 . java to ensure the correct field name comparison for Solr documents
refactor code to use a new method ` isItemZeroHighCardDim ` to improve code readability and maintainability by encapsulating
[ hotfix ] [ stream ] add the original exception to the streamtaskexception constructor
refactor character parsing logic in Preprocess . java to improve readability and maintainability of the code
reformatted the ` read ` method signature in ` MessagePack . java ` for consistency to improve code readability and maintainability
added a new annotation ` Mapper ` in the ` org . apache . ibatis . annotations ` package to define a Mapper interface with a default value for
[ fhir ] do n ' t encode empty extension list in jsonparser
updated regex patterns in Artifact . java and LibraryManager . java to use ` \ \ \ \ \ \ \ \ \ \ \ \ \ \
added a alias for " node _ popup _ scripting " in the entryNavigator to support scripting functionality in the popup menu
updated constants for HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN in OverviewActions
camel - 14265 : camel - jms : camel - jms : camel - jms - camel - jms - camel - jms - camel - jms
removed IOException from multiple Java files to simplify code and improve readability
deleted ` AbstractDelegatedVerb . java ` and ` FailureContext . java ` files to no longer needed for the current implementation
updated ` GzipHandlerTest ` to use ` static final ` for ` __ content ` and modified ` __ content ` to be ` static final
replaced ` getAndAdd ` with ` BackpressureUtils . getAndAddRequest ` in ` OnSubscribeRedo . java ` and added a
added logging functionality and improved error message formatting in SpeedmentImpl . java to enhance debugging capabilities and maintainability of the code
added a new file ` LoadDSpaceOAIConfig . java ` that initializes the configuration using the servlet context to provide a way to load the
updated StoreScanner and TestWideScanner to handle null kv and matching row scenarios more robustly to improve robustness by preventing null pointer exceptions
camel - 14265 : camel - test - infra - jmx should not use jmx for test .
updated package separator handling in SourceLineAnnotation and SourceCodeDisplay classes to use a constant for consistency to improve code readability and maintainability by reducing
added functionality to find and display YARN application information in HiveConf and RemoteSparkJobMonitor classes to improve application management and debugging capabilities for the
added support for " maria " database names in the database connection check to ensure compatibility with additional database types
updated log message formatting and modified time calculation logic in SplitLogManager . java to improve clarity and correctness of log output
added a new file ` ExecuteAndReturnStringTest . java ` that tests the ` ExecuteAndReturnString ` functionality to verify network error handling and
added a new file ` InvokespecialInterface . java ` containing an interface and a class ` InvokespecialInterface . java ` that implements a dynamic interface
refactor EvictingBoundedList class for improved performance to enhance performance and maintainability of the code
do n ' t use edge _ based _ 2dir in case of turncosts = true
added a null check for style . backgroundDisabled in SelectBox . java to ensure selection is valid before proceeding with operations
added a null check for the md variable in RpcServer . java to ensure that the method is not null to avoid potential NullPointerExceptions
updated hotseatCellSize calculation to use borderSpacing and adjusted hotseatIconCenter calculations to improve layout consistency and accuracy of hotseat icons based on
refactor string construction in ExpressionTree . java to use values . get ( ) instead of partitionName to improve code readability and maintainability by
add versioned support to namedtaskdecorator and taskdefinition
updated the method call from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure the
updated the ` equal ` variable from false to true and modified the comparison logic in ` DisplayModeTest . java ` to ensure correct comparison of display
updated UnicodeToLatexFormatter and HTMLUnicodeConversionMaps to handle surrogate surrogate characters and added a test for high codepoint Unicode characters to ensure
[ java ] do n ' t throw nullpointerexception if dcvalue be null .
webdriverbackedselenium : do n ' t select the original window handle if it ' s an empty string .
added a clear button to the StringSearchPanel , BookmarksPanel , and DataBrowser classes , and implemented a clear button in DataBrowser to
refactor port handling in OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for URL construction to improve code readability and maintainability by using a
replaced ` new Date ( 0 ) ` with ` parseDatetime ( " date " ) ` for assertions in ` SoftAssertionsTest . java `
updated the ` adaptOrders ` method to include a ` reverse ` parameter and modified the ` adaptOrders ` method to include a ` reverse
danielwagnerhall : do n ' t print ` ` var ' ' when there be no var type .
[ java ] remove unused import from test code .
changed the initialization of ` conf ` from ` Configuration ( false ) ` to ` Configuration ( false ) ` and removed a conditional check for ` Hive
replaced ` super . drawChildren ( batch , parentAlpha ) ` with ` super . draw ( batch , parentAlpha ) ` in ` WidgetGroup
added unit test base on user forum issue
replace system . getproperty ( ) with engine . getcatalinabase ( ) .
added unit tests for the ` getBestDateTimePattern ` method in ` ShadowICUTest ` and modified the return logic in ` ShadowICU
updated the style of the object map and added new color codes to the PlotSquared class to enhance the visual representation of color information for better user experience
added ZuulProperties parameter to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration classes to enable dynamic configuration of zuul properties during
[ tika - 116 ] fix fontparserstest failure due to timezone . getdefault ( )
maven - plugin : fix buildinfo maven plugin to work with maven plugin
updated the calculation of ` xDist ` to use ` Math . abs ( ) ` instead of ` Math . abs ( ) ` to ensure accurate
deleted the GUIRWTester . java file to the file is no longer needed for the project
removed nullability annotations from constructor parameters in LazyMessage , StandardSubjectBuilder , and Subject classes to simplify the constructor and improve code clarity
updated error message format in TestStream . java to include a space character to improve clarity of error messages for better debugging
move xmltemplateparser and xmltemplateparser from thymeleaf . templateparser to markup package .
added a new test method ` testXPathString ` in ` XPathTest . java ` to validate XPath string parsing to ensure correct parsing of XML strings
added @ Nullable annotation to FutureUtils . java to ensure proper handling of null values in the FutureUtils class
add warn message when invokedynamic be not resolve during call - graph construction .
update email address from " myfakeemail @ gmail . com " to " myfakeemail @ example . com " in ContextTest
updated the encoding response format in HttpConnectionTest . java and modified the URIUtil . decodePath method in URIUtil . java to improve clarity and
added a method ` getColumnDataType ( int columnIndex ) ` to ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to
add default value of throw unsupportedoperationexception to serviceclientinterface and test - json - client - interface
refactor HSSFPictureData class to improve code readability to enhance maintainability and facilitate future updates
replaced ` long startTime ` with ` java . time . Instant ` in ` Statistics . java ` to improve time handling by using ` Duration ` instead
refactor version handling in LibMediaInfoParser to use regex matching for better readability and maintainability to improve code readability and ensure compatibility with
added reflection - based proxy creation for IdeaDependency in ProjectReader . java to enhance the clarity and functionality of the IDEA dependency management
added a new class ` SerialHeap ` and updated ` CollectedHeapName ` to use it to provide a more descriptive name for the
added multiple @ SuppressWarnings ( " serial " ) annotations to $ Gson $ Types . java to suppress serial warnings related to serialization in the application
update mouse wheel event to use vector2i instead of mouse . position ( )
updated MongoQueryCreator to handle null values and added a new test for findByFirstNameIgnoreCase in AbstractPersonRepositoryIntegrationTests to ensure robustness by
[ hotfix ] [ table - common ] add multiset type information support to maptypeinfo
added a method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` and corresponding tests in ` XOAuthProviderConfiguratorTests ` to validate the
added support for delimiters in CMapParser and created a corresponding test in TestCMapParser to ensure proper handling of commas in C
added a new ` OperationsServiceConnection ` class and integrated it into the ` ContactsBackupJob ` class to manage and manage the ` OperationsService
refactored type constraints handling in ForAll and Infer classes and added new classes T6938454a and T6938454a to
add is _ config _ hidden ( ) method to accountlist , and add is _ config _ hidden property to accountlist
added logging for inconsistent number of displays in DisplayController . java to improve debugging by providing insights into the number of supported displays
updated schema removal logic in PMetaDataImpl . java and added a test for schema removal in PMetaDataImplTest . java to ensure correct removal of
ggb - 273 add passive login listener to loginoperationw .
added a new ` Box2DTest ` class and updated ` GDXTester ` and ` GDXTester ` to use it to
[ flink - 18157 ] [ table ] add more debug log for mutating index , index , index , index , and old column
[ hotfix ] [ runtime ] change default _ buffer _ request _ timeout from millis to minutes in hybridshuffleconfiguration
added default generator name and version to the SpeechSettings and SpeechSettings classes to improve clarity and maintainability of the code
added a help button for OpenOfficeIntegration in OpenOfficePanel . java to improve user experience by providing a more informative help message
[ java ] use childoption instead of option in nettyacceptor .
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , BinanceFundingHistoryParams , and BinanceTradeService classes to use
scanresultobject : use class < t > instead of class < t > in scanresultobject
refactor connection handling and error logging in DecodeServlet . java to improve code readability and maintainability
updated Querydsl to use a new ` toQueryDslNullHandling ` method and added a new test class ` QuerydslIntegrationTests
added null check for actor in ParallelAction and SequenceAction classes to prevent potential NullPointerExceptions during action execution
[ java ] fix checkstyle violation in cttypetest
added synchronization around sfWriters in HDFSEventSink . java to ensure thread safety during resource cleanup
added a new file ` Issue888 _ JavaI . java ` implementing ` Issue888 _ KotlinI ` with Java and Kotlin
added a new command for revokeing an existing agent certificate in CertificateManager . java and created a corresponding test in CertGenerationTest . java to
added a check for no - body responses in AbstractHttpTest and implemented a test for writing body after no body responses in HttpServerTestBase to ensure that
refactor script loading logic to handle exceptions more gracefully to improve error handling and provide clearer feedback during script execution
added a new connection pooling type " DBCP " and " HikariCP " to the METASTORE _ CONNECTION _ POOLING
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to standardize
added locking functionality to FileMenuFilter and implemented allLocked ( ) method in OCFileListFragment to enhance file locking functionality and improve
updated versioning logic in mmm Version . java and ppp Version . java files to improve versioning accuracy and maintainability
fix : clear endpoint cache when update keyspace
replaced direct calls to ` thrsync . waitForSignal ( ) ` with a new ` waitForState ( Thread . State . WAITING ) `
refactor ` getCoercedAttrValues ` method to return ` SkylarkRuleContextAttr ` instead of ` Map < String ,
[ java ] refactoring storage interface to extend storage interface
fix nullpointerexception when create view with unnecessary or replace option
changed catch block from Exception to Throwable in SegmentGenerationJobRunner . java to handle both Exception and Throwable to improve error handling by providing more informative
added a null check for the query string in SpellCheckComponent . java to avoid potential NullPointerExceptions when retrieving the query string
added validation for header values in Headers . java to ensure proper handling of illegal characters in header values
replace instanceSize with arrayBaseOffset and update related methods in HybridLayout , HostedInstanceClass , and HostedInstanceClass classes to improve
add @ experimental annotation to commentcontainer . setcontainscomment ( )
hhh - 11717 add ` fetch = join ` and ` fetch = lazy ` message for association with ` @ fetch ( fetch = '
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter to extend AbstractSpecFilter instead of implementing SwaggerSpecFilter
added assertions to validate database and table names in TestCompactionTxnHandler and updated database and table names in TxnHandler to ensure correct database and table
camel - 14284 : timer consumer should not throw exception when shutdown . thanks to jbellis for the patch .
added a conditional check before adding a block to the traces list and removed the current block from the worklist to ensure that only processed blocks are
updated ProviderManager to use CollectionUtils for checking providers to ensure proper handling of null elements in the providers list
removed unnecessary exception handling for DatabaseException in InsertOrUpdateGeneratorPostgres . java to simplify code and improve readability
added local index limit handling in LocalIndexIT , BaseScannerRegionObserver , ExplainTable , and BaseScannerRegionObserver classes to ensure that the
added validation for adding collections with the same name in AlterTableStatement . java to ensure that a collection with the same name does not conflict with the
updated cursor positioning logic in VDUBuffer . java and refactored cursor changes in vt320 . java to improve cursor positioning
removed the constant ` USE _ RETRIES ` from ` HttpShardHandlerFactory . java ` to clean up the code and improve readability by
updated version number parsing logic in JavaVersion . java and added a test for JavaVersion . parse in TestJavaVersion . java to ensure compatibility with
added a check to return early if all input gates are empty in StreamTask . java to avoid unnecessary execution when there are no input gate
added a new test method ` test ( ) ` to ` TestReceivingMessageSourceParserTests . java ` to ensure that the test method
added null check for properties before accessing its key to avoid potential NullPointerExceptions when properties are null
updated IOException handling in FileSystemBlobStrategy to include cause to improve error handling by providing a more informative exception message
corrected the spelling of " ClusterStackVersionResourceProvider " to " RepositoryVersionResourceProvider " to improve code readability and maintainability
remove txconfidencelistener from txidtextfield when it change .
added a new constant G1 Perm Gen in JmxSupport . java to support G1 Perm Gen generation in the application
removed unnecessary imports and refactored the loadAttractionsFromLocationToPlaces method in NearbyController . java to streamline code
pdfbox - 4071 : make clonefornewdocument public , a suggest by valerybokov
added checks for home activity type in BaseSwipeUpHandlerV2 . java to ensure proper handling of home activity types
rename ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and update related constants to improve clarity and consistency in naming conventions
updated method names and logic in ShadowTelephonyManagerTest , ShadowTelephonyManagerTest , and ShadowTelephonyManager
removed the setUnfreezeAmount method call from UnfreezeBalanceV2Actuator . java to simplify the code and improve readability
[ hotfix ] [ table - common ] fix typo in description
[ java ] use apache ' s commons ' io ' s FileUtils instead of com . google . common . io . fileutils
refactor assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
refactor Observable class to improve code readability to enhance maintainability and facilitate future updates
replaced ` BasicDBObject ` with ` addMultiFieldOperation ` in ` Update . java ` and added multiple test cases in ` MongoTemplateTests
added null check for randomUUID before setting it in MockHubService to avoid potential NullPointerExceptions when randomUUID is null
added an ` onHoverEvent ` method to ` InputConsumer ` and implemented hover event handling in ` OverviewInputConsumer ` and ` Overview
added a conditional check for the " bootstrap _ conf " system in CoreContainer . java to ensure that the " bootstrap _ conf " system does not
camel - 8192 : camel - netty should use ` ` consumer ' ' instead of ` ` max - headers - size ' '
hbase - 16224 update hbaseclientretries _ number from 5 to 35
update sourcesnippethelper to use file . separator instead of file . topath ( ) . tofile ( )
[ hotfix ] [ test ] make encodedgraphcachetest more robust .
updated the query command to use " all _ tables " instead of " customer _ count " and added a new test for querying over tables to
added functionality to retrieve and adapt kraken assets from the krakenAssets map to improve currency management for kraken assets
added a ` toString ( ) ` method to ` AnyOf ` and created a new test class ` AnyOf _ toString _ Test ` for testing
[ hotfix ] [ alert ] fix the issue that alertgrouper . groupemailrecipients and alertgrouper . groupemailrecipients be
update influxdb publisher to check for non - blank setting .
renamed ` dotransform ` to ` downcast ` in multiple converter classes to improve clarity and consistency in naming conventions
updated address filtering logic in NetUtils . java to include unique local addresses and added a method to check for unique local addresses to improve address uniqueness
added a method to quote column names in DataTextFormatter to improve code readability and maintainability by encapsulating column names
added methods to set and set system properties in WrapSystem , StrUtils , and StrUtils classes , and modified method names in StrUtils to enhance
added a constructor to the UpdateRequest class that accepts a URL parameter to ensure proper initialization of the UpdateRequest class
removed the static modifier from the EnumSerialization enum to improve code readability and maintainability
removed the ` addExperimentalFormatWarning ` method from ` DataImportHandler ` , ` ReplicationHandler ` , and ` RequestHandlerUtils ` to
updated the logging format in JpmsUtil . java to use a custom format method to improve readability and maintainability of the logging output
fix the row height of the table and conditional table to use the correct font size .
[ java ] fix nullpointerexception in defaultbrokerheartbeatmanager . notifybrokerliveinfo ( )
refactor CqlInputFormat to use meanPartitionSize , partitionCount , and splitCount variables instead of null to improve code readability and maintainability
simplified the condition for checking the name in JUnitTestsShouldIncludeAssertRule . java to simplify the condition for better readability and maintainability
added equals and hashCode methods to RuleTerminalNodeLeftTuple class to enhance object comparison and hashing capabilities for RuleTerminalNodeLeftTuple
added a check to resolve StageIDsRearranger if it is not " none " in TezCompiler . java to ensure StageIDsRearr
change the mbean type from msaging - service - pool to msservice . net
updated memory consumption logic in LotsOfOutput . java to include detailed output for memory consumption to improve debugging by providing clearer context for memory consumption
added import statements for Document in multiple Java files to enhance documentation clarity and maintainability of the codebase
updated LdapAutoConfiguration and LdapProperties classes to handle anonymous read - only properties more effectively to improve flexibility in handling anonymous read - only configurations
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
updated the access modifier of the EchoInputDoFn class from public to private to allow access to the EchoInputDoFn class from other packages
added a ` finishMocking ` method to ` MockitoSession ` and modified the ` finishMocking ` method in ` DefaultMockitoSession `
removed extraDeps and extraDeps from BuildRule parameters in GoTestDescription . java and added new test cases in GoTestIntegrationTest . java to simplify
refactor SPDYAsyncConnection to use readBuffer , writeBuffer , and writeBuffer instead of buffer and flushing to improve buffer management and
replace getstaticblock ( material ) with getflowingblock ( material )
updated intent data handling in AndroidLocationPlayServiceManager and modified background class retrieval in BackgroundLocationHandler to improve URL parsing and ensure proper handling of location
refactor AprEndpoint class to improve code organization to enhance maintainability and readability of the code
[ hotfix ] [ table - planner - blink ] handle streamingplan in clifrontend
update craftingmanager . getrecipes ( ) to use computeifabsent instead of get ( )
flume - 102 : do n ' t attempt to force checkpoint in testfilechannelrestart .
removed unnecessary newline character from conditional checks in TabsAndIndentsVisitor . java to improve code readability and maintainability
added a regex pattern for pg _ temp _ . * in NeuteredLinesFilter . java to exclude additional temp files from the output
chore ( deps ) : update sample code to set total timeout , add api client header test
added handling for " INTERVAL " and " NCLOB " data type in DataTypeFactory and updated conditional checks in UnknownType to ensure correct
added isPublishingHistogram ( ) method to WavefrontDistributionSummary and modified HistogramGauge registration in WavefrontMeterRegistry to conditionally include distribution
added springCloudSelectorHandle . setDivideUpstreams ( exist ) and springCloudSelectorHandle in ShenyuClientRegisterSpringCloudServiceImpl
added a new method ` registerListener ` to ` ShadowSensorManager ` that accepts a ` SensorEventListener ` and a ` maxLatency ` parameter to
added SSL connection test methods for method , URI , and header in SelectChannelServerSslTest . java to ensure proper handling of SocketException and Socket
camel - ignite : camel - ignite should close the ignite component if it ' s not null .
added null check for ` cnt ` and modified ` isReachEnd ` logic in ` AbstractClient . java ` to handle cases where ` cnt `
pdfbox - 4071 : catch unsupportedflavorexception and return false instead of IOException
added unit tests for ` setDisplayHdrCapabilities ` method in ` ShadowDisplayTest . java ` to ensure correct behavior of ` setDisplayHdrCapabilities
added a finally block to reset classLoader to null to ensure proper resource management and prevent potential memory leaks
updated error messages in SemanticAnalyzer and added a toString method in SemiJoinHint to improve debugging by providing more context about the expected source and target
added a default constructor to the Message class to provide a default constructor for the Message class
added a GUI class check in SerializableIdiom . java and updated priority logic in SerializableIdiom . java to ensure proper serialization priority based
added imports for DecimalTypeInfo , HiveDecimalUtils , and HiveDecimalObjectInspector , and updated constructors in PhoenixDecimalObjectInspector to enhance type
replaced GZIPOutputStream with OutputStream in CompressionResponseStream and modified content encoding handling in CompressionResponseStream and CompressionServletResponseWrapper to improve handling of output streams and
updated regex patterns and variable names from " WWWAuthenticate " to " authenticateHeader " in Authenticator . java to improve clarity and consistency in
updated conditional logic in DCD . java to check for both EJS , EJS , and org  omg versions to ensure proper handling of ibm
updated thread group name retrieval to use a dedicated method to improve code readability and maintainability by centralizing thread group name retrieval
added logging functionality to MethodInvocationPrivilegeEvaluator and modified the afterPropertiesSet method to improve debugging capabilities and ensure proper handling of security interceptor properties
changed the package of DmozParser from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools
updated import statements in RegisteredServiceChainOperatorTypes and ChainingRegisteredServiceDelegatedAuthenticationPolicy classes to improve code clarity and maintainability
vm : add iso path to the vm if it ' s not in the vm .
removed redundant code and improved error handling logic in SigInt . java and SigIntTest . java to simplify the code and improve readability
replace static import of ArrayUtils with ArrayUtils . isEmpty in NodeTool . java to improve code readability and maintainability
updated imports and annotations in AxonAutoConfigurationWithSpringCloudTest . java to use SpringBootTest and HibernateJpaAutoConfiguration
added multiple @ Override annotations in ColorRGBA . java to improve code readability and maintainability
remove deprecate resetinitializedplanningentityconfig . setresetinitializedplanningentities ( false ) from planningentitydescriptor
updated the ` TwoLevelArtifactCacheDecorator ` , ` ManifestRuleKeyManager ` , and ` CachingBuildRuleBuilder ` classes to include build
updated the method for retrieving fields and modified the condition for determining fixed row size in GroupByOperator . java to improve clarity and correctness of the
wallet : check if the block be not null before add it to the wallet .
added support for CNC currency pairs in BTCEUtils , BTCEUtils , Currencies , and TickerDemo classes to support CNC
updated skewAllowance from 5 to 15 in multiple classes and refactored related logic in SamlProfileSamlAuthNStatementBuilder and Saml
updated SongListActivity to use ItemSortBy instead of ItemFields . Genres to enable sorting functionality for songs in the application
updated the ` readBodyToBytesIfNecessary ` method to handle ` TypedOutput ` and ` TypedByteArray ` correctly to ensure that the ` readBodyToBytes
add legacybaseblockwrapper to make it easy to use .
refactor IcebergBranchExec to use a snapshot retrieval method and improve error handling to enhance code readability and maintainability by eliminating unnecessary null checks
replaced ` newArrayList ( " * " ) ` with ` Collections . singletonList ( " * " ) ` in ` AbstractLdapMockMvcTest . java
updated the initialization of boxesSsboBinding and frameNumber in HybridDemoSssboInstancing and PhotonMappingDemo classes to
updated password change validation logic in IdentityProviderEndpoints . java and added logging for unsupported operations in IdentityProviderEndpointsMockMvcTests . java to ensure proper
added a call to removeAll ( notInitializedInConstructors ) in UnreadFields . java to ensure that the notInitializedInConstructors list is
updated DatabaseException handling to determine the connection URL based on the connection state to ensure proper handling of closed connections during SQL execution
added a new test method ` testRequiredBody ` to ` SpringmvcClient ` to validate the required body of a ` Person ` object to
updated regex patterns for user and password patterns in CredentialInjector . java and CredentialInjectorTest . java to ensure correct parsing of user and password
added a new menu item " Item4 " to the menuItems array and set the key event to META _ MASK in ActionListenerCalledTw
updated print statements in TestCoreParser . java to include the class name of the query to improve debugging by providing more context about the produced results
corrected the spelling of ' id ' to ' id ' in the comparison logic to improve code readability and maintainability
changed the access modifier of the PopulatorContextStackItem class from public to package - private to restrict access to the class from other packages
updated the method for retrieving the number of documents in MoreLikeThis . java and added a new test case in TestMoreLikeThis . java to
reformatted code for better readability in QuestManager . java to improve code readability and maintainability
[ hotfix ] [ test ] make networkbufferpooltest extend testlogger
updated the way the EXPIRY query is appended in MongoSessionDataStore . java to improve query performance by avoiding unnecessary object creation
added a native method ` unsafeGetLong ` to the ` CompilerDirectivesSubstitutions ` class to provide a way to retrieve a long long for
updated time zone information from ARAST to EET in multiple language - specific TimeZoneNames files to ensure accurate representation of time zone information for Asia /
updated the id from 90000010 to 90000011 in DeprecationLogger . java to reflect the new version of the application
hhh - 16464 - do n ' t throw exception if rollbackonly be set to true .
refactor DownloadExternalFile . java to improve suffix handling and return values to enhance code readability and maintainability by reducing unnecessary console output
do n ' t use screen menubar on macos
add integration test for piecewise integration
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods from private to protected in `
added a new parameter ` modWhiteListPattern ` in ` HiveConf . java ` and a corresponding test in ` TestJdbcWithSQLAuthorization .
added entryName and value to invalidClasses in EntryLoader . java to ensure proper handling of invalid classes during entry loading
use player . team ( ) instead of team . sharded
updated the domain name from " comp1 " to " getHostName ( ) " in Cookie . Builder instantiation to ensure the correct domain is used for testing
added validation logic for nullable columns in multiple generator classes to ensure proper validation of nullable columns based on user input
refactor multiple security - related classes to improve code organization to enhance maintainability and readability of security - related components
added collection client tests and changed variable declarations to static final in CustomCollectionTest . java and CompositeIdRouter . java to improve code clarity and ensure
added scratch data handling in ExecutablePreparedStatementBase and modified dependenciesChangeLog initialization in PostgreSQLIntegrationTest to enhance compatibility with PostgreSQL
updated conditional checks for ` max _ cached _ files ` and ` max _ cache _ cache _ size ` in ` DefaultServlet . java ` to
add drag and drop data format to the tabbed pane when drag and drop
updated description creation and assertions in ExecutionUnitRunner , CucumberTest , and CucumberTest classes to improve clarity and maintainability of the
replaced direct calls to ` myVersion ` with ` StringUtils . isNotEmpty ( myVersion ) ` and ` buildTimeString ` in ` CommandLineUtils .
removed the ` public ` access modifier from method declarations in ` TimeUtils ` , ` TimeUtilsTest ` , and ` TimeUtilsTest ` classes
updated security frame detection logic in RefectionMHTests . java to use version checks instead of hardcoded strings to improve code readability and
updated file name check from " jpg " to " . jpeg " in PreviewImageFragment . java to ensure compatibility with the new file extension
updated method handling in NativeImageDebugInfoProvider to check for HostedMethod instead of a hardcoded string to improve code readability and maintain
added ` getIcon ( ) ` method to ` Data ` , ` Data ` , ` Data ` , and ` DataTableTopComponent ` classes to provide
updated substring method to check for non - negative indexing before returning the request name to improve robustness by avoiding unnecessary substring operations
updated the replacement logic in FindAndReplace . java and added a new test for dollarsignsTolerated in FindAndReplaceTest . java to
do n ' t cast xmppconnection to xmppconnection if it ' s not a xmppconnection
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a method to copy files from a specified source and destination directories in the IO class to enhance file copying capabilities and improve test reliability
added an exception for unknown datum class in JacksonUtils . java to improve error handling for unknown datum classes
replaced calls to ` buildAbiFromClasses ( ) ` and ` buildAbiFromSource ( ) ` with ` buildRuleResolver . require
removed background padding calculations from SelectBox . java to simplify height calculations for better readability and maintainability
added identifiers for database and table names in ObjectStore . java to ensure proper handling of database and table names
added schema validation for " postgres " and " oracle " databases in DbSqlSession . java to ensure the correct database schema is used for
removed the logout method from the HomeFragment to simplify the code and improve readability
[ hotfix ] [ test ] fix flaky test ( # 1337 )
added null check for candidates in FastImportAction . java to ensure proper handling of null values and prevent potential NullPointerExceptions
updated the condition in ContainerLifeCycle to check for managed bean status instead of managed status to improve clarity and maintainability of the code
rename iexecutionattributesdialect to iexecutionattributedialect
added a call to metadata . clearUnsafe ( ) in AlterTest . java to ensure metadata is cleared before use
added null checks for the loc parameter in CmdGetTime . java to avoid potential NullPointerExceptions when loc is null
added a null check in TabletInsertionDataContainer and refactored DisruptorQueue to use DisruptorQueueExceptionHandler to improve error handling
deleted the Session2Token . java file to the file is no longer needed in the project
delete the dest volume after create a new one
added a new ` Install ` class to ` SystemShortcut ` and integrated it into ` SystemShortcut ` and ` InstantAppResolver ` classes to enable
added a constructor to ` LdapAuthenticationProvider ` that accepts a ` LdapDataAccessException ` and a corresponding test in ` LdapAuthenticationProviderTests `
updated the way the retrolambda jar is retrieved in Executor . java and added a check for it in CN1BuildMojo . java to
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to improve code readability and maintainability by
updated the ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` and modified the handling of ` liveDocs `
added handleNullResult method to JMESPathExtractor to handle null results to improve robustness by handling null results gracefully
added null and empty list checks for user authorities in AuthorizeTag . java to improve robustness by preventing potential NullPointerExceptions
updated URL assertions in multiple test files for consistency and clarity to improve code readability and maintainability
vm snapshot with memory be not support for vgpu in vgpu
updated annotation handling to use ` testClassConfig ` instead of ` ArrayList ` in ` RobolectricTestRunner ` and ` Config ` classes to
replace ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner . java ` to align with the latest Jetty features and
added a new method ` checkPartialPartKeysEqual ` in ` HiveAlterHandler . java ` and modified the condition in ` TestHive
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to provide a way to control the visibility
updated the condition to check if the component is active in SimulationStatus . java to improve code readability and maintainability
replaced instances of ` SharedBlockingCallback ` with ` Callback . Completable ` in multiple Java files to simplify code and improve maintainability by using
added workspace listener functionality to PreviewControllerImpl and removed PreviewUIController from PreviewControllerImpl to enhance workspace management by allowing updates to the
added a check for VM anonymous classes in ReflectionFactory and modified return logic in ReflectUtil to ensure proper handling of anonymous class names and improve code clarity
refactor TransportHelper class to improve code readability to enhance maintainability and facilitate future updates
updated file path construction in CatalinaAcegiUserRealm . java to use ResourceLoader instead of a hardcoded path to improve code
updated log messages in AmbariServer . java for clarity to improve readability and maintainability of the server initialization process
added null checks for initialization and modify nodes in JSONWriter . java to enhance robustness by preventing potential NullPointerExceptions
modified the ` run ` method to accept a ` FileSystem ` parameter instead of a hardcoded path to improve code readability and maintainability by
added a check to ensure backgroundManager is attached before attaching it to avoid potential errors when attaching to the background manager
set the current tab to 1 in AllAppsTabbed , Launcher , Launcher , PagedView , and Workspace classes , and updated
added null check for ` p ` in ` BaseDataSource . java ` and created a corresponding test in ` SimpleDataSourceTest . java ` to ensure
added support for Java version in PebbleTemplateEngine instantiation to enable compatibility with Java 8 and above
added a ` EditNameDialogListener ` to the ` FileDisplayActivity ` class and modified directory creation logic to use it to enhance user experience by
added ` actionToggleBarBorders ` and ` actionToggleBarBorders ` to multiple activity classes to toggle bar borders in the chart
updated SSL and Websocket URLs from " okcoin . com " to " okex . com " in OkCoinExchange . java to ensure
add NaturalScoreComparator to the stepscope in acceptedforagertest . testpickmovemaxscoreofall / testpickmoverandomly
replaced FileChannel with SeekableByteChannel in Files . java and updated file reading logic in BytesAndLines . java to improve resource management and ensure correct file
refactor ` getFlattenFieldTransferPair ` method to accept ` FieldReference ` instead of ` FieldReference ` to improve code readability and maintain
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] fix checkstyle violation in serializationconfigurationparser
added memory limit setting for debug device in QuickstepProcessInitializer . java to improve memory management for debug devices
updated the calculation of ` val ` in the ` sumWithCompensation ` method to use a variable ` val ` instead of ` t ` to ensure
[ log4j2 - 164 ] ignore test that fail on slow ci server
updated conditional statements in PrecompactedRow . java to check for non - live deletions before creating DataOutputBuffer to improve code readability and maintain
updated return values in ICC _ Profile and ColorConvertOp , and added a new test class InvalidRenderIntentTest to validate rendering intent handling to ensure
added a new ` MeterRegistryLifecycle ` bean to the ` MetricsAutoConfiguration ` class and corresponding tests in ` MetricsAutoConfigurationTests ` to
change log level from warn to info for config center .
added error handling for certificate generation in CertificateFactoryTest . java to ensure robustness by preventing potential exceptions during certificate generation
camel - 14284 : simpletokenizer can parse a predicate with an ambiguous operator . thanks to jbellis for reporting .
removed unnecessary null checks from onTabUnselected method in EditorActivity and added focus handling in IDEEditor to improve code clarity and ensure proper focus
updated error logging to include the user ' s name in the error message to provide more context on the error message for better debugging
updated matrix scaling and scaling parameters in SkeletonModelGpuSkinningTest , OgreXmlLoader , and SkeletonModelViewer classes to
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature
added @ Deprecated annotations to UpgradeResponse . java to indicate that these methods should no longer be used in future development
added support for generating D . ts files in the JSweet command - line options to enhance the transpilation process by allowing users to
[ flink - 26464 ] [ table - planner - blink ] [ table - planner - blink ] fix fetch timeout
updated the timestamp format in StreamingDataflowWorker . java to include a " . html " suffix to ensure accurate representation of the timestamp in the
increased the default value of METASTORESERVERMAXTHREADS from 100000 to 1000 to increase the maximum number of threads for the metastore server
changed the return type of the onTaskSnapshotChanged method from void to boolean and added a return statement to enable the method to return a boolean indicating
updated shadow radius setting from mMaxShadowRadius to shadowRadius in SwipeUpAnimationLogic . java to ensure the correct shadow radius is used for
added a new test method ` chainNestingAndAggregation ` to the ` ChainParserTests ` class to ensure the ` ChainNesting
updated loop condition from ' limit ' to ' end ' in MarketSellAssetActuatorTest . java to correct the loop condition to ensure
do n ' t use isinteractive ( ) for source . isinternal ( )
updated the condition to check if previousCachedFilePath is null or equal to ensure proper comparison of cachedFilePath to avoid potential null pointer exceptions
added DisplayController import and modified WindowManagerProxy instantiation in LauncherPreviewRenderer . java to enhance functionality by utilizing DisplayController for better user experience
updated toolTipText assignment logic in MetalFileChooserUI and SynthFileChooserUIImpl to use " Desktop " instead of " Desktop " to improve
updated screen size retrieval from getToolkit ( ) to Toolkit . getDefaultToolkit ( ) in LooksFrame . java to ensure compatibility with the system '
updated the generic type parameters in the recognise method in TensorflowRESTCaptioner , TensorflowRESTRecogniser , and Tensor
add factory expression support to jpasqlbase . fetchall ( ) and removeall ( )
updated drag index calculation logic in FreeformFinSetConfig . java to ensure dragIndex does not exceed the point ' s bounds to prevent potential
updated the moeVersion from " 1.1 . 2 " to " 1.1 . 0 " to reflect the latest version of the DependencyBank class
updated runtimeError message to specify that the constant canot set call value cannot be set to " constant cannot set call value . " to enhance error
updated error formatting in ElementsShouldSatisfy and ZippedElementsShouldSatisfy classes to include newlines to
mark the Weights class as deprecated to indicate that the class should no longer be used in future development
refactor unsafe plugin registration in AMD64GraphBuilderPlugins and StandardGraphBuilderPlugins to use a dedicated registerUnsafePlugins method to improve code readability
added @ Hint annotations in AndroidAppModularityDescription , AndroidGraphEnhancerArgs , and AndroidGraphEnhancerArgs classes , and created
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to disable vertical scrolling for improved user experience
[ hotfix ] [ table - planner - blink ] fix typo in migrationrequestoperation
updated variable names from ` HOST ` and ` CALLBACK _ URI ` to ` BASE _ URL ` across multiple files to improve clarity and consistency
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy `
added support for creating a DATABASE IF NOT EXISTS database in TestJdbcWithMiniLlap and LlapBaseInputFormat to enable database
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to ensure correct parsing and deparsing of SQL
added touch event handling and refactored copy mode logic in ConsoleActivity . java to improve code readability and maintainability by encapsulating
refactor ` writeXmlOutput ` method to use ` DocumentBuilderFactory ` and ` DocumentBuilderFactory ` instead of ` String ` to improve resource management and
camel - 14254 : camel - base - aggregation - strategy : split ( list , list ) should return null when exchange be null
camel - 14297 : camel - exchange - exception handler should include cause message in the error message
move basicconfigurator and socketmin to the classic package so that it can be use in the same package .
added a check for the PHI _ NODE flag in the targetVN comparison logic to ensure that the targetVN flag is valid before proceed
removed unused import of SharedStringSource in TestXSSFRichTextString . java to streamline code by eliminating unnecessary dependencies
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate the invocation of a specified method in the ` ObjectInvoke
refactor multiple dataset classes related to BoxAndWhisker and Histogram to improve code organization and maintainability
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit5
changed the visibility of the NormUpdate class from private to static and updated equality checks in multiple classes to improve code readability and maintainability by
changed the visibility of the singleton variable from public to private in IndexFileNameFilter to enhance encapsulation and improve encapsulation
refactor ifstatementtest to use dsl . gif ( ) instead of testplugindefinition ( ) .
updated method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to
removed the nullSafe method from TypeAdapter and its usage in StreamingTypeAdaptersTest to simplify the code and improve readability by eliminating unnecessary
updated the expected size in BundledDistributionTest from 12 to 13 to reflect the correct expected size of the test
added a new file ` EXIFReader . java ` that reads and processes metadata from an EXIF file to provide functionality for processing and processing image
[ cloudwatch ] use unknownunit instead of unknown _ to _ SDK _ version to standardunit . none
resolved - issue batch - 119 : pmml model should not create a new instance if the parameter be not a pmml .
added newline characters to the info string in FluentProtocol . java to improve readability and maintainability of the error message
added a check to return early if the bubble bar is not visible to prevent unnecessary processing when the bar is not visible
catch branchtargetoutofboundsexception in substratearch64backend . buildlabeloffsets
added a try - finally block around the initialization of the JDKLogManager in JDKXRLogger . java to ensure that the
added a ` find ` method to ` TicketCatalog ` and implemented it in ` DefaultTicketCatalog ` and ` HazelcastTicketRegistry ` to
refactor code formatting and formatting in TestSSL . java for consistency to improve readability and maintainability of the code
[ hotfix ] [ table - common ] fix deadlock in sortmergeresultpartition .
replace constructors of Read and Write with constructors in JmsIO . java to improve clarity and maintainability of the code
updated the ` PluginHandleController ` , ` PluginHandleDTO ` , and ` PluginHandleDTO ` classes to include a ` type ` parameter to
replaced ` start ( ) ` method with ` start ( ) ` in ` DefaultSpanCreator . java ` and ` SleuthAdvisorConfig
added cocoatouch color and depth and multisample formats to IOSApplicationConfiguration and IOSGraphics classes , and updated bufferFormat initialization in
refactor login tests to use ` attemptLogin ` method instead of ` findElement ` calls to improve code readability and maintainability by reducing redundancy
do n ' t throw unsupportedoperationexception if real ( ) and complex ( ) be not support
updated loop conditions in SynchronizationStatistics . java to use a do - while loop to improve code readability and prevent potential null pointer exceptions
refactor Implements and ShadowPicker classes for improved clarity to enhance maintainability and readability of the code
refactor HttpClientOptions creation into a separate method for better encapsulation to improve code readability and maintainability by encapsulating the
added support for dynamic array types in StructType and SolidityFunctionWrapper classes to enhance type safety and provide clearer error messages for missing types
updated the ` getStringProperty ` method calls to include an ` true ` parameter in ` InlineLayout . java ` and ` FontUtil . java `
added ` Path ` parameter to the ` CopyStep ` constructors in ` CopyStep ` and corresponding tests in ` CopyStepTest ` to enhance
fixed - rsemaphore . acquire ( ) method throw illegalargumentexception when add permits
camel - 14284 : camel - dsl - fix test failure on window
added a new ` FlavorParser ` class and updated ` BuildTargetParser ` and ` BuildTargetParser ` to use it for parsing flavor strings
changed List < String > types from List < String > to List < ByteString > in WitnessScheduleStore . java to use ByteString instead of String
added a check to ensure resultsMeta is not empty before logging to avoid potential NullPointerExceptions during execution
refactor ConcurrentLinkedQueue to improve item removal logic and add a new RemoveLeak class for concurrent modification to enhance code readability and maintainability by
added a new parameter ` addSpecialTokens ` to the ` encode ` and ` batchEncode ` methods in ` HuggingFaceTokenizer ` to allow
[ hotfix ] [ runtime ] use collections . ncopy instead of arraylist in taskmanagerservices
refactor chunk data handling in LoadSingleTsFileNode to use AlignedChunkData to improve code readability and maintainability by central
added a new constant ` KEY _ SESSION _ STORAGE _ CONTEXT ` and modified state handling in ` DuoSecurityMultifactorWebflow
added unit test for schema validation in testjspdocumentparser
added a default constructor to TypeAdapter and updated test warnings in Java 17RecordTest to ensure compatibility with Java 17 and improve code clarity
refactor event handling in Debugger . java and add kill method in SuspendedEvent . java and SuspendedEvent . java to improve event
refactor AntPathRequestMatcher class for improved clarity to enhance maintainability and readability of the code
fix nullpointerexception in createresourcepolicy ( ) and addbitstreamsaction ( )
added null check for _ deflaterEntry before releasing it in GzipHttpOutputInterceptor . java and updated assertions in BlockingTest . java to
added JUnit ' s @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup of tests after each test execution
updated MD5 checksum computation to use Normalizer to ensure proper handling of unknown characters in checksums
refactor command handling in Example . java to improve null safety and clarity to enhance code readability and prevent potential NullPointerExceptions
make keylistener final and add miss @ override annotation to baseappstate
changed the type of ` objectToSave ` from ` T ` to ` DBObject ` in ` MongoTemplate ` and added a new test for
added functionality to check for multiple remote addresses in RequestUtils . java and created corresponding tests in RequestUtilsTest . java to ensure correct handling of remote
change return type of getJobArgs and getJobArgs methods from String to ObjectBuilder in JsLibrary . java to improve type safety and compatibility with JSON
refactor InetAddress handling in CookieManagerTest and UnmodifiableMaps classes to use a static method for host address retrieval to improve code readability and
added whitespace handling in GlyphLayout . java and improved test coverage in BitmapFontTest . java to ensure proper resource management and prevent potential whitespace issues during
added pauseOrResumeSplits method to PulsarSourceReaderBase and PulsarPartitionSplitReaderBase classes to handle multiple split
added a new configuration variable for the HIVESCRIPT _ OPERATOR _ ID in HiveConf . java and updated ScriptOperator . java to utilize
refactor ` getListedTermCounts ` method to use ` SimpleImmutableEntry ` for sorting terms to improve code readability and maintainability by
added a new file ` UseSeparateStepSizeAction . java ` to implement a menu item for managing separate step sizes in the ugs
refactor FileMenuFilter to use final fields and improve file locking logic to enhance code readability and maintainability by consolidating file lock
[ flink - 24424 ] [ table - planner - blink ] fix nullpointerexception in splitrobintableinputformat
updated HTTP request header values from " false " to " 1 " in HttpClientRequestAdapter . java and its test in HttpClientRequestAdapterTest . java
pdfbox - 4071 : use ioutils . closeclose ( ) instead of call close ( ) in extracttext
added native methods for screen width and height in GwtApplication and GwtGraphics classes to improve fullscreen handling and ensure proper rendering behavior based on screen dimensions
changed the type of ` issuers ` and ` parameterName ` from ` LoadingCache < String , String > ` to ` LoadingCache <
added a new test class ` SoulApacheDubboClientConfigurationTest ` for testing the ` SoulApacheDub
replaced ` Gdx . files . internal ( fileName ) ` with ` resolve ( fileName ) ` in ` SkinLoader . java ` to simplify
updated logging levels from warn to info in ChainingAttributeReleasePolicy . java and OidcDefaultJsonWebKeystoreCacheLoader . java to
replaced calls to PMS . REALTIME _ LOCK . lock ( ) with PMS . REALTIME _ LOCK . lockInterrupt
changed the package declaration of Compiler from ` java . lang ` to ` java . lang ` to improve organization and clarity of the code structure
added handling for CodeException in NullDerefAndRedundantComparisonFinder . java to ensure accurate comparison logic for redundant branch locations
use defaulthttpdatasource instead of string contentid in dashrendererbuilder
( chore ) camel - quartz : set the maximum number of prepared statement per database connection to 120
rename ` WritableConfig ` method to ` Configuration ` across multiple files to improve clarity and consistency in naming conventions
added error handling for command operations in AutoScalingHandler to ensure proper error reporting for command operations
refactor CombinedDataset class to improve code readability to enhance maintainability and facilitate future updates
updated the byte array reference from ` buf ` to ` b ` in ` InflateIn _ DeflateOut . java ` to improve readability
added methods to remove cryptography restrictions from the Utilities class to ensure proper handling of restricted cryptography restrictions in the application
added a condition to check if the event is not cancelled before proceeding with chunk generation to ensure proper handling of cancel events and prevent potential crashes
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest . java ` to ensure correct rendering of page
added null check for vContext and refactored context handling in Vectorizer . java to improve code readability and maintainability by reducing redundancy
fix wialon speed value ( # 539957 )
hbase - 16464 disable cluster metric by default .
added a ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to ensure that the ` isEmpty ( )
replaced the unregisterReceiver method with a conditional check for attached state to ensure that the receiver is only unregistered when the receiver is attached
refactor multiple HTTP request and response classes to improve code organization to enhance maintainability and readability of the codebase
added params parameter to the zadd method call in PipelineBase . java to ensure proper handling of parameters in the zadd operation
[ hotfix ] [ test ] fix checkstyle violation in test
updated the class name from ` TestAsyncMessages ` to ` TestAsyncMessagesPerformance ` to clarify the purpose of the test as a performance test
added a ` getNodeOptional ` method to ` VersionedTargetGraphBuilder ` and modified the ` Arg ` class to handle non - existent targets
updated time zone limits from EPOCH _ SECONDS _ HIGH and EPOCH _ SECONDS _ LOW to EPOCH _ SECONDS _
updated return value from length 4 to length HEADER _ SIZE in EscherBlipRecord . java and added a new TestOLE2Embeding
removed redundant initialization of row and column variables in JSONParser . java to improve code readability and maintainability
replaced ` JavaType . ShallowClass . build ( ) ` with ` Pattern . compile ( ) ` in ` FindTypes . java ` to
updated DETAIL _ THUMB _ HEIGHT from 200 to 300 and added trailer retrieval functionality based on local trailer count to improve user experience by
added a method to remove glyph information from the cache in CStrike . java and implemented a native method in CStrikeDisposer . java
added terminateallbehaviour ( ) method to terminate all execution entity in terminateallbehavies behavior .
camel - 14254 : camel - xml - bind - xml should use the xml - bind annotation to get the name of the xml - type
updated the endpoint URL in SimpleHttpClientTests from " scottb . html " to " https : / / www . abc1234 . org
add ` ` prdef ' ' option to clear all all preferences to default value
hbase - 16407 add miss method to thriftserver and thriftmetrics to allow subclass to override it
updated the ` CHANNEL _ MANUAL _ FAN _ SPEED ` channel handling in ` DanfossAirUnitHandler . java
replaced JUnit ' s assertEquals with Hamcrest ' s assertThat for assertions in TestEndpoint . java to improve readability and maintainability of the
removed redundant calls to ` expansionHelper . stop ( ) ` in ` TweetActivity . java ` to streamline code by eliminating redundancy
added equals and hashCode methods to PartitionPanel and PartitionFactory classes to enhance object comparison and hashing capabilities
cloudstack - 10284 : set default disk size if no disk size be specify
updated PredictionRowView to conditionally display predictions based on user preferences to enhance user experience by allowing users to enable suggestions based on user preferences
do n ' t throw an exception if the bbox do n ' t exist
added validation methods for value and position parameters in LibrustzcashParam . java and updated test case in LibrustzcashTest . java to
deprecate ithrowableentity from fml cpw . mods . fml . common . registry . ithrowableentity
added random positioning for the x and y variables in NodeDataImpl . java to ensure correct positioning of the node data
updated the test method name from ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for handling missing scopes to ensure
refactor initialization of declaredDepsBuildResult and firstOrderStdout variables to use try - with - resources for better resource management to improve resource management
updated the version number from " 0.9 . 1 " to " 0.9 . 2 " to reflect the latest release of the application
added a condition to check for DEEP _ SHORTCUT item type in LoaderCursor . java to ensure proper handling of duplicate shortcuts in
added a hashCode ( ) method to the TimeGranularitySpec class to provide a standardized implementation of the hashCode ( ) method for better
changed access modifiers of BooleanWeight and DisjunctionMaxWeight classes from private to protected in BooleanQuery , DisjunctionMaxWeight , and Dis
added a boolean flag ` useProxyResponseCode ` to control proxy response handling in ` HttpURLConnection . java ` to ensure proper handling of proxy responses
make aarch64macroassembler use aarch64 . sp instead of aarch64 . sp in aarch64move
cloudstack - 10284 : do n ' t try to list vms by host capacity instead of host _ id
added a null check for maxScore in JSONResponseWriter . java and updated query in TestDistributedSearch . java to ensure score is only included when
updated the audio recoder from 22050 to 44100 in AudioRecorderTest . java to reflect the correct audio recoding behavior
updated the calculation of newOriginX in RocketFigure . java to account for the bounds of the subject to ensure accurate positioning of the subject
added a null and empty check for the data source in DruidQueryBasedInputFormat . java to ensure that the data source is not empty or null
added a new constant ` ORIGINAL _ TYPE ` and updated regex patterns in ` CustomProperty . java ` and ` CustomPropertyTest . java
added a static method create ( Table parent , Map < String , Object > data ) to the Index class to provide a way to create an index
simplified the return statement in Dates . java to improve code readability and maintainability
updated SchemaCompatibility to include the location parameter in the mergedWith method and added new tests for schema compatibility to enhance compatibility checks and ensure correct handling of
added entity path handling and updated join logic in QueryUtils . java to improve handling of attribute types and ensure proper join behavior for entities
added synchronization to the ` spans ` list and modified return statements in ` TestSpanHandler . java ` to ensure thread safety and prevent concurrent modification
change method parameter type from List < Object > to List < ? > in multiple classes to enhance type safety and avoid potential ClassCastExceptions
updated exception handling in ViewContextImpl to use InvocationTargetException instead of Exception to improve error logging clarity and provide more informative logging
refactor OAuth2AccessTokenEntity to improve code readability to enhance maintainability and facilitate future updates
updated error messages from " System is starting and shutting down " to " Request is rejected " in multiple files to clarify the status of requests due to
added new project files for ios data and moe resources in GdxSetup . java to enhance the project configuration for better user experience
updated imports in TestSearcherManager . java to use ConcurrentMergeScheduler instead of List to improve test reliability by using a concurrent merge scheduler
added a condition to check if the session state is zero and modified the loop structure in GenericUDTFInline and LazyBinaryArray classes to improve
refactor MapIterable , FJIterate , ParallelIterate , and ParallelIterate classes to improve code organization and maintainability
ticket # 2971 : fix one bug - this work only if we clear the browser ' s cache
hhh - 16464 - fix osgi test to work with osgi
updated timeout calculation in HikariPool and HikariPool to use connectionTimeout instead of elapsedTimeMs to ensure accurate calculation of timeout values
make voicecompiler . createcomponentfile accessible to non - packaged resources
updated file name handling in Compat . java and modified file existence check in FileOpener . java to improve code readability and maintainability by
changed the return type of ` row ( ) ` from ` Cell < T > ` to ` void ` in the ` row ( ) ` method
do n ' t throw a parameterexception if the same port be specify in the command line
added a null mask feature to WebSocketClient and updated WebSocketConnectionD12 initialization to handle null masks more effectively
refactor ` genUDTFPlan ` to return a ` Pair < RelNode , RowResolver > ` instead of a ` RelNode `
added counter statistics for bucketed non - preferred nodes and non - preferred nodes in NodeScheduler , NodeSelectionStats , and TopologyAwareNodeSelector
added a new file ` Person . java ` containing a class ` Person ` with methods to set and retrieve the name of a person to provide a
added a boolean flag ` hasOwnerPtr ` and modified the execution logic in ` CPlatformWindow . java ` to improve the handling of owner pointer
added animations for logo fades and fades in the PlaybackOverlayFragment to enhance user experience by providing smoother transitions during animations
remove unnecessary call to getblockstate ( ) . markdirty ( )
removed the ` final ` modifier from the ` IMPL ` variable and added exception handling for SecurityException to improve code clarity and handle potential security exceptions
replaced direct calls to ` fireCellUpdatedEvent ` with ` SwingUtilities . invokeLater ` in ` Sudoku . java ` to improve thread safety and
updated DefaultTypeAdapters and MiniGson classes to use Class < T > instead of InetAddress for INET _ ADDRESS _ ADAPTER
added null checks and assertions for series values in mmm Series . java and ppp Series . java , along with corresponding tests in DataFrameTest . java to
updated option name from " -- no - audio - time - stretch " to " -- audio - time - stretch " in VideoManager . java to
updated boundary checks in GeoRelationUtils and GeoUtils to include MIN _ LAT _ INCL and MAX _ LAT _ INCL parameters to
cloudstack - 10284 : fix npe in vmmanagerimpl # getdiskofferingid ( )
added cleanup method to hazelcasttest to ensure that hazelcast . shutdownall ( ) be call .
added error handling for AES algorithm and provider retrieval in BlockCipherTest . java to ensure robust error reporting for unsupported algorithms and provider exceptions
added filtering for printing operations logs in QFileClient . java to improve user experience by providing clearer output for printing operations
[ micronaut ] add support for child and parent interface in aop proxy
set currentconnectionaddress to proxysocketaddress if it ' s null
replaced ` Math . addExact ` with ` MathUtils . cappedAdd ` in ` WebSocketConnection . java ` to utilize ` MathUtils .
refactor image output stream handling to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
replaced calls to ` TvApp . getApplication ( ) . showSearch ( Activity , PlaybackManager , PlaybackManager ) ` with ` Search
reformatted the ` toString ` method in ` SchemaCrawlerOptions ` , ` GrepOptions ` , and ` GrepOptions ` classes to improve
( chore ) camel - web - config : add osgi configuration to make it easy to configure the webconsole
added a @ Autowired annotation to the RepositoryIndexCreationIntegrationTests class to enable dependency injection for the PersonRepository instance
changed the exception type in the stop ( ) method from Exception to InterruptedException in UIServer . java and TestVertxUIManual . java to
refactor case statements in BlockCactus . java to include newENCE cases to improve readability and maintainability of the code
refactor mouse event handling in ThemeSelector to use a new mouse motion listener to improve code readability and maintainability by encapsulating mouse
[ java ] add rhs padding to the flow control class .
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation . java and IOSNative . java to enhance functionality by allowing
fix npe in stattoksentannotator when tokenization model be not specify
added a condition to check if the query is not distinct before processing group - by expressions in ClusterIntegrationTestUtils and QueryGenerator to ensure that distinct queries
make nativelinkage . stringsimilarity public and add getbestlinkage ( ) method to jninativelinkage
fix a typo in the documentation of jsyntaxtextarea
added null check for children before iterating in PartitionPruner . java to avoid potential NullPointerException when children is null
added tokenPosition and currentPosition variables to MessagePackParser and updated MessagePackParserTest to utilize it to improve parsing context management and ensure proper
added Locale . getDefault ( ) method to AbstractSolrMorphlineTestBase . java to set default locale to English to ensure default locale is set to English
simplified the calculation of the status bar height in LauncherFragment . java to improve code readability and maintainability
added a new test class MetricsReporterTest to validate metrics reporting functionality to ensure correct functionality of metrics reporting in the application
camel - 14284 : camel - xml - bundle : remove unused import from service registry
added ` equals ` and ` hashCode ` methods to the ` Rectangle ` class to implement object comparison and hashing functionality for ` Rectangle ` objects
fix streamkafkaptest by use a random name instead of a string
refactor DSAParameterGenerator to use BigInteger . ONE instead of BigInteger for consistency to improve readability and maintainability of the code
added LLAP _ DAEMON _ DAEMON _ USE _ FQDN configuration and updated related classes to utilize it to enhance
fix clientoutofmemoryhandlertest failure
added a method ` getCmoObjectId ` to multiple classes and updated object ID setting in ` AbstractShape ` , ` ComboboxShape `
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of fetching distinct queries
updated multiple Java files related to the SearchTravRetLoadFieldSelectorTask , SearchTravRetLoadFieldSelectorTask , and SearchTrav
added binding and unbinding of ExtensionAdapter in ManagedKubernetesClient . java to ensure proper registration and unregistration of ExtensionAdapter instances
updated DetailsDescriptionPresenter to use a new method for retrieving information row and added a utility method for media stream handling to improve code readability and maintain
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in TestAuthHandlerBoot and TestRSAProviderTokenManager classes to align
added error handling for generating summary HTML in BugCollectionBugReporter and XMLBugReporter classes to improve robustness by logging exceptions when the summary HTML is
replaced direct calls to ` intPool . reset ( false , false ) ` and ` bytePool . reset ( false , false ) ` with a
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
updated the API level check to use TIRAMISU instead of S _ V2 and added a new WindowSessionDelegateU class to enhance
updated URLHelper to conditionally append scheme and reqPort based on the request scheme to ensure correct handling of scheme and server port in URLs
added support for MSSQLDatabase in foreign key constraint generation to ensure correct handling of foreign key constraints for MSSQL databases
hbase - 16407 remove duplicate hstore . replacestorefiles ( ) call , addendum fix
remove system . out in containeremzulipipe _ bc8 and pipebehavier emzuli pipe and add a filtereventhandler
refactor logging logic in HtmlIdentifier to use a static variable for better readability and maintainability to improve code readability and reduce redundancy in logging
updated references from ` getProducedTableSchema ( ) . getFieldDataTypes ( ) ` to ` getTableSchema ( ) . getFieldNames ( )
add a lock to verify the current thread when use wrong thread .
updated the schema name construction in SequenceSnapshotGenerator . java to use CatalogAndSchema to ensure the correct schema name is used for database operations
updated SpriteBatch , SpriteCache , LwjglDebugStarter , LwjglDebugStarter , and AlphaTest classes
fixed - redissonconnection . join ( ) method should be cast to asyncfuture in redissonconnection and redissonconnection
added baseCore variable and modified statisticYearCores addition logic in SolrLoggerServiceImpl . java to ensure that statisticYearCores is only added
updated method names from ` launchTask ` to ` launchTaskFromView ` in ` TaskActionController ` , ` TaskAdapter ` , and `
refactor MorfologikFilter to use a dictionary resource instead of a string resource and update related imports to enhance the Morfologik
updated sorting options for community and critic ratings in GridFragment . java to ensure consistent sorting behavior for community and critic ratings
added imports for ViewKt and ViewKt , and modified visibility logic in CustomListRowPresenter . java to ensure proper visibility of the
added a try - finally block around the switch statement in StressAction . java to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code organization to enhance maintainability and readability of the code
replaced calls to ` accordingTo . isCaseSensitive ( ) ` with ` accordingTo instanceof DB2Database ` in multiple files to ensure compatibility with
[ jsr310 ] add support for java time module in json serialization
use slf4j instead of log4j . mdc in logutils
replaced TypeBearer with Type in PhiTypeResolver . java to simplify type handling and improve code readability
reformatted code for consistency and readability in CoinbaseTransaction . java to improve code readability and maintainability
added a method to retrieve build targets in ` BuckConfig ` and modified ` ProjectCommand ` to support forced builds with buck configurations to enhance
replaced the initialization of ` idleStrategy ` with a call to ` System . gc ( ) ` in ` Ping . java ` to ensure proper
replaced ContentProvider with ContentResolver in OCFile and related classes to improve compatibility with the latest Android versions
removed unnecessary conditional checks for ` e . getStateChange ( ) ` in ` ReportPanel . java ` to simplify code and improve readability
added null check for slotOwner in TestingLogicalSlot . java to ensure slotOwner is not null before assignment
added a new class ` RemoveCallsToSystemGc ` to remove calls to ` System . gc ( ) ` and ` Runtime . gc (
refactored multiple exception classes to remove unnecessary super ( ) calls to improve code readability and maintainability
added a method to set the UI ID in ScaleImageLabel to enable customization of the UIID in the label
replaced ` foundEntry ` with ` update ` in ` FeedUpdateService . java ` to improve clarity and maintainability of the code by using a
added support for " - cp " in argument checks in Main . java to ensure compatibility with additional command - line arguments
updated the link from options to compiler in avutil . java to ensure the correct compiler is used for compilation
updated initialization logic in StorageService . java to ensure proper initialization of the storage service
updated Test7196045 . java with new test cases to improve test coverage and maintainability
updated density , decay , and decay values in ShaderParametersLightShaft . java to ensure proper density and decay values for better visual clarity
added ` withState ` and ` stateData ` fields to ` OidcConfiguration ` and updated the ` OidcRedirectActionBuilder `
added null and nullable checks for unique constraints in BaseTableDdl . java to ensure unique constraints are only added when null or not null
added federated share permission checks in UsersAndGroupsSearchProvider and EditShareFragment to ensure that shared sharing are only processed when the user is fed
added a method ` needsDocValues ( ) ` to the ` TestBBoxStrategy ` class to provide a way to determine if document values are
refactor buffer alignment handling and error messaging in multiple classes to improve code readability and maintainability
added a method ` intForEach ` to ` Int2ObjectHashMap ` and modified the ` SpecialisationGenerator ` and ` Int2ObjectHashMap
fix bug in worldserver . savedata ( ) that cause worldservermulti to share scoreboard .
change return type of count ( predicate ) from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository
updated the condition for creating MTree snapshots in MManager . java to ensure that MTree snapshots are only created if the timestamp exceeds the
updated the scoring calculations in VectorUtil and TestVectorUtil classes to use a denom variable instead of a hardcoded value to improve accuracy in
added a new constant IRREVERSIBLE _ THRESHOLD and methods in DynamicPropertiesStore and Manager classes to track the last confirmed blocks in the
replaced the method ` setLocale ( ) ` with ` Systems . setLocale ( ) ` in ` GpsMainActivity ` , ` Main
added a new boolean flag ` wasNewDbCreated ` in ` LauncherClings ` and implemented related methods in ` LauncherProvider `
updated error messages and refactored collection removal logic in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to improve clarity and maintainability of
refactor conditional logic for determining 64 - bit data model in Constants . java to improve readability and maintainability of the code
added a check for the current thread in TestIndexWriterDelete . java to prevent unnecessary processing when the current thread is not equal to the current thread
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access the closeDatabase method from other classes
updated import statements in FullDetailsActivity and BaseRowItem classes to use ModelCompat ' s asSdk for consistency to ensure compatibility with the latest API
added functionality to set attribute names for SVG elements in BatikSVGDrawer to ensure proper handling of imported attributes in the XML document
added a try - catch block around the exception handling in ConsoleKeys . java to ensure proper logging of user configuration parsing failures
added a check for " WaitForResult " in AndroidImplementation and modified waitingForResult logic in CodenameOneActivity to ensure that waitingForResult is
refactor constructors in HitQueue , SpanPositionQueue , and PriorityQueue classes to use a Supplier for the sentinel object instead of a boolean
refactor WidgetCell to use a TextView for widget description handling to improve code readability and maintainability by reducing unnecessary type casting
added a maximum attribute count check in Attribute . java to prevent registration of aliases that exceed the maximum registered attribute count
move predicatestest from com . hazelcast . query to com . hazelcast . query . impl . predicates
camel - 11717 : camel - default - header - filter - add caseinsensitive option to defaultheaderfilterstrategy
replaced ` calculateInline ` with ` break _ after ` in ` InlineLayout . java ` and updated variable names in ` Breaker . java `
added null checks and improved null handling in ShareUserListAdapter . java to enhance code robustness and prevent potential NullPointerExceptions
refactored the ` shouldInstrument ` method to handle Android SDK annotations more effectively to improve clarity and maintainability of the instrumenting logic
added a null check for association before source in BrowserContentPane . java to ensure proper handling of insert destinations in the table
refactor memory limit file path handling in CmdModifierTest to use a dedicated method to improve code readability and maintainability by encapsulating
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` in ` AbstractCxxDeps `
added a null check for the ` rule ` variable in ` JavaTestRule . java ` to handle cases where the specified source is not within its
make crossversionproxy a map of mcversion instead of load it from the loader
removed unnecessary conditional check for atIndex in StringUtils . java to streamline code by eliminating unnecessary checks
increased timeout duration from 100 milliseconds to 500 milliseconds in TimeoutTest . java to allow more time for test execution to complete
replaced instances of ` TaskOverlayFactoryGo ` with ` AssistContentRequester ` in constructors to enhance flexibility in handling assist content requests
updated witness address encoding in VoteWitnessProcessor . java to ensure proper encoding and validation of witness addresses
refactor DefaultMethodRegressionTests to improve test coverage to enhance reliability of method regression tests
refactor WorkloadManagerMxBean to improve code organization to enhance maintainability and readability of the code
updated KafkaProducerException import from ` org . springframework . kafka . core . KafkaProducerException ` to ` KafkaException ` in ` KafkaOutbound
added a call to container . closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent potential memory leaks
added clear ( ) method to ExceptionThrowingTaskletStub and corresponding test cases in FaultTolerantExceptionClassesTests to ensure proper exception
updated error message formatting in ConfigBuilder . java to include additional context for better debugging and debugging purposes
updated the ` applyTunerConfigs ` method to include an additional ` extraProperties ` parameter across multiple classes to enhance configuration handling by allowing additional
added handling for in - progress segments in PinotRealtimeSegmentsManager to ensure that only valid segments are added to the list of segments that are
added a check to return null if touchable is disabled to ensure proper handling of touchable states
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest ` to ensure that the build uses
throw retryableexception if cache config be not create yet
added a method to check if a node package is installed in JSweetTranspiler and refactored the installation check in ProcessUtil to
added ManagedObject and ManagedOperation annotations to MBeanContainer and Destroyable classes to enable management of MBeans in the application
changed the conditional check from ` if ( false ) ` to ` if ( false ) ` in ` LongClickableSpan . java ` to ensure that
updated string comparisons in EspMilightHubDiscoveryService , EspMilightHubHandler , and EspMilightHubHandler to use
updated conditional check in ` mmm Types . java ` and added new classes ` T6558559a ` and ` T6558559
add more information to the player ' s print message in worldeditlistener . java
camel - 14297 : camel - kafka : shutdown kafkaconsumer if the consumer be shut down .
removed the default examples ( ) method from Schema . java to simplify the code and improve readability
modified thread interruption logic in AgentRunner . java to use a break statement instead of a while loop to improve code readability and maintainability by
removed the time column from the dataset dimensions in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure that dimensions are removed from the data source
updated the condition for checking shards in FacetComponent . java to improve readability and maintainability of the code
replaced references to ` linkerProvider ` with ` CxxPlatforms ` in ` RustBinaryDescription ` , ` RustLibraryDescription `
added a ` name ` field with getter and setter methods in ` JaasAuthenticationProperties ` , ` JdbcAuthenticationProperties ` , ` Ntlm
[ gr - 16464 ] improve error message when dump a CFG printer .
updated scan logic in BaseQueryPlan and added small scan threshold configuration in QueryServices to enhance query performance by allowing small scans based on point lookup
updated the format of the ` filterToStringCreator ` method in ` RetryGatewayFilterFactory . java ` to include routeId and routeId to enhance
replaced redisplay ( ) calls with callWidget ( REDISPLAY ) calls in LineReaderImpl . java to improve code readability and maintainability by
replaced ` onOverviewShown ` method with ` showForOverviewIfNeeded ` across multiple classes to improve clarity and maintainability of overview display logic
refactor conditional checks for null values in CheckIndex . java and add a new test for deleteAllPointDocs in TestPointValues . java to
updated the method call from ` true ` to ` updateLastState ` in ` ZkController . java ` to ensure the correct state updates are
updated string concatenation for SKEWED _ STRING _ LIST _ VALUES in MetastoreDirectSqlUtils . java to ensure proper formatting of string list
added a null value to the exp in SpliteratorCollisions . java to ensure proper handling of null values in splitting operations
add support for ` ` text ' ' , ` ` exact ' ' , and ` ` exact ' ' text condition .
removed redundant ' do ' statement in ManyToManyConcurrentArrayQueue . java to improve code readability and maintainability
[ mq ] add queryengine . forwardonlyfetchsize ( ) to allow query to forward only fetch size .
camel - 16407 : camel - http - http : / / issues . apache . org / jira / browse / amq - 42
pdfbox - 4071 : initialize pdobjects list with size of beads . size ( )
updated the calculation of ` mWindowRadius ` in ` QuickstepAppTransitionManagerImpl . java ` to use ` initialWindowRadius ` instead of
replaced ShapeDrawable with View and updated background handling in DesktopTaskView to improve layout consistency and maintainability of the application
refactor UpstreamCheckServiceTest to create a new UpstreamCheckService instance to improve code readability and maintainability by consolidating property
removed warning log statements from AbstractSession and AbstractSessionManager classes to improve code readability and maintainability
updated ZooKeeperHiveLockManager to return the locks instead of throwing a LockException to improve error handling by ensuring the locks are returned
[ hotfix ] [ runtime ] fix checkstyle violation in java . base
added a boolean flag ` containsCustomData ` and modified MIPmap generation logic in ` FileTextureArrayData . java ` to ensure that M
updated string literals in assertions in DefaultMaskingFormatterTest to use single quotes for key and secret keys to improve readability and maintainability of
added selectable property and its getter / setter methods to List . java to enable selection behavior when not selectable
added a check to return false if the value count is zero in LlapArrowBatchRecordReader . java to ensure proper handling of zero values in
updated PolicyContext to use File . separator instead of a hardcoded string to improve readability and maintainability of the code
changed the type of ` flatQueries ` and ` expandQueries ` from ` Set ` to ` List ` in ` FieldQuery . java ` to
refactor TLSRestrictions class for improved readability to enhance maintainability and facilitate future updates
[ hotfix ] [ kafka ] do n ' t call producer . close ( ) if producer be not null .
updated the assertNodeStateProvider method to include an ignorableNodeValues parameter and modified its usage in the test to include ignorableNodeValues parameter to enhance
added a lock file creation and deletion logic in RocksdbMavenPomCache . java to ensure proper resource management and prevent potential memory leaks
hbase - 16464 fix testhquorumpeer . getclientport ( ) to use inetSocketAddress instead of clientport
added a new method ` getResponse ` to ` RestClient ` for retrieving the response from a REST request to improve error handling and ensure proper resource management
updated the conversion of segmentTarURIs from an array to an array of Strings to ensure consistent conversion of segmentTarURIs to
updated test properties from TEST _ STUDENT1 _ ACCOUNT and TEST _ STUDENT2 _ ACCOUNT to TEST _ STUDENT
added a null check for the item ID in the EnhancedBrowseFragment and StdBrowseFragment classes to ensure proper handling of null item IDs
increase the number of strings from 500 to 100 in TestSpecialOperations . java to improve performance by reducing the number of strings from 500 to 100
remove hexbyte ( ) and hexhexhexto ( string ) from wkbattributeio
corrected the spelling of " messageWithHeaderEntry " to " messageWithHeaderKey " in MockitoMessageMatchers . java to improve code
added a direct substate check in AbstractStateMachine to check if the transition is a direct substate to ensure proper handling of state transitions in the
added handling for ListMultimap and SetMultimap in MultimapSubject . java and corresponding tests in MultimapTest . java to ensure correct equality checks for
added JoinOperation interface to the PostJoinOperation class to enhance the functionality of the PostJoinOperation class
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest . java ` to validate PostgreSQL
added error handling for JMSException in destroyDurableSubscriber method to ensure that the destroyDurableSubscriber method does not throw an exception to improve robustness
refactor AvaticaDatabaseMetaData class for improved clarity to enhance maintainability and readability of the code
updated MongoDbConnectionPoolProperties and MongoDbConnectionFactory to use DurationCapable for lifeTime , idleTime , and maxWaitTime to improve flexibility
updated the media format creation method to use the media service instead of a null MediaFormatFactory to ensure the correct media service is used for audio format
refactor filters handling in FacetProcessor to return boolean values instead of void to improve clarity and functionality of filter evaluation logic
added support for enabled timeout functionality in ShuffleHandler to enhance user experience by allowing customizable timeout settings
updated the initialization of ` mQuickStepStartingRotation ` to use a constant ` QUICKSTEP _ ROTATION _ UNINITIALIZED `
updated log statements in XPathBuilder and XQueryBuilder to use placeholders instead of placeholders to improve readability and maintainability of log messages
updated the resource path in NNDataSet from " . . / data / data / " to " DataResource . class . getResourceAsStream ( )
added a new test class ` EdgeCasesTokenizerTest ` to validate the behavior of the ` GoTokenizer ` class to ensure proper handling of escaped
added validation for the " atlas " property in AtlasTmxMapLoader . java to ensure the map does not contain the " atlas "
remove property placeholdershelper , which be no longer need .
added database closure in BlockchainTest and removed unnecessary ReceiveSource instantiation in KafkaTest . java to streamline code and improve readability by eliminating unnecessary
replaced ` String [ ] ` with ` List < String > ` for string splitting in ` CoreMarkdownNodeRenderer . java ` to improve performance and
fixed checkstyle violation in WebServiceInboundGatewayParserTests . java
replaced ` ImmutableList . Builder < Object > ` with ` List < Object > ` in ` ProjectableSQLQuery ` , ` SQLBindings ` ,
added support for OpenJDK VM detection in the VirtualMachine class to ensure compatibility with OpenJDK systems
added a keepAlive flag to the baseUrl setting in ReactorClient . java to ensure that the base URL is set to keep alive when the client is
replaced string literals for VertexAttributes with ShaderProgram . POSITION _ ATTRIBUTE in MD5Renderer . java and ObjLoader . java to
camel - 14297 : camel - spring - boot : add property component to the registry if it ' s a property component .
refactor account retrieval logic in UnfreezeBalanceActuator . java to improve code readability and prevent potential null pointer exceptions
update version number in xmppserver to use alpha release status .
replaced direct calls to ` t ` with ` t . unannotatedType ( ) ` in ` mmm Types . java ` and ` ppp
updated assertions in StorageGroupProcessorTest . java and added seqTsFileSize configuration settings in StorageGroupProcessorTest . java to ensure correct configuration
added a new ` DumpableCollection ` to the ` dumpObjects ` method and updated imports for ` JaasConfiguration ` , ` Environment `
added a parameter ` waitbeforestart ` to ` FFMpegVideo . java ` to set the waitbeforestart variable to 2500
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructors and related classes to simplify the code by eliminating unnecessary parameter
[ hotfix ] [ test ] fix lint warning in accessorstest
graalcompiler . compilemethod now return a framemap instead of a structuredgraph .
replaced @ Ignore annotation with @ ConditionalIgnore annotation in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to enable conditional execution of tests
fix water not be able to move water to the top of the block .
updated the ` toString ( ) ` method in ` Directory . java ` and added a ` getLockID ( ) ` method in ` RAM
removed the allowExperimentalOptions ( ) method and simplified the conditional check to improve code readability and maintainability
added static methods ` then ` and ` then ` to the ` BDDAssertions ` class to enhance assertion handling capabilities in the testing framework
rename variable ` hp ` to ` hostField ` in ` ForwardedRequestCustomizer . java ` and update related references in ` ForwardedRequest
changed log level from debug to warn for multiple Kubernetes config files to improve logging clarity and provide clearer feedback on configuration issues
added file upload handling in UploadListActivity and updated upload status handling in UploadListActivity to ensure proper cancellation of file uploads and improve user experience
added a new ` ProviderLoader ` class and refactored ` TerminalManager ` to implement ` ProviderLoaderListener ` instead of ` ProviderInstaller `
replaced ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor . java ` and ` StreamEnvironmentPostProcessorTests . java `
updated SelectFromDatabaseChangeLogStatement to use ColumnConfig instead of a hardcoded filename to improve clarity and maintainability of the database change log
hhh - 16464 - fix test failure in postgresql dialect
do n ' t calculate partition per member if there be no data member
added error handling and scheduler state checks in ExecutionScheduleManager , ExecutionScheduler , ExecutionSchedulerImpl , and ExecutionSchedulerImpl classes to improve robustness and
replaced ` toString ( ) ` with ` text ` in ` BoxBuilder . java ` and modified conditional logic in ` BoxBuilder . java ` to
updated the formatting of the checkArgument statement in StatisticMap . java to improve readability and maintainability of the code
updated the slide end from 383 to 500 in TabletSplitToConfirmTimings . java to increase the slide end duration from 383 to
replace hardcoded string " Random " with Core . bundle . get ( " waves . random " ) in WaveInfoDialog and PlacementFragment
updated the condition in BukkitMain to include plotArea in the plot area check to ensure proper handling of plot areas in the plot area
added unit tests for touch exploration functionality in ShadowAccessibilityManagerTest . java and modified listener handling in ShadowAccessibilityManager . java to ensure proper
pdfbox - 5428 : fix incorrect character code lookup in cmapsubtable ( # 5328 )
use getname ( ) instead of getpropertyasstring ( )
use create ( ) instead of create a new instance of npoifsfilesystem in testnpOIfsfilesystem
added imports for PS and PlotArea , and modified return logic in Move . java to improve code clarity and ensure proper handling of plot areas
updated regex pattern for version matching in TestWebHCatE2e . java to ensure accurate matching of version strings
updated the condition to check if the count is less than 1 instead of 0 to ensure that the count does not exceed the expected range
[ micronaut ] fix the issue that kafkaconsumerprocessor do n ' t work with consumer thread .
replaced the import of ` util . IsolatedClassLoader ` with ` IsolatedClassLoader ` and added a validation check for ` ok ` to
do n ' t close the option if it ' s not visible in the drawlist
camel - 14284 : camel - spring - batch - fix typo in headervalue
added an ` isAnimationFinished ` method to the ` Animation ` class to check if the animation finishes after a specified time
added a new test method ` testCustomFavIcon _ With _ LineBreaks ` in ` LoginMockMvcTests . java ` to ensure
added null check for ` otherUrl ` in ` TimeLineCursorAdapter . java ` and updated string formatting in ` HomeFragment . java ` to
fix a bug in the text rendering of a text field in the eipe equation
refactor ObjectHashSet class for improved performance to enhance performance and maintainability of the code
refactor null checks in DataUtilities to use Arrays . equals for better readability to improve code readability and maintainability
mc - 12770 : bugfix : bugfix for deletion of enchanted books ( mc - 12770 )
[ microprofile ] add test for asyncresource . get ( ) and put ( )
rename ` TARGET _ FLAT _ HEADER _ MAP _ SUFFIX ` to ` TARGET _ USER _ HEADER _ MAP _ SUFFIX `
added debug logging for sending messages and improved error handling in MailService . java to enhance debugging capabilities and provide clearer error reporting for send failures
replaced instances of ` resetTaskItemView ` with ` resetToEmptyUi ` in ` TaskHolder ` and ` TaskItemView ` classes to
added unit tests for the ` getPartitionsByNames ` method in ` TestHiveMetaStoreClientApiArgumentsChecker . java ` to ensure
added a closing brace in FileListListAdapter . java to improve code readability and maintainability
replaced ` ArrayList ` with ` List ` in ` OCFile ` and ` OCFileListAdapter ` to improve performance by using a more
updated the index used in the removeViewInLayout method from the first child to the last element to correct the view removal logic
removed unnecessary import of " org . eclipse . jetty . websocket . util . server . internal . " from JavaxWebSocketConfiguration , JettyWebSocket
removed the ' true ' parameter from the S3Request constructor in S3Request . java to simplify the request creation process by eliminating unnecessary parameters
fix issue with jfxradiobuttonskin when timeline be null
updated the condition for parsing dewey numbers in DeweyNumber . java and added a new test case in DeweyNumberTest .
added a static variable ` categorySetString ` and modified the return statement in ` MwVolleyApi . java ` to replace " Category :
corrected the spelling of " Invalid close control status code 1111 " in WebSocketClientTest . java to improve code readability and maintainability
added null check for classLoader in WebappLoader and updated assertions in TestVirtualWebappLoader and TestWebappClassLoaderWeaving to ensure proper handling
removed redundant conditional checks for mapped superclass classes in PersistentAttributeTransformer . java to streamline the code for better readability and maintainability
pdfbox - 4071 : do n ' t throw an error if a page label be miss
added a new file ` TestPorterStemFilter . java ` to test the functionality of the ` PorterStemFilter ` class to ensure that the
modified the ` postBatchMutate ` method to ` postBatchMutateIndispensably ` and added a ` success ` boolean parameter to enhance the
updated package names from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch .
fix a race condition in chatwindowmanager . close ( ) .
removed redundant ` Sys . touch ( ) ` calls from multiple Java files to streamline the code and improve readability
updated the ` HgCmdLineInterface ` to include the " - mardu " command and modified the ` untrackedFiles ` method to
camel - 14284 : camel - netty : camel - netty : camel - netty : add a timer to the producer .
changed access modifiers of several light classes from public to final in DirectionalLight , PointLight , and SpotLight classes to enforce immutability
updated width and height calculations in X11GraphicsConfig , WGLGraphicsConfig , and X11GraphicsConfig classes to ensure valid dimensions are used for
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` , ` DelegatingSecurityContextRunnable ` , and ` DelegatingSecurity
added a new class ` AnnoFilterTreeSet ` and modified ` findAnnotatedClasses ` and ` findClassesThatExtend ` methods in ` Class
updated the length validation logic in BytesColumnVector . java to handle negative elements and maximize size of smallBuffer to ensure proper handling of overflow cases and
replace assertEquals with assertTrueEventually in WriteBehindMapStoreWithEvictionsTest . java to improve assertion accuracy and ensure correctness of
changed the parameter type of ` uninstallListeners ` from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI ` and ` X
[ ggb - 311 ] add isequal ( ) method to polyfunction to make it easy to compare polynomial function .
added a null check for the table before calling configureValue in SynthTableUI to avoid potential NullPointerExceptions when the table is not initialized
added a try - catch block around the instantiation of CustomChange to handle potential ClassCastException during instantiation
replaced ` ConfigPathGetter ` with ` DistBuildConfig ` and added ` getOptionalPathWhitelist ` methods in ` DistBuildConfig `
change the default value of isDoubleEntryEnabled from defaultValue to false in GnuCashApplication . java and update export warning handling in ExportDialogFragment
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to temporarily disable tests that are not ready for execution
changed return types of ` doJoin ` methods from ` void ` to ` boolean ` in ` JoinTemplate ` , ` JoinWorker ` , and
removed the Optional < Boolean > getAutodeps ( ) method from JavaLibraryDescription . java to simplify the code and improve readability
added FLAG _ ACTIVITY _ NEW _ TASK to intent and modified intent flags to include FLAG _ ACTIVITY _ NEW _ TASK to ensure
added a new method ` checkPagingOrderBy ( ) ` to ` SpiQuery . java ` to provide a way to check paging order in the query
updated the number of repositories from 0 to 3 in RepositoryConventionPluginTests . java to ensure accurate URL representation for Maven artifacts
added a new AffiliationTask class to manage a node affiliation to facilitate the creation of an Affiliate node in the pubsub cluster
improve error message for invalid uri in taglibraryinfoimpl .
changed the access modifier of the buildUserProfileByClassCompleteName method from private to public to allow access to the buildUserProfileByClassCompleteName method
added array update logic to ` CacheKey ` and refactored ` CacheKeyTest ` to use a new ` doUpdate ` method to improve
updated file type detection methods across multiple filesystem classes to utilize a native file type detection mechanism to improve compatibility with different filesystem implementations
fix likely cause of occasional ci failure
replaced ` ShadowVirtualDeviceManagerTest ` with ` VirtualSensorCallbackDelegateReflector ` and added ` VirtualSensorCallbackDelegateReflector ` interface in ` Shadow
added a condition to check if ` contextBeforeExecution ` is not equal to ` contextBeforeExecution ` in ` HttpSessionSecurityContextRepository ` to ensure
rename variable ` lch ` to ` loopback ` and update related logic in ` NetUtil . java ` to improve clarity and functionality of the
rename ` BUF _ SIZE ` to ` DEFAULT _ BUF _ SIZE ` and update related variable names in ` Zlib . java ` to
added secure validation for referent references in KeyInfoReferenceResolver , XMLSignatureInput , TransformXPath , and XPathError classes to ensure proper handling of
added a boolean flag ` iconChangeListenerInstalled ` and updated the icon listener handling logic to ensure icon changes are only registered when the icon change listener is
added Russian language support to the Language class to support Russian language support in the application
hhh - 16464 : use a temporalunit . nanosecond instead of a hardcoded value .
disable state verification for frame state in substrategraphkit
added system property management to RobolectricTestRunnerTest and TestUtil classes to ensure proper cleanup of system properties during test execution
added support for the " org . slf4j . " system class in ViewClassLoader and corresponding tests in ViewClassLoaderTest to ensure the correct class
added a check for " jar " in MavenResolutionResult in ChangePackaging . java and implemented a test for default packaging in Xml . java to
[ java ] add ` ` txt ' ' extension to file download test
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to clear the buffer
replaced instances of ` getDefaultUnits ` with ` setPreferredUnits ` in multiple files to standardize unit management and improve clarity in unit management
updated the expected date format in DatePatternConverterTest to use UTC timezone instead of a hardcoded value to improve test accuracy by using UTC timezone
removed redundant return statement in Terminator . java to improve code readability and maintainability
updated IOException messages to provide clearer context for file URIs and improved error handling to provide clearer feedback on file URI issues and provide clearer
use a single thread executor for tracking notification to make tracking notification more reliable .
updated FtpReconnectAttemptServerStoppedIT and FtpEmbeddedService to use Awaitility for connection management and added a method to count active sessions
replaced ConcurrentHashMap with ConcurrentSkipListMap in KeyedProperties . java to improve concurrency handling for keyed properties
added a ` ignore ` method to ` JavaUtilLog ` , ` Logger ` , ` StdErrLog ` , and ` StdErrLog `
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerException when runningTaskView is null
removed unnecessary type casting in BukkitWorld . java to simplify code by eliminating unnecessary type casting
removed the call to ` GraphicsUtil . cleanImage ( img ) ` in ` PanelManager . java ` to streamline the code by eliminating unnecessary
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for MMapDirectory and SimpleFSDirectory to support unmaping functionality in the application
added a null check for the ` ic ` variable in ` PdfCleanUpProcessor . java ` and updated test cases in ` PdfCleanUpProcessor
updated the parameter name from " field1 _ maxDocFreq = 1000 " to " field1 _ s maxDocFreq = 1000 " in the
refactor ExtendedOperatingSystemMXBeanImpl to improve performance and readability to enhance performance and maintainability of the code
added functionality to install and install left commands in SideMenuBar to enhance user experience by allowing commands to be installed in the title bar
added a boolean flag ` advanceWindowed ` to ` AppSettings ` and modified ` TweetActivity ` and ` UserProfileActivity ` to condition
added SybaseDatabase support to the database check in DropPrimaryKeyGenerator . java to ensure compatibility with Sybase databases
refactor Client class to improve code organization to enhance maintainability and readability of the code
[ java ] reset the lastrecordingposition to 0 when the leader be ready .
replaced invalidate ( ) method with setCellLayoutPressedOrFocusedIcon ( ) in BubbleTextView . java and added shouldDelayChildState ( )
added a return statement in NearCachedClientMapProxy . java to ensure that the method returns early to avoid potential errors
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added error handling to the shutdownHttpServer method in ListenHTTP . java to improve robustness by handling potential exceptions during server shutdown
camel - 14284 : camel - s3 stream upload : fix the build error of camel - aws2 - s3
[ hotfix ] [ web ] remove unused parameter ` ` tmid ' '
added a method to drop network offerings keys in Upgrade226to227 . java to ensure that the database does not exist in 2.1 .
added a new test class ` TestThriftCLIServiceSecurity ` and modified the password handling in ` TOpenSessionReq ` to ensure that the password
added maxEnergyLimit variable and updated energy limit assignment logic in VMActuator . java to ensure accurate calculation of energy limits based on constant calls
added a maxInMemorySize property and its getter / setter methods to HttpClientProperties , and modified the webClientPlugin constructor to include it to enhance
refactor Cache class for improved performance to enhance performance and maintainability of caching operations
added two new Cucumber test classes , RunCucumberTest , StepDefinitions , and StepDefinitions , to enable testing of Cucumber
added error handling for double value writing in TypeJsonUtils to improve robustness by handling JSON parsing exceptions and ensuring proper parsing of double values
removed unused byte array parts from Utf8StringBuilderTest . java to clean up the code and improve readability
refactor parameter handling to check for parameter sets before appending to stringMap to improve code readability and maintainability by encapsulating parameter
add maximum number of output for circuit breaker to ensure that circuit breaker can not be configure on circuit breaker .
updated the maximum buffered documents configuration in TestIndexWriterExceptions . java to ensure the test accurately reflects the maximum number of buffered documents
replaced occurrences of ` String . toString ( ) ` with ` Sha1HashCode ` and ` update ( ) ` in multiple Java files to improve code
removed unused methods ` enumValue ` , ` intValue ` , ` longValue ` , and ` intValue ` from ` AsmRuntime . java ` to
added tags for various biome tags in ForgeBiomeTagsProvider . java to enhance the functionality of biome tags for better biome management
refactor image loading to use a thread pool instead of a separate thread .
changed access modifiers of several fields in BaseTableUpsertMetadataManager from private to protected and refactored preloadSegments method to improve encapsulation
updated German and Chinese characters from "   " to "     " in multiple Java files to ensure
replaced ` getImage ( ) . equals ( vid ) ` with ` hasImageEqualTo ( vid ) ` for image comparison to improve code read
camel - 14297 : camel - jbang - add -- repos to jbang run command
added handling for NaN scores and improved score collection logic in CrawlDbReader . java to enhance robustness by preventing errors when scores are NaN
added a cleanup method to the OnStartupTriggeringPolicyTest class to ensure proper cleanup of temporary files after test execution
updated focus handling in FilterConditionEditor and added window focus focus handling in FindAction to improve user experience by ensuring proper focus behavior when the component is
[ hotfix ] [ test ] make checkpointscleaner non - blocking .
added a new file ` XPathWhiteSpaceTest . java ` that tests XML schema to validate XML parsing to ensure proper handling of XML schemas in XML
do n ' t overwrite trie log layer if there ' s no hash
refactor FilledNewArrayInstruction class to improve code readability to enhance maintainability and facilitate future updates
[ java ] increase timeouts for simplenetworktest
updated the method to check if the parent path ends with a slash instead of substring to ensure the correct path format is used for relative paths
added a print statement to log the failure of loading the skin file to improve debugging and traceability of the skin file loading process
added markDirty ( ) and isValid ( ) methods to LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to ensure proper
added a static final Result UNDEFINED constant to the Result class and updated its usage in TestStep to improve code clarity and maintainability by using a
changed the exception type from PersistenceException to NullPointerException in TestTransactionCallback . java to ensure proper handling of NullPointerExceptions
change uploadjobmultipartoperation to implement prepareddataserializable to ensure that the service be not jetty service
[ flink - 18157 ] [ database ] handle exception when recover data from the job journal
[ bugfix ] add summarylevels . of ( ) and summarylevels . of ( nodemodel , boolean ignorechildchild ) method to
changed the visibility of the ` pos ` variable from ` volatile ` to ` sizeMask ` and modified the ` ensureAvail ` method to
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest , RecoveryZkTest , and ChaosMonkeySafeLeaderTest to
updated the calculation of ` targets ` and ` messages ` to use ` endpoints . size ( ) ` instead of ` targets . size ( ) `
removed unnecessary whitespace in FileManager . java to improve code readability and maintain consistency
updated TransformFunctionType to include " plus " , " minus " , " plus " , " pow " , and " pow " parameters to enhance
added ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` methods to ` VariableElement ` and updated package - info . java to enhance
updated RFC3280 from " RFC3280 " to " RFC5280 " in multiple Java files to improve consistency and maintainability of the code
updated the version number from " 2.9 . 3 " to " 2.9 . 4 " in Recaf . java and changed the type cast from int to
replaced ` LruCache ` with ` ArrayList ` and ` SparseBooleanArray ` in ` ListActivity ` , ` NoteAdapter ` , and `
reformatted conditional statements in DirectUpdateHandler2 . java for consistency to improve readability and maintainability of the code
updated path handling in ConfigFileApplicationListener to use ResourceUtils . FILE _ URL _ PREFIX instead of a hardcoded string to improve code
updated ` PreviewPositionHelper ` to accept a ` Context ` parameter in ` TaskThumbnailView ` and ` TaskView ` classes to enhance flexibility
[ java ] do n ' t publish new leadershipterm if there be no entry in the log .
[ java ] update pmdcoveragetest to verify stderr now
refactor byte array reading logic in ByteArrayInputStream and add a new Skip class for testing skip functionality to improve readability and maintainability of the code
simplified the conditional check for promptUpdate in UpdaterTask . java to improve readability and maintainability of the code
changed the access modifier of MAX _ HEADERS from final to public in HeadersMessage . java and added a condition in Peer . java to allow access
added " rt . jar " to the STANDARD _ LIBRARIES list in ModClassLoader . java to include the " rt . jar "
refactor connection handling in AbstractHandshakeHandler to streamline code and improve readability to enhance maintainability and reduce boilerplate code
updated GranuleDescriptor , RasterLayerResponse , RasterManager , GTDataStoreGranuleCatalog , and DataStoreGranuleCatalog to use Utils
added a conditional check to ensure the response is committed before sending an error to prevent errors when the response is already committed
updated condition checks for pendingElements and connectionQueue sizes in HttpSession . java to improve code readability and maintainability
changed fade - out behavior from true to false in HomeGestureTutorialController , SwipeUpGestureTutorialController , and Swipe
fix prefab format to use the name of the prefab instead of the error message .
replaced the creation of ScimGroupExternalMembershipManager with a addition of " internal . superuser " and " internal . superuser " to enhance
updated the calculation of thirtyDays in FreezeBalanceActuator and added a validation check in TransferActuator to ensure that the minimum amount
updated the method to use ` File . separator ` instead of a hardcoded slash to ensure consistent file path handling across different operating systems
ggb - 271 fix for focus not work on the right menu
updated description retrieval in GpsMainActivity and modified service intent in AnnotationViewFragment to use EventBus for better event handling to improve user experience by
added a conditional check for the number of pages in JsoupNonVisualRegressionTest . java to ensure the test correctly verifies the number of pages
use androidnativebufferallocator instead of androidbufferallocator
added checks for flag names starting with " ! " in Main . java , modified flag handling in PrimaryItem . java , and Util . java to
added noPMD comment to JDBCHistoryCache . java to improve code readability and maintainability
updated the condition to check for " ITEM _ USE _ SELECT _ REWARD " instead of " ITEM _ USE _ SELECT _ RE
refactor QueuePriorityTest to use ArrayList for item count and add a toString method in PriorityElement to improve readability and maintainability of the test
do n ' t use componentcontext . initowner ( ) when create affinity group
added a null check for the main command and modified the argument check to support both verbose and help options to enhance user experience by providing clearer help
updated the initial capacity of LightOutputStream instances from 7 to 4 in multiple classes to improve performance by reducing the number of output streams
changed the visibility of the Scanned class from static to public to allow access to the Scanned class from other packages
added a new boolean variable ` showBlank ` and modified conditional logic in ` ClassWriter . java ` and created a new class ` T8032
added a check for the presence of a parameter ' p . sn ' in Person . java to ensure proper validation of the parameter ' s length
added null check for the extension variable before checking its existence to avoid potential NullPointerExceptions when the extension is null
change return statement from return to continue in ContactRightButtonMenu . java to streamline the process of returning to the next iteration
[ hotfix ] [ runtime ] fix slotsharinggroupassignment and slotsharinggroupassignment
simplified the calculation of the ' si ' variable in InstallShortcutReceiver . java to improve code readability and maintainability
refactor PlainSocketImpl to ensure proper resource management and prevent potential memory leaks to improve resource management and prevent potential memory leaks
added functionality to clear and manage removed media details in BookmarkListRootFragment and MediaDetailPagerFragment to enhance user experience by allowing users to remove
updated log message in Actions . java from " center of element " to " in - view center point " to clarify the purpose of the log
added a new file ` bug4865918 . java ` containing a GUI test for scrollbar block increments to address bug 4865918
replaced ` VelocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler . java ` to simplify the code and improve readability by
replaced specific imports with a wildcard import and added a new case for " grouptriggers " in QuestCommand . java to streamline import
fix bug where you can not select a gnu account file .
added Lombok ' s ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to improve code readability and maintainability by using Lomb
updated the configuration URI from a hardcoded value to a constant in CloudService . java to improve code readability and maintainability by using a
removed method calls to setViewportComponent and setJScrollPane in BrowserPanel . java to streamline the code by eliminating unnecessary components
added support for the BACK key in LwjglInput , ParticleEditor , and TWL classes , and updated event handling in
added a conditional check for ` indexMimeTypeParts ` before retrieving parts in ` MoreIndexingFilter . java ` to enable indexing of MIME types
added author pattern matching for @ author and improved comment processing in JSDoc . java to enhance readability and maintainability of the code
refactor MetricsConstant to replace DELTA _ DELTA _ TOTAL _ DATABASES with CREATE _ TOTAL _ TABLES and
updated HiveDatabaseSchema and HiveSchemaFactory to use DrillHiveMetaStoreClient instead of List < String > for managing database tables to enhance
updated ` oauth2LoginLinks ` method to include ` queryParams ` as a parameter and added error handling logic to enhance error reporting by providing an error
updated date format from " Hijrah - umalqura " to " Islamic Umm al - Qura Calendar " in TCK
added a check for Firefox compatibility in WebAudioWrapper . java to ensure compatibility with Firefox browsers
added a ` appendInterceptor ` method to ` GrpcServerBuilder ` and modified the ` InterceptorConstants ` constructor in ` InterceptorConstants `
added a default charset parameter to the CREATE TABLE TABLE TEST _ 5 and TEST _ 6 tables in TestCompatibility . java to ensure proper handling of default
removed redundant calls to allocateOutgoing ( ) in WriterRecordBatch and StreamingAggTemplate classes to improve code readability and maintainability
[ hotfix ] [ runtime ] fix checkstyle violation in executiongraph
added a boolean flag ` hasFrom ` and modified SQL statement appending logic in ` Delete . java ` and ` DeleteDeParser . java `
replaced ` isSuccess ( ) ` with ` isMultiStatus ( status ) ` in ` SynchronizeFolderOperation . java ` to improve handling of
refactor applicable test handling by introducing a new utility method ` applicableListTests ` to improve code readability and maintainability by encapsulating
updated regex pattern in LogAnalyser . java to allow for additional characters in the log line
camel - 14265 : camel - google - integration - test : enable GoogleCloud integration test in camel - jbang
fixed - redissonsearch . value ( ) method should use ` ` exclusive ' ' instead of ` ` min exclusive ' '
refactored cclicensestep to use generics and improve code readability
added a null check before updating the global ID in IfcModel . java to avoid potential NullPointerExceptions when accessing global IDs
updated comparison logic in OptionalAssert to use objects . getComparisonStrategy ( ) . areEqual ( ) instead of direct comparison to improve accuracy of comparison
refactor memory management in ` NoNewLineParagraphCssApplier ` , ` ParagraphCssApplier ` , and ` ParaGraph ` classes to
added a new file ` TestArrayCopyToFromObject . java ` containing a test class ` TestArrayCopyToFromObject ` to validate array
updated newline character handling in BuckPythonProgram . java for consistency and clarity to improve code readability and maintainability
fix checkstyle issue in io / ajp / ajp / ajp / apr / apr / apr / a
add a new method ` ` visitallfiles ' ' to ` ` findfiles ' ' and deprecate it
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to temporarily disable the test due to unstable scenarios
refactor exception handling in TestInternalInputBuffer to check for null exception before proceeding to improve robustness by preventing potential NullPointerExceptions
refactor autoloadCall method to accept a lowerName parameter and improve lock management to enhance flexibility in managing autoload locks during class loading
updated server version comparison logic in CustomPlaybackOverlayFragment and PlaybackController to use UserPreferences instead of UserPreferences to ensure accurate server version comparison and
updated localhost address handling in KDC classes to use the canonical host name instead of a final variable to improve code readability and maintainability by
updated Jsr250Voter to conditionally return ACCESS _ DENIED based on the jsr250AttributeFound flag to
updated import statements in MP4Parser . java for consistency and clarity to improve code readability and maintainability
added handling for HS2 proxy user in ConnectionFactory . java to ensure compatibility with HS2 proxy user configuration
camel - 14234 : camel - hdfs - add compressioncodec for bzip2 , snappy , bzip2 , snappy
added a sleep delay of 1000 milliseconds in HttpClientTest . java to improve responsiveness during test execution
xssf : do n ' t notify array formula change in xssfsheet . setcelltype ( )
updated glyph positioning logic in GlyphLayout . java and modified text in BitmapFontTest . java to include AGWW AGWWi issue to
refactor Fabric8IstioIT to use Commons class instead of a hardcoded path to improve code readability and maintainability by
replaced ` apiClient . ReportPlaybackStartAsync ` with ` TvApp . getApplication ( ) . reportPlaybackProgress ` in ` PlaybackController
make simpleauthority use bufferedinputstream instead of fileinputstream to avoid memory leak
fix maploader eviction on initial load
updated the return statement in ResponseFlag . java to use LENGTH _ BIT and ERROR _ BIT instead of LENGTH _ BIT to
add read policy to fix default policy when no read policy be find
refactor FontUtilities to use SoftReference for cached CompositeFont instances to improve memory management and prevent potential memory leaks
updated prefHeight initialization and adjusted calculation logic in Tree . java to improve code readability and maintainability by eliminating unnecessary method calls
dmn validation : improve error message for unknownvariableerrorevent
removed unused import statements and added a new method ` isVacantIgnoring ` in multiple Java files to streamline code and improve readability by
changed the visibility of the ` finishRunningRecentsAnimation ` method from private to public and modified long press runnable execution to allow external access to the
added null checks for Node ID and improved edge type handling in ImportContainerImpl and ImporterGDF to enhance robustness by preventing NullPointerExceptions
[ flink - 11717 ] [ runtime ] fix npe in function api client
nifi - 11465 : flowfiles should use sessionfactory . createsession ( ) instead of sessionfactory . createsession ( ) to create a
refactor tile retrieval logic to use a loop for cores to improve code readability and maintainability by eliminating unnecessary null checks
added a check to skip copying content - length in RestTemplateCopyHeaderFilter and created a test for it in TestRestTemplateCopyHeaderFilter to
updated Java2TypeScriptTranslator to handle different literal types and improved test assertions in SyntaxTests to enhance type safety and ensure correct handling of literal values
updated channel bandwidth values from 20.0 to 16 in FilterFactory , ChannelizerViewer , and PolyphaseChannelManager classes to enhance filter functionality and improve
hbase - 16224 add - all - region - server - all - region - server - mode option to hregionserver .
[ hotfix ] [ cassandra ] remove unused node module from testcassandraconnector
added resetCursorPosition ( ) method call in KahaDBStore . java to ensure cursor position is reset before use
added minimum size constraints to CallDialog , OneToOneCallPanel , and updated frame dimensions in OneToOneCallPanel to ensure that the frame ' s
fix loss of state information during world gen
updated TestHTTPSamplersAgainstHttpMirrorServer to use static imports and changed access modifiers to static in TestHTTPSamplersAgain
added null checks for kerberosPrincipalEntity before removing it to avoid potential NullPointerExceptions when kerberosPrincipalEntity is null
removed the ` true ` parameter from the ` getTableSnapshot ` method call in ` StatsOptimizer . java ` to simplify the method call by removing unnecessary
apr : do n ' t throw exception if the poller fail to start .
update error message in AndroidGradleBuilder to include Monetization setup and paste the Base64 - encoded RSA public key into the licenseKey build
updated the method to retrieve the name of the child ' s name instead of the name in FileTranscodeVirtualFolder and removed the isInsideTrans
[ drools - 4071 ] add support for ` ` BOOT - INF . classes ' ' and ` ` BOOT - INF .
added an assumption to check for version 19 in CheckIndexTest . java to ensure tests are not executed on version 19
removed the context parameter from the assignTargetsForSplitScreen method in AbsSwipeUpHandler and RemoteTargetGluer classes to simplify target assignment logic and
refactor LeaderLatch class to improve code organization to enhance maintainability and readability of the code
added methods to initialize zk parameters in SolidityNodeHttpApiService to ensure proper initialization of zk parameters in the application
refactor transaction confidence handling to use a new method ` getDepthFuture ` in ` TransactionConfidence ` to improve code readability and maintainability by
added a new method ` createMediaRecorder ` to ` CodenameOneImplementation ` and renamed ` longtitude ` to ` longitude ` in `
set default platformName to " ios " in JavaSEPort . java to ensure platformName is initialized with " ios "
refactor PageEditClient to improve code organization to enhance maintainability and readability of the code
reformatted conditional statements in Graphics2D . java for consistency to improve readability and maintainability of the code
refactor CreateVisibleSignature class to improve code readability to enhance maintainability and facilitate future updates
added error handling for the ` nextOutgoingFrame ` method in ` AbstractExtension . java ` to improve robustness by handling potential exceptions during execution
replaced the use of ` Caller ` with ` AccessController ` for privileged access in ` ContextHandler . java ` to simplify the code and improve
added logic to retrieve and update the parent of feed categories in CategoryREST . java to ensure that the parent of all children of a given category is
updated the dialog title from " contrib " to " contrib . manager _ title . " in ContributionManagerDialog . java to improve clarity and consistency
added a vwap field to the Ticker class and updated its constructor to include it to enhance the ticker ' s functionality by allowing users to
added support for a no - widgets view in SearchAndRecommendationsScrollController and WidgetsFullSheet classes to enhance user experience by providing a more
add the rendergraph api to the worldrendererimpl , and add the rendergraph api to the rendergraph api .
added a color setting for the primary theme in NCFirebaseMessagingService to enhance the visual appearance of the primary theme
updated ShadowUsbManagerTest . java file to improve test coverage and maintainability
updated variable names in AbstractDifferenceRecommenderEvaluator , AverageAbsoluteDifferenceerEvaluator , RMSRecommenderEvaluator , and RMSRecommenderEvaluator to
added a call to update the selected configuration in Rocket . java to ensure the selected configuration is updated before use
updated the calculation of width and height in AndroidGraphics . java to ensure a minimum value of 1 to prevent potential errors in rendering
replaced instances of HashMap and HashMap with LinkedHashMap in multiple Java files to ensure consistent iteration order across the codebase
replaced ClosureManager with ClosurePool for closure handling in NativeClosureFactory . java to improve closure management by utilizing ClosurePool instead of ClosureManager
camel - 14284 : migrate routetest to junit5 and update test to use junit5 instead of junit4
added new WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java files to implement and test WebSocket functionality for ingress websocket
( chore ) camel - ds : clean up unused code and remove unused test
refactor authentication comparison logic into a separate method ` isAuthenticationsEssentiallyEqual ` to improve code readability and maintainability by encap
added a check to return false if the " jnr . ffi . ffi . ffi . compile . x86asm " system property
updated variable names from ` callNode . getType ( ) ` to ` callNodeType ` for consistency to improve code readability and maintainability by standard
added a new annotation ` @ Insecure ` to the ` MessageBuffer ` class and modified the constructor visibility in ` MessageBuffer . java ` to
added multiple Hive configuration variables to the HiveConf class to enhance configuration flexibility for various Hive configurations
initialize scopes , policies , and policies with new HashSet instances in ResourceSet . java and add null check in DefaultResourceSetService . java to ensure
updated the ` decrefOnClose ` array to be ` final ` and modified ` MultiReader ` constructor to accept an additional ` readerFinishedListeners
updated multiple Java files related to directory stream , Unix AsynchronousSocketChannel , Windows AsynchronousSocketChannelImpl , Windows AsynchronousSocketChannelImpl ,
[ java ] refactoring the test to make it easy to find the value from the webdriver
refactor Gson classes to use generics instead of $ Gson $ Types to improve type safety and enforce immutability of generics
changed return types of keySet and values methods from Set < Integer > to KeySet and Values in Int2IntHashMap to improve clarity and consistency in
added duration property and related getter / setter methods in FlipTransition . java to improve flexibility and maintainability of the FlipTransition class
removed logging for subsAreValidForStreaming to streamline the code by eliminating unnecessary logging
bump major and minor version from 8 to 9 and 10
replaced ` System . err . println ` with ` LowLevelLogUtil . log ` for warning messages related to multi - release JARs to
added ` Java15PostProcessor ` and ` Java16PostProcessor ` validators to ` ParserConfiguration ` and ` Java16Validator ` classes to enhance
updated background padding logic for replies in ExpansionViewHelper . java to handle cases where no replies are available
[ hotfix ] [ table - infra - v3 - 9 ] use callback instead of callback .
added metadata handling in SeedUrl , SeedResource , and SeedUrl classes to store and write metadata information to the seed URL to improve
added a null check for the declaration before creating a Pattern instance to avoid potential NullPointerExceptions when the declaration is null
refactor TestCoprocessorWhitelistMasterObserver class to improve code readability to enhance maintainability and facilitate future updates
update annotationactionvalidatormanager to use packagename instead of proxy . getconfig ( )
updated assertions in IterableTest . java to use ` Object ` instead of ` null ` and added a new test method in ` IterableContainsExactly
added stream methods to MapIterable , PrimitiveObjectMap , and PrimitiveObjectMap classes , and created corresponding tests in MapIterable and PrimitiveObjectMap to
clone the notifInfo object in DiagnosticCommandImpl . java to ensure the object is cloned before returning it
updated key comparison logic in AppW . java to use commandConstants . getString instead of commandConstants . getString to improve code readability and maintainability
refactor AEADBlockCipher class implementation to improve code readability and maintainability
added a method ` isVariableLocal ` to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap `
added null check and inverse retrieval for resource IDs in PackageResourceTable . java and changed default resource mode from best to legacy in Robolec
added a conditional check for ` ulSize ` and ` ulPos ` in ` TrueTypeFont . java ` to ensure that ` ulSize `
updated the ` SignPlugin ` and ` SignPluginConfiguration ` classes to use ` HttpMessageReader < ? > ` instead of ` MessageReader <
refactor Int2ObjectCache class for improved performance to enhance performance and maintainability of the code
added validation for MavenDeployer in StandardMavenAuthenticationProvider to ensure proper handling of MavenDeployer instances in the authentication process
refactor AudioNode class to improve code readability to enhance maintainability and facilitate future updates
added SSL context initialization and SSL context initialization in LinkyHandlerFactory and EnedisHttpApi to ensure proper SSL context initialization and improve error handling
added OracleSqlOperatorTable and OracleSqlOperatorTable to HiveFunctionRegistry and refactored name handling in HiveFunctionRegistry to improve code clarity and
( chore ) camel - xa - jmx : fix typo in mbean support
updated the parameter name from ` alias ` to ` possiblyFlavoredAlias ` and modified the return logic in ` getBuildTargetForAlias ` to
( chore ) camel - olingo2 : fix npe in olingo2consumer
added equivalent version retrieval and modified version retrieval logic in MetaStoreSchemaInfo . java to improve version retrieval efficiency and prevent potential null pointer exceptions
cloudstack - 10265 : do n ' t expunge expunge if the vm do n ' t have expunge
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should no longer be used in future development
updated method names and variable names for clarity in ONDashClockExtension and AlarmReceiver classes to improve code readability and maintainability by using a
updated GoogleAuthUserConfigTable to use " nvarchar / int4 / int4 / int4 / int4 / int4 / int4 /
replaced calls to ` commit ( ) ` with ` apply ( ) ` in multiple classes to improve code readability and maintainability by using a more
replaced ` TestIdleListener ` with ` TestIdleListener ` in ` StandardSession ` constructor and added a new ` TestIdleListener ` class to
[ hotfix ] [ bigquery ] fix test failure in bigqueryioit
added background resource and reset functionality in HotseatPredictionController and BubbleTextView to enhance the visual appearance of the icon in the BubbleTextView
[ hotfix ] fix typo in mondrianproperties . flushafterquery
[ nativeworker ] add abstracttestnativesystemqueries test for native system
updated LIMEExplanation to conditionally retrieve active features based on the presence of all outputs to ensure accurate retrieval of active features based on the presence of
added arguments to the ` AppleSimulatorController ` and ` InstallCommand ` classes and modified the ` AppleSimulatorController ` and ` InstallCommand ` to
replaced direct calls to ` getArea ( ) ` with a generic type ` GenericStyledArea < PS , SEG , S > ` to
added checks for available state in Lifecycle checks in ContainerBase and StandardContext classes to ensure proper management of lifecycle states based on available state
added a call to setClipToOutline ( true ) in QsbWidgetHostView to enhance the visual appearance of the QSB background
added flag conversion logic and logging in SQLManager , BlockTypeListFlag , BlockTypeListFlag , and PlotArea classes to improve flag conversion accuracy
do n ' t use gl _ depth _ function for floatingtextrenderer if it be not an occluded
rename libffi _ libffi _ libffi _ libffi _ libffi _ libffi _ libffi _ libffi _ libffi _ lib
refactor transaction propagation behavior handling in JdbcAggregationRepository to use a private variable to improve code readability and maintainability by encapsulating the
added support for L1Regularization and L2Regularization in the LayerValidation class to ensure proper handling of regularizations in the layer configuration
added exception handling to the readWrite and write methods in AbstractChecker . java to improve robustness by handling potential exceptions during reading and writing operations
changed the visibility of the colorStack variable from static to instance variable and updated its usage in GlyphLayout . java to improve encapsulation and
updated method calls from ` getMappedStatement ` to ` getMappedStatement ` and ` hasStatement ` to use ` true ` instead of ` false
updated the method call to convert the tradableIdentifier to lowercase to ensure consistent case handling across different currencies
updated assertions in ChannelStateTests to reflect changes in channel state values to ensure accurate validation of channel state values in tests
remove versionedhash from enginepayloadparam and use it in test .
set trigger price to an empty string in MutableOfferView . java to ensure trigger price is set to an empty string before proceeding
fix nullpointerexception in studentfeedbacksubmissioneditsaveaction . isregisteredstudent ( )
removed debug print statements from I18NPageController . java to clean up the code and improve readability
hbase - 16224 fix the bug that hstore . getstore ( ) do n ' t log the result if it ' s not
entitybeanintercept . getchangedproperties ( ) do n ' t throw exception if setchangedproperties ( ) return false .
added a boolean flag ` _ alwaysSaveUri ` and its getter / setter methods to the ` FormAuthenticator ` class to control the behavior of the
added methods ` nSetLayerType ` , ` nSetLayerPaint ` , and ` nSetLayerType ` to ` ShadowRenderNode `
replaced specific Java imports with wildcard imports and added accessibility checks in LWChoicePeer . java to improve code readability and maintainability by
removed redundant initialization of HashMap in StressProfile . java to streamline code for better readability and maintainability
replaced ` scala . collection . JavaConversions . asScalaIterable ` with ` collectionAsScalaIterable ` in multiple test wrapper classes to
fix nullpointerexception in mockservereventlog . sendrequest ( ) .
added a warning log for unable to load properties file in DefaultEnvironment . java to improve error handling for file loading failures
use try - with - resources for sessiondataset to avoid resource leak
added a condition to check if the nic supports multicast and is up in SetOutgoingIf . java to ensure proper handling of multicast support and up
updated the sqlCommand initialization to include a length parameter to ensure proper handling of command lengths
updated method calls to setLatestConsumeTime and setLatestConsumeTimeForEnergy in UnDelegateResourceActuator , BandwidthProcessor , and Energy
added a constructor to SessionManagementConfigurer to accept an InvalidSessionStrategy parameter to enhance flexibility in managing invalid session strategies
[ hotfix ] [ table - common ] improve error message in protobufannotationserializer
add a new test class ` MapAssert _ containsKeys _ Test ` to verify the behavior of ` containsKeys ` method in ` MapAssert `
added a new ` JDBC4TemporaryPreparedStatementMethods ` interface and modified the ` genclass ` method calls in ` JdbcProxyGenerator . java `
added a static method ` ensure ` to ` ServerWebSocketContainer ` and modified the ` start ` method to accept ` Handler ` instead of ` Context
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags . java ` to replace ` ImmutableMultimap ` with ` ImmutableListMultimap `
pdfbox - 4071 : remove unused type of getcurrentpoint ( ) from curvetoreplicateinitialpoint
refactored the initialization of the ` hooks ` array in ` MethodHook ` and replaced it with a static final ` EMPTY ` array in `
added a grantAccess flag to the MockAuthenticationManager constructor and modified the authentication return logic to conditionally deny access to enhance security by preventing unauthorized access
updated method signatures in JobListener , JobListenerSupport , CompositeJobListener , and related classes to accept JobExecution as a parameter to enhance flexibility in
added a condition to check if the file canExecute ( ) is true in SharedLibraryLoader . java to ensure that the file can be write only
added ` hasTimeSeriesQueryLanguage ( ) ` method to ` TimeSeriesQuery ` and ` TimeSeriesQueryOrBuilder ` classes to determine if the
do n ' t use sampleresult in saveservice . savesampleresult ( ) , use event instead .
added new constants for battery level , time offset , and profile name in BundleConstants . java and updated CustomUrlManager . java to utilize these
change the parameter type of applyrule from Hashtable to Map in SearchExpression . java to improve flexibility in handling different data types
rename ` ` widget ' ' to ` ` absolutescreenlocateable ' '
updated resize method in JoglGraphics and modified texture filtering in ProjectiveTextureTest to improve rendering accuracy and ensure proper texture rendering
changed the return type of setResourceToDelegate ( ) from void to File and updated the return type of setResourceToDelegate ( ) to ensure
camel - 14284 : camel - spring - boot : intercept from property component should resolve property placeholder
updated the condition from ` currentTime > = ` to ` currentTime > = ` in ` ActionScheduler . java ` and changed the expected attempt count in
updated dbg _ zip assignment to use " / tmp / ums _ dbg . zip " instead of " ums _ dbg .
make renderingdebugconfig visible to debug config binding .
add a resetgate ( ) method to blockgenericpipe so that the gate can be reset .
updated TestSupplementary . java to use Locale . getDefault ( ) for setting the default locale to ensure proper handling of locale settings during test execution
updated the color value for the Team constructor from 0.0 . 8 and 0.0 . 4 to 0.0 . 4 in Team . java to adjust the team color
changed the type of ` activeMatchedStates ` from ` Set ` to ` Collection ` and added logging for better tracking of matched states to improve performance
updated the condition to check if the annotation is null or empty to ensure that the method correctly handles cases where the annotation is null or empty
updated error handling in StorageResources . java and added exception logging in StoragePluginRegistryImpl . java to improve clarity of error messages and enhance error reporting
[ hotfix ] [ runtime ] use tocsvfile ( ) instead of print tocsvfile ( )
added null checks for ` note ` and ` noteTmp ` before accessing it in ` DetailFragment . java ` to prevent potential NullPointerException
added peakTasks variable and adjusted calculation logic in AssetManager . java to ensure peakTasks is correctly initialized and adjusted the calculation accordingly
simonstewart : enable native event for firefox on macos
added methods to retrieve score , fetch interval , and fetch interval in the Injector class to improve accuracy in fetching score , fetch interval , and
updated import statements from ` org . apache . commons . collections . ListUtils ` to ` org . apache . commons . collections4 . ListUtils
added a method ` isShareSchema ( ) ` to the ` CoreContainer ` class and created a corresponding test in ` TestCoreContainer ` to
updated size calculations to use ` sizeInBytes ( true ) ` instead of ` sizeInBytes ( ) ` across multiple classes to ensure consistent size
replaced assertEquals statements with assertNull for version1 _ 2 in VersioningTest . java to improve readability and maintainability of the test code
updated SQL query to include typtype in SQL queries and added a new test for not null domain columns in DatabaseMetaDataTest to ensure correct handling of
[ java ] do n ' t append new leadership term event if there be no follower .
removed the buildMediaType method from WebClientPlugin . java to simplify the code and improve readability
replaced occurrences of ` fillUsingLengthPrefix ` with ` fillAndGetIndex ` across multiple classes to standardize method naming conventions and improve clarity
added checks for compacted base files in AcidUtils and created a new test for compaction behavior in TestCleaner to ensure proper cleanup of compact
updated immutableStorageScheme and qualifierEncodingScheme assignments to use NON _ ENCODED _ QUALIFIERS instead of null to ensure proper handling
added new classes ` PojoProducersCustomized ` , ` RestProducersCutomized ` , and ` RestProducersCutomized
updated cache configuration keys from " cache " to CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve clarity and maintainability
do n ' t register aesgcmsivprotoserialization . register ( ) in aesgcmsivkeymanager .
added a new item " slabWood " to the OreDictionary with a replacement for the wooden slab to enhance the visual representation of the
refactor multiple session - related classes to improve code organization to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in the ` UndefinedSymbolsLinkerScript ` class to simplify the class
update version number to 3.2 . 2 and update version number to 3.2 . 2
hhh - 16464 - fix test failure on oracle
corrected the calculation of the draw method in HelloWorld . java to correct the positioning of the spriteBatch drawing to ensure accurate rendering of the
updated the x - coordinate calculation in PlayerFunctions . java and added a toString method in PlotId . java to improve accuracy of plot positioning and
added a deprecated static final version constant LUCENE _ 8 _ 5 _ 0 to indicate that the version is outdated and should no longer be
modified the formatting of the output message in closeSocket method to enhance the readability of the printed log message
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to verify SQL parsing and deparsing of signed
refactor dependency type handling in CoNLLUOutputter to use SemanticGraphCoreAnnotations instead of String to improve code readability and maintainability by
removed the ` NoSuchBuildTargetException ` and ` createForMissingBuildFile ` methods from ` NoSuchBuildTargetException ` and ` ParseContext ` classes to
replaced ` testFromMain ( ) ` with ` test ( ) ` in ` MyChild ( args ) . test ( ) . test ( )
changed the array size from ` Block . blocksList . length ` to ` 256 ` for ` configBlocks ` and ` loop iteration from ` Block
updated logging statements and improved version checks in BukkitMain . java and CraftBukkit . java to enhance code clarity and ensure compatibility with newer
updated SQL statement escaping logic in AbstractSQLChange and added a test for escaping PostgresOperators in AbstractSQLChangeTest to ensure proper handling of
added ` ofAll ` and ` withAll ` methods to ` MutableBagFactory ` , ` MutableBagFactoryImpl ` , and ` Bags
pdfbox - 4071 : add adoc escape code to buildnavandpdfbody , a suggest by valerybokov
updated the MqttBrokerConnection constructor to include a new parameter ' false ' to ensure proper configuration of the Mqtt broker connection
updated the retrieval of ChangeSet to use the root change log if it is null to improve robustness by preventing potential null pointer exceptions
[ hotfix ] [ runtime ] fix typo in plugin boot service
added database deletion functionality in HiveMetaStorePartitionSpecs . java and logging in TestObjectStore . java to improve database management and enhance debugging capabilities
added a new parameter " order _ currency " to the BithumbAuthenticated and BithumbAccountServiceRaw classes to allow users to specify order currency and
remove ssefluxwebfluxwebconfig , which be no longer need .
updated method checks from ` getReturnType ( ) . getFullyQualifiedName ( ) ` to ` getReturns ( ) . isVoid ( ) ` across multiple
updated YamlResource to use a new GET endpoint and added a method to list YAMLs based on its ID to enhance functionality by allowing users to retrieve
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to restrict access to the methods
refactor thread factory to use a lambda expression for improved readability to enhance code maintainability and reduce boilerplate
added unit tests for ` PersonWithAList ` and ` PersonWithAList ` classes and created a new ` PersonWithAList ` class
ggb - 271 fix bug in appw . syncappletpanelsize ( )
replaced toolbar visibility setting with a delayed execution in DrawerActivity to improve responsiveness by ensuring the toolbar is displayed after a delay
[ hotfix ] [ table - planner - blink ] do n ' t unpack the first page reader if overlap .
vm : do n ' t save password on vr if vm be not running .
added new fields ` usingOutputStream ` , ` isWriter ` , and ` isCharacterEncodingSet ` to the Response class to ensure proper handling of
added a warning check for assignment side effects in GroupDialog . java to ensure that assignment side effects are not ignored during execution
refactor JSON and JSONObjectConvertor classes to improve code readability and maintainability
corrected a typo in the conditional statement in FileUploadApiController . java to improve code readability and maintainability
refactor RegisteredServiceProperty and JwtTokenCipherSigningPublicKeyEndpoint to use JcaPEMWriter instead of EncodingUtils for JSON serialization to enhance
updated import statements and added a method to check mime types based on the operating system ' s operating system property to ensure proper handling of file systems and
update nettyconnection to use jzlib decoder and encoder instead of system . out
added a new method ` doesClassLoaderDescendFrom ` in ` Util . java ` and refactored conditional checks in ` MethodHandles . java
removed the ` doConnect ` parameter from the ` connect ` method in ` ChannelProvider ` and ` ProxyChannelProvider ` classes to streamline the
added a new test method ` testEmptyFinalColumn ` in ` TestCsvHeader . java ` and implemented a test for handling empty final columns in
added compass gravity and margin calculations to NearbyMapFragment to enhance user experience by allowing margin adjustments
added a new test method ` testInterpolation ` to ` GeoPathTest . java ` to verify the correctness of interpolation calculations in ` GeoPath
added exception handling to ` LeafFilterFactory ` , ` ParquetFilterPredicateConverter ` , and ` ParquetFilterPredicateConverter ` methods to improve
added language setting for current audio track in LibMediaInfoParser to ensure proper handling of video stream formats
[ microservice ] add warn log when microservice version be less than old version
replaced manual array copy operations with ` addAll ` and ` addAll ` methods in multiple array classes to improve code readability and maintainability by reducing redundancy
added a space before closing the connection in DataSourceProxy . java to ensure proper resource management and prevent potential memory leaks
added constructors to InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to accept a map of ClientRegistrations to enhance flexibility in client registration
added a ` resetUIState ` method to ` SchemaUpgradeHelper ` to reset the UI state to ensure the UI state is properly reset during the
added a boolean flag ` failedStep ` and modified conditional logic in ` JUnitReporter ` and corresponding tests in ` JUnitReporterTest ` to
add playerselector . playerselector . add playerselector . java to allow .
added Closeable interface implementation to the Selector class to ensure proper resource management and prevent potential memory leaks
added multiple connection pool factory and updated connection handling in MaxConcurrentStreamsTest . java to improve connection management and enhance test reliability
added multiple calls to stringType ( ) in CoreOptions . java to ensure proper handling of string types in the configuration
added null checks for character and parameter in HqlQueryRenderer and updated test configurations in EclipseLinkUserRepositoryFinderTests to ensure proper handling
updated HTTP status checks to use HttpStatus . NOT _ SET _ 000 instead of HttpStatus . NO _ CONTENT _ 204 to ensure proper handling of
pdfbox - 4071 : remove redundant null check , a suggest by valerybokov
[ hotfix ] [ test ] fix flaky test
refactor ParquetFormatPlugin and ParquetGroupScan to utilize a new method for expanding Parquet files and improve file selection handling to enhance
updated the ` isSuccess ` variable to true and modified the compilation mode handling in ` Jsr199Javac . java ` to ensure
added a BaseTableModelListener to manage table change events in DefaultSortedTableModel to enhance user experience by providing a listener for table changes
updated the condition to check for a maximum value of 65535 instead of a fixed value of 49152 to ensure that the server number does not exceed
added support for document provider authority in ` AuthenticatorActivity ` , ` AccountRemovalJob ` , and ` AccountRemovalJob ` to ensure compatibility with
removed the call to Log _ OC . startLogging ( getAppContext ( ) ) in MainApp . java to streamline logging process by
updated exception handling in FilterChainProxy to use ThrowableAnalyzer for better error management to ensure proper handling of RequestRejectedExceptions
updated the method calls in StringBuilder to use ' this . length ' instead of ' length ' to improve code clarity and maintainability by centralizing the
pdfbox - 4071 : throw an illegalargumentexception if the filter list be empty
add a new class ` TbStopWatch ` for managing stop and task time in the ` TbStopWatch ` class to provide a way
pdfbox - 4071 : fix typo in setinitialized ( )
mark several classes as deprecated and mark them as deprecated to indicate that these classes are outdated and should no longer be used in future development
set the context class loader to the current thread ' s class loader to ensure proper context class loading for the interpreter server
fix checkstyle violation in forgehooks . java
updated the minimum SDK version from P to O _ MR1 in ShadowRttCallTest and ShadowCall classes to ensure compatibility with the latest
updated method parameters and variable names from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to
add beandescriptor . getname ( ) and getelementdescriptor ( ) method to beandescriptor and beanpropertyassocmany
updated URLs from " wro / all . js " to " static / all . js " and added a new WroSassProvider
added a new test method ` showLatestTimeseriesTest ` to ` IoTDBMetadataFetchIT . java ` for verifying the latest time
updated configuration parameters from " appContextLocation " to " contextConfigLocation " across multiple files to improve clarity and consistency in naming conventions
updated exception handling in OCSPChecker to differentiate between CertPathValidatorException and CertPathValidatorException to improve error clarity and prevent potential ClassCastExceptions
add writeoutputsolutionenabled option to benchmarksconfig and ProblemBenchmarksConfig , and use it in ProblemBenchmarksConfig and ProblemBenchmark classes to
update gapic - generator - java version to 2.1 . 0 and set default maxinboundmessagesize to max int
added a new test class ` Issue _ 815 ` to verify the behavior of ` sliceSize ` method in ` SortedTableMap ` to ensure
added shapeless recipe to the game registry in BuildCraftTransport . java to enhance the game ' s functionality by allowing a slime ball to be
[ mahout - 164 ] fix index out of bound exception in sequentialaccesssensevector . get ( )
added Shulker and FixedMetadata handling in BukkitMain , EntitySpawnListener , and EntitySpawnListener classes to improve entity management for Shulker
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide a way to
added methods to retrieve maximum directory name length and file name length in IOHelper and MultiKahaDBPersistenceAdapter to improve code readability and
added a check for the presence of a tag in the UpToTagChangeSetFilter to prevent errors when no tags are found in Liquibase
updated generic type and replaced LinkedList with ArrayList in multiple Java files to improve type specificity and enhance code readability
refactor BrokerRoutingManager class to improve code readability to enhance maintainability and facilitate future updates
updated color values for volume , up , and paint in CandlestickRenderer . java to improve visual consistency and visual consistency
replaced ` FrameLayout . LayoutParams ` with ` LayoutParams ` in ` InsettableFrameLayout . java ` and added layout parameters in ` Inset
added a ` duration ( ) ` parameter to the ` finishEpochMillis ` method in ` BuildTargetDurationListener ` and updated test cases accordingly to
updated HsqlDbMigrationIntegrationTest , MySqlDbMigrationIntegrationTest , and SqlServerDbMigrationIntegrationTest to use System . getProperties instead of Spring ' s @ Profile
added a null check for the user before processing claims to avoid potential NullPointerExceptions when user is null
added advicewith support to camel - test - base on user forum issue .
use non - blocking set instead of concurrentset to avoid concurrentmodificationexception
api : listpublicipaddresses api : add sourcenetworkid parameter to listpublicipaddresses api
added unit tests for ignoring battery optimizations in ShadowPowerManagerTest . java and implemented the isIgnoringBatteryOptimizations method in ShadowPowerManager .
updated the VERSION property retrieval in Jetty . java to use __ buildProperties to ensure compatibility with the latest Jetty version
added unit tests for verifying invocations in NumberOfInvocationsInOrderVerifier to ensure correct handling of VerifcationInOrder failures
tregex : do n ' t call regexresult . getnomatchinstance ( ) if there be no match instance
added " - foreground " parameter to the startProfile method call in NewProfileExtensionConnection . java to enable foreground mode for profile creation
replaced ` executor ` with ` executorLauncher ` in ` MiniSolrCloudCluster . java ` to improve resource management by using ` IOUtils . closeQuietly `
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` in ` MetadataIndexer .
updated log message to use getName ( ) instead of getFile ( ) in CodeEditorView . java and added null checks in EditorTextActionWindow .
updated error message formatting in ClassFileReader and JdepsTask classes to improve clarity and debugging by providing more context about skipped entries
added a LuceneStorage instance and updated document storage methods in Fetcher and FetcherMain classes to improve link management and streamline document storage management
updated BubbleBarController to include an additional BubbleBarBubble parameter and modified related methods to improveBubbleBubble handling by allowing a null Bubble
[ hotfix ] [ runtime ] make scheduledroutepolicy . execute ( ) throw an illegalargumentexception
updated method signatures to use ` buildRpcExtJson ` instead of ` buildRpcExt ` for consistency to improve code readability and maintainability by
[ java ] add an optimalmulticastdelaygenerator to the mediadriver so that it can be use by the mediadriver .
updated Gson initialization to use JsonObject and added client secret properties to enhance JSON serialization and deserialization of client information
added a check to ensure the field amount is non - zero before adding it to limitOrders and setAveragePrice to avoid potential null pointer exceptions
removed the ` rawExecutionReports ( ) ` method from ` BinanceStreamingMarketDataService . java ` to simplify the code and improve readability
added a fail method to LdapTimeoutTest to throw a RuntimeException and modified the timing logic for timeout tests to improve error handling and provide clearer
add more logging when user dictionary do n ' t exist .
updated password handling logic in AmbariServerConfigurationHandler and modified test assertions in RootServiceComponentConfigurationResourceProviderTest to ensure proper handling of password
added parsing logic to ` ParseSegment ` and implemented a new method ` isParsed ` in ` SegmentChecker ` to check if a segment already parsed
[ hotfix ] [ yarn ] add a configuration option for application attempt failure validity interval in yarn cluster
log a warning if the h2 driver be not find in the classpath .
hbase - 16457 tablesnapshotinputformat . scanner . readtype should be configurable for snapshot - based inputformat
added fixed height and width parameters to LoginInstanceRequest to enhance user experience by allowing dynamic adjustment of login options
added a corner radius parameter to several methods in ActivityControlHelper , WindowTransformSwipeHandler , LauncherLayoutListener , and LauncherLayoutListener to
updated the COMMANDS _ TO _ REMOVE array to include additional sorting conditions and added a filter for jobtracker addresses in the filterSet to
refactor connection retry logic in TxnHandler to use a loop for better error handling to improve code readability and maintainability by reducing duplication
[ hotfix ] [ table - planner - blink ] add txncheckreserve ( ) and txnofflinereserve ( )
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class to allow for dynamic initialization of the ` strings ` array
updated DELETE ROWS operation from " DELETE ROWS " to " DELETE ROWS SERVER SELECT " in CostBasedDecisionIT and
added retry logic for SocketTimeoutException and SocketException in BaseServiceException and corresponding tests in BaseServiceExceptionTest to ensure proper handling of insufficient data written
added a new parameter ` rapidInstallTypes ` to various classes and updated related methods to include it to enhance functionality by allowing configuration of rapid install types
updated the seed pattern format in SortTest . java to allow for a wildcard character to enhance flexibility in seed generation
refactor MultimapSubject to use Factory methods for better clarity and consistency to improve code readability and maintainability by using more descriptive names
updated the return value for the hotseat display size from ` getRealDisplaySize ( ) ` to ` getRealDisplaySize ( ) . y
added a boolean flag ` transmux ` to the ` Transformer ` and ` TransformerInternal ` classes and updated the ` TransformerInternal ` and ` Transformer
added localization logic for picker strings in Picker . java to ensure consistent formatting of picker values
camel - 234 : camel - cxfrs : fix npe in camel - cxt - cxf and camel - cxf
hhh - 16464 - PostgreSQL81dialect should handle LockAcquisitionException and LOCK NOT AVAILABLE
updated query ID handling in TestJdbcDriver2 . java and modified imports in HiveStatement . java and HiveStatement . java to improve test reliability
[ beam - 10224 ] add usetimersinpardo test for unbounded pcollections
updated the HTML structure for the filename in GpsSimpleViewFragment . java to improve code readability and maintainability
[ java ] remove leadershiptermid from joinlogasfollowup
added a private variable ` exchange ` and updated its usage in ` HttpSender . java ` to ensure proper initialization of the ` exchange ` variable and
[ hotfix ] [ test ] migrate checkpointcoordinatortest to junit 5
renamed the method ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` to improve clarity and consistency
added null checks for the tree before processing markers in Recipe , Markers , and SearchResult classes to improve robustness by preventing potential NullPointerExceptions
make xwpfdefaultrunstyle . getfontsizeasfloat ( ) and xwpfdefaultrunstyle . getfontsizeasdecimal (
use array instead of single email in addressbookdocomoresultparser .
refactor dependency exclusion handling in RawMavenResolver to use a set to improve code readability and maintainability by reducing duplication
refactor DSXAdapters , DSXPairInfo , DSXAdapters , DSXPairInfo , and DSXBaseService classes to
refactor multiple test classes for consistency and clarity to improve maintainability and readability of the codebase
[ drools - 90 ] do n ' t fail incremental build if kiemodule pOM be invalid
updated the initialization of the ` copy ` variable and added a check for ` sobj . has ( k ) ` before invoking ` defineOwnProperty
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code organization and maintainability
refactor hostfielddesc to use compilerasserts . neverpartofcompilation ( ) instead of findstaticgetter ( ) .
added a method parameter for CompletableFuture in DefaultNullnessAnnotations . java to enable handling of CompletableFuture completion stages in the database
updated the calculation of the freeze check point from 9000 to 10000 in PlaybackController . java to increase the freeze check time from 9000 to
added imports for Whitebox and modified internal state setting in AbstractCommonPowerMockRunner and PowerMockRunner to streamline state management and improve clarity in
updated the method call from ` typeCode ` to ` realType ( ) ` in ` TCUtility . unmarshalIn ` to use ` real
updated formatting logic for method invocations in TabsAndIndentsVisitor . java to improve readability and maintainability of the code
replaced ` LuceneTestCase ` with ` TestCase ` in ` TestSingleTokenTokenFilter . java ` to ensure compatibility with the latest JUnit framework framework
updated the class name from ' newColumn ' to ' wrappedText ' in HtmlProcessInformationsReport . java to improve clarity and consistency in the
added ExecutionContext handling in JdbcStepExecutionDao , MapStepExecutionDao , and SimpleJobRepository classes to improve execution context management and ensure proper execution
added a condition to check if a new media folder is hidden before adding a child to ensure that the folder is only added when the configuration is not
replaced UnsupportedOperationException with IllegalArgumentException for setWidget and setFirstWidget and setSecondWidget in SplitPane . java to improve error handling and ensure proper
added handling for Parameterized types in RemoveUnusedImports . java to ensure correct type resolution for Parameterized types in the code
updated debug logging to use ` this . getVersion ( ) ` instead of ` getModInfos ( ) . get ( 0 ) . getVersion ( )
changed the logger variable from instance to static in TicketGrantingTicketImpl . java to ensure the logger is initialized as static instead of calling the
updated the SQL string to use a new version of the SNAPPY datatype from 81 + 12 to 81 + 12 to ensure compatibility with the latest
added a method ` isValue ` to ` AttrData ` to check if a value is a string and updated exception handling in ` Converter ` to
added a new method ` isLocaleUSInternationalPC ` and a new method ` isCharModifierKeyInUSInternationalPC ` in `
[ java ] add publicationconnectiontimeout environment variable to spysimulatedconnectiontest
added a check to return false if the request URI starts with " / css " and " / favicon " in GTVGFilter . java
added a test assertion to verify that the device is rooted before executing the shell command to ensure that the test correctly verifies the device ' s root
refactor : remove oracleansisqlrowslimiter
added MultiMap import and modified assertions in TestSimpleBodyHandler and TestVertxTLSBuilder to increase the expected lengths for secure transport protocols
updated Java library paths in DiffRuleKeysScriptIntegrationTest . java to use the correct Java library versions to ensure compatibility with the latest Java library changes
added a boolean variable ` mIsDismissHapticRunning ` and modified the conditional check in ` TaskViewTouchController . java ` to ensure
add projectile support for exploder and exploder
removed unused imports and overridden getItemId method in SymbolInputAdapter . java to improve code clarity and maintainability
updated the ` getBook ` method to use ` @ QueryParam ` for query parameters instead of ` limit _ bids ` and ` limit _ asks `
added logic to replace quotes with quotes in StaxConverterTest . java to ensure proper handling of single quotes in StaxConverterTest
[ hotfix ] [ driver ] add configmap name to zookeeperleaderelectiondriver . tostring ( )
refactor SqlSessionFactoryBean to improve code organization to enhance maintainability and readability of the code
refactor TripleInvoker to handle null method descriptors more gracefully to improve code readability and prevent potential NullPointerExceptions
replaced error logging with throwing a runtime exception in PolygonRegionLoader . java to improve error handling by throwing an exception instead of throwing an exception
added a method ` isStarted ( ) ` to the ` Deadline ` class and implemented timer registration logic in ` RawStoreProxy ` to ensure
added handling for ClosedChannelException in NettyRequestExecutor to improve error reporting for closed channels
added null check for genres before setting text to avoid potential NullPointerExceptions when retrieving genres
[ hotfix ] [ checkpoint ] fix checkpointcoordinator reset call in region recovery
add support for prefab with collection of mapped container
[ flink - 26464 ] [ wal ] fix npe in old unpinned memtables
added a new test method ` testRetrySameHostOnCallbackFailure ` in ` HttpTest . java ` and a corresponding test in ` HttpTest
fix a typo in the package - info . java file .
added a new test class SQLServerEscapeQuestionCharacterTest for SQL server escape functionality to ensure proper functionality of SQL server escape functionality in the application
camel - 14297 : camel - jooby - bean - fix nullpointerexception in camel - jooby - bean
replaced synchronized block with Util . wait in JavaFXSEPort . java to simplify code and improve readability
updated package names from ` com . kenai . jaffl ` to ` com . kenai . jaffl . provider `
do n ' t throw an illegalargumentexception if the image object be not a bitmap or bitmap
removed the appName parameter from the configure methods in InputRC and related classes to simplify the code by eliminating the appName parameter
add test for ignore dependencies in CatalogInstallTest and UninstallTest classes to ensure proper handling of ignored dependencies in the installer
[ hotfix ] [ test ] use ` ` -- headless = chrome ' ' instead of ` ` setheadless ' '
added intern ( ) method call to the value assignment in VersionedValue . java to ensure proper initialization of the value
added support for " MOVE " status in the recv status check to enhance connection handling to support both INSERT and DELETE status
updated ISO8601 _ PERIOD _ DAY _ MONTH _ DAY _ YEAR2 _ TIME and ISO8601 _ PERIOD _ MICROS
replaced the import of ` org . apache . curator . shaded . com ` with ` com . google . common . collect . Lists `
[ hotfix ] [ hsbuffercontext ] make startspilling ( ) return false if the buffer be release .
added a check for the ADMIN _ VISIT _ UNTRUSTED permission in the Visit . java file to ensure that untrusted
do n ' t try to register jabber service if no jabber service be register
added support for curly braces in BasicURLNormalizer and created a test for it in TestBasicURLNormalizer to ensure proper handling of curly
changed method visibility from protected to private for addRemoteAnimations , unregisterRemoteAnimations , and unregisterRemoteTransitions in QuickstepTransitionManager .
added a check for zero and compare the clock rate in EncodingConfiguration . java to ensure accurate comparison of clock rate values
added a method to retrieve the project path and updated project generators to return a set of generated project paths to enhance project path management and improve the handling of generated project data
updated the logic for setting zero digit in HostLocaleProviderAdapterImpl . java to check for non - negative calendar IDs before setting zero digit values
added a new file ` MSwingUtilities . java ` that utilizes the ` MSwingUtilities ` class to provide a utility for scaling image
camel - 12265 : camel - mail - use async producer instead of defaultproducer to make it easy to use async producer .
added @ RefreshScope annotations to CasCoreWebConfiguration , PasswordlessAuthenticationConfiguration , and CasAuthenticationConfiguration classes to enable refreshing of configuration
added unit test base on user forum issue
added two new Java files , Main . java , ScriptRenderer . java , and ScriptRenderer . java , to implement script rendering functionality in the schema
updated condition in Request . java and added a new test case in RequestTest . java to ensure proper handling of form - encoded content types and validate
added checks for glyph width and height in BitmapFont , Group , FlickScrollPane , and SelectBox classes to ensure proper handling of child views
replaced ` reportFailure ` with ` runCloseHooks ` in ` DeploymentManager . java ` and added a new test in ` DeploymentTest . java
fix lexiconrecipemappings . tostring ( ) to work with non - ignore item .
[ hotfix ] [ test ] increase timeout in backoff test
updated import statements and modified conditional logic in LoincHandler . java to improve code readability and maintainability by using a wildcard import
use classloader . getresource ( ) . getresource ( ) instead of a hardcoded url .
added a new file ` FieldUtils . java ` for utility methods to retrieve accessor , mutator , protected field names , and protected field values to facilitate
removed the speculative type check from the assertion in DeferredAttr . java and added a new DoubleStaticImport class in DoubleStaticImport . java to simplify
updated layout inflation to use ` workspace _ screen ` instead of ` workspace _ custom _ content ` and added default padding for widgets to improve layout consistency
add a method to update the XMPP account settings with a save last account in XabberAccountManager . java to ensure that the XMPP
added a new method ` setvar ` to set variable values in the ` LineReader ` class to provide users with options for setting variable values in
add onanimatingtame event for catentity . onanimatingtaltaltaltame ( )
[ hotfix ] [ table - common ] [ table - planner - blink ] improve error message for null value
pdfbox - 4071 : add a test to verify that the correct number of font be contain when create signature .
added a method to set the application ' s mode to ensure the app ' s mode is correctly set based on the current application ' s mode
added support for optional Docker file paths in ImageFromDockerfile and created a new DockerfileBuildTest class to enhance flexibility in handling build arguments and
added a null check before assigning threadInfos [ threadId ] to avoid potential NullPointerExceptions when threadId is null
updated the conditional check in PieChartRenderer to use Utils . FLOAT _ EPSILON instead of a hardcoded value to improve accuracy in rendering
[ hotfix ] [ checkpoint ] add log to channelstatepersister , singleinputgate , singleinputgate , and channelstatepersister
added new table definitions for various table types in Schema . java to enhance schema functionality for improved functionality
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum constructors and updated FuzzyQuery and FuzzyTermEnum to use it to
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java ` to improve clarity
fix layoutinsteadofencoder to not set the immediateflush property of the enclosing appender .
added AMQPAutoConfiguration and KafkaAutoConfiguration classes to the AutoConfigureAfter annotation to support additional auto - configuration options for AMQP and Kafka
added null check for ` comp ` in ` JLayer . java ` and created a new test class ` bug6875716 . java `
replaced the import of ` avro . shaded . com . google . common . base . Function ` with ` com . google . common . base
refactor BciBlockMapping and GraphBuilderPhase to improve block management and exception dispatch handling to enhance code readability and maintainability by reducing redundancy
added legacyRenderer property and its getter / setter methods to Label . java to improve code readability and maintainability
replaced the method ` intToFourBytes ` with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and ` AbstractJ
added null check for mObserver in NavigationModeFeatureFlag . java to avoid potential NullPointerException when mObserver is null
changed the generic type of the ` thenComparing ` method from ` Comparable < ? super U > ` to ` Comparator < T > `
refactor DocIdSet class to improve code structure to enhance maintainability and readability of the code
updated the end time setting in UserRuleAnomalyFunction to use currentKey bucketMillis instead of null to ensure accurate time representation for anoma
added error handling for parsing Integer values in VisualScoreTagTest . java to ensure that NumberFormatException is thrown when parsing integer values
reformatted code in MockFactory . java for improved readability to enhance maintainability and maintainability of the code
added a new ` OriginalFormat ` class and implemented the ` format ` method in ` ConverterWithEnumFormat . java ` to provide a way to
replaced hardcoded string " yyyy / MM / " with a constant PATTERN _ YYYY _ MM in FileStorageUtils . java
refactor JAWTRenderer class for improved performance to enhance performance and maintainability of the code
camel - 14265 : camel - aws2 - lambda : camel - aws2 - lambda should not autowire the lambda client .
cloudstack - 10297 : add validation for mac address in uservms to ensure that a vm address can be generated for a non -
removed the check for " Authorization " header name in ProxyServlet . java to streamline authorization handling by eliminating unnecessary checks
replace ` submit ` method with ` execute ` method in ` TraceableExecutorService . java ` to improve command execution efficiency by using ` execute ` instead
added ` getDetails ( ) ` methods to ` Authentication ` , ` AbstractAuthenticationToken ` , ` UsernamePasswordAuthenticationToken ` , and ` Authentication
updated the random number generation logic in SolrTestCaseJ4 . java to ensure randomness by avoiding unnecessary randomness
rename ` ` appenddot ( ) ' ' to ` ` endsentence ( ) ' '
updated formatForConsole method to accept a Locale parameter in multiple classes to ensure consistent formatting across different locales
refactor GroovyParserVisitor to use wildcard imports and improve argument parsing logic to enhance code readability and maintainability by using wildcard imports
added bounds checking for bottomInsetPx and rightInsetPx in Border . java to ensure that bottomInsetPx and rightInsetPx
refactor GestureState initialization and introduce a default state constant in TouchInteractionService to improve code clarity and maintainability by centralizing gesture state management
replaced Joda - Time ' s DateTime class with Java ' s Instant and DateTimeFormatter for version formatting to improve code readability and maintainability by
refactor openblas and openblas _ nolapack classes to improve code organization and maintainability
[ java ] use close ( ) instead of use ioutils . close ( ) in torrentsstorage
added synchronized keyword to initTxnMgr method to ensure thread safety during initialization
updated timeout values in AbstractDistribZkTestBase and adjusted timeout values in AbstractFullDistribZkTestBase and AbstractFullDistribZk
added a new file ` SearchResults . java ` that implements search functionality for retrieving results from a specified Hits to provide a way to retrieve and
refactor threadcpurefresher to use threadcpuview . isrunning ( ) instead of threadcpuview . isrunning ( )
added null check and initialization for primitivesTemp in BytecodeNode . java to ensure primitivesTemp is not null before accessing its value
added new versions " 8.4 . 0 - cfs " and " LUCENE _ 8 _ 11 _ 0 " to TestBackwards
updated feature flags for " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD in FeatureFlags . java
added a new API endpoint for retrieving tenant pools in InstanceResource . java to provide access to tenant pools for the current instance
refactor TopFieldCollector to utilize a new method ` canEarlyTerminateOnDocId ` and ` canTerminateOnPrefix ` to
updated the method to use ` isToString ( ) ` instead of ` isAbstract ( ) ` in ` InlineBytecodeGenerator . java ` to
added logging statements to CxxCompileStep , CxxPreprocessStep , and CxxPreprocessStep classes to improve traceability and traceability
fix stringutil . removecharacter ( string , char ) to return a string instead of an empty string .
fix ( config ) : export metadata service protocol on server side ( # 11919 )
( chore ) camel - core : add datatransformer interface to provide a way to transform expression and parameters
changed the type of the ` objval ` array from ` Collection < ? > ` to ` Collection < Number [ ] > ` in ` Distribution
refactor conditional statements in FormatStringChecker . java for clarity to improve readability and maintainability of the code
updated SolrCore initialization in ElectionContext . java to ensure proper initialization of the SolrCore instance
refactor ITestDbTxnManager class to improve transaction management to enhance performance and maintainability of transaction management
refactor database connection handling to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
added a new method ` remoteCodeFirstPojo _ testMapModel ` to ` CodeFirstPojoClient ` and modified ` CodeFirstPojo ` to
pdfbox - 4071 : do n ' t try to create an xobject if it be null
refactor selection listener handling in ScaleDialog to improve code readability and maintainability to enhance code clarity and maintainability by reducing duplication
rename the ` updatePlayerStepStatus ` method to ` tickBelt ` and update its usage in ` FabricCommonInitializer ` to improve clarity
pdfbox - 4071 : do n ' t throw ioexception if no appearance stream be create
replaced SortedSet with LinkedHashSet in ExecuteSqlCommandStep . java to maintain insertion order for keys
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 in CancelEventTimer . java to
updated preload preload value from " libdc1394 - 22 " to " libdc1394 - 25 " in dc1394 . java to
added a conditional check for agentSupport before setting all constructors to public in MainMockTransformer . java and created unit tests for mock static methods in
pdfbox - 4071 : do n ' t attempt to decrypt a string / dictionary if it ' s a string or array , a suggest by
add a method to set the window title in the xtoolkit to make it easy to set the window title .
updated depth calculation logic in XRSurfaceData . java to conditionally set transparency based on pixel size to ensure correct depth calculation based on pixel size
added error handling for reading and throwing an IOException in OkHttpDataSource . java to improve error reporting by providing more informative error messages when reading an
added a static exit method to TopLogging and refactored exit logic in TopThreadGroup to simplify error handling and improve code readability
modified the calculation of the ' start ' variable in NativeRegExp . java to ensure proper handling of global regexps based on the current index
[ planner - 468 ] ignore flaky test in optaplanner daemonsolvertest
corrected a typo in the variable name from lowIndex to highIndex to improve code readability and maintainability
added a method to clean and delete entries without feeds in DatabaseCleaner and FeedEntryDAO to ensure that entries without feeds are cleaned up
changed the return type of the appendToLabel method from void to AtomicCounter and added a return statement to ensure the method returns the current instance instead of
[ java ] rename busyspinidlestrategy to noopidlestrategy to make it easy to use .
added handling for NOT _ MODIFIED HTTP status in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure proper handling of non - modified
renamed methods and variables related to ` constantValueInertSpliceInstrumentListener ` and ` constantValueInertToolEvalNodeFactory ` to
added a method to paint the tab area in SynthTabbedPaneUI to ensure the tab area is correctly displayed in the UI
refactor Kraken market data retrieval methods to accept variable arguments instead of specific types to enhance flexibility and improve error handling for input validation
[ java ] add getfileseparator ( ) and isAbsolute ( ) method to fileendpoint and remotefileendpoint
added a new method ` build ` to ` JavaProvenance ` and updated imports in ` JavaProvenance ` and ` MavenProject
added trace logging for registered Hive GenericUDFs and non - deterministic UDFs in HiveFunctionRegistry . java to improve traceability and debugging
updated the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to correct the iteration order for better performance
[ hotfix ] [ table - common ] throw unknowncfnameexception instead of unserializablecfnameexception for deleted columnfamily
added a check to ensure the output file is writable before executing the test to improve error reporting for non - writable output files
added package information retrieval and error handling in LauncherModel . java to ensure that getPackInfo fails when application info is not enabled
cloudstack - 14420 : do n ' t throw cloudexception if database upgrade fails
modified exception handling in AbstractFaultTolerantChunkOrientedTasklet and FaultTolerantChunkOrientedTaskletTests to
replaced ` startsWith ` with ` regionMatches ` for string comparisons in ` LineReaderImpl . java ` to improve code readability and maintainability by
added global data table descriptors and updated return logic in Recipe . java to enhance code readability and maintainability by utilizing a unified list for
added Overview handling in TaplTestsTaskbar to dismiss all tasks based on the launcher ' s overview status
update system vm template in database upgrade check ( # 41400to41500 )
removed unnecessary null checks for the connection variable in LdapClient . java to simplify the code and improve readability
refactor index validation logic in SequenceAction . java to use a variable for clarity to improve code readability and maintainability
make sure we do n ' t have a keyspace that do n ' t exist .
added a check to skip processing for synthetic fields in ReflectUtils to prevent processing of synthetic fields in the ReflectUtils class
added LoggerProvider class and integrated it into ApplicationController to enable logging functionality in the application
changed ImmutableMap . Builder < String , String > to ImmutableMap . Builder < String , Object > and changed the type of ` value ` from ` String
added a warning for deprecated spring context configurations in SpringFactory . java and updated test cases in SpringFactoryTest . java to provide clearer error
added a deepStart method to the Startables class that returns a CompletableFuture < Void > to enhance the functionality of the ` deepStart `
removed the deprecated ` reservePrimitiveExtensionArray ( ) ` method from ` Shape ` and its implementation in ` ShapeImpl ` to clean up the code
fix the laser table not be able to load it in the correct way .
modified the condition for checking object names in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
set expire messages period to zero in MemoryLimitTest . java to ensure proper handling of expire messages during test execution
updated condition checks for null and empty string checks in RequestHandlers . java to improve code readability and maintainability
updated the way the logger name is retrieved by replacing ' - ' with ' . ' in ProxyServlet . java to ensure proper formatting of the log
replaced hardcoded string " PYTHONPATH " with a constant for better readability and maintainability to enhance code readability and maintainability by
updated frame size calculations and error handling in DirectAudioDevice , Toolkit , and DirectAudioDevice classes to improve robustness and error handling for audio data
added null check for enums before writing to ElasticSearchStringLookupService to avoid potential NullPointerExceptions when enums are null
updated the error message format in CommitLogReader . java to include a space character to improve clarity of error messages for better debugging
added a policy assignment in WebSocketSession to ensure the WebSocket session uses the correct policy from the container scope
simplified the logic for determining the initialization of static fields of the namespace in Java2TypeScriptTranslator . java to improve code readability and maintainability
updated the webroot parameter from " UI _ DIR " to " webroot " in UserService . java to ensure the correct UI directory is
( chore ) camel - consumer : migrate camel - core to junit5 ( # 14424 )
[ netbeans - 2424 ] remove monitorvmutil . isattachable from profiler . plugin . profiler # isattachable .
replaced calls to ` printHeaderObject ` with ` createHeader ` across multiple formatter classes to improve code readability and maintainability by centralizing header
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to simplify import statements and provide a
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure proper handling of buffer state during processing
added null checks for mOriginalForeground and mOriginalBackground before setting foreground and background to avoid potential NullPointerExceptions when mOriginalForeground and mOriginal
updated the condition for decExp in FloatingDecimal . java and added a new ToString class . java with a main method to ensure proper validation of
updated the property type check in PropertyDescriptor . java and added a new test class Test7189112 . java to ensure proper handling of property
removed the maxVersion variable and its usage from the getVersions method to simplify the code and improve readability
updated the origin setting logic in NettyRequestFactory to conditionally set the scheme based on the URI ' s secure status to ensure proper handling of
updated visibility and translation logic in RecentsView and TaskView classes to use alpha values for previousTask and nextTask to improve UI responsiveness
updated assertion messages to include field names in ORCRecordReader . java for consistency to improve readability and maintainability of the code
remove hls and bipbop sample from DemoUtil . java
updated import statements and removed unused imports in PersistenceProvider . java to improve code readability and maintainability
updated log statements in ExecRPCInvoker , WritableRpcEngine , and RPCEngine classes to use the correct package for logging to ensure compatibility with the latest
added diagnostic listener and a test for union and fixed fields in TestSpecificCompiler . java to ensure correct handling of multiple Java files with - Xlint
modified WebSocketEndpoint to return early and added a new test for session closure to ensure that the session is closed only when the user is logged
[ hotfix ] [ network ] increase the number of random delay in the state network service .
updated the mappings for OpenSymphony Group from " - " to " - " in XmlConfigurationProvider . java to ensure compatibility with the latest
added a conditional check for stream stop behavior in WebCamInputPanel . java to ensure that the stream is only stopped when the stream is stopped
changed the return type of ` chartData ` from ` List < BittrexChartData > ` to ` ArrayList < BittrexChartData
[ geot - 4252 ] add example of gml example for feature collection .
replaced ` substream ( 200 ) ` method with ` skip ( 200 ) ` method in ` TargetType58 . java ` to simplify the method
hhh - 10956 - compositeidfkgeneratedvalueidentitytest do n ' t throw npe if the identifier be null
rename ` ` findfulltext ' ' action to ` ` downloadfulltext ' '
refactor URI registration logic in URIRegisterExecutorSubscriber and ShenyuClientRegisterDefaultServiceImpl to use a list for host and port to improve
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code readability and maintainability
added a check for blank OSDb hash before retrieving the API result to ensure that the OSDB hash is not blank to avoid potential NullPointerExceptions
added token transfer functionality and validation in RuntimeImpl and MUtil classes to enhance token transfer functionality in the application
change the current directory of the ftp endpoint to the current directory if it ' s stepwise
updated the default configuration parameter from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration . java ` to ensure
added a check for ` JoinResult . MATCH ` in ` MapJoinOperator . java ` and modified conditions in ` HybridHashTableContainer
added a ` endPoint ` parameter to the ` HTTPSPDYAsyncEndPoint ` constructor and updated related methods to include it to enhance functionality by
added a new intent extra for the " id " parameter in multiple adapter classes to ensure that the " id " parameter is included in the intent
refactor disconnect logic in HttpURLConnection to use a separate disconnectWeb method to improve code readability and maintainability by encapsulating proxy disconnect
changed the type of ` _ numChildren ` from ` int ` to ` AtomicInteger ` and updated the return value in ` TraceContext ` to improve
corrected the spelling of " jwt " in multiple Java files to improve code readability and maintainability
disable the test due to NullPointerException in ValueTypeTests . java to ensure proper handling of NullPointerExceptions
resolve split - packages : move everything from kie - api under org . kie . api instead of org . kie . api
replace instances of ` PredicateType . IN ` with ` PredicateType . NOT _ IN ` across multiple predicate classes to ensure consistency in predicate usage across
updated exception handling in FileActivity , Preferences , ReceiveExternalFilesActivity , and ReceiveExternalFilesActivity to use Exception instead of AccountNotFoundException to improve
added null check for witnessService before validation to prevent potential NullPointerException when witnessService is null
updated the method of retrieving the taggedCol string to use getExprString ( ) to improve code readability and maintainability by using a consistent method
added a check to ensure the item ' s Javadoc presence before setting it to avoid unnecessary setting when it is not present
rename ` holderMethod ` and ` holderKlass ` to ` holderMetadata ` and add new classes ` RedefineInterfaceCall ` and ` Redefine
replaced ` revalidate ( ) ` calls with ` revalidateWithAnimationSafety ( ) ` in ` Tabs . java ` to improve animation handling by
[ hotfix ] [ table - common ] return unregisteredmetricsgroup instead of unsupportedoperationexception .
updated the calculation of the x and y coordinates in Polygon . java to improve the accuracy of the polygon ' s positioning
updated cache creation method to cast the cache name to a Configuration object to improve type safety and prevent potential ClassCastExceptions
added a length check for stringConstant in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java file with a
updated ShadowCookieManager . java file to improve cookie management functionality
added a configuration option to disallow dropping external tables in Hive to ensure that external tables are not dropped during deletion to avoid backward compatibility issues
added a semicolon to the conditional statement in Stage . java and adjusted the draw method in ProgressBar . java to improve code readability and
add getplatformbyteorder ( ) and getplatformbyteorder ( ) method to platformcapability capability
updated the property name from ` namedpipesocketprovider . timeout ` to ` windowsprovider . timeout ` in ` WindowsClientProviderStrategy . java `
updated the ` initWebViewLogin ` method to accept a ` String baseURL ` parameter and modified the ` initWebViewLogin ` method to accept a
updated error message to specify the JDBC Type parameter instead of the output parameterArray . Paramter to improve clarity of the error message for better debugging
updated date formatting in AuditEventsMvcEndpoint . java and added a new test case in AuditEventsMvcEndpointTests . java to ensure proper handling of
rename ` ExponentialTimer ` and ` ExponentialTimerBeanInfo ` classes to ` PreciseThroughputTimer ` to improve clarity and
added functionality to remove and delete soft bodies in SoftBodyTest . java to ensure proper cleanup of soft bodies in the test environment
[ hotfix ] [ table - planner - blink ] make interface public
[ zeppelin - 1074 ] fix log message in zeppelinhubclient , zeppelinwebsocket , and zeppelin
add a test case to show that the jingle do n ' t work with redundant namespace .
fix a nullpointerexception when create a mine block in the artefactcollector .
added support for HTTP 2 request headers in BareResponseImpl and refactored HelidonConnectionHandler to use HttpToHttp2ConnectionHandler
updated uuid comparison from ` getTrusted ( ) ` and ` getMembers ( ) ` to ` contains ( ) ` and ` contains ( ) `
updated delimiters in SimpleReport . java from ' + ' to ' + ' in addition to ' + ' and ' % 2 ' to improve
removed the option ` - XDignore . symbol . file ` from ` JavapFileManager ` and added a new class ` T686
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed the ` TickerDemo . java ` file to streamline the code
refactored the switch statement for better readability and added null checks for contract addresses to improve error handling and provide clearer feedback on contract creation
ggb - 273d : do n ' t create input3d for non - linux app
added an @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
do n ' t throw parserexception in scripttagpayloadreader . parsepayload ( )
renamed the method ` getRepositoryFactoryClassName ` to ` getRepositoryFactoryBeanClassName ` to improve clarity and consistency in naming conventions
changed return types of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to enhance type safety and
replaced instances of ` this . x ` and ` this . y ` with ` IOSGLES20 . x ` and ` IOSGL
deleted ` UploadPathActivity . java ` and removed ` UploadPathActivity . java ` from ` ComponentsModule . java ` to streamline the
updated return statements in SimpleTextFieldsReader to handle DOCS _ ONLY index options to ensure accurate term frequency calculations based on index options
fix : fix a bug where implicit constructor be not set correctly .
added a Database parameter to populateValidateNullableIfNeeded and populateValidateForeignKeyIfNeeded methods to ensure that validation only occurs on Oracle databases
refactor Database class to improve code readability to enhance maintainability and facilitate future updates
refactor SpringApplicationBuilder to improve code organization to enhance maintainability and readability of the application builder
removed the ` indexOptions ` variable from ` DefaultIndexingChain . java ` and updated the iterator assignment in ` PointInSetQuery . java
removed substring method from rawName in SchematicHandler . java to improve code readability and maintainability
added support for handling specific collections in AbstractCollectionAssert and updated return statements in CollectionAssert _ isUnmodifiable _ Test to ensure proper handling of
changed the ` Option ` enum from static to instance in ` ProcessExecutor . java ` to allow access to the ` Option ` enum from outside the
added twitlonger button functionality to the Compose and ComposeActivity classes to improve user experience by providing clearer feedback when the button is
replaced the ` toggleKeepInSync ( ) ` method with a ` CheckBox ` method in ` FileDetailFragment ` and removed the ` toggleKeep
replaced DatatypeConverter . parseBase64Binary with Base64 . getMimeDecoder . decode in ImageUtil . java and added a new ImageUtil
added two new files , ControllerCounter . java and DBCallback . java , to the document analytics package to provide a centralized interface for mongodb
changed the parameter type of the deleteTicket method from ` String ` to ` final String ` in ` EhCacheTicketRegistry . java ` to
added a new file ` FlywayMigrationRunner . java ` that defines a class path XML application context to facilitate the migration of Flyway
replaced calls to ` isEmpty ( ) ` with ` size ` in ` HashMap . java ` and added a new class ` OverrideIsEmpty ` with
updated the version number from 0.9 . 0 to 0.9 . 0 in TsFileDBConstant . java to reflect the latest features and improvements
added @ Nullable annotation to the modify method signature in CompressionCodec and ZlibCodec classes to improve code safety by preventing null pointer exceptions
added null - check for the main class value and a new test case for missing main manifest attribute to improve error handling and ensure proper feedback when the main class is not defined in the JAR
[ hotfix ] [ test ] fix typo in test class name
[ gr - 16464 ] fix hotspot profiling info for graal node count .
xssfsheet : remove cloneable from cellcopypolicy so that it do n ' t need to be clone .
added a method to reset the icon load result in FloatingIconView and updated its usage in Launcher and FloatingIconView classes to ensure
update formFieldValuesToCaps to use getRawValueCharSequences ( ) instead of getValues ( ) to ensure proper handling of raw value characters
added orientation checks and updated item decoration logic in IconRecentsView . java to ensure proper item decoration based on device orientation
deleted the AddAdapter . java file to the class is no longer needed for the current functionality
fix npe in nonstatic lifter when there be no constructor
removed null checks for ` selOp . getColumnExprMap ( ) ` and simplified conditional logic in ` OpTraitsRulesProcFactory . java `
refactor message handling in TestLogWatcher to use a looper method to improve readability and maintainability of the code
added a print statement to Java2TypeScriptTranslator . java to provide clearer output for type scripts
updated the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to reflect the latest version
added a check to set SPRING _ AOP _ PROXY _ TARGET _ CLASS to " true " in TraceEnvironmentPostProcessor to
removed the singletonLock boolean from TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary logic
add example for ` ` responseclasscallback ' ' , ` ` forward ' ' , and ` ` forward ' '
refactor ` writeFile ` method to include an ` appendToFile ` parameter and modify its implementation to enhance functionality by allowing appending to files
added a condition to check if Maven settings are not null and modified the return logic in MavenRepositoryMirror to ensure that mirrors are only returned when
added a ` name ` parameter to ` BuildRuleSourcePath ` , ` PathSourcePath ` , and ` SourcePathTypeCoercer
updated serviceRedirectUri comparison logic in OAuth20CallbackAuthorizeEndpointController . java and added a new test case in OAuth20CallbackAuthorizeEndpointControllerTests
replaced instances of ` EMPTY _ ANNOTATIONS _ ARRAY ` with ` AnnotationParser . toArray ( ) ` across multiple classes to simplify code by
updated method calls from ` getBadgedDrawableForUser ` to ` getBadgedIconForUser ` and ` getBadgedLabelForUser
updated the default line separator text in GlobalConfiguration to include LF or CRLF to improve user experience by providing clearer guidance on default line separator
change configurationmanagerutils . isextendinginterface to isderivedclass ( ) in configurationmanagerutils . isderivedinterface ( )
added sanitizeinput ( ) method to basecontroller to sanitize input
chore ( regen ) : update java and python dependency ( # 244 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to throw an ` IOException ` and modified the ` buildFileNamesCanBeDifferent
refactor CountersReader class implementation to improve code readability and maintainability
updated methods in AllAppsRecyclerView , UserEventDispatcher , DeepShortcutsContainer , DeepShortcutsContainer , and DeepShortcutsContainer to simplify
hbase - 16464 - deprecate config keys in ByteBuffAllocator and add a warning log for deprecated configurations to improve code clarity and
[ nativeworker ] fix ` ` not null ' ' exception in native window test
added a method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameters based on their presence to improve type handling and ensure correct parameter types are
refactor TestFSTs class implementation to improve code readability and maintainability
refactored label positioning and text height methods in CanvasDrawable , DrawInputBox , and LaTeXTextRenderer classes to improve label
hbase - 16464 update the initial size of the region split policy to account for the initial split size .
updated the loading state handling in LauncherClings . java to ensure proper loading state management and loading behavior in the launcher
removed redundant initialization of keys and updatesAt in ManagedSelector . java to streamline code and improve readability
added support for excluded data sources in SpringDataSourceBeanPostProcessor to enhance datasource management by allowing customization of excluded data sources
added a call to storeUndoInfo ( ) in TableValuesView . java and removed a null check for cb in TableValuesPanel . java to
[ flink - 18254 ] [ kinesis ] fix awsclientexception in kinesisproxy
[ hotfix ] [ device ] fix velbus sensor for channel masking .
updated warning messages and enabled tests in LocalCacheSelectorCode , BoundedLocalCache , and BoundedLocalCacheTest to improve clarity and control over
added a test for illegal database names in IoTDBSessionSimpleIT and modified database deletion logic in PartialPath to ensure proper handling of illegal
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are reset before processing
rename ` desiredWorkspaceLeftRightOriginalPx ` to ` desiredWorkspaceHorizontalMarginOriginalPx ` and update margin calculations accordingly to improve clarity and
reformatted code for consistency and readability in CharTokenizer . java to improve code readability and maintainability
chore ( deps ) : update gapic - generator - java version to 2.1 . 0 and update gax - java version to 2.16 .
api : rename xenservernetworklabel to xenservernetworklabel
updated libgdx version numbers from " 1.7 . 5 " to " 1.7 . 6 " to reflect the latest features and improvements in the library version
removed the metricNames set and its getter method from SolrCore to streamline the code and improve maintainability
refactor path handling in MavenManifestFactory to use Paths . fromUrl instead of URI . create to improve code readability and maintainability by
replaced direct calls to System . getProperty ( " os . name " ) with a static final boolean variable IS _ MAC to improve code readability and
refactor JdbcAggregationRepository to improve code readability to enhance maintainability and facilitate future updates
added clear and addAll methods to slotList in Frame . java to ensure slotList is cleared and added to the slotList
set m _ predCount to - 1 in PredicatedNodeTest . java to initialize m _ predCount to - 1 to ensure proper handling of
added imports and overridden the mergeProperties method in ConfigurationSpringInitializer . java to utilize properties from the configuration instance to improve configuration management and ensure
updated the ` setupLogging ` method to use ` org . slf4j . Logger ` instead of ` org . slf4j . Logger `
replaced instances of HashMap with LinkedHashMap in multiple classes to maintain insertion order in the order of operations
added a check to determine the superclass of the jdbcHandlerMap in TypeHandlerRegistry . java to ensure the correct superclass is used for type handling
added debug logging for various items in Hibernate , JpaItemWriter , FlatFileItemWriter , and JmsItemWriter classes to improve trace
updated the way language ranges are processed in LocaleUtils . java to ensure correct parsing of language ranges based on user input
updated the handler context execution in VertxHttp2Handler and modified the startServer method in Http2Test to improve context management and ensure proper context
add cache for xssfevaluationworkbook . gettable ( )
updated schema text detail type checks from VERBOSE to BASIC in BaseSchemaTextFormatter . java to ensure compatibility with the new schema text format
replaced ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to align with the latest MongoDB
replaced ` HashSet ` with ` LinkedHashSet ` for ` roots ` and ` leaves ` sets in ` SparkWork . java ` to ensure consistent iteration order
[ flink - 18135 ] [ table - planner ] fix the bug that join operator tree be not properly cloned .
added a null check for the clientId before returning it in DynamicRegistrationClientConfigurationService and updated JsonFileRegisteredClientService to handle null getClientId
clear achievementlist . field _ 187981 _ e and clear the achievementlist field _ 187981 _ e . clear ( )
initialize userName , productName , and productVersion fields to empty strings in MutableDatabaseInfo , MutableJdbcDriverInfo , and MutableJdbcDriverInfo classes
updated references from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in ` QuickSharingPermissionsBottomSheet
added LongBuffer support for reading long data in ByteBuffersDataInput . java to improve memory management and error handling for long data operations
replaced ` FileTime . from ` with ` FileTime . from ` and ` toFileTime ` methods in ` UnixFileAttributes . java `
added a new file TestNoEagerReclaimOfHumongousRegions . java to test the garbage collection behavior of humongous references
added logic to hide the search bar in the AllAppsContainerView based on user preferences to enhance user experience by controlling the visibility of the search
updated the method call from ` router ( ) ` to ` routes ( ) . get ( ) ` in ` EnvRouterFeature . java ` to
added a null check for ` cur ` and ` next ` in ` LineChartRenderer . java ` to prevent potential NullPointerExceptions during rendering
added a new ` ReloadPageAction ` class to handle the " Reload Page " action to enhance user experience by allowing users to navigate to
change log level from info to warn for non - existent entries in SQLManager . java to improve logging granularity by using a more
update minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest security features and improvements
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that the configuration type does not have a selected version
use ServiceLoader instead of FactoryRegistry in GeoServerExtensions . java to improve performance by utilizing a more efficient ServiceLoader implementation
added a finalize method to the HiveHBaseTableInputFormat class to ensure proper resource management and prevent memory leaks
added a ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` , ` JdbcViewImpl ` , and ` HiveViewImpl ` classes
updated XML features to use generics instead of empty maps in multiple handler classes to enhance type safety and improve code readability by using generics
replaced ` jdbCommand . waitForPrompt ( ) . waitForPrompt ( ) ` with ` jdb . contToExit ( 1 ) ` to
added a ` getType ` method to ` ShadowContentResolver ` and a corresponding test in ` ContentResolverTest ` to ensure that the ` getType ` method
[ hotfix ] [ runtime ] fix typo in expressionthreadpoolmanager
updated the default HTTP port from " port " to " vertx . httpPort " in HttpTestBase . java to ensure the correct port is used for
replaced ` addCaptureListener ` with ` addListener ` in ` buttonTable . addListener ` to improve code readability and maintainability
updated the default batch size from 10 to 3 in NewSessionQueueOptions . java to optimize batch size based on available processors
added a try - catch block around the establishResourceManagerConnection method call to handle potential exceptions to improve error handling and logging for resource manager connection failures
initialize classFile to null and update exception handling in LambdaRewriter . java to improve error handling and ensure proper instantiation of LambdaExpressionFallback
updated error message format in ProgressBar . java to include min and max parameters to improve clarity of error messages for better debugging
updated method signatures to include the owner parameter in DefaultStateMachine , StateMachine , and State classes to improve message handling accuracy and clarity in state management
added new classes Cursor , Database , Row , and Display for database operations to provide a structured way to manage database operations within the com . codename
refactor assertion classes for improved clarity to enhance maintainability and readability of the assertion framework
add setbeanid ( ) method to entitybean . setbeanid ( object id , object id )
updated the XML file templater transformation to use the correct XSL file descriptor to ensure the correct XML template is used for adding to the site descriptor
refactor requestMatcher initialization to use a list of RequestMatchers to improve code readability and maintainability by using a dedicated matcher list
added hashCode ( ) and equals ( ) methods to ContactResource class to ensure proper hashing and comparison of ContactResource instances
refactored the abstractprocessor , abstracthttp11processor , abstractprocessor , abstractprocessor , abstractprocessor , abstracthttp11processor and abstractprocessor
updated log messages to clarify that the saved Persistable can be read again and improved error logging to enhance clarity of log messages for better debugging and
added tearDown method to TestJdbcDataSource and TestIndexSearcher classes to ensure proper resource management and prevent potential memory leaks
updated method calls in SyntaxTests . java for consistency and clarity to improve code readability and maintainability
refactor ConnectionModel and ModeledConnection classes to improve code readability and maintainability
tika - 147 : remove temporaryresources from parserdecorator , use fallbackparser instead
do n ' t try to load cpw . mods . fml and net . minecraft . client . dedicated . server . fml . client . fml
removed unused parameters from multiple classes to improve code readability and maintainability
updated the parameter name from " swap " to " rename " in TestCoreAdminApis . java and modified the CoreApiMapping . java to
added a new test method ` testJsxComment ` in ` JsLexerJsxTest ` and modified formatting in ` DumpingVisitor `
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality in the application
added exit code handling for missing Buck configuration in BuildEndToEndTest and CxxEndTest to improve error reporting for missing buck configurations
added memory limit checks for the operating system in TestStringBufferAndBuilderGrowth . java to ensure accurate memory management during test execution
updated MapToLocalDateConverter to use a custom ConversionService instead of ConversionService to improve code clarity and maintainability by centralizing conversion service usage
added success variable to HiveMetaStoreClient . java to enable success tracking for the HiveMetaStoreClient
updated conditional check from ` = = ` to ` equals ( " * " ) . equals ( " * " ) ` in ` ResourceReferenceInfo
updated condition checks to include " amp . twimg . com / v / " alongside " amp . twimg . com / v / " in
mark the AreaReference class as deprecated to indicate that the class should no longer be used in future development
refactor ElementType and Target classes for improved clarity to enhance code readability and maintainability
added assertions for reference kind checks in MemberName . java to ensure correct handling of static and abstract references in the code
changed the default value of ` submitKeyUpdates ` from " false " to " true " and added synchronization to the ` runChange ` method to
updated conditional check for mouse event type in EditNodeTextField . java to improve code readability and maintainability
camel - 14297 : camel - bean - add support for static method in static method . thanks to john for the patch .
[ java ] fix typo in javadoc .
reformatted exception handling in AgentRunnerTest . java for improved readability to enhance code readability and maintainability
added ` getDescription ( ) ` method implementations across multiple classes to provide clearer descriptions for Maven project property changes to enhance clarity and usability
refactor the way active groups are added to the faces list in ObjLoader . java to improve code readability and maintainability by reducing redundancy
refactor ProcessEngine class to improve code structure to enhance maintainability and readability of the code
[ javassist ] replace reentrantlock . lock with lock . lock .
added maven packaging parameter to getBomReference methods in PrintMavenAsCycloneDxBom and PrintMavenAsCycloneD
updated back method call to use evt . getComponent ( ) instead of evt . getComponent ( ) to ensure the correct component is used for back navigation
simplified the certificate verification logic in SASLAuthentication . java to improve code readability and maintainability
updated nullability annotations in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to use generics instead of nullable types to enhance type safety and
updated configuration retrieval methods to use getConf ( ) instead of NutchConf . get ( ) calls to improve code readability and maintainability by
do n ' t remove the board pane from the sheet assembly , but do n ' t remove it .
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to provide access to the ` sessionId ` variable
added null checks for setTimeInterval and edge . getTimeInterval ( ) in ImportContainerImpl . java to prevent potential NullPointerExceptions when timeInterval is
updated command syntax for server port command in MockServerContainer . java to improve code readability and maintainability
updated error logging to include the exception message instead of a string concatenation to improve clarity of error messages for better debugging
replace robotshonoringpolicy with crawlmetadata in dispositionprocessor
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
camel - 14284 : fix test failure on window due to path separator issue
added imports for ByteArrayInputStream and AudioInputStream , and implemented alternativePath method in ExpectNewDemo . java to provide a way to access the alternative
updated the initialization method in LogEntryParseTester to use getFirstFilter ( ) instead of a direct call to input . init ( ) to ensure the
[ java ] add protectiondomain parameter to bufferalignmentagent
added dispose method to WaterRipples to ensure proper resource management and prevent memory leaks
added a configuration option to disable semi - join optimizations and operations on external tables in Hive to enhance performance by avoiding unnecessary semi - join optimizations
updated the description of the Authorization header from ` basicAuthorization ` to ` requesting public keys ` in ` TokenKeyEndpointDocs . java ` to
removed the FLAG _ SHOW _ WALLPAPER flag from the WindowManager ' s setWallpaperOffsets method and adjusted the scroll
updated return values in SybaseASADatabase , SequenceSnapshotGenerator , CreateSequenceGenerator , and CreateSequenceGenerator to handle SybaseASADatabase
added conditional checks for auto - commit behavior in PutSQL . java and implemented a test for commit on cleanup in TestPutSQL . java to ensure
added directory creation checks and error handling in SnapPuller . java and corresponding tests in TestReplicationHandler . java to ensure proper directory creation and
updated the app target ID from " id : launcher " to " launcher : launcher " in AppEventProducer . java to clarify the purpose of the
refactor framer methods to include an output parameter for better clarity to improve code readability and maintainability by using more descriptive parameter names
refactor constructor parameters to remove unnecessary parameters in multiple classes to improve code readability and maintainability
updated the documentation and default delimiters for the ` GenericUDFStringToMap ` class to provide clearer instructions for users parsing text into key - value pairs
updated PlainFormatter to use ChronoUnit instead of a static constant in PlainFormatter . java to improve readability and maintainability of the code
replaced TIMEOUT _ MS with RETRY _ CLOSE _ TIMEOUT _ MS constant and added close method to AgentRunner . java to improve timeout handling
hhh - 16464 - fix classloadingstrategyhelper to use reflection instead of reflection
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
updated debug log message from Closing to New proto event file to reflect the new proto event file format
added JUnit @ Ignore annotation to SamplingNamingTest . java to temporarily disable the test that produces at least one sample result
corrected a typo in the IllegalArgumentException message from " then " to " rows and columns must be greater than zero . " to improve clarity
make wagoncART more robust by use featurevaluevalue ( ) instead of featurevalue ( ) .
added sorting functionality for BoundSheetRecord records in XLS2CSVmra and BoundSheetRecord classes to ensure the correct order of bound sheet records
replace avgImpulse calculations with startThrust and endThrust calculations in ThrustCurveMotor . java to improve accuracy and accuracy
update NiftyJmeDisplay to initialize inputSystemJme with inputManager instead of inputSystemJme to ensure proper initialization of inputSystemJme
added a check for the needHashCodeField ( ) method before setting the hashCode field in UniverseBuilder . java to ensure that the hashCode field is
remove deprecate method from block . getmesh ( )
corrected the spelling of " localKeytabPath " and " remoteKeytabPrincipal " in YarnTaskManagerRunner . java to improve
added a new option for EMPTY _ WORD _ OPTIONS and modified matcher logic in LineReader and LineReaderImpl to enhance flexibility in handling empty
added writeCommitLog parameter to pushViewReplicaUpdates method call to ensure proper handling of commit logging during view replica updates
added default button ID handling in CaptureActivity , PreferencesActivity , and URIResultHandler classes to improve user experience by allowing easy access to the default button
added a new test method ` testBatching ` to ` JoinedTableTest . java ` to verify batching behavior to ensure proper handling of
added exception handling for EntityExistsException in JpaPersistenceService to improve error logging for duplicate timestamps
deprecated the ` -- format ` option in ` CucumberOptions ` and updated its usage in ` RuntimeOptions ` and ` RunCukesBy
removed the save ( ) method from PMS . java to streamline the code by eliminating unnecessary method calls
simplified the condition for hiding the keyboard in ExtendedEditText . java to improve code readability and maintainability
updated the calculation of ` newCapacity ` in ` AbstractStringBuilder . java ` and added a new class ` Capacity . java ` with a test
replaced ` goHome ( ) ` method with ` onNoteSaved ( noteTmp ) ` method in ` DetailFragment . java ` to improve
[ xwpf ] add endnote support to xwpfdocument . getendnotes ( )
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent in DefaultAuthenticationManager and updated test method in CasEventsReportEndpointTests to include client
added a test method ` testVersion ` to ` BridjOGRDataStoreTest . java ` to verify the version of the Bridj
added a new file ` Lifecycle . java ` to handle network error events to implement functionality for managing network errors in the system
updated the ` addURLToDownload ` method to use ` getDACookie ( ) ` instead of ` HashMap < String , String > ` to
removed unused imports from BodyTubeShapes . java and RocketFigure . java to streamline code and improve readability
added support for resizing and modular rendering in PJOGL . java to enhance rendering flexibility by allowing dynamic scaling of textures based on
add setinitialvalues ( ) method to setcreateadditionalsettingsfields ( ) and setcreateparams . setinitialvalues ( )
replaced ` PackedInts . FormatAndBits ` with ` BlockPackedWriter . BlockPackedWriter . java ` and replaced hardcoded values
change defaultstatusroutebuilder to use originatingtype instead of originatingtype .
removed unnecessary imports and streamlined data handling in GoAwayTest . java to simplify code and improve readability
added support for FluentPropertyBean in ReflectionUtils and created a corresponding test in EasyRandomTest to ensure proper property setting for FluentSetterBean instances
replaced ` ListenableFuture < ? > ` with ` ListenableFuture < HttpResponse > ` in ` BlockingHttpEndpoint ` and ` HttpEndpoint ` to
refactor file sorting tests to use a new ` prepareFolder ` method instead of ` noop = true ` to improve code readability and maintainability
updated print statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity by using a more descript
add writeimagescalinginformation option to rtfdocumentsettings , and set outputtablerowdefinitions for msword and xp
added a check for the aggregate function name before adding it to the columns in TSServiceImpl . java to ensure that the aggregate function name is
updated test classes to extend ` WithNestedTests ` instead of ` LuceneTestCase ` to extend ` WithNestedTests ` instead of ` LuceneTestCase `
added functionality to select the XCapEnableBox based on the registration ' s XCapEnable status to ensure that the XCap server URI is displayed
added a new constant ` STRUTS _ HANDLE _ EXCEPTION ` and modified error handling logic in ` Dispatcher . java ` to enhance error
added stopEditing methods to CodenameOneImplementation , Display , TextArea , and AndroidImplementation classes to manage text editing state to improve user experience by preventing
nifi - 11497 : fix npe in controlrate when group attribute be null
add option to always open preset for new component
do n ' t try to send a message to the client if an error occur .
added a check for MS Windows OS type in HTMLDataFlavorTest . java to ensure the test is executed only on non - Windows platforms
added SQL _ SERVER _ SNAPSHOT to the SERIALIZABLE connection and updated the transaction isolation level to include SQL _ SERVER _
replaced the put method with a loop that offers an offer for newRecids and added a check for threadFailedException to ensure proper resource management and prevent
replace jrecompat . getInstance ( ) . jarfilenewinstance ( ) with new JarFile ( ) . jarfile . open _ read ( )
added null check for getCommandClass in RegisteredServiceSimpleFormController . java to prevent potential NullPointerExceptions when getCommandClass is null
[ hotfix ] [ disk ] change disk failure policy from best effort to ignore .
removed the ` public ` access modifier from the ` rip ` and ` update ` methods in ` RipStatusHandler ` classes to enhance encaps
[ java ] do n ' t use InetAddresses . isInetAddress ( ) in peerdiscoveryagent ( )
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner . java to clean up the code and improve readability
updated import statements in PinotSegmentRebalancer . java to include ClusterDataCache and modified computePartitionAssignment method to include ClusterDataCache to
[ java ] remove deletecontainer and add autoremove option to allow auto - removal of container .
refactor DefaultSeleneseCommand to use static final constants and improve command parsing logic to enhance readability and maintainability of the code
added multiple attempts rule to CreateGlossaryTests to enhance test reliability by allowing multiple attempts
use components . COMPONENTS _ SCHEMAS _ REF instead of allOfRef . getName ( ) in ModelResolver . java to
replaced the ` deleted ` variable with a ` source ` variable in ` EntityDeletedEvent ` and updated related methods in ` IdentityZoneEndpointsMockMvc
added support for the " gop " format in FormatConfiguration and updated relevant imports in DLNAMediaInfoParser and LibMediaInfoParser
added a new file ` TestProfileReturnTypePrinting . java ` containing a class ` TestProfileReturnTypePrinting ` that tests return type printing functionality
added locking mechanism for config retrieval in ParseConfigUtils . java to ensure thread safety during configuration refresh operations
refactor IntermediateResultsBlock handling in MinMaxValueBasedSelectionOrderByCombineOperator to use AcquireReleaseColumnsSegmentOperator instead of IntermediateResults
simonstewart : remove @ ignore annotation from firefoxprofiletest . java
updated return statements in HasAndroidDeviceDetails . java to specify density and bounds for display density and navigation bars to improve clarity and usability of the
do n ' t add a bug to the project stats if it be null .
fix issue with disabled background color in importpanel
removed multiple redundant @ Override annotations from CacheControlImpl . java to improve code clarity and maintainability
added logic to check if a date is empty in ScheduledAction and implemented a test for weekly actions without a weekday set to ensure proper handling of
replaced ` uploadButton ` with ` menu _ menu _ upload _ single ` in ` ShareActivity . java ` to improve user experience by providing a
refactor multiple message - related classes to improve code organization to enhance maintainability and readability of the codebase
added loadMetaData method implementations in MeXBTExchange , RippleExchange , and MeXBTExchange classes to ensure proper loading of metadata from
added JSON serialization for Writable objects in CrawlDbReader to enhance data serialization capabilities for Writable objects
remove unused testerrequest from testjaspicbasicauthenticator
added DiscoveryService configurationPid to the @ Component annotation in MDNSDiscoveryService . java to enable the discovery process for the discovery service
added a null check for messageItem before calling scrollToPositionWithOffset to prevent potential NullPointerException when messageItem is null
fix issue with bp test and the security manager . ( # 12568 )
removed redundant assertions for DATANODE and NAMENODE roles in RoleCommandOrderTest . java to streamline the test by eliminating unnecessary dependencies
added a new method ` dedupWithTableInfo ( ) ` to the ` restoreLocalInfoFromTableInfo ( ) ` method to ensure
corrected formatting in multiple Java files for consistency to improve code readability and maintain consistency
added translation and scaling functionality to BitmapFontTest . java to enhance rendering performance and improve rendering performance
[ hotfix ] [ python ] fix bug in streamphysicalpythongroupwindowaggregate
[ java ] remove pending echo from the gossiper and server
added a method ` getUnreachableTokenOwners ( ) ` to ` Gossiper ` and updated references in ` StorageProxy ` to
[ geot - 4252 ] do n ' t change multiplication in x ^ 2 , x ^ 2 , x ^ 3 , x ^
refactor content type handling in FormAuthenticator and added getter and setter methods in SavedRequest to improve code robustness by ensuring content type is set
replaced static variables ` _ display ` and ` _ config ` with ` private static final ` and initialized ` display ` and ` localEnv ` to
refactor RecommenderJob , RecommenderJob , and AbstractJob classes to improve code organization and maintainability
replace ` Object ` with ` ReentrantReadWriteLock ` for the ` metaReadLock ` and ` WriteLock ` classes to improve thread safety and maintainability of the
added a test for reading identity providers using Zones in the IdentityProviderEndpointsMockMvcTests class to ensure correct handling of zone - specific identity providers
updated the scheduleJob method to use a new ExpireJob and added null check for timestamp in PointInTimeTrigger to ensure proper job scheduling and
removed unused import of Service in SendTicketGrantingTicketActionTests . java to streamline code by eliminating unnecessary dependencies
add version to rebalance push . fix # 119
added ` getDetachedMkDirMode ` property and corresponding getter methods across multiple configuration classes to provide a mechanism for retrieving the detached MK
[ java ] add the ability to restart follower when there be no follower .
updated default label pattern from " [ authors3 ] [ year ] [ year ] [ year ] [ year ] to ` [ auth ] [ year
replaced direct calls to ` getLd ( ) . getLd ( ) . getParseTimeDeps ( ) ` with ` CxxPlatform
added null checks and dispose method for the oAuthService in GoogleCloudAPI . java and GoogleTTSService . java to ensure proper initialization and
camel - 14297 : camel - file - consume - done - file : : target - filename should not be a dynamic done file name .
added a new boolean field ` reopenReaders ` to ` SolrConfig ` and modified the conditional check in ` SolrCore ` to ensure that the
[ hotfix ] [ runtime ] add dialect attribute to mapwriter .
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to provide functionality for
added a dup method to the ResultInfo class and created a new test class for primitive types in PrimitiveTypeInBoundForMethodRefTest to enhance
refactored the ` Condition ` class to an interface and simplified the ` WidgetSearchCondition ` and ` RequestPinItemTest ` classes to simplify
replaced ` TermQuery ` with ` ConstantScoreQuery ` in ` TestFacetsCollector . java ` to improve performance by using ` MatchAllDocs
removed unused imports from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability
updated the ` providesUploadController ` method to use ` direct _ nearby _ upload _ prefs ` instead of ` context ` and added a new method
added support for SYSDUMMY1 and SYSDUMMY1 modes in the parser and Mode classes to ensure proper handling of dummy
updated logging statements in TraceGatewayEnvironmentPostProcessor , SamplerAutoConfiguration , SamplerAutoConfiguration , SamplerAutoConfiguration , and SamplerAuto
added lastPid handling in POIXMLProperties and modified getLastPid method in TestPOIXMLProperties to ensure proper retrieval of the last PID
fix geotiffreader . getnodata ( ) to return negative _ infinity when no data be set
updated import statements and refactored driver execution logic in CliDriver . java and SessionState . java to improve error handling and ensure proper resource management
replaced ` Executor ` with ` Scheduler ` in ` MockRestAdapter ` and updated the ` httpExecutor ` initialization in ` MockRestAdapter ` to
modified the ` selectByRuleIdSet ` method to accept a ` ruleIdSet ` list instead of a ` ruleIdSet ` list to
added a new method ` addExitDescription ` to ` ExitStatus ` and updated its usage in ` AbstractJob ` , ` AbstractStep ` ,
added entityPlayer check to MultiblockRenderHandler to ensure proper event handling based on the player ' s player context
updated variable names from ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand . java ` to improve clarity and consistency in the
removed the import of Collections and replaced it with a direct call to getRangeLength in PlotConfiguration . java to simplify code and improve readability by
refactor UIAlertController to use UIAlertController instead of UIAlertViewDelegateAdapter to improve code clarity and maintainability by encapsulating
replaced ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java `
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method from ` arrayValue ` to ` values ` to improve
updated the assertion in AdvServiceTest to check the message of the service to ensure that the service ' s message is not null before proceeding
refactor key handling in MappingMongoConverter to use potentiallyEscapeMapKey instead of potentiallyConvertMapKey to improve code readability and maintainability by
updated Timber logging statements in NearbyMapFragment . java to improve readability of log messages for better debugging
camel - 14284 : camel - spring - boot : use the deprecated property instead of the javatype property .
updated FuzzyLikeThisQuery to handle null terms and added a new test for non - existing fields in FuzzyLikeThisQueryTest to ensure
updated the ` writeApplicationsLinks ` method to include a ` tabularList ` parameter and modified the ` writeApplicationsLinks ` method to
dspace : use getinstance ( ) instead of createmissingidentifiers ( ) in createmissingidentifiers . java
replaced ` bytes . length ` with ` bw . getLength ( ) ` in ` assignBytes ` method calls to use ` bw . getLength ( )
changed the return type of getDisplayScript method from abstract to null in LocaleNameProvider . java to allow the method to return null instead of an abstract
updated sequence handling in RemoteWebDriver and modified ignore annotations in BasicKeyboardInterfaceTest to ensure consistency in key handling across the application
pdfbox - 4071 : initialize cosobjects list with the size of the list , a suggest by valerybokov
added synchronization and a wait mechanism for active interfaces in NetworkConfigurationWatcher . java and improved null checks in NetworkManagerListenerImpl . java to ensure that
fix for bug # 45538 - read multiple nested object in workbook . getallembeddedobjects ( )
removed unused import of Shdr from ShaderNodeLoaderDelegate . java to clean up the code and improve readability
updated variable names from ` hostParams ` to ` roleParams ` in ` AmbariManagementControllerImpl . java ` to improve clarity and maintain
pdfbox - 4071 : add support for symbol font in pdfbox .
replace GlStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to ensure compatibility with GL
replaced instances of ` start ` with ` mCurrentGuideStart ` in ` LiveTvGuideActivity ` and updated related logic in ` ProgramList
replaced ` getDeclaredMethod ` with ` Whitebox . getMethod ` in ` MockGateway . java ` and added new test classes ` CommonParentTest . java
added new library paths for libraries " libfreetype . so " and " libfontmanager . so " in JREUtils . java to enhance
refactor function parser to handle dummy arguments in multi - variable functions to improve code readability and maintainability by using more descriptive variable
graalvm : fix loopsafepoint elimination to use protected non - overflowed guard .
refactor isInstance method handling in TypeFrameModelingVisitor . java to improve code readability and maintainability to enhance maintainability and reduce duplication
added a new static class ` LocalizedString ` and modified ` Attr ` and ` Resolve ` classes to utilize it to enhance localization support for
add serverconfig . disableclasspathsearch option to disable classpath search by default
changed variable declarations from non - final to final in DataLine . java to improve immutability and ensure immutability of AudioFormat arrays
change default value of retries from 0 to 2 in Reference . java and update corresponding test assertions in AnnotationPropertyValuesAdapterTest . java to ensure correct
added support for retrieving and processing settings in TexturePacker . java to enhance functionality by allowing users to specify a custom settings file
updated AchievementsFragment to use AppCompatTextView for displaying uploaded images and wiki text views to improve user experience by providing a more descriptive
added multiple annotation processing methods to the tracer class in TranslatingJavacPhaseTracerTest . java to enable testing of annotations in the tracer
updated the regex pattern in CategoryInterface . java and added CategoryInfo class in MwQueryPage . java to improve clarity and maintainability of the
updated assertion messages in AuthzAuthenticationRequest . java for consistency to improve readability and maintainability of the assertion
added accessibility support and updated alarm setting in TaskbarStashController to improve user experience by allowing customizable taskbar auto - hiding timeouts
added handling for ' ^ ' character in signature validation in GenericSignatureParser . java to ensure proper exception handling for duplicate elements in signature parsing
updated access flag handling in ClassVisitorDriverFromElement . java and added new test cases in StubJarTest . java to ensure proper handling of generic
added null checks for the ' in ' variable in IntervalFilter and LowpassIntervalsSource classes to ensure that ' in ' input ' is not
added unit tests for the ` EntrySetIteratorLastNext ` method in ` MapInterfaceTest . java ` to ensure proper handling of ` UnsupportedOperationException
added a serialVersionUID field to the TreeMap class to ensure proper serialization compatibility for the TreeMap class
updated the createdAt method from ` createdAt ` to ` createdAt ` in ` ImageData . java ` to ensure accurate timestamp representation for image
updated SINGULAR _ LIB _ GROBCOVCx to SINGULAR _ LIB _ GROBCOV
added import for EncryptionUtils and invoked deleteKeyForAccount method in AccountRemovalJob . java to ensure proper deletion of private and PUBLIC keys for
[ hotfix ] [ runtime ] make keep - alive header configurable for asynchttpprovider
add check for empty interceptor list in PostJoinMapOperation to prevent unnecessary processing when the map has no interceptor and lite member joins
danielwagnerhall : remove redundant processor from dialect
removed the ` spillEnabled ` parameter from several ` BaseHybridHashTable ` , ` BinaryHashTable ` , and ` LongHybridHashTable `
refactor EnvironmentVariableHelper to use Optional for environment variable retrieval to improve code readability and maintainability by encapsulating environment variable retrieval logic
refactor : fix checkstyle violation in defaultactionmapper
added SerializableMode import to Mockito . java and updated PluginSwitch . java to include SerializableMode import to enhance serialization support and improve code clarity
beandefinition : fix fieldinjectionexception when fieldinjectionpoint be null .
added support for isolation level in select statements in the database mode to enhance compatibility with isolation level in select statements
updated constants for HIVE _ SERVER2 transport mode and thrift HTTP path in HiveConnection . java to improve code readability and maintainability by
added an ` isCacheable ` method to the ` GlobalOrdinalsWithScoreQuery ` class to determine if the query is cacheable to improve
added a new file TestStrangeControl . java that implements a thread - safe strange control test to demonstrate the use of StrangeControl functionality
updated file path format from " % s . json " to " % s . jsfile " in JsFile and JsLibrary classes to
added selectionStart and selectionEnd fields with corresponding getters and setters to ShadowEditText . java to enhance the selection functionality for better user experience
refactor ` startGRPCServer ` method to return ` Closeable ` instead of ` void ` to improve resource management and ensure proper shutdown of the
added a path parameter to the ` use ` method in ` Jooby ` , ` Router ` , and ` MvcClass ` classes , and
added a null check for ` fst ` in ` FreeTextSuggester . java ` to throw an exception if the lookup is not supported at
updated file path handling and verification logic in T4975569 and T6729471 classes to ensure consistent line endings across different operating systems
added abi writer class loading logic in JavacInMemoryStep . java to enable dynamic loading of ABI writer classes from the own classloader
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to BooleanMethod
added a check for ` isStopped ( ) ` before scheduling tasks in ` PullMessageService . java ` to ensure that shutdown logic only occurs when
[ hotfix ] [ javadoc ] fix typo in energyendpointer
fix bug in componentpresetchooserdialog when first column be favorite .
removed unused imports from BazaarRepository , CVSRepository , and IndexDatabase classes to clean up the code and improve readability
camel - guacamole - fix switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and updated related references in ` CxxLibrary
deleted the files Constants . java and DistanceUtils . java to remove unused components from the codebase
refactor disk delimiter handling in RandomPartitioner to use substring method to improve readability and maintainability of the code
[ gr - 16464 ] fix initialization of fallback linker in jdkinitializationfeature
added a new test method ` testCreateInline ` to ` RoleBindingTest ` and modified the ` create ` method in ` RoleBindingOperationsImpl
added debug logging statements in UaaSessionCookieConfig . java to improve traceability of session cookie configurations for better debugging
updated the calculation of ` fName ` to use ` cal . get ( Calendar . DAY _ OF _ YEAR ) ` instead of ` LOG
updated condition in ObservableBlockingSubscribe . java to use ' v ' instead of ' o ' to improve clarity and accuracy in condition checks
added error handling for invalid use of options in JavapTask . java and created a new class T8033711 . java with a test
replaced ` Collectors . collect ( toList ( ) ) ` with ` toList ( ) . toList ( ) ` in multiple Java files to
updated logging level from error to warn and modified error handling logic in TaskDriver . java to improve error handling and prevent potential memory leaks
[ hotfix ] [ network ] add support for tiered storage in inputgatespecutils
add isnotsuccessstatus ( ) method to emailsenderservice , emailjetservice , sendgridservice , sendgridservice , sendgridservice
updated the ` Cubocy ` application configuration to use ` true ` in ` CubocDesktop . java ` to enable OpenGL 2.0 rendering
mondrian : do n ' t call method . getlast ( ) if there be no return type
replaced DefaultSourcePathResolver with AddToRuleKey and updated imports in OutputMacroExpander . java to simplify code and improve readability by
[ hotfix ] [ test ] fix typo in simpletestinclustersupport
added a condition to check if the file path contains " \ \ " in the MergeWordsListTask class to ensure that the file path does not
add support for list < feedbackresponsecommentattributes > and list < feedbackresponsecommentattributes > in feedbackresponsecomment .
removed unnecessary whitespace in the conditional statement to improve code readability and maintainability
added a new file ` TestEscapeThroughInvoke . java ` containing a test class ` TestEscapeThroughInvoke . java ` to demonstrate the behavior of
replaced direct stream . skip ( ) with IOUtils . read ( ) in FilePreviewService . java to improve code readability and maintainability by using
updated the ` init ` method to accept a ` InterceptorDefinition [ ] ` and improved error logging in ` JdbcInterceptor ` and ` JdbcInterceptor
changed catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching all Throwables
[ iotdb - 4071 ] lrublockcache . evictblockbyhfile ( ) do n ' t remove block from cache
removed unnecessary null check for taskCount in RecentsView . java to simplify code and improve readability
added instance config change listener to HelixBrokerStarter and increased sleep duration in HelixServerStarter to allow dynamic configuration of the helix
added CoinmateExchange and CoinmateStatic classes for managing Coinmate exchange metadata to provide a structured way to retrieve and retrieve the Coinmate exchange metadata
fix error message in model validation ( # 11919 )
pdfbox - 4071 : do n ' t set the key of the object if it be null .
add displaydata support to ptransform . setdisplaydata ( )
replaced instances of ` DefaultSubject ` with ` assertThat ` for null checks in ` SubjectTest . java ` to improve code readability and maintainability
removed the security property setting for SSL key size in ClientJSSEServerJSSE . java to disable the SSL key size configuration for improved security
added type checks for subcommands and group options in OptionData . java to ensure proper handling of subcommands and group options
updated module - info . java files for mmm and ppp modules to improve module organization and maintainability
added error handling for server errors in ensureConnection ( ) method to improve error handling and provide clearer error messages
removed redundant assignment of mFinished in LauncherInstrumentation . java and added a finally block in LogEventChecker . java to improve code clarity and ensure
added error handling and logging for exception management in FileSinkOperator . java to improve error management and ensure proper resource management during file operations
added diagnostic logging for JavaFileObjects in SchemaGenerator . java to provide clearer error messages when processing diagnostics
replaced ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by using ` OptiqSemantic
updated DataSourceMonitorTests . java file to improve test coverage for DataSourceMonitor functionality
added a set to track loaded resource paths in ClasspathMethodScanner to improve resource loading efficiency by avoiding unnecessary scans
updated TestServiceUtil to handle null testInstance and added error logging for service initialization failures to improve robustness by preventing potential NullPointerExceptions
added null check for ` o ` and modified response handling logic in ` RoutingInBoundHandler . java ` to ensure proper handling of ` HttpResponse `
added natIp field to EkeyConfiguration , EkeyConfiguration , EkeyHandler , and EkeyUdpPacketReceiver classes , and updated logging
updated ` ArrowByteBufAllocator ` to use ` ArrowByteBufAllocator ` instead of ` BaseAllocator ` and updated imports accordingly to
refactor CommitLogArchiver , CommitLogReplayer , JdbcDecimalTest , and JdbcDecimalTest classes to improve code organization and maintainability
added null and length checks for header and body buffers in HttpConnection . java and created a new test case in RFC2616BaseTest . java to
[ java ] refactor multitimeout to use atomicreference instead of direct reference to upstream .
[ hotfix ] [ table - planner - blink ] increase the number of starved sstables in leveledmanifest .
added an @ Test annotation to TestOrcTimezone1 . java to mark the test as obsolete for future development
added a new method to find matching metrics and timers substrings in the Debug class to enhance functionality by allowing matching substrings in metrics
added error handling for JSON processing in PinotSegmentRestletResource and updated TraceContext to use ObjectNode instead of ObjectNode to improve robustness
added null check for columnClass before retrieving the default renderer in JTable . java and created a new test class Test6888156 . java with
added a check for the existence of the SHELL environment before adding it to the command - line arguments to ensure the command - line argument is
updated the number of subscriptions deleted from 10 to 1 in DatabaseCleaningService . java to ensure that the deleted feed does not exceed the expected number
replaced LinkedList with LinkedHashSet for testInstances in MockitoExtension . java and added a new test in JunitJupiterTest . java to ensure consistent
refactor FieldMonitor class to improve code structure to enhance maintainability and readability of the code
removed the deleteFilesAfterClose ( ) method from BTreeMapTest . java to simplify the code and improve readability
modified the iterator initialization logic in SortedIntList and added a new test class SortedIntListTest to ensure proper handling of iterators and
added unregistering of the object name in JMXHelper and modified exception handling in JMXHelper to improve error handling and ensure proper cleanup of the
updated the default writebuffer size from ' 4MB ' to ' 64MB ' in RocksDBConfigurableOptions . java to ensure compatibility with
removed the ' true ' parameter from the constructor call in Style . java to simplify the constructor call by removing unnecessary parameters
updated the method call from ` addArgument ` to ` addArgumentNoEncoding ` in ` FacebookShare . java ` to improve argument handling by using
removed JSON graph handling from SamzaRunner to streamline the execution process by eliminating unnecessary JSON graph processing
refactor HelloAudio . java to use MouseInput instead of Vector3f to improve code readability and maintainability by using a more descript
[ hotfix ] [ javadoc ] fix typo in looprotatebadnodebudget
updated convertToMongoType method signatures to include TypeInformation parameter across multiple classes to enhance type conversion functionality by allowing more flexible type handling
ggb - 271 fix for imaginary unit in inputbox
danielwagnerhall : add test for sendkeytoactiveelement . sendkeys ( )
added methods to get and reduce BufferedImage instances with negative target sizes in AddAndScaleMultiImage . java to enhance image rendering capabilities by allowing negative
removed the extendArgumentCheck ( ) and extendWrapStore ( Engine engine ) methods from DBMaker . java to streamline the code by eliminating unnecessary
add a call to updateshiftstatenow ( ) in anysoftkeyboard . java
removed the " DETECTED _ ACTIVITY " constant and updated activity detection logic in multiple classes to improve code readability and maintainability by
updated the package of ExtensionConfig from ` org . eclipse . jetty . websocket . extensions . ExtensionConfig ` to ` org . eclipse . jetty .
removed the import of Buildable from AaptPackageResources . java to streamline the code by eliminating unnecessary dependencies
added Unused statements to multiple Java files to address potential issues related to file reading in the code
updated the error message for invalid upgrade protocol in WebSocketUpgradeHandler . java to clarify the status of the upgrade protocol
modified the initialization of blockMode in P11Cipher . java to improve code readability and maintainability
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
refactor permission checks for plot ownership in Merge . java to improve code readability and maintainability
removed deprecated getConversationID ( ) methods from HttpContentResponse , HttpResponse , Request , and Response classes to streamline the retrieval of the conversation ID
updated import statements in DummyFreeTTSVoice . java and DummyFreeTTSVoice . java to use the correct library for PhoneSet and Mary
refactor ` stripQuotes ` method to use ` PlanUtils . stripQuotes ` instead of ` HashMap ` to improve code readability and
refactor the ` updateRendering ` method to return a ` RendererConfiguration ` object instead of a ` RendererConfiguration ` class to simplify the rendering logic
updated the handling of resolution and remote artifact repositories in DefaultPluginManager to improve clarity and maintainability of the code
camel - 14265 : camel - cxfrs - producer - cache - cache - test should close the applicationcontext if it fail .
updated the PhysicsClient class implementation to improve performance and maintainability of the code
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable the test due to frequent failure scenarios
added initialization of the file object in ZipFile . java to ensure proper initialization of the file object
added a deprecated method ` handleAll ( ) ` to ` TryType ` that returns ` finallyBlock ( ) ` to mark the method as deprecated
[ java ] make channel constructor non - final so that it can be use by default .
added logging functionality to GenericDAOImpl , ForumServiceImpl , ForumServiceImpl , and StackTraceUtils classes , and created StackTraceUtils class for
removed the @ Test annotation from FormLoginIntegrationTests . java to clean up the code and improve readability
added a check for ` needParen ` before unparseing lists in ` FunDefBase ` , ` ParenthesesFunDef ` ,
updated SQL query and error handling in CheckDatabaseHelper . java to include cluster ID and cluster ID to improve clarity and debugging by providing more detailed cluster
rename ` supressWarnings ` to ` suppressWarnings ` and update related references in ` UnsafeAutomaticSubstitutionProcessor . java ` to improve clarity and
jsontreereader . nextjsonelement ( ) do n ' t throw illegalargumentexception if the next json element be null .
added an option to handle unexpected arguments in TestCommand and implemented a test for extra arguments in ExternalTestRunnerIntegrationTest to ensure proper command execution when using internal
added ` dedup ` and ` indexSolr ` methods to ` SolrDeleteDuplicates ` , ` SolrIndexer ` , and ` SolrIndexer
[ flink - 24424 ] [ table - planner ] add support for blink planner in streamsqlexample
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure the database is cleared before proceeding
added dispose ( ) method to Progress . java and modified progress display logic in RSSReader . java to ensure proper resource management and prevent memory leak
added a check to ensure the parent file exists before proceeding to prevent potential errors when the parent file does not exist
added utility methods for writing and closing POI documents in IOUtils . java to ensure proper resource management and prevent potential memory leaks
updated print statements in JavaBuild . java to replace print statements with print statements to improve readability and maintainability of the code
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for ` _ dotsPerPoint ` to
added custom user search query handling in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to enhance LDAP authentication
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 239 : add default port
refactor SnmpTargetHandler and related tests to use ThingHandlerHelper for improved readability and maintainability to enhance code maintainability and ensure proper
add instructorswhocansubmit permission to edit session in instructorfeedbackeditpageaction
added @ Incubating annotation to AvailableSettings . java to indicate that the class is outdated and should no longer be used in future development
updated path handling logic in FileResolverImpl . java and added a new WarFileResolverTest . java file with a war file resolution test in War
updated the format of newFlushedSize in DocumentsWriterPerThread . java to include docstores instead of newSegmentSize to enhance clarity in
update the DIRT BLOCK output to use the unlocalized name instead of a hardcoded value to improve readability and maintainability of the
corrected the spelling of " stripWhitespaceX " to " stripWhitespaceY " in ImageProcessor . java to improve code readability and maintain
increased the number of threads in FeedRefreshUpdater from 1000 to 1000 to improve thread management by allowing more time for the locks
updated the ` deserializeFrom ` method to use ` exactSearch ` instead of ` false ` in ` TsFileSequenceReader . deserializeFrom `
removed unnecessary DateFormat parameter from CSVSaveService . makeResultFromDelimitedString method to simplify code and improve readability
added a dimension to the pane ' s setPreferredSize in NavigationShareTab . java to improve UI responsiveness by adjusting the pane ' s
replaced OffsetAttribute with State in BeiderMorseFilter and added a new test for custom keywords in TestBeiderMorseFilter to
updated UpnpAudioSinkReg , UpnpRenderer , UpnpServerHandler , UpnpEntryQueue , and UpnpEntryQueue classes to improve
fix lenswarp . setcollidedat ( ) to use pos instead of pos . getblockpos ( ) .
updated JsonTest to use JUnit 5 annotations and added a ` toJson ` method in ` JsonTest . java ` to improve test coverage and
refactor MutableContextDataSupplier to improve code readability to enhance maintainability and facilitate future updates
replaced ` Exception ` with ` Throwable ` in ` CoreContainer . java ` to handle ` Throwable ` instead of ` Exception ` to improve error handling
updated KubernetesServer constructor to include a https endpoint to enable the Kubernetes server by default
use unary math intrinsics in defaultjavaloweringprovider to compute the stamp of the unary math intrinsic node .
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 405 : fix defaultserv
[ tika - 232 ] add locale support for lat _ long _ format in tiffextractor
refactor exception handling in ShowFileRequestHandler to use rsp . setException instead of throw to improve error management and provide clearer error messages for better
added a new ` TryCatch ` class and methods to handle exception handling in ` ReflectorClassWriter . java ` to enhance error management by allowing
added clamp method to the Vector class and implemented clamp method in Vector2 to enhance vector manipulation functionality by allowing clamping between min and max values
added OAuth2 authentication handling in ChainedTokenGranter to ensure requested scopes are set before creating access tokens
refactor BC _ instanceof to improve type checking logic to enhance code readability and maintainability
removed the setSaveFlags ( SAVE _ ALL ) method from EditorBottomSheetBehavior . java to streamline the save process by eliminating unnecessary flag
updated UaaUrlUtilsTest to use JUnit 5 ' s PollutionPreventionExtension and added PollutionPreventionExtension to enhance
hhh - 16464 - make nativequeryscalar return type a basicdomaintype .
added a WeakHashMap for caching font objects and updated return logic in SunLayoutEngine . java to improve memory management and ensure thread safety when accessing font
use intarraylist instead of intbigarrayarray
[ java ] use sessionid instead of sessioid in webdriver . getcurrentwindowhandle ( ) .
refactor BrokerRequestUtils to improve code readability to enhance maintainability and facilitate future updates
refactor instance handling in InjectorBuilderImpl to use a correct order for injectables to improve code readability and maintainability by centralizing
replaced usage of ` ParserConfig ` with ` buildTarget . getBasePath ( ) ` in ` BuildTargetToRawTargetNodeTransformer . java `
added null check for the value before assignment in EchoMessage . java to avoid potential NullPointerExceptions when the value is null
do n ' t remove the connection listener in the persistent presence jabber protocol provider when the connection be close .
corrected a typo in the DEFAULT _ LOAD _ FACTOR constant in IntHashSet . java to improve code readability and maintainability
added a method to retrieve all DataTypePhysicalVariations in VectorizationContext , Vectorizer , and VectorPTFDesc classes , and updated related classes
updated package names from ` com . google . zxing ` to ` com . google . zxing . client . j2se `
modified conditional checks for ENABLE _ OVERVIEW _ ACTIONS and RECENTS _ CLEAR _ ALL _ BUTTON in Overview
added import for javax . persistence . Entity and annotated the BaseActivityEventEntity class with @ Entity annotation to enhance persistence capabilities in the application
added tracing for launcher interactions in NavBarSwipeInteractionHandler , TouchInteractionService , and TouchInteractionService to enhance debugging capabilities by providing insights
added a new file ` InvalidOptions . java ` that tests the ` - h ` , ` - h ` , and ` - unknown - options
added logging for inconsistent number of displays in DisplayController . java to improve debugging by providing insights into the number of supported displays
replaced the method ` getClientIdAndClientSecret ` with ` OAuth20Utils . getClientIdAndClientSecret ` in ` OAuth20UsernamePasswordAuthenticator
changed the default value of ` _ unwrapServletException ` from false to true in ` ErrorPageErrorHandler ` and ` AsyncContextTest ` classes to enable
added logic to set the status to ShortcutInfo . DEFAULT in PackageUpdatedTask . java to ensure proper handling of package updates based on the current
camel - 14284 : camel - seda : fixed seda endpoint to use default unbounded queue size .
added batchUpdateStart and batchUpdateEnd methods to the App class to ensure proper handling of batch updates in the application
added HttpClient configuration to ThirdEyeApplication to enable customizable HTTP client configuration in the application
added sorting functionality to JpaJobPersistenceImpl and JobInstanceFetchRequest classes to enable sorting functionality for job instances
updated CryptoFacilitiesTradeService to use OpenOrders for canceling CryptoFacilities orders instead of throwing an exception to improve
do n ' t hide keyboard when click in algebra view
refactor memmove method to use native function handle instead of int
reformatted code for consistency and readability in BindLdapAuthenticationHandler . java to improve code readability and maintainability
added a blockToolTip property and its getter / setter methods to ToolTipManagerW to control the visibility of the block tooltip in the user interface
updated DefaultDateTypeAdapter to accept a time style parameter and modified related methods to use it to enhance flexibility in handling date styles in Gson configurations
updated playerSet appending format from " < UID : " to " ( " ) " in ListCommand . java to improve readability and maintain
added a check for empty lists before returning the list to avoid potential NullPointerExceptions when the list is empty
added error handling for CommandException in ParametricCallable . java to improve robustness by catching specific InvocationTargetExceptions
updated the ` getLikeExpression ` method to include a ` isLike ` parameter and modified the ` getLikeExpression ` method to handle like expressions
added start and stop methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl classes to enhance functionality for managing stream supplier components
updated LuceneTestCase to set default locale for all available locales in the runChild method to ensure proper locale management during test execution
refactor multiple SSL - related classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
refactor context handler initialization into a separate method ` initContextHandler ` to improve code readability and maintainability by encapsulating context handler
add a test case to verify that the routebuilder reference can be use in camel - blueprint
nifi - 10225 : use contains ( ) instead of substring ( ) in testexecutestreamcommand
refactor ` returnTypeSubstitutable ` methods to simplify the return type comparison logic to improve code readability and maintainability by reducing redundancy
added a ThrottleType enum and modified the processing logic in TestExecutor . java to support a configurable throttle type for CHARS and BYTES
simplified the assignment of color . argb in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to improve
refactor Annotation and AnnotatedElement classes to improve code organization to enhance maintainability and readability of the code
added a new interface ` Model ` and modified ` Sheet ` and ` Workbook ` classes to implement it to enable the implementation of the ` Model
camel - 14247 : camel - http - http - http - http - http - http - http - http - http - http - http
added a boolean flag ` clearEntityManager ` to ` JpaItemWriter ` , ` JpaItemWriterBuilder ` , and ` JpaItem
added null checks for ` info ` in ` InstallShortcutReceiver ` , ` Launcher ` , ` LauncherModel ` , and ` Workspace `
set default value of TwoDimensionalCollectionValuedMap to true in CoreMapNodePatternTrigger . java to enable the creation of TwoDimensional
updated exchange host and name from " BTC - e " to " Wex " and modified the description accordingly to reflect the rebranding and ensure the exchange details are current
added null checks for columnReaders and reader in OrcEncodedDataConsumer and EncodedTreeReaderFactory to prevent potential NullPointerExceptions when processing
added null check for files in SegmentInfos . java and created a test for OpenReader functionality in TestIndexReader . java to improve error handling and
[ flink - 24436 ] [ test ] fix test case for hsearchsorthelpersimpl
refactor BigDecimal calculation to use a variable for percentValue to improve code readability and handle negative values gracefully
fix rangereader . limit ( ) to return - 1 if limit < = 0
camel - 14284 : camel - spring - boot : log additionalroutesbuilder from debug log .
fix hlschunksource . getnextchunk ( ) to use playlistperiodus instead of playliststarttimeus
replaced ` TestCase ` with ` TestNumericRangeFilterBuilder ` and ` NumericRangeQueryBuilderTestCase ` in multiple test files to improve test organization and maintain
added a new ` StatefulMapper2 ` class and a test for the ` StatefulMapper2 ` class in ` StatefulOperatorTest `
removed null check for fill in Area . java and added setBitmapShaderShift method in Line . java to streamline code by eliminating unnecessary null checks
added dbExists method and updated dbExists method in Blockchain and BlockchainTest classes to enhance database existence checks and improve test coverage for database existence
trim whitespace from the group value in SQLPlusSupport . java to ensure proper string processing by trimming whitespace before processing
http : / / issues . apache . org / jira / browse / apr : / issues . apache . org / jira / browse
updated divider location calculation in DockSplitPaneW . java to ensure proper layout adjustment for split panes
added health check metrics for " OK " and " healthcheck " methods in ControllerMeter and PinotControllerHealthCheck classes to enhance health check functionality and
set the visibility of shared avatars view to GONE in LocalFileListAdapter . java to improve user experience by hiding the avatars view
ggb - 273 move scss from client bundle to scss resource
fix checkstyle issue in java / nio / channels / sendreceivepong / sendreceivepong / sendreceivepong / sendreceivepong / sendreceive
added logging level check for command execution in LogInterceptor . java to ensure proper execution based on logging levels
replaced CountDownLatch with assertWaitUntil for finished spans in EventBusTracingTestBase . java to improve code readability and maintainability by using a more
refactored ` QueryParser ` to initialize ` Locale ` and added getter and setter methods for ` locale ` to improve encapsulation and
refactor entry type handling in EntryCustomizationDialog and FieldSetComponent to use collections instead of arrays to improve code readability and maintainability by reducing
[ jbrules - 2789 ] fix a bug in the rulebaseimpl that cause the test to fail .
added a new class ` OcspUnauthorized ` and modified ` OCSPResponse . java ` to add a new ` OcspUnauthorized
added a server state check and modified sleep duration in SSL . java to ensure proper handling of server failures and improve error handling
added a new constant ` COUNTER _ OPEN _ CONNECTION _ COUNT ` and associated methods in ` SourceCounter ` , ` SourceCounterMBean
[ hotfix ] [ runtime ] add interfacetype . builder . fields ( list < fielddefinition > ) method to the executionstrategy
updated the ` createDefaultJavaPackageFinder ` method to return an ` ImmutableSet < String > ` instead of an ` ImmutableSet < String > ` to
replaced ` OutputWriter ` with ` PrintWriter ` in ` ScriptExecutable . java ` to improve performance by using ` PrintWriter ` instead of ` OutputWriter
[ hotfix ] [ test ] fix directory creation in filesourcetextlinesitcase
added support for DataTable in JRubyStepDefinition to ensure proper handling of DataTable instances in JRubyStepDefinition
updated ` SearchImagesRenderer ` , ` ApacheHttpClientMediaWikiApi ` , ` ApacheHttpClientMediaWikiApi ` , and ` ApacheHttpClientMediaWiki
refactor ReadSentimentDataset class for improved readability to enhance code maintainability and readability
updated error message formatting in FormulaParser . java to improve clarity of error messages for better debugging
added getter and setter methods for the bind address in WebSocketClient . java and refactored the WebSocketFuture class to improve code readability and maintain
[ java ] fix checkstyle violation in concurrencymoduleharness . java
refactor width and height calculations in WidgetGroup . java and add a hit method in WidgetGroup . java to improve code readability and maintainability
change the type of the sessionFixationAttribute check from Boolean to Boolean . valueOf to ensure that the sessionFixationAttribute is not null to avoid
updated the switch statement to use ` edgeOption ` instead of ` 1 ` for starting a single channel LA to improve code readability and maintainability
updated backoff logic in ChromeBinary and added resetBackoff methods in ChromeDriver to improve backoff handling in the application
added HTTP method handling in TraceExchangeFilterFunction and updated ClientResponseWrapper constructor to accept a HttpMethod parameter to enhance flexibility in handling HTTP requests in the
updated the assignment of the ` removeDeleted ` variable in ` PrecompactedRow . java ` to use ` Integer . MIN _ VALUE ` to
updated return values in ICC _ Profile and ColorConvertOp , and added a new test class InvalidRenderIntentTest to validate rendering intent handling to ensure
updated feedbackcontributionquestiondetails and feedbackquestionformtemplate template to include parameter ` ` noture ' '
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
[ hotfix ] [ kafka ] fix findbugs warning in kafkaexactlyoncesink
updated the connection handler to include PGConnection in PooledConnectionImpl . java and added a test for PGConnection in BaseDataSourceTest . java to ensure
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated logging level from warn to info for JWT authentication and changed log level from warn to trace in TokenAuthenticationHandler . java to improve clarity and
removed the @ Deprecated annotation from Hazelcast . java to indicate that Hazelcast . java is no longer recommended for use
updated the handling of UNLIMITED _ KEY _ JCE _ REQUIRED in AmbariManagementControllerImpl , AbstractServerAction , and Final
refactor NamedListCodec to use ITERATOR and writeExternString instead of writeStr and add END handling to improve code readability and
fix npe in migrationmanager . assigncompletelyLostPartitions ( ) when state be null
added schema inclusion rule to ApiExample . java to enable schema inclusion for the API example
updated the tolerance value in the assertion from 3.0 to 7.0 in StreamExpressionTest . java to allow a wider margin of error for the comparison of mean and variance values
[ geot - 4293 ] fix a bug in sdo . createquadraticpolygon ( ) and add unit test .
added methods ` getBaseName ` and ` getDimensionCount ` to ` ConstantPool ` class to retrieve the base name and its dimensions to enhance functionality for managing
add a setdebugevaluationoutputfornexteval ( ) method to formulaevaluator and xssfformulaevaluator to allow
( chore ) camel - core : migrate testmodule to junit5
do n ' t play on live tv if it ' s not set
added a return statement in DynamicStyleBar . java to ensure proper execution flow
added logging statements for the REPL DUMP operation in Utils . java to improve traceability and debugging of the REPL DUMP process
refactor ReactiveAuthorizationManager to improve authorization handling to enhance performance and maintainability of authorization processes
added a check for boolean type in MethodEmitter to promote strings to objects in addition to boolean types
rename llvmstackframenuller to llvmstackframenuller . llvmstackframenuller
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
add a new test suite for the cache configuration in the thingsboard . server . cache .
added a ` calculateBoundingBox ` method to the ` Mesh ` class to calculate the bounding box based on specified vertices to enhance the rendering capabilities for mesh
added a new ` TargetHashFunction ` enum and updated its usage in ` TargetsCommand . java ` to allow users to specify the hash function
refactor DefaultConfigurationProperties class to improve configuration handling to enhance maintainability and readability of the code
added high light color and alpha settings for ListViewMultiChartActivity and BarChart classes , and modified highlight paint color settings in BarChart to enhance visual
removed pgSgPathPlanMap entry from pgSgPathPlanMap to simplify the code and improve readability
[ hotfix ] [ test ] fix flaky infinispanremoteproducerit
refactor MavenArtifactFetcher and MavenDependencyResolver to use a whileLocked method for fetching Maven artifacts to improve code readability and maintainability by
updated fragmentShader to include " # ifdef GL _ ES " in SpriteBatch . java to ensure compatibility with GL _ ES rendering settings
updated the return type of RSGroupInfo and related classes from SortedSet to Set in RSGroupInfo and TestUpdateRSGroupsAdmin2 to
added error handling for JSP page loading in TagLibConfiguration . java and modified logging level from warn to debug to improve logging granularity
added a new ` DummyVersionAwareTokenFilterFactory ` and refactored test cases in ` CustomAnalyzer ` and ` TestCustomAnalyzer ` to
added a test for reading values from a set package archive info in ShadowPackageManagerTest to ensure correct handling of package archive information in the ShadowPackageManager
replaced direct calls to ` invoke ` with ` MethodUtil . invoke ` across multiple classes to improve package access checks and ensure proper package access validation
updated GradleBuildService to include ProjectConfigurationStartEvent , TaskStartEvent , and TaskStartEvent imports , and added progressUpdateTypes method
removed unnecessary synchronization in AndroidWebDriver . java to improve performance by reducing unnecessary synchronization overhead
hikariconfig . getinitializationfailfast ( ) should check if initialization fail timeout be greater than zero .
removed the ` timeOut ` parameter from the ` getResult ` method and added an ` error ` method in ` Net . java ` to simplify the
changed the visibility of the ` isNative ` variable and modified the ` addEntry ` method to be transient to ensure that the ` isNative `
updated error message formatting in CEntryPointCallStubMethod . java to improve readability and consistency in error reporting
rename ruleenablehandler to ruleenablementactionhandler for consistency
[ java ] fix typo in javadoc .
updated debug logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of debug messages for better debugging
[ hotfix ] [ table - planner - blink ] fix flaky test in upsertkafkadynamictablefactorytest
added null checks for the registrant repository in UsersPanel . java to improve robustness by preventing potential NullPointerExceptions
added support for additional font files " . otf " and " . OTF " in the SunFontManager class to ensure compatibility with additional font
refactor type matching logic in AnnotationMatcher to use JavaType . Class . build for queryTypeFqn to improve clarity and maintainability of
change default value of " OFF " from " OFF " to " SEVERE " in Grep . java to improve user experience by providing a
added a conditional check for debug logging before logging messages in FaultTolerantChunkProcessor . java to avoid unnecessary string concatenation when debug logging is
[ hotfix ] [ runtime ] use list . size ( ) instead of list . java
added a check for the ` shouldMoveToDefaultScreenOnHomeIntent ( ) ` method and implemented the ` onHomeIntent ( ) ` method
updated the maximum bitrate from " 110 " to " 30 " in PMS . java to increase the maximum bitrate from " 110 " to
removed the getOptions ( ) method from CommandLineParser . java to simplify the code and improve readability
trim whitespace from the description string in MutableDatabaseProperty . java to ensure consistent formatting of the description
updated the filename construction in XOMParserTest . java to correct the filename format to ensure the correct file path is used for the output file
removed the pid parameter from the error log message in ProcessBesuNodeRunner . java to simplify the error logging for better readability
added ` getLoadedMusic ( ) ` method to ` MusicLoader ` and ` SoundLoader ` classes to provide access to the loaded music and sound
removed unused imports and adjusted type casting in OnBeanCondition . java to improve code readability and maintainability
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording for testing purposes
disable lrpause button if it ' s null
replaced ` PreferenceMultiline ` with ` PreferenceCategory ` and refactored preference handling in ` Preferences . java ` to improve code readability and
fix a typo in the packetwriter ' s sendpacket ( ) method
updated StringBuilder initialization to handle negative UTF lengths to ensure proper initialization of StringBuilder based on the maximum number of characters
added properties to the WebApplicationContextRunner configuration in WebEndpointsAutoConfigurationIntegrationTests . java to disable statsd export in the application context runner
refactor InterruptedException class to improve exception handling to enhance error management and maintainability of the code
refactor ServiceTicket class to improve code organization to enhance maintainability and readability of the code
refactor connection result handling in ConnectionCheckOperation to use a boolean variable for better readability to improve code readability and maintainability
fix bug in argumentarraymessagemapper . canconvert ( string , string )
updated conditional checks for DSpaceObject instances in SolrServiceCommunityCollectionItemFilterPlugin . java to ensure correct handling of IndexableDSpace
replaced sExemptOfPasscodeActivites . add ( AuthenticatorActivity . class ) with intent . FLAG _ ACTIVITY _ REORDER
fix : remove @ deprecate annotation from patternparameterconfigurator
changed the return type of ` beginDraggingWidget ` from void to boolean and added a null check for the drawable before calling ` beginDragging
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable the test due to LUCENE - 4488 issue
added null check for root and collected components in DynamicStyle . java to prevent potential NullPointerExceptions when root is null
[ java ] add the ability to write confusion matrix to a file in test classifier .
[ java ] fix npe in jmeterthread when there be no last sample .
added unit tests for ` getConnectedDevices ` and ` removeDevice ` methods in ` ShadowBluetoothHeadsetTest . java ` to ensure
rename propertybindingsupport . autowire to propertybindingsupport . autowired
added " clone " and " finalize " to the objectMethods set and introduced a new constant FINALIZE _ METHOD in ResultObjectProxy . java
added null checks for counters and write verification in IntegrationTestBigLinkedList . java to ensure tests do not perform invalid YARN configurations
add support for ` ` referencing _ objects . id ' ' and ` ` cangetinstanceinfo ' ' command
updated the service filtering logic in SamlIdPServicesManagerRegisteredServiceLocator to include a check for matching the service ID to ensure that the registered service
added a null check for the activity before executing the UI thread to avoid potential NullPointerExceptions when the activity is not initialized
corrected the spelling of " LOGGER " to " logger " in multiple files to improve code readability and consistency
added stringType property and getter methods in DatabaseAdaptor and JDBCSessionDataStore classes to allow subclasses to specify the string type for database operations
updated test cases in UIMAUpdateRequestProcessorTest . java to use a specific category instead of a specific language to improve clarity and maintainability of
refactor thread name management in CliDriver and SessionState classes to use a unified updateThreadName method to improve code readability and maintainability by
refactor TaskletAdapter class to improve code organization to enhance maintainability and readability of the code
dmn : add test for dmn - 2200 .
fix splash progress not work on mac
added a tooltip for the CGCP checkbox in RocketPanel . java to enhance user experience by providing a more descriptive tooltip for the
refactor EnumFactory and InterfaceFactory to use ` addType ( e ) ` instead of ` getTypes ( ) . add ( e ) `
added text and description parameter to FlutterRetargetAction , HotReloadFlutterApp , and HotReloadFlutterAppRetarget to
ggb - 179 : use stringtemplate . isstringtemplate ( ) instead of string . issimple ( )
change the value of the BRIGHTNESS _ FACTOR constant from intValue ( ) to doubleValue ( ) in BindingConstants . java to ensure accurate
refactored SSCMHistoryParser to improve handling of branch and revision parsing to enhance code readability and maintainability by reducing redundancy
added a boolean parameter ` isAdmin ` to the ` createUser ` method in ` HomekitAuthInfoImpl ` and implemented user listUsers method
added null checks for ` indexedWriteMethod ` and ` writeMethod ` in ` IndexedPropertyDescriptor ` , ` Introspector ` , and ` PropertyDescriptor `
updated debug log messages to use placeholder syntax for consistency to improve readability and maintainability of log messages
updated method signatures in Context , Request , and Response classes to improve clarity and consistency to enhance code readability and maintainability by standardizing method naming
add setcapabilitiesfromspongebuilder method to mixinitem
[ hotfix ] [ test ] fix flaky test in lifecycleutilstest
added checks for contract type before creating a second contract in Wallet . java and updated contract handling in GetContractServlet . java to ensure that the
added package - info . java files to the com . ibm . dtfj . image , runtime , and virtualization . management packages to improve
removed synchronized keyword from the add method in DocumentsWriterDeleteQueue to improve performance by avoiding unnecessary synchronization
added a check to ignore duplicates in JavadocTool . java and modified test arguments in T7091528 . java to ensure duplicates are ignored
changed the default value of STRIP _ IPV6 from " true " to " false " in HostPort . java to disable IPV6
added a parameter ` addNewUserParameters ` to the ` LoginServerTokenEndpointFilter ` constructor and updated the ` addNewUser ` method to
added a new language check in LanguageFactoryTest and modified language comparison logic in LanguageFactory and CPPParserTokenManager to enhance language validation and ensure
replaced instances of ` ThreadPoolExecutor ` with ` MoreExecutors . newSingleThreadExecutor ` across multiple files to improve code organization and maintainability by
added cache control and expiration headers in LoginService and FormAuthenticator classes to ensure proper handling of cache control and expiration dates in the login process
updated error logging to include the original exception message to improve debugging by providing more context on the error message
updated test class names from AllHSSFUtilTests to TestAreaReference , TestCellReference , TestRKUtil , and TestEmptyDocument to
refactor FetchHTTP2Test , FetchHTTP2Test , FetchHTTPTestBase , and FetchHTTPTestBase classes to improve code organization and maintainability
updated the handling of the classDirectory variable to check for null output before proceeding to avoid potential NullPointerExceptions during execution
added external resource control priority settings in Java2DRenderer . java to ensure proper access control in the output device
added error handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure JDK sometimes fails at some point to improve robustness by preventing
modified the ` HotspotThreadMBean ` variable to be ` final static ` and added a new method ` testCPUTime ` for CPU time validation
added checks for empty comments in TabsAndIndentsVisitor . java to ensure that comments are only processed when necessary
updated assertions in SimDistribStateManager and TestTriggerIntegration to increase the threshold for nodes and replicas in TestTriggerIntegration to improve accuracy of
replace ` equals ` method with ` equalsIgnoreCase ` for file path comparisons across multiple filter classes to ensure consistency in case - insensitive comparisons across
removed the ` getString ` method from the ` ShadowBundle ` class to simplify the code by eliminating unnecessary dependencies
refactor date formatting logic in TweetActivity to use a custom SimpleDateFormat instance to improve code readability and maintainability by centralizing date formatting
added a check for empty connections in StandardProcessSession to return an empty list if no connections are available
refactor keyboard focus handling in DetailFragment to use a dedicated method to improve code readability and maintainability
updated the way the extra class path is set based on the file ' s getCanonicalPath ( ) method to ensure the correct canonical path is used for
make coordmatrix . solve ( double [ ] , double [ ] matrixforsolve = = null , double [ ] [ ] matrixforsolve
added import statement for Message in GenericMessage . java to enable integration with Spring ' s Message class
refactor SQL query construction in PostgresConnector and MapReduceJobHistoryUpdater to use a new join method to improve code readability and maintainability
refactor file filter handling in AquaFileChooserUI to use a dedicated method to improve code readability and maintainability by encapsulating
fix race condition in p2ptransportmanager . createextension ( )
fix for bug 45380 - add return keyword in arrayptg . toformulastring ( )
updated import statements in PGtokenizerTest . java to use assertEquals and assertTrue for assertions to improve readability and maintainability of the test code
refactor Java2TypeScriptTranslator to improve variable handling for anonymous and parameter types to enhance type safety and clarity in variable declaration processing
updated PostgreSQL to handle auto - increment columns in PostgreSQL to ensure compatibility with PostgreSQL ' s auto - increment
simplified byte reading logic in DataInput . java to improve readability and maintainability of the code
removed duplicate assertions for VerticalPhysicalPixelSpacing and HorizontalPhysicalPixelSpacing in ImageParserTest . java to clean up the code and improve readability
updated the method call from ` getParent ( ) ` to ` getParent ( ) ` in ` Component . java ` to ensure the correct parent is assigned
updated import statements in multiple Java files for consistency to improve code readability and maintainability
replace ` ENGINE _ finish ` and ` ENGINE _ finish ` with ` ENGINE _ free ` in ` NativeCryptoTest . java `
added iteration event handling methods to multiple controller classes to improve event processing efficiency and maintainability of the code
added a finally block to release the HttpContent object in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent
added a call to deleteLogs ( ) in TestRecovery . java to ensure that logs are deleted before proceeding
added a check for " twitter : / / " URL before starting the URL in BrowserActivity to ensure that the URL is only launched when " twitter
[ java ] wait for host status in deploymentgrouptest to complete .
changed logResult from false to true in VisibilityController . java to enable the logging of labels allowed in the application
increased the maximum number of retries from 0 to 25 in RestTemplateRetryTests . java to reduce the number of retries used in the retry test
removed a print statement from TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java to clean up the code
added support for fractional resource types and their conversion methods to enhance resource handling capabilities for improved data management
removed the confirmation check for file writing in BasicFrame . java to simplify the code by eliminating unnecessary checks
update findNewerDependencyVersion to retrieve tag groupId and tagArtifactId from resolution results to improve clarity and accuracy of dependency version retrieval
hbase - 20224 add a test for quotaexceedtablequotainnamespace ( ) method in namespacestatemanager
refactor multiple token - related classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
refactor TestFuzzPreLoop class implementation to improve code readability and maintainability
added a check to set ` f0 ` to 0 if ` f0 ` is non - negative to ensure ` f0 ` is set to
removed the connectionCatalog variable and added a null check for pkColumn and fkColumn in SchemaRetriever . java and TableRetriever . java to streamline
fix a bug in inputbuffer . clearencoders ( ) and inputbuffer . getcharset ( ) .
added logic to allow empty screens based on Lawnchair preferences to enhance user experience by allowing users to specify empty screens based on user preferences
added a warning log for deprecated cucumber - needle and cucumber - jakarta - cdi in NeedleFactory . java to inform users that the
replaced ` TestActivityWithotherTheme ` with ` Theme ` and updated theme handling in ` ShadowThemeTest ` , ` ShadowArscAssetManager
updated test assertions to use ` Arrays . toString ( ) ` instead of ` Arrays . toString ( ) ` for better readability to improve code clarity
mariadb : remove dbmigration from ehistory2 . update ( )
updated conditional checks for GETPROTO and SETPROTOCHECK in CodeGenerator , Global , and ScriptObject classes to ensure proper handling of RPC and SETPROTO
updated the shuffle method in TestFilterDirectoryReader to include a random parameter to ensure consistent iteration order for readers
added conditional logic to retrieve the display name based on the user ' s name to improve user experience by allowing users to specify a known remote clar
updated the path format in CookieRetrievingCookieGenerator to use StringUtils . defaultIfBlank to ensure consistent path formatting across different environments
[ hotfix ] [ runtime ] fix checkstyle violation in jvmstatmodel
updated cacheName assignment to use getTotalBackupCount ( ) instead of getBackupCount ( ) in AbstractCacheService . java to ensure cacheName is
updated comparison logic in ValidationResult . java to use ' ve . pageNumber ' instead of ' ve . pageNumber ' to ensure correct comparison of
added a condition to check if the focused widget is not null before comparing it to improve robustness by preventing potential NullPointerExceptions
reformatted method signatures in SoundUtil . java for consistency to improve code readability and maintainability
refactor ` ApplePackageDescription ` to use ` AppleCxxPlatformsProvider ` instead of ` FlavorDomain < AppleCxxPlatform >
added a SQL query to the ClickHouseStatementTest class to validate the functionality of the SQL statement to ensure that the SQL statement correctly reflects the correct
renamed the method ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to improve
refactor EnglishPTBTreebankCorrector class to improve code readability to enhance maintainability and facilitate future development
added a new file ` TestGetLoggerNPE . java ` to implement a test for logging functionality to verify the behavior of the logger in a
added a ` data ` map to ` PathSharingContext ` , ` ScriptedDecideRule ` , and ` ScriptedDecideRule `
do n ' t throw espressoexception if the monitor do n ' t exist .
added support for a new " NEXTVAL FOR " value pattern in the NextValExpression class and updated related classes to handle it to enhance flexibility
improve error message when resource bundle be not pre - cached .
replaced ` drainTo ` method with ` drainTo ` and added a threshold check for pending writes in ` BoundedLocalCache ` to improve cache
added a new parameter for the Leverage Level in QuoineExchange and defined it in QuoineNewMarginOrderRequest to enable dynamic
added bound initialization method to PropertyDescriptor and created a new test class Test7192955 to ensure proper handling of bound properties in the bean class
changed the type of ` failsafeWidth ` and ` failsafeHeight ` from ` int ` to ` LwjglGraphics . SetDisplay
added a null check for the parent form before setting buttonsAwatingRelease to prevent potential NullPointerExceptions
refactor wrapWidth calculation to use a dedicated method to improve code readability and maintainability by centralizing width calculations
corrected the spelling of " argomento del parser " to " argomento del parser non deve essere nullo
replaced HashMap with LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper classes to maintain insertion order for paramValues
replace single quotes with String . format for string concatenation across multiple text classes to improve code readability and maintainability by using ` String . format `
replaced the retrieval of the namespace context with a direct call to getNamespace method to simplify the code and improve readability by eliminating unnecessary context retrieval
added a new boolean field ` nestedJoins ` to ` TestAll ` , ` TestBase ` , and ` TestNestedJoins ` to
cloudstack - 10265 : fix account _ type _ admin not be specify by root admin only .
added support for JavacFileManager in SourceFileManager and modified CompletionTaskProcesor constructor to include a cursor parameter to improve performance by reducing
added configuration settings for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to ensure
replaced JUnit assertions with Hamcrest assertions in KuduIOIT and XmlIOTest classes to improve readability and maintainability of the code
add miss @ nullable annotation to util . createhandler ( )
[ iotdb - 1439 ] fix memory leak in symbolmapreaderimpl . tostring ( ) .
removed debug print statements for termFilter and otherTermFilter to clean up the code and improve readability
replaced the ` Reflection . java ` class with ` TypeConverters . java ` and removed the ` TypeConverters . java ` file to simplify
refactored ThreadlessExecutor to use private methods for better encapsulation to improve code readability and maintainability by encapsulating
removed exception handling for IndexOutOfBoundsException in DateTimeFormatter . java and added a new test for formatting 2arg values in TestDateTimeParsing . java to
replace ` CHUNK _ LENGTH _ KB ` with ` CHUNK _ LENGTH _ KB ` across multiple files to improve clarity and
added a new case for WILDCARD in Types . java and created a new class T7034495 . java with generic interfaces and interfaces
remove unnecessary do - while loop in lotsofevents . java
[ hotfix ] fix typo in transclusiondecide rule .
[ micronaut ] remove version prefix from micronaut . java
added unit tests for new _ sheet and name definitions in TestBugs . java to ensure correct handling of the " Print _ Area " and "
updated MindIconFactory to conditionally display the description based on the presence of a slash to ensure that the description is properly formatted for better user experience
modified the ` onHomeIntent ` method to accept an ` internalStateHandled ` parameter to enhance functionality by allowing the ` onHomeIntent `
refactor the handling of the preferDependencyTree variable in CxxBuckConfig . java to improve clarity and maintainability of the code
added a activeTab parameter to the showDetails method across multiple activities to enhance functionality by allowing users to specify the active tab for file display
corrected the spelling of " $ apply " to " apply " in multiple files to improve code readability and maintain consistency in naming conventions
refactor MinimalEncoder and HighLevelEncodeTestCase to use a pseudorandomized state for better randomness to enhance the encoder ' s randomness
added required header and modified string formatting in SourceBuilder . java to improve readability and maintainability of the code
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure that the adapter reflects the current state of the adapter
removed the setDefaultWALSyncMode method from ShadowSQLiteConnection to simplify the code and improve maintainability
updated type checking in RemoveJavaDependenciesAdapter and added assertions in Collections . java to improve type safety and ensure correct handling of generic types in collections
remove unused getters from defaults3crtasyncclient
updated the expected output length in the doDudPasswordTest method from " ef677 " to " ef677 " and "
update hazelcasttestsupport to include content in the error message
graal : fix bug in graphbuilderphase . appendgoto ( true , false )
do n ' t use imagemanager . getexternalimage ( ) if there be no image
refactor SQLXML class to improve code readability to enhance maintainability and facilitate future updates
updated the ` getOrderBook ` method to include a ` limit ` parameter in ` YoBit ` and ` YoBitMarketDataService ` classes to
[ java ] rename stresshierarchyhierarchyexception to heapoomeexception
added StreamReadConstraints configuration in StandardDataFlow . java to enhance data processing capabilities by allowing customizable stream read constraints
updated the retrieval of engines from configuration to an empty string and modified the locking mechanism to ensure proper initialization of engines and avoid potential NullPointerExceptions
corrected the spelling of " FullIterator " to " Wheel " in TimerWheel . java and TimerWheelTest . java to improve code
added error handling for missing bug pattern in BugInstance . java to improve robustness by providing a clearer error message when a custom bug pattern is
updated the timeout duration from 3 seconds to 10 seconds in the assertTimeoutPreemptively method to improve code readability and maintainability by using a
changed the visibility of the uncomplete checklists menu item from true to false to disable the checklists option for better user experience
updated DefaultResultSetHandler to resolve DiscriminatedResultMap correctly and added a new Contract class to enhance result map resolution and improve test coverage
added null checks for defaultHome and unregistering the receiver in OverviewComponentObserver to ensure proper handling of null values and prevent potential NullPointerExceptions
removed the VertxGen annotation from PumpImpl . java to streamline code by eliminating unnecessary dependencies
removed unnecessary casting of ` FileDisplayActivity ` from method calls in ` FileDetailFragment ` and ` OCFileListFragment ` to simplify
added trimming of leading and trailing spaces in ConfigAttributeEditor and created a test for it in ConfigAttributeEditorTests to ensure proper handling of whitespace in
refactor ClassUsingAnotherAuxiliary , ClassUsingAuxiliary , SelfClassWithAux , and SelfClassWithA
[ gr - 12447 ] make the singlemodule reference public and add getunnamedmodule ( ) method to dynamichub
added a check for the first character of the ' pg _ ' string in DatabaseMetaData . java to determine the system table based on the presence of
[ googleapis ] deprecate the deprecated TIER _ ENTERPRISE _ PLUS _ VALUE in Agent . java and update
updated RQST _ FIELD _ DESC from " rqst " to " rqst " in ThriftHiveMetastore . java
added a new module - info . java file for the core module to define module exports and dependencies for various components
added handling for WRITING , WRITING , and INTERESTED flush states in SslConnection . java to ensure proper
log4j2 : fix npe in initializer error message
updated variable names and logic for server VM handling in ExecutionEnvironment . java and TestHelper . java to improve clarity and maintainability of the code
refactor operation classes for improved clarity to enhance maintainability and readability of the codebase
updated PGProperty to use " org . postgresql . ssl . LibPQFactory " instead of null to ensure compatibility with the latest Postgresql
disable testinterprocesssemaphore and testinterprocesssemaphore for now
added sorting functionality for theme keys in EditableResources . java to improve code readability and maintainability
added a new ` OSvTerminal ` class and modified ` TerminalFactory ` to support OSV CPUs in the terminal implementation to support OSV
added support for " . gr " files in ClassType . java to ensure compatibility with both gs and grs files
replaced HashMap with TreeMap for combined vectors in DrillTestWrapper . java to improve performance and readability of the test code
added a condition to the loop condition for processing names and values in XPathEntityProcessor . java to ensure that only valid names and values are processed
refactor WebSocketPolicy class to improve code readability to enhance maintainability and facilitate future updates
changed access modifier of ` readPhoneStatePermissionGranted ` and ` setReadWifiStatePermission ` methods from static to instance in multiple classes to allow
added support for ` performOriginBasedResolution ` and ` performDefaultBasedResolution ` in the ` resolveMessage ` method to enhance message resolution flexibility by
updated constructor parameters in AsmUtil . java to use ` asSubclass ` instead of ` TraceMethodVisitor ` and ` CheckClassAdapter ` to
added a new file ` LoggingAuditService . java ` that implements ` UAAAuditService ` for auditing user authentication to facilitate auditing of
updated the ` toTemperatureState ` method to accept a nullable ` Temperature ` parameter and added null checks in ` TadoZoneStateAdapter `
do n ' t create a proxy if there be no abstract class
camel - 14284 : camel - http - add http . proxyhost and http . proxyport system property http . proxyhost , http .
updated the MAX _ ENCODING _ VERSION from " 1.2 " to " 1.2 " to reflect the latest version of the template
added a call to ` jdkSerialFilter ( ) ` in ` System . java ` to enable the use of the ` jdkSerialFilter ( )
camel - 14284 : camel - jbang - improve log message for camel - core
removed the ` forceFinished ( true ) ` parameter from the ` forceFinishScroller ( true ) ` method across multiple animation classes to simplify the
updated method name from ` ensureRealtimeClusterIsSetUp ` to ` rawRealtimeTableConfig ` in ` PinotHelixResourceManager
added error handling methods and improved error reporting in ValidationReport , DisallowValidator , and RefTest classes to enhance error reporting and provide clearer error
updated the logic for retrieving inline QSB values in InvariantDeviceProfile . java and added new constants in InvariantDeviceProfile . java to improve
added exception handling to the createClassPath method in SortedArrayStringMapTest . java to improve error handling and ensure proper URL encoding for better
updated the regex pattern in the Given annotation from ' 10 ' to ' . * ' in TransformSteps . java to improve readability and maintainability
add null check for retina prop in Toolkit and PGraphicsJava2D to prevent potential NullPointerExceptions when the retina prop is null
replaced hardcoded timeout values with a variable ` timeoutMs ` in ` FaultToleranceTest . java ` to improve code readability and maintain
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in Environments . java to ensure the correct image URL is used for the environment
[ drools - 661 ] fix test failure on window due to memory leak in knowledgeagenttest
refactor AdditionalAnswers , AnswerFunctionalInterfaces , InvocationOnMock , and InvocationOnMock classes to improve code organization and maintainability
[ hotfix ] [ table - common ] add copyfile ( ) method to snapshottaker . copyfile ( )
rename ` appendToDescription ` method to ` getDescription ` in multiple document provider classes to improve clarity and consistency in naming conventions
updated device handling in LSTM , MxNDManager , and MxNDManager to use a singletonOrThrow ( ) method to
added a check for Xml . Document before visiting FindIndentXmlVisitor and FindLineFormatJavaVisitor instances to avoid potential ClassCastExceptions when processing XML
updated ` NotesHelperTest ` , ` GeocodeHelperTest ` , and ` ReminderHelperTest ` to use ` AndroidJUnit4 `
added new GasLimitRule and ParentGasLimitRule instances to CommonConfig . java to enhance rule management by allowing more control over gas limits
removed the ` setupData ( ) ` method from ` BaseAssumptionsRunnerTest ` and made the ` setupData ( ) ` method
rename ` autocommit ` variable to ` runInTransaction ` in ` ChangeSet . java ` and update related references in ` XMLChangeLogHandler
added null checks for endStream and listener in TripleServerStream . java to ensure proper resource management and prevent potential NullPointerExceptions
[ hotfix ] [ runtime ] use site . baseurl instead of . / .
added a new test method ` testIssue154 ` to ` SelectTest . java ` to verify SQL parsing and deparsing functionality to ensure
refactor Common class to improve code structure to enhance maintainability and readability of the code
refactor code to use try - with - resources for context layer handling to improve resource management and ensure proper resource management
[ hotfix ] [ javadoc ] fix typo in streamexecdeduplicate
added a warning log statement to the KafkaSubscriber class to improve error handling by providing more informative logging when sending kafka messages
( chore ) camel - spring - data - mapping - mapping - add isimmediate ( ) method to simpleelasticsearchpersistent
add setcoord ( ) and setcoord ( geopointnd , geocoordsys1d . setcoord ( geopointnd )
added velocity and swipe event handling logic in AskGestureEventsListener . java to improve responsiveness and responsiveness of gesture events
refactor comparison logic in NGramEstimator to improve readability and maintainability of the comparison logic
updated package imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` in multiple Java files to align with the new
updated the handling of folder icons in StatsLogCompatManager to include label state and cardinality to improve user experience by providing additional context for folder icons
replace ` getServerSlogan ( ) ` with ` getServerName ( ) ` in ` ThemeUtils . java ` to improve clarity and consistency in
added a new file ` TestSkeletonPredicates . java ` containing a test class ` TestSkeletonPredicates . java ` to test the use of
refactor SelectionHighlighter to improve equality and hash code methods to enhance code readability and maintainability by reducing redundancy
added a new ` StringResultConverter ` class and refactored ` AsmRuntime ` and ` AsmUtil ` classes to use it to
[ camel - 19751 ] [ camel - 19751 ] disable camel - producer test on camel - 19751
updated the condition in WaitForSingleObject from ! = 0 to ! = 0 in JansiWinSysTerminal . java to ensure proper handling of the
added null checks and limit logic for buffers in BufferUtils . java to ensure robust buffer management and prevent potential NullPointerExceptions
updated the data directory path from " data / " to " data " in TestSolrDiscoveryProperties . java to ensure consistent file path formatting across different
updated OS detection logic in AutoUpdaterServerProperties . java to support both Windows and macOS versions to ensure compatibility with macOS and pre - 10
updated Lock class to replace ` File ` with ` lockName ` and changed the type of ` lockFile ` to ` lockName ` to improve
update appIcon variable from " android . widget . TextView " to " apps _ view " and update visibility bounds from centerY to top to improve
replaced instances of Invocable . Invocable . InvocationType with ClientDatagramEndPoint . this in ClientDatagramEndPoint . java to improve
updated the GET _ STEP _ EXECUTIONS string format to order by STEP _ EXECUTION _ ID to improve clarity
updated button handling logic in LwjglInput . java to return - 1 instead of returning - 1 and added a check for unknown buttons to
[ hotfix ] [ test ] add request parameter to taskrestreposit
removed unused logger imports and replaced it with a static final logger in multiple builder classes to improve code readability and maintainability
removed the ` @ public ` modifier from ` SsoAccessTokenProvider ` methods and added a new test for ` cachedTokenFile _ AboutToExpire
disable gwc test on macos
[ hotfix ] [ test ] fix flaky ocimetricscdiextensiontest
reformatted code for consistency in JFrame . java to improve readability and maintainability of the code
added a null check for the connection before executing the statement in LibraryScanner . java to avoid potential NullPointerExceptions when the connection is not initialized
replaced ` metricsContext ` with ` solrMetricsContext ` in ` SuggestComponent . java ` to streamline metrics handling by using ` solrMetrics
updated string concatenation for file and folder handling in OCFileListFragment . java to improve readability and maintainability of the code
[ scp ] use iterable < keypair > instead of array in loadkeys ( )
refactor SourceVersion class to improve code readability to enhance maintainability and facilitate future updates
added a new file ` ThreadFactoryTest . java ` to test the ` MyThreadFactory ` functionality to ensure that the ` MyThreadFactory `
refactor lock period retrieval in DelegateResourceActuator and ProposalUtil to use a dedicated method to improve code readability and maintainability by
added a new instance of TicketModel in EditTicketPage . java to initialize the ticket model with a new instance
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable dimiss apps from predicted list
updated constructors in multiple assertion classes to include Class < S > parameter across multiple assertion classes to enhance flexibility by allowing different assertion types to be passed
updated menu item constants and added quote functionality in TweetActivity to enhance user experience by allowing quotes in the tweet menu
[ java ] remove redundant call to interruptlock . lock ( ) in jmeterthread
[ java ] add support for direct playback with decrypt - only codec .
added a conditional check for the result before offering and closing the consumer to ensure failure is only accepted when the result is not null
corrected the spelling of " Stiller Modus " to " Silent - Modus " in XSLTErrorResources _ de . java and
added ThreadSafe annotation to CheckpointsCleaner . java to ensure thread safety during tests
replaced ` Observer ` with ` Subscriber ` in ` MockRestAdapter ` , ` RestAdapter ` , and ` MockRestAdapterTest ` to
reformatted code in ComponentPresetManager . java for consistency to improve readability and maintainability of the code
added a new configuration option for unique column names in Hive and TestJdbcDriver2 to enable unique column names for improved flexibility in handling unique column names
do n ' t update the audio effect if the voice be in the correct state .
added a validation check for invalid sessions in Session . java and updated test cases in SessionHandlerTest . java to ensure that invalid sessions are properly handled
remove exceptionhelper , it ' s no longer need
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 648 . cgi ?
set codec to alwaysPostingsFormat ( Lucene41PostingsFormat ( ) ) in TestBlockPostingsFormat3 . java to
added logging for empty checkpoint range headers in CheckpointRangeHeaders . java to improve debugging and traceability of checkpoint range headers
added asymmetric wrapper algorithm name for RSA / ECB / OAEPPadding and improved error handling in the createAlgorithmParameters method to enhance security by
corrected the platform name from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple Java files to ensure consistency in
added exception handling for SecurityException in DebugSourcesResolver to improve robustness by handling potential SecurityExceptions during URI resolution
removed unnecessary check for ` OS . IS _ UNIX _ SOCKET ` in ` AbstractTest . java ` to improve code readability and maintain
updated error handling in FileUploadUtils , ControllerConf , UploadRefreshDeleteIntegrationTest , and UploadRefreshDeleteIntegrationTest classes to improve error reporting and ensure accurate
replaced instances of ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` across multiple files to improve memory management and ensure proper memory management during buffer creation
changed the default value of USE _ PIPELINE _ DOWNLOADER from false to true to enable the downloader by default
updated DST _ OFFSET assignment in SimpleDateFormat . java and added a new Bug7130335 . java file for testing date formatting to
updated variable declarations to be final in AllAppsView . java to improve immutability and ensure immutability of variables
cloudstack - 10265 : fix bug in virtualnetworkappliancemanagerimpl . getdefaulthypervisor ( )
refactor StringBuffer class to improve code readability to enhance maintainability and facilitate future updates
added a new variable ` rule . uid ` to the ` RuleResource ` class to ensure the correct rule UID is set for the rule
added null check for listener before removing service configuration listeners in RegistryProtocol . java to avoid potential NullPointerExceptions when listener is null
added a new property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class to apply pretty print formatting to the output
make access _ table public in instrumentbranchphase . java public
updated error message from " Resource " to " No resources found at location " in DataSourceInitializer and DataSourceInitializerInvokerTests to improve clarity of error reporting
refactored the ` doRun ` method in ` TcpTransport ` and ` XmppTransport ` to use a dedicated ` doRun ` method
updated multiple Java classes including EventDirContext , Control , ControlFactory , ExtendedResponse , UnsolicitedNotification , and DocFlavor to improve
added ` isUpgradeSuspended ` parameter to ` skipFailure ` and ` isUpgradeSuspended ` variables in ` AmbariManagementControllerImpl
removed the copyright statement from FindsByCssSelector . java to clean up the code and improve readability
removed the declaration of wfields in Resolver . java to streamline the code by eliminating unnecessary variable declaration
added default key size settings for OAuth properties in EncryptionJwtCryptoProperties and OAuthProperties classes to ensure proper configuration of OAuth properties for encryption and signing
hbase - 16464 add miss getcolfamilycount ( ) method to htabledescriptor . getcolfamilycount ( )
updated the alias check logic in SampleWebJspApplicationTests . java to use a lambda expression instead of a custom AllowedResourceAliasChecker to
updated multiple Java files related to ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and package - info to improve code organization and maintainability
[ java ] add reset ( ) method to cluster interface , and add reset ( ) method to cluster agent
corrected the incrementing of the current chunk ID in ChunkedWriter . java to ensure correct processing of chunked files
added a new abstract class AbstractJobExecutor that implements JobExecutor to facilitate job execution handling in batch processing
updated replay logic in RecoveryStrategy to use a future variable instead of a return statement to improve performance by avoiding unnecessary return statements
rename ` largeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in naming conventions
added a new method ` getServiceIds ( ) ` to ` AbstractConsulClient ` to retrieve service IDs based on configuration settings to ensure
replaced ` Math . random ( ) ` with ` SecureRandom ( ) . nextInt ( ) ` for hashSalt generation to improve security by using a more
do n ' t print remote reachability trace if parsing fails .
removed duplicate assignment of currentStart and baselineStart in TimeOnTimeComparisonHandler . java to improve code clarity and maintainability
added support for abstract methods in CallsRealMethods and created a new GloballyConfiguredAnswer class in CreatingMocksWithConstructorTest to enhance
refactor ` checkPackageAccess ` method to accept a ` Class ` parameter and improve access checks to enhance security by ensuring only valid class types are
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added error configuration setup to enhance test coverage and ensure proper error configuration
replaced instances of ` dtm ` with ` model ` in ` ContribTableModel ` to improve code clarity and maintainability by using a more descript
added REQUEST _ HAS _ TIS handling to QuickstepTestInformationHandler , TestInformationHandler , and LauncherInstrumentation classes to ensure proper handling of
refactor connection action handling in ConnectAction . java to use Mutex . EVENT . writeAccess for improved readability to enhance code maintainability and
updated the data types of ` showRulesResult ` and ` computeShowRules ` from ` ImmutableMap < String , ShowOptions > ` to ` Build
[ java ] add ` ` javaemul . internal ' ' , ` ` javaemul . internal ' ' , ` ` javaemul
added support for HOME and END cases in the Less class to enhance functionality to handle additional character cases for better user experience
removed synchronized block for retrieving connected plots in PlotHandler . java to simplify the code and improve performance by eliminating unnecessary synchronization
refactor share intent creation to use a new intent creation method to improve code readability and maintainability by reducing redundancy
changed the access modifier of the constructor from public to package - private to restrict access to the constructor for better encapsulation
added basicConstraints configuration to certGen to enable basic constraints for cert generation
added a new test method ` testFixedNestedTransform ` in ` TextVisualRegressionTest . java ` to ` TextVisualRegressionTest . java `
removed conditional calls to ` field . multiValued ( ) ` in ` TrieDateField . java ` and ` TrieField . java ` to
removed the TaskbarStateHandler class and its associated methods from BaseQuickstepLauncher to streamline the codebase by eliminating unnecessary dependencies
added a new file ` ArrayLength . java ` that tests the ` getDeclaredFields ( ) ` and ` getDeclaredFields ( ) ` methods to ensure
[ hotfix ] [ test ] add log for destroyforcibly ( ) to hzstartit
updated ApplicationSettingsService to use @ PostConstruct annotation and refactored save method to use ApplicationScoped instead of @ Singleton to improve thread safety and
updated assertion from ` value > = 0 ` to ` value > 0 ` in ` Safepoint . java ` to ensure correct handling of negative values
updated threadNameField to use " Ljava / lang / String ; " instead of " [ C " and changed return type from charArrayToString
updated DEFAULT _ RAND _ SEED from currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and HnswGraphBuilder
pdfbox - 4071 : make stroke object a protected field , a suggest by valerybokov
refactored the ` expandDynamicStar ` method to use a dedicated ` expandDynamicStar ` method to improve code readability and maintainability by
added a new method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class to determine if a record is a container record to
added import for PMS and set a status warning icon in HTTPServer . java to enable customizable status codes for better user experience
refactor : use event . getmodifiersex ( ) instead of event . getmodifiers ( )
use cycles _ 3 instead of cycles _ 6 in amd64countleadingzerosnode
camel - 14297 : fix npe when disposition notification be not set . thanks to jbellis for reporting .
refactor Locale class to improve locale handling to enhance code readability and maintainability
added a clearLog button and a clear ( ) method to ErrorConsoleController and updated ErrorConsoleViewModel to utilize it to enhance log management functionality
updated initialization of mRecentsAnimationController in RecentsView . java to ensure proper initialization of mRecentsAnimationController
updated imports and method signatures in Debug . java , CaptionMap . java , CaptionMap . java , and DummyCaptionMap . java
added connection pooling support and increased execution count in test files to improve performance and resource management during concurrent execution in tests
alexeibarantsev : add operadriver capability to the defaultdriversessions
updated exception handling from MalformedURLException to Exception in ManageJournalsPanel . java to improve error handling and provide clearer feedback for download failures
updated LifxProduct . java to include new product types for Warm , PRODUCT _ 114 , PRODUCT _ 124 , PRODUCT
added asynchronous request handling for replica creation in OverseerCollectionProcessor and CollectionsHandler classes to enhance functionality by allowing asynchronous processing of replicas
refactor PostgresDatabase and PostgresDatabaseTest to use assertPrimaryKeyName method for consistency to improve code readability and maintainability
updated LogPanel initialization to use ` getRepositoryModel ( ) . HEAD ` instead of ` null ` for ` logPanel ` and ` Summary
fix a bug in skeletoninterbonewire . getmodelspacerotation ( ) .
added a ` browserDestroy ` method to the ` AndroidImplementation ` class and modified the ` deinitialize ` method in ` AndroidImplementation . java `
added a wait for the active collection in AutoScalingHandlerTest . java to ensure that the read API test violations are checked before proceeding
refactor screen terminal handling in ScreenTerminal . java and Tmux . java to improve code readability and maintainability to enhance readability and ensure
updated controller state checks in SoftResetAction . java to use ControllerState . IDLE , HOLD , and CHECK in SoftResetAction . java
disable on - disc stream cache to speed up texture pack reload
added handling for retrieving the parent folder in Request and RequestV2 classes to ensure proper resource retrieval for media renderers
fix typo : ` ` ispersistent ' ' - > ` ` persistent ' '
replaced the ` deleteOnExit ( ) ` method with a custom ` close ( ) ` method in the ` FileOutputStream ` class to ensure proper resource management
added exception handling for RestClientException in StandardGitHubRepository . java to improve robustness by handling unauthorized responses gracefully
log4j2 - 1334 add messagefactory2adapter . getOriginal ( ) to the messagefactory2adapter interface
added @ SuppressWarnings ( " BanSerializableRead " ) annotation to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related to
updated regex pattern from " [ 0 - 9 ] { 1 , 2 } " to " [ 0 - 9 ] { 1 , 3 } "
updated the initial delay and dismiss delay settings in ExtractionModelFrame . java to improve delay management for better user experience
refactor ProjectCommand to use an ImmutableSet for target graph and targets instead of direct calls to getBuildTargets to improve code readability and maintainability
added timezone handling in TimeTest . java to ensure correct formatting of time zones in tests
[ java ] fix typo in javadoc of mediasessionconnector
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 13939 - fix
updated the string formatting for accuracy in GpsLoggingService . java to improve readability and maintainability of the code
added a new constant ` SPECIFIC _ PARAM _ FUTURES _ ENABLED ` and modified ` BinanceTradeService ` and ` Bin
update adminaccountmanagementhelper to use instructorcoursestable instead of account
set accept queue size to maxWorkerThreads in ThriftHttpCLIService to ensure proper handling of queue sizes for better performance
replaced direct calls to ` getClass ( ) . getName ( ) ` with a static constant ` PROPERTY _ DISABLE _ WATCHER ` to
added a check to return true if the scheme is " ssl " in JmsFactory . java to ensure proper handling of SSL protocols in the
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and updated test cases in ` TestWindowFunctions . java
update calculation of duration in GCInspector . java to improve accuracy of duration calculation
fix nodewithdirective . getcomment ( ) to return empty JavadocComment instead of an optional .
replaced ` Unsafe ` usage with ` isOsx ` method in ` ReserveMemory ` and updated memory management logic in ` WhiteBox `
added multiple calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure proper handling of
hbase - 16297 addendum : make procid protect so that it can be use by hbaseadmin
updated the invocation of WSDLServiceFactoryBean to accept a Class < ? > parameter and added a constructor in WSDLServiceFactoryBean to allow
refactor YamlChangeLogSerializer to use a list of maps instead of a single writer to improve performance and readability of the JSON output
updated print statements to include newline characters in SchemaPrinter . java to improve readability and maintainability of the output
refactor ChunkLoc and MCEDIT _ SCHEMATIC handling in DebugRoadRegen . java and SchematicHandler . java to improve code
updated the instantiation of HomeFragmentNowPlayingRow and footer to use the current activity instead of the current context to ensure the correct context is used for
hhh - 16464 : add ` ` native ' ' strategy to the ` ` strategy ' ' field in the ` ` strategy ' '
removed the ` country ` parameter from the ` getSystemTimeZoneID ` method and its usage in ` TimeZone . java ` to simplify the method signature and
updated BZip2Codec to include position and remaining data in output and modified ByteBuffer initialization in TestBZip2Codec to improve data handling and ensure
do n ' t start the console if it ' s not show .
added a new constant ` VALUE _ TYPE _ EMPTY ` and modified the type initialization logic in ` Value . java ` and ` Value . java `
replaced ` = = ` with ` . equals ( ) ` for group comparisons in ` GroupManager . java ` to improve code readability and
refactor Liquibase classes to improve code organization to enhance maintainability and readability of the code
refactor SimplexNoise class to improve code readability to enhance maintainability and facilitate future updates
added a static factory method ` newInstanceExact ` to ` TargetGraphFactory ` and updated ` VersionedTargetGraphBuilderTest ` to use it to
fix typo in getminrowsize ( ) , getmaxrowsize ( ) , and getmeanrowsize ( )
added a ArtifactVersionAdapter to the Gson builder and registered it in MetadataCollection . java , and changed parentMod and childMods in ModMetadata
added logic to manage the presence of a previous array in NativeArray . java to ensure proper handling of previous elements in the object
replaced storageManager . saveNewFile with mStorageManager . getFileByPath and set file parent ID to mCurrentUpload . getFile ( ) .
added a new file UTF8ReaderBug . java to test XML parsing functionality to ensure proper handling of supplementary characters in XML parsing
added unit test base on user forum issue .
updated references from " ethbtc @ ethbtc @ ethbtc @ ethbtc @ ethbtc @
added a resetAllocation method to the Wrapper class and initialized initialAllocation and maxAllocation in SimpleParallelizer to ensure that initialAllocation and maxAllocation is
removed the import of AssertTree from AmbariManagementControllerTest . java to clean up the code and improve readability
added synchronization to ` System . getProperties ( ) ` and ` System . getProperties ( ) ` in ` Agent . java ` , and created a new
refactor ModelUtils to improve code organization to enhance maintainability and readability of the code
refactor AbstractDoubleArrayAssert class to improve code readability to enhance maintainability and facilitate future updates
added bounds checking for width and height calculations in Legend . java to prevent potential ArrayIndexOutOfBoundsExceptions during width and height calculations
added ` testDelay ( ) ` and ` testAbort ( ) ` methods to ` CodeFirstSpringmvcIntf ` , ` CodeFirst
replaced ` get ( ) ` with ` getValues ( ) ` and modified ` addTermFrequencies ` method to use an array of values
replaced ` ruleResolver . requireRule ( ) ` with ` new BuildTargetSourcePath ( ) ` in ` Omnibus . java ` to simplify
add a chat style to the botania . versioning . disabled flag to improve user experience by allowing the botania . versioning . disabled flag
changed ` filePaths ` from ` Collection ` to ` List ` and added ` numberOfFiles ` variable in ` MediaFolder ` , ` MediaProvider
removed the " - b " argument from the command line arguments in AidlStep . java and GenAidlTest . java to simplify the
add test case for issue79 - add test case to verify that the database do n ' t delete an obligation
added a TODO comment to the FakeHttpLayer class to improve code readability and maintainability
replaced ` handleError ( cause ) ` with ` revokeLeadership ( ) ` and ` listener . handleError ( cause ) ` in ` EmbeddedLeaderService
refactored compositediscoveryclient to use flowable . fromarray instead of stream .
refactored method names from ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] [ config ] add description to jobmanageroptions for job computation recover failure
refactor ` updateNoWidgetsView ` method to ` updateRecyclerViewVisibility ` and update related visibility logic in ` WidgetsFullSheet . java
added error handling for class loading in XmlUtil . java and improved logging in MultiVersionXmlParserTest . java to ensure proper handling of ClassNotFoundException
refactor test methods in AuditAliasCommandIntegrationTest to use a setup method to improve code readability and maintainability by reducing duplication
added logging statements to WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to ensure that recommended widgets are displayed when inflating
camel - 14284 : camel - cxf : disable camel - cxf test that do n ' t support the invocation without parameter .
added a try - catch block around the update ( ) method call in CachedStore . java to handle potential exceptions during periodical refresh failures
updated ChainingAuditPrincipalIdProvider to use Lombok ' s RequiredArgsConstructor and refactored providers initialization in CasCoreAuditConfiguration
added a method to check default background fills in HSSFCellStyle and HSSFFont classes to ensure that default background fills are
refactor ZonedDateTimeFormatterBenchmark class to improve code readability to enhance maintainability and facilitate future updates
added a new method ` shouldBufferUpdate ` to ` DistributedUpdateProcessor ` and created a corresponding test class ` DistributedUpdateProcessorTest `
added a condition to check if the rocket ' s stage is null in SimulationListHandler . java to ensure proper handling of null motor scenarios
[ worldedit ] add ` ` < toreplaceid > ' ' to the ` ` / editreplace ' ' command .
refactor ExtendedMasterSecretExtension class to improve code organization to enhance maintainability and readability of the code
made the ` processor ` variable final in ` AndroidInput . java ` to ensure immutability of the ` InputProcessor ` variable
added a call to onWriteFailed when the end of a stream is reached to ensure proper handling of write failures during stream writing
added " CUBE " to MySQLDatabase . java to support MySQL database operations
added a try - catch block around the ` rm ` method call in ` TestUtil . java ` to handle potential ` IOException ` during resource cleanup
renamed ` ExperimentalRobolectricTestRunner ` and ` HelperTestRunner ` classes to ` MultiApiRobolectricTestRunner ` and ` TestRunner
replaced reflection - based hostname verification with direct calls to getField ( ) in DefaultOkHttpClientFactoryTest . java to improve code readability and maintain
refactor BatchUpdateException , PreparedStatement , and Statement classes for improved clarity to enhance code readability and maintainability
added a null check for the os variable in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions during execution
ggb - 271 fix for bug where av parent be n ' t a part of av .
updated the ` jailerMain ` method to include a ` fromCli ` parameter and modified the ` progressListener ` method to include a ` from
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future updates
added a new preference for " pull _ unread " in the sharedPreferences to store the unread status of the unread pull notification
do n ' t replace the input if the parent object be an object , so we do n ' t need to remove it .
updated Box2DTest , Pong , Pong , OrthographicCamera , OrthographicCamera , and OrthographicCamera classes to
refactor layout manager initialization and initialization logic in ViewPostDetailFragment . java to improve null safety and prevent potential NullPointerExceptions
change log level from trace to warn in CLIService . java to improve logging clarity by using a more descriptive log level
add a debug message to the jimple body builder to make it clear that the method be not abstract .
ggb - 271 fix for textfield click on ie10plus
updated the ` getNotificationUsers ` method to include ` deviceId ` as a parameter and modified user retrieval logic to include device ID to enhance user
updated the base URL in CGIARProvider to use SRT - ZIP / SRTM _ V41 / SRTM _ Data _ Geo
updated MotifFileChooserUI to remove property change listeners and added a new test class for bug6520101 to ensure proper event handling and
changed return types of handle and doGet methods from void to boolean in multiple UI classes to ensure consistent behavior across UI components
refactor methods in BuildRuleResolver to replace ` fromNullable ` with ` getRuleOptional ` and ` getRuleOptionalWithType ` with `
set the visibility of the transportSpinner to GONE based on the makingShortcut flag to improve user experience by hiding the transport spinner when necessary
added null check for attributes _ field in Attr . java and created two new classes T7043371 . java and T7073477
refactor backPressed and backPressed methods to return boolean values instead of void to improve code robustness by avoiding unnecessary method calls
added a new attribute for long view index enabled in QueryServices , QueryServicesOptions , and MetaDataClient classes to allow configuration of the long view index
updated the string format from " V " to " v " in SDRTrunk . java to ensure consistent formatting of the output
replaced direct path resolution with StringUtils . cleanPath method in PrivateKeyParserTests . java to improve code readability and maintainability by using a consistent clean
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method to simplify the method signature by eliminating unnecessary parameters
updated IndexWriterConfig version from LUCENE _ 40 to TEST _ VERSION _ CURRENT in TestAddIndexes . java to ensure compatibility with
hbase - 16413 importtsv : disable column family check if no strict column family be specify
[ java ] rename logrecordingchannel to logsubscriptionid for clarity .
replaced ` startActivity ( intent ) ` with ` startActivitySafely ( intent , " startApplicationDetailsActivity " ) ` and added voice button proxy functionality
added a check to return early if the first element of the JSON node is empty to ensure proper handling of special characters in the JSON node
refactor Procedure class to improve code structure to enhance maintainability and readability of the code
added Locale . getDefault ( ) and getSystemClassLoader ( ) parameters to ResourceBundle . getBundle ( rbName ) calls in Toolkit . java and Window . java
[ j2kt ] add backend . normalizearraycreationskietlin to handle new array literal
added validation for term enum forwarding in PerSegmentSingleValuedFaceting . java and modified counting logic in PerSegmentSingleValuedFaceting
fix ` ` authorlist ' ' to be non - nullable , not optional .
added a new file ` OSGiTest . java ` and a corresponding test class ` OSGiTest . java ` to validate the functionality
refactor service enabling logic into a separate method ` isDependentServiceEnableable ` to improve code readability and maintainability by encapsulating
hbase - 16464 htable . setautoflush ( ) should use setautoflushto ( ) instead of setautoflush ( )
fix : cast ifelement . getelsestatement ( ) to ctstatement .
added a method ` hasUserData ( ) ` to ` SimpleFeatureImpl ` and corresponding tests in ` Property ` and ` SimpleFeatureImplTest `
removed HiveException from method signatures in DDLPlanUtils and ExplainTask classes to simplify exception handling by eliminating unnecessary exceptions
refactor RelyingPartyRegistration class to improve code organization to enhance maintainability and readability of the code
removed the ` enableLogging ` method from ` JavaCompiler . java ` to streamline logging configuration by eliminating unnecessary logging functionality
added a new file ` InJavaSourceSet . java ` that implements an ` InJavaSourceSet ` class to handle Java source set parsing to
updated the resource path for the WFPC2u5780205r . fits file in TestGDALParser . java to ensure
added a static method ` createGetter ` to the ` ReflectionHelper ` class to provide a way to create getters with specified attributes
removed the conditional check for external storage in DirectUpload . java to simplify the code and improve readability
added a ` INDEXER _ NO _ COMMIT ` constant to ` IndexerMapReduce ` , ` IndexerOutputFormat ` , and ` Object
cloudstack - 10265 : make disk offering id optional for createvolume api .
updated comments in ToHtml . java and BaseTestCellComment . java to indicate that the content variable is never null and modified assertions in BaseTest
added null checks for ` amountToAdd ` and ` amountToSubtract ` types in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes
added a new file ` Issue382 . java ` to handle specific error types in ServerFeature to ensure proper handling of specific error scenarios in
replaced the static signum method with a static signum method in PositionUtils . java to simplify code and improve readability
added a conditional statement to hide the text view in AttachmentAdapter to ensure the text is displayed when a specific condition is met
fix ( ctimport ) : add support for ctreference . getfield ( ) and getfield ( ) .
[ java ] use lambda instead of : : getprofile ( ) in firefoxdriverservice . java
make liquidblock . liquidblock extend blockpickup , close # 54691
added a check to return early if the exception log is empty in AMQ2902Test . java to avoid unnecessary execution when the log is not
updated time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to reflect the correct time zone for better
refactor DistinctErrorLog to remove unused parameters and simplify method signatures to improve code readability and maintainability by reducing redundancy
updated ` TEST _ NIGHTLY ` , ` TEST _ WEEKLY ` , and ` TEST _ BADAPPLES ` to
renamed the method ` createLogger ( ) ` to ` getOrCreateLogger ( ) ` and updated logger initialization logic in ` SQLEditorSupport . java `
added denyaccess ( ) method and proxy to the GraalContext class to enhance security by restricting access to specific classes and methods
pgraphics2 : use raster . getdataelements ( ) and getset ( ) instead of image . getrgb ( ) .
updated the method call to include partition and transactional properties in HiveAbstractReader . java to ensure proper retrieval of transactional properties based on the partition
added a new variable ` mLastOverlaySroll ` and modified the calculation for the ` shouldScrollOverlay ` variable to improve overlay handling and ensure
hhh - 16464 - add batchbuilderimpl , unmodifiablebatchbuilderinitiator , and unmodifiablebatchbuilderinitiator
improve error message when analysis error be reach during analysis
added a new test method ` spyingOnAClassRetainsStateTest ` to ` PartialMockingRetainsStateDemo ` to ensure
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to validate SQL parsing with brackets and
added error handling for action execution in SecurityUtil . java to improve robustness by preventing null pointer exceptions during action execution
replaced direct calls to ` alGetError ( ) ` with a variable ` errorCode ` in ` OpenALMusic . java ` and ` OpenAL
camel - 14284 : camel - slack - resolve parameter should return the resolved value instead of null .
update rexnodeconverter to use precision / scale instead of min / max _ long _ bi
updated null checks for vendor , device , and device properties in WebAuthnMultifactorDeviceProviderAction . java to ensure non - null values are
updated the assertion in WalletTestAccount003 . java to use the current timestamp instead of a hardcoded string to improve readability and
replaced AxialStage with AxialStage and refactored selection handling in DesignPanel to improve code readability and maintainability by reducing
added a long running time parameter to the Args class to enable configuration of the long running time for the application
added a new class ` Ideas _ 2012 _ LOW ` and updated ` PriorityAdjustment . AT _ MOST _ MEDIUM ` to
updated import statements and error handling in HttpServerProvider , ScriptEngineManager , and FtpClientProvider classes to improve code clarity and maintainability by using a
fix xml3encodingtest to use toplainstring ( ) instead of string . tostring ( ) .
updated assertions in TestRestClientRequestImpl . java for consistency to improve readability and maintainability of the code
updated the condition to check for referenceDatabase in MissingUniqueConstraintChangeGenerator . java to ensure that the comparison database is not equal to the comparison database
removed the ` addAndroidConstants ` method and updated the proguard configuration handling logic in ` IjProjectTemplateDataPreparer . java ` to
replaced ` assertEquals ` calls with ` await ( ) . atMost ( 5 , TimeUnit . SECONDS ) . await ( ) . atMost ( )
updated the ` ChromeTraceBuildListener ` and ` ChromeTraceBuildListenerTest ` to include user arguments and timestamp in the build configuration to enhance the
[ gr - 16335 ] make localizationsupport . getresourcebundle ( ) return a list of resource bundle
corrected the spelling of " match limit " in the log message to improve code readability and maintainability
added a new file ` TheRockMetaDataDemo . java ` that demonstrates the usage of the ` TheRockExchange ` to demonstrate the usage of
changed class names from ` FloatingDecimal ` , ` FormattedFloatingDecimal ` , and ` ParseDouble ` to ` strictfp ` to
removed the unparseIdentifier method call from columnNamesBuilder to simplify the code and improve readability
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and modified ` BlockStatementTemplateGenerator ` to use a cursor
added a check for synthetic static classes in InstantiateStaticClass and implemented a test3 method in Bug1282 to ensure that synthetic static classes are not
replaced ` projectFilesystem . getPathForRelativePath ( basePath ) ` with ` basePath ` in ` WorkspaceAndProjectGenerator . java ` to simplify the code
added handling for pending rescues in IkStepDefinition . java to improve handling of pending operations in the ioke process
changed the visibility of the ` equals ` and ` hashCode ` methods from ` final ` to ` equals ` and ` hashCode ` across multiple type classes
added a new method ` getSyncLevel ` to retrieve the ` SyncLevel ` enum and implemented a method to retrieve the default sync level to improve
[ hotfix ] [ test ] use hamcrest assertion instead of static final in controlcommandstest
added a condition to check if the slice state is not RECOVERY in the RecoveryStrategy to ensure that only the RECOVERY state
updated the order of parameters in the create method call in opencv _ core . java to improve code readability and maintainability
added sdkPath field to AppleBundle and SwiftStdlibStep classes and modified makeProcessExecutorParams method to accept a context parameter to enhance flexibility in
[ hotfix ] [ runtime ] remove writewritelock from transientblobcleanuptask
cloudstack - 10284 : fix typo in log message .
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code readability and maintainability
added conversion logic for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure proper handling of
refactor BetterBlockPos class to improve code structure to enhance maintainability and readability of the code
updated the method to retrieve the proxy from the class loader instead of the proxy to ensure proper proxy retrieval based on the class loader ' s classloader
refactor version handling in MainWindow and related classes to use a dedicated method for showing nightly warnings to improve code readability and maintainability by
added OracleDatabase checks and modified statement processing logic in LoggingExecutor and JdbcExecutor to ensure proper handling of trailing characters in SQL statements
add default value analysis feature for nullderef . assumensp
updated the port configuration in MainTest . java to use a formatted string to improve readability and maintainability of the test code
updated BLOB _ SIZE ,PLAY _ MARGIN , SLIDER _ MARGIN , SLIDER _ MARGIN , and
added multifactor authentication provider bypass configuration to DuoSecurityMultifactorProviderBypassConfiguration to enhance security by allowing multifactor authentication provider bypasses
removed unnecessary parameters from findPositionForNewNodeBestAreaFit and findPositionForNewNodeContactPoint methods to improve code readability and maintainability
updated import statements in KModuleXSDTest , GenericKieSessionMonitoringMXBean , ObjectValueMapXmlAdapter , StringKeyStringValueMap
added methods to set and retrieve the help page in PMS . java and refactored editor pane update logic in LooksFrame . java to
added GeocodeProviderFactory and Constants classes for geocoding functionality in the application to enhance geocoding capabilities for the Omni Notes Beta application
updated import statements for CharArraySet from ` org . apache . lucene . analysis . util . CharArraySet ` to ` org . apache .
replaced ` ExpectedException . none ( ) ` with ` testConstructorException ` and added a new test method ` testConstructorException ` in ` Option
updated the ` GATEWAY _ SERVER _ ID ` constant to use ` Protocol . GATEWAY _ SERVER _ ID `
updated condition checks in SegmentsInfoRequestHandler . java and modified collection creation in CollectionsAPISolrJTest . java to enhance code readability and maintain
updated the calculation of numPredictiveAppCols to handle phone - specific app columns based on device type to improve accuracy in determining predictive
added a method ` hasScalarSubqueryInput ` to ` JoinUtils ` and refactored related checks in ` DrillJoinRelBase `
add a buildcraft to make it easy to remove item from the inventory .
refactor layout parameters in DeviceProfile . java to use FrameLayout . LayoutParams for better layout management to improve code readability and maintainability by using
replace ` run ( ) ` with ` start ( ) ` in ` YahooSession . java ` to improve session management by starting the session
updated HiveMetaStore and HiveMetaStoreClient to handle null client cases and improved error handling to ensure proper resource management and prevent potential NullPointerExceptions
updated the ` getDisplayScript ` method to use ` Category . DISPLAY ` instead of ` getDefault ( ) ` in ` Locale ` and added a
replaced static imports of ` CORE _ NAME _ PROP ` with ` ZkStateReader . CORE _ NAME _ PROP ` in the
replaced ThreadLocalRandom with a Random instance in StoreDirectTest . java to improve performance by using a more efficient random number generation approach
added a check for launcher readiness before executing backup operations in LauncherBackupHelper . java to ensure that backups are only performed when the launcher is
updated error messages in IllegalArgumentException for clarity to improve readability of exception messages for better debugging
added unit test base on user forum issue
rename variable ` mBodySpace ` to ` mBarSpace ` across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code readability to enhance maintainability and facilitate future updates
test : use temporaryfolder for message history test
added logging levels for various loggers in Grasscutter . java to enhance debugging capabilities for various loggers
changed the visibility of ` highlightCnstScrRngQuery ` and ` setHighlightCnstScrRngQuery ` methods
updated workspace state checks to include NORMAL state in Launcher and Workspace classes to ensure proper handling of workspace state changes
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of assertion classes
updated template notification logic to use ` args . cacheable ` instead of ` args . info . notifyNewTemplate ( ) ` to ensure correct template
added " solrcore " to the SCOPE _ ENTITY , SCOPE _ GLOBAL , SCOPE _ SOLR _ CORE , and
updated the primary key in the CREATE TABLE measurement query to include a primary key to ensure the correct primary key is retrieved in the database metadata
rename ` ` -- permissions - config - path ' ' to ` ` -- permissions - config - file ' '
removed unnecessary null checks for ` httpSessionExistedAtStartOfRequest ` in ` HttpSessionContextIntegrationFilter . java ` to simplify the session creation
added a new file ` TestIfWithDeadRegion . java ` containing a class ` TestIfWithDeadRegion ` to test string retrieval with dead
corrected the spelling of " English USD " to " USD " in DependencyParserITest . java and updated the default model in
replaced ` testConcurrentAccess ( ) ` with ` testConcurrentAccess ( ) ` in ` SnowflakeIdGeneratorTest . java ` to ensure
added a static UI feature to AppSettings and modified toast bar visibility logic in MainFragment to enhance user experience by allowing dynamic snackbar visibility based on
refactor Privilege implementation in WindowsSecurity . java to use a lambda expression to improve code readability and ensure proper resource management
replaced ` setParameter ` method with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and ` WhitelistLogoutHandler ` classes to
updated dialog messages in multiple Java files to use localized strings to improve user experience by providing clearer error messages
added MIME type assertions for X - tika - ooxml and Vnd . officedocument . spreadsheetml . sheet in TestMimeTypes . java
updated Runner , FixJava , FeaturePathFeatureSupplier , and FeaturePathFeatureSupplier classes to use Cucumber ' s fixJava class and
camel - eip - doc - enricher : fix xml output for camel - eip
[ flink - 26464 ] [ table - planner - blink ] add migration coordinator . removeversioninfoforendpoint ( ) method
added debug logging and refactored audio playback device handling in DeviceConfiguration . java to improve code readability and maintainability
added a WebsocketConfig class and its getter / setter methods to the ShenyuConfig class and updated WebSocketPluginConfiguration to utilize it to
[ java ] make cachevalidationlistener thread - safe
updated content length handling in MoreIndexingFilter to check for non - empty strings before adding it to the document to ensure that the content length is
[ hotfix ] [ runtime ] make defaultsolverjob . solvingterminated ( ) private
added error handling for ` PathAlreadyExistException ` in ` createTimeseries ` method to improve robustness by handling potential ` PathAlreadyExistException
added a ` check ` method to the ` Authz ` class to provide a way to check the result of the ` check ` method
changed access modifiers of several methods from public to protected in multiple classes to restrict access to methods for better encapsulation
cloudstack - 10284 : do n ' t create an account if the command be in reserved state .
updated HttpParser to initialize _ valueString with an empty string instead of null and modified test cases in HttpParserTest to ensure proper handling of compliance
replaced ` Thread . currentThread ( ) . completeInitialization ( ) ` with ` Thread . java ` and removed it from ` Thread . java ` to
added methods to create and create an external storage directory in ShadowEnvironment . java and created a new EnvironmentTest . java file for testing to ensure proper
add a test case for mvel 2.1 . 0 . insert ( ) in drools - 1.9 . 0 .
removed unnecessary import of FileUtils and adjusted formatting in LoggingConfig . java to improve code readability and maintainability
added the exception message to the logging statement in ActionNode . java to improve error reporting by including the exception message
added a check to remove the " tel : " prefix from the number in SipUtil . java to ensure the number starts with " tel
refactor visibility logic for shared file icons in FileListListAdapter . java to improve code readability and maintainability
removed deprecated HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf . java and updated related test cases in TestTxnCommands3 .
hive - 18105 : hive - 18105 : hive - planner should use hive sessionid and queryid instead of queryid
refactor BTCMarketsStreamingAdapters , BTCMarketsStreamingService , and BTCMarketsStreamingService to use Java ' s
[ hotfix ] [ test ] use gettypename ( ) instead of getname ( )
removed the onErrorInStep method from StepListenerSupport . java to streamline error handling by eliminating unnecessary code
refactor Wallet class to improve code organization to enhance maintainability and readability of the code
camel - 8859 : camel - netty - http : / / code . google . com / p / mybatis / issues / detail ?
replace system . out . println with log . info in testnonblockingapi
added a check to return false if the row exceeds the size of the connectionList to ensure that the row does not exceed the expected size of the
[ net . sourceforge . pmd . rules . methodwithsamenameasenclosingclass ] add rulecontext for method with same name
added ExtendedPlatformComponent to manage platform mbeans in ManagementFactory and created ExtendedPlatformComponent class to enhance platform management functionality and maintainability of the management
updated SQL string replacement logic in BasicQueryTest . java to ensure proper handling of single quotes in SQL queries
updated the URLs in Bleutrade test classes to include the " org / knowm / xchange / bleutrade / dto / " prefix
refactor TextEscapeUtils to improve code readability to enhance maintainability and facilitate future updates
added a filter parameter to ` AbstractSpatialFieldType ` and updated the ` FilteredQuery ` instantiation in ` TestSolr4Spatial ` to improve query
added a call to ` mainActivity . handler . post ( mainActivity . updateResultsEmailSent ) ` in ` AutoEmailHelper . java `
replaced ArrayList with HashSet and updated iterator implementations in Inlinks and LinkDb classes to improve performance and maintainability of the code
[ tafri ] fix memory leak in discovery service .
modified the ` testFilterForPartition ` method to accept a boolean parameter ` filterAtServer ` to enable blocking mode for partition retrieval to enhance flexibility
added " Abandoned " status to the TicketModel and TicketBasePage classes to support the Abandoned status in the
update default value of columnAliasPrefix from " c " to " c " in multiple platform classes to ensure proper initialization of the columnAliasPrefix variable
replaced ` Text ` with ` BytesWritable ` in ` LlapRowRecordReader ` and ` LlapRowInputFormat ` classes to use ` Bytes
do n ' t run on a 32 - bit jvm on a 64 - bit system
pdfbox - 4071 : do n ' t copy a b , a suggest by valerybokov
added a new " DAEMON " option to the RESET _ ALARM option and implemented daemon mode providing a web pendant UI to
added a new file ` FlushIndexTask . java ` that extends ` PerfTask ` to implement a benchmarking task for flushing the index
fix memtable . getflushpath ( ) and memtable . getflushpath ( ) to use estimatedsize instead of guessedsize .
added a new condition to check for SEASONS output in the TEXTS _ NOSORT condition to ensure correct output handling in the media library
added a new file ` LocalSocketAddress . java ` that implements a datagram socket address test to verify the availability of IPv6 loopback addresses in
updated grid size points in GridSizeMigrationTask . java for consistency to improve code readability and maintainability
updated method calls from ` getName ( ) ` to ` getName ( ) ` for consistency to improve code readability and maintainability by reducing redundancy
added a read - only option to the Context class and modified the commit and rollback logic in the Context class to improve flexibility in transaction management and ensure
refactor LookAndFeelCommand class to improve code organization to enhance maintainability and readability of the code
updated the calculation of ` lastRunEnd ` to use ` lastRunStart ` instead of ` lastRunEnd ` to ensure correct calculation of the
added handling for EOFException and EofException in GracefulStopTest . java to ensure proper exception handling for EOFExceptions
refactor NetJavaImpl to use a synchronized method for removing HttpResponseListeners to improve thread safety and maintainability of the code
refactor NetworkParameters class to improve code readability to enhance maintainability and facilitate future updates
removed the conditional check for account asset optimization in DynamicPropertiesStore to streamline account asset optimization logic by eliminating unnecessary configuration
added a new constant J9 _ GC _ POLICY _ NOGC and initialized J9 _ GC _ POLICY _ NOGC to zero to
added error handling for invalid protocol buffer contracts in TransactionCapsule . java to improve error handling for invalid protocol buffers
[ net . sourceforge . pmd . rules . strictexception ] remove exceptiontypechecking
updated resource retrieval to use " en / " instead of " en / " and added a warning message when no localization available for a file to improve
added a new file ` ProcessorInfo . java ` to determine the number of processors allowed to determine and read CPU masks to facilitate processing of CPU
added support for the ` - html ` option in the ` PrintingBugReporter ` class to enhance the printing functionality by allowing users to specify the
[ micronaut ] make logbackloggerlogger . logbackxmllocation a final field .
updated HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to use final fields and refactored cluster recovery handling to improve code readability and maintainability
updated SleuthTagPropagationAutoConfiguration and SleuthTagPropagationAutoConfigurationTests to include user configuration for handler creation to ensure proper
refactor dependency type assignment logic in RustCompileUtils to use a switch statement to improve readability and maintainability of the code
updated ` oauth2LoginLinks ` method to include ` queryParams ` as a parameter and added error handling logic to enhance error reporting by providing an error
hbase - 16464 hfilereader . seekto ( ) do n ' t seek to the first kv if it be miss .
hhh - 16464 - deprecate generationtiming . isalways ( ) and deprecate . isalways ( ) .
bugfix : add test for nn . layernorm ( ) and nn . nn . layernorm ( )
replaced ` showShareFile ` method implementations with ` getFileOperationsHelper ( ) . showShareFile ( ) ` across multiple activities to improve code
added a new file ` LiquibaseUpdateMojoExecutionTest . java ` to test the functionality of ` LiquibaseUpdateMojoExecution ` to
convert the value of the proxyType from a string to uppercase to ensure consistent handling of uppercase values for proxy types
add mod _ Minecraftforge . java and mod _ Minecraftforge . java to make things initialize .
added handling for fetching columns in JdbcDatabaseSnapshot and improved filtering logic in JdbcDatabaseSnapshot . java to enhance data retrieval accuracy and ensure correct filtering
added a custom border and a label to the CSS border in CSSBorderTest . java to enhance the visual appearance of the CSS border in the UI
added conditional logic to ` RetryAutoConfiguration ` and modified ` RetryInterceptorAutoConfiguration ` to include ` RetryTemplate ` in ` RetryInterceptorAutoConfiguration
change LayoutParams . FILL _ PARENT from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to ensure consistent layout
updated the calculation of the parent task name in PinotHelixTaskResourceManager to use currentTimeMillis ( ) instead of nanoTime ( ) to ensure
added error handling for parsing AddServiceRequest in ServiceResourceProvider . java to improve robustness by handling UncheckedIOException during service request parsing
refactor the return statement in IndexDatabase . java for better readability to improve code readability and maintainability
giac : fix round ( x [ 0 ] , x [ 0 ] , x [ 0 ] , 2 , x [ 0 ] )
refactor AnonCipherWithWantClientAuth class implementation to improve code readability and maintainability
added multiple @ Deprecated annotations to ProducerTemplate . java to indicate that these methods should no longer be used in future development
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
fix flaky test in evictiontest
renamed the method ` encodeInternal ` to ` encodePassword ` for clarity to improve code readability and maintainability by using a more descriptive
replaced ` ViewTreeObserver ` with direct calls to ` getViewTreeObserver ( ) . addOnGlobalLayoutListener ` and ` removeOnGlobalLayout
refactor Response class to improve code structure to enhance maintainability and readability of the code
use long . max _ value instead of long . min _ value in sstablemetadata
set the size of the callparticipant panel to a minimum of 60 second to improve the user interface responsiveness
added null and empty checks for replies in TweetActivity , TimeLineCursorAdapter , TimeLineCursorAdapter , and TweetView classes to ensure
updated ` HitbtcBalance ` and ` HitbtcAdaptersTest ` classes to use ` Objects . equals ` and ` Objects
fix ( sql ) : do n ' t use ` ` where clause ' ' for order by statement
updated return statement in RetriesExhaustedWithDetailsException to use addrs . toString ( ) instead of s to improve clarity by returning the
refactor file opening logic in EditGcodeFile . java to use a lookup method for OpenCookie to improve code readability and maintainability by
updated import statements in JsonToGrpcApplicationTests . java and JsonToGrpcApplicationTests . java to use the new hc library to enhance compatibility with
pipepowerwood : use the minimum energy stored in the battery ' s setenergy method
added a check to delete the temporary output file if it exists to ensure that temporary output files are deleted before proceeding
removed unnecessary parameters from the BitstampWebSocketTransaction constructor and added a new test for retrieving trades in BitstampStreamingMarketDataServiceTest to streamline
added time validation checks in ReplayProcessor , ReplaySubject , and ReplaySubject classes , and corresponding unit tests in ReplayProcessor ,
updated the expectedCitation string formatting in CitationStyleGeneratorTest . java to improve readability and maintainability of the code
added new SQL insert statements and updated video HDR format handling in MediaTableFiles . java to enhance database functionality by allowing dynamic video HDR format
do n ' t show definition for equation in orthogebra element , but not in prerelease .
add a null check for the component in SIPCommTextFieldUI to prevent potential NullPointerExceptions when the component is null
hbase - 16464 add caching for metascanner when startrow be null .
updated the init script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
refactor Math and StrictMath classes for improved performance to enhance performance and maintainability of mathematical operations
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to enable transient taskbar functionality in the application
refactor AccessExecution , ArchivedExecutionVertex , and AccessExecutionVertex classes to improve code readability and maintainability
added a conditional check to set density to 3f in IOSGraphics . java to ensure density is set to 3 when scale is 3
renamed the variable ` optional ` to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in naming conventions
[ flink - 24424 ] [ runtime ] add exception to log message when an exception be throw .
refactor assertTrueEventually method to use a lambda expression for better readability to improve code readability and maintainability
updated logging messages and refactored AsyncHttpConnection and AsyncContextTest classes to improve clarity and functionality to enhance error handling and ensure proper resource management
added a boolean parameter ` showArrow ` to the ` title ` and ` subtitle ` parameters in the ` SearchUiManager ` class to enable arrow
updated lock mode handling in Database . java and modified testSetMode method in TestRowLocks . java to ensure proper lock mode assignment based on
skip binary test on linux / amd64 only on linux
added checks for input types in Scalars . java to return string representations for Integer , StringValue , IntValue , and IntValue to improve type
updated error handling for missing and multiple PRIMARY KEY specifications in CreateTableStatement . java to improve clarity of error messages for missing and multiple primary
added conditional checks for lmp in CellLayout , Hotseat , and settingsButton classes to ensure proper drawable resources are set based on the device '
[ hotfix ] [ vm ] throw exception if no isolate to query for flutter view
added methods to set content type , content type , cache control , httpStrictTransportSecurity , and frameOptions headers in HeadersConfigurer to enhance header management
refactor ObjectEnumerableAssert class for improved readability to enhance maintainability and facilitate future modifications
[ java ] refactor devtoolsprovider to use a local variable for devtools .
[ hotfix ] [ test ] set type to ` ` type ' ' in test
added support for pre -built libraries in Python binary processing to ensure proper handling of pre - built libraries for the main module
updated client authentication handling in NetServerOptionsConverter , NetServerOptions , NetOptions , and NetServerOptions classes to ensure proper handling of client authentication
hive - 18113 : hive . repl . rootdir should be system . name instead of user . repl . cmroot .
refactor task view handling in RecentsView to improve clarity and correctness to enhance code readability and maintainability by reducing duplication
[ hotfix ] [ test ] increase timeout for amqptransformertest
removed the call to clearAll ( ) in DataTableTopComponent . java to streamline the code by eliminating unnecessary method calls
rename the variable ` controller ` to ` flowController ` in multiple classes to improve clarity and consistency in variable naming
[ flink - 21807 ] [ pipeline ] fix the issue of pipelinebuilderbuilder . dealwithconsumeallchildrenpipelinebuilder
added import statement for ClassLoaderHandler in module - info . java to enable the use of ClassLoaderHandler in the application
[ java ] add setsolution ( ) and setplanningproblem ( ) method to solverandpersistenceframe . solve ( )
added JsonIgnore annotation to ApplicationSettings . java to ignore JSON serialization for JSON serialization
update null check condition from checking if throwable is null to checking if it is not null to ensure proper handling of null values
refactor query info retrieval logic in QueryTimeManager . java to improve code readability and maintainability
fix auto - gui not work when there ' s no recipe
fix gl200 text decode bug ( fix # 282 )
rename ` timeColumnName ` to ` incomingTimeColumnName ` and update related references in ` AvroRecordToPinotRowGenerator . java `
added multiple calls to ` HttpMethed . waitToProduceOneBlock ` in ` HttpShieldTrc20Token004 . java `
add an initializable interface to the containercontainer so that it can be use in the container .
refactor TimerObservationHandler to use a wildcard import and introduce LongTaskTimer . Sample for error tags to improve code readability and maintainability by
changed the data type of ` SYNC _ DELTA _ RATE ` from ` float ` to ` double ` and modified the fetch time
log warn when fragment expression be not find in thymeleaf
changed the type of the _ attributes assignment from HashMap to ConcurrentHashMap in SessionData . java to improve memory efficiency and prevent potential memory leaks
http : / / issues . apache . org / jira / browse / amq - 4293 - make acking message more readable .
added new color constants and updated the extractInto method to return fallback values to enhance color extraction functionality and prevent potential null pointer exceptions
added accessibility checks for the data folder in SketchBuilder . java to ensure the data folder is accessible before adding it to the src folder path list
updated the ` appendContent ` method to include a ` includeTitle ` parameter and modified related logic in ` NotesHelper ` and ` NotesHelperTest
removed initialization of sessionRegistry in ConcurrentSessionControllerImpl . java to simplify the code and improve readability
added logging for connection completion and error messages in NettyStreamingService . java to improve debugging by providing more context on connection failures
updated ProxyFactory initialization to use JavassistProxyFactory instead of CglibProxyFactory to ensure compatibility with Javassist ' s
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to replace ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet `
refactor SocketExceptions and ExceptionText classes to use InetAddress for host and host information to improve readability and maintainability of the code
added a check to check if the view directory is under the repository and implemented a method to check if the view directory is under the repository to ensure
do n ' t add dnd indicator to the tabbed pane if it do n ' t exist .
added JVM options for compressed object pointers and class pointers in multiple test classes to improve memory efficiency and performance during runtime
added a condition to check if the update log is not in ACTIVE or REPLAYING state in PeerSync . java to ensure the update log
deleted the ConnectionHook . java file to the functionality is no longer needed for the project
added a method ` waitForReplicasInSync ` to ` DistributedUpdateProcessor ` , ` DistributedUpdateProcessor ` , and ` TestT
camel - 14284 : camel - rest - dsl - xml - generator - add test case for camel - rest - dsl
updated version handling in ApexLanguageModule to use the current external version instead of a hardcoded value to ensure compatibility with the current external version
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
replaced ` Executors . newFixedThreadPool ( ) ` with ` aggregateThreadPoolFactory . getInstance ( ) ` in ` AggregateEngine ` and ` OverflowQuery
replaced ` StandardByteBufferPool ` with ` ByteBufferPool ` in ` WebSocketAsyncConnection ` and ` WebSocketServerFactory ` to use ` ByteBufferPool `
added scroll position adjustments for thumbnails in UploadActivity to ensure proper scrolling behavior for better user experience
[ flink - 26464 ] [ table - planner - blink ] fix sample by timestamp overridden column alias
refactor animation handling in LauncherAnimUtils and LauncherStateTransitionAnimation classes to use ValueAnimator for improved animation performance to enhance animation performance and
added a check to disable the default user agent if the default user agent is disabled to ensure the HttpClient is only enabled when the default user agent is
added a pubsubhubbub feature to the FeedRefreshUpdater and ApplicationSettings classes to conditionally handle subscriptions based on the application settings
changed the access modifier of the finalize method from public to protected to allow external access to the finalize method
updated method name from ` isAnonymousOrLocalClass ` to ` isAnonymousOrLocalOrSyntheticClass ` in ` StubJarClassEntry . java
added a new file ` DSpaceWebapp . java ` that extends ` AbstractDSpaceWebapp ` to implement REST functionality in the application
added a check for null columns in the left table alias in CalcitePlanner and implemented the getTableAliasContainingColumn method in RowResolver to ensure
[ hotfix ] [ table - common ] fix typo in triggerkey ( )
updated transaction logging to use TransactionCapsule and TransactionMessage instead of TransactionCapsule to improve logging clarity by using transaction IDs instead of
fix test failure in basicmaptest . testkey ( )
updated variable names from " rcfileOptimizedWriterEnabled " and " rcfileWriterValidate " to " rcfileWriterValidate " in HiveClientConfig
added a new enum ` TlsClientCertPolicy ` and refactored related methods in ` GitBlitServer ` and ` GitBlit
updated log level from " event " to " subscribe " in KrakenFuturesStreamingService . java to simplify subscription handling and improve code readability
updated WebSocketRoutingFilter to include headers and sub - protocols in the handleRequest method to enhance WebSocket handling capabilities by allowing customization of WebSocket protocol
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to improve traceability of fetch requests during execution
updated the formatting of dimensions and label in HolidayEventFormatter . java to improve readability and maintainability of the code
refactor ` FinalizePrivateFieldsTest ` and ` FinalizePrivateFieldsTest ` to replace ` innerClassFieldMadeFinal ` with `
refactor UnexpectedJobExecutionException class to improve error handling to enhance code clarity and maintainability
deleted the ` AquaLookAndFeel . java ` and removed the ` shouldUseOpaqueButtons ( ) ` method from ` AquaUtils . java `
updated maxFreq and maxCost handling in DrillSidewaysQuery and DrillSidewaysScorer classes to use DocsEnum for
added GeoDegeneratePath class to the classRegsitry map to ensure proper handling of GeoDegeneratePath in the class registry
removed the ` preFill ` parameter from constructors of ` ParticleEffectPool ` , ` FlushablePool ` , ` FlushablePool `
added functionality to update the state for the taskbar when the launcher is not in the launcher to ensure the taskbar is only updated when the launcher
added null check for style before comparing with default style to avoid potential NullPointerExceptions during style comparison
refactor size and max width methods in GuiUtil and update the MarqueeLabel initialization in StatusTab to improve code readability and maintainability
refactor icon retrieval logic in FileTreeViewHolder to use TreeFileExtension for better clarity to improve code readability and maintainability by reducing redundancy
updated assertions in ParallelUniverseTest to use contains instead of isEqualTo to improve readability and maintainability of the test
added synchronization to the loop for processing suite results in XMLReporter . java to ensure thread safety when processing suite results
[ native ] add test for probability function query in nativeworker
added a call to ShutdownThread . deregister ( this ) in ClientContainer . java to ensure proper resource management and prevent potential memory leaks
alexeibarantsev : add a method to drop temporary table after use
alexeibarantsev : add htmlunit support to htmlunit . htmlunit and htmlunit . htmlunit
refactor multiple Solr - related classes to improve code organization to enhance maintainability and readability of the codebase
refactor LinksIndexingFilter class to improve code readability to enhance maintainability and facilitate future updates
updated the string representation of the reserve size in VirtualAllocCommitUncommitRecommit . java to include a reserved 1024KB for Test to improve clarity
do n ' t create ad playback state if there be no ad group .
added @ SuppressWarnings ( " UndefinedEquals " ) annotation and modified the equality check in MultimapSubject . java to improve code clarity and suppress
updated the string resource from ` deg _ text ` and ` unit _ hz ` to ` unit _ hz ` in ` WaveGeneratorActivity
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
updated the initialization of the ` all ` TreeMap to use ` putAll ( includedLabelSets ) ` instead of ` putAll ( includedLabelSets ) `
added a normal format element to the VertexLighterFlat class and refactored the format handling logic to improve code readability and maintainability by
updated TracingClientInterceptor , ITTracingServerInterceptor , and ITTracingClientInterceptor to use Tracer . SpanInScope for better resource management to
replaced ` ZoneId . of ( timeZoneStr ) ` with ` TimeZone . getTimeZone ( timeZone ) . toZoneId ( ) ` in ` Scheduled
added new classes AsyncBucket , AsyncBucket , Bucket , ConfigurationBuilder , InMemoryExtension , and InMemoryExtension , and modified method signatures to throw UnsupportedOperationException
refactor test class directory handling in resexhausted003 . java to use regex for matching test class paths to improve code readability and
updated formatting and added exception handling in AbstractConnector . java to improve code readability and maintain consistency
refactor OngoingStubbing class for improved readability to enhance maintainability and facilitate future modifications
refactor web server initialization to use Optional < WebServer > instead of Optional < WebServer > to improve flexibility in managing web server configurations
replaced ` productConstructor ` with ` constructor ` in ` HttpClientUtil . java ` and added ` SolrDefaultHttpClient ` in ` SolrTestCaseJ4
added error handling for thread allowlist utilization in ParametersInterceptor . java to ensure thread allowlists are cleared before proceeding
corrected the method name from ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to ensure
dmndtanalyser : do n ' t add overlaphitpolicy to the ddta table if it do n ' t support it .
added a new test method ` testSlidingWindowsCombine ` to ` CombineTest . java ` to validate the functionality of ` Combine ` functionality to ensure
added a conditional check to bind all apps in LauncherModel . java and modified app icon binding logic in LauncherModel . java to ensure app
added a check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest . java to ensure that the " Running " attribute is correctly validated
refactor code formatting for consistency and readability to improve readability and maintainability of the code
refactor AquaMenuBarUI to use AccessController for handling embedded properties to improve security checks and ensure compatibility with embedded environments
fix ` ` fall distance ' ' bug in entity . setrawlocation .
refactor query handling in SimpleJpaRepository to use Specification and CriteriaQuery instead of querying to improve code readability and maintainability by
added timestamp , parentHash , and number fields to BlockUtil . java and updated txInput initialization in BlockUtil . java to enhance block configuration flexibility
refactor safepoint insertion phase to be more descriptive .
fix npe in rsgroupinfomanagerimpl # listchildrenandwatchfornewchildren and zkprocedurememberrpcs # listchildrenandwatch
changed access modifiers of several methods in ArtifactResolver from package - private to public in ArtifactResolver . java to allow external access to these methods for better
added resource cleanup and error handling in ClientConnectionHandler , BulletPhysics , BulletPhysics , and ChunkProcessingPipeline classes to ensure proper resource management
added a validation check for maxBufferedDocs to ensure maxBufferedDocs is at least 1 to prevent runtime errors
added functionality to track and log the state of the login process in the LoginActivity to improve user experience by preventing the login process from hang
added null checks for element and value extraction in Pump . java and created a new test for UUID generation in PumpTest . java to ensure
updated visibility of loadbalancer and zombieServer methods in HttpShardHandlerFactory and LBHttpSolrServer classes to protected to allow subclasses to access
updated the order value from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in BaseAuthenticationServiceSelectionStrategy and
added Server and ContextHandlerCollection imports and initialized a HandlerList in TestJNDI . java to enhance server integration with Jetty ' s
updated formatting and added assertions for child operators in SortedDynPartitionOptimizer . java to improve code readability and ensure accurate validation of child operators
change return value from instanceof NioEventLoop to true in FileStreamChannel . java to ensure proper handling of NioEventLoop instances
updated the calculation of ` newNumNulls ` to conditionally set ` newNumNulls ` based on ` newNumRows ` to ensure
camel - 16234 : camel - kamelet export now support kamelet in camel - yaml
replaced OkHttpOAuthConsumer with AuthorizationState and added authorization handling in OSMJob . java to improve handling of unauthorized uploads and ensure proper error
removed debug print statements from multiple test classes and refactored the test method to return a CompilationResult to improve code readability and maintainability by
added clientAuth configuration to IoTDBRestServiceConfig and updated RestService and IoTDBRestServiceDescriptor to conditionally set SSL context based
removed the initialization of ` mocksToBeInjected ` in ` PropertyAndSetterInjection . java ` and added a new test class ` ChildWithSame
refactor BloomFilter64bit and BloomUriUniqFilter classes to implement the InitializingBean interface to improve code readability and maintainability by
changed cursor adapter from false to true in HomeFragment . java and added preference for refreshing me in TweetPager . java to improve user experience
updated the intermediate header height ratio from 1f to 75f in ProfilePager . java to improve the responsiveness of the scroller
replaced occurrences of ` @ SuppressWarnings ( " null " ) ` with ` @ SuppressWarnings ( " null " ) ` for ` RuntimeEvent `
added a new configuration key ` SYS _ PREPPED _ HOSTS _ PREPPED ` to the ` ExecutionCommand ` class and
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method and introduced a new ` UnknownChangeLogFormatLoggingTest `
added a loop to remove the ' / ' character from the location string in DefaultServlet . java to ensure proper handling of URLs that start with
added functionality to validate and validate the presence of entities and scores in the StaticPipeline class to enhance the pipeline ' s functionality by allowing users to specify
refactor filename handling to use a split method for better readability and maintainability to enhance code readability and maintainability by utilizing dynamic path
do n ' t throw exception if catalog repository do n ' t exist in workspace
refactor Assert class to improve readability and maintainability to enhance code clarity and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added ` MultiLineJaggedTextTests ` for multi - line
camel - 14265 : camel - core - remove unnecessary sleep in test
removed IMeasurementSchema instances from writeAlignedWithTSRecord , TsFileWriteAlignedWithTablet , and TsFileWriteWith
updated the memory usage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to include the expected memory usage for
updated log4j version from log4j12 - log4j - log4j12 - to log4j - reload4j -
[ hotfix ] [ test ] fix flaky test
updated package names from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities ` across multiple
[ drools - 1276 ] ignore flaky test when kiecontainersolverfactory be fixed
added a constructor to PullRequestMergedEventsStream that initializes Avro schemas from Pinot schemas to enhance the functionality of PullRequestMerged
refactor AbstractExpressionPart class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ doc ] fix typo in taskslot javadoc
replace instances of ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket ` and ` Net
added a try - catch block around lock release in MoveTask . java to ensure locks are only released if the lock is not unlocked
refactor property retrieval from ` Properties ` to ` getString ` for ` GEM _ PATH ` in ` JRubyBackend . java ` to improve
replaced the static byte array ZERO _ ADDRESS with ByteUtil . EMPTY _ BYTE _ ARRAY to simplify the code and improve readability by
refactor code to improve readability and maintainability in ClassGraphClassLoader . java to enhance code readability and maintainability
[ hotfix ] [ test ] make jobmanagerstartuptest more robust
chore ( v1alpha1 ) : update proto definition for cloud datastream api
added a new Bundle instance and set extras in FileDisplayActivity to enhance the functionality of the builder
replaced a break statement with a continue statement in the particle handling logic to improve code readability and maintainability
updated cluster timeout values from 2 to 1 in AmbariManagementControllerImplTest . java to allow more time for cluster updates to improve test reliability
removed nullable attribute from @ Column annotation in TransientSessionTicketImpl . java and added handling for NoResultException in JpaTicketRegistry . java
updated Bug4823811 . java file with new bug fixes to improve code clarity and maintainability
updated the path relativization logic in RmStep . java to utilize a functional function for pattern deletion to improve flexibility in path
refactor requestFullState method to accept a boolean parameter for initial requests to improve flexibility in handling initial requests during state request
refactor ShibbolethCompatiblePersistentIdGenerator to include an attribute field and update related methods to improve attribute management and ensure proper handling of principal
updated the @ Inject annotation from ` @ Inject ` to ` @ Inject ` in ` RequestValidationService . java ` to improve code readability and
refactor message handling in UiThreadHelper to include a new bundle for hiding keyboard messages to improve code readability and maintainability by encaps
removed redundant calls to clear ( ) in FileNodeProcessor , MManagerBasicTest , and MTreeTest classes to improve code readability and maintain
refactor NavigableMap and NavigableSet classes to improve code organization to enhance maintainability and readability of the code
add a test case for the slurpfile method in IOUtilsTest . java to verify the functionality of the slurp file functionality
updated method visibility and added @ FunctionalInterface annotation in multiple classes to enhance code readability and maintainability
refactor span retrieval logic into a separate method ` spanWithName ` to improve code readability and maintainability by reducing duplication
added support for date conversion in ETypeConverter and updated related classes to support date types in Hive to enhance date handling capabilities and ensure compatibility with Hive '
updated regex pattern in StyleConverter to use Patterns . COMMA _ SEPARATOR instead of a hardcoded string to improve readability and maintainability
ggb - 273 fix error message in dialog table view .
refactor column count handling in SemanticAnalyzer to use a variable for better readability to improve code readability and maintainability
updated assertions and conditions in WANDScorer . java to ensure correct handling of document boundary conditions to improve code clarity and ensure correctness of document
refactor Correspondence class to improve code structure to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java to include specific UI components to enhance functionality and maintainability of the code
updated ` curPixVal ` initialization in ` XRSolidSrcPict . java ` and added a new ` WhiteTextColorTest . java
refactor ` listSubTypes ` and ` listSupertypes ` methods to use ` listSupertypes ` instead of ` listSubTypes ` to
rename variable ` withinTolerance ` to ` exceedsTolerance ` in ` BoundedLocalCache . java ` to clarify the purpose of the variable ' s
added imports for LOCAL and POSTSUBMIT and PLATFORM _ POSTSUBMIT in TaplTestsLauncher3 . java to ensure compatibility with different
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a check for empty logFileSuffix in SnippetUtils . java to ensure logFileSuffix is not null and is not empty before proceeding
updated PythonBuckConfig . java file to improve configuration handling to enhance performance and maintainability of the code
added unit tests for adding and clearing system shared library names in ShadowPackageManager to ensure correct functionality of shared library management in the package manager
fix meiligao protocol and add test for meiligao protocol
add a null check for the tile before returning it to prevent potential NullPointerException when the tile is not initialized
added a ` TrimCache ` class and modified the ` delete _ cache ` preference handling in ` PrefFragment . java ` to improve cache management
fix checkstyle issue in generator / renderers / rendertasklistgenerator / rendertasklistgenerator / rendertasklistgenerator / rendertasklistgenerator
replaced return statements with ` NotAuthorizedException ` in multiple classes to throw a specific ` NotAuthorizedException ` to improve error handling by providing clearer
refactor schedulePeriodically method signatures in Scheduler . java to use generics instead of generic types to improve code readability and maintainability by reducing
replaced ` refreshListOfFilesFragment ( false ) ` with ` onItemClicked ( ) ` in ` FileDisplayActivity . java ` to enhance
added a conditional check for file paths in StreamUtil . java and improved exception handling in StreamUtil . java to ensure that multiple files match the same
updated the ` create _ table ` method to accept a ` CreateTableRequest ` parameter instead of a ` EnvironmentContext ` parameter to simplify table creation
added an ` aborted ` flag to the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker . java ` to
updated indentation checks in multiple parser classes to ensure correct handling of non - space characters and improve code clarity
added network wifi status receiver to document fragment
[ java ] do n ' t allow control frame to be set to fin = true .
added functionality to set the visibility of the collapse handle to ensure the collapse handle is visible to users when the bottom sheet is active
added new file ` Issue475 . java ` and ` XSS . java ` with various test cases for escaping HTML , HTML , JavaScript ,
added a check to return early if the units to scroll is zero to prevent unnecessary processing when no units are available
updated contract list size check from ` size ( ) > 1 ` to ` size ( ) ! = 1 ` to ensure that the contract list is
added ` add ` and ` put ` methods to ` JsonArray ` , ` JsonObject ` , and ` JsonArray ` classes with null checks to enhance functionality
added hashCode ( ) method to IPPPrintService and created a new TestRaceCond class with hashCode ( ) method to ensure proper hashing
danielwagnerhall : use getversion ( ) instead of getiversion ( )
added a condition to check if the platform fee is greater than zero before calling isConnectEnabled in BaseStripeManager . java to ensure that the
refactor BatchUpdateException , PreparedStatement , and Statement classes for improved clarity to enhance code readability and maintainability
improve performance of mediacodecrenderer . queueinputbuffer ( )
changed access modifiers from public to package - private in multiple Antn classes to enhance encapsulation by removing unnecessary public access modifiers
added Retrofit import to Part and PartMap classes to enable support for Retrofit functionality in the application
refactor JsonBuildHelper and ParamsBuildHelper to improve JSON building logic and parameter handling to enhance code readability and maintainability by reducing redundancy
added TYPE _ TASKBAR _ OVERLAY _ PROXY and TYPE _ TASKBAR _ OVERLAY _ PROXY to
chore : update gapic - generator - java with mock service generation fix : update gapic - generator - java with mock service generation fix
updated alpha calculation logic in ClipAnimationHelper and added hasRecents flag in RemoteAnimationTargetSet to improve animation handling for recents
removed an argument from the createRenderScript method call in AllAppsView . java to simplify the rendering process by removing unnecessary parameters
pdfbox - 4071 : fix typo in javadoc of pmd . java
move system - bundle property check into pluginmanageractivator . issystembundle ( )
updated import statements and formatting in IntegrationTestSparkBulkLoad . java and IntegrationTestSparkBulkLoad . java to improve code readability and
[ hotfix ] [ test ] use low positive rate for keychaingrouptest
refactor configuration handling in Overview . java to improve clarity and functionality to enhance code readability and maintainability by using a more descriptive
cloudstack - 10284 : fix npe in agentmanagerimpl # findattache ( hostid )
added a null check for the value before adding it to the entry set in DefaultRecordStore . java to avoid potential NullPointerExceptions when accessing
cloudstack - 10265 : throw a discoveredwitherrorexception instead of a nullpointerexception if there be no cluster .
updated string concatenation in ParamAction . java for consistency to improve readability and maintainability of error messages
updated constructor parameters in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to use Object instead of InvocationContainerImpl
added a method to strip method parameters from method names in LocationOpener . java to improve code readability and maintainability by reducing duplication
updated version name and version code for the GreatVoyage application to reflect the latest updates and improvements
change outputfilter to use set instead of list
[ geot - 4071 ] use labelcacheitem . labelcacheitem . labelcacheitem . graphicresize and groupkey instead of hardcode
do n ' t center and resize popups when overlap feature be enable
updated error messages in ValidationSuite . java and Module . java to use " - invalid " instead of " : " to improve clarity and consistency in
refactor ` QuickstepTransitionManager ` to use a dedicated ` StartingWindowListener ` class to improve code organization and maintainability by encaps
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to improve code readability and maintainability
updated exception handling in CheckPackageAccess . java to use PackageAccess and PackageDefinition SecurityException instead of SecurityException to improve clarity and maintainability of
increased the timeout duration from 30 seconds to 90 seconds and added a assertion to verify the termination status of the executor service to ensure the executor service is
fix npe in xrlog . setloggingenabled ( false )
added @ JsonIgnore ( true ) annotations to Schema . java to ensure proper JSON serialization and deserialization of fields
[ hotfix ] [ test ] increase timeout for testnontxindexbuilder
refactor train methods in SimpleNaiveBayesClassifier to improve clarity and consistency to enhance code readability and maintainability by using more descriptive
renamed ` CheckHelperModule ` to ` CheckHelperControllerModule ` and added ` CheckHelperAuditModule ` in ` Guice . java ` to
refactor Prototype class to improve code organization to enhance maintainability and readability of the code
added a null check for tableIsTransactional in SemanticAnalyzer . java to ensure proper handling of transactional tables in the SemanticAnalyzer
[ java ] refactor recordingwriter . writefragment to use recordingwriter . onblock instead of writefragment
use offset _ sample _ relative instead of 0 in cea and cea subtitle
fix datastoremetricqueryimpl . getalias ( ) to return null instead of null
updated currency pairs in VaultOfSatoshiBaseService . java to replace " BTC _ CAD " , " CAD " ,
hhh - 11717 close entitymanagerfactory in nocdiavailabletest to avoid memory leak
updated the import statement for KafkaSender from Kafka11 to KafkaSender in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to ensure
added GwtBinaryIntegrationTest . java and A . java files to implement tests for GWT binary builds to enhance testing capabilities for GWT and improve
updated loading cause label visibility logic in BrowserContentPane and modified ResultSetRenderer initialization in SQLConsole to improve user experience by ensuring the loading cause label is
updated formatting in EnhancedRandomImpl . java and added new test cases in EnhancedRandomImplTest . java to improve code readability
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to manage the security property manager to improve security management by
added a new file ` InlineDefaultMethod . java ` with interfaces and classes implementing ` InterfaceWithDefaultMethod1 ` , ` Subtype ` , and
updated SQL query conditions in SqliteFieldPredicateView . java to use " cn " and " * " instead of " % " to improve accuracy
changed access modifier of getDMNProfiles method from private to protected to allow subclasses to access the getDMNProfiles method
fixed - redisscript . load ( ) method do n ' t work if slave node be not available
remove setwordfielddelivered and setlongfielddelive method from staticobject
changed log level from debug to verbose in multiple project generator classes to improve logging clarity by using a more descriptive variable name
use retain ( ) and release ( ) instead of cast ( ) to fmlproxypacket ) .
added a new constant for HTTP JETTY _ SERVER _ HANDLERS and updated the thread pool initialization in WebServer . java to improve
refactor shortcut handling in LauncherModel to use a removedShortcutInfos list instead of a single map to improve code readability and maintainability by
remove unnecessary type check from defaulthttpclientbinderregistry . convert ( )
removed the case for ` navigateUp ( ) ` in ` DetailFragment . java ` to streamline the navigation process for better user experience
added a condition to check if the Android market is present in the includesPlayServices condition to ensure that the includesPlayServices only includes the Android market
updated cell start and end calculations in TableBlockParser . java and added a new test case in TablesTest . java to ensure proper handling of
added a ` bridgingHeader ` field and related methods to ` NewNativeTargetProjectMutator ` , ` AbstractAppleNativeTargetBuilder `
refactor PotentiallyDeadCode to use Set < JavaType . Method > instead of java . nio . file . Path to improve code clarity
added a new boolean flag ` findDiamonds ` in ` Attr . java ` and modified ` DiamondRedundantArgs . java `
replaced calls to ` invocation . getInvocationStageTrace ( ) . startSend ( ) ` with ` invocation . onStartSendRequest ( ) `
removed a debug log statement from SolrCacheHolder . java to streamline cache metrics registration process by eliminating unnecessary logging
added catch blocks for AuthenticationException in LdapCtxFactory . java to improve error handling for AuthenticationException
updated the calculation of the float value in Test6796786 . java from a static variable to a static variable to correct the calculation of the
added a local file for " logback . dev . xml " in the JoobyMojo and Main classes to ensure that the configuration file is
added a new file JaasEventCheck . java to handle JaasAuthentication failure and success events to provide functionality for handling Jaas authentication failures and
refactor QuickstepTransitionManager to use a list of views instead of a single view to improve code readability and maintainability by centralizing view
updated string distance comparison in ConjunctionSolrSpellChecker and added a new test class ConjunctionSolrSpellCheckerTest to ensure proper exception handling
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to ensure compatibility with
removed specific leader information change events from DefaultLeaderElectionService to clean up the code and improve readability
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the setAuthentication method from public to package - private
add agent . script . timeout and add config option to modify storage pool command .
updated JDBC _ TABLE and JDBC _ SCHEMA parameters in AbstractJDBCConnectorProvider . java to include JDBC _ SCHEMA parameter to ensure proper
corrected the spelling of " sqlUpdateAUP " to " sqlUpdate " in multiple files to improve code readability and maintain consistency in
refactor schemaTypeCache to use a synchronized map for thread safety to improve performance and reduce unnecessary synchronization overhead
refactor header checking logic in StaticServerHttpHeadersWriter to use a loop to improve code readability and maintainability by simplifying header addition logic
added JUnit Ignore annotation to LatticeDemo . java to temporarily disable the test that relies on files available from CMU
added directory creation for the storage storage in TestCollector . java to ensure the test is created before proceeding
set chunked streaming mode to 1024 bytes in StarTreeJobUtils to improve performance by reducing memory usage during streaming operations
add syntax checker for basic and single type in jsonschema syntax
hbase - 16424 addendum : update com . google . protobuf to org . apache . hbase . thirdparty . com to match the
added a new test method ` Node ` to verify that ` beansWithRecursiveStructureMustNotCauseStackOverflowException ` is thrown in ` BeanPopulator
added IOException to the getRemoteName method signature to ensure proper handling of IOException during remote name retrieval
updated exception handling in UserAccountManagerImpl , ClientFactory , ConnectivityServiceImpl , and ConnectivityServiceImpl to use Apache Commons httpclient to improve
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enhance security configuration flexibility based on the " aspectj " attribute
updated imports and refactored hostname verification logic in Connection . java to improve code readability and maintainability by centralizing hostname verification logic
modified the ` remove ` method in ` OHLCSeries ` and added a new ` remove ` method in ` OHLCSeriesTests `
updated method invocation from ` invoke ( ) . joinInternal ( ) ` to ` invokeUrgent ( ) . joinInternal ( ) ` in `
refactor joint management logic in World . java to streamline joint destruction process to improve code readability and maintainability
fix a nullpointerexception in searchfilter . getphonenumbersmatch ( )
[ hotfix ] [ test ] move sourcereadertestbase to testutils
removed redundant null checks for files in DocumentsStorageProvider . java to improve code readability and maintainability
added new ` HookDefinition ` , ` JavaHookDefinition ` , and ` JavaHookDefinition ` classes , and created ` JavaHookTest ` to
refactor the flushIfDeadlockRisk method to a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by
updated the ` setExoOptions ` method to include a ` allowTs ` parameter and modified the ` setExoOptions ` method to
remove the user from the identifiers collection in DMRDecoderState . java to ensure that the user is removed from the identifiers collection
added a static Color constant in Color . java and refactored color handling in RailButtonShapes . java to improve code readability and maintain
updated null handling logic in CountAggregationFunction . java and added a new test for total count with null handling in NullHandlingIntegrationTest . java to ensure
set the deep variable to - 1 in InternalTransaction . java to ensure proper initialization of the transaction object
updated the way the name is appended to the buffer in StreamInitiation . java to ensure proper handling of XML characters in the output
updated file initialization to use the " work . dir " configuration instead of a hardcoded value to ensure the " work . dir " property is
fix rulesetfactory to set deprecated ruleset to true for deprecated ruleset
use codebuffer . position ( ) instead of label . bind ( ) in amd64directcallop
updated minStamp and maxStamp variables to static final in TimeRange . java and added a test for range construction in TestTimeRangeTracker . java
refactor BitDocIdSet class implementation to improve code readability and maintainability
refactored the ` emitMetricsJson ` method to use a dedicated ` emitMetricsJson ` method to improve code readability and maintainability by
added support for additional media types in DetailFragment and GalleryActivity to ensure proper handling of video attachments in the gallery
added a condition to check if the world is not remote before filling fluids to ensure fluids are drained only when the world is not remote
refactor CsharpLibrary to handle both CsharpLibrary and PrebuiltDotnetLibrary rule views to improve code readability and maintainability by using
add support for iq . type . get ( ) and iq . type . get ( ) in iqpephandler
added a null check for the runtime in the intrinsicGraph condition to ensure that the intrinsicGraph is not null before proceeding
[ hotfix ] fix checkstyle violation in streamingdataflowworker
pdfbox - 4071 : do n ' t create object key if there be no object
added constructors to LwjglAppletApplication and LwjglNativesLoader in LwjglApplet . java to
updated the string representation of environment variables in EnvironmentAndSystemPropertyClientProviderStrategy . java to handle null configurations more gracefully to improve code readability
refactor LdapAuthenticationHandler to handle password policy configurations more effectively to improve code readability and maintainability by reducing duplication
refactor Int2ObjectCache class for improved performance to enhance performance and maintainability of the code
added a new private field ` resolveFromAttribute ` to ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to set the resolver ' s
refactor Readable class implementation to improve code readability and maintainability
updated the PDF saving logic in JsoupNonVisualRegressionTest . java to use TestSupport . WITH _ FONT instead of a hardcode
updated menu item icon from ` share _ menu _ item ` to ` ic _ menu _ share ` in ` CaptureActivity . java ` to ensure
updated JVM _ IS _ MINIMUM _ JAVA8 and JVM _ MINOR _ VERSION handling in Constants . java to improve compatibility
poolutilities . getnetworktimeout ( ) should return false for non - JDBC 41 compliant driver
refactor GenericContainer class to improve code readability to enhance maintainability and facilitate future updates
replaced ` HashSet ` with ` ArrayList ` and ` List ` for ` filteredSet ` and ` filteredList ` in ` Enclosed . java `
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , ImmutableAuthentication , ImmutableAuthenticationSpecification , AbstractCasView , and AbstractCasView
removed unnecessary spaces in ChartProvider . java to improve code readability and maintainability
update working directory preference to use parent file extension instead of file path .
updated the return statement in JavacParser . java and added a new ExtraSemiTest . java file in ExtraSemiTest . java to
added TemporalType for AFTER , BEFORE , and createdAt fields in JpaQueryCreator and User classes , and updated User repository tests to
updated Test15FloatJNIArgs . java file to enhance performance and maintainability of the code
updated import statements in plugin . java for consistency and clarity to improve code readability and maintainability by using more descriptive methods
updated substring index calculation in MockProcessContext and added a new test for encryption and decryption in TestMockProcessContext to ensure correct substring indexing
add ensurenotreentrant ( ) and ensurenotreentrant ( ) method to ensure that callback and not reentrant call be not
added a null check for ` inp _ dep ` before merging dependencies in ` OpProcFactory . java ` to avoid potential NullPointerExceptions when
increased test timeout from 10 seconds to 10 seconds in SslBytesServerTest . java to allow more time for tests to complete before proceeding
refactor Peer class to improve code organization to enhance maintainability and readability of the code
updated RealtimeIndexingCoordinator , RealtimeSegment , RealtimeSegment , StreamProvider , and StreamProviderConfig classes to use IndexSegment instead of
added null check for exportedData before writing to the output to avoid potential NullPointerExceptions when the exportedData is not initialized
refactored popup positioning to use a dedicated method for retrieving the scroll thumb radius to improve code readability and maintainability by encaps
modified BuckWSServerPortUtils , BuckEventsConsumer , and BuckToolWindowFactory to check if the tool window is instantiated before proceeding to
added a conditional check for Windows platform before initializing preventSleep in GeneralTab . java to ensure preventSleep is added only on Windows platforms
replaced instances of ` javax . servlet ` with ` jakarta . servlet ` in ` HttpConfigurationAuthorityOverrideTest . java ` to align with
added new properties for startCrop , endCrop , and endCrop in QuickstepAppTransitionManagerImpl . java to improve layout handling for different device
added full - screen exclusive mode state management in AWTPermission , XWindowPeer , and XWindowPeer classes to ensure proper handling of full -
fix stringutil . playdurationstr ( string , string ) to take into account the length of the string .
added credentials handling in DagUtils for MapWork , ReduceWork , and ReduceWork in DagUtils . java to enhance security by
camel - 14284 : camel - xref - check - maven - plugin : use entryset instead of keyset
trim whitespace from thread names in SessionState . java to ensure thread names are trimmed to avoid potential memory leaks
updated the error message in GpsMainActivity from " Not yet " to " Not yet logged to a file . " to clarify the purpose of
refactor Job class to improve code structure to enhance maintainability and readability of the code
added a new abstract class ` Unused ` and a test method ` testUnusedType ` to validate the functionality of the ` Unused ` class
hbase - 16413 add miss hostnames for hbase master host .
deleted the EventReaderDeserializer and EventWriterSerializer interfaces to remove unused classes to streamline the codebase
changed the return type of ` performJoin ` method from ` GenericRecord ` to ` List < GenericRecord > ` in ` GenericJoinUDF
updated the maximum delegate lock period checks and adjusted related conditions in multiple classes to improve flexibility and accuracy in managing delegate lock periods
return null if no network rate be available for the nic profile .
removed the default constructor and overridden the applySpecification method in CmcExchange to streamline the initialization process and improve code clarity
updated GossipLocalNode to use config . getConf ( ) . getPath ( " seed . node . ip . list " ) instead of
update clienttpcconfig to set tpc . enabled to false by default
updated the swagger - ui version from 2.1 . 10 - 1 to 3.2 . 18 . 2 in multiple application classes to ensure compatibility with the latest swagger
refactor MutableBigInteger comparison logic and add a new ModInvTime class for modular inverse computation to improve readability and maintainability of the code
refactor key assignment logic in NamedObjectList . java to handle empty strings more gracefully to improve code readability and maintainability by reducing redundancy
refactor cleanupEmptyDir method calls to cleanupEmptyTableDir across multiple classes to improve code readability and maintain consistency in naming conventions
refactor AsyncCache and Cache classes for improved performance to enhance performance and maintainability of the caching mechanism
added RCFileInputFormat import and registered RCFileInputFormat class in SerializationUtilities . java to enable the use of RCFileInputFormat for serialization
added new methods ` typeOf ` and ` categoryOf ` to ` TypeMapperComponent ` for handling column types to enhance type mapping functionality for better
added error handling for invalid host header in Request . java and improved test cases in RequestTest . java to ensure proper handling of invalid host headers and
updated ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to use ` ReflectionHelpers . callStaticMethod ` instead of ` TimeZoneFinder `
refactor ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in ` StandardOp . java ` to improve the handling of outgoing values and
changed the access modifier of ` cfsDir ` and ` cfsDir ` from final to private in ` SegmentCoreReaders . java `
added ` hasMainThreadProfile ` method implementations in ` AggregateDao ` , ` AggregateRepository ` , and ` TransactionCommonService ` classes to
added error handling for non - required annotation definitions in InterfaceValidator to ensure that annotation definitions are not allowed in a non - required source abi
updated NAME constants from " greekLowerCase " and " turkishLowerCase " to " greekLowercase " across multiple filter factory
refactor HSSFSheet and Sheet classes to improve code organization to enhance maintainability and readability of the code
update search request processor to use the default search provider since dspace 4.1 . 0
added list removals for " America / Dawson " , " America / WhiteHorse " , and " Canada / Yukon " to
updated the initialization of SurfaceSyncGroup to include " TaskBarController " to ensure consistent naming conventions for the SurfaceSyncGroup
replaced ` BsonObjectId ` with ` getId ( ) ` in ` GridFsTemplate . java ` and added a new test method in `
updated the ` query _ shouldReturnColumnIndexes ` method to ` query _ shouldReturnColumnIndices ` and added new methods for fetching column indices and bytes
refactor character handling logic in TextField . java to use a boolean for insertion to improve code readability and maintainability
fixed npe in groupnodeview when the target be equal to the target .
refactor afterSetStatements method implementations in Block and BlockLexicalContext classes to improve code readability and maintainability by reducing duplication
added hashCode ( ) method to IntervalXYDelegate , XYSeriesCollection , and XYSeriesCollection classes to ensure consistent hashing and hashing
add cleanup method to clientqueuedisruptiontest and fix checkstyle violation
updated CloudWatchAppender and RegisteredServiceScriptedAttributeFilterTests for consistency and clarity to improve code readability and maintainability
updated GsonBuilder method from serializeSpecialDoubleValues to serializeSpecialFloatingPointValues to improve serialization support for FloatingPoint values
added calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` and ` PublicMethed . waitProduceNext
added checks for empty subtags before canonicalizeing them in Locale . java and modified language tag handling in LanguageTag . java to ensure proper handling of
add a config option to disable SSH into KVM Agents in the management server to ensure that the management server does not allow SSH into KVM
removed the ` public ` access modifier from the ` ScheduledAction ` class and its constructors in ` SchedulerWhen . java ` to restrict access to
removed the import of PagerSlidingTabStrip from EmojiKeyboard . java to streamline the code by removing unnecessary dependencies
added a condition to check if the input string is not empty in SimpleSearchQueryConverter . java to ensure that the filter does not contain an empty
corrected the spelling of " Natural column order " to " Natural column order " across multiple files to improve clarity and consistency in the user interface
replaced ` Arrays . copyOf ( in , 6 ) ` with ` Arrays . copyOf ( in , 6 ) ` in ` Utils . java ` to
updated the ` write ` method to use ` htmlEncodeButNotSpace ( remoteAddr ) ` instead of ` remoteAddr ` to ensure proper
updated the item name check from " / " to " smarthome / items / " in ItemStateTriggerHandler . java to ensure the correct item
removed unnecessary synchronization in FastHttpDateFormat . java to improve performance by reducing unnecessary synchronization overhead
refactor file move logic to use a separate thread pool for improved performance to enhance performance by reducing the number of file move operations
added two overloaded ` trigger ` methods in ` WrapTimer . java ` and modified the ` trigger ` method to accept a period parameter to enhance
added support for LOCAL _ DATE and LOCAL _ TIME types in TypeInformation checks to ensure compatibility with LOCAL _ DATE and LOCAL _ TIME types
updated error handling in AbstractStatusReporter to use a configurable verbose option to enable verbose error logging based on user - defined options
added menu visibility checks to the ClickStartHandler constructors in Header . java and ItemControls . java to ensure proper menu interactions are displayed when
do n ' t allow vpn connection to be esitablished between account ' s VPN gateway and customer gateway
updated error handling logic in CursorReadingTask and modified test cases in CursorReadingTaskUnitTests to improve error management and ensure proper handling of exceptions
pdfbox : do n ' t create thumbnail and extract text if the pdf be encrypted .
fix race condition in CuratorZookeeperClient . getchildren ( )
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code readability and maintainability
updated the ` deleteItem ` method to include an ` id ` parameter in ` HostsList . java ` to ensure the correct ID is used
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
changed the return type of ` replaceOrderBulk ` method from ` Collection < ReplaceOrderCommand > ` to ` List < BitmexOrder >
renamed the method ` enterDefault ` to ` enterIdentNode ` in ` FindScopeDepths . java ` and added a new method ` enter
added a new file ` J9ConstantHelper . java ` and modified ` ObjectHash . java ` and ` ObjectHash . java ` to util
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent modification exceptions on multi - threaded verification to ensure
add ability to remove roster from the session if it ' s not available in the roster .
replaced calls to ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator ` and ` PartitionDesc ` classes to
updated method call syntax in FunctionObjectCreator . java for consistency to improve code readability and maintainability
added null check for extCustomDesers before initializing it in MessagePackFactory . java and updated the copy method in MessagePackFactoryTest .
remove system . setproperty ( ` ` mockserver . logLevel ' ' , ` ` mockserver . logLevel ' ' )
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and improve readability
removed unused JettySolrRunner imports and updated the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline
updated scoreMap and scoreMap to use String and termScoreMap instead of Float , Float , Float , Float , Float , Float , Float ,
updated conditional checks to use ` < 0 ` instead of ` & 0x8000000000000000L ` and added a ` eq ` method in ` U
added headline style to MainViewModel . java to improve the visual appearance of the application
added a check for ` didSupportDarkText ` in the notifyChange method to ensure correct notification behavior for dark text support
[ hotfix ] [ checkpoint ] fix checkpointrequestdecider . nonforcedenqueueonoutofboundsexception
updated MAX _ POOL _ SIZE and KEEP _ ALIVE _ TIME _ MINUTES values in Parallel . java to improve resource management and
replaced filter with anyMatch for matching providers in AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java to improve code readability and maintainability by using
added test requirements for Windows ServerCore container in OpenCVImageFactoryTest to ensure tests do not fail on Windows ServerCore container
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 11919 .
refactor the getreturnvalue method to accept a throwable instead of a null value to improve error handling by providing more informative exception messages
added @ Repeatable annotation and @ Issues annotation to the Issue class to enable the handling of Issue objects in the application
updated user properties from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and modified imports
updated socket connection logic to use a resolved IP address when socksProxyHost is null to ensure that the socket is created only when the host is not
updated SlotReport and SlotStatus classes to improve clarity to enhance code readability and maintainability
removed the import of ClassUtils from ReflectionUtils . java to streamline the code by eliminating unnecessary dependencies
replace HashSet with LinkedHashSet for protocol , include protocol , include cipher suites , and cipher suites in SslContextFactory . java to ensure consistent
added a static variable ` systemResource ` and a check to return it if it equals ` systemResourceLocation ` to enhance resource management by allowing dynamic resource
[ java ] increase plaintext segment size for decryption and decryption .
added a new test method ` testCircuitBreakerInvalidFallbackThrowsException ` to ` ServerMvcIntegrationTests ` to ensure that an invalid fallback
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 13939 .
set the size limit of the cin in PerformanceTest . java to 0x7FFFFF for improved performance testing
added a new boolean field ` preferAES ` and its getter / setter methods to ` ProtectionPolicy ` and removed it from ` StandardProtectionPolicy `
camel - opentelemetry : use logger instead of system . out . println
added a new test method ` testLoadBalancerInstanceOperations ` in ` ElbIntegrationTest . java ` to verify the behavior of instance registration and health checks
renamed the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to improve clarity and consistency in method naming
added error handling for file creation in DiacriticTest . java to improve robustness by preventing invalid path exceptions during file creation
hhh - 16447 - oracle 11 do n ' t work on oracle 11 when use ojdbc6
updated file handling and exception handling in TextureUnpacker . java to improve robustness by ensuring atlas images exist before proceeding
updated locking mechanism in AmbariManagementControllerImpl . java and added a clusterWriteLock to ensure thread safety during concurrent access to the cluster
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test method ` testResultSetShouldNotCloseStatement ` to ` TestJdbcDriver2 ` and modified ` HiveQueryResultSet ` and ` Hive
[ java ] do n ' t use mark ( ) in chunkingtest . testchunking ( )
added logic to remove pre - deleted databases from the schema map in ClusterSchemaManager to ensure that only deleted databases are processed
added a check for " chunkedWriter " before writing to the pipeline in Http1xUpgradeToH2CHandler . java to ensure that
updated condition in EnhancedBrowseFragment and FullDetailsFragment to use getBaseItem ( ) . getId ( ) instead of mCurrentItem . getId
refactor ` RuleFinder ` to implement ` RuleBank ` and introduce a new interface ` RuleBank ` for rule management to improve code organization and
added error handling around the init method in JcaTlsCrypto . java to improve robustness by catching potential exceptions during the initialization process
added two new Java files , TestMonomorphicObjectCall . java and Object . java , to implement testing for monomorphic object calls and
replaced the ` removeMetaDataSource ` method with ` toFront ( ) ` in ` DataBrowser . java ` and ` Desktop . java ` to
hbase - 16424 use the keyspace name of the timerange in the shouldseek ( ) method of defaultmemstore
[ hotfix ] [ test ] remove unused local state directory from taskmanagerservices
updated AlterTimeSeriesStatement to accept a boolean parameter and modified the isAlterView initialization in ASTVisitor and AlterTimeSeriesStatement classes to enhance flexibility in
mondrian : add test for regex . matchtext ( ) and regex . matches ( )
added a try - catch block around the retrieval of the RoutingTableBuilder to handle potential exceptions during the retrieval of the routingTableBuilder
[ java ] fix npe in http clientIntroductionAdvice . java
use char [ ] instead of string . tostring ( ) in jmsappenderconnectit
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 42377 : do n
replaced the ` toSortedListWithCounts ` method with ` toSortedListWithCounts ` and ` equals ` methods in ` Counters
modified the ` initialize ` method to accept an ` Original ` parameter and set warning settings for the ` SimulationStatus ` instance to improve clarity
truffle : add transfertointerpreter and invalidate method to get the current time of the system . currenttimemillis ( ) .
updated variable assignment and readability in PrettyPrinter . java to improve code readability and maintainability
added a null check for the indexToNode array in LRUDictionary . java to prevent potential NullPointerExceptions when accessing indexToNode
refactor DatagramSocket initialization and filtering logic in DatagramChannelImpl to improve code readability and maintainability by encapsulating filtering logic
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in TestQueryDNS . java to align with the latest JUnit 5
added a new file ` NutchServerInfo . java ` for managing date and job information in the service model to provide a structured way to retrieve
replaced ` OffsetAttribute ` and ` PositionLengthAttribute ` with ` AttributeSource ` in ` EdgeNGramTokenFilter . java ` to simplify attribute
[ cql ] add timestamp option to setting column
refactor DSAParameterGenerator to use BigInteger . ONE instead of BigInteger for consistency to improve readability and maintainability of the code
updated NumberUtils and Numbers classes to use intBits and doubleToLongBits methods instead of ints to improve precision and accuracy of numeric conversions
updated mask comparison logic in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking behavior in tests
added exception handling for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper constraint validation for SQLException instances
[ hotfix ] [ runtime ] fix checkstyle violation in brokeroffsetstore
added methods to create and insert tabs with specified size and icon parameters in Tabs . java to enhance tab management capabilities by allowing customization of tab
replaced the array size ( ) method calls from ` toArray ( new Object [ size ( ) ] ` to ` toArray ( new Object [ 0 ]
[ hotfix ] [ runtime ] add setting of taskmanagerruntimeinfo to mockenvironmentbuilder
refactor conditional statements in MavenVisitor . java for improved readability to enhance code readability and maintainability
updated variable names from " MOCK _ APP _ SECRET2 " and " MOCK _ NAME2 " to " MOCK _ NAME _
added a new file ` FormatCheckingTest . java ` that tests class format errors to verify the behavior of class format errors in Java processes
updated the line number assignment logic in CodeGenerator . java to ensure the correct number is used for processing
added a try - catch block around the addition of configurations in ConfigHelper . java to handle potential exceptions during configuration retrieval
added methods to create a RadioButton with specified icon , icon , and command parameters to enhance functionality by allowing dynamic selection behavior based on user input
updated CHUNK _ METADATA _ CACHE _ SIZE from 100000 to cacheSize in LRUCache and MetadataQuerierByFileImpl to
changed access modifier of DEFAULT _ CAPACITY from private to public in SimpleChannel , ChannelParser , and MessageBusParser classes to allow external access to
fix nullpointerexception in managementnamestrategy when name be null
[ java ] add -- external option to modecontribution . load ( )
added error handling for adding and removing the shutdown hook in IOManager . java and improved sleep duration in YARNSessionFIFOITITCASE .
updated references from ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` and ` RobolectricTestRunner `
added a null check for notPropagatedHeaders in AbstractMessageProducingHandler and updated selectiveHeaderPropagation logic in AbstractReplyProducingHandler
refactor CompareMode class to improve code readability to enhance maintainability and facilitate future updates
added ` HasTests ` interface to ` Arg ` and ` RustLibraryDescription ` classes to implement the ` HasTests ` interface in ` R
updated placeholder resources for recent image placeholders in FileMessageVH . java to improve clarity and consistency in error messages
refactor OnExitTest class to improve code readability to enhance maintainability and facilitate future updates
added a new method ` onUserPreferenceChanged ` to ` TaskbarManager ` to recreate the taskbar when preference changes
added reflection - based method calls for dumping heap information in HeapDump . java to improve robustness by handling cases where the heap dump is
camel - 14297 : camel - mybatis - camel - mybatis : fix potential memory leak in camel - mybatis
updated driver references from FIREFOX to IE in SingleTestSuite . java and added wdSwitchToWindow method in ExportedWebDriver
updated DN _ IteratorToFor . java to replace JDK 5 with Java 5 for - loop and changed SAFE _ COLLECTION _
set the application state to UNAVAILABLE in JmxApplicationProvider . java to ensure proper handling of application state changes
updated assertions in ByteBuffer , Direct , Heap , StringCharBuffer , StringCharBuffer , and StringCharBuffer classes to improve code readability and
removed the ` toUri ( ) ` method call from the ` split ` method call in ` ConditionalResolverMergeFiles . java ` to simplify the
modified array deletion logic in multiple filter classes to ensure proper handling of empty arrays to improve robustness by preventing potential ArrayIndexOutOfBoundsExceptions
changed enum declarations from ` enum ` to ` public enum ` in ` VirtualAuthenticatorOptions . java ` to allow external access to the ` Protocol `
added a new Document instance and updated the document creation in TestMultiPhraseQuery . java to improve document handling and ensure consistency in document creation
do n ' t try to assign ticket reservation on offline payment
added a new private Thread variable ` _ onTimeoutThread ` and modified exception handling in ` HttpChannelState . java ` to improve thread management and
updated logging statements to use ` logger . warn ( ) ` instead of ` stack trace ( ) ` in multiple test classes to improve logging clarity and
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the read method to conditionally use LOCAL _ QUORUM based on consistencyForPaxos to ensure compatibility with LOCAL _ SERIAL
added support for " Home " model in HeosDiscoveryParticipant and updated HeosPlayerHandler to include the player ' s serial number to ensure proper
added a new ` Wait ` class and its getter / setter methods in ` PlainSelect ` , ` SelectDeParser ` , and ` SelectDe
replaced direct calls to ` getNodeData ( ) . setLabel ( ) ` and ` getNodeData ( ) . getLabel ( ) ` with ` AttributeController
added a null check for serverName in SessionManager . java to prevent potential NullPointerExceptions when serverName is null
nifi - 11717 : deprecate rocksdbmetronome and move rocksdbmetronome to repository
updated the method to retrieve the isGrantable value from results instead of a hardcoded value to improve code readability and maintainability by using
updated the condition in JavascriptContext to check if the URL starts with " javascript : " instead of using System . out to improve error handling and
camel - 14297 : camel - cxmtom : fix camel - cxf test failure on macos
added a check for a new column descriptor before modifying the column in LoadTestTool . java to ensure column modification only occurs when a new column
added Disposable interface to the Texture class to enable memory management for texture operations
updated WebappRegistrationCustomizerImpl and related classes to use WebBundleDeployerHelper instead of WebappRegistrationHelper to improve handling of null tld
refactored goquorum compatibility check into a separate method to improve code readability and maintainability
replaced IOException with Throwable for error handling in HttpInput . java to improve clarity and maintainability of error handling
added a condition to skip Thailand if the country ' JP ' is not " JP " in LocaleTest . java to address issues related to Thailand in
updated API responses in HostService , RootServiceService , and ViewPrivilegeService to use ViewPrivilegeResponseWrapper instead of HostResponse . Wrapper to improve
added boost comparison and hash code calculation in FilteredQuery . java to ensure correct comparison and hashing based on the boost value
reformatted the constructor signature in FileMenuFilter . java for consistency to improve code readability and maintainability
ggb - 271 fix texteditadvancedpanel and texteditadvancedpanel
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that CMS class unloading
fix a crash in spongeforgeeventfactory when there be no entity
updated ` ColumnMapKeyMappingPreparedStatementSetter ` to implement ` ItemPreparedStatementSetter ` instead of ` KeyMappingPreparedStatementSetter ` to enhance
[ hotfix ] [ test ] use identityqueryfilter instead of range in compactionstest
added error handling for missing ' type ' attribute in MiniAapt . java and created a corresponding test in MiniAaptTest . java
added support for the SPELJudge operator in the OperatorEnum and OperatorJudgeFactory classes , and created a new SpELJudge class
[ hotfix ] [ runtime ] make bigint type equal to biginttype . bigint
replaced the use of ` SwingUtilities . getEventDispatchThread ( ) ` with ` EventQueue . lookup ( ) ` in ` Profiler . java ` to
updated multiple Java files including CertBlacklist , ConscryptCertStore , Java8EngineSocket , Java8EngineSocket , Java8EngineSocket
updated attribute resolution logic in ` AttributeResolution9 . java ` and ` ShadowArscAssetManager9 . java ` to ensure proper handling of resource
updated the number of source and target options from " 1.0 " to " 6 " in SetupHid . java to ensure compatibility with the latest version
changed access modifier of extractMetadataColumns method from private to public and modified project rewriting logic in PushProjectIntoTableSourceScanRule . java to
added sorting functionality for localized names in AboutActivity to ensure consistent ordering of localized names in the spinner dropdown
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
added a conditional check for live streaming in HomeFragment to ensure shared preferences are refreshed only when live streaming is enabled
added exception to the MappingException to provide more context for the exception when creating an AuditStrategy to improve error reporting for better debugging
[ hotfix ] [ test ] fix flaky test in fileconsumerpollstrategystoponrollbacktest
updated generic type parameters in SchemaLoader , DynamicCompositeType , CompositeType , and DynamicCompositeTypeTest classes to use generics to improve type safety
added transport support functionality to GitClientApplication and updated RepositoryUrlPanel to utilize it to enhance security by allowing transport support in the client application
added delegator name functionality to various input consumer classes to enhance user experience by providing a clearer description of the delegator name
updated version handling logic in ChangeParentPom . java to check for null mavenMetadata before accessing availableVersions to improve robustness by preventing null
added a null check for the " Large Page Support " parameter in TestLargePageUseForHeap . java to ensure that the " Large Page Support
cloudstack - 4071 : skip event migration if the database do n ' t exist .
camel - 14297 : camel - xml - config - start - test : fix test failure on window .
added a new file ` TestObjectStreamClass . java ` and modified ` requireInitialized ( ) ` method in ` ObjectStreamClass . java ` to implement
refactor condition checks in ZoneAwareDiscoveryFilter to remove unnecessary null checks to improve code readability and maintainability
changed log level from error to warn in OpenTracingTracer . java to improve logging granularity by using warn instead of error
added a toString ( ) method to the Generator class to provide a clearer representation of the number of registered generators
refactor URI handling to initialize ` doquote ` with an empty string instead of a single variable to improve code readability and maintainability
added a null and empty check for resources in ClusterControllerImpl . java and created a corresponding test in ClusterControllerImplTest . java to ensure that
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 11919 .
added a conditional check for Android application version in VertexBufferObject . java to ensure compatibility with Android features and improve performance
refactor SybaseASADatabase class to improve code organization to enhance maintainability and readability of the code
added a ` forceProjection ` boolean parameter to the ` HashJoinInfo ` constructor and updated related references to improve the functionality of ` HashJoinInfo
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to the ` sd ` variable to provide access to
added FLAG _ ONE _ SHOT , FLAG _ IMMUTABLE , and FLAG _ IMMUTABLE to AndroidImplementation . java and updated PendingIntent
added methods to append read column IDs in HiveFileFormatUtils and refactored related methods in HiveInputFormat to improve code readability and maintain
replaced instances of ` UPNPAddress ` with ` IPv4MulticastAddress ` in ` UPNPHelper . java ` and ` UPNPAddress `
added a new ` DisplayTemporaryToast ( ) ` method to the ` SavedExperiments ` class to display a toast message to improve user
added version setting logic in ServiceModule and a corresponding test in ServiceModuleTest to ensure correct service version retrieval and validate functionality
added a new test class ` RawSerializationTest ` to validate JSON serialization functionality to ensure correct serialization behavior of ` Gson ` objects and parameters in JSON
[ java ] use sslcertgenerator instead of selenideserver for seleniumserver
modified the loop structure to iterate over the replies list and adjusted padding based on the number of replies to improve code readability and maintainability by reducing
updated assertTimeout duration from 3 seconds to 60 seconds in ExpiringUrlCacheTests . java to allow more time for resource access exceptions to complete
added a new test method ` testNGramFilterPayload ` in ` TestNGramFilters . java ` to validate NGramFilter functionality to ensure
refactor AclImpl class to improve code organization to enhance maintainability and readability of the code
added tests for different array sizes in EasyRandomTest . java to ensure different array sizes are randomized with different sizes to improve test
added constructors to RebootAnswer , StopAnswer , and CitrixResourceBase classes to handle exceptions to improve error handling and provide clearer
added a ThreadLocal to manage the value of ` tryWriteAgain ` and updated its usage in ` SslConnection . java ` to improve performance
added a method ` ancestorsVisible ( ) ` to check if the actor ' s parent is visible before accessing its parent to ensure that the parent
added logging for rolling - update step failure in RollingUpdateOpFactory . java to improve debugging and traceability of deployment group operations
[ hotfix ] [ table - planner - blink ] add nullable annotation to sinkprovider
added handling for ` BadCredentialsException ` in ` DaoAuthenticationProvider ` and introduced ` AuthenticationFailureUsernameNotFoundEvent ` class to improve error handling
refactor AtMostXVerificationTest class to improve code readability to enhance maintainability and facilitate future updates
updated default QTYPE assignment to use QParserPlugin . DEFAULT _ QTYPE instead of OldLuceneQParserPlugin . NAME to ensure consistent
updated SimpleDateFormat instantiation to include Locale . US in WeekDateTest . java to ensure consistent formatting across different locales
added an ` isInitialized ` method to ` ILanguageServer ` and implemented it in ` JavaLanguageServer ` , and created a new ` Main
updated the ` test _ fetch _ token _ from _ authorization _ code ` method to use ` shouldHaveIdToken ` instead of ` idToken
added methods to ` DatabaseAdapter ` , ` DatabaseAdapter ` , ` GncXmlHandler ` , and ` GncXmlHandler ` classes to
replaced byte array handling with ByteArrayOutputStream for reading data to improve performance and reduce memory usage
added multiple @ Override and @ Override annotations in MessagingTemplate . java to improve code readability and maintainability by reducing redundancy
added an ` isAcceptable ` method to the ` AutoFormatVisitor ` class to check if the source file is an instance of ` J .
added maxBufferedDocs and setRAMBufferSizeMB to 100 in TestIndexWriterMergePolicy . java to improve performance by reducing the number of buffered documents
added a clear method to ` Manager ` and a new test method ` updateWits ` to verify the functionality of ` WitnessCapsule
added exception handling for NoSuchElementException in CopyOnWriteMap to improve robustness by handling potential NoSuchElementException during iterator iteration
flume : remove log4j from flumenode # logversion and flumemaster
updated assertions in BasicAuthIntegrationTest and modified DaemonStream to use MDCAwareSingleThreadExecutor in DaemonStream to improve test reliability and ensure
replaced HashMap with LinkedHashMap in DependencyUtil . java to maintain insertion order for nodes
added InternalServerErrorMapper to JerseySupport and updated module - info . java to use weld . core . impl instead of jersey . hk2
refactor header validation logic in Http2TestBase . java to use a dedicated method to improve code readability and maintainability by encapsulating
refactor system property handling to use a switch statement for better readability to improve code clarity and maintainability by using a switch statement
changed method parameter types from String to CharSequence in StringSubject . java and added unit tests in StringTest . java to ensure correct handling of character sequences
added " jdk / jfr / internal / JVM . counterTime ( ) J " and " jdk / jfr / internal / JVM
rename IntUtilsTest class to PrimUtilsTest to improve clarity and consistency in naming conventions
updated the way the connection factory is initialized in PersistenceManagerProvider . java to ensure proper configuration handling based on compactor conditions
refactor DeploymentOptions class for improved clarity to enhance maintainability and readability of the code
updated the method signature of ` updateTextButtonWithDrawable ` to use ` Drawable . ConstantState ` instead of ` Drawable . ConstantState ` to
replaced ByteArrayInputStream with StringReader in XmlParser and YamlParser classes to simplify resource management and improve code readability
added handling for COALESCE functions in RexNodeConverter and SqlFunctionConverter to enhance functionality for handling COALESCE functions
camel - 16234 : camel - hl7 : remove unnecessary unit test from camel -HL7
updated JavassistProxyFactoryFactory to use the current thread ' s context class loader instead of the current thread ' s class loader to ensure
added synchronized keyword to constructors and methods in DefaultDateTypeAdapters to ensure thread safety during serialization and deserialization
reformatted method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
removed the newQuery flag and updated query handling in HttpClientRequestBase and HttpClientRequestBaseTest to simplify the query parsing process and improve test coverage
added a filterOldEntries ( ) method to the FeedRefreshUpdater class to filter old feed entries based on the size of 50 entries to ensure that
changed log level from fatal to warn in FSHLog . java to improve logging clarity by using a more descriptive log level
refactor NodeMap to use a new class ` NodeMapIterable ` and implement ` remove ` method to improve code readability and maintainability by
updated import statements and replaced ` predicate ` with ` subPredicate ` in ` DiscoveryClientRouteDefinitionLocator . java ` to improve clarity and consistency in
added a check for non - empty fields before adding them to the operations list in MongoRecordReader and modified return logic in RexToMongoTranslator
add the xmpp domain to the admin list if there be no admin list
replaced calls to ` MultiFields . getFields ( ) ` with ` SolrIndexSearcher . getSlowAtomicReader ( ) . terms ( ) ` in
replace bean . tostring ( ) with ObjectHelper . getIdentityHashCode ( bean ) in ConstantBeanHolder . java to improve code readability and
refactor GroovyParserVisitor to simplify type resolution logic and improve null safety to enhance code readability and maintainability by reducing redundancy
remove native hash code from frameinfoqueryresultset and javalangsubstitutions # hashcode ( )
make sedablockwhenfulltest more resilient to slow machine
added a new file ` package - info . java ` in the ` org . apache . lucene . core . testresources ` package to provide a
updated the calculation of readLen in MessageUnpacker . java to ensure the correct length is calculated based on the buffer size to ensure the correct
updated import statement from io . micrometer . common . lang . Nullable to io . micrometer . core . lang . Nullable in HttpClientTimingInstrumentation
added a condition to the COLUMN _ COMPONENT column in IconDB . COLUMN _ COMPONENT to include the user ' s serial value to ensure that
fix typo in defaultmqproducerimpl # getbackpressureforasyncsendsize ( )
[ hotfix ] [ classpath ] fix whitelisting of module - info class in classpath element
added a new method ` fixBaremetalForeignKeys ` in ` Upgrade410to420 . java ` to handle database upgrade
removed the IJava2DRenderer interface from Java2DRenderer and deleted the IJava2DRenderer interface to streamline the codebase by
added a teardown method to DefaultAudioSink that calls onOffloadBufferEmptying ( ) on the teardown method to ensure that the buffer is empty
refactor UpstreamCacheManager to use a thread - safe schedule with fixed delay and refactored divide task handling to improve performance and maintainability of
refactor StreamType class to improve code readability to enhance maintainability and facilitate future updates
updated the assertion message in Recording . java to include a reason to improve debugging by providing clearer context about expected output
updated imports and modified authentication logic in FilestorePage and RootPage classes to enhance user experience by allowing admin access to the filestore page
added @ ignore annotation to camel - elasticsearch - rest - integration test
refactored the accept method to check if the declaring class is a class before proceeding to improve code readability and maintainability by using a
updated button text from " leftButtonAltcoin " and " rightButtonFiat " to " buyAltcoin " and " sellWithFiat
camel - 14284 : camel - restlet - add a test case for invalid url in camel - restlet
refactor createnextblock and createnextblockwithcoinbase method to be non - nullable
updated BTreeMapJava , ConcurrentSkipListMapTest , JSR166Test , JSR166Test , and JSR166Test to
added a null check for the cause before logging error messages in RuleEngineImpl . java to avoid potential NullPointerExceptions during execution
reformatted the conditional check for source control stats gathering in Main . java to improve code readability and maintainability
updated the method call from ` mFilesAll ` to ` mFiles ` in ` LocalFileListAdapter . java ` to ensure correct retrieval of
deleted the PlainVerifier . java file to the functionality is no longer needed in the project
added a conditional check to close system windows if triggeredFromAltTab is true to ensure proper resource management and prevent potential memory leaks
updated DialogFragmentIT and OCFileListBottomSheetDialog to use BottomSheetBehavior for showing and hiding dialogs to improve user experience by
updated the ` parseCharset ` method to accept an additional character encoding parameter to ensure proper handling of UTF - 8 encoding for better compatibility
added a call to ` super . deinitialize ( ) ` in ` TextField . java ` to ensure proper initialization of the TextField component
replaced InputStream and ObjectOutput with TestUtilities for serializing LogFormat objects to simplify serialization logic and improve code readability
updated method calls from ` previousClause ( ) . DURATION ( ) ` to ` previousUntilLastClause ( ) . DURATION ( ) .
added error handling for negative array sizes in JAXWSExceptionBase . java to improve robustness by throwing a NegativeArraySizeException when
updated JUnit imports from JUnit 4 to JUnit 5 in CtUnresolvedImportTest . java to align with the latest JUnit 5
updated join time from 10 seconds to 60 seconds in T6567415 . java to allow more time for join operations
[ hotfix ] [ test ] change default value of schedulingstrategyfactory from legacy to region
added a title field and its getter / setter methods to ShadowActivity , ShadowAlertDialog , ShadowTextView , and ShadowToast classes , and updated
updated logging implementation from LogFactory to POILogger in POIFSFileSystem . java to improve logging efficiency by using a more generic POILogger for
updated alarm handling logic in InstarHandler . java to use string replacements instead of string literals to improve code readability and maintainability by reducing
added delete method to mapdeletemessagetask so that it do n ' t fail if statistics be enable .
refactor status handling in mmm Option . java and ppp Response . java to use a switch statement to improve readability and maintainability of the code
refactor code to use a new method ` findJavacLocation ` for finding Java files to improve code readability and ensure proper handling of Java
add ` ` -- project - name ' ' option to ` ` build ' ' module
added a new test class ` DeprecatedStubbingTest ` to verify stubbing behavior to ensure proper handling of deprecated stubbing methods in Mockito
updated import statements in ITBraveServletFilter . java to use javax . servlet . DispatcherType instead of org . eclipse . jetty . server
added nml and nml annotation to the participialmodifiergrannotation
[ bouncy castle ] add a system property to allow rsa key exchange by default
replaced instances of ` output _ reader ` with ` reader ` in multiple classes to ensure proper resource management and prevent potential memory leaks
added OAuthFactory and oAuthServiceHandleId fields to PubSubAPI , SDMAPI , and SDMAPI classes to enhance service management and
updated animation interpolator from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView . java to improve animation
added UpdateRegionLocationPlan to ConfigPhysicalPlan and modified logging statements in ProcedureManager , ProcedureManager , and DataNodeInternalRPCServiceImpl
added a new file ` FileDialogLeakTest . java ` that tests the ` FileDialog ` class to verify the garbage collection behavior of ` FileDialog `
hbase - 18113 move testopentableincoprocessor from hbase to hbase - coprocessor
do n ' t use uninterruptible annotation in trufflefeature
[ flink - 24424 ] [ protobuf ] remove unnecessary split method from pbcodegenrowdeserializer and pbcodegenrowdeserializer
added a null check for the disi variable in DrillSidewaysScorer . java to ensure that the disi variable is not null
add a refresh handler to make sure we do n ' t need to refresh the manifest
added support for VM _ MAJOR _ VERSION in Constants . java and updated conditional checks in Helper . java to ensure compatibility with Java 9 and
updated FileReporter initialization to explicitly cast null to String to ensure proper handling of null values in test cases
changed the condition from checking if ` getEndToEndEncryptionKeysExist ( ) ` is false to checking if ` getEndToEndEncryptionKeysExist (
added home button functionality to the action bar in DirectMessageConversation . java to enhance user experience by allowing navigation to the home button
updated protocol version from 5 to 6 and added user retrieval functionality in RpcServlet , RpcServlet , RpcUtils , and RpcUtils classes to enhance security
added an @ EnabledIfSystemProperty annotation to the TestJdbcPluginWithMSSQL class to enable the JDBC plugin based on the operating system architecture
replaced the variable ` startClass ` with a variable ` originalStartClass ` in ` WhiteboxImpl . java ` to improve code readability and maintain
added local registration and updated error messages in DexBody . java for better clarity to enhance error reporting and provide clearer feedback on the local registration
replaced instances of ` getAsyncContext ( ) . getResponse ( ) ` with ` getEvent . getSuppliedResponse ( ) ` in ` Test
fix issue with look and feel in commonapp
updated the regex pattern in AppPage . java to remove the " V { $ version } " suffix from the version string to ensure consistency in version
refactor animation listener logic in LauncherAppTransitionManagerImpl to use launcherAnimator instead of mFloatingView to improve code readability and maintain
updated AddressFormatException message from base58 to version in DumpedPrivateKey . java to improve clarity of error reporting regarding network availability
updated the method call from ` getExtraDataMap ( ) ` to ` newOfferPayload . getExtraDataMap ( ) ` in ` Edit
refactor milestoneParameters initialization to check if the milestone is open before creating it to improve flexibility in determining milestone parameters based on whether the milestone is open
bump the battery size from 640 to 80 in pipeswood .
added a new method ` getClusterKey ` to ` StateMachineInvoker ` for retrieving cluster keys and blueprint revisions to enhance functionality by allowing dynamic
initialized downgradeAllowed variable to true in UpgradePack . java and added a test for it in UpgradePackTest . java to ensure that upgrade
replaced instances of ` NameType . ATTRIBUTE ` with ` NameType . ELEMENTSTART ` across multiple files to standardize naming conventions for better
add an option to disable system load library from the classloader .
replaced instances of ` App _ NAME _ COMPARATOR ` with ` getAppNameComparator ( ) ` in ` AppsCustomizePaged
updated entry handling in DefaultPlatformManager and FatJarStarter classes to ensure proper resource management and prevent potential resource leaks
updated assertion message formatting in TestSecretKeyCredentialHandler . java to improve readability and maintainability of assertions
camel - 14297 : camel - route - builder - refactoring to make it easy to use .
[ hotfix ] [ metric ] fix typo in metricoptions
hbase - 14297 testfulllogreconstruction should use dfs . support . append and dfs . socket . timeout . timeout .
added a new boolean field ` reuseAddress ` and its getter / setter methods to ` DatagramSocketOptions ` to enable configuration of the ` reuseAddress `
updated player kick message to use getShutdownMessage ( ) instead of getShutdownMessage ( ) in GlowServer . java and ServerConfig . java
[ java ] remove deprecate locatable interface from selenium . interactions . internal
updated error messages in VersionInfo . java to use " searchable " and " retrievable " instead of " indexed " to improve clarity
replaced references to ` equalityPredicateColumns ` with ` predicateColumns ` in ` StarTreeIndexOperator . java ` to improve code readability and maintain
removed unnecessary whitespace in HandshakeHandler . java to improve code readability and maintainability
removed unnecessary newline characters in Navigator . java to improve code readability and maintainability
refactor ` DEFAULT _ PARQUET _ RECORD _ READER _ CLASS ` to ` DEFAULT _ PARQUET _ RECORD
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL in MongoQueryCreator and corresponding unit tests to
refactor grouping expression check logic into a separate method for improved readability and maintainability to enhance code readability and maintainability by reducing duplication
replaced UnsupportedOperationException with Unsafe for MappedByteBuffer and FileChannelLinesSpliterator to improve memory management and prevent memory leaks
replaced calls to ` l . getValidator ( ) . getValidator ( ) . getValidator ( ) ` with a local variable ` validator ` to
added a ` schedule ( ) ` method to ` CircuitBreakerImpl ` and updated the ` WAIT _ WAIT _ SLEEP `
removed redundant FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS flag from intent flags in Launcher . java to simplify
updated property keys from " webui . submit . upload . ajax " to " webui . webui . submit . upload . progressbar "
added @ Disabled annotation to TableExtRetrieverTest . java to mark the test as disabled for retrieval strategy for column privileges
added synchronization to the ` addExportedCount ` and ` getExportedCount ` methods in ` EntityGraph . java ` to ensure thread safety
updated import statement for IntRangeUtil1 to ensure proper usage of requireNonNegative in MetricsImpl . java
updated character validation logic in HttpParser and added a new test for encoded headers in HttpParserTest to ensure proper handling of character encoding in HttpParser
updated the layout reference from trends _ activity to configuration _ activity in ConfigurePagerActivity . java to improve clarity and consistency in the application ' s layout
updated print statement in SLWTTextListing . java to include the position of the document in the document to provide clearer context about the
refactor ForceLeaderTest to handle TlogReplicas usage and add a new ForceLeaderWithTlogReplicasTest class to improve test reliability
refactor Thread class methods for improved performance to enhance performance and maintainability of the code
refactor RECOGNIZED _ TEMPLATE _ FILE _ SUFFIXES to use static final sets and add a forceTemplateMode flag to
camel - 14265 : camel - cxf - add support for xmlns attribute in soap message .
removed unnecessary whitespace in YamlRepresenter and RepresentConfigurationSection classes to improve code readability and maintain consistency
updated date and month formatting in ToChar . java and added a new SQL query in TestFunctions . java to enhance readability and maintainability of
added validation for transaction and write IDs in GenericUDTFGetSplits . java to ensure proper handling of transaction and write IDs in
replaced ` ArrayList < String > ( ) = = null ` with ` Collections . emptyList ( ) ` for ` columnNameProperty ` and ` columnType
add a check for the book ' s bookpath before try to load it .
refactor SSTDeserializer and TestSSTDeserializer classes for consistency and clarity to improve code readability and maintainability
updated the defaultGRID _ COLUMN from 4 . 0 f to DEFAULT _ GRID _ COLUMN in AppPreferencesImpl . java and modified the
updated the ` diff ` message in ` Platform . java ` and ` ComparisonFailureWithFieldsTest . java ` to include the line contents match
[ java ] add ` ` waitingforkeys ' ' flag to samplequeue
updated API paths in OkexV3 . java from " / api / api / v3 / accounts / v3 / accounts / v3
updated the condition checks for the ` result ` variable in ` LineUtilitiesTests . java ` to use ` - x1 ` and ` - y
added error logging for invalid varargs and old array syntax in JavacParser and created new VarargsAndOldArraySyntax and T656963
log a warning if the defaultdrmsession be accessed on the wrong thread .
added METHOD support to VariableContext and corresponding tests in TestVariableContext to enhance functionality for handling method calls in variable contexts
added unit tests for invalid compilation unit and profile string JSON parsing in ExperimentParserTest . java to ensure proper handling of invalid compilation unit and profile
fix a bug in piece . limit ( ) and piece . limit ( ) .
added a ` HttpClientProperties ` parameter to the ` NettyRoutingFilter ` class and updated ` NettyRoutingFilter ` and ` NettyRouting
updated references to ` NativeLinkTarget ` in ` CxxLibraryFactory . java ` and ` NativeLinkTargetGroup . java ` to improve code
add unit test base on user forum issue
added support for handling ` RexFieldAccess ` in ` ASTConverter ` and implemented ` convert ` method in ` RexNodeConverter ` to
added a new constant QUERY _ LOG _ ENTRY _ VALUES and updated the iteration method to use it to improve code readability and maintainability
add noproxypredicate support to webclientrequestbuilder . resolve issue with proxy . noproxy
updated PKCS12KeyStore to handle null chains and modified StoreSecretKeyTest to use ALIAS2 instead of chainLen to improve robustness
added reflection access checks to NativeObject , Bootstrap , and ReflectionCheckLinker classes and refactored method names in Bootstrap and ReflectionCheckLinker
removed the public access modifier from the constructor of CollisionMap class to enforce encapsulation and improve code clarity
fix npe in tradewalletservice . getrawinputfromtransactioninput ( )
refactor log level handling in ConfigurationValueConverter and Main classes to use a switch - case structure to improve code readability and maintainability by reducing
cloudstack - 10265 : remove region _ id from configurationserver api ( # 11919 )
added encryption support to OldExcelExtractor and a corresponding test in TestOldExcelExtractor to ensure encryption is not supported for old Excel files
add extra _ image _ build _ argument to mx _ java _ benchmarks . py - add extra _ image _ build _ argument to mx _
removed unnecessary else block for setting the image visibility in TimeLineCursorAdapter . java to improve code readability and maintainability
increased scheduler timeout from 10 to 50 milliseconds and adjusted sleep duration in BatchingStateChangeUploadSchedulerTest . java to allow more time for the scheduler to
modified the way EXTERNAL _ FILES _ DIR is created and created a new File instance based on type to improve directory creation logic and ensure
refactor exception factory initialization to use Class . forName for improved readability to enhance code maintainability and reduce boilerplate
updated the WAIT _ TIME _ MS constant from 10000 to 60000 in LauncherInstrumentation . java to increase the wait time from 10 seconds to
updated ConnectOAuth2RequestFactory , ConnectRequestParameters , ConnectRequestParameters , ConnectRequestParameters , and ConnectTokenEnhancer to support additional OAuth2
camel - 14284 : camel - kafka - do n ' t set default value for breakonfirsterror to true
added a new constant ` selectableItemBackground ` to the R . java file to provide a visual representation of the selectable item background
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to simplify import statements and provide a
updated eventType assignment logic in TxnSetOperation . java to ensure correct event type handling for null records
added a new ` ResumableRandomAccessFileListener ` class and updated ` ResumingExternalDownload ` to use it to improve file handling capabilities and
updated the class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java
added logic to set size and format strings in HSSFDataFormat . java and updated test assertions in TestWorkbook . java to ensure correct format
[ hotfix ] [ kafka ] mark flinkkafkaproducer a deprecate .
updated the calculation of compressedChunkLength in CompressedInputStream to use maxCompressedLength instead of compressedChunkLength to ensure accurate validation of compressed chunk length
( chore ) camel - core : camel - idempotent - add support for expire idempotent value
fix bug in container repair when itemstack1 . func _ 77952 _ j ( ) use metadata here instead of damage .
added a check for ` realLocalRepo ` before setting the artifact version in ` LegacyLocalRepositoryManager ` to ensure that the artifact path is only
added checks for task manager initialization and improved error handling in LocalInstanceManager , JobManager , and JobManager classes to enhance error reporting and ensure proper
added additional message for alternative repository deployments in AbstractArtifactResolutionException . java to improve clarity and usability of the deployment process
updated ` getInternalTemporalPath ` calls to include ` mContext ` parameter in ` FileStorageUtils . getInternalTemporalPath `
added a method to retrieve FeedEntryStatus by entries and updated imports in FeedEntryStatusDAO . java to enhance functionality for fetching FeedEntry
added blocking execution logic in ContextImpl and improved test cases in BlockedThreadCheckerTest to ensure proper execution of tasks when blocking is disabled
updated the ` instantiate ` method to accept a ` String ` parameter and added a null check for ` ctorArg ` in ` FormatterConverter ` to
added conditional logic to add vCards based on Android SDK version to ensure vCards addition only occurs for devices running Android O and above
replaced calls to ` setRemoteAddress ` and ` setRemoteHostname ` with direct assignment of ` remoteAddress ` and ` remoteAddress ` to improve code clarity
added a null check for the realClass variable in Robolectric . java to ensure that the shadowClass is not annotated with @ Implements
added a check for tlsMutualAuthenticationRequired ( ) in NettySslContextFactory and ExampleNettySslContextFactory to enhance security by ensuring
http : / / issues . apache . org / jira / browse / amq - 4252 - add test for sslexception in basichttp
added getters for consumer and producer in AbstractKafkaResumeStrategy to enhance encapsulation capabilities for consumers and producers
reformatted code for consistency and readability in PageChangeListener . java and FrameRenderer . java to improve code readability and maintainability
updated warning message from " address / subject / text " to " SMS " in CommunicationsManager . java to improve clarity of warning messages related to email
add draftqueryoptimise ( ) and draftqueryoptimise ( ) method to beandescriptor
added error handling for resource temporarily unavailable exceptions in transferTo method to improve robustness by handling potential IOExceptions gracefully
updated array declaration syntax from byte [ ] to byte [ ] in ExecutableFactory and ZipFolder classes to improve code readability and maintain consistency in array
updated package - info . java files for multiple Java files to improve organization and clarity of the codebase
add a working directory to the linked file editor in attachfileaction .
added LoadOptionsBuilder and updated SchemaCrawlerOptions initialization in AccessTest . java to enhance schema configuration flexibility by allowing dynamic configuration of schema info level
changed package name from ` org . openj9 . test . loadLibrary ` to ` j9vm . test _ load _ legacy _ library
modified the return statement in TestReader to return null instead of throwing an exception to improve error handling by returning null instead of throwing an exception
added methods to set name , enabled , and expanded properties for prototypes in ProjectProperty . java to improve clarity and functionality of prototype property management
refactor ConnectionInfo creation to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
refactor DataStreamJob class to improve code organization to enhance maintainability and readability of the code
updated error handling in TestContentProvider to use try - with - resources for FileOutputStream to improve resource management and prevent potential resource leaks
camel - 14297 : camel - cxf : use classhelper . getrealclass ( ) instead of classhelper . getclass ( )
added a check for " h2 - 14 " protocol in HTTP2ServerConnectionFactory . java to ensure proper handling of HTTP / 2 protocols
updated method symbol handling and parameter handling in LambdaToMethod , LambdaToMethod , ClassFileVisitor , LambdaTest , LambdaTest , and ReflectionVisitor classes
updated the regex pattern in CoordinationTransformer . java to use " WHNP = what < WP > " instead of " WHNP
increased the timeout duration for the URL file copy operation from 5000ms to 60000ms to allow more time for file copying to complete
added phraseSlop property to mpq in QueryParser . java to enable phrase slop functionality for improved query parsing
updated sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to increase sleep duration for better responsiveness
updated the default value of COLLECTOR _ HOST _ PROPERTY from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimeline
refactored gamescheduler . schedule ( ) and screengraalber . savegamepreviewtask ( ) to make it easy to run in parallel
added conditions to hide the compound view based on the availability of edit options in EditShareFragment to ensure the compound view is visible only when available
added progress calculation in DepthController . java to ensure progress does not exceed the expected value
removed the ` packetReceived ` method from ` ClientSession ` , ` ComponentSession ` , and ` Session ` classes to streamline the packet processing
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored server auto - redirect handling in DelegatedAuthenticationGenerateClientsAction to
added null check for the service in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUIAction classes to prevent potential NullPointer
added ` hidden = true ` to the ` arity = 1 ` and ` hidden = true ` parameter in ` PantheonCommand . java
added a call to ` builder . doNotInstrumentClass ( " androidx . room . CoroutinesRoom $ Companion " ) `
added synchronization to the isSupported method in NegotiateAuthentication . java to ensure thread safety when accessing the context class loader
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the initialization process by eliminating unnecessary code
camel - 14265 : camel - persistent - queue - reply - manager should set maxconcurrentconsumers to 1 to avoid race condition
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
pdfbox - 4071 : do n ' t flush line if the writer be a tagged image .
log4j2 - 147 add test for patternselector . createselector ( )
simonstewart : make it easy to run the iehta test under the selenium core
updated the ` thank ` method to ` MwThankPostResponse ` and added a new ` MwThankPostResponse ` class to
added SocketBased interface and updated ChannelEndPoint to extend AbstractEndPoint and SslConnection to implement SocketBased interface to enhance socket handling capabilities in the application
refactor revokingStore initialization and disable methods in Manager . java to improve code readability and maintainability by reducing redundancy
add test for hql collection implicit join
replace line breaks with line breaks for expected and actual text in NonVisualRegressionTest . java to ensure consistent formatting of expected and actual text
added a ` filesToCommit ` collection and updated references in ` IndexWriter ` , ` MockDirectoryWrapper ` , and ` SegmentInfos ` to
replaced ` final ` annotations with ` @ Final ` annotations in multiple methods in ` BaseError . java ` to improve code readability and maintainability
added validation for the percent value in ConsumeUserResourcePercentActuator to ensure that the percent is within valid limits to prevent runtime errors
added a condition to check for old login status in AuthenticatorActivity to ensure compatibility with old login settings in the application
[ hotfix ] [ test ] rename streamnetworkthroughputbenchmarktests to streamnetworkthroughputbenchmarktest
updated the response page setting logic in EditTeamPage . java to use UsersPage . class instead of EditTeamPage . class to improve clarity and
updated debug log message from " error with cred file during startup " to " initializing plugin credentials " to improve clarity of error messages for better debugging
added a finally block around the shutdown of the server socket channel to ensure proper resource management and prevent potential memory leaks
refactor Rocket class to improve code structure to enhance maintainability and readability of the code
added a method ` createDynPartSpec ` to handle dynamic partition specifications in ` BaseSemanticAnalyzer ` to improve code readability and maintain
refactored the rounding factor handling in the StringTemplate class to improve clarity and functionality to enhance code readability and maintainability by using a more
added directory traversal functionality to ` JarDirectoryStep ` , ` DirectoryTraversal ` , and corresponding tests in ` JarDirectoryStepTest ` to ensure that
added a new file ` JWKSetEditor . java ` that extends ` PropertyEditorSupport ` for setting JWK values to facilitate the editing of J
replaced ` minTerm ` and ` maxTerm ` with ` firstPendingTerm ` and ` lastPendingTerm ` in ` OrdsBlockTree
do n ' t call method . resolveparameterklasses ( ) on throwabletracer .
changed the default value of byIP from true to false in fetcher . threads . per . host . by . ip from true to false to
refactor query timeout handling logic in StatementUtil . java to improve readability to enhance code readability and maintainability
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher , and implemented target configuration hashing in HaskellGhciRuleIntegrationTest to
refactor ReplicaPosition class to improve code organization to enhance maintainability and readability of the code
cloudstack - 10265 : fix the bug that the initial delay for network usage stats update task be incorrect .
updated interpolators in QuickstepAtomicAnimationFactory , AllAppsTransitionController , and AllAppsTransitionController to use FINAL _ FRAME
updated swipe height calculation in Background . java to use a calculated swipe length to improve UI responsiveness based on display density
added a new module - info . java file for the Jetty server module to provide a module - info . java file for the Jetty server
fix nullpointerexception in jsontype . setvariable ( string , string , string ) .
simplified the initialization of the InitialContext in ResourceResolverBean . java to improve code readability and maintainability
[ hotfix ] [ runtime ] use default value of checkpointconfig . get ( ) instead of optional .
updated the ` reportInnerClassReferences ` method to use ` Element ` instead of ` TypeElement ` and added handling for ` @ TopLevel ` elements
updated the command string format in TimestampCheck . java to include a space to improve readability and maintainability of the code
replaced FluentIterable with MoreCollectors for filtering and mapping files in ChromeTraceBuildListenerTest . java to improve code readability and maintainability by
fix ( config ) : do not register dubbo service if register _ key be set to true
do n ' t close session if security otr mode be disable .
added outline size , transparency , and transparency properties to PreviewProperty and NodeLabelRenderer classes to enhance rendering flexibility by allowing customizable outline size and
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated the method call from false to true in Win32FontManager . java to ensure consistent behavior in font management
added a null check before setting the cursor in TreeVisitor . java to avoid potential NullPointerExceptions when the variable is not initialized
[ hotfix ] [ runtime ] add error handling policy to jdtbatchcompiler
added content alignment and text anchor functionality to LabelBlock and LabelBlockTests classes to enhance label rendering capabilities by allowing customizable text anchors
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the code
refactor IndexReader class to improve code structure to enhance maintainability and readability of the code
changed the type of the ` isLoopback ` variable from ` boolean ` to ` Boolean ` and added null checks for ` networkInterface ` to
updated the ` fromRfc1123DateString ` method to accept a ` Locale ` parameter in the ` fromRfc1123DateString
updated the download message to include an extension for PDF files to ensure the download functionality works correctly with the correct file extension
added a new property ` OUTPUT _ NO _ HITS ` to ` AbstractJsonQueryElasticsearch ` and modified ` AbstractPaginatedJson
removed the aggregationRatio parameter from the updateQuotaDiskUsage and updateQuotaRunningVMUsage methods to simplify method signatures and improve code readability
[ java ] add try - catch to switch statement in election . java
remove unnecessary null check in streamfilesp . flatMap ( )
added a check for item presence in PageChangeListener . java to ensure the item is not null before processing to avoid potential NullPointerExceptions when the item
added a method ` isWriteProtected ` to ` Workbook ` , ` RecordInputStream ` , and ` HSSFWorkbook ` classes to check if
added a try - catch block around the unregisterInvalidatedSessions ( ) method call to handle potential exceptions during session validation to improve error handling and
refactor CategorizationFragment class to improve code organization to enhance maintainability and readability of the code
updated the status message from " reachable = false " to " not reachable " in HueLightHandler . java to clarify that the status detail is
added a loading flag to FMLClientHandler and created a new GameSettings class to manage the loading state of the FMLClientHandler
updated return statements in UI and BlockInventoryFragment to use Core . bundle . getOrNull ( " unit . millions " ) instead of mil [
refactor MessagePackParser to use a switch statement for string type handling to improve code readability and maintainability by using a switch statement
added parameterized tests for using reserved words as relationships in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure that queries with reserved words
added unit tests for serialization and deserialization of a map in MapTest . java to ensure correct handling of nested maps in JSON serialization and deserialization
added boundary checks for x2 and y2 in GeometryUtils . java to ensure proper handling of bounds in geometry calculations
removed unnecessary casting of SORT _ ORDER _ DIALOG _ TAG and updated related methods in FileDisplayActivity and ReceiveExternalFilesActivity to improve
do n ' t try to find the testplan if there be no testplan
replaced instances of ` dbmsType ` and ` schemaName ` with ` getDbmsName ` , ` getSchemaName ` , and ` getColumnName
modified the handling of the ` argIdent ` variable and added a null check for ` argIdent ` before adding it to the parameters to ensure proper
updated the default protocol from " SSL - HTTP / 1.1 " to " SSL - HTTP / 1.1 " in JettyHttpComponent9 . java to
set default value of displayvolume to true in volumeVO . java to enable display volume functionality by default
updated the ` version ` method to accept a boolean parameter and modified the ` version ` method to accept a ` boolean ` instead of a String to
refactor condition checks in ChangeLogParameters to improve clarity and functionality to enhance code readability and ensure proper handling of global change log parameters
changed log level from warn to debug in JtaTransactionManager . java to improve logging clarity by using a more descriptive log level
hhh - 16432 skip setoperationtest on oracledialect and oracledialect
refactored socket timeout handling in Connection . java to improve clarity and maintainability to enhance code readability and maintainability by reducing redundancy
added a condition to check if the MainActivity is not the popup before calculating the status bar height in multiple fragments to ensure that the status bar is
[ java ] change default value of cha option from false to true .
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 13636 - fix
updated JodaTimeRangeRandomizersTest to use a wildcard import and refactored related test methods to improve code readability and maintainability by
added conditional logic to redirect entities based on servlet version in WebDescriptor . java to ensure proper URLs are redirected based on the Jakarta
add node status check to readiness . isready ( ) and readiness . isready ( )
updated loop references from ` liveEndpoints ` to ` handler . endpoints ` in ` StorageProxy . java ` to ensure the correct endpoint is used for
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
update RPC version from 1 to 2 in DataRpcConfig and UserRpcConfig classes to reflect the latest version of the RPC
added a null check for the System . getSecurityManager ( ) before accessing package access checks in ObjectStreamClass and ObjectStreamField to avoid potential NullPointerException
refactor methods in Utils . java and update UGSCommandCount in XLCDCommunicator . java to improve code clarity and maintainability by
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 11919 .
[ hotfix ] [ test ] add mockbrowsertest to the suite
change default settings from OFF to ERROR in Launcher . java to ensure proper logging behavior for error scenarios
changed member variables from non - final to final in IconNormalizer . java to enforce immutability and improve code readability
added a boolean flag ` firstCallPrepareDo ` and modified the prefix invocation logic in ` PrepareInterceptor ` to conditionally invoke prefix methods based on
refactor focus handling and overview mode logic in Launcher . java to improve clarity and maintainability of the code
replaced ` asEagerSingleton ( ) ` with ` @ Singleton ` in ` AuthWithStoreFeature . java ` and ` Auth . java ` to
updated the ` incomingAssociations ` method to include a ` ignoreInvisibleAssociations ` parameter and modified the condition for the ` incomingAssociations
fix : remove private ip when remove a pod from the list of configs .
[ hotfix ] [ runtime ] add more documentation on profiler home page
swagger - v3 - oas : add requiredreffieldmodel to the modelresolver so that it do n ' t apply required flag also
renamed ` CasCoreConfiguration ` and ` CasCoreEnvironmentBootstrapConfiguration ` to ` CasCoreConfigurationWatchAutoConfiguration ` and ` Ca
refactor FeatureFlags class to improve code organization to enhance maintainability and readability of the code
updated the size of ` StringBuilder ` and modified the unique ID generation logic in ` ConfigStore . java ` and ` CommonSetup . java ` to
added picture handling in TimeLineCursorAdapter , TimelineArrayAdapter , and TimeLineCursorAdapter , and TimeLineCursorAdapter , and Timeline
updated the compaction messages in HiveConf . java to clarify that compaction on insert - only tables can be run via queries to ensure that compact
added a null check for storage path before checking if the waiting to send to prevent potential NullPointerException when storage path is not available
replaced ` resizeThreshold < = keysAssigned ` with ` checkResize ( ) ` across multiple classes to improve code clarity and maintainability by using a
refactor LDAPConnectionService to improve connection handling to enhance performance and maintainability of LDAP connections
removed the ` required = true ` annotation from the ` @ XmlAttribute ` annotation in ` AggregateDefinition . java ` to improve code clarity and maintainability
added debug tracing logs for the NO _ BACKGROUND _ TO _ OVERVIEW _ TAG in TouchInteractionService , RecentsAnimationDeviceState ,
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoftAssertions . java to
updated the expected length assertions in TestMultiSearcher . java from hits . length ( ) to hits2 . length ( ) and hits3 . length
added a new file ` LucenePackage . java ` containing a utility class ` LucenePackage ` to provide a utility for creating a ` LucenePackage `
corrected the calculation of sizeInBytes in RAMDirectory . java to correct the calculation of sizeInBytes
added estimate ( ) method to GenericUDAFBloomFilter , GenericUDAFBloomEvaluator , and BloomKFilter classes to improve
added a null check for the drawerToggle in MainActivity . java to avoid potential NullPointerExceptions when getDrawerToggle ( ) is null
added @ SuppressWarnings ( " unused " ) annotation to convertToAuthentication method to suppress unused warnings for better code clarity
jdk . internal . loader . classloaders $ appclassloader and jdk . internal . loader . classloaders $ platformclassloader should not be scan
updated MSBibConverter to include a BibEntry parameter and modified getAuthors method to accept an additional field name to enhance functionality by allowing
refactor core recovery cancellation logic to use a dedicated method to improve code readability and maintainability by encapsulating cancellation logic
refactor time calculations in bug5070081 . java to use a dedicated method for better readability to improve code clarity and maintainability by reducing
updated the condition for clicking the authentication control options in RepoEditView . java to improve code readability and maintainability
[ hotfix ] [ table - planner - blink ] fix typo in javadoc
added security trust resolver and default role prefix configurations to SecurityExpressionRoot to ensure proper handling of default security fields in the security evaluation context
added a check to set exponentSize to primeSize - 1 if it is zero to ensure exponentSize is set correctly based on primeSize
replaced instances of ` getFileUsableSpace ( ) ` with a new method ` getUsableSpace ( ) ` in multiple files to
updated the aggregation logic in DistinctSqlAggregation to iterate over values instead of using delegate to improve performance and ensure correct behavior of aggregation operations
added a test method to verify the execution of post - login activities in UserServiceTest . java to ensure that post - login activities are executed correctly
refactor ExtractorSpanishStrippedVerb to accept a path parameter instead of a static final instance to improve flexibility and prevent potential null pointer exceptions
refactor CharArraySet to simplify type checks and improve performance to enhance code readability and maintainability by reducing redundancy
updated error messages for track formats in MuxerWrapper . java to improve clarity and consistency in track type validation
updated ` JsBundleGenrule ` to use ` AndroidPackageable ` instead of ` JsBundleAndroid ` and modified ` addAssetsDirectory
added UTF - 8 character encoding settings and refactored string indexing logic in StringDictionary to improve character encoding handling and ensure proper string indexing
updated case name from " Logical Analyzer " to " Logic Analyzer " in InstrumentsFragment . java to clarify the purpose of the
added instanceClassName and instanceClass fields to AbstractVector and modified vector instantiation logic to ensure proper instantiation of Vector instances
removed syncMetaLeader ( ) method from CMManager . java to clean up the code and improve readability
updated the return statement in ` FeedbackQuestionDetails . java ` to use ` noResponseHtml ` instead of ` responseAnswer ` to improve clarity
added import for TestLoggingExtension in DiagramRendererTest . java to enable logging functionality in the test framework
updated method signatures to include a ` mapUnderscoreToCamelCaseMapping ` parameter across multiple classes to enhance property mapping functionality by allowing the use of camelCase mapping
added VIOMI _ WATERHEATER _ E1 device to MiIoDevices . java to support the VIOMI Internet electric
updated variable names from ` getSslSessionData ( ) ` and ` getSslSessionData ( ) ` to ` sslSessionData ` to improve
added a new file CreateNewSpreadsheet . java to create a new spreadsheet using XSSFWorkbook to demonstrate the creation of a new spreadsheet with various
changed the type of ` ttl ` and ` setUseKeyPrefix ` methods from ` Duration ` to ` long ` in ` CacheProperties ` and
updated CONTENT _ URI references from CONTENT _ URI to CONTENT _ URI _ NO _ NOTIFICATION across multiple files to improve clarity and functionality by using a
updated the version number for the test compile group in SwaggerResolveTest . java to reflect the latest version of the wiremock library
replaced ` lucidaFontName ` with ` this ` in ` SunFontManager . java ` to ensure thread safety when accessing the `
added a condition to check for the character ' < ' in the ' ltLen ' condition to ensure proper handling of special characters in the string comparison
updated the return statement to use String . format instead of String . format to improve code readability and maintainability
added import for Scope and logged a message when no validation errors are found to improve user experience by providing feedback when no validation errors are found
refactor IntegrationTestContextLoader to utilize new WebMergedContextConfiguration and improve resource loading logic to enhance test context loading capabilities and ensure proper context
updated conditional checks in Component , Container , JavaSEPort , and JavaSEPort classes to improve scroll behavior and ensure proper handling of scroll events
removed unnecessary whitespace in the UUID type check to improve code readability and maintain consistency
added a new ` ClientStat ` class and updated related methods to use ` String ` types instead of ` Long ` types across multiple classes to improve
updated regex pattern and value replacement logic in CellContentConverter . java to improve code readability and maintainability
updated regex patterns in SeleneseTestCase . java for regexp transformations in SeleneseTestCase . java to improve accuracy in glob transformations
[ hotfix ] [ test ] fix typo in mondrianproperties
added stack trace printing functionality to ProcessTools . java and modified CustomLauncherTest . java to handle various thread stack traces to enhance debugging capabilities and
[ hotfix ] [ test ] remove unused test for embedded image
added a conditional check before converting storeType in CodeGenerator . java to avoid unnecessary conversion when the symbol has a slot for the store type
refactor ContainerMediaChunk and InitializationChunk to conditionally initialize input and output based on nextLoadPosition to improve code readability and maintainability
updated imports and refactored IndexWriterConfig initialization in BaseLockFactoryTestCase . java to use PrintStreamInfoStream instead of IndexWriterConfig .
tika - 164 - add support for dynamic loading of service loader in tika - config
updated imports and added package - info handling in DocLint . java , DocLintTester . java , and DocLintTester . java to improve
added a new command check for the IMPORT _ CMD in DataImportHandler and DataImporter classes to ensure that the IMPORT _ CMD
added a test to ensure that inner classes are not modified if ignoreDefinition is true to ensure proper handling of class declarations when ignore definition is true
removed the import of android . util . Log from JettyService . java to streamline the code by eliminating unnecessary dependencies
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method and updated related checks to include workspace screens to enhance item placement
add ` ` KillSwitchServlet ' ' to the ` Jetty7AppServer ` class and create a new ` KillSwitchServlet ` class to
fix nullpointerexception in realtimesegmentdatamanager . index ( )
added a check for the operating system name " Teredo " in the Tests class to skip processing for Windows operating systems
add contact dialog now show a warning if the protocol provider be not register .
replaced the registration of ` getRegistry ( ) . getRegistry ( ) ` with ` BeanComponentDefinition ` in ` AuthenticationConfigBuilder . java `
updated the drawBitmap method to use a null parameter instead of a fixed position to simplify the drawing process by removing unnecessary dimensions
updated date formatting in MeitrackProtocolDecoder , TotemProtocolDecoder , and TotemProtocolDecoder classes to improve code readability and maintain
changed method visibility from protected to protected for getFontPath and getPlatformFontPath in SunFontManager and X11FontManager classes to enhance encap
added multiple @ Deprecated annotations to EnhancedRandom . java to indicate that these methods should no longer be used in future development
[ hotfix ] [ test ] use executionexception instead of reachedmaxsizeexception
add option to keep empty sentence by default
updated the ` createArtifactSubdirectory ` method to return a boolean indicating success or failure to improve error handling by providing clearer error messages and ensuring
replaced instances of ` Symbol . Symbol ` with ` JavaCompilerService . NO _ MODULE _ COMPILER ` across multiple Java files to improve code
added a null check for the resource returned null answer in DirectAgentAttache . java to prevent potential NullPointerExceptions during resource retrieval
updated the sendEmail method to throw a MessagingException instead of throwing an MessagingException to simplify the email sending process and improve error handling
fix nullpointerexception in pipeitemsobsidian . getitems ( ) .
updated method signatures in DateFormatEvaluator and FileListEntityProcessor to accept a Locale parameter instead of a hardcoded string to improve code readability and
added a boolean field ` includeDecals ` and its getter / setter methods to ` StorageOptions ` and updated ` StorageOptionChooser ` to
added a null parameter to the generateDocumentation method in Liquibase . java and modified the getImplementedDatabases method in LiquibaseTest
updated the handling of JSON perf logger in HiveProtoLoggingHook . java and modified test methods in TestHiveProtoLoggingHook . java to
updated log message from " Begining " to " Beginning " in SolrIndexConfig . java and DocExpirationUpdateProcessorFactory . java to improve
added a new constant MAJOR _ VERSION and updated the expected output message in ignoreRecordAttribute . java to ensure the class file version is correctly
added a new test class LdapPasswordAuthenticationTest for LDAP password authentication to ensure proper handling of user passwords in the LDAP authentication process
updated import statements in TaskCompiler . java to use BasicStatsNoJobTask instead of OrcInputFormat to ensure compatibility with BasicStatsNoJobTask
do n ' t reload on save ( ) if the editor be null .
refactor VisibleAdvance class to improve code readability to enhance maintainability and facilitate future updates
[ kubernetes - client ] make sure we do n ' t try to start a sharedindexinformer if there be an exception .
added a condition to check for dynamic number columns in EdgeDataTable , NodeDataTable , and EdgeDataTable to ensure that number lists and nodes
added null checks for parameters in ResolvedGroupArtifactVersion and mapPlugins methods to enhance code robustness and prevent potential NullPointerExceptions
added null check for apiInfo in V2HttpCall . java to avoid potential NullPointerException when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code readability and maintainability
added shader loading and destruction functionality to PhotoPanel and FlameRenderer classes to enhance rendering capabilities and ensure proper resource management during rendering
updated method parameters in FxWindow , InsnListEditor , InsnListEditor , InsnProxyListEditor , and InsnProxyList
updated CSSParser logic to ensure proper handling of whitespace characters in CSS parsing to ensure proper parsing of whitespace characters and prevent potential ArrayIndexOutOfBoundsExceptions
added a check to determine if the application is a JDK look and feel in UIServiceImpl . java to ensure that the JFrame and JDialog
removed the ' this ' keyword from the SQL query in HostRoleCommandDAO . java to simplify the code and improve readability
updated message constants in LJ1200Message . java to replace " F5 _ UNKNOWN " with " F6 _ TRANSPONDER
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve code readability and maintainability to enhance code readability and maintainability by
changed the type of ` mHostDb ` from ` HostDatabase ` to ` ColorStorage ` in ` ColorsActivity . java ` to improve
refactor String class to improve code readability to enhance maintainability and facilitate future updates
removed unused logger initialization from multiple Java files to streamline the code and improve maintainability by eliminating unnecessary dependencies
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to retrieve global entries from the map to improve access to
added multiple assertions for ` PublicMethed ` method calls in ` MultiSign34 . java ` to ensure that the ` sendcoin ` method
updated test imports from JUnit 4 to JUnit 5 in CUFilterTest . java to align with the latest JUnit 5 features and
updated classpath appending logic to use a configurable path separator to ensure consistent path formatting across different operating systems
changed the access modifier of the ` augmentSuccessViewModelObjects ` method from static to instance to allow access to the ` augmentSuccessViewModelObjects ` method
added assertions for field presence of properties in MetamodelTest and updated field retrieval method in TestUtil to ensure proper validation of property presence in metamodel
removed the configuration parameter from Outlink constructors across multiple parser classes to simplify the code by eliminating unnecessary configuration parameter
removed LexicalContext parameter from ensureUniqueNamesIn and copyFinally methods across multiple files to simplify method signatures and improve code clarity
added imports for RemoveUnusedImports and modified type expression handling in UseLambdaForFunctionalInterface . java and TypesInUse . java to enhance
removed the appendClassSelector method from the list of class files in TestNGAntTask . java to simplify the code and improve readability
added a check for the root input type in HiveCardinalityPreservingJoinOptimization to ensure that the root input is not supported for aggregates
change registry event to use the registrymanager . active . getregistry ( name )
updated variable assignments for x3 , y3 , and y3 in Intersector . java to improve code readability and maintainability
add default methods for ` sbeDecodedLength ` , ` sbeLimit ` , and ` sbeLimit ` in ` MessageDecoderF
updated ElasticsearchContainerTest to use a constant ELASTICSEARCH _ VERSION instead of a hardcoded version to improve code readability and maintainability
peermessage . parse ( byte [ ] , byte [ ] , bytebuffer . limit ( ) should use bytebuffer instead of bytebuffer .
added version ID handling in ClusterDefinition and updated related methods in GSInstallerClusterProvider and GSInstallerClusterProvider to support versioning and improve
camel - 14284 : camel - ftp - remove the setconfiguration method from camel - ftp
[ zeppelin - 2243 ] set dependency on user permission when load dependency .
refactor local variable handling in Gen . java and add a new test class NoLocalsMustBeReservedForDCEedVarsTest . java
added basic constraints check in ForwardBuilder . java and created a new BuildEEBasicConstraints . java file for certificate validation to ensure proper handling of basic
add initafterfirstdbconnection ( ) method to jdbcpostgresqldao . initafterfirstdbconnection ( )
added a maximum message size limit in SimpleEchoClient and implemented input buffer size validation in AbstractWebSocketConnection to ensure sufficient buffer size for WebSocket connections and
removed unnecessary variables and added assertions for pending delete counts in SegmentReader . java , and added a new test method in TestIndexReader . java to
added null check for scopes in ClientRegistration . java and updated test cases in ClientRegistrationTests . java to improve robustness by preventing potential NullPointerException
added null checks for the ' orderBy ' parameter before adding it to the explanation to avoid potential NullPointerExceptions when the ' orderBy ' parameter is not
updated import statement from JUnit ' s assertThat to Hamcrest ' s MatcherAssert in ClusterEntrypointTest . java to use Hamcrest
cloudstack - 10284 : do n ' t create vm snapshot if the vm be back up .
replaced direct call to LogUtils . initHiveLog4j ( ) with a variable initLog4jMessage to improve code readability and
added a check for non - empty tasks before accessing the first element in AssetManager . java to ensure proper handling of empty tasks and prevent potential
change deletenode to return boolean instead of void .
[ iotdb - 421 ] fix the bug of tskvlatestentity . getkeyvalue ( ) and getkeyvalue (
added checks for empty barcodes in Code128Reader , Code39Reader , and FalsePositivesBlackBoxTestCase to ensure that an empty barcode is
changed ` TreeSet ` to ` LinkedHashSet ` for ` suites ` in ` SSLContextImpl . java ` and ` SystemPropCipherSuitesOrder
added a method to check if a character is a control character in Escaper . java and updated the expected string format in InternationalizationTest . java
updated SqlProvider to handle CharSequence types and modified oneArgument method to return a StringBuilder instead of String to enhance type safety and prevent potential NullPointerExceptions
added null checks and null checks for aliasChildren and aliasChildren in InternalMNode . java to improve code robustness and prevent potential NullPointerExceptions
added a method to calculate the layout transition offset for a page in PagedView to improve layout transition logic for better user experience
[ java ] do n ' t generate synthetic template if autoformat = true .
added a setAccessible method call to WidgetInterceptor . java to ensure the method is accessible before accessing its value
added a check for the raw name " database . server . id " before setting the literal initializer in ConnectorConfigGenerator . java to ensure that the
updated Mozilla version from Intel Mac OS X 10.7 to AppleWebKit / 537 . 36 in AbstractRipper . java to
added a menu item for the web interface in BasicSystemUtils . java to display the server ' s IP address to enhance user experience by providing a
added a new variable ` actualValueName ` and updated the initialization logic in ` HandleGetter . java ` to improve clarity and maintainability of the
added error handling for ArrayIndexOutOfBoundsException in the buildRecordAtOffset method to ensure robustness by preventing potential ArrayIndexOutOfBoundsExceptions
[ java ] improve logging of filecheckpointio and filecheckpointio
call loadbattlepassmanager ( ) before postload to avoid null pointer exception
updated Docker image format and modified echo messages in PortForwardingContainer . java to improve readability and maintainability of the code
added a bigObject array and forced a full - gc call to System . gc ( ) in ThresholdTest . java to ensure proper resource management
updated log level checks in StdErrLog . java and added new debug assertions in StdErrLogTest . java to ensure correct logging behavior and improve
fixed - redissonremoteservice . getremoteserivce ( string name ) method throw npe if service name do n ' t match name
added methods ` isSelected ( ) ` and ` setSelected ( ) ` to the ` MultiButton ` class and updated the ` invertFirstTwoEntries `
updated the activity type from UpNextActivity to NextUpActivity in CustomPlaybackOverlayFragment . java to ensure the correct activity is used for playback playback
[ java ] remove unnecessary whitespace in brokercontroller . getcontrollermode ( )
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection instead of ReactiveServerCommands to ensure proper resource management and prevent potential memory leaks
updated the ` getBrandColor ` method to accept a ` resourceId ` parameter and modified the ` getBrandColor ` method to accept a resource ID
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and
added multiple factory registrations for various adapters in ToolingApiLauncher . java to improve code readability and maintainability by reducing redundancy
[ hotfix ] [ test ] fix checkstyle violation in testpayloadcheckquery
simplified the print logic in ConsoleReader and added a test for reading a line with a mask in ConsoleReaderTest to improve code readability and ensure
added user confirmation and user information display in BaseCommand . java to enhance user experience by providing feedback during command execution
move org . graalvm . compiler . test from org . graalvm . compiler . test to org . graalvm
[ hotfix ] [ test ] remove unused constructor from slotsharinggroup
added a check for Java 8 compatibility in StreamExInternals to ensure compatibility with Java 8 features in the stream handling logic
updated the data directory from " data / wheel . png " to " data / sys . png " in DecalTest , MusicTest , and
added unregisterReceiver calls for mCloseSystemDialogsReceiver in mmm Launcher . java and ppp Launcher . java to ensure proper registration and un
updated import statement for Cluster in HostsRemovedEvent . java to ensure consistency in import syntax and improve code readability
changed the ` reuseRefreshToken ` variable to true and added a ` allowIntrospection ` property with corresponding getter and setter methods in ` ClientDetailsEntity `
replaced direct calls to ` write ` with ` writer . write ` and added a new method ` htmlEncode ` to encode session attributes to ensure consistent
added link annotations for PhrasePrefixQuery and SpanQuery in Query . java to enhance link functionality for better span management
replaced size ( ) = = 0 with isEmpty ( ) in CommentsInserter and CommentsParser classes to improve code readability and maintainability
fix nullpointerexception in novalueofonstringtype . isliteralstringconcatenation ( )
changed method parameter types from A to Object in multiple assertion classes to improve type safety by using more generic types
updated the ` ThrowingFunction ` interface to use generics and changed the type of ` ThrowingFunction ` from ` Object ` to ` T
added ` getUploaderBehaviour ( ) ` and ` setUploaderBehaviour ( ) ` methods to ` AppPreferences ` , ` PreferenceManager ` ,
fix : fix nullpointerexception when initialize final field in constructor
updated BitmapDrawable instantiation to use Robolectric ' s Bitmap class to improve compatibility with Robolectric ' s performance
removed the ` isValidSEnding ` method and added a ` char c ` variable in ` DutchStemmer . java ` to streamline the
updated the drawable resource from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` in ` PageMarkerResources ` to
added a new variable ` reinvocations ` and updated logging statements in ` BasicInvocation . java ` to track the number of backups in the
updated the calculation of topPadding to use getInnerHeight ( ) instead of getHeight ( ) to ensure correct padding based on the inner height of the
added a break statement in the Recognize . java file to ensure proper handling of break statements in the code
added preference management for home screen locking in Workspace , FolderNameEditText , and PopupContainerWithArrow classes to enhance user interaction with home screen
added support for cached formula results in ExcelBatchReader and implemented a test for text formula functionality in TestExcelFormat to ensure correct handling of text formula
pmd : fix a bug in immutablefield where assignment in anonymous inner class do n ' t exist .
added a new ` userAgent ` field and modified ` userAgent ` assignment in ` HttpGetter ` to retrieve the user agent based on application settings to ensure
added a required attribute to the XmlAttribute annotation in AvroDataFormat , BarcodeDataFormat , and Base64DataFormat classes to ensure proper
change log level from info to debug for file not found to improve logging granularity for debugging purposes
rename the test class from QueueTest to QueuedPipeTest to clarify the purpose of the test class
updated version check logic in BukkitMain . java to use a method for retrieving the unique ID to ensure compatibility with newer Bukkit versions and handle potential
updated DefaultRoutesCollector to include pattern checks and improved error handling for route discovery to enhance robustness and maintainability of the route detection process
added vertex color support to pshape3d .
added a new boolean parameter ` isPkColumnFiltered ` and updated related methods to include ` isPkColumnFiltered ` and ` filtered _ out `
removed the import of Shadow and simplified the method call in ShadowMotionEvent . java to simplify the code by eliminating unnecessary dependencies
changed the package of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck . parser ` to
simplified the logic for handling class definitions in GroovyEngine . java to improve readability and maintainability of the code
[ hawtio - branding ] move brandingservlet to plugin instead of brandingservlet
removed debug print statements from NativeCodeGenerator . java to streamline output for better readability and maintainability
replaced ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` calls with ` fireChangeEvent ( ) ` in ` FlightConfiguration .
updated ThrowableAssert _ hasCause _ Test to use ExpectedException and added a test for expected exceptions to ensure correct behavior of cause assertions with different types
removed unused variable ` flattenName ` and ` pack ` from ` AutomaticDependencies . java ` to streamline code by eliminating unnecessary variables
[ java ] rename requestedscopes to allowedscopes in clientdynamicregistrationendpoint
added unit tests for setting profile settings in Firefox options , capabilities , and capabilities in MarionetteTest . java to ensure correct behavior of Firefox
added description property to route and related classes to provide a way to retrieve the description of the route
refactor JavacTreeMaker class to improve code structure to enhance maintainability and readability of the code
added weight setting to the edge in ImporterCSV . java to ensure the edge ' s weight is correctly set for CSV processing
do n ' t divide the tariff cost per hour by the current month
updated SQL queries in DatabaseMetaData . java and modified column default values in DatabaseMetaData . java to ensure correct retrieval of column data from the database
added a null check for binarized sentences in SentimentAnnotator . java to ensure that binarized sentences are not built by
added string representations for username and enabled , enabled , and account non - granted authorities in User . java to improve readability and debugging of user
added null check for message body in MessageHelper . java to improve robustness by preventing potential NullPointerExceptions
[ hotfix ] [ runtime ] rename taskdeploymentdescriptorfactory . fromexecutionvertex to taskdeploymentdescriptorfactory . fromexecution ( )
do n ' t throw groupnotfoundexception in rosteraccess . cansubscribe ( )
added a reference to the project reference in AbstractJRubyMojo and removed unnecessary suppress warnings in CucumberMojo to improve code clarity and maintainability
removed unnecessary classloader checks in MethodHandleImpl . java and added a new userMethod method in MethodHandlesTest . java to simplify the assertion logic and enhance
added imports for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory , AnalysisSPILoader , and LegacyHTMLStripCharFilter
updated width and height comparison logic in URLImage . java to ensure proper validation of image dimensions
added a condition to check if the name ends with " META - INF / " and modified package name handling to ensure that package names do not
added conditional checks to createImageToFileSystem and createImageToStorage methods in ImageDownloadService to ensure that background tasks are only scheduled for Edt
updated the expected number of values in StackWalkerTest . java to ensure compatibility with version checks and improve logging clarity
changed the access modifier of the addViewportJob method from protected to public to allow access to the addViewportJob method from other classes
removed the ` partitions ` parameter from several methods in ` SimpleWordCount ` , ` RBKTimeSlidingTest ` , and ` RB
removed server restart and check - on - shutdown settings from TestDatabase . java to streamline server shutdown process and improve code clarity
added null and empty checks for the block in NodePathsConvertOperator and improved logic in SchemaQueryMergeOperator to enhance robustness by preventing null and
add gettotalharvestingtime ( ) and getharvestingtime ( ) method to callinfoframe .
updated font drawing parameters in ParticleEditor . java to increase frame size and increase font size to improve rendering performance and responsiveness of the font
added a check for the " keyserver _ port " property in UpgradeCatalog240 . java and updated related tests in UpgradeCatalog2
added a background color to the SvgViewerFactory class to enhance the visual appearance of the Svg viewer
removed the ` @ Config ( minSdk = M ) ` annotation from ` ShadowKeyguardManagerTest ` and ` ShadowKeyguardManager ` to
updated the ` containsExactly ` method to accept varargs instead of a single rest parameter to improve flexibility in handling different varargs types
updated Bucket4jFilterFunctions to use refillGreedy instead of Bandwidth . simple and added a check for non - empty key
added documentation for German language support in GermanAnalyzer , GermanStemmer , and WordlistLoader classes to improve clarity and maintainability of the code
added a new ` postExecHooks ` set to the ` Generator ` class and modified the transformations list in ` Optimizer ` and ` Semantic
added error handling for NoClassDefFoundError in REngine . java to ensure proper handling of NoClassDefFoundError
replaced ` Span . class ` with ` SpanAndScope ` in ` TraceWebFilter ` and ` TraceWebFluxTests ` to improve
added a null check for the cause before setting the exception in AbstractUpdateCommandStep . java to avoid potential NullPointerExceptions when the cause is not
updated SolrServerException constructor to include getBaseURL ( ) as a parameter to enhance error handling by including the base URL
hssfprintsetup : do n ' t set landscape if it ' s not set
added null check for ' o ' in JavaVoidObjectInspector to avoid potential NullPointerExceptions when accessing null values
added validation to check for invalid argument names in ArgDesc . java to ensure that the argument name is valid and prevent runtime errors
added support for handling background location listeners in AndroidLocationPlayServiceManager to enhance location tracking by allowing dynamic updates based on the activity ' s background location
update primitive type check from ` primitiveType ! = ` to ` primitiveType ` in MeshBuilder . java to ensure proper handling of primitive types
trufflestring : fix arrayindexoutofboundsexception in trufflestring
added a method to set the command list in ComboBox to ensure the correct command list is used for the combo box
nifi - 11717 : escape alias filename with forward slash in tlsclientmanager and tlstoolname
updated ZkCLI to use localhost instead of hardcoded hostnames in command - line arguments to ensure compatibility with ZkCLI ' s
updated comparisons in FirmwareUpdateProgressInfo , BridgeHandler , WemoLightHandler , and WemoLightHandler to use getStatusDetail instead of
added a conditional check for remoteGrpcStatus before posting a warning message in LocalFallbackStrategy . java to ensure that the build remotely builds only
reformatted method signatures in XYItemRenderer and XYItemRenderer classes for consistency to improve code readability and maintainability
added entityID to the tick entity if it exists to ensure that the tick entity is not added to the entity list
added a method ` getErrorString ` to handle error strings in ` GLSurfaceAPI18 . java ` to improve error handling by providing a clearer
added support for supported locale in FeatureRegistry and improved error handling in InfoRequestHandler to ensure compatibility with supported locales in the application
updated server URI handling in RFC2616BaseTest to use " http : / / myhost : 1234 / tests / " instead of serverURI
added a call to addToHelperList ( ce ) in Construction . java to enhance code readability and maintainability
added a condition to skip the first of " [ [ ] " in GlyphLayout . java to skip the first of " [ [ ] " escape
added security permissions for setting the context class loader in Transport and TCPTransport classes to enhance security by ensuring proper context class loader management
refactor file handling in ReceiveExternalFilesActivity to check for null paths before calling populateDirectoryList ( ) and browseToRoot ( ) to improve
added null check for m _ serviceLoaderClassLoader before loading it to avoid potential NullPointerException when m _ serviceLoaderClassLoader is null
removed a debug log statement from BarrowmanCalculator . java and adjusted the deltap calculation in TubeCalc . java to improve logging clarity and
updated column assignment logic for nodes and edges in TimelineControllerImpl . java to handle cases where the object is an instance of Node to ensure proper
added registerextracomponents ( ) method to basebrokerstarter so that it can be use by the brokeradminapiapplication
added a new test method ` testBug4658 ` to ` MultiCfQueryExecIT . java ` to verify the behavior of the `
[ java ] use a linkedlist instead of a list in peergroup . getpeers ( ) .
fix a bug in the abstractbuilder that cause the builder to fail when the builder do n ' t update .
updated ` ConfigNodeConfig ` , ` NodeManager ` , ` NodeManager ` , ` RatisClient ` , and ` RatisClient `
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a null check for ManagedService before unregistering JMXHelper to avoid potential NullPointerExceptions when the ManagedService annotation is not available
tika - 147 - add support for detect non - unicode entry name in packageparser
added a new file ` TestSplitThruPhiDivMod . java ` containing a test class ` TestSplitThruPhiDivMod ` to
added methods to lookup generic interfaces and superclass types in TemplateRegistry to improve type safety and prevent ClassCastExceptions
updated the default value of ByteArrayOutputStream from 512 to 1028 to adjust the buffer size for improved performance
updated the list of excluded languages in PlayerSettingsScreen . java to clarify the absence of Chinese and Persian symbols to improve user experience by providing clearer
updated byte array size and handling logic in TransferCompletionHandler . java to optimize memory usage and prevent potential overflow issues
refactor : use windowadapter instead of addwindowfocus ( ) in sipcombobox
added a null check for the source variable before throwing a SemanticException to prevent potential NullPointerException when the source is null
added scaling and center extent calculations for skeletal mesh in SkeletonRenderer . java to enhance the rendering of skeletons based on the current mesh
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to retrieve the
added ComponentScan annotation to SpringWebConfig . java to enable component scanning functionality in the application
removed the method ` getAccount ( ) ` from the ` UserListItem ` class to streamline the code by eliminating unnecessary functionality
added unit tests for installing and setting processName in ShadowPackageManagerTest , ShadowApplicationPackageManager , and ShadowPackageManager classes to ensure proper handling of application
refactor AvailableSettings class to improve code organization to enhance maintainability and readability of the code
added TransactionCapsule fields and their initialization methods to TransactionTrace . java to enhance transaction tracing capabilities for better resource management
add option to use shuffle member list for client connection .
replaced Text with CrawlDatum in SegmentReader . java to improve data handling by using a more appropriate crawl data type
refactor JsonDeserializer class to improve code readability to enhance maintainability and facilitate future updates
updated ` TsfileDBConfig ` and ` QueryProcessExecutor ` to use ` ThreadLocal ` for ` fetchSize ` to improve thread safety and
updated error message from trunk ( ) to trunc ( ) in GenericUDFTrunc . java to clarify the purpose of the error message for better
removed the import of ExecutionContext in TaskletStep . java to streamline the code by eliminating unnecessary dependencies
initialize the title variable to an empty string to ensure the title is initialized with an empty string to avoid potential NullPointerExceptions
added handling for empty responses in AsyncHttpClientCall and a corresponding test in AsyncHttpClientCallTest to ensure that the response body is not null in the
[ micronaut ] deprecate the embeddedserverinstance interface , deprecate it
add macadapter . registermacevents ( ) method to macadapter to register mac event
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related references to improve clarity and maintainability
modified the return statement in the toEnum method to ensure the method returns the correct value for enums
changed the visibility of the hideUnprivilegedObjects variable from private to private final to enforce immutability of the variable
fix audiodatasourcestest and audiodatasourcestest . testaudiofiledatasourcestest . testaudiofiledatasourcestest
added a check to save Giphy Android version in IOUtils . java to ensure compatibility with Android Q and above
fix nullpointerexception in servicetaskvariablestest . testserializedvariables ( ) . testserializedvariables ( )
updated EhCacheTicketRegistry , LdapPasswordPolicyEnforcer , GoogleAccountsService , and SamlCompliantUniqueTicketIdGenerator classes to
refactor logger retrieval logic in MavenLoggerFactory to use computeIfAbsent method to improve code readability and maintainability
hbase - 13234 remove outputstreamoutputstream , it be no longer need .
updated the configuration for the " hive . stats . column . autogather " column in TestAcidOnTez . java to ensure
changed log level from info to debug in MavenEnhancePlugin . java to improve logging granularity and reduce log verbosity
added ` getDefaultProviderName ( ) ` method to ` Platform ` and updated ` StandardNames ` and ` SSLSessionContextTest ` to use it
added Captor annotation processing in MockitoBeforeTestNGMethod . java to enhance the handling of Captor instances in tests
added checks for onlyRun , testMethodNames , and testMethodNames in TestSuiteBuilder . java to ensure that onlyRun , class , and
updated import statements and refactored prefix computation in GroovyAutoComplete . java and GroovyLanguage . java to improve code readability and maintainability
use graphhopper . osm . graphhopper . osm instead of graphhopper . reader . osm . graphhopper . osm . graph
refactored the HttpClient creation to use ClientConfig for improved configuration management to enhance the client configuration flexibility for HTTP requests
changed the ` mHideSysUiScrim ` variable from ` final ` to ` mHideSysUiScrim ` and added functionality to hide
renamed the method ` enqueue ` to ` enqueue ` and added a ` canceled ` flag in ` Call ` and ` OkHttpCall ` classes to
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve code readability and maintainability to enhance code readability and maintainability by
updated the RequestMatcher interface to extend the Spring Security framework ' s RequestMatcher class to ensure compatibility with the latest security framework framework
added a new abstract class ` ImplicitLambdaConsideredForApplicabilityTest ` and modified ` DeferredAttr ` to include ` IF `
[ j2kt ] refactor test to use testutils . isj2kt instead of testutils . isj2kt
added unit tests for the ` applyQualifiers ` method in ` DeviceConfigTest ` , ` DeviceConfigTest ` , and ` DeviceConfig `
replaced IOException with RuntimeException in multiple test files to improve error handling by using RuntimeException instead of IOException
updated the icon resource from ` drawable . logo ` to ` mipmap . ic _ launcher ` in ` RootCursor . java ` to improve
added a line to set the content text in FileUploader . java to improve error handling by setting the content of the error builder
refactor ConcurrentHashMap . java for improved performance to enhance performance and maintainability of the code
added methods to adapt user trades in AbucoinsAdapters , AbucoinsTradeService , and AbucoinsTradeServiceRaw classes to
modified plot removal logic in PlotSquared , Claim , Delete , Claim , and SetBlockFast _ 1 _ 8 classes to improve plot removal
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 11919 .
added handling for VARBINARY data type in BlobType . java to ensure proper handling of VARBINARY data types in the database
updated variable names and conditional checks in SetCookieSupport . java for consistency to improve code readability and maintainability
added synchronization around array type creation in LibFFIContext . java to ensure thread safety when accessing simpleTypeMap
updated ` InboundBuffer ` to use ` ContextInternal ` instead of ` Vertx ` and modified the ` checkContext ( ) ` method to
refactor LdapTimeoutTest to use a deadServerNoTimeout method and improve timeout handling to enhance test reliability by ensuring timeouts are properly managed and
corrected the spelling of " UniocdeData . txt uniName . dat " to " UnicodeData . txt uniName . dat "
camel - 14297 : camel - cxf : set the operation name to ` ` inoutheader ' ' in the cxfmessageheaders
refactor multiple UI classes to improve code organization to enhance maintainability and readability of the codebase
added support for BoosterSet in ComponentAssemblySaver and updated return value in BoosterSet to enhance functionality by allowing booster sets to be
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 42225 - proxy
replaced instances of ` BLOCKCHAIN _ FORK _ COUNT ` with ` BLOCKCHAIN _ FORK _ COUNT ` across multiple files
replaced InternalError with a return statement that returns false instead of throwing an InternalError for JEP 359 support to improve error handling by returning false instead of
refactor testipcutil to use static final log instead of mortbay log
removed chunked transfer handling from the HTTP request in NettyRoutingFilter . java to simplify the code and improve readability
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure proper handling of tokenization in the tokenizer
added pollingPeriod parameter to the VerificationAfterDelayImpl constructor and improved error handling in After . java to enhance error reporting and provide more informative
added a compaction feature to the SemanticAnalyzer and SessionState classes to control the behavior of table masking and filtering based on session state
[ zeppelin - 216 ] add a suffix filter to the docker interpreter process so that it do n ' t exist .
hbase - 16224 cleanup catalog tracker after hbaseadmin . gettableregions ( ) call
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable tests that are not ready for execution
updated ` calcXBounds ` method implementations in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes to
added a try - finally block around the reader parsing process to ensure proper resource management and prevent memory leaks
added a call to release the headerBuffer in HttpSenderOverHTTP . java to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` for testing the ` UseDiamondOperatorWithVar ` functionality to
added null and isClosed checks before closing ResultSet in JdbcExecutor . java to avoid potential NullPointerExceptions when the ResultSet is not initialized
updated driver version numbers from - 1 to 10 in DerbyDatabase . java to ensure compatibility with the latest version requirements
pmd : fix the issue that usestringbufferlength do n ' t handle empty string .
removed error logging from RemoteSparkJobMonitor to streamline error handling by eliminating unnecessary logging
changed the return type of createDb ( ) from void to Connection and added a return statement to ensure proper resource management and prevent potential memory leaks
refactor Metric and ListResources classes to improve code organization to enhance maintainability and readability of the codebase
hbase - 16464 add option to disable offpeak for compaction .
added null check for the " address " node in BitstampDepositAddress and created a new test class DepositAddressJSONTest to ensure proper handling of
replaced ` throw new IllegalStateException ` with ` response . abort ( new IllegalArgumentException ` ) ` in ` BufferingResponseListener . java ` to
updated the method call to use ` toAbsolutePath ( ) ` instead of ` linkPath ` to ensure correct path resolution for deleted directories
replaced ` Event ` with ` InvocationType ` in ` InvocationFinishedEvent ` and updated related imports to use ` MetricsEvent ` instead of `
refactor network interface handling in OptionsTest . java to use a loop to improve readability and maintainability of the code
added a loop to check the number of valid check sums in ChangeSet . java to improve code readability and maintainability by reducing redundancy
added a clone method to BufferedChecksumIndexInput that throws an UnsupportedOperationException to facilitate the cloning of IndexInput instances
replace Math . sqrt ( x * y * x * y ) with radius * y * y * y * y * y * y * y
updated frequency band assignment logic in P25Channel . java and modified return statement formatting in P25ExplicitChannel . java to improve accuracy in frequency band
refactor GestureDetector to replace ` tapSquareSize ` with ` tapRectangle ` for better clarity to improve code readability and maintainability by
changed the default value of DEFAULT _ REPLICATE _ ON _ WRITE from true to false in CFMetaData . java to disable replication on
added a new parameter ` lastFillTime ` to the ` CryptoFacilitiesAuthenticated ` and implemented the ` getCryptoFacilities
added ` getDelegate ( ) ` method to ` TraceCallable ` , ` TraceRunnable ` , and ` TraceRunnable ` classes to provide a delegate
refactor file handling in FileActivity and FileDisplayActivity to improve error handling and synchronization functionality to enhance user experience by providing clearer feedback during file
updated quiche connection handling in ForeignIncubatorQuicheConnection , JnaQuicheConnection , and JnaQuich
added a boolean parameter ` true ` to the ` JavascriptContext ` class to enhance the functionality of the JavaScript context
removed Align . left , 1 parameters from TableCell constructors in BaseTextFormattingHelper and TableCell classes to simplify the code by eliminating unnecessary
added a new file ` TracingAutoConfiguration . java ` to configure tracing functionality in the application to enable customizable tracing capabilities in the application
updated the handling of the second parameter in the Submissions class to ensure the correct parameter is added to the first paragraph
updated the ` getPrunedQueryableSegments ` method to accept an ` listOfQueryableSegments ` parameter and modified the returnSegmentReaders method to
updated VertxBufferTest . java file to improve test coverage for VertxBuffer functionality
fix messagesubmissionchunk . getmessageextrahyphensubmissionchunk . getmessageextrahyphensubmissionchunk to handle case where message extra hyphen be not
changed the access modifier of the mContext variable from private to protected to allow subclasses to access the context
removed unused imports from ShowTablesOperation and ShowViewsOperation classes to clean up the code and improve readability
added a new class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to include ` writeResult ` and ` actionOperation ` to
[ hotfix ] [ runtime ] fix npe in jobcoordinationservice . getjobcompletionfuture ( )
refactor ` bitsToHumanReadable ` and ` bytesToHumanReadable ` methods to use a new ` HashMap < String , String > ` to
removed type check for MergePolicy in TestUpgradeIndexMergePolicy and added a test for no pathological merges in TestMergeOnFlushMergePolicy
added a check to return early if mOverviewStateEnabled is false to prevent unnecessary processing when the overview state is not enabled
[ konduit - 11 - check - cpu - support - avx - etc for - hardware - extensions - avx .
updated the ` loadSettingModels ` and ` contextInitialized ` methods to accept a ` InputStream ` parameter to enhance flexibility in loading setting models based on
added null checks for the input parameter in FilterLeafReader to prevent NullPointerExceptions when input is null
add default secret key size provider to jcecrmfencryptorbuilder and add unit test
updated exception handling in NetSocketReader and removed unused constructors in SocketUtils to streamline exception handling and improve code clarity
removed unnecessary ` @ Inject ` annotations from multiple Java classes to streamline dependency injection and improve code clarity
updated the expected size in BundledDistributionTest and added database user assertions in PostgreSQLTest to improve test coverage and ensure accurate database user
[ hotfix ] [ stream ] add pipeline . name option to streamexecutionenvironment
updated scaling logic in OverviewState . java to account for two - panel devices to ensure correct scaling based on device profile status
fix iceplains biome ( # 1187 )
removed the ` DateTimeZone ` parameter from ` getMaxTime ` methods in ` StorageUtils . java ` and ` StorageUtils . java ` to simplify code
[ j2kt ] add ` ` qualified ' ' flag to ` ` thisreference ' ' and ` ` typedescriptor ' '
updated regex pattern in XhamsterRipper . java from " [ wmde . ] * " to " wmde . * "
fix findbugs warn in world . getall ( )
danielwagnerhall : use schema instead of schema for table name in oracledialect
[ hotfix ] fix checkstyle violation in flutterconsolefilter
added a new variable ` mNumberOfAllFiles ` and updated constructor parameters in ` FileMenuFilter ` and ` OCFileListFragment ` to
[ java ] use termlengthmask instead of termwindowlength in networkpublication .
refactor GuildUpdateOwnerEvent class to improve code organization to enhance maintainability and readability of the code
added validation for ` inPortalTicks ` in ` Player . java ` and ` Entity . java ` to ensure ` inPortalTicks ` does not
change cluster monitor tile to use compressed color instead of color . rgb ( 238 , 238 )
refactor multiple codec template classes to improve code organization to enhance maintainability and readability of the codebase
changed the type of ` lengthDataBits ` from ` int ` to ` long ` for ` lengthDataBits ` and ` numberTriplets `
removed unnecessary null check for header in RendererConfiguration . java to simplify the conditional logic for better readability
cloudstack - 10265 : add isnewdiskoffering ( ) method to volumeapiserviceimpl . isnewdiskoffering (
updated import statements and replaced ` Order . Builder ` with ` LimitOrder . Builder ` in ` HitbtcAdapters . java ` to improve
rename variable ` idleCount ` to ` consecutiveIdleCount ` in ` LLRealtimeSegmentDataManager . java ` to improve clarity and consistency
updated the description URI in the @ ConfigurableService annotation from " automation : jrubyscripting " to " jrubyscripting " to ensure
updated variable name from ' name ' to ' displayName ' in ConfigCategory . java to improve clarity and consistency in naming conventions
updated the condition in ParticipateAssetIssueActuator to include a check for both negative and negative exchange amounts to ensure correct handling of
removed unnecessary loop condition in FeedUtils . java to streamline code by eliminating unnecessary loops
added a new test method ` testHDF4 ` to ` HDFParserTest . java ` to verify the functionality of the HDF4
added a new constant ` CALCITE _ 6092 _ FIXED ` and modified casting checks in ` SqlOperatorTest . java ` to
reformatted code for better readability in IDEEditor . java to improve code readability and maintainability
added a new method ` quietCloseAll ` to the ` CloseHelper ` class to handle closing AutoCloseable objects more effectively to improve flexibility in
replaced posBtn and posBtn with common _ yes in RemoveFileDialogFragment . java to simplify code and improve readability by using a more descript
added a condition to check if srcWidth and dstHeight are not zero before calling drawImage in Pixmap . java to avoid potential null pointer exceptions
replaced ReflectionHelpers with Unsafe ' s method invocation in UnsafeAccess . java to improve code clarity and maintainability by using a dedicated method for
updated regex pattern formatting in GUIUtil . java and added validation assertions in tests in GUIUtilTest . java to enhance regex accuracy and ensure correct validation
changed the type of ` conflict ` from ` boolean conflict ` to ` long conflicts ` in ` CachedRowSetWriter . java ` to allow for
use pubspec . yaml instead of version . 0 . 3
added a conditional check for reference equality in ReferenceMemory . java to ensure correct assignment behavior when the reference is equal to the current instance
added seed file handling and logging for injecting URLs in Injector . java to enhance flexibility in injecting seed URLs and improve error handling
added a condition to check if the original view is hidden before setting its visibility in FloatingIconView . java to ensure that the original view is
updated maxNodes calculation and modified the condition for maxTrips in DefaultLoopPolicies . java to ensure correct calculation of maxNodes and maxTrips
added support for texture coordinate type support in CombinedTexture and UVCoordinatesGenerator classes to ensure proper handling of unsupported texture coordinates
added checks for barcodeFile deletion in EncodeActivity , SupplementalInfoRetriever , SupplementalInfoRetriever , DecodedBitStreamParser , and
camel - 14284 : camel - tracing - add seek ( ) and close ( duration ) method to tracingconsumer
updated the method call to use ` oldPrefixLength ` instead of ` locate ` in ` HandleDAOImpl . java ` to ensure correct handling of
removed the addition of a collection to the convertedValsList list to simplify the code by eliminating unnecessary additions
added a deprecated constructor to AbstractTimer that accepts a PauseDetector parameter to indicate that the constructor should no longer be used in future development
added a nightly warning dialog for Universal Gcode Sender versions in MainWindow . java to inform users that the version of Universal Gcode
added a new parameter ` sortByTeam ` to ` FeedbackSessionResultsBundle ` and modified the ` getResponsesSortedByRecipient ` method to accept
updated the return statement in UnnecessaryThrows . java from " Remove unnecessary throws " to " Remove unnecessary ` throws declarations . " to
deleted ` CacheApplication . java ` and replaced ` CacheController ` with ` CacheController ` in ` CommonsApplication . java ` and ` ShareActivity
replaced instances of ` realObject . getApplicationContext ( ) . startService ( ) ` with ` RuntimeEnvironment . application . startService ( ) `
refactor StatisticsServlet class to improve code readability to enhance maintainability and facilitate future updates
updated the way system resources are updated in RuntimeEnvironment . java to ensure compatibility with devices running KitKat and above
added VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS constant and updated resource property handling in VersionDefinition
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
added a null check for oldIndexName in CFMetaData . java to prevent potential NullPointerExceptions during index processing
added new package imports for XML resolver helpers and readers in CheckPackageAccess . java to enhance support for XML resolver functionality in the application
refactor method names from ` persist ` to ` add ` in multiple repository classes to improve clarity and consistency in naming conventions
added handling for loop exit nodes in GraphUtil . java to ensure proper handling of loop exit nodes
replaced RecyclerView with WidgetsRecyclerView in SearchAndRecommendationsScrollController . java to improve layout handling by utilizing WidgetsRecyclerView instead of RecyclerView
added a check for terminal support in ConsoleReader to ensure that the terminal is supported before proceeding with processing
updated data types from Long to Integer for time allowed values in CloudExitableDirectoryReaderTest and LBHttpSolrClient classes to improve flexibility and
added a session validation check in AbstractSessionCache and updated session handling in RemoveSessionTest to ensure that sessions are only flushed when the session is
added null checks for ` columnNames ` before processing in ` ChangedIndexChangeGenerator . java ` to avoid potential NullPointerExceptions when ` columnName
replaced ` Vector ` with ` ArrayList ` for ` buttons ` and updated related methods to use ` ArrayList ` instead of ` Vector ` to improve performance
updated UserManagerCompat , UserManagerCompatVL , UserManagerCompatVNMr1 , UserManagerCompatVNNMr1
added ` getDatabaseMajorVersion ( ) ` and ` getDatabaseMinorVersion ( ) ` methods to ` MockDatabase ` , ` AbstractDatabase ` , and
refactor ActionGraphCache to use ActionGraphAndResolver instead of Set to improve clarity and maintainability of error messages for better debugging
added new classes ` LockDatabaseDesc ` , ` UnlockDatabaseDesc ` , and ` LockDatabaseDesc ` , and ` UnlockDatabaseDesc ` to
refactor RankingUIModel and RankingToolbar to use a unified model for node and edge transformers to improve code readability and
added disconnect handling for DisconnectMessage in HandshakeHandler and modified log messages in NodeImpl to improve clarity and maintainability of the disconnection process
added a new test method ` testSetDeleteSG ` to ` IoTDBAuthorizationIT . java ` to verify the functionality of setting a storage
chore : upgrade gapic - generator - java to 2.11 . 0 and update gax - java to 2.16 . 0 ( # 1
updated type validation logic in Assertions . java and added type checking in FindMissingTypes . java to ensure correct handling of missing and malformed variable types in
added methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to enhance test execution handling by
replaced specific buffer imports with a wildcard import and modified the constructor parameters in CountersManager . java to improve code readability and maintainability by
removed unnecessary ` toString ( ) ` method implementations in ` MultiSteps ` , ` SendEmail ` , and ` SendEmail ` classes to simplify
added null check and cloning for joinKeys in JoinDesc . java to ensure joinKeys is not null and prevent potential NullPointerExceptions
updated WebAuthnConfiguration to register a principal resolver with a default principal resolver to ensure proper handling of principal resolvers in the authentication process
updated the ` addSettingsFromFile ` method to include a ` searchPaths ` parameter and modified the ` assertFileHasValue ` method to accept a
changed member variables from non - final to final in Oracle . java to ensure immutability and prevent unintended modifications
[ java ] do not advertise unaligned checkpoint until rescaling of unaligned checkpoint be complete .
[ calcite - 2852 ] fix queryparser to handle invalid order by / map value
graal : add some static method to compiletheworld to make it easy to run .
added a check for LocalVariable type in LambdaRewriter . java to ensure proper exception handling for LocalVariable instances
added support for MySQL database timestamp in CreateTableGenerator to enhance compatibility with MySQL databases
added classloader management and context class loader management in EnvConfiguration . java to ensure proper context class loader management in the application
added a condition to set the ejection delay when the stageNr is zero in SimulationListHandler . java to ensure the motor configuration reflects
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` in ` SpringApplicationTests . java ` to improve clarity and consistency in the
refactor TransactionUtil2 class to improve code readability to enhance maintainability and facilitate future updates
updated the ` validateIssuerClaim ` method to accept an ` Optional < OAuthRegisteredService > ` parameter across multiple classes to enhance flexibility by allowing optional
added null check for the collection in ClusterState . java to avoid potential NullPointerExceptions when coll is null
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` in ` TextArea .
added support for foreign database and schema names in ForeignKeyColumn and related classes to enhance flexibility in handling foreign database and schema names
[ java ] throw clusterexception instead of timenannanosexception when leader be not find .
replaced static shadow of ` shadowOf ` with a private method ` shadowOf ` in ` ShadowActivity ` and ` ShadowBluetoothDevice `
updated FileSelection to throw DrillRuntimeException for null or empty root in FileSelection . java and added a new test case in TestBugFixes
add oninventorytick ( item , item , itemitem , itemitem , itemitem , itemitem , itemitem , itemitem )
[ java ] add ` ` war ' ' extension to the ` ` jar ' ' file in the ` ` jar ' ' file .
added a null check for getSherlockActivity ( ) before calling invalidateOptionsMenu ( ) to prevent potential NullPointerException when getSherlockActivity (
updated widget binding logic and added null checks in multiple classes to improve robustness and prevent potential NullPointerExceptions during widget binding
added CAPABILITY _ AIR _ PRESSURE , CAPABILITY _ AIR _ QUALITY , CAPABILITY _ AIR _ QUAL
updated formatting and structure in OperationSetServerStoredContactInfoFacebookImpl . java to improve code readability and maintainability
added support for " AAPT " and " AAPT2 " environment variables in Genrule . java and corresponding tests in GenruleTest . java
do n ' t dump access table if truffleinstrumentbranchs be set to true
added a null check before disposing the message to prevent potential NullPointerExceptions when the message is not initialized
added @ Getter annotation and changed the visibility of the ` db ` variable in ` TronStoreWithRevoking ` , ` TxCacheDB `
updated log warning messages in CoreContainer . java to clarify that LogWatcher is not yet implemented for log4j version
replaced ` e . printStackTrace ( ) ` with ` fail ( ) ` and modified exception handling in ` CategoryPlotTests . java ` to improve error
replaced ByteArrayOutputStream with SmallByteArrayOutputStream in IOSImplementation . java and added a new SmallByteArrayOutputStream class in IOSImplementation . java to improve
refactored shader renderer to use intmap instead of string . name ( ) .
updated the connection string from " territory = en _ US " to " shutdown " in AbstractDIHJdbcTestCase . java to ensure proper resource management
camel - 11717 : camel - camel - camel - camel - camel - camel - camel - camel - camel - camel - spring - boot
updated language handling in TestHtmlTag and TestUseOption classes to use the default language instead of the default language to improve clarity and maintainability of
added a condition to check if the result is incomplete before processing items to ensure that the results are only processed when there are items to complete
updated the command line argument from ` TimeFieldSpec ` to ` timeColumnName ` in ` HybridClusterIntegrationTestCommandLineRunner . java ` to ensure
updated output format handling in SiteSnapshotVariationsTest , SiteSnapshotVariationsTest , and OutputOptions classes to use the correct output format to ensure
modified the condition to check if the hotseat is not in the hotseat bar to ensure that the hotseat bar margins do not exceed the specified
add equal ( ) and hashcode ( ) to animationlist , animationlist , scenekey , animlist , materialadapters , materialadapters ,
added a ` _ date ` field to ` AbstractGenerator ` , ` Generator ` , ` Generator ` , ` HttpGenerator ` , and ` Http
replaced ` Adler32 ` with ` CRC32 ` in ` Store . java ` to replace ` Adler32 ` with ` CRC32 `
change default heartbeat interval from any # of seconds to null for xenserver self - infencing .
added a new warning constant ZERO _ AREA _ FIN and modified conditional checks in FinSetCalc . java to improve code clarity and ensure proper
update elasticsearchio to use custom serializers for retryonconflicts
hhh - 16458 add datetrunc function to h2 and h2 dialect for h2 and h2
added a check for " Memory Pool not found " message in MetricUtils . java and updated test cases in MetricUtilsTest . java to improve error
added JavaScript support to user context methods and improved error handling in UserTests , FileAccess , and FileTreeNode classes to enhance code readability and maintain
updated error messages to use ` Types . PROTOTYPE _ FACTORY _ TYPE . classNameWithEnclosingNames ( ) ` instead of ` Factory `
updated the BACKFILL constant from " / generateAnomaliesInRange " to " / replay " in DetectionResourceHttpUtils .
updated data retrieval from ` DataWord ( ) . getData ( ) ` to ` DataWord ( 1 ) . getData ( ) ` in ` Pre
refactorBadgeState handling in AllAppsContainerView to use child views instead of adapter items to improve code readability and maintainability by reducing
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
updated comments in ResourceHandlerTest . java and ServletContextHandler . java to clarify behaviors after ContextHandlerCollection is started
removed conditional check for WORKSPACE _ CUSTOM in Cling . java to simplify the code by eliminating unnecessary logic
do n ' t assert lookupmodule in trufflejdkservices # getlookupmodule ( )
added JUnit @ Ignore annotation to ClassicSuperHandlingTest . java to temporarily disable tests that are not ready for execution
updated import statements from ` itbit . v1 ` to ` itbit . itbit ` across multiple demo files to align with the new package
refactor : use parameter . isdefined ( ) instead of object . get ( ) .
added a private constructor to Utils , ApplicationUtils , AsyncSocketFactory , AsyncSocketFactory , AsyncSocketFactory , Whois , and Whois classes to enforce imm
add try - with - resources to prevent resource leak
replaced instances of ` getClass ( ) . getName ( ) ` with ` java . util . Vector ` and ` java . util . Hashtable ` to
added tableNameWithType parameter to the warning log message in RetentionManager . java to include the table name with type
added trim ( ) method to fragmentList checks in QueryExecutorImpl . java to ensure proper handling of empty strings in the query execution
modfileresourcepack : use modfile . getfilepath ( ) instead of path . tofile ( ) . tofile ( ) . to
replaced instances of ` NodeTransformer . Node ` and ` TransformerBuilder . Edge ` with ` nodeTransformerGroup ` and ` edgeTransformerGroup ` to
refactor conditional checks in RecentsView . java to improve readability and maintainability to enhance code readability and prevent potential null pointer exceptions
replaced instances of ` Map < String , String > ` with ` BMIViewObject ` across multiple classes to improve type safety and maintainability by
removed the Comparator comparison from the thenComparing method call in QueryCommand . java to simplify the code and improve readability
fix the damage calculation for hay bale in the entity .
updated environment variable names and logic in WindowsProcessAddressSpace , J9DDRImageProcess , and NewElfDump classes to improve clarity and
added support for custom plugin properties in OptionsParser and corresponding tests in OptionsParserTest to ensure correct handling of plugin configurations and improve test coverage
updated null and empty check for hashTable in HashJoinBatch . java to ensure that hashTable is not null or empty to avoid potential NullPointerException
added a condition to check if ` timestamp . getTime ( ) % 1000 ` is non - negative in ` Timestamp . java ` and updated test methods
[ java ] remove unused variable in clusteredserviceagent . java
added a condition to check if the compiler is not compiled before verifying the compile threshold to ensure that the method is only executed when the compile is
added a new environment variable ` ENV _ 2 ` and a test method ` testImage2 ` in ` AbstractTest ` , ` DB2
updated TogglableFlag and related classes to replace getInitialValue and getOverridenDefaultValue methods with getOverridenDefaultValue and getOverriden
updated log messages to include placeholder placeholders for better readability to improve log readability and maintainability
added a check to return early if the platform is ANDROID before proceeding with operations to avoid unnecessary execution on non - ANDROID platforms
replace assertequals with hamcrest assertion in RoutesTest . java to improve readability and maintainability of the code
added new functional interfaces for BytePredicate , ByteToLong , FloatToLong , and ShortPredicate in the com . speedment . common .
changed the return type of getSubsColor from int to String in PmsConfiguration , RendererConfiguration , and VLCVideo classes from int to String
added a conditional check before deregistering the invocation registry to ensure that the invocation registry is only deregistered when the future is complete
replaced ` ControlFrameBytes < Void > ` with ` output ` method in ` AbstractWebSocketConnection . java ` to simplify the code and improve read
added a check for the " redirected " flag before starting the WelcomeActivity to ensure the intent is only launched when the " redirected "
added a new ` ShadowCheckedTextView ` class and its implementation in ` Robolectric ` to enable testing of the ` CheckedTextView ` class
added Serializable interface to ParserState class and declared serialVersionUID in AccessorProperty , AccessorProperty , Property , and Property classes to ensure proper serialization
added a new certificate " identrustdstx3 [ jdk ] " to VerifyCACerts . java to enhance certificate verification by providing a
removed redundant assignments of TEMPDIR _ CONFIGURED and TEMPDIR in WebInfConfiguration . java to streamline code by eliminating redundancy
added nick resource parsing in Occupant . java and corresponding test in MultiUserChatTest . java to ensure that the occupant ' s nick
removed the ' context ' parameter from the QuicSession constructor and related classes to simplify the constructor and improve code clarity
replaced direct calls to ` writer . getMergeScheduler ( ) ` with ` writer . getConfig ( ) . setConfig ( ) . setMergePolicy
refactor null checks for the builder variable in ICU4JImpl . java and TextPosition . java to improve code readability and maintainability
added imports for ComputedDateValue , ParseException , and ComputedNumericValue in AddDefaultValueChange . java and AbstractDatabase . java to enhance
refactor NbtScoreboardIoService to improve code readability to enhance maintainability and facilitate future updates
( chore ) camel - saml2 - maven - plugin : do n ' t throw an exception if the serviceprovidermetadataresource be not
make graphprinterdumphandler # createprinter ( ) protect and add createprinter ( ) method
added BigDecimal import and updated the calculation of average price in HuobiAdapters . java to ensure accurate calculation of average price in the order
updated ProjectionOperation and TypeBasedAggregationOperationContext to use getTarget ( ) instead of getMappedObject ( ) and modified fields handling in TypeBasedAggregationOperationContext
added a check for the presence of a player in the viewers list before proceeding with the addViewer0 method to ensure that the player is only
added constant state handling to FolderAdaptiveIcon , FolderAdaptiveIcon , ShiftedBitmapDrawable , and ShiftedBitmapDrawable classes to
refactor SPDYClient to improve connection handling and connection management to enhance code readability and maintainability by centralizing connection management
fix nullpointerexception in protostuffobjectoutput . writeObject ( null )
pdfbox - 4071 : fix checkstyle violation in extracttext . java
refactor BarrowmanCalculator class to improve code structure to enhance maintainability and readability of the code
added a conditional check to return early if axis numbers are not displayed in the draw axis to ensure that axes are only displayed when they are not
replaced calls to setFilter and setWrap with calls to unsafeSetFilter and setWrap to improve performance by avoiding unnecessary filter and wrap operations
corrected spacing in returnToWorkspace method call in XmlWorkflowServiceImpl . java to improve code readability and maintain consistency
added support for SSL protocol handling in CustomUrlJob and created CustomUrlTrustEverything class for SSL context validation to enhance security by ensuring secure connections
refactor clock rate retrieval to use a new method ` getRealUsedClockRateString ( ) ` across multiple classes to improve code readability and
refactor TextureAtlas class to improve code readability to enhance maintainability and facilitate future updates
replaced ` getProductNameForBuildTargetNode ` with ` getModuleName ` in ` AppleLibraryBuilder ` and added ` setModuleName ` method in
added locking and release logic for the registry in TestSlot . java to ensure proper resource management and prevent potential memory leaks
add support for ID _ LIST type in SQLTreeBuilder and create a new test class for find IDs with inheritance in TestFindIdsWithInheritance
updated WebSocketServletRFCTest to use a rbuf instead of a closeFrame variable to improve code readability and maintainability by using a more
[ wasm ] reset referencemultivaluestack in case of function .
added a ttl option to the ClickHouseLogCollectConfig and updated related classes to include it to enhance logging capabilities by allowing customization of the ttl
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD in CustomChangeWrapper , CustomPreconditionWrapper , and XMLChangeLogSerializer to
updated DeploymentExceptionTest to use Jetty ' s Server and HandlerCollection instead of QueuedThreadPool to improve server management and ensure proper context management during
added error handling for Timber initialization in CommonsApplication and NearbyController to improve robustness by handling potential exceptions during the initialization process
added null and empty checks for objectName before trimming to avoid potential NullPointerExceptions when objectName is null or empty
updated error message from " could not find file " to " could not open file " to improve clarity of error reporting for file operations
[ hotfix ] [ table - planner - blink ] make environmentsettings static final
renamed variable ` owner ` to ` issuer ` in ` KeyTool . java ` and updated subject name handling in ` Resources . java ` to improve
mark the RuntimeOptions class as deprecated since version 23.0 to indicate that the class should no longer be used for removal
replaced direct byte array conversion with a direct method call to ` str . getBytes ( utf8Charset ) ` to simplify code and improve readability by
added a new interface ` PermissionEvaluator ` in the ` org . springframework . security . expression ` package to provide a way to check for permission
added support for ERASE _ LINE _ ON _ FINISH in LineReader and LineReaderImpl classes to handle ERASE _
masterfilesystem : do n ' t check for server that do n ' t exist
updated exception types from P2pException to BLOCK _ SIGN _ MERKLE _ ERROR in P2pException and TronNet
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 42225 . cgi
[ micronaut ] fix error handling in defaulthttpclient . decodeerror ( ) .
change the centering of the spinner container from center to centerAbsolute to ensure the spinner is displayed in the correct position of the spinner
networkbufferpool . recyclememorysegments ( list < memorysegment > segments ) do not interrupt the memory segment .
[ hotfix ] [ test ] fix npe in testjmxbeanintegrationtest
replaced ` AndroidJUnit4 ` with ` RetryTestRule ` in ` AbstractIT . java ` to utilize ` RetryTestRule ` for
[ hotfix ] [ runtime ] remove autocommit flag from querystatemachine
fix checkstyle issue in io / csv / csvtable / csvtable / csvtablescan / csvtable / csvtablescan . java ( #
added support for " javax . microedition . khronos . opengles . GL " in the ` InstrumentationConfiguration ` class to support
[ hotfix ] [ test ] remove unused code in streamtasktimertest
modified URI handling logic in Request . java and added a new test case in RequestTest . java to ensure proper handling of HTTP request URIs and
updated the key for retrieving storage points from ` KEY _ LAST _ SEEN _ VERSION _ CODE ` to ` KEY _ LAST _ S
added sessionAvailable , sessionUnavailable , and sessionUnavailable methods to SessionManager and updated session retrieval logic to use SessionMap for session management to improve session
added " liquibase . pro " package to the scan configuration in ServiceLocator . java to enable the scanning of the liquibase package in the application
replaced ` ArrayList < SyncedFolder > syncedFolders ` with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider `
updated the ` loadWithNewGlobal ` method to include an additional ` Object [ ] ` parameter and modified related method signatures to include an additional `
updated variable names from " http : / / " to " http : / / " and " https : / / " in FastPathResolver .
replaced direct calls to ` length ( ) ` with ` toIntExact ( ) ` in ` HiveClientModule . java ` to improve code read
corrected the spelling of " isExceedRandomizedType " to " hasAlreadyRandomizedType " across multiple files to improve code
added support for " LEAD " and " LAG " functions in UnsupportedOperatorsVisitor and a corresponding test in TestWindowFrame to
clear the headers of the proxy request in AbstractProxyServlet to ensure that the request headers are cleared before proceeding
added a check to skip processing when SA attach is not expected to work to ensure that SA attach is not expected to work correctly
added null check for bgColor before checking alpha in GraphicsDevice . java and created TranslucentWindow . java for window translucency support to
added null checks for userInfo . getEmail ( ) and userInfo . getTwitter ( ) in UserInfoActivity . java to ensure
added custom serialization for PrecompiledHeaderData and updated leadingIncludePaths check in PreprocessorDelegate to ensure that precompiled headers can be used on different
[ hotfix ] [ table - planner - blink ] add ` ` update - mode ' ' to legacy property map
added a new integration test class ` MultipleOutputsIntegrationTest ` to verify the functionality of building named output groups in the build process to ensure that named
updated regex patterns and added content assignment logic in FileSettings . java to improve readability and maintainability of the code
[ flink - 18157 ] [ runtime ] fix ssl context initialization in stateless flow
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable Taskbar mode switching in tests
added new device status entries for " leaving - dock " , " energy - save - mode " , and " energy - save - mode " to
change itemloadingexception to itemloadingexception when load item model from the normal location .
updated import statements in KrakenFuturesStreamingPublicDataTest . java and added @ Ignore annotation in KrakenFuturesStreamingPublicDataTest .
do n ' t call getcurrentsurfacescale ( ) if graphics . is2x ( ) = = true
refactor RussianLowerCaseFilter class implementation to improve code readability and maintainability
replaced serverProps and clientProps with ReadOnlyProps . EMPTY _ PROPS in CsvBulkLoadToolIT and updated setUpTestDriver method in QueryUtil
fix fail uploads when display name of file brough from external apps include separator or path - separator character
[ jme3 ] refactoring wavloader to use a resettableinputstream instead of a hardcoded value .
added a new boolean variable ` repeatFirstLineIndent ` and modified the indent setting logic in ` ColumnText . java ` to allow users to control
changed the type casting of the oid comparison from Object to Object to ensure proper type casting for Oid objects
refactored the initialization of mbeans in HikariPool to improve code readability and maintainability by reducing duplication
use controlflowanchored instead of controlflowanchornode in loopex
added focus paint setting to the buttons array in WindowsPlacesBar . java to ensure the buttons are displayed correctly during rendering
added a condition to check for UniqueConstraint and ForeignKey instances in the DatabaseSnapshot class to ensure proper handling of UniqueConstraint and ForeignKey instances
added a new method ` getAccountLedgersWithParams ` to the ` KucoinAccountServiceRaw ` class and updated ` AccountAPI ` to
do n ' t throw an unprocessable exception if the group rest can not contain a dc . title .
added checks for empty words and improved error handling in GapInsertionDetector . java to ensure that the insertion detector correctly handles cases where no words are
added unit test base on user forum issue .
replaced ` getBackgroundThreads ( ) ` with ` getDatabaseUpdateThreads ( ) ` in ` FeedRefreshUpdater . java ` and added getter and setter methods
updated the FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 in RecyclerViewFastScroller . java to increase the fast scroll threshold for
use ljava / lang / system instead of metautil . tointernalname ( ) in hotspotresolvedjavafield
hhh - 13644 : fix nullpointerexception in procedurecallimpl ( # 13644 )
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 13939 - fix
added two new classes , BinaryFrameGenerator , TextFrameGenerator , and TextFrameGenerator , to handle binary and text frames to ensure proper handling of
[ java ] use webdriverwait instead of findelement in pageloadingtest
refactored calculations for latitude and longitude in RandomGeo3dShapeGenerator to use nextBoolean method to improve code readability and maintainability by
added a keepAlive method to the ResourceBundle class to ensure that the resource loader is kept alive to prevent potential memory leaks
changed the return value from false to true in SQLiteDatabase . java to ensure that the method returns true instead of false
added a constant forUTIL _ CONCURRRENT _ SIG _ PREFIX and refactored conditional checks in FindJSR166LockMonitor
added MkdirStep to multiple AndroidAar , AppleBundle , AppleBundle , AppleBundle , ApplePackage , and FatBinary classes to enhance
updated error handling in MeshLeveler to use ' @ ' instead of ' @ ' for better readability to improve error reporting by providing clearer
[ drools - 4072 ] disable applypmmlmodelcommand if jpmml module be not available on classpath
change locationMode from locationMode to thermalStatus in ShadowPowerManager . java to correct the spelling of ' thermalStatus ' in the code
do n ' t use java . io . tmpdir in testcontainers . createtempdirectory ( ) for macosx
add a system property ` ` os . name ' ' to control memory buffer usage for window
added a null check for the organization in the pom . xml file to ensure that the plugin does not have an organization in the pom . xml file
updated license agreement handling in SepPostingsWriterImpl . java to ensure compliance with copyright notices
deleted the TerminateWebSessionListener . java file to the functionality is no longer needed in the project
updated ` executeChildProcess ` to use ` System . getProperty ( " java . class . path " ) ` instead of a hardcoded string
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for ` cryptKeyInit ` , `
added a new test method ` dontChangeJavadoc ` to ` AddLicenseHeaderTest . java ` to verify the behavior of the ` rewriteRun `
updated LAUNCHER3 _ PHYSICS flag from false to true to enable the LAUNCHER3 _ PHYSICS
added HTML elements for the ' noPrint ' tag in HtmlThreadInformationsReport . java to improve user experience by providing clearer information about the
updated LUCENE _ MAIN _ VERSION from " 3.0 " to " 4.0 " and updated TEST _ VERSION _ CURRENT from LU
added symbolicator and task fields for symbolicator , task , and platform check in BsdDebuggerLocal and PlatformInfo classes to support macOS
fix potential memory leak in fmlclienthandler and fmlIndexedmessagetomessagecodec
do n ' t log unmuted networkdispatcher exception if connection reset by peer .
[ java ] set conductorbuffers to adminbuffers if the conductor bytebuffers be null
added a break statement in TouchImageView . java to improve control flow and prevent infinite loops
chore ( regen ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0
removed the flushOnSSLHandshakeComplete method and simplified the flushing logic in FeedableBodyGenerator . java to simplify the code and improve readability
added type casting logic for ` java . lang . Object ` and ` java . lang . CONTRAVARIANT ` in ` TypeUtils . java
replace NonBlockingHashSet with ConcurrentSkipListSet for memtablesPendingFlush in ColumnFamilyStore . java to improve concurrency handling for memtablesPendingFlush
added null check for ` tree . errs ` before calling ` memberEnter ` in ` MemberEnter ` and modified error count checks in ` JavaCompiler
change browser background color from NO _ BACKGROUND to NONE in BugInfoView . java to ensure consistent UI behavior across different UI components
removed the finish ( ) call from the CancelButton in AboutActivity . java to simplify the dialog cancellation logic for better readability and maintainability
fix integerstamp . div ( ) and integerstamp . ops . getdiv ( ) to handle negative value
added a ` readStream ` method to ` ITextUserAgent ` for reading from an input stream to improve code readability and maintainability by reducing
updated variable handling in SwitchCompiler and added local variable management in ExprGenerator and ExprGenerator classes to improve variable management and ensure correct variable assignment in the
refactor the initialization logic in RSAClientKeyExchange to handle InvalidKeyException and UnsupportedOperationException to improve error handling and provide clearer diagnostics for
updated the " AdditionalDependencies " attribute in WinGammaPlatformVC10 . java to include psapi . lib to ensure compatibility with the new library structure
updated StringUtilsTest to use a newline character instead of a newline character to improve code readability and maintainability by using a configurable newline
added compatibility improvements and output encoding to TemplateEngineFreemarker and updated maliciousJavascript script syntax in ApplicationController to ensure compatibility with the latest
replaced ByteArrayInputStream with byte array conversion and added print statements in CRDGeneratorTest . java to improve readability and maintainability of the code
[ hotfix ] [ runtime ] remove static from samplesenderfactory
added a null check for the " testngEmailableReporter " system property before adding the EmailableReporter to avoid potential NullPointerExceptions when the system
added a quoted flag to the CommandLineBuilder and updated corresponding tests in CommandLineBuilderTest to ensure proper handling of quote quotation marks in CommandLineBuilder
remove the ` public ` modifier from the ` Clock ` , ` Clock ` , ` MetricProducer ` , and ` VendorDefined ` interfaces to
added job . setNumReduceTasks ( numFetchers ) to FreeGenerator . java to set the number of reduce tasks for the job
[ guacamole - 49 ] fix nullpointerexception in schemageneratorhelper . getfielddefinitions ( )
updated the file version from " 505365 " to " 532077 " to reflect the correct expected value for the file version
added support for GL _ ARB texture float extensions in FloatTextureData . java to ensure compatibility with GL 3.0 features in the application
move fileserver . write ( string filename , string value , string value ) to fileserver . write ( string filename , string value ) .
added a null check for jarStream before setting the output directory to avoid potential NullPointerExceptions when jarStream is null
replaced direct call to getFuture with PerfStatsCollector in ShadowSQLiteConnection . java to improve performance tracking by tracking sqlite status updates
updated method calls from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeap
add a new enum resourceerrorhandling . java to provide a way to handle resource error .
added a check for buffer size in RAMInputStream and implemented a test for EOFException in TestRAMDirectory to ensure that EOFException is thrown when
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 423 , add miss resource
updated ForkJoinPool and ForkJoinWorkerThread to accept a boolean parameter for innocuous mode and added AccessControlContext class to improve thread management and ensure proper access
updated CHECK _ EVERY _ N constant to CHECK _ EVERY _ N and modified memory checks in Caches . java to improve memory
hbase - 16464 fix testsplittransaction . testsplittransaction . testsplittransaction . testsplittransaction . testsplittransaction . testsplittransaction
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerExceptions when currentSelectionArea is null
added a parameterized test method ` testJaasDemo ` to ` DemoModulesTests . java ` to verify the behavior of JAAS demo
added checks for spanX and spanY in CellLayout . java to ensure that the folder can be created only when span is 1 to improve layout
refactor CacheOffHeap class for improved performance to enhance performance and maintainability of the code
added support for create a table with a higher ID in CreateTable . java and a corresponding test in TestCases . java to ensure that the database
added validation for extra XML gid values and improved error handling in TiledLoader . java to ensure that extra XML gid values are ignored before processing
added synchronized keyword to the setWorkingSet method in InMemoryTileCache . java to ensure thread safety during method execution
added a new file ` Solution . java ` that calculates the minimum and maximum steps of a manasa based on a specified number of steps to
added a new interface ` AddressChecker ` and modified ` TrackerRequestProcessor ` to utilize it to improve address validation logic for better handling of
fix ( rendertype ) : remove unnecessary assignment in multilayermodel
add a method to remove tag from the tip if it ' s a default tag .
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` , ` Capability ` , and
added null check for recieptents before sending a message to improve robustness by preventing potential NullPointerExceptions
refactor issingle ( ) to be a separate method in routinginboundhandler
[ hotfix ] [ docker ] add ` ` failfast ' ' flag to docker - image - from - docker
added resourcesMode parameter to AndroidMetadata and AndroidMetadata classes to enable dynamic resource mode management in the application
replaced usage of DateUtils with Calendar for date handling in HistoricProcessInstanceQueryImpl . java to improve code readability and maintainability by centralizing date
updated the import method from ` importProject ( projectFile ) ` to ` importProjectCore ( projectFile ) ` in ` OpenAndroidModule .
added error handling for CommandFailedException in LiquibaseCommandLine to improve error reporting for command failures
refactor TreeMap . java for improved performance to enhance performance and maintainability of the code
added enableasyncstacktraces ( ) and enableasyncstacktraces ( ) method to display .
added a method to set the glow color in BubbleTextView and updated Folder to use this color to enhance the visual appearance of the BubbleTextView
added style classes for " file - row - text " in LinkedFilesEditor . java to ensure consistent styling for file row text
updated the return statement in AbstractJdbc2ResultSetMetaData and added a new test for class matching in ResultSetMetaDataTest to ensure correct handling of class names
removed unnecessary file deletion logic in Lucene40LiveDocsFormat . java and removed IOUtils . deleteFilesIgnoringExceptions call in SimpleTextLiveDocsFormat
added null check for _ info in the upgrading boolean condition to prevent potential NullPointerException when _ info is null
added a constructor to ShadowLocation that initializes the provider variable to facilitate the initialization of the ShadowLocation class
added a condition to check if the device RAM is less than 2048 in LauncherPreferenceJavaFragment . java to ensure the maximum RAM
do not include local map stats when there be no data in the map
added logging functionality to FileProfileActivator for file existence checks to improve error handling and debugging capabilities during file profile activation
pdfbox - 4071 : use invalid _ name instead of noname1234
changed the type of the roles map from list to set in GuildImpl . java to ensure consistency in role mapping across the application
updated the array length check from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter . java to ensure
added unit tests for the delete method in DashboardUserMapperTest to ensure the correctness of the delete operation in the dashboard user mapper
rename recipientidentifier and givertoresponsesmap to primaryparticipant
llvm : cache toruffleobject ( ) in llvmderefhandlegetreceivernode ( ) and llvmstorenodecommon
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide a way to retrieve the buffer size from the output
add usagehelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelp
refactor action bar title setting logic in DrawerActivity . java to improve readability and maintainability of the code
updated CommandLineParserTest . java file to enhance test coverage for command line parsing functionality
updated animation thresholds in QuickstepAtomicAnimationFactory and PortraitStatesTouchController , and changed visibility of interpolators in PortraitStatesTouchController
replace Character : : toUpperCase ( ) with javaNameFromExternal ( externalName ) in DefaultJavaLanguageNamer . java to improve clarity and consistency
added native method ` setFrame ` and ` frame ` methods in ` CWrapper . java ` to enhance the functionality of the ` NSObject `
added constant value validation and validation in Checker . java and created ValueTest . java to ensure proper handling of constant values in the code
refactor MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen classes to improve code organization and maintainability
removed null check for constructors in PojoUtils . java to simplify the code and improve readability
refactor JiraConfiguration class to improve code organization to enhance maintainability and readability of the code
updated error and coverage failure message formatting in UploadBuild . java to improve readability and maintainability of error messages
updated bounds calculations in DeviceProfile . java to use search bar offset instead of hardcoded values to improve layout consistency by using search bar offsets
pulseaudio : fix socket disconnect when idle timeout be 0
refactor task starting logic in OverviewCommandHelper to run on the UI thread to improve code readability and maintainability by consolidating task
removed the ` getSourceGroupOptional ` method and its usage from ` AppleSource ` to streamline the code by eliminating unnecessary dependencies
updated the await timeout from 220000 milliseconds to 320000 milliseconds in TestSimTriggerIntegration . java to allow more time for triggering tasks to complete
updated RunLengthEncodedBlock constructor parameters from outputPositionCount to positionCount in FloatSelectiveStreamReader . java to ensure accurate execution of RunLengthEncoded
fix a bug in abstractnodecostsearch when distfromstartsq be less than min _ distance
added a condition to skip processing for Form , Dialog , and Dialog components in ResourceEditorView . java to ensure proper handling of Form , Dialog ,
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView . java ` and ` FloatingIconView . java ` to
added a null check for commitPoint in ReplicationHandler . java to ensure commitPoint is set when it is null to avoid potential null pointer exceptions
added unit tests for ` getImeiForSlot ` and ` setMeid ` methods in ` ShadowTelephonyManager ` to ensure
added debugRequestDebug and debugRequestEntity methods to SimpleHostRoutingFilter for improved request handling to enhance debugging capabilities for HTTP requests
added ` destory ( ) ` method to ` OfflineResourceDataManager ` , ` IndexSegment ` , ` BitmapInvertedIndex `
[ rocketmq - 4252 ] fix test failure on slow ci server
replaced Charset . forName with StandardCharsets . UTF _ 8 in OutputStreamWriter instantiation to improve code readability and maintainability by using a more descript
hbase - 16464 fix bulkload error when there be no file in the hbase hbase hbase region
added a ` commission ` field to ` DefaultWithdrawFundsParams ` and updated ` RippleWithdrawFundsParams ` to
removed the import of StreamTerminator in AutoClosingReferenceStream . java to streamline the code by eliminating unnecessary dependencies
updated exception handling to include both SolrServerException and IOException in LoadSolrBuilder and SolrLocator classes to improve error management by ensuring all exceptions are caught
added a null check for ` method . getBody ( ) ` before invoking abstract overloaded methods in ` Java2TypeScriptTranslator . java ` to
added StacklessLogging for file session management in TestFileSessions . java to improve logging capabilities and ensure proper resource management
added serialization support for ` MutableColumnDataType ` , ` SqlDataType ` , ` SqlDataType ` , ` Entities ` , and ` Entities ` classes
updated SubExactLConstantTest . java and SubExactLNonConstantTest . java files to improve test coverage and accuracy
added a null check for claimRequestString before parsing to improve robustness by preventing null pointer exceptions
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory and modified its constructor to use a static final instance to improve
updated the ` processTypeHintForNestedDocuments ` method to handle null values and added unit tests for null values in ` UpdateMapperUnitTests
replaced ` mcr ` with ` coreStatus ` in ` CollectionsAPIDistributedZkTest ` and added a new method ` getCoreStatus `
initialize transformers and locators list in ModDirTransformerDiscoverer . java to ensure consistent initialization of transformers and locators
updated string concatenation syntax in AbstractQuerydslProcessor . java to improve readability to enhance readability and maintainability of error messages
add getcallstack ( ) method to PEgraphdecoder to make it easy to read call stack .
rename ` setOf ` and ` setOf ` methods to ` copiedSetOf ` in ` RestTemplateBuilder . java ` to improve clarity and
camel - 14284 : camel - mail : use identityhashcode ( ) instead of null check for mailmessage
http : / / issues . apache . org / jira / browse / amq - 4243 - fix npe in prefetchsubscription
added setIsPropertyName ( ) method to getIdentifierName ( ) to ensure identifiers are correctly set for property name processing
added WaveGeneratorActivity and updated InstrumentsFragment to launch WaveGeneratorActivity to improve user experience by providing a more descriptive welcome message for
added null checks for ` m ` and ` sheet ` in ` KeyedProperties . java ` and ` SheetOverlaysManager . java `
[ fabric8 ] add test for log , exec , exec ( ) and exec ( ) in podit
added a new test method ` testNoWriter ` to ` TestReplicationHandler ` to ensure that the ` SolrCore . initIndex ` does not
make sure dispatchmethodkernelokra do n ' t call super . dispatchmethodkernelokra ( range , args )
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 11919 - fix
refactor thread creation to use PrivilegedAction for improved readability to enhance type safety and maintainability of the code
added validation and dropdown selection in SelectBox . java and UITest . java to ensure the dropdown is selected on Linux6
replaced ` throw new IllegalStateException ` with ` Collector . printStackTrace ( e ) ` in ` JobGlobalListener . java ` to improve error handling by
updated the ` createState ` method to include a ` parentSplit ` parameter and modified related logic in ` FlowBuilder ` and ` SplitState `
changed the connectionState variable to be volatile and updated its usage in SSLSocketImpl . java to ensure thread safety and prevent potential memory leaks
updated the default polling period from 10 to 1000 in AbstractPollingEndpoint . java and added a periodic trigger in EnableIntegrationTests . java to allow for
replaced ` ByteBuffer ` with ` int ` for buffer operations in ` MemoryStack ` , ` MemoryUtil ` , and ` MemoryUtil ` classes to
added exception handling for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractDoclet classes to improve error reporting and
pmd : fix nullpointerexception in unusedmodifierrule .
replaced lambda expressions with method references in multiple Java files to improve code readability and maintainability by using method references
updated parameterized parameters in AbstractHttpClientServerTest to include SSL configuration to enhance security by allowing SSL configuration for HTTP requests
added error handling for transformation transformations in TransformationHelper . java to improve robustness by catching IllegalFormatException
replace ` userPermissions ` with ` activeConnectionPermissions ` in ` ActiveConnectionRESTService . java ` to improve clarity and consistency in accessing connection
replaced equality checks with a new EqualsBuilder implementation in Point . java to improve readability and maintainability of the code
added null check for outputRoot before processing in FileProcessor . java to avoid potential NullPointerException when outputRoot is null
pdfbox - 4071 : add annotationfilter to createannotation ( ) and createannotation ( )
refactor StackTraceCleaner class to improve stack trace handling to enhance performance and maintainability of stack trace cleaning
updated content type handling for CSS and javascript files in PluginServlet . java to ensure correct content type is set based on pathInfo
hhh - 16407 skip test that fail on oracle8
changed the parameter name from ` slot ` to ` slotSize ` and updated the upgrade method to improve clarity and correctness of the upgrade method
added ` getStats ( ) ` methods to ` AbstractDataImportHandlerTest ` , ` ContextImpl ` , and ` DocBuilder ` classes to
refactor ScheduledExecutorService initialization to use a lambda expression for improved thread management to enhance code readability and maintainability by encapsulating timeout settings
refactor gesture handling in PagedView , BaseOverview , and LauncherInstrumentation classes to use AccessibilityManagerCompat for better responsiveness to
replaced unlocks initialization with a UnlocksDialog instance and added a button for unlocks in PausedDialog to enhance user experience by providing a clear
added a call to clearDrops ( ) in PlayerEventListener . java to ensure that the drops list is cleared before proceeding
added a new constant DEFAULT _ PARAM to StreamResult . java to provide a default value for the inputName parameter
removed MalformedURLException from the testNormalizeOrder method signature in AttributeNormalizerTest . java to simplify the test method by removing unnecessary exception handling
updated printlnBoth to include chunk type in TsFileSketchTool . java and added flip method in LocalTsFileInput . java to improve
added headersToExclude to UmbrellaHeader and updated ProjectGeneratorTest to verify the inclusion of umbrella headers to enhance header management by excluding specific
fix checkstyle violation in grizzlyasynchttpprovider
added a call to encode ( ) in RequestPlugin . java to ensure proper encoding of request data
mondrian : fix for mondrian - 353 , mondrian - 353 , mondrian - 353 , mond
added validation for null or blank LDAP user in LdapAuthenticationProviderImpl . java and created a new test class for it in TestLdapAuthenticationProviderImpl
pdfbox - 4071 : use long . tostring instead of long . tostring in cosobjectkey . java
added a condition to clear complexWriters in ProjectRecordBatch . java to ensure complexWriters is cleared before proceeding
added @ SuppressWarnings ( " serial " ) annotations to multiple classes to suppress warnings related to serialization in the codebase
removed the ` public ` access modifier from the ` ClassGraphClassLoader ` class and added a null check for ` classInfo ` to simplify the class
added error handling for " _ errors " in ErrorResponseException . java to improve error reporting and provide clearer context for errors
[ hotfix ] [ event ] add constructor to eventsourcingrepository
refactor code to remove redundant calls to ` lhsNode . lhs ( ) . lhs ( ) ` and ` newBinaryNode . rhs ( )
refactor search text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to ensure proper string representation to improve robustness by
make sure we do n ' t send an empty message to the server if it ' s in standalone mode
updated planarConfiguration initialization to use TIFFBaseline . PLANAR _ CONFIGURATION _ CHUNKY instead of TIFFExtension . PLAN
added a call to ` is . close ( ) ` in ` ItemListTag . java ` to ensure proper resource management and prevent potential memory leak
add a new utility class to make it easy to use .
added two new classes , SigInt , SigIntBarrier , and SigIntBarrier , to manage signal handling in a concurrent environment
refactor ExporterGEXF to use HierarchicalGraph and HierarchicalGraph models instead of direct graph references to improve graph handling for hierarchical graph
replaced byte array with Text class and updated related methods in TCTLSeparatedProtocol . java to use Text instead of byte to improve performance and
added validation for rubric sub - questions in FeedbackRubricquestiondetails and updated the method signature in FeedbackRubricresponsedetails
updated catalog comparison logic to use ORIGINAL _ CASE instead of DB2Database to ensure correct comparison of catalog and schema case comparisons
refactor BrowserMobProxyTest to improve test setup and teardown methods to enhance test reliability and ensure proper handling of browser mob proxy settings
fix a bug in the critical error message in modelrepositoryimpl . java
removed redundant calls to mTextWatcher . reset ( ) in InPlaceEditView . java to improve code readability and maintainability
[ hotfix ] [ javadoc ] fix typo in trufflestring
[ hotfix ] [ table - common ] refactor outedgesfunction to use vertex and tuple2 instead of tuple3
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
deleted the ` ClassA \ 314 \ 201 . java ` file and added a new ` DiacriticTest . java ` file
replaced CountDownLatch with CyclicBarrier for thread - safe assertions in ClusterMembershipTest . java to improve thread safety and maintainability of the test
added error handling for WorkspaceReader lookup and updated condition checks in DefaultMaven . java and DefaultGraphBuilder . java to improve robustness by ensuring workspace
updated SSL scheme check from ` startsWith ( https ) ` to ` equals ( uri . getScheme ( ) ` in ` ServiceRegistryConfig . java `
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
removed unnecessary whitespace in Jdbc3Connection constructor parameters to improve code readability and maintain consistency
added a ` ensureInstance ( ) ` method to the ` ServletHolder ` class to ensure thread safety when accessing the servlet instance
[ binance ] [ binance ] add extra log to binanceexchange . deltaservertime ( )
added a condition to check if the binding starts with " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) Servlets for
added a null check for the form before deregistering to prevent potential NullPointerExceptions when the form is not initialized
added options parameter to bitmap decoding methods in ShadowBitmapFactory and ShadowCanvas classes to enhance flexibility and prevent potential NullPointerExceptions
[ java ] add default value for number of message in example .
added click handling and linkify text for tweets in TimelineArrayAdapter . java to improve user experience by providing a more user - friendly tweet
added " text " to the list of supported Postgres database types in PostgresDatabase and NumberType classes to enhance compatibility with PostgreSQL
fix flaky entryprocessorbouncingnodestest ( # 3683 )
updated state checks and error messages in AmbariManagementControllerImpl . java and AmbariManagementControllerTest . java to ensure proper handling of
added null check for thingRegistry in CreateBridgeServlet . java and updated test cases in CreateBridgeServletTest . java to ensure proper handling of bridge
fix thread safety issue in crawlserver . updaterobots ( )
replaced calls to getDisplayName ( ) . contains ( " Teredo " ) . contains ( " Teredo " ) . contains ( " Teredo "
refactor SpriteBatch constructors to accept a ShaderProgram parameter and modify shader creation logic to enhance flexibility in shader creation by allowing a default shader
added properties to set " options " to " c synchronous _ commit = on " in TestUtil . java to ensure that the " options "
refactor SortedSetTypeCoercer to use Sets . newTreeSet instead of ImmutableSortedSet . naturalOrder to improve element coerc
refactor confirmation message handling in RemoveFileDialogFragment and RemoveFilesDialogFragment to use a boolean flag for favorite status to improve code readability and maintainability
added a condition to check if the character ' c ' is less than 256 in URLPathEncoder . java to ensure that the character ' s length
updated port and address initialization in UserContext . java to use a dynamic port instead of a hardcoded value to improve code readability and maintain
removed the expectation for returning an empty map in HostResourceProviderTest . java to simplify the test by eliminating unnecessary tests
[ hotfix ] remove unused logger parameter from yarnentrypointutils . loadconfiguration ( )
refactored the code to make it private and added validation methods in SIPCommFrame . java to improve code readability and maintainability by reducing
deleted ShadowHtml . java and removed ShadowHtml . java from HtmlTest . java to streamline the codebase by eliminating unnecessary shadowing
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` that implements ` StarTreeRecordStoreFactoryBlackHoleImpl ` to
updated logger references from " org . eclipse . jetty " to " org . eclipse . jetty . http3 " and " org . eclipse . jetty
changed the access modifier of the addListeners method from private to package - private in MockSettingsImpl . java and added a new test case in Mock
[ hotfix ] [ doc ] fix typo in statehandlestore
updated import statements from ` org . eclipse . jetty . util . security . Constraint ` to ` org . eclipse . jetty . http . security .
improve error message when there be no section .
use try - with - resources to avoid resource leak
camel - 1145 : add test for availableportfinder . getspecificport ( )
added BuildTarget and updated method signatures to include library and ABI jar parameters to enhance functionality to support library and ABI jars in the build
fix typo : validating - cerficates - cerficates
removed the ` getPageSizeVal ` method from the ` ListCapacityCmd ` class to simplify the code and improve readability
added a new case ` CLOSED ` to the ` IteratingCallback ` class to prevent processing when the callback is closed
added a private boolean field ` isAuthorized ` and updated constructor parameters in ` AccessControlContext ` , ` AccessController ` , and ` ProtectionDomain `
updated OSGiDeployer to check if the app is not an instance of AbstractOSGiApp before sending it to ensure proper handling of
added handling for " tiff " codec and container type in DLNAMediaInfo . java to ensure correct MIME type handling for different media types
[ hotfix ] [ runtime ] profile argument assumption in optimizedcalltarget . profilearguments ( ) .
added a new file ` CubocDesktop . java ` and modified ` Map . java ` , ` Map . java ` , and ` Map
updated ` PolicyMonitor ` initialization to use ` MavenTestingUtils . getTargetDir ( ) ` instead of ` MavenTestingUtils . getTest
added a call to removeAllFiles ( ) in TrashbinActivity . java to ensure all files are removed from the trashbin list adapter
updated the import statement from ` org . eclipse . jdi . Bootstrap . allConnectors ( ) ` to ` com . sun . jdi
make checkglobalvariablestoragenode an abstract class for checkglobalvariablestoragenode
updated the ` createLauncherEvent ` method to include an ` Intent ` parameter and modified the ` dispatchUserEvent ` method to include a ` Intent
increase the maximum amount of the target in the BurningManPresentationService from 546 to MAX _ BURN _ LOWER _ FLOOR
updated imports and refactored the ` snapshotObject ` method in ` UniqueConstraintSnapshotGeneratorSnowflake . java ` to utilize
refactor SQL selection logic in DMLTransformer . java to handle empty insert statements to improve readability and maintainability of the code
updated test method names and parameter names in ServiceValidateControllerTests . java to improve clarity and consistency in naming conventions
modified the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and added a ` hideDefaultName ` method to improve function validation
refactor JarLauncher class to improve code organization to enhance maintainability and readability of the code
updated generic types in multiple classes to use generics for better type safety to enhance type safety and prevent potential ClassCastExceptions
do n ' t send hole punch packet for video telephony jabber
added a new test method ` testUpdateWithPGobject ` in ` ResultSetTest . java ` to verify the functionality of updating pgobjects in the
added handling for non - UAA origin in PasswordResetEndpoints to ensure password resets only occur when the user has a non - UAA origin
replaced direct retrieval of the element from the document ' s getChildNodes ( ) method with a method call to getDocumentElement ( ) to improve code readability
refactor Cache class for improved performance to enhance performance and maintainability of caching operations
updated variable names from ` timeInSec ` to ` timeMillis ` in ` Isochrone . java ` and ` SPTResource .
add a check for a valid bind binding in the light relay .
added a new ` Chainer ` class to the ` CollectionSubject ` class and updated the ` contains ` method to return a ` Chainer <
refactor Model class to improve code structure to enhance maintainability and readability of the code
updated the recordedTime calculation in Locations . java to include a value of 619315200000L to ensure accurate tracking of the recorded time
added a check to resize the status if the terminal type starts with ` AbstractWindowsTerminal . TYPE _ WINDOWS ` to ensure the status reflects the current
updated the logic for setting the host version state in UpdateDesiredStackAction . java to ensure that host versions are only set when not required
[ java ] move jsinterop and jsinterop to integration test
[ mng - 4071 ] add support for global location and user location in maven project .
do n ' t swallow exception in operationserviceimpl . toobject ( )
updated method call syntax for resolving property configurers in KnativeEnvironment . java to improve code readability and maintainability
updated the executor name from " commitlog _ archiver " to " CommitLogArchiver " to improve clarity and consistency in naming conventions
added connect ( ) calls in CloudSolrClient and implemented a test for uploading configurations in TestCloudSolrClientConnections to ensure proper handling of
added synchronization to multiple bindings in Breakpoint and DebuggerSession classes to ensure thread safety when adding bindings to the allBindings list
added methods to clear files and cache in RobolectricTestRunner and ShadowContext classes to improve code readability and maintainability by centralizing file
added LinkedHashSet and TreeMap imports to SecureXStream . java and updated style handling in XStreamPersisterTest . java to enhance security by ensuring consistent
kiehelper . setkiemodulemodel ( ) now accept a kiemodulemodel instead of a kfs . toxml ( )
added checks for Farmland farms and modified soil dry flag handling in BlockEventListener . java to ensure proper handling of farmlands based on new state
added a default implementation of the getLocalIp ( ) method in FinishedSpan . java to provide a default implementation of the method
updated ExecutionContext handling in JdbcStepExecutionDao and modified test cases in AbstractStepExecutionDaoTests to improve execution context management and enhance test coverage for
remove
added " python37 " and " python - cpython " libraries to the resource list and updated file paths in tensorflow . java to include "
refactor plugin list retrieval and refresh functionality in PluginTab . java to improve code readability and maintainability by reducing duplication
changed log level from info to warn for history file errors in DefaultHistory . java to improve logging granularity by using a more descript
vmware : fix npe in vmwarestorageprocessor when vm be null
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 13636 - allow ssh
refactor ExperimentalMockitoJUnitRunner class for improved performance to enhance test reliability and maintainability
updated serial handling in GpsSettingsActivity and Session classes to utilize a new utility method for retrieving the build serial to improve code maintainability and
refactor SwapGBuffers class for improved performance to enhance performance and maintainability of buffer management
added a null check for spatial before removing it in AnimControl . java to prevent potential NullPointerExceptions when spatialControl is null
added unit tests for setting smart replies in ShadowRankingTest and refactored ShadowRanking to use Reflector instead of ReflectionHelpers to improve
[ java ] do n ' t add segment file to the archive if it do n ' t exist .
updated the retrieval of the CARROT _ RESOURCES _ DIR parameter from resourceLoader . getConfigDir ( ) to initParams . get (
added null check for testRect in WindowsTreeUI . java and created a new bug8004298 . java file to address potential NullPointerExceptions during
updated method names from ` buildStdArgs ( ) ` and ` args [ ] ` to ` buildStdArgs ( ) ` in ` ScriptUtils
replaced null return statements with throwing TasteException in RecommenderMapper and Retriever classes to improve error handling and provide clearer feedback on
added ClientInfo handling and setup method in SurrogateAuthenticationEventListenerTests to improve test reliability by utilizing ClientInfo for client information
added a boolean variable ` isUserView ` to ` CardPresenter . java ` to track user view state for better user experience
refactor methods in GraphvizJavaExecutorUtility and GraphvizUtility for improved clarity and consistency to enhance code readability and maintainability by
added a new variable ` constructBatchHistogram ` to the ` constructBatchHistogram ` method call in ` LogDispatcherThreadMetrics . java ` to improve
added a new module - info . java file for the sqlite connector module to define module exports and require dependencies for the SQLite connector
added a sleep delay of 500 milliseconds in StreamResetTest . java to improve responsiveness during test execution
removed conditional check for " new " type and " api " from permissionsManager initialization to simplify permissions manager initialization logic
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a method to get the depth of the SpringLoadedState class to provide a way to calculate the depth of the state based on the context
replaced System . arraycopy with Arrays . copyOfRange for data copying in BinaryDecoder . java to improve code readability and maintainability by using a constant for
[ hotfix ] [ javadoc ] fix typo in executiongraph
removed swipe layout and adjusted notification handling in NotificationActivity and NotificationRenderer to streamline notification processing and improve user experience by eliminating unnecessary swipe functionality
updated exception handling logic in DefaultExceptionConverter and improved test coverage in ExceptionsTest , EndpointTest , and EndpointTest classes to enhance error reporting and
fix checkstyle issue in net / glowcontainer . java
replaced MethodHandle usage with reflect . Method for setting the target field in ProxyMaker . java to simplify method retrieval and improve code readability
fix bitand and bitand test to work with java 8
remove unnecessary stringutils . join ( ) call in baseemailcontentformatter
added functionality to manage and manage the visibility of the ` layoutProvidedPanel ` JPanel in ` LayoutPanel . java ` to enhance the user interface by
added a null check for the location variable in the ServerCallable class to prevent potential NullPointerExceptions when location is null
refactor BuilderFactory , Pipeline , PipeliningTest , and PipeliningTest classes to improve code organization and readability
added a null check for key parameters in BasicChecker . java to prevent NullPointerException when the key parameters are missing
refactor MediaTypeRequestMatcher to use a dedicated method for checking ignored media types to improve code readability and maintainability by encapsulating the
updated logging to include taskAttemptId in LlapBaseInputFormat . java to improve logging clarity by including taskAttemptId and taskAttemptId
added properties for spring . main . allow - bean - definition - overriding in EventServiceTests to allow configuration of bean definition overriding by default
added a null check for the indexReader before closing it to prevent potential NullPointerExceptions when the indexReader is not initialized
updated package declarations for BTCMarketsStreamingAdapters , BTCMarketsStreamingExchange , BTCMarketsStreamingMarketDataService , and B
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest . java ` to verify rendering behavior for specific code
added a new file ` CompatibilityTest . java ` that tests the compatibility of DTD and Properites functionality to ensure proper handling of property
added new classes ` VariantComponentsModule ` , ` PushUtils ` , ` SecurityUtils ` , and ` UserAccountManager ` to provide a
updated replica count calculations and improved test assertions in TableRebalancer and TableRebalancerTest classes to enhance code readability and maintainability by
bump version to 2.10 . 0 and update version number to 2.10 . 0
[ log4j2 - 132 ] fix test failure on window .
added SocketTimeoutException handling for read timeouts in AjpAprProcessor to improve error handling for timeout scenarios
set default values for friction , restitution , density , and isSensor to zero to ensure proper initialization of friction , restitution , and
updated method signatures to include ` AnomalyFunctionSpecMap ` instead of ` ClassificationTaskRunner ` and ` DummyAnomalyClassifier `
added error handling for the shell command execution in LauncherInstrumentation . java to ensure proper execution of the broadcast idle command
added unit tests for fontTagWithAttributes and linkTagWithAttributes in ResourcesTest . java and modified the return statement in ResStringPool _ span
fix ( gui ) : add miss link to statscomponent . guistatscomponent . guistatscomponent . guistatscomponent . java
added permission handling for CALL _ PHONE in Launcher . java to allow users to access phone calls in the application
updated return values in SimulationPanel , PlotDialog , BasicEventSimulationEngine , and Startup classes to include flightData as a parameter to enhance
refactor GeoPointDistanceQuery , GeoPointInBBoxQuery , GeoEncodingUtils , and TestGeoEncodingUtils classes to remove unused parameters to
added a synchronized method ` isDockerAvailable ( ) ` to ` DockerClientFactory ` to check if the Docker client is available to ensure that the
removed the VPX constant from CodecTypes . java to simplify the code and improve maintainability
added a coordinator address option to DistBuildFactory and DistBuildRunCommand classes , and modified the getCoordinatorAddress method in AbstractDistBuild
added path matching functionality to FsUtils and modified timer handling in WrapTimer to improve path matching functionality and ensure consistent timer usage across the application
added a check to ensure ` ent . getValue ( ) ` is non - negative before adding label values in ` TestTaxonomyFacetSumValueSource .
fix for nullpointerexception in app . getboolean ( ) , a suggest by valerybokov
removed the @ Test annotation from TestPerfBenchMarkDriver . java to clean up the code and improve readability
added materialization time setting in ObjectStore and created a corresponding test in TestObjectStore to ensure that creation metadata sets the correct materialization time for
added handling for UnsatisfiedLinkError in VoskSTTService to improve error handling for missing native dependencies
remove the property is _ ONE _ WAY in JMSSamplerGui and update response code in JMSSampler to improve code readability and
refactor break weight calculation in GlyphView . java to improve readability to enhance code clarity and maintainability
refactor byte reading logic in RCFile . java to use a prefix - based byte array instead of syncCheck to improve performance and maintainability
added an @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to address a bug related to SOLR - 13028
replaced direct calls to ` getSortedByCounts ( ) ` with ` LinkedList < String > unwound ` for steps , processors , and
refactor ClipboardTransferable and DataTransferer classes to remove unnecessary parameters and simplify the comparison logic to improve code readability and maintainability by
added a new argument " - infoport " to the argument list in TestThriftServerCmdLine . java to ensure the correct port is used for
added a check for ` atEOF ( ) ` in ` RegExpScanner . java ` to return false if ` atEOF ( ) ` is false
refactor metrics and timer handling in Debug . java to use a set of metrics and timers to improve code readability and maintainability by reducing
add a null check for the nickname in the chat room ' s getnickname ( ) method .
papplet : do n ' t throw an exception if the file name be empty
refactor the refresh token creation logic into a separate method ` createRefreshToken ` to improve code readability and maintainability by encapsulating the
removed String . format from error message in BuckConfig . java to simplify error message formatting for better readability
[ hotfix ] [ yarn - flink ] remove dead code in yarnapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ( ) ` to ` ShadowNativeImageReaderSurfaceImage ` that returns a ` HardwareBuffer `
updated BTCChinaExchange to set SSL URI for the pollingMarketDataService to ensure proper SSL configuration for the BTCChina exchange
pmd : use project . basedir instead of project . basedir for cpd task
added new classes ` OauthController ` , ` Oauth2PluginTest ` , and ` Oauth2PluginTest ` to handle OAuth2
refactor SemgrexPattern class to improve code organization to enhance maintainability and readability of the code
refactor ` flatMap ` and ` flatCollection ` methods in ` AbstractStreamEx ` , ` EntryStream ` , and ` EntryStream ` classes
camel - 14284 : camel - rest - add more logging for exceptiontoproducerresponseconverters . convert ( )
updated the condition to check for both " specs2 " and " scala . " projects with mixed scala in RobolectricClassLoader . java to
changed the condition to check if the transmittableAudioEncodings contains sdp to ensure that the transmittableAudioEncodings list does not contain the
replaced ` SequenceNextValueFunction ` with ` DatabaseFunction ` in ` CreateTableGenerator ` and added a new test for the current timestamp database database
added methods to check the number of stations in the document in NormalizedMultiValuesTest . java to ensure the correctness of the gml engine
updated NetworkTestUtils and UaaHttpRequestUtilsTest to use a volatile boolean flag for the ` wasInvoked ` variable and replaced ` responseHandler `
added a check for configuration before expanding regex mapping in ColumnarDataSource and modified return statements in RowProcessor to ensure proper handling of regex mapping expansion and
refactor ` splitIntoThirtyParts ` to ` splitIntoThirtySecondsParts ` and ` splitIntoThirtySecondsParts
added XLCDCommunicator , XLCDCommunicator , XLCDController , XLCDCommunicator , XLCDController , and XL
kiemodulemarshaller : fix kiemoduletransformer . loadschema ( ) to work with jaxp api
updated retry logic in EventQuery001 , EventQuery002 , EventQuery002 , EventQuery003 , and EventQuery003 classes
refactor thread state handling in WorkerProcessPoolTest to use a constant for timeout and simplify state waiting logic to improve code readability and maintainability
refactor ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and add a new test class ` DelegatingMethodTest ` to
updated FREEZE _ V2 , UNFREEZE _ V2 , DELEGATE _ RESOURCE , and UNFREEZE
updated the ` command ` method to throw ` ConfigurationException ` and modified the ` command ` method to throw a ` ConfigurationException ` to ensure proper
deleted the ` SpringTransactionHooks . java ` file and replaced ` SpringTransactionHooksTest . java ` with ` AbstractSpringTransactionHooks . java `
refactor AbstractClassAssert to improve code readability to enhance maintainability and facilitate future updates
added a new file ` GetUninitializedStringValue . java ` that tests the ` GetUninitializedStringValueTarg ` class to demonstrate the
added support for ` providedDeps ` in ` AndroidLibraryDescription ` and updated related logic in ` GraphEnhancementQueryEnvironment ` to enhance dependency resolution
added a new DeviceFlag ` ENABLE _ KEYBOARD _ TRANSITION _ SYNC ` to the FeatureFlags class to enable keyboard
added a boolean variable ` sSavedBugreport ` and modified the bug reporting logic in ` FailureWatcher . java ` to improve performance by avoiding unnecessary
added a constant for " cinepack " format in FormatConfiguration and updated LibMediaInfoParser to utilize it to provide a configurable format for
added hand movement animation functionality to the Player class to enhance user experience by allowing hand movement animations based on user configuration
replace ` data . describe ( ) ` with ` digest . toString ( ) ` in ` GrpcCasBlobUploader . java ` to ensure
deleted the HSQLDBServerFilesFilter . java file and updated file filtering logic in TestUtility . java to streamline the codebase by removing
added a null check for restoreFromSeed and restoreFromKey in WalletAppKit . java to ensure that restoreFromSeed and restoreFromKey
updated the method for retrieving the latest version from APIDataVideoVersion to APIDataSeriesVersion and added a trace log statement to improve traceability and
added a visitMethodInvocation method to check if a type exists in HasTypes . java to ensure proper handling of type existence in method invocations
replaced hardcoded value of 6 * 3 with a constant NUM _ VALUES in AmbientCubemap . java to improve code readability and maintain
add a profiler dialog to display info when the current mode be not set .
added a check for zero values in multiple mask classes to return a default value of 0 to ensure that the masked number is returned when the value is
refactored test to use temporaryfolder instead of file . createTempFile ( )
add itemstack . isitemintentable ( ) and gethassubstitutions ( ) method to make it easy to find item
add a line _ width field to the renderstate class to fix mc - 167447
alexeibarantsev : set the browser . startup . page preference to 1 for the firefox driver .
added condition to check for CONNECT and GET requests in Http1xClientConnection . java to ensure proper handling of connection and upgrade requests
updated the task name from " compile " to " process - classes " in JoobyMojo . java to clarify the purpose of the process process
replaced the shutdown method with closeIdleConnections in HTTPHC4Impl . java to ensure proper resource management and prevent potential memory leaks
added a condition to check if the aggregate function suffix is not present before processing metrics to avoid unnecessary processing when the metric name does not exist
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskThumbnailView to use mCurrentFullscreenParams for corner radius retrieval in Task
added a new Java class ` Solution ` that calculates the number of frequencies based on a specified number of frequencies to provide a
set the SocketChannel variable to null in ClusteredAgentManagerImpl . java to ensure proper initialization of the SocketChannel variable
updated MutisignOperationerGodicTest . java file to improve test coverage for Mutisign operations
added error handling for ` readToStartFragment ( ) ` and ` readToEndFragment ( ) ` in ` StaxEventItemReader `
replaced specific imports with a wildcard import and added a null check for qualifiedResourceName in ShadowTextView . java and TestAttributeSet . java to simplify
updated import statements to use ` net . minidev . json ` instead of ` com . nimbusds . jose . shaded
updated OS type check from " Linux " to " AIX " and added support for " Linux - s390x - 64 " in OS
fix : use the getroutercontrolip ( ) method instead of router . getprivateipaddress ( )
added a static method ` invokeWithoutBlockingWithResultSync ` to the ` CN ` class to provide a way to invoke a runnable without blocking
deleted the PresenceMessageComboTests . java file to the test class is no longer needed in the project
replaced int casting with Math . round for width and height calculations in PortraitPagedViewHandler . java to improve code readability and maintain
updated variable names in TestClusterDumper . java for consistency to improve readability and maintainability of the code
updated the calculation of ` classSize . OBJECT ` and ` rowCache ` in ` KeyValue . java ` to include a calculation for ` rowCache
camel - 14265 : camel - default - camel - jbang - add service to camel context to allow to configure the type converter
added support for handling ` ConditionalTask ` in ` SparkCrossProductCheck . java ` to enable handling of ` ConditionalTask ` instances in the Spark
refactor action addition and reload logic in Launcher , LauncherAppState , and LauncherModel classes to improve code readability and maintainability
updated the condition for checking JSON responses in LoginInfoEndpoint . java and added unit tests for account chooser functionality in LoginInfoEndpointTests . java to
added a ` toDescriptiveString ( ) ` method to the ` AssignmentManager ` class to provide a description of the state and server
renamed the variable ` message ` to ` msg ` and ` result ` in ` HuobiAccountInfo . java ` and updated related methods to
added support for " PERIOD " in MariaDBDatabase and a corresponding test in AddColumnGeneratorTest to ensure proper handling of reserved words in the
[ beam - 11717 ] update the documentation of portablepipelineoptions for java 8 and 11 .
added Launcher shortcuts for Android 7.1 - you now have Launcher shortcuts to the dictionary loading mechanism to enhance user experience by providing
updated NUM _ MILLIS _ IN _ DAY constant in IndexExpressionIT . java and changed access modifier of NUM _ MILLIS _ IN _ DAY
remove system . out . println from imageresourceloader
[ java ] use aeronclientinvoker . invoke ( ) instead of invoke aeronclient ( ) in archive and sequenceragent
updated validation logic in mmm Attr . java and added a new NoWarnOnImplicitParams class in ppp ppp ppp ppp ppp ppp ppp ppp ppp ppp
refactor menu item visibility logic into a separate method ` showMenuItem ` and ` hideMenuItems ` to improve code readability and maintainability by
added BTC _ deposit , reserved0 , reserved6 , reserved7 , and reserved8 to BTCETransHistoryResult . java to support additional
replaced ` List ` with ` Set ` for series and exceptions in ` RetryFilterFunctions . java ` to improve performance by using a more efficient set
added a @ Deprecated annotation to PluginLoader . java to indicate that the class should no longer be used in future development
added a new condition to check if the end time is greater than the sequence time in LastQueryExecutor . java and created a new test in Io
corrected a syntax error in the HTTP response string to ensure proper formatting of the request string
set slf4j . simplelogger . log . org . slf4j . simplelogger . log . org . slf4j . simplelogger
added a call to setSafeArea ( true ) in titleBar to ensure the title bar is safe in the user interface
updated loop condition in OverflowSeriesImpl . java to iterate over the last index of the TimeSeriesChunkMetaDataList to improve performance by avoiding unnecessary
added SQL renaming and deparsing tests in AlterTest . java to ensure correct parsing and deparsing of SQL queries
changed the access modifier of the copyState method from package - private to public to allow access to the copyState method from other classes
fixed - rexecutorservice . executecallable ( ) method should return a CompletableFuture instead of a single call to executeCallable ( ) .
added a new constant ` SUFFIX _ SPLIT _ FILE ` and updated references in ` FileLister ` and ` FileSystemSplit ` classes to
[ hotfix ] [ table - common ] [ table - common ] [ table - planner - blink ] fix typo in javadoc
reformatted code for better readability in CompareFunctionsProcessor . java to improve code readability and maintainability
[ hotfix ] [ runtime ] change checkavailablediskspace to checkavailablediskspace ( ) in compactiontask
removed ` toString ( IndexReader ir ) ` and ` toString ( ) ` methods from ` SegmentTermVector ` , ` TermFreqVector ` ,
added null check for state handler in AbsSwipeUpHandler and unregistered task stack listener in TaskAnimationManager to ensure proper cleanup of task stack listener
refactor ` getLockTimestamp ` and ` setLockTimestamp ` methods in ` AppPreferences ` , ` PreferenceManager ` , and ` PassCode
refactor artist retrieval logic to use a dedicated method to improve code readability and maintainability by encapsulating artist retrieval logic
added a null check for remoteMessage before accessing its data to prevent potential NullPointerExceptions when remoteMessage is null
fix nullpointerexception in splittext when there be no header file
added support for Windows key store type in HttpsConnectorFactory to ensure compatibility with Windows - specific key store types
updated the default check timeout value from 400 to 1 _ 000 in RestTemplateSenderTest , WebClientSenderTests , and WebClientSenderTests
added a conditional check for ` FILE _ NOT _ FOUND ` in ` FileSyncAdapter . java ` to handle cases where the remote folder is
added animation functionality to the Slider class to enhance slider animation capabilities by allowing dynamic animation options
updated assertions in LineSeparatorProcessorTest . java for consistency to improve readability and maintainability of the code
updated maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to increase the maximum size for texture packing
added a new test method ` negatedTernaryNotUnwrapped ` in ` UnnecessaryParenthesesTest . java `
camel - 14284 : camel - hazelcast : fix npe when queue . poll ( ) return null .
added a new ` TextFeedbackTest ` class and modified ` AllTests ` and ` TestRunner ` to implement a test for the ` TextFeedback
replaced Math . round with Float . compare for score comparison in DefaultSolrHighlighter . java to improve accuracy in score comparison by using a more efficient comparison
updated case statements in AddAndScaleMultiImage . java and ResourceEditorApp . java to use try - with - resources for FileOutputStream to improve
added a method to retrieve the array class element offset in HotSpotReplacementsUtil . java and updated its usage in ArrayCopySnippets . java
log4j2 - 164 : skip log publication if there be no tps / ps / ps / ps / ps / ps
added remoteScmSupported property and related getter / setter methods to Configuration , RuntimeEnvironment , and Indexer classes to enable support for remote SCM
added additional state checks to the OnOffType assignment in MieleApplianceHandler . java to ensure proper handling of additional state values
replaced instances of ` StatsLogCompat ` with ` SysUiStatsLog ` in ` StatsLogCompatManager . java ` to standardize logging practices
corrected the spelling of " LOG " to " LOG " in LocalZookeeper . java to improve code readability and maintain consistency
added unit tests for project generation events in EventSerializationTest . java to ensure proper serialization and deserialization of project generation events
ggb - 311 add selectionmanager . getspecpoints ( ) and update selectionmanager . getelementndpoints ( )
refactor JavaCompiler class for improved performance to enhance performance and maintainability of the code
hbase - 16464 allow test to execute random read if there be no time to write per server .
refactor multiple Java classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
added " -- gc - sections " and " nocopyreloc " flags to the ldflags in NdkCxxPlatform . java to
refactor URI construction in SpringCloudCircuitBreakerFilterFactory to use ServerWebExchangeUtils for expanding fallback URIs to improve code readability and
[ hotfix ] [ test ] update copyright year for the firefox driver
added null checks for URI and localName in ReadOnlySharedStringsTable . java to improve code robustness by preventing potential NullPointerExceptions
added a new method ` getAccountNet ` in ` HttpMethed . java ` and a corresponding test in ` HttpTestAccount001 .
added a check to return the clipString if availTextWidth is zero in SwingUtilities2 . java and improved exception handling in Test6635110
refactor ` FlatteningIterator ` to initialize ` FlatteningIterator ` and modify iterator handling in ` FileResourceIterator ` and `
update NotificationUtils to remove square brackets from title and body properties to ensure proper formatting of HTML tags for better readability
chore ( regen ) : generate sample code in the java microgenerator
added a method to reload and delete an existing feedback question in InstructorFeedbackEditQuestionsUiTest . java to ensure that the feedback edit
fix for bug # 12497 - hssfsheet . getphysicalnumberofrownum ( ) return 0 instead of - 1
added permission checks for launcher activities in InstallShortcutReceiver , Launcher , Launcher , and Launcher classes to ensure proper handling of malicious intents
[ java ] refactoring session handling in sequenceragent to be more descriptive .
refactor hashCode method implementations in AbstractParquetMapInspector to simplify equality and hashing logic to improve code readability and maintainability by reducing
added a check for remotely closed state in HTTP3StreamConnection to ensure proper resource management and prevent potential memory leaks
changed the ` SplitReader ` interface to extend ` AutoCloseable ` and removed the ` close ( ) ` method from ` SplitReader ` to
removed the deepCopy method from GsonBuilder to simplify the copy method to improve code readability and maintainability
make llsourcemap . notfound a static final instance of llsourcemap . notfound
refactor file opening and closing logic in RestClientRequestImpl . java to use a loop for multiple upload entries to improve code readability and maintain
removed unnecessary whitespace in dispatchStatusString method call to improve code readability and maintainability
replaced ` MockFactory . class . getClassLoader ( ) ` with ` SearchingClassLoader . combineLoadersOf ( toMock ) ` in ` Mock
added a new file ` TestRefreshFlagBug . java ` that tests the ` refreshFlagBug ` functionality to address a bug in the ` refresh
added LEFT _ SEMI _ JOIN condition to the conditional check in ConstantPropagateProcFactory . java to ensure proper handling of LEFT _ SEMI join
replaced boolean completed variable with HttpStatus . CONTINUE _ 100 in HttpReceiver . java and HttpSender . java to improve code readability and maintain
[ hotspot ] use arrayopdesclengthoffset instead of arraylengthoffset .
add default policy to test to make it easy to configure .
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a check to return early if the app context is not running to ensure that the app context is only stopped when the application is not running
changed the return type of ` drawItem ` method from ` void ` to ` GlyphLayout ` in the ` drawItem ` method to improve method
refactor metrics handling in SpringmvcClient and improve error handling in CodeFirstSpringmvc to enhance code clarity and maintainability by using a
updated the calculation of the SAFE _ ACCOUNT _ AGE _ DATE constant in AccountAgeWitnessService . java to ensure accurate representation of account
reformatted code for consistency and readability in StructureHeader . java and StructureReader . java to improve code readability and maintainability
added ResourceUrlProviderExposingInterceptor to CasWebflowContextConfiguration and updated related interceptors in DefaultLoginWebflowConfigurer to enhance the
dexpler : do n ' t transform return statement in dexpler .
refactored the EnrichedRuleDTO to use a more descriptive variable name to improve code readability and maintainability by using a
updated method calls to use " / symlinkDir " instead of " /FOLLOW _ LINKS " and modified arguments in AliasCheckerSymlinkTest to
[ flink - 18135 ] [ table - planner ] remove dialect dialect from executionentry
refactor ` rDotJavaPackages ` to ` rDotJavaPackagesSupplier ` and update related methods to use a ` Supplier < ImmutableSet < String
[ net . sourceforge . pmd . ast ] add test for deprecate package declaration
added configuration for min _ cross _ compaction _ unseq _ file _ level in IoTDBDescriptor . java to enable configuration of the min
[ hotfix ] move activeresourcemanager to resourcemanager . active
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to improve clarity
refactor ZipResource to handle URISyntaxException and improve URI creation to enhance error handling and ensure proper URI creation for feature files
reformatted code for consistency and clarity in ExpandableUploadListAdapter . java to improve readability and maintainability of the code
refactor RobolectricTestRunner to use ArrayList for testClassHierarchy instead of Config . class to improve configuration handling and ensure correct parent class and
added filtering for blockRegistry and itemRegistry names in ModelLoader . java to ensure that the registry name is not null to avoid potential NullPointerExceptions
removed the ` SyncDataService ` interface from multiple methods in ` AbstractDataChangedListener ` , ` WebsocketCollector ` , and ` Websocket
added enum handling in JSONPojoConvertor and updated test cases in JSONPojoConvertorTest to improve type safety and ensure correct color handling for enum
added a deprecated check for the ` -- view ` option in ` IjProjectCommandHelper . java ` to indicate that the ` -- view `
replace stringbuilder with bytearrayoutputstream and use transportformat . pump instead of stringbuilder . tostring ( ) .
added a OrientationCorrectionListener to the GyroControl class and modified mouse positioning logic to support orientation corrections to enhance user experience by
updated the BIOME _ LIST _ SIZE constant to use BiomeGenBase . getBiomeGenArray ( ) . length instead of 256 to
updated function names from ` println ` to ` print ` in ` GetInterfaceTest . java ` and ` Foo2 ` in ` GetInterfaceTest
updated the assignment of the Environment variable in FileCompilerConfig . java to ensure the correct environment is used for the jdt compiler
added a new file ` ByteToLongCollector . java ` implementing a ` ByteToLongCollector ` interface to facilitate the collection of byte - to
added a preload parameter to MMapDirectoryFactory to enable preloading behavior in the map directory
added custom metrics for various component configurations in BukkitPlatform . java to enable customization of metrics based on configuration settings
refactor QuickConnectREST class to improve code structure to enhance maintainability and readability of the code
added aspect and default card image handling in CardPresenter . java to enhance the visual appearance of the card image
( chore ) camel - xmlui : use loginpageurl ( ) instead of auth . isimplicit ( ) instead of auth . isimplicit
updated VectorHashKeyWrapper to handle empty array cases for longValues , doubleValues , byteStarts , and decimalValues to improve robustness by
added unit tests for the ` nanoTime ` method in ` TimeChangeTest . java ` to verify the correct behavior of the ` nanoTime ` method in
added trim ( ) method to MultiPartFilter and updated line assignment logic in MultipartFilterTest to ensure proper handling of null values and improve error
add the ability to drop the drop of an entity into the living event . close # 119
updated error messages and status details in OpenUVBridgeHandler and OpenUVReportHandler to provide clearer context for offline configuration issues to improve user feedback
[ beam - 10225 ] remove unsupportedoperationexception from planner
added RdepsFunction to GraphEnhancementQueryEnvironment and updated related tests in GraphEnhancementQueryEnvironmentTest to improve error handling and ensure correct
refactor Character class to improve code structure to enhance maintainability and readability of the code
added a flag to scale the entire rocket and adjusted the selection option ' s priority based on the selected rocket to ensure that the entire rocket is only
replaced ` Arrays . toString ( ) ` with ` Arrays . toString ( ) ` for assertions in ` UpdateableResultTest . java ` to simplify
added null checks and time boundary handling for offline and realtime table names in BaseBrokerRequestHandler . java to improve robustness by preventing potential NullPointerException
[ java ] add poller to apr and http11 apr processor if the endpoint be pause .
update EightmusesRipper to use " picture " attribute instead of " Sex and Porn Comics " and update URLs for downloading
replaced instances of ` mDevice . wait ` with ` TestHelpers . wait ` across multiple test files to improve code readability and maintainability by
added a condition to check if the profile is phone or landscape in QuickstepLauncher . java to ensure proper layout behavior for phone and landscape devices
replaced calls to ` getValue ( ) ` with ` query . unwrap ( QueryImpl . class ) ` in ` PartTreeJpaQueryIntegrationTests
refactor ` readAllLines ` method to use a dedicated ` readMatchingLines ` method to improve code readability and maintainability by encap
removed the dynamic check logic from JpaQueryExecution . java to simplify the code and improve readability
added a null check for the entity object in PhysicsProcess . java to ensure proper handling of null entity types
added a test method to verify entry processor behavior when value attributes are indexed to ensure that the entry processor correctly clears the map when attributes are indexed
add support for jitsi - conference - room join and remove the join room header .
updated the HTML message formatting in Utils . java and modified the HTML message format in UtilsTest . java to improve readability and maintainability of the
fix tobiasdiez not work when no value be specify in the editor menu
updated the scratch path format in Aapt2Link . java and added RmStep . fromCellRelativePath in Aapt2Link .
replaced instances of ` new Capture < > ( ) ` with ` newInstance ( ) ` in ` ExternalJavacTest . java ` and ` Thrift
ggb - 167 : do n ' t clear selected geos when av be enable .
added handling for EmptyStackException and updated exception handling in YsldValidator . java to improve error management and provide clearer error messages
added ` isCanceled ( ) ` method implementations across multiple classes to provide a way to check if the call is canceled to ensure that the call
refactor ` isAnnotationPresent ` methods across multiple classes to use a default implementation to improve code readability and maintainability by encapsulating the
changed the visibility of the ` removeAllWidgets ` method from ` void ` to ` default ` in ` UILayout . java ` to allow the
[ hotfix ] [ test ] make yarnsessionfifoitcase use log4j . log4j . runtime . client . job
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 42225 . cgi
added video transcoding logic for high - res content in PlaybackController . java to ensure proper transcoding of high - res content in the playback
[ beam - 12265 ] remove dependency on datasources . v2 from datasourcemock
replaced specific imports with a wildcard import and modified listener management logic in GpsLoggingService . java to improve code readability and maintainability by
changed the parameter type of ` putString ` method from ` boolean [ ] ` to ` byte [ ] ` in ` putString ` method to
added BaseItemDragListener import and modified drag source handling in FolderIcon . java to support drag - and - drop functionality in the launcher
make signavioconnector . createemptyartifact ( string , string , int , int , int , int , int , int , int ,
corrected the spelling of " rabbitmq " in configuration keys in RabbitMQPublisherImpl . java to improve code readability and maintainability
removed unnecessary calendar checks in VideoViewerActivity . java to simplify the condition for video link loading
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 13636 - sftp
updated the assertion in BaseWeatherConsumerTest to use assertMockEndpointsSatisfied instead of assertIsSatisfied to improve test reliability by allowing more time for mock
renamed ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and maintainability by using a more descript
added support for LARGE _ FERN in DoublePlant and DoublePlant classes to ensure proper handling of LARGE _ FERN
replaced ` setFocusable ( false ) ` with ` setRequestFocusEnabled ( false ) ` in ` TranscodingTab . java ` to disable focus
vmmanagerimpl : throw exception instead of throw it in vmmanagerimpl . java
removed the requireLicense ( ) method and updated conditional checks in DB2TestSystem and DockerDatabaseWrapper classes to streamline license acceptance logic and improve
changed the visibility of the ` units ` variable from final to non - final and added a setter method for ` units ` in ` DoubleModel `
added a new constant BTC _ ZMW in CurrencyPair . java to provide a new currency pair for BTC and ZMW
added a check to set the number of samples in TestPBRLighting . java to ensure that the correct number of samples is set based on
updated variable names in StepWithSimpleTaskJobParserTests . java for consistency to improve readability and maintainability of the test code
changed variable declaration from non - final to final in CentralAuthenticationServiceImplTests . java to ensure immutability and prevent potential memory leaks
updated string concatenation syntax in ExpressionNode . java to improve readability to enhance code clarity and maintainability
added multiple instances of ` addServiceOutput ( ) ` and ` addServiceOutput ( ) ` to the ` DDLSemanticAnalyzer ` class to
[ jbrules - 2789 ] fix casting of bigdecimal and bigdecimal in expressiontyper .
added " org . eclipse . jdt . " to WebAppContext . java to hide jdt usage by jetty
changed the return value from super . useAuthCache ( ) to false in NegotiateAuthentication . java to simplify the authentication logic by eliminating unnecessary
updated namespace assignment to capitalize segments by using Utils . capitalize ( segments [ 0 ] ) to ensure consistent namespace formatting for better readability
camel - 14284 : improve error message when send to non - available direct consumer
added null check for zooKeeper before setting it to null to prevent potential NullPointerException when accessing the zooKeeper state
corrected a syntax error in the progressBar step message to improve code readability and maintain consistency
replaced direct calls to ` mVibration . vibration . vibration . vibration . vibration . vibration
added a call to updateLastRemoteStreamId ( streamId ) in HTTP2Session . java to ensure that the last remote stream ID is updated
added TEXT _ ANTIALIASING RenderingHints to EditorHeader , EditorToolbar , and Preferences classes to enable text antialiasing for better user experience
[ java ] rename termwindowsize and nextoffsetposition to sentposition for clarity .
remove static import of enums in ctannotationimpl . java
refactor ExoPlayer class to improve code organization to enhance maintainability and readability of the code
replaced the native method ` getRGBPixelImpl ` with a new method ` getRGBPixels ` in ` WRobotPeer . java ` to improve performance by
added a new method ` newPrintStream ` to handle encoding in FileOutputStream and String properties to improve flexibility in printing output streams based on user -
updated the vibrate value from 1 to 25 in TouchableMovementMethod . java to increase the volume for better user experience
updated import statements in AppEngineSqlCloudSession , FlybushDataClearer , TestEnvironment , TestEnvironment , and TestEnvironment classes to
updated constructor parameters in WebSocketClient to remove unnecessary parameters to improve code readability and maintainability
[ java ] fix i18n test failure on window
refactor exception handling by replacing ` handleIllegalArgumentException ` and ` handleLoadConstantException ` with ` handleLoadConstantException ` across multiple classes to
added context . restoreAuthSystemState ( ) method call in XmlWorkflowServiceIT . java to ensure proper handling of authentication state during tests
added a LowercaseComparator implementation to the CoNLLUFeatures class to improve comparison logic and ensure proper handling of null values
refactor JavadocTool to simplify parsing logic and improve clarity to enhance code readability and maintainability by encapsulating parsing logic
alexeibarantsev : add a test to show that the option be not in a multi select .
removed a check for the length of keys in HighestKvno . java to streamline error handling by eliminating unnecessary checks
added error handling for retrieving attributes in HDF5BatchReader to improve robustness by handling potential HDFExceptions
rename pdone to pcollection < t > , pcollection < t > , pcollection < t > , pcollection < t > >
updated the XmlRootElement annotation from " copySnippetRequestEntity " to " createTemplateRequestEntity " in CreateTemplateRequestEntity . java and added implicit parameter
added a new file TestMultiANewArray . java to test multi - ANewArray functionality to ensure proper handling of multi - dimensional array
added a new configuration option for managing a VM per zone in the management server to enable the deployment of a VM per zone on the management server
updated the logic for adding block IDs in SyncBlockChainMsgHandler to handle cases where the head number is equal to the current head number to
added a theme setting for the preview tab content in PreviewTabView to enhance user experience by providing a specific theme for better user experience
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leaks
added a new test method ` testHttpIdleTime ` to ` ConnectorTimeoutTest . java ` to verify the idle time of HTTP connections to ensure
add property for dcoref . dictlist , dcoref . dictpmi , and dcoref . signatures
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` in ` DocCommentParser . java ` and added a new method ` read
updated JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests to use diamond operator to improve code readability and maintainability
changed log level from warn to debug in DistributedQueue . java to reduce log verbosity for improper child nodes
refactor color extraction logic to use a dedicated method for retrieving hotseat palette to improve code readability and maintainability by encapsulating palette
added ` TableEntryByTypeTransformer ` and ` TableCellByTypeTransformer ` methods to ` TypeRegistry ` and updated imports in ` TypeRegistry `
removed assertion for newAvailableShared in AtomicRemainder . java to simplify the code by eliminating unnecessary assertions
regenerate client with updated copyright year
removed the ` projectGenerated ` field and its getter / setter methods from ` ProjectGenerator ` and updated its usage in ` WorkspaceAndProjectGenerator `
updated conditional check for USER _ PROPERTY and AUTH _ HEADER in DriverUtils . java to improve code readability and maintainability
added a new ` Contact ` class and updated routes in ` Routes ` , ` ApplicationController ` , and ` BodyParserEnginePost ` to
guacamole - 243 : update simpleuser to use objectpermissionset instead of permission
updated the RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest release version
fix typo in traitfactory . setmode ( )
updated method names from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` across multiple classes to improve clarity
replaced manual resource closing with IOUtils . closeSafely for perDocConsumers to improve resource management and prevent potential memory leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener for the overflow button in ExpansionViewHelper to enhance user experience by allowing the menu to be displayed
updated error messages from " is null " and " is not null " to " is a reference " across multiple classes to improve clarity of error reporting
ggb - 271 update the line height of help button if it ' s not set .
move protobufferutilitiestest from network to core . util
fix divider position not work on macos
[ java ] add support for crossreferenced entries in aux sub - generator .
use metadatamap instead of map < string , object > to avoid unnecessary cast .
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity and consistency in variable naming
add ability to update a contact contact when a contact be update .
updated import statements from ` org . apache . sshd . server . Command ` to ` org . apache . sshd . server . command .
added a new test method ` testCleanUpAuditLogTablePostParametersByPosition ` to ` AuditLogTest ` to ensure that the ` cleanUp
changed the return type of the ` inject ` method from ` Class < T > ` to ` Object < T > ` in ` ComponentContext .
added regex pattern matching for ` commentLine ` and ` endLineComment ` in ` ACLFileParser ` to ensure comment lines start with " #
updated the ` isReadable ` method to include ` FileSystemPlugin ` and ` DynamicDrillTable ` parameters in ` MapRDBFormatMatcher `
added an ` ancestorDimensionValues ` map and modified the handling of ancestor dimension names in ` StarTreeImpl ` and ` TestStarTreeNodeImpl `
added user unlock check before dumping PluginManagerWrapper in TouchInteractionService , BaseQuickstepLauncher , RecentsAnimationDeviceState , and Launcher
changed the condition from ` widthStr ` to ` positionStr ` in ` Photo . java ` to correct the spelling of ' positionStr '
refactored conditional statements in PKIXValidator . java for improved readability to enhance code readability and maintainability
[ hotfix ] [ test ] add archunit test for test code
updated package names from ` integratedtest . alibaba . dubbo ` to ` integrated . test . alibaba . dubbo ` across multiple files to reflect a new
do n ' t skip project network if we do n ' t have the skipprojectnetworks
replaced ` remove ` method with ` get ` for type field retrieval in ` RuntimeTypeAdapterFactoryFunctionalTest . java ` to improve code clarity
added property storeUndoInfoForProperties property and its getter / setter methods to the App class to manage property store behavior for properties
replaced direct access to ` gradProp ` with a privileged action using ` AccessController ` to enhance security by ensuring the property is retrieved from a privileged
updated StreamCloseTest to use Awaitility for asynchronous stream handling to improve test reliability by using a more efficient await implementation
removed the doAfterFlush method from DocFieldProcessor , DocFieldProcessor , DocFieldProcessor , DocFieldProcessorPerThread , and TermVectors
added handling for non - deprecated configuration errors in ConfigurationMetadataGenerator and introduced NestedConfigurationProperty in AbstractJpaProperties to ensure proper handling of non -
updated capacity and mask calculations in BiInt2ObjectMap , Int2ObjectHashMap , and Int2ObjectHashMap classes to ensure immutability and
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and modified file path handling in HiveConf . java
[ java ] catch exception in parallelniosender so that it do n ' t crash .
added a null check for the context variable in SchemeAndroidIDE . java to avoid potential NullPointerExceptions when the context is null
nativeimagegeneratorrunner : refactoring of nativeimagesystemclassloader to use contextclassloader instead of customclassloader
changed the return type of ` modifyGrantedAuthorities ` method from ` void ` to ` List ` in ` SwitchUserProcessingFilter ` and updated the
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and added new test classes for ` RawJaxrsIntegrationTest ` and `
do n ' t try to set query timeout on jdbc4
added data providers for GeneralTestsData , SupplementaryCharacters , and SupplementaryCharacters in XslSubstringTest . java to enhance test
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter . java `
added support for MariaDBDatabase and updated conditional checks in CreateSequenceGenerator to ensure proper handling of MariaDB database types and improve code clarity
corrected syntax errors in multiple Java files for consistency to improve code readability and maintainability
updated QueriesSentinelTest , QueryExceptionTest , DefaultTimeQueriesSentinelTest , DefaultReduceServiceTest , and QueryExecutorTest to use TableData
added support for " jsse . enableMFLNExtension " in SSLExtension . java to ensure compatibility with both MFLN and MFL
changed the type of the iterator from ObjectIterator < T > to ObjectHashSetIterator and updated related constructors to improve code clarity and maintainability by
updated character length calculations in Compose and TweetFragment to account for shortened URLs to ensure accurate length calculations for shortened URLs
[ kairosdb . datastore . cassandra . datapoint _ ttl ] add datapoint _ ttl to datastore . datastore . cassandra . datapoint
updated the ` checkForAndKillXcodeIfRunning ` method to accept a ` enablePrompt ` parameter and improved prompt handling to enhance user experience by
added a method ` getTerrainAtCell ` in ` TerrainGrid ` to retrieve terrains at a specified coordinate to enable retrieval of terrains
added default value handling in Pretty . java and created a new file T6665791 . java with a Java compiler test to ensure default value is
added error handling for missing quest encryption keys in ResourceLoader to improve error reporting for missing quest encryption keys
updated the return statement to check if the push is not enabled before proceeding with the request to ensure that the message is only processed when the push
refactor PointValue class to improve code readability to enhance maintainability and facilitate future updates
removed the sign method for local witnesses in BlockUtil . java to streamline the code by eliminating unnecessary sign operations
updated the return statement in FileSystemView . java and added security checks in Win32ShellFolder2 . java and Win32ShellFolder2 . java
fix the splitted table to respect the max height of splitted row .
added a new ` undoNotesList ` array and updated related methods in ` ListFragment . java ` to store and insert notes into the list
update uploadbackupdata to use new feedbackquestionspersisted , feedbackquestionslogic , and feedbackcommentid instead of feedbackquestionid
added a null check for ` data ` in ` bug8024061 . java ` to ensure that ` getTransferData ` returns non -
no effective change - remove useless pstmtdelegate interface
replaced ` Padding ` with ` AppWidgetHostView ` and updated padding retrieval logic to use ` AppWidgetHostView ` instead of `
refactor the initialization of MethodHandles for EXPORT _ ARGUMENT , EXPORT _ SCRIPT _ OBJECT , IMPORT _ SCRIPT _ OBJECT
refactor ClassGraph and ScanResult classes to improve code readability and maintainability
rename ` latch ` to ` goAwayLatch ` for clarity to improve code readability and maintainability by using a more descriptive variable
updated assertions in IterableSubjectTest to use hasMessageThat ( ) instead of getMessage ( ) for consistency to improve readability and maintainability of the
replaced instances of ` ThreadLocal . currentBook . get ( ) ` with ` null ` for the ` currentBook ` variable in multiple Java files to
added support methods to ContactSecurityVoter to check if a given class is a valid Object type before voting to ensure that the vote method does not
removed unused imports for GachaHandler and Tools in DataLoader . java to streamline code by eliminating unnecessary dependencies
added a ` rowsAffected ` parameter to the ` postUpdateLog ` method in ` AbstractUpdateCommandStep ` and ` UpdateCountCommandStep `
ggb - 271 fix for scaler to be more consistent .
set default values for foregroundFPS and backgroundFPS in JglfwApplicationConfiguration . java to ensure proper initialization of foregroundFPS and background
added ObjectReleaseTracker assertions to HdfsTransactionLog and TransactionLog classes to ensure proper resource management and prevent potential memory leaks
replaced DefaultWebSocketFrame with ChannelFutureListener in DefaultHttpServer . java to improve resource management and ensure proper closure of WebSocket frames
updated StateMachineErrorTests to use different instances of TestApplicationEventListener1 and TestApplicationEventListener2 , and added interceptor support in DocsConfigurationSample
refactor SettingsActivity to use a separate method for setting the list background to improve code readability and maintainability by encapsulating the background
updated import statements and added null check for the line variable in RMEThingHandler . java to ensure proper handling of null values and prevent potential NullPointer
added a new method ` accumulate ` to the ` JavaUserDefinedAggFunctions ` class to calculate the sum and count based on a given string to
[ java ] fix checkstyle violation in replicationsink
replaced ` Set ` with ` Map ` for ` VALID _ CACHE _ CACHE ` in ` RegExpFactory . java ` to improve performance and
added a reset method to the GameThread class to reset the game thread to ensure proper resource management and prevent potential memory leaks
added a login method to DigestAuthenticator to check if the realm is not equal to the username to ensure that the username is not equal to the realm
refactor parameter merging logic in SavedRequestAwareWrapper to improve clarity and efficiency to enhance code readability and maintainability by reducing duplication
updated info messages in BasicConfigurator , LoggerContext , and ConfigurationAction to improve clarity and consistency in error reporting to enhance user experience by providing clearer
[ hotfix ] [ runtime ] use wakeup ( ) instead of countdown ( ) in commitlog and haservice
added a check for Android SDK version in PhotoViewerActivity and introduced a utility method in UserAutoCompleteHelper to ensure compatibility with devices running Android O and
updated schema info level from minimum ( ) to basic ( ) in SchemaCrawlerOptions to ensure consistency in schema info level configuration
replaced ` XMLStreamWriter ` with ` BufferedOutputStream ` for output stream handling in ` SaveTask . java ` and ` VizModel . java ` to
replaced the use of ` bytesToString ` with ` utf8 ` in ` TestPayloads . java ` and refactored the bytesToString method
fix mc - 103516 - fix mc - 103516 ( # 103516 )
added " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter " to the list to
[ drools - 4071 ] fix multi accumulate bug in protobufinputmarshaller
refactor case handling in NowSearchTerm and SearchTermBuilder to improve readability and maintainability of the code
pdfbox - 4071 : make class public so that it do n ' t need to be public
added SpringExpressionLanguageValueResolver to RemoteEndpointServiceAccessStrategy and updated URL handling in WSFederationRelyingPartyAttributeWriter to improve flexibility
added a new method ` newResponseBuilder ` to the ` SearchHandler ` class for creating a ResponseBuilder to improve code readability and maintainability
added a notification notification for the command start in AsyncBackgroundTaskManagerTest to ensure the command starts before proceeding
refactor ` computePreviewDrawingParams ` method to accept a ` mReferenceDrawable ` parameter and update its usage in ` PreviewItemManager `
refactor tokenizer and filter handling in LukeRequestHandler to use CharFilterFactory instead of TokenFilterFactory to improve code clarity and maintainability by using a
replaced IllegalArgumentException checks with ParamChecks . nullNotPermitted for plot , generator , and hotspot parameters to improve code readability and maintainability by
added verbosity handling to the createSubContext method in JavacStep . java and ExecutionContext . java to enhance context execution flexibility based on silent mode
added a null check and schema assignment for " oracle " in DbSqlSession . java to ensure correct handling of database schemas in the database
updated the context description to include the class name of the context to improve debugging by providing clearer context information for better debugging
added a new file TestShrinkToOneRegion . java with a main method to test the garbage collection behavior of the System . gc ( ) method
updated SandboxTestRunner to use Splitter for splitting custom packages to improve readability and maintainability of the code
replaced ` utf8ToString ( ) ` with ` context ` in ` AnalyzingInfixSuggester . java ` and added a new test
updated the handling of local attachments in PushsaferMessageBuilder . java to use a localAttachment variable to improve code readability and maintainability by
added a new command ` showLabelStats ` method to ` ModelExplorer ` , ` SequenceModelExplorer ` , and ` StripProvenance `
pdfbox - 4071 : remove unnecessary null check , a suggest by valerybokov
changed access modifier of FORMATTER from final static to non - final in multiple test classes to enhance encapsulation and improve code readability
updated the ` evaluate ` method to accept a ` n ` parameter and modified the ` evaluate ` method to accept an additional ` Integer ` parameter to
[ graaljsscriptengine ] use configparser . valueasorelse instead of injectionenabled .
changed class declarations from package - private to public in Test1 . java and Test2 . java to allow access to the Test1 and Test2
replaced usage of ` permission . no _ permission _ event ` with ` plot . no _ enter ` in ` PlayerEventListener . java ` to improve
updated the ` getAdditional ` method to accept a ` Session ` parameter in ` ConditionAndOr ` and ` ConditionInConstantSet ` classes to
replaced instances of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` in ` Base
added random number generation for box , circle , and contact objects in Box2DCharacterControllerTest . java to enhance test coverage for Box2D
added tests for FLIGHT _ RECORDER _ OPTIONS and FLIGHT _ RECORDER _ OPTIONS in TestBadOptionValues . java
removed unnecessary assertions in ObjectAlignment . java and Options . java to streamline code and improve readability
added a method to extract the target package from a manifest and updated related classes to enhance the functionality of extracting the target package from the manifest
refactor DocHelper class to improve code structure to enhance maintainability and readability of the code
changed the type of ` acceptableThrowawayItems ` from ` Arrays . asList ( new ArrayList < > ( ) ) ` to ` ArrayList < >
replaced generic type parameters in invokeExact calls with explicit casting in Test6987555 . java to improve type safety and avoid potential ClassCastExceptions
reformatted code for consistency and readability to improve code readability and maintainability
refactor Inflection class to improve code readability to enhance maintainability and facilitate future updates
added methods to retrieve and set the locale in EvaluationContext to enhance locale management capabilities in the application
removed the import of ` Plugin ` from ` SummaryPrinter . java ` to streamline the code by eliminating unnecessary dependencies
added a break statement to the switch statement in DrawerActivity . java to improve control flow and prevent infinite loops
updated import statements in MongoQueryCreator . java to use a wildcard import and modified the query object retrieval method to improve code readability and maintainability
add system property ` ` xwork . loggerfactory ' ' to set the loggerfactory .
[ java ] rename adminaddpeerfailswhenp2pdisabled to adminaddpeerfailswhenp2pdisabledontargetnode
change bean name from " livenesshealthindicator " and " readinessstatehealthindicator " to " livenesshealthindicator " and " readinessstatehealth
[ hotfix ] [ runtime ] use concurrentmap for localpstoreprovider . getpstore ( )
changed the access modifier of the deleteFiles method from package - private to private to enforce encapsulation and improve code readability
replaced instances of ` Provider < T > ` with ` ServiceProvider < T > ` in ` ServiceLoaderSpliterator ` and ` TypeUtil ` classes to
do n ' t throw javainteropreflect . findfield , javainteropreflect . setfield , javaobjectmessageresolution . setfield ,
added functionality to check if the toolchain is created and other toolchains are present in multiple classes to ensure that the daemon is only invalidated
fix race condition in polyglotengineimpl . removecontext ( ) .
updated failure checks from ` indexOf ` to ` contains ` in ` AbstractCheckDescriptor . java ` to use ` contains ` instead of ` indexOf `
updated references from ` ImmutableList . of ( ) ` to ` CxxFlags . getFlags ( ) ` in ` PrebuiltCxxLibraryDescription
refactor ` onConfigurationChangedInternal ` method to ` updateRecentsRotation ` in ` AbsSwipeUpHandler ` and ` RecentsView `
updated generic type checks from ` instanceof ` to ` instanceof < ? > ` in multiple listener classes to enhance type safety and avoid potential ClassCastExceptions
added block header hash to the object array in AbstractBlockChain . java to ensure the correct hash is used for block processing
( chore ) camel - defaultmessagestore : use getstorepathphysic ( ) instead of getstorepathcommitlog ( )
[ hotfix ] [ runtime ] remove unnecessary try - with - resources
added statistics tracking for message transfer , times total found , and entries in CompactionLog . java to ensure accurate tracking of message counts during compaction
add miss @ deprecate annotation to java . sql . query and java . sql . query package
added a method to check for the presence of the system UI object in AbstractLauncherUiTest . java to ensure that the keyguard status view is
changed instance variables to final in SessionRegistryImpl . java to enhance immutability and ensure immutability of variables
added check for empty cookie jar in InMemoryCookieStore and updated test cases in NullUriCookieTest to ensure proper handling of empty cookie jars and
added debug log to BonsaiValue and improved null safety in BonsaiWorldStateArchive and BonsaiWorldStateArchive to enhance debugging
changed the parameter type of getText methods from String to CharSequence in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository classes to
unignoring a test that do n ' t work on darionet
added error handling for connection return in SocketConnector . java to ensure proper resource management and avoid potential resource leaks
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` across multiple files to improve clarity and consistency in
added synchronized block around heartbeat handling in DbTxnManager . java to ensure thread safety during heartbeat operations
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and refactored cancellation handling in ` CachingBuildEngine
added a new method ` updateFirstLineShowing ( ) ` to ` TextArea . java ` to fix drag - selecting text out of bounds
added temporary directory configurations for TestInformationSchemaWithPrivilege in TestInformationSchemaWithPrivilege . java to ensure compatibility with hadoop ' s temporary directory structure
refactor graphics configuration retrieval logic to improve null checks to enhance code readability and prevent potential NullPointerExceptions
tika - 132 : tikaresourcetest . testominlegacymode ( ) should use serverstatus ( true ) instead of serverstatus
camel - 14297 : camel - core - camel - core - remove the doprocess method from camel - exchange
refactor argument handling in PrintTagList to use a dynamic parser file and improve error reporting to enhance flexibility in parser usage and provide clearer error
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test in `
[ hotfix ] [ test ] fix flaky test in JournalCorruptionEofIndexRecoveryTest . java
[ java ] use connectclient instead of startclient in startfromtruncatedrecordinglogtest
updated the calculation of the ` arc ` variable in ` LineBorder . java ` and modified the ` outer ` initialization in ` Test42521
added a check for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter to prevent potential NullPointerExceptions when galleryImages is null or empty
removed duplicate calls to generateDeploymentId ( ) and resetDeploymentId ( ) in StandardChangeLogHistoryService and CreateDatabaseChangeLogTableGenerator to
pdfbox - 4071 : use form instead of fdf in example
removed the ` moreColumnOk ` parameter from the ` canUseIndex ` and ` canUseIndex ` methods to simplify the code by eliminating unnecessary
added support for provisional engines in QuickfixjComponent and updated corresponding tests to enhance engine management and improve test coverage for QuickfixjComponent
added displayZoomControls property and modified setMixedContentMode method to return its value to enhance zoom control functionality in the application
add corporea and slab block to the corporea spark , and fix the corporea spark not be able to
refactor ConnectionFactory class to improve code readability to enhance maintainability and facilitate future updates
added ` EnableDisableMenuItems ( ) ` method to ` GpsMainActivity ` to enable menu item edit functionality based on user settings
updated the message string from " headline _ server _ search " to " filter _ list _ empty _ favorites _ filter _ list _ empty _
hhh - 16464 - fix unit test failure on window
updated AutoResizeMode and autoCreateColumnsFromModel settings in MotorMountConfigurationPanel and modified the constructor parameter in MotorConfigurationPanel to ensure proper layout
updated LINE _ SEPARATOR initialization to use System . getProperty ( " line . separator " ) instead of System . lineSeparator ( ) to improve
added getter and setter methods for creator and subject properties in POIXMLProperties . java and updated test cases in TestPOIXMLProperties . java
removed unnecessary whitespace in HandlerWrapper . java to improve code readability and maintainability
added a condition to check if cncFile does not exist before proceeding to ensure that the file is not empty before proceeding
replaced instances of ` NonMarkedFoo ` and ` MarkedFoo ` with ` FooCommand ` and ` FooCommand ` in ` Unsatisfied
added support for handling jmod files in ClassFileSourceImpl to ensure proper class path handling for Java home files
updated the ` TreeBackedElement ` and ` TreeBackedPackageElement ` classes to use ` @ Nullable ` for ` canonicalizer ` and
refactor token request handling in Saml2TokenGranterTest and UserTokenGranterTest to use PublicTokenRequest instances to improve code clarity
updated method call from arrayLength to valueRangeObject in AbstractFromPropertyValueRangeDescriptor to ensure correct retrieval of the value range object
added sync method to ZKAssign and ZooKeeperWatcher classes to ensure proper synchronization of ZooKeeper objects
added check for EGL _ NO _ CONTEXT in GlUtil . java to ensure proper handling of no current contexts
do n ' t remove activation from ruleflowgroup if it be active
added a return statement in HystrixDashboardConfiguration . java to ensure proper execution flow
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added assertions in IoTDBPipeIT . java to improve error reporting and
add cleanup method to clientqueuedisruptiontest and fix checkstyle violation
use defaultjavaprettyprinter instead of signatureprinter in ctreferenceimpl
changed the visibility of the validateInstance method from public to protected to allow subclasses to access the validateInstance method from other classes
updated import statements in GeoPoint - related classes to improve code clarity and maintainability
added a new file ` FakeBuildable . java ` that extends ` AbstractBuildable ` and modified ` OnDiskBuildInfoTest . java `
fix a crash when itemstack . isempty ( ) be call
rename variable ` path ` to ` timeseries ` in ` TSParser . java ` and update related references in ` SQLParserTest . java
added a check to return 0 if the velocity is less than EPSILON in TubeCalc . java to ensure that the calculations do not exceed
refactor gcspinotfs to use _ storage . builder ( ) instead of getbucket ( )
removed the call to ` blockCloseVertxByName ` from ` VertxUtils . blockCloseVertxByName ` in ` TestHighwayTransport
added methods to create or replace views and recreate history views in DbTriggerBasedHistoryDdl and PostgresHistoryDdl classes to enhance history management
updated the timeout value for the clustering engine from 2 to 3 in CarrotClusteringEngineTest . java to ensure that the clustering engine
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable tests that need to be rewritten
updated ` ParserCacheCommand ` to use ` ParserStateObjectInputStream ` instead of ` ObjectInputStream ` and added a new ` ParserStateObjectInputStream
added null checks for changeLog and set objectQuotingStrategy in ChangeSet . java and DatabaseChangeLog . java to ensure objectQuot
updated MetainfoParser from parse to fromXmlStream in SliderAppsViewControllerImpl . java to ensure proper parsing of XML streams
deleted the CsrfControllerAdvice . java file to the file is no longer needed for the project
refactored path handling in AntCompiler to use a new quotePathList method to improve code readability and maintainability by encaps
added scrim animation functionality to the Launcher and LauncherAnimUtils classes to enhance user experience by allowing smoother transitions during screen transitions
updated Long parsing logic in TypeInferenceUtils and added new test cases in TypeInferenceUtilsTest to ensure accurate validation of integer values and improve test coverage
chore ( deps ) : update license year for generated file ( # 56 )
added support for UNC path types in WindowsPathParser and PathOps classes to ensure correct handling of absolute and relative paths in path parsing
replaced InetSocketAddress instantiation with MulticastSocket instantiation in Promiscuous . java to improve code readability and maintainability
removed redundant calls to writer . close ( ) in TestWildcard . java to ensure proper resource management and prevent potential memory leaks
modified return statement to clone nBits to ensure that nBits is returned as a clone of nBits to avoid potential memory leaks
changed the access modifier of the deriveCollectorName method from private to protected in ProfilerCollector . java and added unit tests in TestProfilerCollector .
refactor MappingMongoConverter to use a dedicated method for checking type hints to improve code readability and maintainability by encapsulating type hint
added performance measurement to the createProxyFactory method in ProxyMaker . java to improve performance tracking for proxy factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings for better code clarity
updated exception handling in TCPConnection to include the original exception as a cause to improve error reporting by providing more context about connection issues
updated the ` reinflateWidgetsIfNecessary ( ) ` method to use ` workspace . getWorkspace ( ) ` instead of ` LauncherModel
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion behavior in the File Dialog window to ensure that the file dialog
do n ' t call display . update ( false ) if renderable . get ( ) return false
add godmode support to instructorstudentlistpageuitest . testshowphoto ( )
added support for onlyrun and onlyrun environment variables in TestIgnorance . java to ensure tests only run , only run , and method
removed the pointer parameter from the fling method in ScrollPane . java to simplify the method signature by removing the pointer parameter
added null check for pageable in QueryDslJpaRepository to ensure proper handling of null pageable cases
added a method ` computeMemorySize ` to the ` MemoryManager ` class and corresponding tests in ` MemoryManagerTest ` to ensure that the memory
[ java ] increase test timeout for jmsconsumerconsumertest and publishjmstest
refactor SnowballAnalyzer class to improve code structure to enhance maintainability and readability of the code
refactor the initialization of the previousIndex variable in StreamingAggTemplate . java to simplify the code and improve readability
throw GraalError if plugin need to be null
added a default method ` stream ( TableIdentifier < ENTITY > tableId ) ` to the ` StreamSupplierComponent ` class to provide a default
updated logging messages in MediaMonitor . java to include a delay and added a retry mechanism for file renaming operations to improve logging clarity and ensure
updated the ` newInstance ` method in ` InjectorProxy ` , ` ReflectionUtil ` , ` StandardInjectorProxy ` , and ` StandardInjectorProxy
[ hotfix ] [ stream ] remove unnecessary call to out . close ( )
added unit tests for showing and deparsing SQL statements in multiple test files to ensure proper handling of unsupported statements in SQL parsing
change return value from null to ImmutableList . of ( ) in AppleTest . java to ensure that the method returns an empty list instead of null
update namedsettest to use quality distribution instead of deliberate error
updated WebSocket connection handling to include a new connection state and refactored connection state management to improve clarity and maintainability of connection state management
use removeattribute instead of setattribute ( ) in abstractprocessingfilter
hbase - 26464 testregionreplicareplicationendpoint . testregionreplicareplicationendpoint . testregionreplicareplicationendpoint . testregionreplica
added PMS configuration settings in FormatRecognitionTest . java to disable PMS configuration for improved performance
cloudstack - 10265 : add an option to create va data disk template if the template format be not oval .
replaced CasCoreServicesConfiguration with JUnit4 and updated imports in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to simplify test setup and
added multiple @ Override annotations in various authentication service classes to ensure proper method overriding and improve code clarity
updated SQL statements in AppendOnlySchemaIT . java for consistency and clarity to improve readability and maintainability of the code
added a validation check for deleted documents in SegmentReader to ensure that the document count does not exceed the specified document count
add a method to log a debug message for the jabber jabber jabber jabber jabber jabber to
updated FilamentFactory . java to include a new version indicating the length of the staves w / no starting barline to improve clarity and
changed the default value of handleFileUploads from true to false in VertxPlatformHttpServerConfiguration . java and added a method call in Ver
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to ` CsrfFilterTests ` to
remove unused static field from hotspotobjectconstantimpl . java
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in term naming conventions
added a watermark to the FileSystems . match method call in FileIO . java to ensure that the file system correctly matches the element ' s
[ hotfix ] [ table - planner - blink ] fix npe in sqmctestatement
added import statement for ResultSetMetaData in QueryCompilerTest . java to enable SQL metadata handling in the test
updated the library command to include the root path from the project filesystem to ensure the correct library path is displayed in the project
updated slider model dimensions from 180 to Math . PI in RailButtonConfig . java to ensure compatibility with different angle values in the application
updated drawEncloser method to use y - 9 instead of y - 8 in OverlayRenderer and modified saveIO data handling in Saves
added expressionLanguageSupported property to KerberosProperties . java to enable expression language support in the configuration
remove setremoteplayershelditemmountpointscale ( ) method that be no longer need
updated the ` setupViews ` method to include a ` ScrimView ` parameter across multiple classes to enhance scrim rendering capabilities for better user experience
add config option to disable periodic materialization for state backend .
ticket # 307 : add miss ' value ' parameter to the boolean checkbox parameter from the source xml through to the webapp .
add a test for the chunking servlet to verify that the servlet do n ' t have a head .
added a ` isBumped ` boolean field and modified the ` parseDetails ` method to handle the " Bumped : YES " status to
added " application / x - www - form - urlencoded " header to the request body in SwitchToPostInterceptor and SearchRequestUnitTest to ensure
refactor EmbeddedClientConnector to improve code structure to enhance maintainability and readability of the code
replaced SQLFeatureNotSupportedException with logging warning for setting fetch size to improve error handling by providing a more informative warning message
added initialization of AndroidNet instances in AndroidDaydream . java to ensure proper initialization of AndroidNet instances
[ llrealtime ] fix typo in log message .
removed the ' false ' parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify the method signature
hbase - 16413 remove unused prefixtreecodec . prefixtreecodec . prefixtreecodec class
added a boolean flag ` inflationFailed ` to ` DesignerActivity ` and modified the ` root ` variable declaration in ` XMLLayoutInflater ` to
refactor PushbackInputStream class for improved readability to enhance performance and maintainability of the code
make the loweringphase abstract so that it can be use by the schedule .
updated the resource string from download _ folder _ failed _ content to sync _ folder _ failed _ content in ErrorMessageAdapter . java to improve clarity
[ java ] fix makefiles . makefile ( ) to work with new line character .
updated the method for retrieving deleted documents in ReadTask . java to use MultiFields . getDeletedDocs instead of reader . getDeletedDocs to improve
updated refresh flags and bound refresh logic in SimpleBatchNode . java to ensure proper refresh behavior during batch processing
use isuninterruptible ( ) instead of guaranteesafepoint ( ) in sharedmethod
added framebuffer size callback and updated framebuffer size handling in LwjglWindow . java to improve window size management and ensure proper resource management
updated translation calculations in LauncherAppTransitionManagerImpl . java to use mRecentsTransX and mRecentsOffscreen instead of v .
replaced instances of ` NodeLiteralNode ` with ` NullLiteralNode ` in the ` LiteralNode ` class to improve type safety and clarity in handling
added ` setLength ` methods to ` CompoundFileWriter ` , ` FSDirectory ` , ` IndexOutput ` , and ` IndexOutput ` classes to enable
updated AndroidNdkScriptGenerator , AntScriptGenerator , LwjglDebugStarter , and LwjglDebugStarter
camel - aws2 - s3 : replace copysource ( ) with sourcebucket ( ) in camel - aws2 - s3 producer
added permission check for permissive permissions in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin to improve permission handling and ensure proper
updated ZookeeperClientServerRegisterRepository to handle null or empty data cases and improved URI registration logic to enhance robustness and prevent potential NullPointerExceptions
replaced instances of ` makeDeepStubMock ` with ` deepStub ` and updated related methods in ` ReturnsDeepStubs . java ` to improve
added a condition to check if the contract ' s call value is empty before returning it to avoid potential NullPointerExceptions when the contract is empty
updated debug log message format in BibEntry . java to use placeholder syntax to improve readability and maintainability of log messages
modified the ` mapPBEAlgorithmToOID ` method to return an ` OID ` object instead of null and updated the ALGO string to
updated variable names from ` length ` to ` inputLength ` in ` TIFFReader . java ` and ` TIFFReader . java ` to
added validation to ensure that invalid job parameters are provided in CommandLineJobRunner to ensure proper error handling for invalid job parameters
removed unnecessary newline character from message content assertions in SmtpTests and MailTests to simplify the assertion for better readability and maintainability
updated case statements in ExtendedConnectionDataSourceProxy . java to use lambda expressions to improve readability and maintainability of the code
replaced synchronized access to lastSequenceId with AtomicLongFieldUpdater for thread safety to improve thread safety and reduce contention in sequence retrieval
added a new file ` Test . java ` containing a static method ` sum ( ) ` that calculates the value of ` x ` and `
updated ` @ Config ( minSdk = Q ) ` and ` @ Config ( maxSdk = Q ) ` annotations in ` ShadowWifiManagerTest
added a new file ` Solution . java ` that implements a permutation algorithm using an integer array to demonstrate the use of an integer array based on user
use concurrenthashmap instead of map to avoid concurrentmodificationexception
refactor taskbar handling logic in TaskbarManager . java to improve clarity and maintainability to enhance code readability and maintainability by reducing redundancy
refactor SyncFutureCache class for improved performance to enhance performance and maintainability of the code
updated the default DUBBO protocol version from " 2.1 . 1 " to " 2.1 . 2 " and modified the LOWEST _ VERSION _
[ java ] uselessstringvalueof : do n ' t use string literals .
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the behavior of the
make targetmaxtypeshardsize configurable and add targetmaxtypeshardsize
added new versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to TestBackwardsCompatibility . java to
refactor CompilationTask class to improve code structure to enhance maintainability and readability of the code
updated assertion message in TestSemanticAnalysis . java and modified database description handling in DDLTask . java to improve clarity and maintainability of database description
added a command to clear the database change log table for the Liquibase catalog and schema to ensure the database change log table reflects the correct Li
added version handling to RestClient and CallPath classes and updated comparison logic in RestClient and CallPath classes to improve compatibility with versioning and ensure
updated exception handling and synchronization in PhoenixDriver . java to ensure proper resource management and prevent potential memory leaks
ggb - 271 fix typo in touchapp and touchmodel
added unit tests to ` ConflictsResolveActivityIT ` and modified ` FolderPickerActivityIT ` and ` FolderPickerActivityIT ` classes to
graalvm : fix read optimization when use devmode .
added a check to return a string if the copy length is less than 2 and implemented a test for removing leading and ending quotes in StringHelperTest
updated JpaQueryCreator to handle NOT _ CONTAINING instead of NOT _ LIKE and added a new method in UserRepository to
do n ' t use storedencryptedencryptedencryptedencryptedaccount ( ) if authentication do n ' t exist
added a call to dispatch ( new P25Message ( mMessage . copy ( ) , mAliasList , mAliasList ) in P25
added null checks before calling checkClosed ( ) in WebSocketImpl . java to avoid potential NullPointerExceptions when the handler is not initialized
( chore ) camel - discovery : use the correct type for the pool task in the discoveryit
updated widget padding calculations in AppWidgetResizeFrame . java and Launcher . java to use internal dimensions instead of resource dimensions to improve layout consistency and
added ` hideAllApps ( ) ` method to ` TaskbarUIController ` , ` TaskbarAllAppsController ` , and `
removed the ` synchronized ` modifier from the ` launch ` method and replaced it with a ` join ( ) ` method to simplify the method ' s
updated the calculation of ` p ` in ` java . awt . Point ` to account for the correct canvas coordinates to ensure correct positioning of the
refactor notification handling in UploadService to use startForeground instead of notificationManager to improve readability and maintainability of notification management
pmd : fixcessivepubliccounttest . teststaticfinal ( ) do n ' t handle static final
hbase - 16234 set hbase . client . retries . number to 3 in testThrifthbaseservicehandler
changed log level from info to debug in TransactionalMessageServiceImpl . java to improve logging granularity and reduce log verbosity
added error handling for FileNotFoundException in ResourceUtils . java and changed logging level from debug to trace in AbstractCipherExecutor . java to improve error handling
added a new ` BittrexTickersResponse ` class and integrated it into ` BittrexMarketDataServiceRaw ` and ` Bittrex
fix entityentry . getenumconstants ( ) to use object [ ] instead of object [ ]
changed method parameters from ` Class < ? > ` to ` Object < ? > ` across multiple classes to improve type safety and clarity in session registration
updated character arrays in FileUtils . java to include additional character sequences to ensure compatibility with various character formats in the file system
updated ` ResourceService ` , ` ResourceHandler ` , ` DefaultServlet ` , and ` DefaultServlet ` classes to use ` ResourceHttpContent `
added a call to clearIndex ( ) in TestFiltering . java to ensure that the index is cleared before proceeding
replaced ` ObjectParameterStrategy . class ` with ` PointerParameterStrategy . class ` in ` X86MethodGenerator . java ` to align the method
updated the database type check from PostgresDatabase to CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with Cockroach
removed the ' isEnum ' condition from the name comparison in ObjectStreamClass . java to simplify the code by eliminating unnecessary checks
replaced UnsatisfiedLinkError with SymbolNotFoundError in Library . java and created a new SymbolNotFoundError . java file to improve error handling by using a more
added handling for non - pseudo - fields in BinaryResponseWriter . java to ensure correct document creation based on return fields
added handling for PING , PONG , and PONG cases in WebSocketImplBase and implemented a test for pauseping functionality in WebSocketTest to
updated NON _ IDENT _ ESCAPES string from " $ " to " $ " in RegExpScanner . java to ensure proper handling of
refactor DnsResolverProvider to utilize authoritative DNS cache and update DNS resolution logic to enhance cache management and improve test coverage for rotational server
added a conditional annotation to the TraceMessagingAutoConfiguration class to ensure that the MessagingTracing class is only used when necessary
danielwagnerhall : fix sqlquery . quoteidentifier ( ) to work with db2
updated import statements in IDELanguageClientImpl , EditorTextActionMode , EditorTextActionWindow , IDELanguageClientImpl , EditorTextAction
added handling for the ' / ' character in XMLLightweightParser to set the status to VERIFY _ CLOSE _ TAG to ensure proper handling of
removed the setVisibility ( GONE ) method from TouchCharInput . java to simplify the code and improve readability
added a null check for the current user ID before comparing IDs to prevent potential NullPointerExceptions when accessing the current user
refactor JSObjectLinker to conditionally set slot and member settings based on the index to improve code readability and maintainability by avoiding unnecessary
refactor ` DefaultUniqueTicketIdGenerator ` and ` HostNameBasedUniqueTicketIdGenerator ` to initialize ` randomStringGenerator ` , ` suffix
added a @ Deprecated annotation to SecurityConfig . java to indicate that the class should no longer be used in future development
added @ Deprecated annotation to multiple classes to indicate that these classes are outdated and should not be used in future versions
deleted the JoglDebugAdaptor . java file and removed the plumbJoglDebug method from GuiceStartup . java to simplify the code
added ` toString ` methods to ` ExtraFieldPropagation ` and corresponding tests in ` AWSPropagationTest ` , ` AWSPropagationTest ` , and `
added PendingIntent . FLAG _ UPDATE _ CURRENT flag to notifications in FileDownloader and FileUploader classes to ensure content is updated when the notification is
changed the visibility of the ` nextOrd ` method from private to private and added a ` set ` method to improve encapsulation and
refactor DateTimeFormatter class to improve code readability to enhance maintainability and facilitate future updates
removed class loading for " DnD . Autoscroll . initialDelay " and " Shell . shellFolderManager2 " from desktopProperties to simplify
added null and empty principal checks for administrator credentials in KerberosOperationHandler to ensure proper handling of null and empty principal values and provide clearer error
added a maximum width scale for tablets and two panels in BaseWidgetSheet . java to ensure consistent width calculations for different device profiles
fix a crash when draw a sketch with no window color
refactor Hashing class for improved performance to enhance performance and maintainability of hashing operations
updated the ` accept ` method to use ` Files . getBaseName ( ) ` instead of ` String ` to improve clarity and correctness in
updated the ` addToListIfNeeded ` method to include an ` contentDescriptionInt ` parameter and modified the ` addToListIfNeeded ` method to include a
removed unnecessary null check for type in J . java to streamline code by eliminating unnecessary null checks
updated ACTIVITY _ START _ DELAY from 500 to 800 in Launcher . java to increase the activity start delay for better user experience
added a constant for the WEBAPP _ HOME in SolrJettyTestBase and updated its path in JettyWebappTest to use
updated the diameter assignment logic in ThrustCurveMotorSelectionPanel . java to reset selectedMotorSet to avoid potential null pointer exceptions and ensure selection
added import for BufferUtil and invoked clearToFill method in ByteBufferPool . java to ensure proper resource management and prevent potential memory leaks
fix ( notification ) : fix wrong originator id when create notification rule
updated authorization and group attributes from " authorization " to " authentication . ldap . groupBase " and " authentication . ldap . groupObjectClass " to
added deleteExchange and queueDelete methods for " x " and " q " in DurableOnTransient . java to ensure proper resource management and prevent
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest . testbulkslotallocationfulfilledwithnewslots
refactor connection handling in PingService and ServerInfoService to use addListener for better error handling to improve reliability and error reporting for connection failures
refactor CompositeHandlerAdapter to improve code organization to enhance maintainability and readability of the code
refactor Quartz2Adapter class for improved performance to enhance performance and maintainability of the code
added a try - catch block around the execute method to handle IllegalStateException to improve error handling by catching IllegalStateException
updated Spring Security schema version from 6.6 to 6.6 in multiple files to ensure compatibility with the latest Spring Security features and improvements
updated the ` newNameResolver ` method to use ` Args ` instead of ` Helper helper ` and modified ` DiscoveryClientNameResolver ` to use
added a check for non - empty annotations before setting their position in JavacParser . java and introduced a new earlier method in TestAnnotatedAnon
added " com . sun . naming . internal . " to CheckPackageAccess . java to ensure compatibility with the latest naming conventions
changed the strict variable from false to true in StaxEventItemReader . java to enable strict mode for improved performance
added an ` isExhausted ` parameter to the ` readPartition ` method and updated related logic in ` OfflineSorter . java ` to
refactor ActionResetingPool class for improved performance to enhance performance and maintainability of the code
lightstateconverter : fix npe when colormode be null
refactor CellLayout to use a targetCell array for folder creation and reorder radius calculations to improve code readability and maintainability by encaps
added import for FileDisplayActivity and updated showLoadingDialog ( ) method calls in FileOperationsHelper . java and OCFileListFragment . java
added a null check for ` uigestureFile ` before initializing ` recordsMap ` , ` recordsMap ` , and ` messagesMap `
updated method calls from ` doesNotMatch ` to ` doesNotMatch ` to use ` Locale . getDefault ( ) ` instead of ` toUpperCase (
added listener configuration to the result in XmlSuite . java to ensure proper listener management during execution
added a new property ` loadWithNewGlobal ` to the ` Global ` class and refactored the ` loadWithNewGlobal ` method to
added JSON string conversion methods to StarTreeIndexSpec and updated tests in TableConfigTest to enhance JSON serialization capabilities for StarTreeIndexSpec
updated import statements in HttpSecurity , HeadersConfigurer , OAuth2LoginConfigurer , OAuth2ResourceServerConfigurer , OAuth2LoginConfigurer , OAuth2Logout
updated string replacement methods to use single quotes instead of double quotes in multiple file handles to ensure consistent handling of special characters in file paths
jbrules - 147 : fix npe in inoperator . insert ( ) with null value .
added import for FieldCache and modified purgeFieldCache method in TestDistributedSearch . java to avoid FC insanity issues
added test for boundary message event on subprocess and inside subprocess
add support for static call in the jimple program manager .
[ java ] add support for the message group hash bucket in the queue and policyentry
added slot ID constants and refactored slot handling logic in Secmod . java to improve clarity and maintainability of the code
added alignment parameter to the add method in Layout . java and modified the startRenderering method in GdxRenderer . java to enhance functionality by allowing
ignore unalignedcheckpointitcase due to miss @ ignore annotation
added checks for specific class types in JDK13Services . java to ensure proper handling of specific class types in JDK13Services .
added a condition to check if a keyword is present before adding it to the reference to ensure that keywords are only added if they are already present
camel - 14297 : fix the issue that camel - multicast do n ' t work with camel - jbang .
removed unused methods from SegGraph , SegToken , and WordDictionary classes to streamline code and improve readability
fix telegraf escape in flavorstatsdlinebuilder ( # 644 )
add udp port to member , so that it can be serialize on the same multicast address .
rename rx . operators . multicast to rx . operators . operationmulticast . multicast ( )
increased the send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to allow more time for sending messages to complete
added a try - finally block around the exception handling in VertxTestBase . java to ensure proper resource management and prevent potential memory leaks
added a synchronized destroy method to the SessionFactoryServiceRegistryImpl class to ensure proper resource management and prevent memory leaks
[ java ] use the jwt token from local storage instead of the home page
updated test methods in IValueUtilsTest to use NDArray instead of PtNDManager to improve code readability and maintainability by
added a task stack listener for clearing visible flags in RecentsView and removed it from BaseActivity to improve user experience by ensuring the task stack is
pdfbox - 4071 : do n ' t attempt to find date pattern if it ' s not a date pattern .
camel - 14284 : camel - cxfr : camel - cxfr : camel - cxf - fix camel - cxf to work with
refactor pending animation handling by extracting it into a separate method ` endPendingAnimation ` to improve code readability and maintainability by encap
added logging for play time calculation and improved play time handling in LauncherAnimationRunner . java to enhance debugging capabilities and provide better visibility into play time
added a conditional check for BailoutOnException in C1XCompilation and introduced a flag for BailoutOnException in C1X
updated signup and passwd variables to null in Links . java and modified assertions in IdentityZoneConfigurationBootstrapTests . java to improve code clarity
[ hotfix ] [ runtime ] rename slotprofile . previousexecutiongraphallocations to slotprofile . reservedallocations
updated the type of ` onlyFormat ` from ` SimpleDateFormat ` to ` String ` and refactored the ` getOnlyFormat ` method to
geotiffreader : set GC _ NODATA property to null in geotiffreader and add unit test
fix npe in llvmbasicblocknode and llvmwritenode when sourcesection be null
replaced ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao . java ` and
replaced the ` blockUntilConnected ( ) ` method with a ` CountDownLatch ` for connection state management to ensure proper handling of connection states during tests
added null checks for arrays and arrays in ArrayTypeHandler . java to ensure robust handling of null values and prevent potential NullPointerExceptions
refactored the ` RegexpTunnel ` class to use reflection for retrieving the prefix from a reflection - based field to improve performance and maintainability
updated the application pick method to use the Application class instead of null to ensure the application is properly picked from the overlay configuration
[ drools - 4071 ] fix npe on mutable global in kiesession . insert ( )
added validation checks for asset names , URL , and description in AssetIssueActuator and TransactionUtil classes to ensure asset names , URL , and
fix copypaste . copypaste ( ) to work with textfield .
updated label references in LGWebOSActions , LGWebOSUpnpDiscoveryParticipant , LGWebOSHandler , LGWebOSHandler , and LG
replaced ` setSeedNodes ( ) ` and ` setActiveNodes ( ) ` with ` addAll ( ) ` and ` addAll ( ) ` to
updated assertions in BaseTokenStreamTestCase to include position and termAtt variables , and added failure handling for thread management to improve debugging capabilities and ensure proper
log4j2 - 164 : fix timebasedtriggeringpolicy to use modular interval instead of calendar . add ( )
refactor ` performItemClick ` and ` findItemClick ` methods in ` ShadowAdapterView ` and ` ShadowListView ` classes to improve item
pdfbox - 4071 : use a local variable instead of a local variable to avoid cast exception .
add graphdecoder . aftermethodscope ( ) and graphdecoder . aftermethodscope ( )
refactor HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) for attribute retrieval to improve code readability and maintainability by using a
updated imports and added a test method to change the service name in ZipkinSpanReporterTest . java to ensure that the service name is correctly
added logging statements to JavaInMemoryFileManager , JavacToJarStepFactory , and JavacToJarStepFactory to improve traceability of
rename SeparatedProjectGenerator and related classes to SeparatedProjectsGenerator and SeparatedProjectsGenerator to improve clarity and consistency in
[ java ] increase timeout for clientmultimaplocktest from 4 second to 10 second
updated ConfluentSchemaRegistryDeserializerProvider to include a DEFAULT _ CACHE _ CAPACITY constant and added multiple overloaded methods for cache capacity to enhance
replaced remind checkbox with checkAtStartup checkbox in UpdateInfoDialog . java to improve clarity and functionality by using a more descriptive checkbox name
added methods to check if a node is a strong , weak , value , and maximum size in NodeGenerator . java to enhance functionality by allowing dynamic
added a conditional check for HibernateProxy before throwing TransientPropertyValueException in CascadingActions . java to ensure that the proxy cannot be transient
added constants for ` GETPROTO ` and ` SETPROTOCHECK ` and ` SETPROTOCHECK ` in ` ScriptObject . java ` to improve code
updated the default read mode from " heap " to " mmap " in ReadMode . java and added logging in ImmutableSegmentLoader . java to
added ByteArrayTemplate import and modified return logic in ArrayTemplateBuilder . java to handle byte class types more effectively
added a new ` Hipchat ` class and its getter / setter methods to ` SamlServiceProviderProperties ` , and created a new ` Ca
changed the type of commandRegistryUrls from List to Set and modified the initialization of commandRegistryUrls to use a HashSet to improve performance and
updated warning log message to include the current context and added debug logging for uncovered HTTP methods to improve logging clarity and provide more context for debugging purposes
removed the checkLoggedIn ( ) method from SvnRepositoryConnector . java and initialized loggedIn in in SftpRepositoryConnector . java to ensure
camel - 14284 : camel - activemq - remove transacted transaction manager from configuration and add a test for session transacted
cloudstack - 10284 : fix checkstyle violation in vmwareresource
refactor Timers class to improve code readability to enhance maintainability and facilitate future updates
replaced OVERWRITE _ EXISTING with APPEND _ TO _ ZIP in DefaultDefectReporter . java to ensure proper handling of zip
removed deprecated constructors from the UAX29URLEmailTokenizer class to streamline the code by eliminating unnecessary dependencies
removed the ` Map < Object , Object > ` interface from the ` ScriptObject ` class and updated related assertions in ` ContextTest ` to simplify
refactor EventBusMetrics class to improve code readability to enhance maintainability and facilitate future updates
( chore ) camel - eperson : add a method to get the default eperson locale
remove @ postconstruct annotation and add afterpropertiesset ( ) method to javerstransactionaldecorator
removed null check for pgTypeName before adding it to _ pgNameToSQLType to simplify code by eliminating unnecessary null checks
added multiple server configurations to the ScopedHandlerTest class to ensure proper initialization of the server instance
do n ' t retry wait - out call when wait - notify phase be disable .
updated condition to check for empty username and password in RestLoginProcessingFilter . java to ensure proper validation of username and password in the login request
updated permission check from ` Objects . equals ` to ` String . equals ( " * " ) ` in ` CommandMap . java ` to
rename ` encoding ` to ` sourceCharset ` in ` AbstractCompiler . java ` and update related methods in ` ICompiler . java ` to improve
changed the data type of ` postLogin ` from ` byte [ ] ` to ` String ` in ` HostBean ` and ` TerminalBridge `
refactor simulation handling in GeneralOptimizationDialog to use generic components and FlightConfiguration instead of document copying to improve code readability and maintainability by reducing
added contextreloadstrategy and contextreloadstrategy to camel - main - configuration to enable context reloading .
updated logger level and logger configurations in CommonTestUtils . java to INFO , SYSTEM _ ERR , and SYSTEM _ ERR to improve logging
refactor PrologSizeSanityCheck class for improved clarity to enhance maintainability and readability of the code
refactor NearbyListFragment to improve code readability to enhance maintainability and facilitate future updates
added a condition to check if ` nonCloseable . markSupported ( ) ` is true before invoking the reset method in ` RequestBody . java
updated condition checks in EmbeddedNeo4jServer , DefaultBeanContext , and TypeArgumentQualifier classes to ensure proper handling of embedded settings and improve
fix a crash when load a player from a prefab . thanks to john heitmann for the patch .
updated the ` RandomLoadBalancer ` class to include a ` halfLengthTotalWeight ` parameter and modified the ` random ` method to include ` totalWeight
updated GsonParser and MetricsResourceTest to use a more descriptive variable name and improved error handling to enhance code readability and maintainability by
updated parameters for " gcmsort " , " gcmdir " , " desc " , and " gcmdir " in ApacheHttpClientMedia
( chore ) camel - core - pulsetransactioncoordinator : rename checktransactionsynchstatus ( ) to pulsetransactioncoordinator (
[ iotdb - 5225 ] pipetaskcoordinator : fix race condition in pipetaskcoordinator
modified the DependencyJar creation logic to conditionally use preinstrumented jars based on the system property to ensure compatibility with preinstrumented jars
modified the conditional check from ` ! isSilent ` to ` isSilent ` in ` ExecDriver . java ` to improve code readability and maintain
added validation to ensure that the DYNAMIC _ FIELD field does not have a default value and requires a required attribute to prevent runtime errors
remove redundant check for randomlyreadrepair ( ) in storageproxy . java
replaced ` ImmutableSortedSet ` with ` Iterables . transform ` for ` includeDirs ` in ` PrebuiltCxxLibrary ` to improve
added sensitivity checks for startDate , endDate , and isSNNSensitive flags in AdaptableX509CertSelector . java and ForwardBuilder . java
log4j2 - 1334 use abstractappender . parseinteger ( ) instead of use integer . parseint ( ) .
added a deprecated annotation to GuiScreenEvent . java to mark the class as deprecated to indicate that the class is outdated and should no longer be used
refactor category addition and removal methods in CategoryEditSearchRecyclerViewAdapter to improve code readability and maintainability
update ebean - cache to use servercachetype instead of servercacheoptions
refactor massOverriddenBy and CDOverriddenBy assignments to a for - each loop in RocketComponent . java to improve code readability
refactored the ` doCompile ` method in ` JavaCompilerService ` , ` SynchronizedTask ` , and ` JavaDiagnosticProvider ` classes
refactor MultiThreadedBuildRuleResolver to use a Supplier for task creation instead of an abstract method to improve code readability and maintainability by
[ java ] fix race condition in wanreplicationserviceimpl
added null checks for ` tPartition ` and ` table ` in ` Partition . java ` and updated driver initialization in ` DDLSemanticAnalyzer .
updated lambda expressions in LocalServiceRegistryClientImpl . java and RemoteServiceRegistry . java to use lambda expressions to improve code readability and maintainability
added a new test class ` FilesTest ` and a method ` delete ` in ` Files ` to validate file existence and deletion to ensure
removed unnecessary try - catch blocks in ServerSocketAdaptor and SocketAdaptor classes to streamline resource management by eliminating unnecessary try - catch blocks
updated class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to ensure
replaced ` clear ( ) ` and ` addWorkingDir ( f ) ` calls with ` addWorkingDir ( f . toString ( ) ) `
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to ensure proper handling of null
changed the access modifier of the static String variable from public to private to restrict access to the String constant for better encapsulation
updated URLs for CSV and JSON jar files in SimplePostTool . java to improve clarity and maintainability of the code
ggb - 271 add geosymbolicdiffers test to make sure we do n ' t have symbolicmode .
refactor shutdown handling in JavaxWebSocketClientContainerProvider and add doStop method in JavaxWebSocketClientContainer to improve error handling and ensure proper
updated condition to check for both null and non - null type in Linux . java to improve code readability and maintainability
close web application context after test to avoid memory leak .
added a method to retrieve the search string and updated the search logic in RemoteBrowseHandler . java to enhance search functionality to enhance user experience by providing
set the visibility of the neutral button in SetupEncryptionDialogFragment to INVISIBLE to improve user interface responsiveness during encryption
hhh - 16464 - add countitems ( ) and countnotarchiveditems ( ) method to itemdaoimpl . countitems
updated string concatenation syntax in DDLTask . java for consistency to improve code readability and maintainability
added exception handling and logging for OAuth2 exceptions in CheckTokenEndpoint . java to improve error management and logging capabilities in the application
refactor multiple renderer classes to improve code organization to enhance maintainability and readability of the codebase
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use parameterized types instead of hardcoded values to improve code readability and maintain
updated dismiss delay from 20000 to 10000 in ExtractionModelFrame , DataBrowser , and SQLConsole classes to increase dismiss delay from 20000 to
added support for surefire 2.12 . 0 and JUnit5 in ActionProviderImpl . java to ensure compatibility with the latest JUnit version
replaced HumanReadableException with RuntimeException in WorkerShellStep . java to improve error handling by using RuntimeException instead of HumanReadableException
[ hotfix ] [ stream ] move experimental annotation to flink - core
[ hotfix ] [ javadoc ] fix typo in streamcepstrumsource
added a check to prevent index out of bounds errors in the List class to ensure that the index does not exceed the size of the items list
updated assertions in CloneHelperTest to use Parenthesis instead of OrExpression to ensure correct handling of parenthesis expressions in tests
updated the DebugPaste class to include confirmation and required type parameters to enhance user experience by providing a confirmation option for debugging purposes
replace calls to ` . get ( ) ` with ` . orElseThrow ( ) ` in multiple configuration classes to improve error handling by providing clearer
use mathquillggggggggggb instead of textareajq . find ( ' textarea ' )
updated imports and refactored the GoBinaryDescription class to use ` GoBinaryDescriptionArg ` instead of ` Arg ` to improve code clarity
refactor environment retrieval logic in Jooby . java to improve readability and maintainability to enhance code clarity and prevent potential null pointer exceptions
updated ` SimpleRetryExceptionHandler ` to implement ` RetryListener ` instead of ` RetryListenerSupport ` and introduced a new ` SecondDummyRetryListener `
[ beam - 498 ] add decimal format to elasticmeterregistry ( # 498 )
changed email and author fields to final in Contribution . java to ensure immutability and prevent potential null pointer exceptions
modified the loop condition in JUnitFormatter . java to use a do - while loop instead of a for loop to improve performance and readability by
refactor elements assignment to use a temporary variable for clarity to improve code readability and maintainability by using a more descriptive variable name
updated exception messages to include the resource URL in StaxEventItemReader . java to provide clearer context for input resource checks to improve error reporting
fix testmultirendertarget . testmultirendertarget . testmultirendertarget . testmultirendertarget . testmultirendertarget . testupdate
added null check for currentProfile before retrieving the client to avoid potential NullPointerException when currentProfile is null
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure the correct namespace declaration is added
added BigInteger imports and modified key pair initialization in KeyStoreManager . java to enhance security by using BigIntegers for parameters and parameters
use getindicesaslist ( ) instead of getindexbuffer ( ) in collision shape
added engine version setting in BpmnDeployer and corresponding test assertions in BpmnDeployerTest to ensure compatibility with the latest engine version
updated velocity engine properties from " resource . loader " and " runtime . references . strict " to " resource . loaders " and " runtime .
add check for thread attachment in centrypointnippets . verifyiscurrentthread ( )
updated GenericUDFMapValues to handle null maps and added a new test class for null handling to improve robustness by preventing potential NullPointerExceptions
updated the test name from " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to clarify the purpose of
[ energy ] add config option to enable oil well generation and bonus generation
added a check for the existence of the " . clean - me " directory in ImportContext . java and updated the condition in JobQueue . java
updated the way the LifecycleException is thrown in MemoryRealm . java to use a localized string resource to improve error handling by providing a more informative
updated import statements in CRLDistributionPointRevocationCheckerTests . java and CRLDistributionPointRevocationCheckerTests . java to improve
added comments to comments in ZipConstants64 , ZipConstants64 , and ZipEntry classes to improve code readability and maintainability by reducing redundancy
refactored the ` newFileSystem ` method to use a ` ensureFile ` method and added error handling for file operations to improve error handling and
replaced ` Box . createHorizontalStrut ( ) ` with ` Box . createHorizontalGlue ( ) ` in ` IfControllerPanel . java `
updated the connection creation method in FailoverUpdateURIsTest . java to ensure the correct implementation of the connection creation
added JSON serialization annotations for baseUrl , mirrorsList , and repoId in ServiceOsSpecific . java to ensure proper serialization and deserialization of service
do n ' t delete a book in the first run wizard
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
corrected the calculation of responseMessagePosition in AbstractAjpProcessor . java to correct the calculation of the buffer position
do n ' t start the admin server if it fail to start the admin console .
refactor unregisterHandlers ( ) method to use MessageConsumer < ? > instead of unregisterHandlers ( ) to improve code readability and maintainability by
added properties for device ID transformation and enabling ID table settings in IoTDBDescriptor . java to enhance configuration flexibility for device ID transformation and ID table
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 in ExitableDirectoryReaderTest . java and added DelayingSearchComponent
updated the condition to check if the timestamp is not null in TestSignatureInfo . java to ensure that the test correctly verifies if the timestamp is not
replaced ` ScriptBuilder . data ( ) . build ( ) ` with ` ScriptBuilder . createP2PKHOutputScript ( pubkey )
updated the expression to include " / schema / types / fieldType " alongside " / schema / types / fieldtype " to include " / schema /
updated the completion logic in Completers . java and added a new test class OptionCompleterTest . java to ensure that the completion functionality works correctly
reformatted code for better readability in S3Utils . java to improve code readability and maintainability
changed the data type of ` sourcePeerId ` and ` selfPeerId ` from ` String ` to ` int ` across multiple classes to improve
refactor file upload logic into a separate method ` UploadFile ` to improve code readability and maintainability by consolidating file handling logic
updated the alpha value of the replyButton in TweetFragment . java to ensure the replyButton reflects the correct alpha value for better user experience
updated the expected timestamp string formatting in AccessLogSupportTest . java to improve readability and maintainability of the code
test : use temporary folder instead of testfiles - deleteme
removed null checks for subscribers in SettingImpl . java to simplify the code and improve readability
updated error handling in AbstractSamlObjectBuilder and AbstractSaml10ResponseView to throw IllegalArgumentException instead of InitializationException to improve robustness by preventing
replaced printStackTrace ( ) calls with LogUtil . warn ( t ) in DataBrowser . java to improve logging granularity by using a more
added a condition to check if the asset directory exists in the Dev mode and updated tests for static directory class path handling to ensure that assets directory is
[ hotfix ] [ rocksdb ] add writeoptions to rocksdb keyed state backend
updated the default format string from " value - tag - index " to " value - index " in CoreLabel . java to improve clarity and consistency
updated hint settings for GraphHopper in MainActivity . java and added request hints in MainActivity . java to improve code readability and maintainability
[ java ] increase wait time for native secp256k1 , secp256k1 , secp256k1 , secp256
rename ` DuclsSandboxTest ` to ` SandboxTest ` and update references accordingly to improve clarity and consistency in naming conventions
camel - 14284 : camel - cxf - should use exchange . setexception instead of log .
changed the access modifier of the ` forwardPropagateTree ` method from package - private to public to allow access to the method from other classes
updated SQL query in JDBCExample . java to use the correct parameter for the count clause to ensure accurate counting of results based on the specified range
added validation for file location handling in DefaultModelValidator to ensure correct handling of missing project expressions in profile activation
refactor Style class to improve code organization to enhance maintainability and readability of the code
added a new boolean flag ` isZoom ` and implemented the ` onKeyDown ` method in ` ShareActivity . java ` to handle the Zoom
added a conditional check to skip deprecated fields in Json . java to ensure that deprecated fields are only processed when the field is a deprecated annotation
added animations for displaying and hiding the layout in LauncherFragment to enhance user experience by providing smoother transitions when the layout is not running
updated method name from " readTokenStorageFile " to " readTokenStorageFile " in multiple files to improve code readability and maintain consistency in
added progressable parameter to multiple methods in Utilities and related classes to enable progressing of the sequence writing process
[ hotfix ] [ runtime ] fix typo in error message
remove contribution from panelByContribution and update panel ordering and color updates in ContributionListPanel . java to ensure that the panel reflects the current contribution
rename HyervisorTemplateAdapter to HypervisorTemplateAdapter to improve clarity and consistency in naming conventions
added a check to set the user directory if it is empty in RegularFileObject . java to ensure the correct directory path is used for file
[ java ] set sample rate to 48000 when format . no _ value be set to false .
log4j2 - 1334 add a filter to the mapfilter so that it do n ' t need to call getdatavalue ( )
updated test cases in VerificationInOrderWithCallsTest . java to improve test coverage and maintainability
updated the method call from ` setFromAxis ` to ` setFromAxis ` to use ` x ` instead of ` axis . z ` to
updated the constant name for COLLECTION _ DELIM from " colelction . delim " to " collection . delim " to ensure consistency in
added unit test to ensure that listener be connect at the start of the client .
fix # 5355 : do n ' t generate an empty string ( # 5355 )
added a boolean flag ` mIsOneHandedModeSupported ` and refactored conditional checks in ` RecentsAnimationDeviceState . java `
added onDetachedFromWindow method to manage task cancellation in AppsCustomizePagedView to ensure proper resource management and prevent potential memory leak
added a dictionary resource parameter to MorfologikAnalyzer and MorfologikFilterFactory constructors and updated MorfologikFilterFactory to
updated exception handling logic in ResultSetTest . java to set the ' thrown ' variable to false to ensure proper handling of exceptions in the test
updated the log message format from " debug " to an empty string in GradleBuildService . java to improve readability and maintainability of the
refactor ` preventedByLocking ` and ` preventedByMVCC ` to use ` AtomicBoolean ` instead of ` AtomicReference < Boolean > ` to
refactor component tree rendering to use a dedicated applyToolTipText method to improve code readability and maintainability by reducing duplication
increased the timeout duration from 5 seconds to 10 seconds in the await method from 5 seconds to 10 seconds to allow more time for the zipkin server
[ deviantart ] add deviantart username and password to the deviantart cookie
updated KNOWN _ GOOGLE _ SIGNATURES and GOOGLE _ LEGACY _ KEY constants in PackageUtils . java
updated the method for creating the solution business in ImportDirSolveAllTurtleTest . java to ensure the solution business is created from commonApp
added a method to notify window state changes in WWindowPeer . java to ensure proper handling of window state changes in the application
added a description field to the templateData in EntityGroupKeyContentFormatter and updated the detection in TestEntityGroupKeyEmailContentFormatter to enhance the
updated the method call from ` remove ( sel ) ` to ` data . remove ( sel ) ` in ` UserData . java ` to ensure
refactor language retrieval logic in Locale . java and add error handling in LocaleTest . java to improve code clarity and ensure correct language retrieval logic
refactor Liquibase to use a dedicated method for creating the UpdateVisitor to improve code readability and maintainability by encapsulating the
added a check for screen pinning active status in OverviewCommandHelper to prevent processing when screen pinning is active
added support for a description of no chart data in the Chart class to enhance user experience by providing a clearer description of chart data
added synchronization to the checkHeadWritten ( ) method in Http1xServerResponse and Http2ServerResponseImpl classes to ensure thread safety during cookie
refactor chunk handling logic into a separate method for improved readability to enhance code maintainability and reduce duplication
added " http " header and " scheme " headers to the Http2TestBase and TestHttp2Section _ 8 _ 1 classes and updated test cases
fixed - redissonlocalcachedmap . keySet ( ) and redissonlocalcachedmap . entrySet ( ) method throw redissonlocalcachedmap .
camel - 14284 : camel - jpa - fix the issue that camel - jpa should not start the entitymanager if the component be not
updated assignment of jumpSpeed in PhysicsCharacter . java to ensure correct assignment of jumpSpeed in PhysicsCharacter . java
added a null check for reparsedFunction in the conditional statement to ensure that reparsedFunction is not null before proceeding with syntax extensions
refactor BitstampPusherService to use more descriptive variable names and improve logging functionality to enhance code readability and maintainability by using
added a new constant ` OLD _ SEGMENT _ PATH ` and a deprecated method ` getOldUploadSegmentHttpURI ` in ` FileUpload
updated the method call from ` findOne ( ) ` to ` findOne ( filter ) ` in ` MongoDbTailTrackingManager . java ` to ensure
added assertpredicatefails ( string expression ) method to JuelLanguageTest . java to ensure that predicates do n ' t fail
added a bound to the range of the alpha value in RecentsView . java to ensure the alpha value is correctly bound to the range
updated the replacement logic for the Import - Package version string in ManifestReversion . java to ensure consistent formatting of the version string
refactor DataSyncConfiguration class to improve code readability to enhance maintainability and facilitate future updates
added import for JavaSnippetRepository and initialized JavaSnippetRepository in JavaLanguageServer . java to ensure proper initialization of Java snippet repository
added a loop to iterate over numTimeBuckets before updating sums in StarTreeRecordStoreCircularBufferImpl . java to improve performance by avoiding
use index . html instead of code . google . com . google . com . google . com
camel - 14284 : camel - pg - test - db should use try - with - resources to avoid resource leak .
updated import statements from ` com . sun . syndication . syndication ` to ` com . rometools . rometools .
added handling for " Content - Length " header in TransferCompletionHandler and updated NettyAsyncHttpProvider to use FluentCaseInsensitiveStringsMap in Netty
refactor Dialog class to improve code readability to enhance maintainability and facilitate future updates
removed the constructor from EnhancedRuntimeException to streamline the code by eliminating unnecessary parameters
fix socketappendertest failure on slow ci server
camel - 14284 : camel - core - fix the build error of camel - core
updated method signatures and exception handling in ByteArray . java to improve error handling and clarity to enhance code readability and maintainability by reducing redundancy
added a method to disable input proxy in RecentsAnimationWrapper to ensure proper handling of touch events during animations
removed the JUnit Ignore annotation from RestletDomainServiceTest . java to disable the test due to the CAMEL - 6770 issue
removed the ` currentIdx ` parameter from the ` resizeAndRehashIfNeeded ` method in ` HashTableTemplate . java ` to simplify the method
rename module - info to modulepath for test
added a new method ` getSourceDirs ( ) ` to the ` JavaLanguageServer ` and ` JavaServerConfiguration ` classes to enhance logging clarity
updated menu item ID from ` menu _ open _ web ` to ` menu _ mute _ hashtags ` in ` TweetPager . java
updated method names from ` nodeIsAncestorOfItself ` to ` nodeIsNotDescendantOfItself ` and modified assertions in ` HasParentNode
fix a bug in worldeditplayer . getblocky ( ) , use math . max ( ) instead of math . max ( )
added PathNotExistException to the selfCheckDataTypes method and refactored data type validation logic to improve error handling for data type mismatches
updated closing brace formatting in JavaCompiler . java to improve code readability and maintainability
[ hotfix ] [ stream ] remove mailboxexecutor from operatorfactory
hbase - 16464 allow settablestateinmeta ( ) and fixmeta ( ) to call unwrapremoteexception . fixmeta ( )
updated method reference from ` meter . getId ( ) ` to ` Meter : : getId ( ) ` in ` GatewayMetricFilterTests . java
fix junit4classrunner constructor to use javaclass instead of testclass
( chore ) camel - k8s : use lasttimedata instead of remoteitems
updated the calculation for allAppsCellPaddingPx to account for padding to ensure accurate rendering of all apps cell padding
[ hotfix ] [ runtime ] add parent - first logging pattern to coreoptions
updated references from ` doc ( ) ` to ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure proper reference
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to ensure that the output is properly
updated the ` Session ` interface to extend ` java . io . Closeable ` instead of ` Connection ` and modified the ` close ` method to return
refactor GetLocations class to improve code organization to enhance maintainability and readability of the code
replaced printStackTrace ( ) calls with if ( ex = = null ) for exception handling to improve code readability and maintainability by eliminating unnecessary print statements
replaced ` UncheckedIOException ` with ` ignore ` in the catch block to simplify error handling by eliminating unnecessary exception handling
updated ` GeneratePubkeyActivity ` to extend ` AppCompatActivity ` instead of ` Activity ` to improve compatibility with newer Android versions
refactor quantifier handling in RubyFlavorProcessor to use CharSequence instead of String to improve performance and readability of the code points
changed log level from warning to debug and added null checks for username and password in BaseLiquibaseTask and DiffDatabaseTask to improve logging clarity
[ java ] remove the usecaches flag from nio2endpoint
updated CasGeoLocationConfiguration to accept a Resource for maxmindDatabase instead of MaxmindProperties to improve flexibility in database reading by allowing
updated html files in InstructorFeedbackResultsPageUiTest to use " / instructorFeedbackResultsPageOpenViewForHelperViewForHelperView "
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter in the ` EncodedColumnsUtil ` class to enhance the
removed public access modifier from method signatures in ApprovalStore , ApprovalsControllerService , and ApprovalsControllerService classes to restrict access to
added a boolean flag ` mStartedDownload ` to manage download status in ` FileDownloader . java ` to ensure that the downloader is stopped when
updated method names from ` getOpenView ` to ` getAnyView ` in ` TaskbarDragLayerController ` and ` AbstractFloatingView
updated project version from 1.0 . 11 to 1.0 . 13 and modified the version number in JFreeChartResources . java to reflect the latest version and
replaced direct calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to improve thread management by
refactor GsonBuilder class to improve code readability to enhance maintainability and facilitate future updates
add null check for centerGeo before adding it to circleCenters to avoid potential NullPointerExceptions when centerGeo is not initialized
remove the espressohome option and use it in the installation directory
refactored multiple Ct - related classes to improve code organization to enhance maintainability and readability of the codebase
changed the DeleteSessionAction class to be final and removed the deleteSession parameter to simplify the class and improve code readability
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to improve code readability
updated result handling in JoinQParserPlugin , SolrIndexSearcher , and TestJoin classes to handle empty results and improve error logging for JOIN MIS
updated the triggerMediaScan method to include a file parameter to ensure the media scan triggers correctly when the file is updated
removed verbosity checks and simplified test result posting logic in TestRunning . java to streamline test results processing by eliminating unnecessary verbosity checks
added multiple custom G - code settings to MainWindow . java to ensure proper handling of custom G - code text settings
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 42225 - fix
refactor JsonElement class to improve code readability to enhance maintainability and facilitate future updates
added imports for SolrTestCaseJ4 and reset exception handling in TestBadConfig . java to ensure proper exception management during test execution
added a method ` removeFragmentsAndActionBar ( ) ` to ` GpsMainActivity ` to manage fragment removal and hide the action bar to
fix flaky test in tokenizerannotatoritest
changed the type of ` Range . Byte ` from ` Range . Byte ` to ` Range . Byte ` in multiple handler classes to improve handling of
updated G - Code - Sender files to include line _ skip _ test . gcode and modified conditional checks in GcodeViewParse . java
added new versions " 8.8 . 0 - cfs " and " 8.8 . 0 - nocfs " to TestBackwardsCompatibility .
updated formatting of the method call in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintain consistency
added null check and state check for output stage and state in StatementResource . java to ensure proper resource management and prevent potential resource leaks
make integritycheck . integritycheck . expandfilename ( ) private
removed the import of SolrClient and its associated mapping from ChaosMonkey . java to streamline the code by eliminating unnecessary dependencies
added null check for ` fas ` before accessing it in ` ConfigurationActivator . java ` to avoid potential NullPointerExceptions when ` fas
removed unnecessary whitespace in NestedRepositoryTreePanel . java to improve code readability and maintainability
updated the constructor of ExtensionTypeHeader to be public and added a validation check for the minimum and maximum value of the extension type to ensure that the
pdfbox - 4071 : add ` ` throws ioexception ' ' to method signature , a suggest by valerybokov
updated the ` deleteOnShutdown ` and ` pushOnShutdown ` properties in ` PrometheusProperties . java ` and added getter and setter methods
added error handling for state machine trigger errors in ReactiveStateMachineExecutor and MonoSinkStateMachineExecutor to improve error management and logging capabilities
added a new test method ` whenMultiplePythonExecutablesOnPathFirstIsUsed ` to ` BuckConfigTest . java ` to verify the functionality
added a signin button to the InitialAccountRegistrationFrame to enable users to sign in the initial account registration process
added a new configuration option ` TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN `
updated error logging statements in RegistrationRestRepository . java to include the exception parameter to improve debugging by providing more context on the error message
move reflectionutils and reflectionutils from util . reflection to util package
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and a corresponding test class ` Oid
removed the ` center ` field from multiple classes related to Circle , Ellipse , Ellipse , Polyline , and Rectangle to streamline the code
[ hotfix ] [ runtime ] fix checkstyle violation in registerandprocessbundleoperation
refactor SslContextFactory class to improve SSL context handling to enhance security by ensuring proper SSL context management
[ hotfix ] [ test ] remove @ ignore from configurationproperties
change return value from " access _ confirmation " to " access _ confirmation _ error " in AccessController . java to provide a more descriptive
add consumerclassloaderfilter to allow use of contextclassloader
pdfbox - 4071 : add support for copy row to sheet , a suggest by valerybokov
rename ` setRolloverIcon ` and ` setRolloverPressedIcon ` methods to ` setRolloverPressedIcon ` in ` FontImage .
refactor grid translation handling in TaskViewUtils , TaskViewSimulator , and RecentsView classes to improve clarity and maintainability of the task view
refactor assertions in Assertions . java for improved readability to enhance maintainability and facilitate future updates
added a null check for the currentDateTimeFunction in multiple database classes to ensure that the currentDateTimeFunction is only returned if it is not null
added a new method ` anonymousPath ` to ` IOUtils ` and updated ` Log4jUtils ` to use it to improve path handling and ensure
updated the ` call ` method to include an additional ` contentDescription ` parameter in ` DigitalWellBeingToast ` and ` TaskView
add timeout to catalogtracker . getmetalocation ( ) so that it do n ' t fail .
refactor LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
replace null return with stateconverterutil . defaultconversion ( state , typeclass ) .
added a new test method ` testFetchPostAndDetailsProjection ` and modified import statements in ` BidirectionalOneToOneNPlusOneTest . java
removed extra empty screen and updated startSearchPageIndex initialization logic in LauncherModel . java to ensure proper handling of empty screen scenarios and improve
updated HashMap and HashSet initialization in MarkBasePointersPhase . java and added null check in IndexedValueMap . java to improve performance and prevent potential
updated string literals in GoogleLineChart , GooglePieChart , GoogleLineChart , GooglePieChart , and GooglePieChart to
do n ' t try to wait for a complete batch in sendingaccountor .
added a position field and a method to set its value in WALPrettyPrinter . java to enhance the functionality of the WALPrettyPrinter class
updated the port parameter from 1 to 0 in the NettyTransceiver instantiation to ensure the correct port is used for Transceiver operations
modified the report generation logic to sort events before generating a report to ensure that events are sorted before generating a report
added a new test method ` getCsvLineWithDoubleQuote _ ReturnsCSVLineWithEscapedQuote ` to ` CSVFileLoggerTest ` to ensure
fix chinese test to work with new categorized coref
of - 2745 / of - 880 : fix ' no - such - user ' check by check for remote domain
removed the @ JniImpl annotation from the VM class to streamline the code by eliminating unnecessary dependencies
updated configuration settings in Fetcher2 . java to use Protocol . CHECK _ BLOCKING and CHECK _ ROBOTS instead of hardcoded
added a condition to check if the video HDR format is not " dolbyvision " in FFMpegVideo . java to
updated package names from " other _ package " to " other _ package2 " in AstTests . java to reflect the new package structure and improve
fix ( worldborder ) : do n ' t resize the current diameter if it ' s less than 0 . 99
hbase - 16224 addendum implement getwalgroupsreplicationstatus ( ) for non - online region
updated the ` checkOpen ` method to include a ` EventRenderable ` parameter and modified the ` checkOpen ` method to accept an additional ` EventRenderable `
refactor routing table configurations to use a dedicated method for generating instance configurations to improve code readability and maintainability by encapsulating
changed the access modifier of the FieldAttributes class from final to public to allow access to the FieldAttributes class from other packages
add unit test for read erroneous maven project with reference
removed unnecessary null checks for oldProto and protoHistory in PropertyMap . java to simplify the logic for better readability and maintainability
refactored the ` getControllerId ` method to accept a ` configId ` parameter and updated related logic to improve the handling of relay configuration
replaced sessionFactory . close ( ) with session . close ( ) in SessionRequest . java to ensure proper resource management and avoid potential memory leaks
removed the check for ` service . isGenerateRefreshToken ( ) ` in ` OidcConsentApprovalViewResolver . java ` to simplify the condition
removed a debug print statement from Http2SolrClient . java to clean up the code and improve readability
replaced ` extractor ` with ` NoopGetter ` in ` BaggagePropagation . java ` and added a ` NoopGetter ` enum to
refactor ConditionalOnEnabledResourceChain class to improve resource management to enhance performance and maintainability of resource chain processing
added a condition to check if the tree root ' s getChildCount ( ) is greater than zero to ensure that the tree root is not empty before proceed
updated the method from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java
updated logging statements to use CN1 instead of System . out to improve clarity and consistency in logging output
updated return value from " h : mm a " to " skeleton " in ShadowICU . java and modified test cases in ShadowICUTest
removed the KeyguardManager import and simplified the condition for checking device lock status to simplify the code and improve readability
cloudstack - 10265 : fix npe in volumeapiserviceimpl # setdiskofferingid
replaced ` FileChannel ` with ` AsynchronousFileChannel ` and updated the ` write ` method to use ` AsynchronousFileChannel ` instead of `
refactor SigInt and SigIntTest classes for consistency and clarity to improve code readability and maintainability
add text . getmineditorwidth ( ) and text . update ( ) to drawtext
change return value from - 1 to 0 in Asset . java to change the return value from - 1 to 0
refactor ComputeBenchmark to use Callable for valueLoader and mappingFunction instead of a hardcoded value to improve code readability and maintainability by
added a refresh listener to the UploadListFragment to notifyDataSetChanged when the adapter is refreshed
changed the type of the ` file ` variable from ` File ` to ` Optional < Path > ` in multiple classes to improve flexibility in handling file
replaced instances of ` ParticleEmitter ` with ` ParticleEmitter ` and ` ParticleEmitter ` in ` ParticleEffect . java ` to
refactor Tomcat to use findServices ( ) and findChildren ( ) methods instead of direct service and host retrieval to improve code readability and
updated error message formatting in BuildRuleFactoryParams , Console , and BuildRuleFactoryParamsTest to improve clarity and consistency in error messages
added a check to return early if playback state is not PLAYING to ensure proper handling of playback state changes
removed the retrieval of ServiceComponentDesiredStateEntityPK from the database to simplify the retrieval of serviceComponentDesiredStateEntity
added a new class ` InnerClassFieldClash ` and modified logic in ` Java2TypeScriptTranslator ` and ` StructuralTests ` to
added logging filters and followRedirectFilter configurations to DockerClientFactory and DockerClientProfile classes to enable customizable logging behavior for Docker connections
replaced direct displayChanged ( ) calls with awtUnlock ( ) and awtLock ( ) calls in XToolkit . java to ensure proper resource management and
hhh - 10183 use sqlserver2008 instead of sqlserver200dialect in nationalizedscalarquerytest
[ java ] finally close input stream in ziphelper . verifyzipheader ( )
changed the access modifier of the storeClassFile method from private to public to allow access to the storeClassFile method from other classes
removed assertion for NO _ MORE _ ORDS in SingletonSortedSetDocValues . java and added a new test class TestSortedSetDocValues
updated error messages in CGIHandler and added a new start method in JavaVM to improve clarity and ensure proper error handling for invalid command and port
added support for additional characters " \ 033 [ 0m " in LineReaderImpl . java to ensure proper handling of line endings in the
updated method signatures and variable types from List to Set in DistBuildService , ServerContentsProvider , ServerContentsProvider , ServerContentsProvider , and
added a check to return early if the vertex count is zero in OGLESShaderRenderer . java to avoid unnecessary processing when no vertex is present
added handling for VerifcationInOrderFailure in the IncorectBindingPuzzleFixedTest and DescriptiveMessagesOnVerificationInOrderErrors
replaced ` FileUtil . createData ( root , menuPath ) . delete ( ) ` with ` FileUtil . createFolder ( root , menu
truffle : remove unused import from typesystem
refactor JsonObject class to improve code readability to enhance maintainability and facilitate future updates
updated condition to check if _ maxIdleTime is greater than zero in SelectChannelEndPoint and HttpConnection classes to ensure that idle timestamps do not
fix cansustainplant not be render when plant be not in place .
added support for CREATE TABLE SALTEDTABLE123 and MULTI _ TENANT tables in QueryDatabaseMetaDataIT and UpgradeUtil classes to enhance
updated SimpleDateFormat initialization to use Locale . US in HttpCookie . java and added a new class B6791927 . java for cookie handling to
added multiple calls to ` db . close ( ) ` in ` DbHelper . java ` to ensure proper resource management and prevent potential memory leaks
updated poll timeout values from 1 second to 5 seconds in BatchMessageListenerContainerIntegrationTests to allow more time for polling operations to complete
fix EconomyAllocationStage to accept option for allocation phase .
do n ' t store keybindings when save a database
added a line separator property to the ObjectMapper initialization in DrillTest . java to ensure consistent line separator behavior across different operating systems
fix ` nativeenvironmentrepository ` to use ` ` / ' ' instead of ' / '
replaced instances of ` AppTest ` with ` AppT1 ` in multiple test classes to streamline the code by eliminating unnecessary dependencies
[ java ] remove duplicate recordinglog . validateexistinglog ( )
updated import statements and variable name from GroupName to ErrorGroupName in ITSystemTest . java to improve clarity and consistency in the codebase
[ hotfix ] [ test ] remove unused code in testfuzzyoptimizations
removed unnecessary shared preferences retrieval in CameraManager . java to streamline image selection logic by eliminating unnecessary preference retrieval
replaced ` . equals ( entry . getName ( ) ) ` with ` entry . getName ( ) . equals ( " META - INF / "
add support for field name inclusion strategy in mdmmatchlinksvctest
updated JUnit imports and annotations from ` org . junit . BeforeEach ` to ` org . junit . jupiter . api ` to
refactor settypes to use arraylist instead of new . arraylist ( ) .
refactor TypeUtil class to improve code readability to enhance maintainability and facilitate future updates
update trigger time variable to use ` LocalDateTime . ofInstant ( ) ` instead of ` LocalDateTime . ofInstant ( ) ` to ensure accurate time representation
added a method ` maybeCreateAbstractMethodErrorThrower ` to handle abstract method errors in ` MethodHandleResolver ` to improve error handling for abstract method
camel - 14297 : camel - simple - add body . xxx and body . xxx to validation error message
removed a check for empty toExplore in AbstractParser . java to simplify the code by eliminating unnecessary checks
camel - 14254 : camel - cloud - payload - converter : copy the input stream before use it .
camel - 14297 : camel - core - camel - camel - camel - camel - camel - camel - camel - camel - cdi -
added a new test class ` CheckACC _ STRICTFlagOnDefaultMethodTest ` and created a new test class ` CheckACC _
[ java ] increase timeout for channel validation test to make it more robust .
added a new file ` FileExtensions . java ` that defines ` CLANG _ SOURCES ` , ` CLANG _ HEADERS ` , and
replaced ThreadLocalDateFormat with a static final FORMAT _ PROTOTYPE constant and updated ThreadLocalDateFormat initialization to streamline date handling and improve code maintainability
added new deprecated options for " FastTLABRefill " and " DeferThrSuspendLoopCount " in VMDeprecatedOptions . java to
added a new property ` displayName ` to ` Pac4jBaseClientProperties ` and modified ` DefaultDelegatedClientFactory ` and related classes to
replace RuntimeException with EarlyTerminationException in multiple operator classes to improve termination handling by providing a clearer exception for termination issues
removed unnecessary whitespace in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
refactor response handling in HttpBindServlet and HttpConnection classes to use a dedicated ` consumeResponse ` method to improve code readability and maintainability
fix npe in forgeeventfactory when parent be null
wallettool : catch keycrypterexception instead of keycrypterexception
added a @ Deprecated annotation to AsyncCompletionService and SubmitOrderedCompletionService classes to indicate that the class is outdated and should no longer be used
updated HyphenationTree . java to adjust the length of the string in HyphenationTree . java to ensure the correct length is used for
added a sleep delay of 200 milliseconds in IQRegisterHandler . java to improve responsiveness by allowing more time for the registration process
add simple account registration to the simpleaccreg package so it can be use by the simpleaccreg plugin .
updated the description of the PARAMETER _ NEEDS _ TO _ BE _ NAMED string in ParameterBinder . java to clarify the purpose of
added a new boolean variable ` providersChanged ` to ` ConfigurationManager . java ` to track provider changes during configuration management
added a method to quote identifier tokens in the SemanticAnalyzer class to ensure proper formatting of identifier tokens based on configuration settings
updated the condition for checking if the ' name ' entry is null and added a warning for missing ' PostScript ' entry in the font to ensure
updated the type casting for AnalysisSPILoader in SolrResourceLoader . java to improve type safety and eliminate unchecked warnings in the code
modified the condition in Window . java to include a check for the parent ' s position before proceeding with the hit condition to ensure that the hit
added a null check for appManifest before assignment to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog to streamline configuration handling and improve code readability to enhance maintainability and ensure proper serialization
added a ` userName ` field and its getter / setter methods to the ` Driver ` , ` HiveSemanticAnalyzerHookContextImpl ` , and `
added setter methods for ` TransformerFile ` , ` URL ` , ` InputStream ` , and ` XmlConverter ` in ` XsltBuilder `
added Hadoop shim support to multiple classes to enhance compatibility with different Hadoop versions
updated test cases in ShadowAssetManagerTest , ShadowContentObserverTest , ShadowDownloadManagerTest , ShadowDownloadManagerTest , ShadowDownloadManagerTest ,
add a null check for the context before log access to avoid npe .
[ java ] do n ' t use system . currenttimemillis ( ) instead of system . currenttimemillis ( ) .
updated VM version checks in CompilerConfigFileWarning , ConfigFileWarning , and ConfigFileWarning classes to use Platform . isDebugBuild ( ) instead of
replaced instances of ` MeterStatisticsManager . statisticsOperationMap ` with ` MeterDetailStatisticsModel ` in ` DefaultLogPublisher . java `
updated logback configuration file resolution logic in FrameworkLauncherExtended . java to improve error handling and ensure proper configuration file resolution
updated method signatures in CipherExecutor , CookieRetrievingCookieGenerator , CookieValueManager , and related classes to use @ NotNull annotations to enhance
replaced ` BASH _ ESCAPER ` with ` SHELL _ ESCAPER ` across multiple files to improve compatibility with Windows environments
refactor waitUntilReadyAndSucceed method calls to use try - with - resources for better resource management to improve code readability and
renamed the test class from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify the purpose of the test
updated the closing brace in RelativeDateFormatTests . java to improve code readability and maintainability
added a method to generate a shield address in RpcApiService to ensure proper handling of shield addresses in the response
changed return type of ` readConsoleInput ` methods from ` byte [ ] ` to ` String ` across multiple terminal classes to improve type safety and
updated regex patterns for presubmit , postsubmit , and platform flavors in TestStabilityRule . java to improve code readability and maintainability by
added a conditional check for multi - valued fields in DefaultSolrHighlighter . java and updated test assertions in HighlighterTest . java to enhance highlighting functionality
updated the ` tryToLogin ` method to accept username and password parameters in the ` tryToLogin ` method to enhance functionality by allowing credentials for
updated imports and refactored entity handling in HandlerSceneEntityDrownReq . java and PacketSceneEntityDrownRsp .
camel - 14265 : camel - jms - jms - jms - jms - fix the issue that camel - jms do n ' t work with
replaced ` wrapCollection ( parameter ) ` with ` update ( statement , parameter ) ` in ` DefaultSqlSession . java ` to simplify the code
added logging for unknown currency exceptions in BTCEAdapters . java to improve error handling and logging for unknown currencies
[ hotfix ] remove unnecessary call to getclientid ( ) . getclientid ( ) in durableconduitbridge
pdfbox - 4071 : change default value of averagechartolerance and spacingtolerance to 0 . 3
added a ` useTenantIsolation ` parameter to the ` startController ` method and modified related methods in ` ClusterTest ` , ` ClusterTest `
replaced ImmutableMap . builder ( ) with a direct casting of response value to simplify code and improve readability
added a check to ensure attrs . size ( ) is non - negative to prevent potential NullPointerExceptions
added abstract methods for ` getProjectJdkName ` , ` getProjectJdkType ` , ` getProjectLanguageLevel ` , and ` I
updated the log message from " Experimenal " to " Experimental " in HiveSessionProperties . java to clarify the purpose of the shuffle feature
added tests for the GrantedAuthorityEffectiveAclsResolver to validate the functionality of the GrantedAuthorityEffectiveAclsResolver to ensure correct handling of
[ java ] use the resolvedjavalangobject instead of a reflectionmodel to solve method in javaparsertypedeclarationadapter
added support for a maximum number of buttons in the XToolkit class to ensure buttons are only retrieved when no buttons are available
updated import statement from ` jdk . testlibrary . Asserts . assertEquals ` to ` com . oracle . java . testlibrary . Asserts .
added a new MessagePackFactory class and modified MessagePack . java to introduce a new MessagePackFactory class to provide a factory for creating MessagePack
added new tags ` IS _ DESERT ` , ` IS _ CAVE ` , and ` IS _ cave ` to the ` Tags `
rename ` present ` method to ` draw ` across multiple screen classes to improve clarity and consistency in naming conventions
added conditional checks for horizontal and ToggleButton layouts in ComponentGroup . java to ensure proper layout behavior for group elements
removed the identifier parameter from the regex pattern check in DOIServiceImpl . java to simplify the code and improve readability
replaced instances of ` instanceof ` with ` hasMultitouch ` in ` AndroidInput . java ` and ` AndroidLocklessInput . java ` to
[ java ] do n ' t throw agentterminationexception if commit position be not available .
add usersite , usersiteid , usersiteid , usersiteid and usersiteid to example database
added handling for malformed URLs and improved error handling in HttpConverterRegistrar . java to enhance robustness and provide clearer error messages for malformed URL
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 12929 . cgi
replaced ` openInput ( fileName , IOContext . DEFAULT ) . close ( ) ` with ` fileLength ( fileName ) ` in ` NRT
refactor ` JavascriptCompiler ` to use ` java . lang . reflect . ExpressionContext ` instead of ` java . lang . reflect . Invocation
added synchronization to the UISettings class and modified the store method to ensure thread safety when accessing the UISettings class
modified the visibility of the ` fireDataChanged ` method in ` TextField . java ` to allow external access to the ` fireDataChanged ` method
spannerio : retry if concurrent transaction be abort by emulator ( # 28093 )
[ java ] use diamond operator to improve code readability
updated the array type check from double [ ] to short [ ] in ObjectInputStream . java and added a new CloneArray . java file with a
updated the retrieval of the nonce claim from ` getClaim ( nonce ) ` to ` getStringClaim ( nonce ) ` in ` OIDCAuthentication
added a condition to check if a field is a relationship field in DCInputSet to ensure proper handling of relationship fields in the input set
added support for the CAPABILITIES _ SERVER _ SLOGAN column in multiple classes to enhance server messaging capabilities by allowing users to
updated the conditional check for menuItem equality in DrawerActivity . java to improve code readability and maintainability
updated SolrRequestParserTest to use JUnit Assume for error handling to improve test reliability by ensuring the test only works if a network connection fails
added a check for empty build IDs in MissingSymbolsHandler to prevent processing when there are no build IDs
updated StringHelperTest . java to include additional data types in StringHelperTest . java to enhance test coverage for different data types
added a warning log message when the data provider annotation returns an empty array or iterator to improve error handling and provide clearer feedback during tests
camel - 14284 : camel - service - health - return empty list instead of empty list .
updated XML version from 1.0 . 0 to 1.0 . 8 and modified selection style handling in MapStyleModel . java to ensure compatibility with the new version
corrected the method name from ` mass ` to ` restitution ` in ` PhysicsRigidBody . java ` to improve clarity
added a new file ` AutoFtpActivity . java ` that implements the ` IActionListener ` interface to implement FTP - related functionality for testing
refactor token type handling in BaseSemanticAnalyzer to improve readability and maintainability of the code
added getter and setter methods for ` getImageX ( ) ` , ` getImageY ( ) ` , ` OnOffSwitch ` , ` OnOff
added a new file ` RemoteExecutionEnabled . java ` implementing ` CustomFieldSerialization ` for serialization and deserialization of ` RemoteExecutionEnabled ` to facilitate
pdfbox - 4071 : fix typo in error message
replaced FileReader with InputStreamReader in ImportCsv . java and added suppression warnings in ImportCsv . java to improve code readability and maintainability by
added a call to assertWorkingScoreFromScratch in AbstractScoreDirector . java to ensure that expectedWorkingScore and completedAction are not stale in the
updated the configuration key from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin " in HiveConf . java
added SLF4J logging for various datagram - related classes to ensure that the message content is not an io . netty . buffer . ByteBuf instance
updated file removal logic in SynchronizeFolderOperation and modified file list handling in FileDisplayActivity to improve file management and ensure correct directory handling in the
added assertions to verify the transaction hash in PollingTransactionReceiptProcessorTest . java to ensure the transaction hash is correctly validated and validated
updated test method names from ` testConstructSchemaBlackList ` to ` testDeleteTimeseries ` in ` SchemaRegionBasicTest . java ` to
added null check for newFormat in MediaCodecRenderer . java to prevent potential NullPointerException when sampleMimeType is null
replaced calls to ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc23Pooling
added @ JsonCreator annotation to @ AllArgsConstructor to enable JSON serialization for properties and properties in the constructor
added a check to throw an SQLFeatureNotSupportedException if creating an index on a view to ensure that creating an index on a view is not supported
added a new file ` Website . java ` that defines a ` Website ` class and tests for the ` PopulatorImplTest ` class
added a setup method to BSFormatterTest to set the default locale to " en " and set the default locale to " US " to ensure
add a file filter to the coremodmanager so that it do n ' t need to download a jar file .
updated the assertion in MultiPartParsingTest to use Matchers . equalToIgnoringCase instead of containsString to improve readability and maintainability of the
added checks for single and variable expressions in SimpleExprGenerator to ensure correct handling of variable expressions in the analyzer
added a volatile boolean field ` createdVertx ` to track the creation of the ` vertx ` variable to ensure that the ` vertx ` variable is
updated the ` writeAttributes ` method calls to use ` nodeModel ` instead of ` null ` to improve code clarity and maintainability by using a
updated log messages and null checks in SynchronizeFolderOperation and FileDisplayActivity to improve clarity and prevent potential NullPointerExceptions
added a boolean field ` ignoredReadStatus ` to the ` Entries ` class and updated related methods in ` CategoryREST ` and ` FeedREST
replaced ` MavenTestingUtils . getTargetDir ( ) . toURI ( ) ` with ` MavenPaths . targetDir ( ) . resolve (
added validation for valid data in RegisterServerConsumerExecutor and improved null checks in URIRegisterExecutorSubscriber to enhance data validation and prevent potential NullPointerExceptions
updated playback state condition in GwtMusic . java to check if the sound is paused to ensure proper playback state handling when the sound is not paused
added permission to the PERMISSION _ ADMIN _ SUDO _ AREA permission in MainCommand . java and Captions . java to
updated ` ServerRequestPlanVisitor ` to use ` HashMap ` instead of ` ImmutableMap ` for query options and modified query execution logic to improve query performance
replaced calls to ` toUri ( ) . getPath ( ) . endsWith ( ) ` with ` path . getFileName ( ) . toString ( ) `
updated assertions in ResourcesTest . java to include pureEmoji and mixEmoji for attribute values to ensure accurate assertions for attribute values in tests
replaced the native method ` NMTWaitForDataMerge ` with ` NMTMallocWithPseudoStack ` in ` WhiteBox . java `
[ hotfix ] [ serializer ] refactor EitherSerializerSnapshot to use javaeitherSerializerSnapshot instead of eitherserializersnapshot
refactor AddressResolverOptions to use AddressResolver . DEFAULT _ ROTATE _ RESOLV _ OPTION instead of a hardcoded integer
added a call to ` __ associate ( context ) ` in ` RequestRockerTemplate ` and a corresponding test in ` RequestRockerTemplateTest
pdfbox - 4071 : fix npe in tostring ( ) for nonterminal field
updated return paths from " liquibase / parser / core / xml / " to " www . liquibase . org / xml / ns / dbchangelog
move commonmimetypelocator from test to test source
updated RepositoryVersionState from INIT to NOT _ REQUIRED across multiple classes to ensure that the repository state is not required
updated the comparison logic in GenerateChangeLogTask to include SchemaComparison array to enhance comparison accuracy for different database schemas
replaced JUnit import with TestNG import in TestBackwardAnoamlyFunctionUtils . java to align with the latest TestNG framework conventions
added a new file ` ProgressiveJPEGTest . java ` for testing progressive JPEG functionality to facilitate testing of progressive JPEG
updated MaterialLoader to use a new float value for ambient , emissive , emissive , twoSide , and texName to
add support for x86 architecture in native - image building on window
added a null and length check for the text before setting its size to avoid potential NullPointerExceptions when the text is empty
updated readVarInt ( ) method to include a constant value of 1 _ 000 _ 000 to optimize memory usage by reducing the number of
added ` private ` constructors to several ` PushUtils ` , ` ThumbnailsCacheManager ` , and ` ThumbnailsCacheManager ` classes to
simplified the calculation of the length in RocketPanel by directly using the curConfig ' s bounds to improve code readability and maintainability by reducing
removed unnecessary casting of MockDirectoryWrapper to MockDirectoryWrapper to simplify code by eliminating unnecessary type casting
updated the CSV file loading parameter from " . * csv " to " ? i " in the Startup . java file to ensure proper handling of
updated accessibility announcement logic in TaskbarStashController , InvariantDeviceProfile , InvariantDeviceProfile , and FloatingIconView classes to ensure
replaced calls to ` Args . getInstance ( ) . getMyKey ( ) . getMyKey ( ) ` with ` RefreshTask . getNodeId
pmd : do n ' t throw BuildException - 2 with target jdk 1 . 5 .
refactor quotaresponsebuilderimpltest to use mockedconstruction instead of powermock
added PrintStream and System . err streams to TestSchemaToolCatalogOps . java to ensure proper handling of system output and error information
added a DFSClient parameter to the constructor and updated related methods in FanOutOneBlockAsyncDFSOutputSaslHelper to include it to
updated MongoQueryMethod and related classes to include RepositoryMetadata as a parameter to enhance query method flexibility by allowing more flexible metadata handling
update digester to use the new entityresolver2 class instead of the original entityresolver
updated import statements in MetaDataEndpointImpl . java for consistency and clarity to improve code readability and maintainability by reducing redundancy
updated ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added deadlockRetryInterval initialization in TxnHandler . java to
updated variable names from ` xl ` to ` xAxis ` in ` BarChartActivity ` , ` XAxis ` , and ` XAxis `
added methods to check if a character is printable in FsUtils . java to ensure proper handling of printable characters in the application
rename the ` ` in ' ' method to ` ` using ' ' in the ` ` using ' ' method of ` ` using ' '
add process - plugin - configuration option to project building request
updated return values in ProxyConnectionManager , ProxyConnectionManager , ServerTrafficCounter , and ServerTrafficCounter to use double values instead of double values to
updated the resource path handling in ITSystemTest . java to include a check for the existence of the resources directory to ensure that the resources directory is
updated return values in ModeledConnectionRecord , ActiveConnectionRecord , and AuthenticatedUser classes to return the remote host instead of a hardcoded
do n ' t set admin _ button on community list request if admin be enable
replaced ` ThreadPoolExecutor ` with ` AtomicInteger ` for ` longCompactions ` and ` shortCompactions ` threads in ` CompactSplit . java
updated package name retrieval to use resources . getResourcePackageName ( ) instead of getApplication ( ) . getPackageName ( ) to improve code clarity and maintainability by
updated the ` getPlayersInPlot ( ) ` method to include ` getPlayersInPlotVisible ( plot , PlotPlayer ) ` to
refactor AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity classes to improve code organization and maintainability
updated MlibOpsTest . java file to improve test coverage for MlibOps functionality
updated references from " com . sun . management . internal . OperatingSystemImpl " to " com . sun . management . OperatingSystemImpl " to
corrected a typo in the attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a test
removed unnecessary null checks for key and iv values in UploadFileOperation . java to simplify code and improve readability
added a @ Stability annotation to WorkProfileTest . java to indicate the stability of the WorkProfileTest class
removed conditional check for bucketing version in TezCompiler . java to streamline the code by eliminating unnecessary checks
replaced ` setCursorPosition ` method call with ` input . setCursorPosition ` in ` GwtTestWrapper . java ` to ensure correct cursor position
modified LockFreeBucket to extend AbstractBucket and added a new class LockFreeBucketContendedTimeMeter and LockFreeBucket _ FinalFields _ Cache
[ hotfix ] [ runtime ] add tpstats command to nodeprobe to print thread pool stats .
updated the method to retrieve the maximum bitrate based on user preferences to ensure consistency in setting the bitrate based on user preferences
refactor ZipkinHttpSpanExtractor to include checks for only and span IDs , and add tests for trace debug flags to improve code clarity and
[ bisq ] do n ' t use bsqswap or daoactivated account when create / duplicate offer
replace reflectionutil . getmethod ( ) with reflectionutil . gettypeiconrightaligned ( ) .
added a call to setProject ( p ) in LauncherUtils . java to ensure the project is set before use
updated JsBundle , JsLibraryBuilder , JsBundleBuilder , and JsTest classes to include ProjectFilesystem as a parameter to enhance
refactor multiple Java classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
refactor MetricsDSLContext class to improve code readability to enhance maintainability and facilitate future updates
removed the VersionConfig interface implementation and updated its usage in VersionBuckConfig . java to simplify the class structure and improve code clarity
added a try - catch block around the bindShadowClass method call to handle TypeNotPresentException to improve error handling by preventing potential TypeNotPresent
changed the access modifier of the validateTypes method from static to public to allow access to the validateTypes method from other classes
chore ( deps ) : update gapic - generator - java with mock service generation fix ( # 244 )
added SLF4J logging imports to SimulationStatus . java to enable logging functionality for simulation status updates
updated the version of the splash screen in Splash . java from 138 to 150 to reflect the latest features and changes in the splash screen
added a runLater method to notifications addition in UserInterfaceComponentImpl . java to ensure notifications are added only once to improve responsiveness and
updated mock behavior in AdditionalAnswers and ReturnsElementsOf classes to improve clarity and maintainability of the code
corrected a typo in the error message from " non - string partition column " to " non - string partition column " to ensure consistency in
added a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to verify the functionality of ` LineFileDocs `
added a method to retrieve the version code from the MainApp class and updated imports in FeatureList and WhatsNewActivity to use it to
camel - 14297 : camel - bean - add support for explicit method invocation in camel - bean
updated assertions from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to ensure
added buffer ownership checks in IndexBufferObject and VertexBufferObjectWithVAO classes and modified buffer disposal logic in VertexBufferObject and VertexBufferObject
added a transition for " forgotPassword " in the PasswordManagementWebflowConfigurer class to ensure the password is correctly updated forgot passwords
refactor JerseyClientConfiguration class to improve code readability to enhance maintainability and facilitate future updates
updated BeanDefinitionBuilder to use the correct package name for CharacterStreamReadingMessageSource and CharacterStreamWritingMessageHandler in ConsoleInboundChannelAdapterParser and ConsoleOutbound
updated print statements in InstanceOfPatternMatchTest , RemoveRedundantTypeCastTest , and RemoveRedundantTypeCastTest to use a
added methods to handle empty string arrays in StringDict and Table classes to improve data processing efficiency and ensure proper handling of empty string arrays
added ` AutoCloseable ` annotation to ` Container ` and implemented ` createContainerCmdHook ` in ` GenericContainer ` to mark the class as
updated logging level from info to error in MediaInfo . java and modified test cases in RendererConfigurationTest . java to improve error handling and ensure proper
added schemapattern option to BundledDriverDatabaseConnector and updated propertiesDataSourceDatabaseConnector to use it to enhance flexibility in schema pattern handling across database connector
fix null pointer exception in provsslsessionimpl . getid ( )
updated calculations for bitmap sizes in AndroidGraphics . java to use different width and height variables to improve rendering accuracy and accuracy of bitmap creation
updated Base64 class implementation to improve performance and maintainability of the code
add fallback to llvmglobalcontainer so it can be use from the language .
unignoring a test that fail on a device that do n ' t support it
refactor FlowBuilder and FlowJobBuilderTests classes to improve code organization to enhance maintainability and readability of the code
changed the type of ` resName ` from ` ResName ` to ` resId ` in ` AttributeResource ` and ` OverlayResourceIndex
refactor ` DefaultDockerClientConfig ` and ` DockerContextMetaFile ` to use ` Optional < File > ` for resolving ` DockerContextTLSFile
[ hotfix ] [ test ] rename @ after to @ before in simplereactiveelasticsearchrepositorytests
refactor site capture logic in mmm Attr . java and add new classes T6450290 . java and T6450290 . java
added logging level configuration to LoggingFlags and LoggingOptions classes to enhance logging capabilities by allowing configurable logging levels
added logging statements for package removal and modified the deleteItemsFromDatabase method to use Collection instead of Iterable to improve debugging and traceability of item deletion
added allFilesOption ( ) method to FileActivity , FileDisplayActivity , and PreviewImageActivity classes to enable users to navigate to the root
deprecate mutationoperationgroup . forEachoperation ( BiConsumer < Integer , Boolean > ) and hasMatching ( BiFunction < Integer , Boolean >
updated the calculation of numPredictiveAppCols to handle phone - specific app columns based on device type to improve accuracy in determining predictive
added UTF - 8 character encoding to the value initialization in StringUtils . java to ensure proper handling of character encoding in string representation
added RequestMatchers . java and RequestMatchers . java files to implement matcher matching functionality in the security framework
do n ' t show text field for temporary mode if it ' s not in applet mode .
updated calculations for knob height and width in ProgressBar . java to ensure proper positioning based on background dimensions
updated the file path for the external functions . json resource in PrestoSparkNativeQueryRunnerUtils . java to use a dynamic file
make extra _ l1 , extra _ l2 , extra _ l1 , extra _ l3 , extra _ l1 , extra _ l
added a condition to check if the state handler is invalidated in the gesture state check to ensure proper handling of gesture states when the handler is invalid
updated layout conditions and metrics in DynamicGrid and Workspace classes to improve layout handling for different orientations
added a check for the " / robots . txt " file in the HttpRobotRulesParser to ensure that the " / robots . txt
[ netbeans - 1020 ] add warning icon to jbpm module
updated button subscription names from " continue " and " close " to " createWorld " and " return " in AdvancedGameSetupScreen . java to
updated UDFOPDivide . java to include a null check for a null value and added a new test class TestUDFOPDivide
updated exception handling and formatting in FlowJob , FlowJob , and StopAndRestartFailedJobParserTests to improve code readability and maintain consistency in
added support for the ` FilterProcessUrlRequestMatcher ` and ` AbstractAuthenticationProcessingFilter $ FilterProcessUrlRequestMatcher ` in ` FormLoginBeanDefinition
added onDestroy ( ) method to ShareActivity , ContributionsActivity , and ContributionsActivity to ensure proper resource cleanup to prevent memory leak
replaced ` thumbNail ` with ` thumbnail ` in ` WallpaperPickerActivity . java ` to improve clarity by using a more descriptive
updated multiple Java files for consistency and clarity to enhance maintainability and readability of the codebase
added a call to setRequestTimeout in RaftServerConfigKeys . Rpc to enhance request timeout configuration for improved performance
updated logging level from error to debug in TsFileResourceManager . java and modified test cases in ResourceManagerTest . java to improve error handling and
added system properties to setModelSource and setModelSource methods in MavenModuleLoader to ensure proper configuration of system properties
added READINESS _ CHECK _ OK _ CALLS and READINESS _ CHECK _ BAD _ CALLS metrics to ServerMetrics to
add support for animatedtorch model in blockanimatedtorch .
added null check before closing the writer in FileHistoryCache . java to avoid potential NullPointerExceptions when the writer is not initialized
updated HiveConf initialization to use a new method for retrieving Hive configurations from a specified directory to ensure compatibility with the new Hive configuration directory structure
added a new link to " Muting Users " in FeaturesActivity . java to provide users with a specific Muting Users link
added a property to set the jdk . reflect . useDirectMethodHandle to false in System . java to disable direct method handles during reflection initialization
hbase - 16465 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ hotfix ] [ yarn ] remove env _ flink _ plugin _ dir parameter from yarnclusterdescriptor
updated method calls from ` getPronunciations ( word , null ) ` to ` getWord ( word ) . getPronunciations
removed unnecessary newline characters in JsonUtilsTest . java to improve code readability and maintainability
added an extra data entry for the tweet ID in both TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to ensure that the
added a warning log message when the underlying ring buffer data leak in MessageRunner . java to provide clearer diagnostics when a topic is lost
throw an ioexception instead of an ioexception if no class find to analyze .
replaced ` Key ` import from ` Key ` to ` PublicKey ` in ` KeyFetcher . java ` to ensure compatibility with the latest security features and
added a new boolean variable ` isIncompatible ` and updated its usage in ` DLNAResource . java ` to ensure that the DLNA
updated the method signature of ` createAccount ` to use ` AccountCreateContract ` instead of ` Account ` to enhance the functionality of the account creation
pdfbox - 4071 : do n ' t throw an exception if there be no range
( chore ) camel - aws2 - mq : fix wrong rollback cause in test
updated the ` enableOffHeapFormat ` variable to true and modified the default value for ` DEFAULT _ STAR _ TREE _ FORMAT _ VERSION
updated the title assignment logic in FeedUpdateService to ensure that the title starts with a maximum of 2048 characters to improve accuracy in title display by
initialize the previewPanel variable and update related logic in JColorChooser and BasicColorChooserUI classes to ensure the previewPanel is initialized correctly and improve
change log level from info to debug in DefaultBuildExtensionScanner . java to improve logging granularity and reduce log verbosity
added null check for reusableBitmap before assignment in AndroidTileBitmap . java to avoid potential NullPointerException when reusableBitmap is null
added ` layoutParams ` field and a getter method for it in ` FakeView ` to provide access to the layout parameters of the view
added a check to throw an IllegalStateException when a Cursor is already closed to ensure that an IllegalStateException is thrown when a Cursor is already closed
pdfbox - 4071 : do n ' t create a new pdf page if it have no parent .
added JUnit @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready for execution
added a private String field ` ts ` and its getter / setter methods to the ` Message ` class to provide access and setter for the `
refactored exceptionmapper to use a separate utility class to improve code readability and maintainability
changed the access modifier of the AbstractExecutor class from package - private to public to allow access to the class from other packages
[ isochrone ] refactor removelegacyparameters ( ) to removelegacyparameters ( )
updated test class visibility from public to package - private in multiple test files to enhance encapsulation and improve code readability
refactor CSRF assignment into a separate method ` setCSRF ( request ) ` to improve code readability and maintainability by encaps
updated conditional checks for ` shadowLoader ` and ` shadowClassLoaderClass ` in ` EclipseLoaderPatcherTransplants . java ` to ensure
rule sheet parser : add numeric disable flag to rule sheet parser
changed log level from info to debug for default value logging in HiveConf . java to improve logging granularity by avoiding unnecessary info logging
update joystick handling in Lwjgl3Controller and Lwjgl3ControllerManager classes to enhance connection management and ensure only active joysticks are tracked
updated import statements in WeldFactory and WeldFactoryTest from ` cucumber . api . java ` to ` io . cucumber . core . backend
refactor code to use HostDatabase for saving port forwards to improve readability and maintainability of the code
added functionality to manage the ` shouldSnapshotData ` property in ` GlobalConfiguration ` and updated related classes to utilize it to ensure snapshot data is
refactored the creation of PersistableBundle and JobScheduler in SyncedFolderObserver . java to improve code readability and maintainability by
refactor LocationMarshaller to improve location handling to enhance code readability and maintainability
refactor touch event handling in StatusBarTouchController and OtherActivityInputConsumer to improve code readability and maintainability to enhance code readability and
removed the ` VectorReaderImpl ` interface and updated its implementation in ` VectorReaderImpl ` to simplify the code structure and improve maintainability
updated import statements from ` ArgumentMatchers . any ` to ` Matchers . Matchers . any ` across multiple test files to align with the
updated the ` PathSourcePath ` class to use ` getRelativePath ( ) ` instead of ` getRelativePathName ( ) ` for consistency to improve
refactor RecordReader classes to use RecordReaderConfig instead of RecordReader to improve clarity and maintainability of the codebase
added a null check for the extractor before iterating through annotations in ControllerMethodInvoker . java to avoid potential NullPointerExceptions when the extractor is null
cloudstack - 10265 : fix secondary storage for account and domain in volume api
add Potionshiftevent to the guiscreenevent to make it easy to interact with potion shift .
added a deprecated constant COLD _ READS _ TO _ OMIT _ KEY and updated its usage in SizeTieredCompactionStrategyOptions . java
added a call to leech . stop ( ) in ClientTest . java to ensure proper resource management and prevent potential memory leaks
[ issue # 116 ] fix the issue that popmessageprocessor do n ' t report the message count when retry be false
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
added an @ Ignore annotation to the ShadowDateUtilsTest class to temporarily disable the test for a moment
refactor MongoReactiveAutoConfiguration and related classes to NettyDriverMongoClientSettingsBuilderCustomizer and NettyDriverMongoClientSettingsBuilderCustomizer to
added upgrade request handling in UpgradeConnection and corresponding tests in ClientConnectTest to ensure proper handling of upgrade requests and response
added timeout functionality to AndroidImplementation to enable customizable timeout settings for better user experience
removed ` RpcUtils . getRepositoryMemberPermissions ` from ` getUserAccessPermissions ` and ` getTeamAccessPermissions ` methods in ` GitblitClient
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to validate SQL parsing and deparsing of quoted cast
updated assertions in Misc . java to check if the file is a root directory and added a method to determine if the file is writable to ensure
added logging capabilities and refactored executor selection logic in FixedThreadExecutor . java to improve thread management by utilizing dynamic group and group configurations
added null check for the field in AbstractChangeGenerator . java to prevent potential NullPointerExceptions when field is null
replaced ` CasEventListener ` with ` InitializingBean ` in multiple configuration classes to ensure proper initialization of event listeners in the configuration
refactor animation cancellation logic into a separate method ` endAnimation ( ) ` to improve code readability and maintainability by encapsulating the
added a close method to the DeflaterOutputStream constructor to ensure proper resource management and prevent potential memory leaks
added a new file ` gsp001 . java ` that tests the ` getSystemPropertyAgentOnLoad ` method to retrieve system properties at early phase
camel - 14284 : camel - core - camel - bean - inject - inject - bean - bean - bean - bean - bean - inject
jme3 : add read and write capability to cameranode and cameracontrol
refactor PopupNotificationPanel to use SwingUtilities . getWindowAncestor instead of JWindow for popup window management to improve code readability and maintainability by
replaced instances of NoInstanceException with InferenceException in Infer . java to simplify exception handling and improve code clarity
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the feature value of the ` featureValue `
changed the parameter type of the ` after ` method from ` int ` to ` long ` in the ` after ` method from ` int ` to
added ` OnBuild ` and ` ExecutionDriver ` fields with corresponding getter and setter methods in ` ContainerConfig ` and ` Info ` classes to enable
added a conditional check for RTL before setting icons in Toolbar . java and FlowLayout . java to ensure icons are only set when the target is
added a boolean flag ` enablePositionIncrements ` to ` StopFilterFactory ` and modified the return statement to use it to enable position increments
updated EmailsTest and SystemErrorEmailReportTest to use a private InternetAddress instance instead of a hardcoded value to improve code readability
added a new boolean variable ` mTryShareAgain ` and initialized it to false in ` FileActivity . java ` to ensure that sharing behavior
refactor JansiNativePty . java to use a dynamic configuration option for using TTY names based on user properties to improve flexibility in managing
refactor TransactionCapsule initialization to use a variable ` bytesSize ` instead of ` bytes ` to improve code readability and maintainability by
replaced direct calls to ` await ( ) ` with ` Awaitility . await ( ) ` in ` Issue410Tests . java ` to
updated API URLs in EaseeBindingConstants . java to use private URLs instead of hardcoded URLs to improve code maintainability
updated sleep duration in KafkaIOIT . java and added startup attempts in kafkaContainer . withStartupAttempts ( 3 ) to improve responsiveness and
updated the method signature of ` hasJsonPath ` to use ` is ( itemName ) ` instead of ` anyOf ( itemName ) `
added SSL trust handling and SSL context initialization in OkHttp . java to enhance security by trusting client and server certificates
replaced ` mA11yLongClickListener ` with ` buttonView . onButtonLongClick ` in ` NavbarButtonsViewController . java ` and
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use byte arrays instead of byte arrays to
added nullable fields for stdout , stderr , and stderr in ShellStep . java to ensure that the working directory is not null to avoid potential NullPointerException
[ hotfix ] [ test ] increase timeout for asyncappendertest
modified the ` escapeDatabaseObject ` method to accept an additional ` objectType ` parameter and adjusted its usage accordingly to enhance the handling of database objects
added a boolean field ` inputChanged ` and modified the logic in ` MaterialRenameDialog . java ` to check if the material title is changed before
added a new test method ` setState ` to ` ShadowDisplayTest ` and implemented the ` setState ` method in ` ShadowDisplay ` to ensure correct
[ geos - 4071 ] add support for direct invocation service in dispatcher .
added handling for GWT key codes " ^ x " and " ^ y " in GlobalKeyDispatcherW . java to support additional key codes for
updated SQL query conditions in PgDatabaseMetaData . java for compatibility with different server versions in PgDatabaseMetaData . java to ensure compatibility with Postgre
[ java ] fix npe in queuechannel . getmessage ( )
refactor ` getPathsFromResource ` method to use ` URI ` instead of ` String ` to improve code readability and maintainability by standard
added support for handling JENKINS _ NODES _ SUFFIX in the CollectorServer class to ensure accurate tracking of Jenkins application URLs
refactor attribute resolution logic in HeadersBeanDefinitionParser and add tests for handling secure headers to improve code readability and maintainability by encapsulating
[ iotdb - 4071 ] fix eofexception in protobuflogreader . close ( )
refactor destroyRegistries ( ) and destroyMetadataReports ( ) methods in DefaultApplicationDeployer and NacosRegistry classes to ensure proper
camel - mybatis : fix switch / cases indentation issue with camel - MyBatis
updated GoAwayGenerator , GoAwayGenerator , GoAwayBodyParser , and GoAwayGenerateParseTest to handle different SPD
added a print statement for the " BadCredentials " type in the AuditEvent class and updated the JSON object handling in AuditEventTests . java to
added bounds checking for ` a ` float ` in ` Interpolation . java ` to ensure ` a ` float ` is non - negative to prevent
fix typo in forgeworldedit . getdefaultpath ( )
updated the way DxExecutable is added to the builder in DxStep . java to improve code readability and maintainability by using a variable
added assertions to compare instances of PointRangeQuery in TestPointQueries to ensure correct comparison of lower and upper points in PointRangeQuery instances
hbase - 14284 testhfilecleaner : fix testhfilecleaner . testarchivedhfilefilecleaner . testarchive
added a check for file name comparison before setting the file label in ReceiveFileConversationComponent . java to ensure the file label reflects the correct file size
removed the throw statement from JedisClusterCommand . java to streamline the code by eliminating unnecessary exception handling
[ hotfix ] [ table - planner - blink ] disable chaining strategy in rowtimeminibatchassgineroperator
updated ` RegExpBasedFilterInvocationDefinitionSourceEditor ` to use ` PathBasedFilterInvocationDefinitionMap ` instead of ` RegExpBasedFilterInvocationDefinitionMap
updated the initialization of HashMap and QMapReadSequentialKeyBenchmark , QMapReadRandomKeyBenchmark , and QMapWriteBenchmark classes to use a
added a new HashMap instance for G _ SCH _ B in HybridPlotWorld . java to initialize the G _ SCH _ B map
added checks for empty fields and refactored identifier handling in GroovyEngine . java to improve robustness and maintainability of the code
do n ' t set drawable to false if the number be n ' t a drawable .
added SERVER _ READ _ SOCKET _ TIMEOUT and SERVER _ TCP _ KEEP _ ALIVE configuration options to HiveConf and Hive
renamed the method ` getRenameEmptyFiles ( ) ` to ` isRenameEmptyFiles ( ) ` in ` FileRenameAction . java ` to
( chore ) camel - ebean - dml : remove unused import
replaced the use of ` java . util . concurrent . ThreadFactory ` with lambda expressions in ` RealtimeSegmentRelocator . java ` to improve
vpc : do n ' t start vpc if create vpc fail
updated windowAlpha calculation to use Math . max instead of interpolatedProgress and modified condition for shapeRevealProgress in FloatingIconView to ensure consistent
updated the fatal message in SecurityNamespaceHandler from version 3.1 to 4.0 to ensure compatibility with the latest Spring Security version
updated multiple Java files related to the ProtoFluentAssertion , IterableOfProtosFluentAssertion , MapWithProtoValuesFluentAssertion , MapWithProtoValues
[ hotfix ] [ runtime ] make field final
added a new file ` TestConfigureUDF . java ` to implement a UDF class for testing UDF configuration to facilitate testing of UDF
updated regex pattern in LogMessageWaitStrategy and added parameterized test cases in LogMessageWaitStrategyTest to ensure correct matching of explicit line endings in
removed ' final ' modifier from logger variables in LOG . java to simplify logger initialization and improve code readability
replace ` updatePurgedShardNodes ` and ` updatePurgedShardNodes ` with ` deletePurgedShardNodes ` in multiple DAO classes
added support for " 17 " and " 17 - preview " language version in JavaLanguageModule to ensure compatibility with the latest Java language features
[ core ] add waitforsynchronousjobtostop ( ) to stop the fileappenderresiliencetest
[ hotfix ] [ runtime ] fix nullpointerexception in volatilereadnode
added a new method ` getSteps ( ) ` to the ` SimpleJob ` class and modified the ` getStep ( stepName ) ` method
removed public fields from ` fromBase58 ` , ` toBase58 ` , and ` toBase58 ` in ` TronJsonRpc `
refactor currency pair creation logic in BitstampAdapters . java to improve code readability and maintainability
updated the ` Measurement ` instantiation to use ` baseTimeUnit ( ) ` instead of ` TimeUnit . NANOSECONDS ` in ` Long
[ flink - 26464 ] [ table - planner - blink ] do n ' t use hashpartitioner in reducebykey
changed the type of color values from String to CharSequence and updated color handling logic in HostEditorActivity . java to improve type safety and simplify color handling
rename ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` across multiple files to improve clarity and consistency in naming conventions
added a constant MAX _ TWEETS _ IN _ CONVERSATION and updated the condition in ExpansionViewHelper . java to ensure
increase refresh interval from 1 to 2000 in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow more time for refresh operations
[ java ] add test for persisted tail page for deleted tail page
fix findbugs warn in glowserver . getimplementationtitle ( )
added a new ` grow ` method to the ` DataIO ` class to improve code readability and maintainability by encapsulating the grow
removed unused import of DataOutputStream in GdxSetup . java to streamline code by eliminating unnecessary dependencies
added a method ` getSubmittedFileName ( ) ` to the ` AttachmentHttpBinding ` class to retrieve the submitted file name to provide access to the
added markReadForLoad ( ) method to LauncherFragment . java to ensure proper loading of data in the UI
added ` ClassNotFoundException ` to the ` main ` and ` instrumentJar ` methods to handle both ` NegativeArraySizeException ` and `
added checkForSpillPossibility method to HashAggTemplate . java to ensure proper error handling for out - of - memory operations
changed method calls from ` getDocStoreSegment ( ) ` to ` dsName ` in ` IndexWriter . java ` to improve code clarity and
added a default name format for SAML name IDs in SamlProfileSamlNameIdBuilder . java to ensure proper handling of supported name formats
added redirect functionality and error handling in ChangePasswordPage . java to improve user experience by preventing the password change from being aborted
removed an unnecessary semicolon in Deadlock2 . java to improve code readability and maintainability
[ java ] add getmaxidletime ( ) method to nioreceivermbean
deleted the FontScalingTest . java file to the functionality is no longer needed in the project
updated RRD4jPersistenceService to use filterBeginDate and filterEndDate instead of filter . getBeginDate and filter . getEndDate ( )
added checks to return early if numVectors is less than zero to prevent unnecessary processing when numVectors is zero
updated test imports from JUnit 4 to JUnit 5 in ExecutableRefTest . java to use JUnit 5 Assertions instead of JUnit 5
added null checks before setting view and glassPane in JLayer . java and created a new test class bug6994419 . java to ensure
camel - 14265 : camel - wiretap - add support for wiretap expression in camel - core .
changed the access modifier of the setAction method from public to protected to allow access to the setAction method from other classes
add planner . enable _ topn option for pushlimittotopn
[ java ] remove unnecessary ` ` aerondirectoryname ' ' call in test
fixed - rbatch . execute ( ) method do n ' t work if the command be queued . # 1232
updated the ` getConfVarInputStream ` method to use ` FileOutputStream ` instead of ` ByteArrayOutputStream ` and replaced ` LoopingByteArrayInputStream `
updated model creation to use criteria . getDevice ( ) instead of Device . defaultDevice ( ) to ensure the model is created based on the criteria
updated onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to enhance menu item selection functionality for better user experience
updated the CertificateValidator class to improve certificate validation logic to enhance security and maintainability of certificate validation
updated the path for the home directory to use " hawtio . dirname " instead of " hawtio " to ensure the correct directory path
added a check for empty comments and a return value of SINGLE _ SPACE in the Space class to ensure proper handling of whitespace characters in the
changed ` mClosed ` , ` mNativeDict ` , and ` WordsSQLiteConnection ` fields to be volatile in multiple classes to ensure
removed printStackTrace ( ) method call from ContextHandler . java to streamline error handling by eliminating unnecessary stack trace printing
refactor CustomItemDropTest to extend BaseTest and update related imports to improve test organization and enhance test coverage
added ` ifNotExists ` functionality to the ` DDLTask ` , ` DDLSemanticAnalyzer ` , and ` AddPartitionDesc ` classes
refactor byte reading logic in NfsSecondaryStorageResource . java to improve readability and efficiency to enhance code readability and maintainability by reducing
[ java ] remove controlrequeststreamid from EchoServiceNode and BasicAuctionClusteredServiceNode to simplify the code and improve readability
added spatial operator support to the CapabilitiesTransformer and corresponding test cases in GetCapabilitiesTest to enhance spatial support capabilities for spatial queries
added import for LuceneTestCase and annotated BasicDistributedZkTest with @ AwaitsFix to mark the test as awaitsFix as known to
added a preface match check in Http11InputBuffer . java to ensure proper handling of pre -face scenarios in the request processing logic
change the default value of isIngressExclusive from true to false in AeronCluster . java to ensure that the cluster is only considered in exclusive mode
hbase - 11717 add miss cache key for hfile . block . cache . size and hfile . block . cache . ioengine
added running record counting functionality to JSONRecordReader to track the number of records in a file
added logic to filter out year entries from merged items in CategorizationFragment . java to ensure that items are processed correctly after a specific year
updated drawColor method parameters in CacheableTextView , CellLayout , and HolographicOutlineHelper to use mode . CLEAR instead of 0x00000000
added a check for OpenGL version availability in the render method to ensure compatibility with OpenGL ES version
set the actioncontext to null if the invocation context be not set .
updated the ` addInsertIntoTable ` and ` isInsertIntoTable ` methods to include a ` dbName ` parameter and modified the ` isInsert
added a connection timeout configuration using TimeUnit in TestConnections . java and changed the count variable to be final in StubConnection . java to ensure proper connection
added multiple calls to ` assertQuerySucceeds ` for various percentile queries in ` TestHiveAggregationQueries . java ` to ensure
updated DEFAULT _ IDLE _ TIMEOUT from Duration . ZERO to Duration . DEFAULT _ IDLE _ TIMEOUT and modified timeout handling in WebSocketChannel
updated the method to retrieve shares from the user ' s account instead of the user ' s account name to ensure compatibility with the user ' s account
updated generic type usage in Inet6Address . java and added null check for scope _ id _ set in Inet6Address . java to improve type
refactor PlaybackControlView to use setButtonEnabled instead of enableView and update button visibility logic to improve code readability and maintainability by
updated method parameters from ` this ` to ` id ` in ` Session . java ` and ` Token . java ` to improve clarity and consistency in
updated method call from ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java
updated the ` UseExceptionProbability ` variable from ` true ` to ` ____ ` in ` GraalOptions . java ` to enable exception probability
updated the newPlateColor assignment logic in PredictedAppIcon . java to handle themed icons to improve visual consistency by using a more
guacamole - 102 : refactor mysqluser init method to accept username , password , and salt
added " centre " alias to the aliases list in Middle . java to enhance the functionality of the Middle class
added an import statement for DirectUpload and changed the access modifier of DirectUpload from package - private to public to allow external access to DirectUpload instances
added space settings for left , right , and right axis in BarChartActivity , BarLineChartBase , and YAxisRenderer classes to ensure consistent
added support for Java ABI support in AndroidLibraryDescription and JavaLibraryDescription to enhance compatibility with Java ABI - related features
added operationEventStatusType parameter to OnlineHubService and initialized services list in CompositeLogService to ensure proper handling of operation events in the service
added logging for parameter annotations and modified visibility annotation handling in DexAnnotation . java to improve debugging capabilities and ensure proper visibility annotations are displayed
[ java ] rename @ startbundle and @ finishbundle to @ setup ( ) and @ teardown ( ) in jmsio . java
updated the ProcessBuilder initialization to use a classpath variable instead of a hardcoded path to improve clarity and maintainability of the process creation process
updated documentLoader loading logic to use " res " instead of " values " for Android to ensure consistent file path handling across different operating systems
[ hotfix ] [ table - common ] remove unnecessary ' this ' keyword from dataset . minby ( int )
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
updated error message formatting in ShouldHaveMessage . java and added a new test method in ShouldHaveMessage _ create _ Test . java to improve error
fixed - redisson - jcache . close ( ) method throw illegalargumentexception when use jcache . close ( )
[ activiti ] reduce log level when a command context be not a technical exception
added a semicolon to the ALPNClientConnectionFactory initialization to ensure proper initialization of ALPNClientConnectionFactory
update entitypropertiespacket to use instance . basevalue instead of instance . getvalue ( ) .
use thinghandlerhelper instead of thingstatus . offline
increased the timeout duration for countDownLatch from 500 milliseconds to 5 seconds in multiple test files to improve responsiveness by allowing more time for latch to
change log level from info to debug in lightthinghandler .
fix asyncjobmanagerimpl to start the asyncjobmanager thread pool if the db . properties be not set .
updated exception handling and error messages in Reporter . java and ReturnsSmartNulls . java to improve clarity and consistency in exception messages
changed the parameter type of the generate method from Frame to DataFrame in DataGenerator . java to improve code clarity and reduce unnecessary type casting
updated multiple module - info . java files for consistency and clarity to improve maintainability and readability of the codebase
added a check for non - empty physicalColumnNames in OrcPageSourceFactory . java and created a new test method in TestHiveFile
added mixPlay method call in Engine . java to enhance functionality by allowing mixing of audio inputs
refactor JComponent and SynthTextPaneUI classes to improve code organization to enhance maintainability and readability of the code
fix a bug in the QRCodeBlackBox1TestCase , QRCodeBlackBox1TestCase , and QRCodeBlackBox2TestCase
simplified the condition for checking leadingIncludePaths in PreprocessorDelegate . java to simplify the logic for determining leadingIncludePaths
fix nullpointerexception in stringtemplate . isvectormultiplication ( )
add find and find criteria to the list of element in selenideelementproxy .
[ java ] set sample rate to 48000 when format . no _ value be set to false .
make xssfname . getreference ( ) and xssfname . setformula ( string ) final so that it can
updated the calculation of the target long value from 60000 to 90000 in HighDimensionsTest . java to improve accuracy of the target value in the
fix a bug in simpletypegt . parse ( string , string , string , string , string , string , string , string , string )
added a new test class ` ClassPathXmlJobRegistryContextTests ` for verifying job location in the ` ClassPathXmlJobRegistry ` class
changed the data type of ` mHistoricTimes ` from ` float [ ] ` to ` long [ ] ` in ` MotionPauseDetector . java
camel - 12320 - camel - restlet : deprecate the restlet endpoint and mark it a deprecate .
remove unused method showout ( ) from logendpointbuilder
refactor the ` submitTraceEvent ` method to use a dedicated ` writeChromeTraceMetadataEvent ` method to improve code readability and maintainability
added status checks before adding limit orders in HuobiAdapters . java to ensure proper handling of canceled and REJECTED orders
added pixel offset calculations and validation in LCMSImageLayout . java to ensure correct image layout and improve error handling for invalid image layouts
refactor timestamp handling in Event and JrubyEventExtLibrary classes to improve clarity and consistency to enhance code readability and maintainability by standardizing
added a check to return the resource alias if the path ends with " / " in ContextHandler . java and created a corresponding test in WebApp
updated ScriptFunctionImpl to use " TYPE _ ERROR _ THROWER _ GETTER " instead of " TYPE _ ERROR _ THROW
rename variable ` amt ` to ` scrollAmount ` for clarity to improve code readability and maintainability by using a more descriptive variable
fix npe in graphdecoder when caller loop scope be null
updated import statements in SniperPrettyPrinterJavaxTest . java to use SniperJavaPrettyPrinter and SniperJavaPrettyPrinter
refactor URLOutputStream initialization to use a try - with - resources statement for better resource management to improve code readability and maintainability by using a
added Entity annotations to Mail . java to enable entity management for Mail objects in the application
updated default values and command parameters in Main . java from false to true and added support for tablespace functionality in the application
added getter methods for metaDataBuffer , valuesBuffer , and valuesBuffer in CountersReader . java to provide access to the metadataBuffer , valuesBuffer
added a boolean flag ` hasReadNonEmptyFile ` to manage the state of ` container ` and ` fieldVectorMap ` in ` ScanBatch
updated StringSubject to handle custom names in failure comparisons and improved test assertions in StringTest to enhance robustness by providing clearer error messages when
added a regex pattern for library names and updated the conditional logic in LibUtils . java to improve readability and maintainability of the code
replaced ` ClassNotFoundException ` and ` NoClassDefFoundError ` with ` Exception ` in ` JrtJavaBasePackages ` and ` PackageHelper
hbase - 16464 avoid write stale file system in safe mode ( sergey shelukhin )
updated error message formatting in TranslatingJavacPhaseTracer . java to include class and message to improve clarity of error messages for better debugging
remove defaultplugincache . getplugindescriptor ( ) that be no longer need .
[ jabber ] do n ' t dispatch presence status event if the parent provider be not available .
refactored the ` withResourceAndParams ` method to ` withResourceAndParams ` and updated its usage in ` ResourceMethodTest ` to
added a new file ` AccountInfoFetchIntegration . java ` to test the fetching of account information in the BTCE exchange to ensure that the
added mouse wheel functionality to VDUInput , vt320 , and TerminalView classes to enhance mouse wheel functionality for better user experience
use net . java . games . input . librarypath if needjinput be true
removed the deprecated ColumnHstore annotation and updated imports in AnnotationFields , AnnotationFields , DeployCreateProperties , and DeployCreateProperties to
add skin _ SKIN _ FLAGS to the metadata in GlowPlayer and its corresponding test in MetadataIndexTest to ensure proper handling of skin
replaced RequestFieldMatcher with SLF4J Logger for logging in LoadBalancerWithServiceTests . java to improve logging capabilities by utilizing SLF4
[ java ] do n ' t create simpleentryview if there be no member in the cluster .
updated the way the OS version is retrieved from ` System . getProperty ` to use ` AccessController . doPrivileged ` for improved security to enhance security by
refactor file suffix handling in TemplateEngineFreemarker to use a configurable file suffix to improve flexibility and maintainability of the file suffix configuration
updated hash code calculation in SelectMessageQueueByHash . java and added new test cases in SelectMessageQueueByHashTest . java to improve code
refactor ToolbarPanel to use AnimationCallback for improved animation handling to enhance UI responsiveness and responsiveness of the dock panel
refactor binding logic in StyledTextAreaVisual to use conditional binding to improve code readability and maintainability
updated PrebuiltAppleFrameworkDescription , CxxBinaryDescription , CxxGenruleDescription , and CxxGenruleDescription to use Cxx
replaced ` SimpleParameterAccessor ` with ` ParameterAccessor ` in multiple classes to standardize parameter accessor usage across the application
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to prevent potential NullPointerException when setting the password attribute
add array . newInstance ( byte [ ] , string [ ] ) to datautilities . defaultvalue ( )
updated SSL engine creation logic to use hostName instead of hostAddress to ensure proper handling of null addresses and avoid potential NullPointerExceptions
[ flink - 24424 ] [ test ] fix testfstabledescriptors . testcachehits ( ) to use > = instead
do n ' t delete a cookie by path in webexplorerdriver . deletecookie ( )
added a boolean flag ` mHasEndedLauncherTransition ` and modified logic in ` AbsSwipeUpHandler ` and ` RecentsView ` to
added ` < meta charset = " utf - 8 " to the HTML header in ` HTMLListWriter . java ` and ` HTMLWriter . java
javadoc improvement : clarify impact of indexwriter ' s autocommit flag on indexreader ' s iscurrent method
updated the maximum length of HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 in multiple classes to
updated the ` add ` method in ` BasicComboBoxUI . java ` and added a new class ` bug6337518 . java ` to
refactor TestRandomAccessBuffer class for improved performance to enhance performance and maintainability of buffer operations
refactor UserInfoActivity class to improve code readability to enhance maintainability and facilitate future updates
added HomeContentProvider imports and updated broadcast notification logic in multiple service classes to ensure proper handling of content URIs during broadcast updates
added methods to handle pressed and focused states in BubbleTextView and Launcher classes to improve the responsiveness of the BubbleTextView based on
updated the ` getFallbackResponse ` method to include an ` Throwable error ` parameter across multiple classes to enhance error handling by providing a clearer error
removed the conditional check for ` env . _ compile _ only ` in ` DumpBytecode . java ` to simplify the condition for better readability
fix nullpointerexception in channeluri . gettags ( )
updated regex special characters in JAVA _ REGEX _ SPECIALS and modified test cases in TestSqlPatterns to improve regex matching accuracy and ensure
added a new constant ` KEY _ ACTION _ BAR _ TITLE ` and updated action bar title handling in ` FileActivity ` and ` File
updated method to use ` Iterables . getLast ( convertedElements ) ` instead of ` Iterables . getOnlyElement ( convertedElements ) ` to
updated the time zone from " * " to " 0 " in the CleaningService class to ensure proper handling of time zones in the cleaning service
added partition validation logic to the TransactionalValidationListener class to enhance table structure validation for partitioned tables and improve error handling
updated ReplicationHandler and SnapPuller classes to enable polling functionality to improve performance and maintainability of polling functionality
changed the data type of generated keys from int to long in ShadowSQLiteDatabase . java and added new test cases in SQLiteDatabaseTest . java to
reformatted the return statement in SimpleReferenceCache . java to improve code readability and maintainability
[ hotfix ] [ test ] fix typo in test
camel - 14284 : camel - webclient should set stoptimeout to 0 when create web socket client
deleted the HttpTestAccount001 . java file to the file is no longer needed for the project
updated exception handling to catch ` Throwable ` instead of ` Exception ` in ` Dispatcher . java ` and modified test cases in ` DispatcherTest . java
camel - 14297 : camel - cxf : fix the issue that camel - cxf binding do n ' t work with cxf message
added support for the ' ~ ' case in ClientUtils . java to enable handling of special characters in the application
camel - 14284 : camel - slack - add java . time . duration to Slack consumer to allow for a delay of 10 second .
fix block harvesting by fire the harvesting event . close # 119
updated layout parameters in TranscodingTab . java from 4 * to 5 * ( 3 * 3 * 3 * 3 * 3 * 3 * 3
added a new file ` bug8057791 . java ` that implements a list rendering feature using NimbusLookAndFeel to address issue # 805779
updated conditional logic in LambdaToMethod . java and added a new LambdaInterfaceStaticField . java file to improve clarity and maintainability of the code
refactored the creation of subscription managers in RunnerBuilder and added a new test case in RunnerBuilderTest to improve code clarity and ensure
replace length check with null check for ' to ' in ComposeActivity . java to ensure robustness by preventing potential NullPointerExceptions
added a conditional check for dictionary usage in ParquetFixedWidthDictionaryReaders . java and created a new test case in TestColumnReaderFactory .
updated conditional logic in PortraitPagedViewHandler to use dp . isLandscape instead of dp . appsStackedVertically to improve
added a new annotation ` Log ` and ` LogInterceptor ` for logging functionality in the Spring Cloud example to enhance logging capabilities for Spring Cloud AOP
added a condition to check the length of the trace array before adding it to the dump to avoid potential ArrayIndexOutOfBoundsException when trace is empty
refactor CacheGenerator and CacheProvider to use Optional < Implementation > instead of ReferenceType > for improved type safety to enhance code clarity and maintainability
updated the calculation of ReferenceMap to include totalFrameSize to ensure the reference map reflects the correct total frame size
refactor TypesafeConfigurator to improve code structure to enhance maintainability and readability of the code
add camel - karaf karaf karaf karaf karaf karaf karaf karaf feature to
renamed the main method to bug1 , bug2 , and bug3 methods in RFE2891944 . java to improve clarity and maintain
do n ' t encode utf - 8 to utf - 8 in http clientIntroductionAdvice . java
refactor unsupportedPlatformTool to a new class ` UnsupportedPlatformTool ` to improve code readability and maintainability by encapsulating the tool
changed the type of ` loopCount ` from ` double ` to ` int ` and updated the log message to use ` TimeUnit . MILLISECONDS . to
added a ` size ( ) ` method to ` FlightConfiguration ` and its implementation in ` FlightConfigurationImpl ` to provide a way to retrieve the
kieaddressmanagertest , abstractaddressmanagertest , abstractaddressmanagertest , abstractaddressmanagertest , abstractaddressmanagertest , abstractaddressmanager
updated COL _ SPEC and ROW _ SPEC values in VLCVideo . java to correct column specifications and improve layout consistency
updated URLs from " bisq " to " bitsquare " in multiple Java files to ensure consistency in URL references across the application
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker .
updated user configuration directory to use " / . m2 " instead of " / . m2 " and modified file path handling in MBoot .
added a call to glBindBuffer using GL _ ARRAY _ BUFFER in VertexBufferObjectWithVAO . java to ensure the buffer is
refactor ServerHttpSecurity class to improve security handling to enhance security features and maintainability
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests that are not ready for execution
added defaultHeaders map and initialized it in HttpClientProperties and CasCoreHttpConfiguration to enable customization of HTTP headers in the configuration
added userpasswordnotvalidexception and userpasswordnotvalidexception to improve error message for invalid username or password
deleted the NoOpConfigPathGetter . java file to the functionality is no longer needed in the project
replaced ` Codec . base16Decode ` with ` Bytes . fromHexString ( keyHex ) . toArray ( ) ` for signingKey initialization to
replaced CascadedStyle with CSSName and added null checks for float values in FloatUtil . java to ensure proper handling of float values and prevent
[ sparc ] add optaplanner - core . impl . solver . problemfactchange to property .
updated the access modifier of the ` getDefaultHeaders ` method and made it private in ` RestUtils ` , ` WebsocketUtils ` , and `
changed the type of ` enc ` and ` charset ` from ` String ` to ` Charset ` in ` ProxyServer ` and ` Realm `
added a method ` getJobId ( ) ` to ` StepContext ` to retrieve the job ID from the execution context to ensure that the job instance
refactor comparison methods in ExpandableUploadListAdapter and FileStorageUtils to use Long . compare instead of Long . valueOf for comparison to improve code
use debug log instead of error log . error ( ) in jdkhttpclient
updated import statements in LegacyAuthenticationHandlerAdapter . java to use NamedAuthenticationHandler and UsernamePasswordCredentials instead of GeneralSecurityException to improve code clarity and
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other
added a null check for the owner pub key before processing filter data in FilterManager . java to avoid potential NullPointerExceptions when accessing the filter
add bcpginputstream . wrap ( inputstream ) so that it can be use by bcpgkeyring . wrap ( inputstream )
updated DataOutputStream initialization to use BufferedOutputStream and added a try - finally block for resource management to ensure proper resource management and prevent potential memory leaks
added a new test method ` testSelectAll ` to ` TestJdbcDriver2 ` and modified column qualifier handling in ` HiveBaseResultSet ` to
refactor FocusTransitionTest . java for improved clarity to enhance maintainability and readability of the code
updated the import statement for GWT from org . gwtproject . core . client . GWT to com . google . gwt . core . G
added a type check for ` sourceTask ` before initializing ` JobClient ` to ensure proper handling of ` MapRedTask ` instances to avoid potential
removed unnecessary whitespace in HttpInput . java to improve code readability and maintain consistency
refactor color change logic into a new method ` changeComponentColor ` and introduce a ` ChangeListener ` to improve code readability and maintainability
updated the ` hasArg ` parameter from ` false ` to ` hidden ` in ` TaskHelper . java ` to ensure that the parameter is not
[ java ] make failovertimeouttest use exponentialbackoff = false instead of exponentialbackoff
pdfbox - 4071 : close file resource in ccitttfactory . createfromrandomaccess ( )
updated import statements in BoundSql , SqlSource , SqlSource , SqlSource , SqlSource , and LanguageDriver to include DefaultParameterHandler to enhance
fix spill optimization when spill mode be less than the loop depth
added a new file ` MicronautAstBuilder . java ` to process Groovy compilation statements to facilitate the compilation of Groovy scripts in the application
added a ` closeInternally ( ) ` method to ` PgResultSet ` and updated ` PgStatement ` to use ` volatile ` to
change default value of serviceAdvisorType from null to PYTHON to ensure service advisor type is set to PYTHON
refactor resolving logic in GenericDatumReader to use a ThreadLocal for thread - safe access to improve thread safety and avoid potential memory leaks
[ java ] use arraylist instead of collection to avoid arrayindexoutofboundsexception .
replaced ` new byte [ 512 ] ` with ` generateRandomBytes ( ) ` for test assertions in ` SendCoinShieldTest . java ` to
added a method ` setPersonalisation ` to the ` SkeinParameterSpec ` class for setting personalisation based on a date and email address
removed redundant break statements in CodeGenerator . java to improve code readability and maintainability
removed the percent parameter from the scroll method in multiple classes to simplify the scroll logic by eliminating unnecessary parameters
changed the access modifier of the pointer variable from private to public and added reset methods to FlatRecordReader to allow external access to the pointer variable and
rename ContentDigestHistory to BdbContentDigestHistory across multiple files to improve clarity and consistency in naming conventions
do n ' t dump boolean expression if there be no truthy type .
refactor accepts handling in AbstractResource to use a boolean variable for better readability to improve performance and maintainability of the code
added a new boolean variable ` false ` to ` TaskView . java ` to indicate that the method is not needed for processing
added ` isAutoIncrement ( ) ` method to multiple data types in ` CreateTableChange ` , ` BigIntType ` , ` DecimalType `
set errorText to a default value of " Command failed due to Internal Server Error " to provide clearer feedback when a command fails due to Internal
updated imports in DeadListenerTest . java and LocalManagementTest . java , and added VM options in LocalManagementTest . java to enhance test
replaced ` add ` with ` push ` for ` toSimulate ` and ` boosterStatus ` in ` BasicEventSimulationEngine . java
added AJP connector creation and logging in GitBlitServer . java to enable customizable AJP connectors based on user settings
added type conversion logic in TransTypes . java and created a new Intersection03 . java file for testing to ensure correct handling of compound types in
rename the class ` EmbeddingTest ` to ` EmbeddingITest ` to clarify the purpose of the test class
added a native method ` startToolkitThread ` and modified thread creation logic in ` WToolkit . java ` to ensure that the toolkit thread is only
graalvm : add option to compress the bundle content of parallel
do n ' t show the surface if the platform be window .
updated the temporary directory path from " RecordTransformationTest " to " getClass ( ) . getName ( ) " in AbstractRecordExtractorTest . java to
added configuration options for ` fullNodeHttpEnable ` , ` solidityNodeHttpEnable ` , and ` solidityNodeHttpEnable ` in multiple
added a new property ` service ` to ` GoogleCloudFirestoreTicketDocument ` and updated its usage in ` GoogleCloudFirestoreTicketRegistry `
refactor Generate class to improve code structure to enhance maintainability and readability of the code
updated the ` @ ScalarFunction ` annotation and added tests for the ` jsonFormat ` method in ` JsonFunctionsTest ` and ` JsonFunctionsTest
updated BadgeRenderer to conditionally calculate the width based on DOTS _ ONLY flag to ensure proper rendering behavior based on notification count
removed the ` final ` modifier from the ` getConfiguration ` method in ` FreemarkerManager . java ` to allow access to the ` getConfiguration
added a test method to set excluded package patterns in OgnlUtilTest . java to ensure that an exception is thrown when an invalid package name
updated deviceUdid assignment logic to handle both " mac " and " iphone " sdk in AppleTest and IdbRunTestsStep to
updated DefaultHttpClientFilter to use ProduceProcessorManager instead of InvocationType and modified test cases in TestDefaultHttpClientFilter to improve error handling and ensure
added null checks for mScript and mInvokeResetWAR in AllAppsView . java to improve code robustness by avoiding potential NullPointerException
added a boolean flag ` TEXT _ BURN ` and modified conditional logic in ` Utilities . java ` to conditionally set shadow layer based on the
added teardown methods to ` TestColumnAccess ` , ` TestReadEntityDirect ` , and ` TestReadEntityDirect ` classes to ensure proper cleanup
added a parser variable to retrieve the name from the parsers to ensure proper handling of security namespaces in the SecurityNamespaceHandler
updated the fastpath condition in BoundedLocalCache and added a new test for it in BoundedLocalCacheTest to ensure correct handling of cache
modified the ` RawConnection ` interface to extend ` WebSocketConnection ` and added a ` flush ` method in ` WebSocketAsyncConnection ` to enhance WebSocket
added multiple test methods to the SoftAssertionsPerfTest class to ensure proper functionality of assertions in the softly testing framework
added a new error code constant for test failures in PythonRunTestsStep and modified the assertExitCode method in ProjectWorkspace to improve error handling and ensure
added conditional logic to calculate xAdvances in GlyphLayout . java to ensure markup is enabled only when markup is disabled
refactor score assertions in TestBooleanRewrites to use Java Streams for improved readability and performance to enhance code readability and maintainability by
changed the method for retrieving the enclosing class from ` getEnclosingClass ( ) ` to ` getSuperclass ( ) ` in ` TypeHandlerRegistry . java
remove unnecessary cast to playersocketconnection . flush ( ) in updatemanager .
added a boolean flag to manage the removal of onDrawListener in Launcher and LauncherAnimUtils classes to ensure that onDrawListener is only
refactor multiple classes including CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder to improve code organization and maintainability
added wildcard imports for NODE _ CAN _ BE _ ASSIGNED and NOT _ APPLICABLE in ReplicaAssigner . java to
changed the default value of MEDIAPARSERV2 from false to true to enable media validation by default
add support for aop ' s isacceptable ( ) method to the aop proxy writer .
added assertions to verify the existence of a warehouse directory and partition in FolderPermissionBase . java to ensure that the operation correctly verifies the existence of a
do n ' t publish status for provider when the provider be in the wrong state .
updated the randomness calculation in PastelColor . java to use a fixed color base value to ensure consistent color representation across different locales
refactor ScriptEngineFactory class for improved performance to enhance performance and maintainability of the code
refactor image handling in HolographicViewHelper to use original and outline images instead of hardcoded values to improve code readability and maintainability
refactor request method handling in CloudClient to use HttpMethod . fromString for improved readability to enhance code maintainability and prevent potential null pointer exceptions
fix a bug in multiwordpreprocessor . gettag ( string , string , string ) .
removed unused import of IOException in IOChannelUtilsTest . java to streamline code by eliminating unnecessary dependencies
added handling for HivePassThroughOutputFormat in class loading to ensure compatibility with Hive ' s pass - through output format
refactor ChunkListener , AfterChunk , BeforeChunk , and BeforeChunk classes to improve code organization and maintainability
updated the length validation logic in DOMBuilder . java to ensure that the length is within valid bounds to prevent potential ArrayIndexOutOfBoundsException
updated graph visibility logic in ClusteringCoefficient , EigenvectorCentrality , EigenvectorCentralityUI , Hit
camel - 18265 : camel - translate2 - add verification error for unsupported service in a region
added a new file ` PublicStaticInterfaceMethodHandling . java ` that implements ` InterfaceWithStaticAndDefaultMethods ` with default methods to provide a
camel - 14297 : camel - default : add property placeholders to camel - key - selector
replaced instances of ` t instanceof ` with ` ThreadDeath ` in ` LogResolverBean . java ` to improve code readability and maintainability by
refactor multiple security - related classes to improve code organization to enhance maintainability and readability of the codebase
updated JGit version from " 201106090707 - r " to " 201109151100 - r " across multiple files to reflect
[ java ] use clientkey instead of clientid if it ' s not empty .
added support for ` ` transformer ' ' and ` ` methodinvokingtransformer ' ' in spring integration .
updated BACK _ FACTOR from BACK _ FACTOR to REWIND _ TIME and modified duration comparison logic to improve clarity and accuracy
added ` isScrollWheeling ( ) ` method to ` CodenameOneImplementation ` , ` Button ` , and ` JavaSEPort ` classes
updated usage string formatting and improved command usage logging in UtilityCommands and DocumentationPrinter to enhance readability and maintainability of the code
updated the attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in naming conventions
remove crossspacecompactionresource # setseqfiles , setunseqfiles , and unseqfiles in crossspacecompactionselector .
removed duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
refactor rule update logic in ProjectPropertiesModelImpl . java to improve clarity and structure to enhance code readability and maintainability
fix race condition in abstractsootfieldref . getfieldunsafe ( )
refactor elastic meter registry to use a new ` ElasticNamingConvention ` class and add a new ` ElasticNamingConvention ` class to improve
added new methods and imports in IController , TinyGController , and updated BackendAPI to use IController instead of AbstractController to enhance
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to verify rendering of a large horizontal rule to ensure proper
replaced System . out . println calls with TTY . println calls in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to improve
updated multiple Java files for consistency and clarity to improve code readability and maintainability
updated the condition from ` frameLength = = 0 ` to ` frameLength < = 0 ` in ` LogInspector . java ` to ensure that
updated return statements in IntFloatMap , IntIntMap , and IntIntMap to return default values instead of default values to ensure consistent handling of
refactor ImageDownloadService to use a thread - safe icon setting method to improve code readability and maintainability by reducing duplication
added a null check for the registered variable in HandlerRegistration . java to prevent potential NullPointerExceptions when the demand is null
removed the ` hasNextSibling ` method from multiple node classes and updated return statements in ` IeNavigator ` to streamline the code by eliminating unnecessary
added null check for results in RedisDistributedMapCacheClientService . java to ensure robustness by preventing potential NullPointerExceptions
[ hotfix ] [ mobfile ] fix log message when mobfilecache be disable .
refactor ColConvCCMTest . java for improved test coverage to enhance test coverage and maintainability of the code
refactor target and source variables to improve clarity and structure to enhance readability and maintainability of the code
pdfbox - 4071 : add default constructor to pdftextstripperbyarea , a suggest by valerybokov
replaced Float . toString ( ) with a static class X and added a new class X with a static class X to improve code readability and maintain
added a return statement to the GenericFileConsumer class to ensure that the method returns immediately after processing
added a Runnable to the event dispatch to ensure that the delegate is called on the Event Dispatch Thread to improve UI responsiveness by ensuring the event
updated the calculation of ` maxSize ` to use ` getMaxBinaryMessageSize ( ) ` instead of ` getMaxBinaryMessageBufferSize ( ) ` to ensure
update steering value calculations in TestAttachDriver , TestFancyCar , TestAttachDriver , TestFancyCar , and TestPhysicsCar classes to
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` for password comparison to improve security by using ` MessageDigest . isEqual ` instead of
updated JdbcSerDe to use LocalDate and LocalDateTime instead of Date and Timestamp to improve date handling by utilizing localDate and localDateTime instead of
updated version from 2 to 3 and modified metadata handling in ParseData . java to ensure compatibility with version 3 and improve readability
refactor FlywayAutoConfiguration to use ConditionalOnBean for EntityManagerFactoryBean and add a test for custom Flyway configuration to enhance flexibility
added a sorted ( ) method to ClassesImpl . java to ensure the classes are sorted by their order
added a method to retrieve the current Stable state in LauncherStateManager and modified the waitForLauncherCondition method in AbstractLauncherUiTest to improve
refactor SharedInformer class to improve code organization to enhance maintainability and readability of the code
refactor memory and resource scope handling in TestCloseScope0 . java to support version 16 and above to improve compatibility with different Java versions and ensure
updated the test timeout value from 500 to 5000 in AdaptServerSocket . java to allow more time for the test to complete
updated test cases in CaptchaChannelProcessorTests . java to improve test coverage for CaptchaChannelProcessor functionality
added logic to update the own collection in MetadataImport . java to ensure proper handling of collections in the import process
added retry logic for saving registry cache files and updated warning message formatting to improve error handling and ensure proper retry behavior during registry cache file saving
updated the initialization of trackingCFSDir from mergeDirectory to directory to ensure the correct directory is used for tracking CFS
pmd : fix a bug in the unusedimports rule so that the rule do n ' t ignore unused import
added validation to prevent insert overwrite queries on a specified bucketed Iceberg table to ensure that insert overwrite queries are performed on a specified bucketed table
updated SAML configuration assertions in BootstrapTests . java to reflect the correct number of keys in the default SAML configuration to ensure that the legacy SAML keys are
updated method names from ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` in ` Excluder . java ` to improve
replaced synchronized variable ` theAddressie ` with ` addressees ` in the ` getAddressVector ` method to improve code readability and maintainability by
removed unused comments from CommentsParser . java to clean up the code and improve readability
added IOException handling to the ` release ` method in ` IndexWriter ` , ` Lock ` , and ` NativeFSLockFactory ` classes , and
updated package declaration for DataSourceInitializer from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to align package structure
refactor SpelExpressionTransformer and OperatorNode classes to improve operator transformation logic to enhance code readability and maintainability by eliminating redundant checks
updated ByteBuddy initialization to use TypeValidation . DISABLED instead of ByteBuddy to disable the ByteBuddy instance
replaced instances of ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` to simplify type handling and improve code clarity
added exception handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest and modified executeStatement parameters in MySQLTableLock
removed the ` LogFile ` parameter from the ` setSystemProperties ` method and updated its usage in ` LoggingApplicationListener ` to simplify the method
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 11919 .
added new constants for SERVICE _ MAPPING , VERSION _ MAPPING , and VERSION _ MAPPING in ServiceCombConstants and MicroserviceFactory to enhance
change method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` Step . ABOUT _ TO _ BEGIN _
updated DB _ PATH _ REGEX and DB _ PREFIX constants to static in BaseAndroidTestCase and GeocodeHelperTest classes to improve code clarity
updated return statement to retrieve unread count from HomeDataSource instead of numberNew to ensure accurate retrieval of unread count from the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test for JRE JAVA _ 20
added a limit parameter to the ` getAllOrder ` method in ` MarketOrderIdListCapsule ` and updated related logic in ` Wallet
added null check for user in HomePage . java to prevent potential NullPointerExceptions when accessing user settings
updated file handling in LocalFileSystem and added a new test for matching relative wildcard paths in LocalFileSystemTest to ensure correct handling of wildcard paths in the
added minimum width and height settings for instance creation in ComponentBuilders . java to ensure the instance has a valid width and height
added logging functionality and a deprecated method for setting connection manager timeout in CommonsHttpSolrServer . java to improve error handling and provide clearer logging for
added import statement for ExceptionHandler and modified error handling logic in PrintController . java to improve error handling for document creation failures
replaced ` Optional . of ` with ` map ` in ` CrateType . java ` and added assertions in ` RustBinaryIntegrationTest . java
added methods to check if a word is a number and check for numbers with separators in SpellChecker . java to ensure correct handling of numbers with
corrected the spelling of " HelloWorld . message " in the message string to improve code readability and maintain consistency
refactor file handling in FileDisplayActivity to use a dedicated method for loading files to improve code readability and maintainability by encapsulating
added setDaemon ( false ) to ReplicationHandler and improved error handling in SnapPuller to ensure proper resource management and avoid potential memory leaks
corrected formatting in the update method call in StoreCachedTest . java to improve code readability and maintain consistency
updated the constructor of StreamerLoader to accept multiple MaterialHolders instead of a single MaterialHolder to improve flexibility in handling multiple file columns
added Core Library support to DependencyBank . java and updated font generation to include new font files for LibGDX to enhance functionality for LibG
updated RecyclerView pool configurations in AppsContainerRecyclerView . java to calculate recycled views based on device profile and device profile to improve layout responsiveness
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure that building binaries
fix baritone control not cancel if there be no location for the waypoint .
added imports for ParsedNode , ParsedNodeException , ResourceAccessor , and ResourceAccessor in CreateProcedureChange . java to enable proper handling of Parsed
added null handling logic to ` FilterOperatorUtils ` and a corresponding test in ` NullHandlingEnabledQueriesTest ` to ensure proper handling of null values
added validation for Bootstrap method signature parameters in JDynamicInvokeExpr . java to ensure that bootstrap method parameters are valid and provide clearer error messages for
updated the port number in JmsHttpJmsTest from " jms : in " to " http : / / localhost : 9000 /
removed the call to clearFormatters ( ) in CucumberInstrumentation . java to ensure the formatters are cleared before proceeding
changed the type of ` contacts ` from ` List < RegisteredServiceContact > ` to ` List < DefaultRegisteredServiceContact > ` and updated
added a check for workspaceCellPaddingY before adjusting workspace labels to ensure workspace labels are only adjusted when necessary
fix replicationfactortest to use assertrf instead of assertf
llvm : make context state enum configurable for pre - initialization .
removed the @ Ignore annotation from ChaosMonkeyNothingIsSafeTest , ChaosMonkeySafeLeaderTest , and ChaosMonkeySafe
replace RuntimeException with JsonIOException in Gson . java to improve error handling by replacing RuntimeException with JsonIOException
replaced Integer . valueOf ( values [ 0 ] ) with Integer . parseInt ( values [ 0 ] ) in VisualScoreTagTest . java to simplify
updated error messages and path resolution in Copy . java to improve clarity and maintainability of error reporting
updated segment name checks to use a new method for checking low and high - level consumer segment names to improve code readability and maintainability by reducing
added null checks for fragment activities in ShadowFragment and corresponding tests in FragmentTest to ensure proper handling of null activity scenarios and prevent runtime exceptions
updated the return statement in DueDateBusinessCalendar to use the current time instead of the current time to ensure accurate date representation based on the current time
updated the return statement to include " x86 _ 64 - none - linux - android " and " x86 _ 64 - none -
added a method to delete all file files in FileDataStorageManager and integrated it into ManageAccountsActivity and ManageAccountsActivity to
updated the command line option from " - ? " to " - h " in SchemaCrawlerCommandLine . java to improve clarity of command - line options
added a new method ` createSuiteDescription ` to the ` Description ` class and updated the ` equals ` method to use it to enhance the functionality
replaced ` decode ` method with ` decodeBarcode ` method in ` SnapshotThread . java ` to simplify code and improve readability by using a more
removed the ` ImmutableList < String > sources ` parameter from the ` BuckTarget ` constructor and related classes to simplify the constructor and improve code clarity
added unit tests for the GWCZoomContextFinder class to verify the functionality of the GWCZoomContextFinder functionality to ensure correct functionality
added a new constant DEPENDENCY _ TRACKING _ CONFIG _ KEY and a method to enable dependency tracking in JRubyScriptEngine
updated request path check from getRequestURI ( ) to getServletPath ( ) in PromptFilter . java to ensure the correct servlet path is used
[ hotfix ] [ table - planner - blink ] catch duplicate keyspace creation error .
refactor image handling in WelcomeWindow to use BufferedImage and cache dimensions instead of Image objects to improve image management and prevent potential null pointer exceptions
updated tuner configuration handling to use unique ID instead of a hardcoded value to improve clarity and maintainability of tuner configuration management
added HasTests interface to the AbstractShBinaryDescriptionArg and created a new test method in ShBinaryRuleIntegrationTest to enable testing of sh binary functionality
added a condition to include the " db : hsqldb " string in TestFilter . java to enable the use of the HSQLDB database
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
do n ' t throw materializehostexception if there be no stack trace
refactor service loading and exporting logic in GraalServices . java to improve readability and maintainability of the code
added test for duplicate command resolver in aggregateannotationhandlertest
[ flink - 20865 ] [ streaming ] add fine - grained resource management option to stream graph
fix the cave hook not be able to change the state of the world . close # 119
camel - 14265 : camel - ftp - sftp : update doc to reflect the change in the doc .
rename ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
renamed the variable ` useShortNames ` to ` compressPackageNames ` in ` GangliaReporter . java ` to improve clarity and consistency in the
added a check for empty items in AppsContainerRecyclerView to prevent unnecessary processing when items are empty
added a conditional bean annotation for the REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration . java to ensure that the REPORTER
replaced StringBuffer with StringBuilder and added properties handling in XMLLayout . java to improve performance and maintainability of the code
added a method to remove the " responseHeader " parameter from multiple classes to ensure that the " responseHeader " parameter is only removed when necessary
updated ` getPropertyName ` method to use ` getPropertyNumber ( ) ` instead of ` _ id ` and added a new test class ` TestEs
updated the method call to use ` Description . getBuildRuleType ` instead of ` getBuildRuleType ` to improve code readability and maintain
[ java ] modify the hierarchy when remove a method from the scene .
added null checks for disputesPerTradeIdItems and delayedPayoutTxIdItems in TradeDataValidation . java to avoid potential NullPointerExceptions
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` , modified ` DatabaseSchemaCrawler ` and `
wallet : set wallet . getconfidencetype ( ) . setconfidencetype ( not _ sent _ in _ coin ) to not _ in _ chain
camel - 14284 : camel - http - client - add support for ` ` body ' ' and ` ` header ' ' annotation ( #
add condition check to craftinghelper . processconditions ( ) for conditions .
hbase - 17224 addendum log a warning when close a region with an exception occur
refactor length comparison logic in Credential . java to use a variable for better readability to improve code readability and maintainability
[ java ] fix checkstyle violation in clientconductor
updated the ` destroyForcibly ` method to throw ` InterruptedException ` and modified the ` destroyForcibly ` method to wait for the
added support for Oracle Oracle in the MSDB test to ensure compatibility with Oracle - specific database scenarios
camel - 14297 : camel - mail : fix the issue that mailconsumer do n ' t connect to the mail store if the store be
added token management and error handling in the Parser class to ensure that more tokens are processed before proceeding with parsing
added new language enums for " ka " , GREEK , GJARATI , and GUJARATI to the Translate2LanguageEnum
added a method ` getDataFileName ( ) ` to the ` Model ` class and modified the ` Voice ` class to handle different model types to improve
added emailDomain property and its getter / setter methods to LdapIdentityProviderDefinition , IdentityProviderDefinition , and IdentityProviderDefinition classes to allow dynamic configuration of
added configuration properties for read and connect timeouts in the ViewRegistry class to enhance flexibility in managing request timeouts in the application
added a check for non - empty myDeferredConcepts and myConceptLinksToSaveLater before executing the execute method to ensure that deferred concept
added RedisCategory import and annotation to RedisServiceRegistryTests to enable testing of Redis functionality in the service registry
fix finddeprecatedmethods and finddeprecateduses to handle empty type pattern .
added a call to ` super . paintComponent ( g ) ` in ` WaterfallPanel . java ` to ensure proper rendering of the component
removed unused imports from multiple classes to clean up the code and improve maintainability
replaced ` setEventSignature ` with ` setEventSignatureFull ` in ` ContractEventTriggerCapsule ` and added ` eventSignatureFull `
updated the filter condition to check if the file name ends with " _ " instead of contains to ensure that the session ID ends with " _ "
replace clearRect with fillRect and set background color in MapView . java to improve rendering flexibility by allowing customizable background color
refactored the logic for handling invoker compilation errors in PackageBuilder . java to improve code readability and maintainability
removed debug print statements from multiple Java files to clean up the code and improve readability
updated assertions in TestFieldCacheSort to check if score is not NaN before comparing to zero to ensure that the test correctly verifies that the score is
fix nullpointerexception in devicestate . setentitykeys ( )
added zeroTime method to ColumnSnapshotGenerator and corresponding tests in MySQLIntegrationTest to ensure proper handling of zero - time values in database operations
[ java ] rename offerermultisigpubkey and takermultisigpubkey to takerbtcpubkey in contract . java
updated the parameter type of ` vsContext ` from ` Map ` to ` Map < ? , ? > ` in multiple collector classes to enhance
[ drools - 4071 ] fix the issue that the kiecontainer . editsessionmodel ( ) do n ' t update the clock type
updated the initialization of HiveMetaStoreClient to use ' this . conf ' instead of ' conf ' to ensure proper initialization of the HiveMetaStore
added a condition to return early if modalness equals modalness to prevent unnecessary processing when modalness equals modalness
added a new test method ` createFromProfileLevel ` to ` ShadowMediaCodecListTest ` and a native method in ` ShadowMediaCodecList `
fix issue # 5460 : confirm button focus wrong ( # 5460 )
added bounds checking and error handling for width and height in SunVolatileImage , XRSurfaceDataProxy , and XRPMBlitLoops ,
updated the separator character from " . " to " \ u00a0 " in FormatData _ uk . java to ensure proper formatting of the
replaced ` int [ ] ` with ` AtomicInteger ` in ` AsyncStressTest . java ` and ` StressTest . java ` to improve
added BetaFlavour functionality to AchievementsFragment and LeaderboardFragment , and modified progressBar visibility logic in LeaderboardFragment to enhance
added access , name , and desc fields in SearchMethodVisitor . java to ensure proper access , name , and description are used for the search context
added sleep calls for SQLException and InterruptedException in IoTDBInsertWithoutTimeIT . java to improve error handling and ensure proper handling of InterruptedException
removed unnecessary whitespace in DLNAResource . java to improve code readability and maintainability
[ hotfix ] [ table - planner - blink ] fix typo in xmlelement
do n ' t reload scoreboard when txn be acquire
hbase - 18284 use security . getkeymanageralgorithm ( ) instead of context . getstring ( ) .
refactor ` PrimitiveWrapperClassConstructorToValueOf ` to use ` TreeVisitor ` instead of ` JavaIsoVisitor ` to improve code clarity and
added exit ( ) method to handle key events in Blockmania . java to ensure proper handling of key events during keyboard interactions
changed access specifier from PACKAGE _ PRIVATE to NONE in multiple files to ensure consistency in access specifier usage across the codebase
renamed the method ` unHandled ` to ` unhandled ` and updated error handling logic in ` Check . java ` to improve clarity and
updated stripe statistics assignment logic in OrcInputFormat . java to ensure stripe statistics are correctly assigned based on the orcReader ' s orcTail
added a null check for the exception variable in JCache . java to prevent potential NullPointerExceptions during execution
updated nextUrl from HTTP to HTTPS in MyhentaicomicsRipper . java to use HTTPS instead of HTTP to improve security
added command line argument handling to display the current version in the application to ensure the application correctly displays the current version of the current jar
fix typo in papplet . splittokens ( )
added support for default and default rotation settings in ConsoleActivity and TerminalView classes to enhance user experience by allowing dynamic rotation behavior based on user preferences
fix test failure because of wrong cast . hard stuff : ( could be implement well , the hq be use for 2 different type
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerExceptions during execution
camel - 14297 : camel - jolokia - add the ability to specify the class name of the headersmapfactory in the mbean
updated the closing brace in JavaCompiler . java and Diagnostic . java to improve code readability and maintainability
refactor jmsOutboundGateway to implement InitializingBean and introduce JmsOutboundGatewayParser for configuration to enhance flexibility and maintainability of the jms configuration
updated the index used in the expecting method from i + 1 to i2 in ArrayFunctions . java to ensure the correct index is used for array
updated script engine initialization logic and added error logging in AbstractScriptProcessor and InvokeScriptedProcessor to improve error handling and ensure script engine is available before
updated references from ` StatementHandler ` to ` StatementHandler ` in ` PooledConnectionImpl . java ` and added a new test in ` ConnectionPool
[ hotfix ] [ cassandra ] fix flaky test in cassandraiotest
changed log level from error to warn in AtomicRemainder . java to improve logging clarity by using a more descriptive log level
[ hotfix ] [ table - planner - blink ] remove unnecessary sort in compactioncontroller
fixed - rblockingdeque . toseconds ( ) method return negative value of 1 second instead of unit . toseconds ( )
removed unnecessary string concatenation from printMap calls in JobInspectCommand . java to improve code readability and maintainability
refactor Engine class to improve code structure to enhance maintainability and readability of the code
replaced ` Stream . of ( ) ` with ` entrySet ( ) . entrySet ( ) . map ( ) ` in ` ChildHolder . java `
[ issue # 13636 ] disable the aclclient rpc hook ( # 11919 )
corrected the spelling of " numIndexDims " to " numDataDims " in the condition from " numIndexDims "
[ hotfix ] [ table - planner - blink ] do n ' t print stacktrace in case of exception .
updated the parameter type of the ExpressionNode from funN to lt in the ExpressionNodeEvaluator to improve clarity and functionality of the expression evaluation process
removed the ` public ` access modifier from the ` verifyIdsAreStable ` and ` getNodeId ` methods in ` NodeIdAccessor . java
cloudstack - 10284 : improve error message when create snapshot policy and vm for it
removed the ` public ` access modifier from the ` write ` and ` clear ` methods in ` ItemWriter . java ` to restrict access to the
updated the thing name from " test " to " test " in RoombaHandlerTest . java to improve clarity and consistency in naming conventions
added a ` toString ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest `
replaced FSDirectory with RAMDirectory in TestNorms . java to improve performance by using a more efficient RAMDirectory instance
added a conditional check for the line height before calculating the height of the rectangle buffer to ensure that the line height does not exceed the defined maximum height
refactor WalletAppKit class to improve code organization to enhance maintainability and readability of the code
remove hatjs _ nashorn from oqlengineimpl . getinitstream ( )
added a JCheckBoxMenuItem variable and updated menu item removal logic in ChatTransportSelectorBox . java to improve code readability and maintainability by using a
added resolve and replace methods in AbstractDataImportHandlerTest , Context , and ContextImpl classes to enhance functionality for resolving and replacing variables in the context
fix nullpointerexception in preferencespayload # setbsqblockchainexplorer ( )
added attribute management functionality to StandardSession and Session classes to enhance session management by allowing attributes to be stored and removed
added assertions to validate the ` getPlainBean ( ) ` and ` getPlainBean ( ) ` methods in ` TestDbJson _ List .
updated the array initialization in MonotonicAppendingLongBuffer to use initialPageCount instead of pageSize to ensure accurate calculation of averages based on
refactor BatchCommandLineLauncher class for improved readability to enhance maintainability and readability of the code
added DataSource and JdbcTransactionManager bean implementations in BatchMetricsApplication . java to enhance database management capabilities in BatchMetricsApplication . java
changed the implementation of GlowrootLogHttpService from UnauthenticatedHttpService to HttpService to implement HttpService instead of UnauthenticatedHttpService
added composite and stroke properties to the drawImage method in PageDrawer . java to ensure proper rendering behavior based on graphics state
removed the synchronized keyword from the close ( ) method and added synchronization in DocumentsWriterPerThread and IndexWriter classes to improve thread safety and ensure proper
added methods to get and set multiple choice options , validation constraints , and validation constraints in UiBinding . java to enhance functionality for managing multiple choice options
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for multiple classes to improve code readability and maintainability by
do n ' t update the stored copy of the whole tree if we save the whole tree
changed the type of the ` condition ` field from ` String ` to ` Map < String , Integer > ` and updated related methods in ` Af
updated generic type parameters for KrakenFees and KrakenTakerFees initialization in KrakenAdaptersTest . java to improve code read
removed the import of CharTermAttribute from DefaultIndexingChain . java to streamline the code by eliminating unnecessary dependencies
refactor NBJavacTrees class implementation to improve code readability and maintainability
removed unsupported unsupported encoding check for data encoding in VectorizedPrimitiveColumnReader . java to streamline code by eliminating unnecessary checks
updated conditional checks and logging in HttpSolrCall . java to improve readability and maintainability of the code
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure that the metadata service proxy is properly destroyed before proceeding
fix ( core ) : limit max level to 10 to avoid infinite recursion
updated error message formatting in HubChangeExecListener to include a fallback if the changelog ID is null to improve clarity of error messages based on the
added barcode decodehinttype to the abstractblackboxtestcase so that it do n ' t fail .
changed the return type of ` executeCompilation ` from ` int ` to ` ProcessExecutor . Result ` in ` CxxPreprocessAndCompileStep
replaced the calculation of ` numEvents ` with a variable ` maxEvents ` and updated the loop condition to improve code readability and maintainability by
refactored validation constraint check in ValidatedLocalValidatorFactoryBean to streamline validation logic to improve code readability and maintainability
fix a bug in entityawareworldprovider . remove temporaryblockentities ( ) .
removed unnecessary type checks in IntrinsifyArrayCopyPhase . java to improve code readability and maintainability
[ hotfix ] [ test ] remove unnecessary logging
replaced the WantedAnywhereAfterFollowingInteraction class with a new location message in Reporter . java and removed the WantedAnywhereAfterFollow
added null checks for account and key addresses in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure that only valid accounts and
replaced ` CommandComparator ` with ` TreeMap < String , Element > ` for sorting commands in ` ScriptLauncher . java ` to improve performance by reducing
chore : update proto file to include s . v2beta and s . v2bet
updated metadata property keys in BaseSingleTreeBuilder . java for consistency to improve code readability and maintainability
updated AsmLoader to use the interface class loader instead of the class loader to ensure compatibility with the correct class loader context
pdfbox - 4071 : avoid nullpointerexception in type1charstring . tostring ( ) .
updated Java2TypeScriptTranslator to conditionally export namespaces based on the definition scope to ensure proper formatting of namespaces based on the definition scope
updated the ` start ` method to use ` AbstractHandler ` instead of ` EmptyServerHandler ` in ` HttpClientTest . java ` to ensure proper
removed unnecessary array creation from addListener calls in HelloInput . java to simplify the code and improve readability
[ hotfix ] [ core ] fix nullpointerexception in abstractsqmpath
updated package structure for CreateFolderTest , DeleteFileTest , ReadFileTest , RenameFileTest , and TestActivity classes to improve organization and clarity
refactor BufferedImage initialization and filtering logic in AwtCanvas . java to improve handling of BufferedImage instances and ensure proper resource management
add native image location qualifier to the hotspot graal
[ hotfix ] [ test ] remove dataflowportabilityapiunsupported from pardotest
updated response handling in MockPhishingProtectionServiceV1Beta1Impl . java to use poll ( ) instead of remove ( ) to
add serialVersionUID to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for various classes
[ hotfix ] [ javadoc ] fix typo in callstack
log a warning if the max size of a map do not allow any data in the map
corrected the spelling of " LST " to " LST " in multiple Java files to ensure accurate representation of the LST element
updated calculations for scoreables and nThreads in ThreadedAcousticScorer . java to ensure accurate calculation of scoreables and
replace AssertionError with returning null in NetHooks . java to improve error handling by returning null instead of throwing an exception
updated method calls from ` getServerAddress ( ) ` to ` window ( ) . title ( ) ` in ` ApplicationControllerFluentLeniumTest .
added ` makeString ` method implementations across multiple iterable classes to provide a consistent way to create string strings with specified start and end parameters
replaced the constant ` Ordered . HIGHEST _ PRECEDENCE ` with a constant ` DEFAULT _ ORDER ` in ` Oidc
added a ` Predicate < ProposedWeakAssociation > weakAssociationRule ` parameter to the ` WeakAssociationsAnalyzer ` constructor and updated related logic
refactor Deflater class for improved performance to enhance performance and readability of the compression logic
added error handling for IOException in Font . java to ensure proper resource management and avoid potential memory leaks
added a null and empty check for the content string in VersionTypeBinding . java to prevent potential NullPointerExceptions when the content is empty
removed the private variable ` places ` and simplified the return statement in ` NearbyListFragment . java ` to simplify access to the ` places
updated the condition to check if the content type starts with " text " instead of " text " to ensure consistent handling of case - insensitive content types
[ bouncy castle ] add support for opensh key format in opensh spec
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for setting suggested folder names to enhance folder name hinting behavior based
updated import statements in InheritanceCacheTest . java to use wildcard imports and modified entity loading logic to improve code readability and maintainability by
updated import statement from DefaultOAuth2RequestFactory to DefaultOAuth2RequestFactory and added user approval request handling in TofuUserApprovalHandler to enhance
[ # 645 ] influxnamingconvention should not apply to tagvalue ( # 645 )
remove system . out . println ( ) from quickfix . dump ( string )
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure consistency in cookie handling across the application
added a static method ` classMetadataUnsupported ( ) ` to ` Platform . classMetadataUnsupported ( ) ` and updated references in ` Subject . java
added functionality to control the visibility of the clear all button and space in OverviewActionsView and RecentsView to enhance user experience by allowing users
updated the handling of the ` desiredRepoVersion ` variable and adjusted the timeout duration in ` ClusterStackVersionResourceProvider . java ` and ` Host
remove memoryleaktest , which be no longer need .
updated the return statement in ServletTester . java to include the hostname of the connector ' s local address to ensure the correct port is used based on
added a conditional check for MVDWAPI in ServerListener and updated Settings to use it in Settings to ensure MVDWPlaceholderAPI
[ hotfix ] [ test ] add cluster size assertion in abstractpartitionassignmentscorrectnesstest
refactor FFIProvider to utilize a singleton holder for JNA provider retrieval to improve flexibility by allowing the use of JNA providers based on
[ tika - 264 ] add test for hierarchical wfilelist in batchprocesstest
added null checks for objectToSave and collectionName in MongoTemplate . java and updated idProperty assignment logic in MongoTemplateTests . java to ensure
replace 0 with NODE _ LIST in Position instantiation to improve code readability and maintainability by using a consistent naming convention
added a new field ` accTradeValue ` to the ` BithumbTicker ` class and updated related methods in ` BithumbTradeServiceRaw `
updated log messages to include segmentName parameter in RealtimeSegmentDataManager . java to improve logging clarity by including the segment name
replaced hardcoded maxParallelThreads with a constant MAX _ PARALLEL _ TASKS in OverseerTaskProcessor . java to
replaced ArrayList with CopyOnWriteArrayList in FixedByteMVMutableForwardIndex , FixedByteSVMutableForwardIndex , and FixedByteSVMutableForward
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 139 , add miss license
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions when destBuffer is null
camel - 14297 : camel - msv : use a sleep instead of ignore a test that fail for some unknown reason
updated the condition from ` = = ` to ` > ` in ` DelegationService . java ` to ensure correct validation of the beginCycle condition
updated RandomValueStringGenerator from 6 to 10 in JdbcExpiringCodeStore and CodeStoreEndpointsTests to increase randomness and ensure correct length
added a type check for UniqueConstraint in StandardObjectChangeFilter to ensure proper handling of UniqueConstraint instances in the change filter
refactor MediaDetailFragment to improve string handling and language codes handling to enhance readability and maintainability of the code
added handling for ArrayIndexOutOfBoundsException , ClassCastException , and ClassCastException in FindBugs2 . java to improve error handling for ArrayIndexOutOfBoundsException and
added a ` withReferenceFilter ` method to ` ListImagesCmd ` and updated filtering logic in ` ListImagesCmd ` and ` ListImagesCmd
camel - 14284 : camel - jms : remove bridgeerrorhandler from camel - jms
added checks for " # ifndef " , " # endif " , and " # endif " in OpExclusionUtils . java to
added return statements to DatabaseCommand . java to ensure proper handling of database operations
updated Politician instances from " blair " and " schroder " to " Prime Min Minster " and " Omnipotence
use stringutils instead of string . length ( ) instead of string . length ( )
camel - 14297 : camel - restlet - fix the issue that camel - restlet should use the current port of the component .
removed unused import statements and added a case for WALL _ SIGN in SchematicFormat . java to streamline code and improve readability
set the maximum length of Hive query to 100MB in QTestUtil . java and removed unnecessary overridden configurations in SessionState . java to improve
refactor WebServer and WebServer classes to use baseHttpConfig instead of ConstraintMapping to improve encapsulation and maintainability of the code
[ hotfix ] [ runtime ] fix typo in sink name
updated the condition for setting the spark app name in HiveConf and modified the way the spark app name is handled in HiveSparkClientFactory to
rename ` ` white ' ' to ` ` included ' ' in ManagedClassFactory . java to improve code readability and maintainability
simonstewart : add maximize window to the selenium webdriver servlet
refactor code to replace ` getEmbeddedCellsBuckOutBaseDir ( ) ` with ` getMainCellBuckOut ( ) ` and
added an assertion to check if the error message contains " entity expansions " in TestXMLEntityExpansion . java to ensure that the error message is
added bitwise operations for table offset and length in TrueTypeFont . java to ensure that the table ' s offset and length are non - negative
removed the customize method from DirectMethodHandle to ensure that the form ' s customized state is not null to avoid potential null pointer exceptions
refactor line buffer initialization and coordinate checks in LineChartRenderer . java to improve readability and maintainability of the code
refactor the handling of package string assets in AndroidBinaryDescription to use a loop to improve code readability and maintainability by reducing duplication
updated the index used in glGenBuffers ( ) from offset to i in LwjglGL11 . java to ensure correct buffer generation
added two new Java files , PropertySuper . java and TestClassResolutionFail . java , and created two new files for Property and TestClassResolutionFail .
[ java ] remove shutdown hook only if the group property be set to true .
updated references from ` url ` to ` FilterChjainProxy ` in ` FilterChainProxy . java ` and ` VirtualFilterChain . java
replaced ` Collections . sort ( intermediateResult ) ` with ` Arrays . sort ( values ) ` and updated method calls in ` PercentileAggregationFunction
added checks for schema loading and loading in MetaDataBasedSQLCompletionProvider and modified mdTable assignment logic in QueryTypeAnalyser to ensure proper handling of
set baseType to null in DatabaseInfoRetriever and initialize literalPrefix and literalSuffix variables in MutableColumnDataType to ensure proper initialization of baseType and
updated link references in multiple Java files to use ` @ link ` syntax to improve code readability and maintainability
refactor EvaluatorFactory to use final static methods for instance creation to improve immutability and ensure immutability of evaluator instances
corrected the spelling of " -- target - platforms " to " -- target - x86 - 64 " in multiple test files to ensure consistency
added sound effect playback functionality in AllAppsView . java to enable playback of sound effects for better user experience
changed the exception type of the main method from Exception to IOException in RemoveFirstPage . java to ensure proper handling of IOException in the main method
added functionality to enable granularity for the left axis in BarChartActivitySinus to enhance user experience by enabling granularity
refactor version comparison logic into a separate method ` compareVersions ` to improve code readability and maintainability by reducing duplication
updated file path handling in ContextHandlerGetResourceTest to use MavenTestingUtils and added OS _ ALIAS _ SUPPORTED checks to ensure compatibility
added a ` close ( ) ` method to multiple classes and updated the ` JsonAsyncHttpPinotClientTransport ` and ` JsonAsyncHttpPin
[ java ] fix socketserverfunctionaltest and socketserverfunctionaltest failure
[ beam - 4142 ] check if the resource be a directory .
removed duplicate static import statements from IsometricStaggeredTiledMapRenderer . java to streamline code and improve readability
removed redundant unbindHandle calls in ItemServiceImpl . java to streamline the code and improve readability
refactor Config and Attribute classes to improve code organization to enhance maintainability and readability of the code
removed conditional check for HIT _ TARGET _ BACK in OtherActivityTouchConsumer . java to simplify the conditional logic for better readability and
refactor navigation button handling in NavbarButtonsViewController to use configuration for dark mode to improve code readability and maintainability by centralizing theme management
refactor error handling in PolyBenchLauncher to throw an exception instead of throwing an exception to improve error handling by providing a clearer exception message
refactor the handling of member indices in ClassWriter to use byte types instead of short types to improve readability and maintainability of the code
added BlockFormattingContext parameter to findBox , findElementBox , and findElementBox methods in BasicPanel . java to enhance formatting context handling for
replaced ` ProcessExecutor . LaunchedProcess ` with ` ProcessExecutor . LaunchedProcess ` and added error handling in ` WorkerProcess . java `
added null checks and replacement logic in Collections . java and CheckedListReplaceAll . java to ensure operator is not null and improve error handling for null
added tests for the ` _ testFill ` and ` _ writeCallback ` variable in ` SslConnectionTest . java ` to ensure proper handling
added listener registration and registration for device configuration changes in DeviceFlag and FeatureFlags classes to ensure proper handling of device configuration changes in the application
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable the test due to a known issue in gh - 1114
removed the import of MalformedURIException from StandardRequestHandler . java to streamline the code by eliminating unnecessary dependencies
add focus ( ) to instructorfeedbackeditpage ( ) to focus focus ( )
refactor synchronization block for ownTradesObservableSet and userTradesObservableSet in KrakenStreamingTradeService . java to improve code readability
changed System . err to System . out for ignoring Class - Path entries in ChangeableUrls . java to improve code readability and maintainability
added a ` randomAccessRows ` parameter to the ` SparseRowMatrix ` constructor and updated related constructors to support this feature to enhance flexibility in
fix npe when delete volume with null poolid = = null
updated file path handling in Utilities . java to support local and local job configurations to ensure correct path resolution for local job execution
[ beam - 12265 ] fix import of guava in udftestprovider . java
[ hotfix ] [ runtime ] fix memorycallgraphbuilder . registermemorycctprovider ( ) and registermemorycctprovider ( )
fix nullpointerexception in conferencechatmanager . getmultiuserchat ( )
added a check to ensure the file is written before attempting to save to avoid illegal action exceptions when the file cannot be written
added folder synchronization functionality in DrawerActivity and created FolderSyncActivity to enhance user experience by allowing folder synchronization functionality
[ hotfix ] [ test ] use closeable in sequentialchannelstatereaderimpltest
fix a bug in treenormalizer that cause the treenormalizer to throw an exception when there be no comma
replaced the usage of ` reader . pointValue ( ) ` with ` getPackedValueSlice ( i ) ` in ` SimpleTextBKD
added LocaleRandomizer and its corresponding test class ` LocaleRandomizerTest ` to generate random locale values in the randomized environment
added assertions for " application / x - font - printer - metric " and " application / x - font - printer - metric " in TestMimeType
updated version numbers in Installer and AutoUpgrade classes from " 8.5 " to " 10.5 " to ensure compatibility with the latest version of the software
reformatted the ` run0 ( ) ` method call in ` TCPTransport . java ` to improve readability and maintainability of the code
updated the read timeout from 0 to 0 in Http2AsyncParser . java to ensure the read timeout is set to zero for better performance
updated the default default delay from 120 to 600 in TimelineMetricConfiguration . java to increase the default delay from 120 to 600 milliseconds for better performance
corrected a typo in the PRIMARY KEY column error message to ensure consistency in column naming conventions
added support for custom date fields in ThirdEyeJiraClient to enhance date formatting capabilities for better user experience
refactor ` HeadersGenerator ` and ` PriorityFrame ` classes to utilize a new ` PriorityGenerator ` class for generating priority frames to improve code
added a constant for maximum scalar replacement code size and updated the logic for determining the scalar replacement option to ensure that the scalar replacement option does not exceed
added DATE _ TAKEN to the projectionTest and folderSortOrder arrays in MediaProvider . java to include DATE _ TAKEN to enhance media
updated image drawing calculations in TexturePacker2 . java to correctly account for width and height adjustments to ensure correct image dimensions are used for rendering
added WebSocketUpgradeFilter to JettyWebSocketServerContainer , JettyWebSocketServletContainerInitializer , and JettyWebSocketServletContainerInitializer to enhance WebSocket upgrade
added shutdown calls to validateSignService , TransactionsMsgHandler , and trxHandlePool in NodePersistService to ensure proper resource cleanup and prevent
added a new ` RawJsonRequestBody ` annotation in ` JaxrsSwaggerGeneratorContext ` and registered it in ` Echo ` and ` Echo `
added a new method ` newTarget ( int targetType , TargetExtension extension ) ` to the ` LoggerUtils ` class to provide a way to configure
changed the return type of ListBeanContainer from List to ArrayList in BeanContainer . java and added a new test class BeanContainerTests . java to
updated metric metric from " blockCountHitPercent " to " blockCacheCountHitPercent " in TestMetricsRegionServer . java to reflect the correct
camel - 14265 : camel - caching : cleanup temporary file input stream cache on completion .
[ te ] set deviceid in the teltonika protocol decoder
replaced ` Files . readFirstLine ` with ` Files . asCharSource ` for reading the first line in ` HybridProjectBuild
added a null check for the operator in the visitAssignop method and created a new test class for unknown class names to ensure proper handling of assignment
added a boolean flag ` enableAccountHandling ` to ` BaseActivity ` and modified the onCreate method in ` BaseActivity ` to conditionally enable account
[ isochrone ] do n ' t try to find main connected polygon if there be no point .
updated DrillViewTable to include a path parameter in DrillViewTable and modified DrillViewTable constructor to accept a path parameter to enhance
added additional parameters to the superclass constructor in PooledByteBufAllocatorL . java to enhance functionality by providing additional configuration options for the netty allocator
updated the array type check from double [ ] to short [ ] in ObjectInputStream . java and added a new CloneArray . java file with a
added a configuration option for the low - level IO thread pool size in HiveConf . java and updated executor initialization in LlapIoImpl . java
added conditional checks for Java version 8 and 11 in SecurityServicesFeature . java to ensure compatibility with Java version 8 and above
refactor latitude and longitude range checks in LatLonGrid . java and add a new test for growing polygons in TestLatLonGrid . java to
[ java ] add invisibility of element with text to ExpectedConditions to improve error handling and provide clearer error messages for better debugging
added a ` isInsertOverwrite ` parameter to the ` replaceFiles ` method and updated its implementation to include a ` isInsertOverwrite ` parameter to
removed the ` SomeInnerClassReflector ` interface and its associated methods from ` ReflectorTest . java ` to streamline the test by eliminating unnecessary
updated the default value for " auto _ generate _ android _ facet _ sources " in ConfigIgnoredByDaemon and IjProjectBuckConfig to
updated logging statements in HubChangeExecListener to include author information instead of a hardcoded string to improve readability and maintainability of the code
added properties property to Link class and corresponding getter and setter methods in QuickLinksConfigurationModuleTest to enable customization of link properties in the configuration
removed the @ EqualsAndHashCode annotation from InitialConfig and added a toString ( ) method in YamlConfigFileDTO to streamline the code by eliminating unnecessary
updated ` SimpleForwardingServerClientClientCallConfiguration ` to use generics for ` ReqT ` and ` RespT ` types to
updated the ` forName ` method to include a ` @ CallerSensitiveAdapter ` annotation and modified the ` forName ` method to accept a ` caller
updated authentication token handling to use ` is ( emptyOrNullString ) ` instead of ` isEmptyOrNullString ` to improve code readability and maintainability
replace ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve thread management by using ` ThreadPoolExecutorEx `
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other classes
refactored ` HumanTime ` and ` TimeStepdefs ` classes to use ` Options ` instead of ` HierarchicalStreamReader ` to improve
fix a bug where the banner be not be show in the wrong place .
updated the ` createProxy ` method to use ` exchangeSpecification . getUri ( ) ` instead of ` ExchangeSpecification ` in multiple classes to ensure consistent
removed multiple print statements from RecordGenerator . java to streamline output for better readability and maintainability
[ flink - 18157 ] [ kafka ] fix autocommitinterval in kafkaconsumer
removed lock release and output statement calls in Liquibase , LoggingExecutor , and set hasDatabaseChangeLogLockTable flag in StandardLockService to
updated @ SuppressWarnings annotations to include " rawtypes " and added deprecation warnings in AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests to
removed unnecessary ' this ' keyword from closeFiles ( ) and prepareCommit ( ) methods in Database . java to improve code readability and maintainability
camel - 14254 : camel - spring - boot - maven - plugin : add support for mutable property in nested type .
updated the method call from ` baseSymbol ` to ` counterSymbol ` in ` VirtExMarketDataService . java ` to ensure the correct ticker
camel - 14284 : fix the test error of messagehelpertest . java
replace UUID . randomUUID ( ) . toString ( ) with System . getProperty ( " testId " ) in HoneycombJdbcInterceptor . java to
[ hotfix ] [ table - common ] fix race condition in defaultjobparametersconverter
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated heightmap height scale from 256 to heightScale in FractalHeightMapGrid . java to ensure proper scaling of the height map
removed type checking for String in SecurityConfig and replaced assertEquals with assertNotSame in SecurityConfigTests to simplify equality checks and improve code readability
updated the default value of ` dump - partition - id ` to ` false ` in ` StdoutSink . java ` to disable the dump partition ID
added unit tests for UTXO output and TronTX output in UTXOSetTest . java to ensure proper testing of UTXO
[ net . sourceforge . pmd . lang . internal ] fix unusedassignment and unusedlocalvariable rule
pdfbox - 4071 : avoid npe if array . add ( ) return null
refactor job restart parameter handling in JsrJobOperator and add a new test for job parameters override in JsrJobOperatorTests to
added a new boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ` to the ` DatabasePlatform
refactor principal assignment logic in JaasAuthenticationHandler . java to streamline principal initialization to improve code readability and maintainability
replaced MDCLoggingContext . setCore ( core ) with a custom ExecutorUtil . newMDCAwareFixedThreadPool in SolrCores . java to improve
added null check for mActionsView before setting visibility to visible to prevent potential NullPointerExceptions when mActionsView is null
refactor JobParameters initialization to handle null parameters gracefully to improve code readability and maintainability by reducing redundancy
refactor BasicEntity and TestUtil classes to improve code readability and maintainability
added tests for the ` getMatchedDevices ` method in ` SchemaRegionBasicTest . java ` to ensure the correct number of matched devices are retrieved
add error log to metricseventbus . run ( runnable )
added a new ` EigenvectorCentralityBuilder ` class and integrated it into the ` EigenvectorCentrality
updated registry port handling in multiple Java files to use the unused random port instead of a hardcoded value to improve code readability and maintainability
refactor geometry buffer creation to use a new method for setting ifc product oid and vertex colors to improve code readability and maintainability by reducing
set amplifier to 0 instead of 2 in blockentityburst .
refactor TubeCalc class to improve code structure to enhance maintainability and readability of the code
disable health check by default in servicehttpclientfactory
refactor DefaultValidator to use generics and improve group validation logic to enhance type safety and prevent runtime errors during group validation
updated @ key and @ run main annotation in Nimbus L & F . java to include a timeout parameter to ensure proper handling of colors in the JList
refactor scheduler initialization to use a lambda expression for improved thread management to enhance code readability and maintainability by using a lambda expression
update lexicon to use the new version string instead of the old version string .
added ReflectionCheckLinker . checkReflectionAccess ( type ) method call in JavaAdapterFactory . java to ensure proper access checks for reflection access
[ hotfix ] [ test ] use ` ` lazysessioncreation = true ' ' instead of ` ` testjmsroutewithobjectmessage '
updated ` initIOContext ` method to include ` RecordReader ` as a parameter in multiple classes to ensure proper handling of record readers during execution
deleted the ClassLoaderHolder , LoaderManager , and VerticleManager classes to remove unused classes and streamline the codebase
added configurationChanged method and modified file handling logic in FileStore , JavaLanguageServer , and ScanClassPath classes to improve file management and ensure proper
added try - catch blocks around register and unregistering session callbacks in PackageInstallerCompatVL . java to handle potential exceptions during session callback registration and
removed the src directory from the createIndex method calls in TestBackwardsCompatibility . java to simplify the index creation process by removing unnecessary source paths
[ hotfix ] [ network ] make AkkaRpcServiceUtils . createandstart ( ) public
added a retry setting for mapreduce map maxattempts in TestExportSnapshot . java to ensure that the mapreduce map maxattempts is set to 3
pdfbox - 4071 : remove unnecessary null check for afmstandard14 and use metrics . getencodingscheme ( ) . equals (
added a new test class ` SslConnectionTest ` for SSL connection handling to ensure proper handling of SSL connection closure in the application
added validation for IPv4 , IPv6 , and IPv6 addresses in InetAddress and NetworkInterface classes to ensure proper handling of invalid family types and improve
added a test method to serialize dates in a collection in DefaultTypeAdaptersTest . java to ensure proper serialization and deserialization of date objects in the
refactor Message class to improve code organization to enhance maintainability and readability of the code
added debug logging for SQL generation and modified conditional logic in PutDatabaseRecord . java to improve debugging capabilities and ensure correct handling of the first update key
corrected the calculation for the loop condition in TableOutput . java to ensure the loop correctly reflects the current width of the table output
pdfbox - 4071 : remove unnecessary null check , a suggest by valerybokov
updated priority logic for format strings in FormatStringChecker . java to ensure proper handling of empty format strings
add a rule to ignore non - final loop variable in a for - each statement
added PDF version and full compression settings in PDFExporter and updated test properties in PDFExporterTest to enhance PDF export functionality and improve test coverage for PDF
added a new test class LdapUserDetailsMapperTests to validate role attribute mapping in LdapUserDetailsMapper to ensure that multiple role attributes are correctly mapped
add ldap . read . timeout configuration to ldapcontextfactory to allow customizable read timeout value
renamed multiple test classes for consistency and clarity to improve code readability and maintainability
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code readability and maintainability
rename ` shouldCacheIterator ` and ` shouldAvoidAllocation ` to ` shouldAvoidAllocation ` across multiple classes to improve clarity and consistency in
added a condition to check if the state handler is invalidated in the gesture state check to ensure proper handling of gesture states when the handler is invalid
removed unused variables and updated the max distance calculation in Workspace . java to improve code readability and maintainability
update ociconfigconfigsource to use configproviderresolver instead of configprovider
refactor Testjsig class to improve code readability to enhance maintainability and facilitate future updates
fix mana tablet , mana , and marionette not be able to pick up mana .
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
removed the serialVersionUID field from P11TlsPrfGenerator . java to clean up the code and avoid unnecessary serialization warnings
refactor the tsFile validation logic in DataRegion . java to improve error handling and file management to enhance code readability and maintainability by
added two new classes , Switch21 , Switch19 , and Switch19 to handle string formatting in the switch statement to improve code readability and maintain
updated error message from " reason " to " java . lang . String " in ComparableSubjectTest . java to improve clarity and consistency in error reporting
updated StreamHelper to use Apache POI ' s Internal annotation and added a new TestStreamHelper class for XML parsing to ensure proper handling of standalone
updated size validation logic in Int2ObjectCache . java and added equals method in Int2ObjectCache . java to ensure valid array sizes and
removed unnecessary sorting of AnnotationAwareOrderComparator in WebSecurityConfiguration and added a test for ordering security filter chains to ensure proper ordering of security filter chains
removed TimeInForce . GTC from OrderType . MARKET in BinanceTradeService . java to simplify order handling by removing unnecessary time
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and update its usage to improve flexibility and maintainability of the random number generation process
updated the KEY _ SEP character from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure proper
camel - 14265 : camel - jms - return the component documentation and parameter json schema for the activemq component .
added error handling for bound determination in SourceUtils and created a new test class for bound handling to improve robustness by handling potential NoSuchFieldError and
refactor filter predicate builder logic into a separate method to improve code readability and maintainability by encapsulating filter builder logic
added a check to ensure the original artifact name starts with SCOPED _ TARGET _ BEAN _ PREFIX before retrieving it to avoid potential
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 12929 . c
changed the type of the ` value ` variable from ` boolean ` to ` String ` and added a new ` DnsFallback ` class for handling null
do n ' t log exception when write tag in defaulttheme .
change the type of the ` success ` field from ` success ` to ` url ` in ` DepositAddress . java ` to align with the new
refactor Privilege implementation in WindowsSecurity . java to use a lambda expression to improve code readability and ensure proper resource management
removed " address " from the scope configuration in CommonOAuth2Provider and its tests to simplify scope handling by removing unnecessary parameters
refactored the submit method in ManagedSelector to use a new Start class to improve code readability and maintainability by encapsulating the
added a new constant ` BIG _ DECIMAL _ 182 _ 04 ` and updated ` WLedHandler ` to use it to
replaced the method ` isValidCaller ( String cn ) ` with a ` Set < String > VALID _ CALLERS : : contains `
added a new method ` caseJSRInst ( JSRInst i ) ` to the ` InstSwitch ` class to provide a way to
added transaction manager to the SubscriptionActivatingSubscriber constructor and modified the SubscriptionActivatingSubscriber to use it to enhance transaction management and improve subscription
added SQL update and update statements in DBMSProcessor . java to handle cases where no data is present in the database
remove contact elevation for lollipop and above
rename ` typeInformation ` to ` identifier ` in the ` IdentifierFlyweight ` class to improve clarity and consistency in variable naming
replaced direct file reading with privileged action for privileged actions in SandboxFileManager . java to enhance security by ensuring privileged actions are executed in privileged actions
updated GroovyParserVisitor , GroovyPrinter , and G classes to handle Binary . Type . Access in addition to G . Binary . Type . Access to
updated logging message to include class and class names in MetaDataFetcher . java to improve clarity of error messages for better debugging
replaced occurrences of ` char ` with ` byte ` and ` short ` in ` RecordInputStream ` , ` UnicodeString ` , and ` HS
added a new test method ` downloadsFileWithNorwayCharactersInName ` to ` FileDownloadViaProxyTest . java ` to ensure
added cancellation check to fingerprintscannersample to avoid cancellation of keyrevokedexception .
added null check for statistics before processing in TimedMemberStateFactory . java to avoid potential NullPointerException when statistics is null
added a test for removing an object from an explicit collection in MongoTemplateTests . java to ensure that the template removes an object from an explicit collection
pdfbox - 4071 : update copyright year to match the copyright year
updated string formatting in Coder . java to use % n instead of \ n to improve readability and maintainability of the code
added a boolean flag ` mIsClearAllButtonFullyRevealed ` and modified scroll logic in ` RecentsView ` and ` Paged
replaced direct calls to ` hmsTable . getParameters ( ) ` with a new ` COMMON _ HMS _ PROPERTIES ` map to
added a method to check if a message is already in use and updated error handling to utilize this method to improve code readability and maintainability
added a command - line argument for the " - cp " system property in TestNestmateAttr . java to ensure the test class path is
updated SchemaTextDetailType from VERBOSE to verbose _ schema in Grep . java to improve clarity and consistency in schema logging
fix checkstyle issue in net . apache . catalina . util package
add support for ` ` nested _ use _ savepoint ' ' in transactionmanager .
replace int fetchSize with ThreadLocal < Integer > fetchSize in QueryProcessExecutor and update related logic in MemIntQpExecutor to improve thread safety
updated idle strategy initialization in EmbeddedPingPong . java to use BackoffIdleStrategy instead of sharedNetworkIdleStrategy to improve idle strategy management
refactoring of code to use a separate handleblockingcall method to improve readability .
added logic to set the system property HDP _ VERSION in SliderAppsViewControllerImpl . java to ensure proper configuration of the HDP version
refactor JavacProcessingEnvironment to use loaderClass and loader , and add close methods to ensure proper resource management and prevent potential memory leaks
added DeepCloner class to ParameterizedRobolectricTestRunner and RobolectricTestRunner , and created a new DeepCloner class for cloning
added a new annotation for JETTY _ SHOW _ STACKTRACE in ResourceBase . java to enable stack trace functionality in the application
added a null check for the object type in NativeObject . java to prevent potential NullPointerExceptions when handling object types
updated OopField references to use " wellKnownKlasses " instead of " _ object _ klass " in SystemDictionary . java to improve clarity
added support for handling RSAPublicKey and ECPublicKey instances in JwkKeyListView and JsonWebKeyEndpoint classes to enhance security by ensuring correct handling of
[ java ] use onlywritablebootimageheap . getvalue ( ) instead of spawnisolates ( )
updated MBeanServerMXBeanUnsupportedTest . java file to improve test coverage for MBeanServerMXBean functionality
removed the import of OrderClassLoaders from MavenPluginCollector . java to streamline the code by eliminating unnecessary dependencies
added a new method ` getOwnerAddress ( ) ` to multiple actuator classes and implemented it in ` CreateAccountActuator ` , `
add a main class to show how to use stomp in the demo .
replace direct calls to ` toByteArray ( min ) ` and ` toByteArray ( max ) ` with conditional checks for ` min ` and ` max ` to
add an empty index check to ProtobufAnnotationSerializer to ensure that an empty index is set before adding an edge to the dependency graph
[ java ] remove duplicate correlationid from asynccommandidset . remove ( )
added ` saveConflict ` method calls to ` FileDataStorageManager ` , ` FileDownloader ` , and ` FileUploader ` classes to ensure
updated generic types in ExecutionContext , AbstractMethodInvokingDelegator , AbstractTransactionalResourceItemWriter , and AbstractTransactionalResourceItemWriter
replaced occurrences of ` StrUtils . splitFileNames ` with ` StringUtils . splitFileNames ` across multiple filter factory classes to simplify code by
added handling for " oracle " and " mysql " driver properties in DatabaseFactory . java to ensure compatibility with Oracle and MySQL driver configurations
updated the constructor of MethodInterceptor to accept a handler parameter and added a serialVersionUID to ensure proper serialization and deserialization of methods in the ClassProxyFactory
replaced the use of ` new Date ( ) . getTime ( ) ` with ` System . currentTimeMillis ( ) ` for time measurement to improve accuracy
refactor ExecutionContext and LocalExecutor to use a wrapClassLoader method for better type safety to improve code readability and maintainability by reducing boiler
added buffer change handling in TerminalView and modified buffer height calculations in TerminalTextViewOverlay to improve UI responsiveness during buffer changes
[ hotfix ] [ config ] add pid to service pid if it do n ' t exist
refactor freeze action handling in OperationActions and OperationRegistry to improve clarity and functionality based on VM configuration to enhance code readability and maintainability by
added support for insecure SSL configuration in TlsConfig and updated TlsUtils to utilize this feature to enhance security by allowing configuration of in
refactor JavadocTool to handle source and class paths more efficiently to improve code readability and maintainability by reducing duplication
updated ExporterGDF to use case - insensitive comparison for edge IDs instead of case - insensitive comparisons to improve code readability and maintain
added CascadeType . ALL to the @ OneToOne annotation in DefaultUserInfo . java to ensure that the @ OneToOne annotation is cascaded
refactor hashCode and equals methods to use Arrays . equals for consistency to improve code readability and maintainability
updated string literals in AsyncProvidersBasicTest . java for consistency to improve readability and maintainability of test cases
removed the isKeySerializerTypeVariableSized method from RocksDBSerializedCompositeKeyBuilder . java to clean up the code and improve readability
added ` getStaticPermissionsField ` method to ` ProtectionDomain ` and modified ` SubjectDomainCombiner ` and ` SubjectDomainCombiner ` to handle static
added null checks for recipes in multiple classes to prevent potential NullPointerExceptions and improve code readability
refactor parsing logic in mmm Parser . java and ppp Parser . java to improve readability and maintainability of the code
added a connection error alert dialog in UploadMediaDetailFragment and modified error handling in UploadMediaPresenter to improve user feedback by providing clearer feedback when
added a new file ` Issue596 . java ` and a test method ` get404onUnhandledRequests ` in ` Status . java ` to
updated bitwise operations in NodeBitMap . java to use long literals to improve performance and readability of bitwise operations
refactor ImportLayoutStyle class to improve code readability to enhance maintainability and facilitate future updates
replaced UnexpectedLiquibaseException with TERM _ PROGRAM and MINTTY constants in ConsoleUIService . java to improve clarity and
replaced ` mock ` with ` TestAccountManagerCallback ` and updated assertions in ` ShadowAccountManagerTest . java ` to improve test readability and
[ hotfix ] [ runtime ] remove unused field in analysistype
updated method names from ` getProperty0 ( ) ` and ` getConcatSuffix ( ) ` to ` entries ( ) ` and ` concatSuffix (
removed the timeout parameter from the set method in PutAllCallable . java to simplify the code and improve readability
added null check for mqConsumerInner in MQClientInstance . java and created a test for consumer running information in MQClientInstanceTest
[ java ] generate source identity when connect to a channel .
added a new file ` TopTabAction . java ` that implements ` Presenter . Toolbar ` for displaying a toolbar to provide a user interface
camel - 14265 : camel - dynamic router should use reactive executor for all recipient mode .
updated the AggregateItemReaderTests class to use JUnit ' s Assert and added JUnit ' s @ Before annotation to improve test structure and ensure
added generic type parameter ` < T > ` to the ` Procedure ` constructor in ` AbstractObjectValueTypeMap . java ` to improve type
updated AchievementsActivity , NetworkingModule , NetworkingModule , OkHttpJsonApiClient , OkHttpJsonApiClient , and OkHttpJsonApiClient
added validation to ensure ` len ` is less than ` Short . MAX _ VALUE ` in ` OfflineSorter . java ` to prevent illegal argument
add a bugreporter to make sure we do n ' t load the min value .
refactor multiple dataset classes to improve code organization to enhance maintainability and readability of the dataset structure
updated the exception message format in ProvisionClusterRequest . java and added expected exceptions in ProvisionClusterRequestTest . java to improve clarity of error
updated random number generation in TestVectorUtil . java to use nextFloat ( ) and nextInt ( 1 , 100 ) instead of nextInt ( ) to
changed the return type of the compareBy method from int to long and simplified time comparison logic to improve clarity and correctness of date comparison logic
added SSL configuration to TestUtil and updated PGPropertyTest to utilize it to enable dynamic retrieval of SSL configuration based on system properties
added support for tiny . exe and tiny . mac file in chromedriverfactory
added null checks for oldConfig before cloning it in BaseMotorMount and RecoveryDevice classes to prevent potential NullPointerExceptions when oldConfig is null
added a condition to disable transcoding in DLNAResource to ensure proper handling of transcoding behavior in the renderer
updated column retrieval logic to handle empty lists and added a check for empty lists in TableDiffer . java to ensure proper handling of empty lists and
added a new constant ` CustomIgnoreTag ` and a check to remove it from the iterator if it does not start with ` CustomIgnoreTag `
camel - 14284 : jdbcaggregationrepository should throw an error instead of a runtimeexception .
[ micronaut ] add parent config property to allow parent configuration
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and modified fragment loading methods to enhance user experience by allowing more flexible fragment
deleted the ClusterNodeInfo . java file to the class is no longer needed for the project
modified the return statement in ShieldedTransferActuator . java to correct the logic for the return value
added debug output statements for ciphersuite selection in ServerHandshaker . java to improve debugging by providing clearer information about the chosen cipher suite
updated the ` onTemplateChosen ` method in ` ChooseRichDocumentsTemplateDialogFragment ` and ` ChooseTemplateDialogFragment ` classes to
added handling for duplicated node labels in ImportContainerImpl and updated logging in ImportContainerParameters to improve error reporting for duplicated node labels in import
added a new file R2303044ListSelection . java to test the selection of a List item to ensure that the list item selection is
[ java ] remove checkkeepalivetimeout from publicationregistration
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions when mWorkspace is null
added a new test method ` testCompoundPropertyTwice ` to the ` StepScopePlaceholderIntegrationTests ` class to ensure correct behavior of compound
updated row count handling in StatsRulesProcFactory to use a list of row counts instead of a single value to improve code readability and maintainability
refactor path and query parameters handling in SpringBootDocBuildTemplate . java to improve code readability and maintainability by reducing duplication
make logger final in guiactivator , notificationmanager , and SystrayActivator classes , and refactored action handling logic in NotificationManager to improve
refactor DistBuildSlaveExecutor to use CachingBuildEngineDelegate and LocalCachingBuildEngineDelegate based on remote configuration to improve code clarity and
updated the RuntimeException to include additional JSON string replacements to improve error handling by providing clearer context for JSON parsing failures
added a conditional check for DEBUG before logging in WidgetsModel . java to ensure logging is only logged when DEBUG is enabled
refactor Console and Scanner classes to improve code organization to enhance maintainability and readability of the code
updated the calculation of numTerms in SimilarityBase . java and added a test for discountOverlapsBoost in TestSimilarityBase . java to ensure
replaced direct calls to ` mailEq ` with ` verify ` for message sending in ` SimpleMailMessageItemWriterTests ` and ` MimeMessage
added new exit and quit attributes to Global . java and refactored quit method in ScriptingFunctions . java to streamline the function ' s exit
refactor loanbrokergateway and loanbrokerbrokerskewdetectordemo to make it easy to configure loanbrokergateway
rename methods from ` getFirstUnverified ` and ` getLastUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in
vmware : fix nullpointerexception in vwwarecontext . getservicecookies ( )
reformatted assertions in ResinAcegiAuthenticatorTests . java for consistency to improve readability and maintainability of the code
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 648 . cgi ?
updated the property key from " fml . disabledMods " to " fml . modStates " in the Loader class to improve clarity and consistency in
refactored account selection handling in ReceiveExternalFilesActivity to a new method ` showAccountChooserDialog ` to improve code readability and maintainability
updated IOException message to include hostIp and port information to improve debugging by providing more context about connection failures
added a check for empty result in the ValidatorContractController to ensure that an empty result is returned when an unexpected result is encountered
added null check for the root file before reading fields in TexturePackerFileProcessor . java to avoid potential NullPointerExceptions when the root file is
removed unnecessary null check for data source JNDI in PooledConnection . java to simplify the code by eliminating unnecessary checks
updated TARGET _ MB and WINDOW values and adjusted sink sizes in TestRefprocSanity . java to improve memory allocation and
added null checks for currentConsole before writing to avoid potential NullPointerExceptions when currentConsole is not initialized
added a call to setCredentialsRefreshDelay ( 100 ) in KinesisConfigUtil . java to enhance the Kinesis configuration by allowing more time for
replace AlertDialog . Builder with showInfoAlert and showInfoAlert method in SingleUploadFragment . java to improve code readability and maintainability by consol
updated the ` test ` method to include a ` pack ` parameter and modified the ` test ` method to include a ` - package ` parameter to
updated Jetty version from 1.9 . 0 _ 60 to 1.9 . 0 _ 31 and modified import statements in TestBadUseCases . java to
replaced specific imports with a wildcard import and added a check for dependency requirements in PluginBundleManager . java to improve code readability and maintainability
added a set of ZipFileInputStreams and modified the releaseInflater method to ensure proper resource management and prevent potential memory leaks
corrected the spelling of " DATAMATRIX " to " DATA _ MATRIX " across multiple files to improve code readability and
[ java ] make sequencegeneratorsource . runactive ( ) thread - safe .
corrected the spelling of " getCurrentyActiveConnections " in BlobServer . java and BlobServerGetTest . java to improve code readability
replaced ` findAny ( ) ` and ` findAny ( ) ` methods with ` findFirst ( ) ` methods in ` AnnotatedDelegate ` , `
added support for " ppc64le " architecture in Bits and ByteArrayAccess classes to ensure compatibility with additional architectures
updated the error message in RoboMonitoringInstrumentation . java to include a link to the application details to improve user feedback during activity resolution failures
use long . max _ value instead of long . min _ minutes in transactionimpl . waitwithdeadline
replaced instances of ` new Date ` and ` OffsetDateTime ` with ` Instant ` and ` Instant ` in ` DateUtilTest . java ` to
refactor BytesRef class to improve code readability to enhance maintainability and facilitate future updates
added a toast message to inform users that YouTube Player does not work on Lollipop yet
added validation for unterminated dollar and string literals in SQL parsing to ensure proper error handling for unterminated SQL statements
added a null check for mVibrator in the primary code condition to prevent potential NullPointerExceptions when mVibrator is not initialized
updated table border and color settings for foreign key columns in DotRenderer . java to improve UI consistency and readability for foreign key columns
added a method to check if a specific Hive query string is encoded and updated output formatting in SetProcessor to ensure proper handling of encoded parameters in the
pdfbox - 4071 : catch stringindexoutofboundsexception instead of stringindexoutofboundsexception
refactor X509Certificate class to improve code readability to enhance maintainability and facilitate future modifications
add support for proxy uri in wavefrontconfig ( # 3903 )
replaced BitmapLruCache with BitmapLruCache in TimeLineCursorAdapter and added loadImage method in NetworkedCacheableImageView to improve image
removed the ' child ' parameter from the ` ofFloat ` method calls across multiple classes to simplify the method signature and improve code readability
updated dependency controllers version from " Controller / Gamepad API " to " gdxControllersVersion " in BuildScriptHelper and DependencyBank classes to
refactored LaunchedURLClassLoader to improve code readability to enhance maintainability and facilitate future updates
updated DataSourceHealthIndicator to use DataAccessUtils for querying results using RowMapper to improve data access handling and error reporting
add ` ` no - cache ' ' header to the layout tag and add it to the layout tag .
updated the message formatting in ZkController . java to use Locale . ENGLISH to ensure consistent message formatting across different locales
added a Analyzer parameter to the SolrQueryParser constructor to enhance flexibility in query parsing by allowing custom analyzers
update copyright year to 2014 .
removed an unnecessary semicolon from MainTest . java to clean up the code and improve readability
refactor TypeContributions class to improve code readability to enhance maintainability and facilitate future updates
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper handling of VoidColumnVector instances
updated templateName from ` templateName ` to ` req . getName ( ) ` in ` StatementGenerator . java ` to use ` req . getName ( )
removed the isTypeMatch method from compositeConfiguration to simplify the code and improve readability
added a new ` offer ` method to the ` SessionDecorator ` class and updated the ` offer ` method to use it to enhance the functionality of
updated method names from ` trustAllXForwardedRemoteAddressResolver ` and ` maxTrustedIndexXForwardedRemoteAddressResolver ` to ` trust
added a new annotation ` NoBootstrap . java ` and modified ` BootstrapInserter . java ` to check for annotations without bootstrap to ensure that annotations
hbase - 14297 fix npe in tabledescriptorchecker when no value be specify .
updated the calculation of ` maxCommits ` and ` numCommits ` to use ` requestedCommits ` instead of ` maxCommits `
added InvocationTargetException to the main method and modified the main method to use SwingUtilities . invokeAndWait instead of SwingUtilities . invokeLater to improve exception handling and ensure
added a new constant BUILD _ ID and refactored the ` fillInOriginFromCache ` method in ` CachingBuildEngine ` to
removed unused imports from TransactionCapsule . java to clean up the code and improve readability
removed duplicate call to markAsDone ( future , channel ) in HttpProtocol . java to simplify the code and improve readability
added TezConfiguration import and initialized default configuration in TezConfigurationFactory to enhance configuration management by utilizing a default configuration
added a null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerExceptions when keyPurposes is null
removed unnecessary conditional check for mIsVisible in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a null check and a forget method to the OpenALAudio class to prevent potential NullPointerExceptions when stopping the most recent sound
added handling for newly rendered first frame in SimpleBasePlayer and created a new test for listener in SimpleBasePlayerTest to ensure proper state management and
added new decimal values for zero and zero tick units in NumberAxis . java to improve readability and maintainability of the code
refactor TargetsCommand and AbstractTargetGraphAndBuildTargets to use a single instance of TargetGraphAndBuildTargets to improve code readability and
removed the ` IndexFileNameFilter ` class and updated its usage in ` IndexFileDeleter ` , ` IndexWriter ` , and ` IndexWriter
add a way to check the entire entity ' s collision bounding box for ladders
added a compression level parameter to the constructors and methods in ApkBuilder , ApkBuilder , and SignedJarBuilder classes to enhance flexibility in
added a new test method to verify the inclusion of static fields in compiled classes to ensure that static fields are correctly handled during the compilation process
added support for UNDEFINED _ METRIC _ SIZE in multiple classes to ensure correct handling of UNDEFINED _ FIELD _ SIZE and UNDEFINED _ FIELD
updated string formatting in AssertJMultipleFailuresError , AssertionErrorCreator , AssertionErrorThrowingMultipleFailuresError , and related tests to improve readability
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and ` KucoinDe
added cache management functionality to SpringDataJPAJoinFetchPaginationTest , SpringDataJPAJoinFetchPaginationConfiguration , ForumService , and SpringData
update pronunciation model to use locale prefix instead of german
added a check for empty postBody before creating a FormBody . Builder in SimpleHttp . java and updated tests in TestHttpPlugin . java to
added a Dispatcher to the ClientSideSlb class and invoked it in ClientSideSlbTest to ensure proper resource management and avoid potential memory leak
added conditional logic to set V2 based on texture flip status in TextureRegion . java to ensure proper rendering behavior based on the texture ' s flip
update defaultdiscoveryservice to throw invalidconfigurationexception instead of invalidconfigurationexception
added null check for contextPath before accessing it in MetricsPublisher . java to prevent potential NullPointerExceptions when contextPath is null
( chore ) camel - jbang - make projectclassloader . reinittype return empty list instead of void
added a check for B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap and defined a constant B _ TREE _ MAP _
added handling for ` precompiledHeader ` in ` AbstractCxxSourceRuleFactory ` and modified conditional checks in ` AbstractCxxSourceRuleFactory
replaced WeakReference with AccWeakReference and added security context handling in ImageWatched . java to enhance security by ensuring proper access control during image updates
changed access modifier of findNextIndex ( ) method from package - private to private in ObjectMap , ObjectSet , and OrderedMap classes to
updated the assignment of isDirect to false in VertexBufferObject . java to correct the logic for determining if the vertex buffer is direct
do n ' t call geteffecthelptextsmap . get ( effectname ) if there be no effect
changed return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 to ensure proper retrieval of local coordinates
pdfbox - 5764 : use input . limit ( ) instead of input . capacity ( )
added null check before removing the close hook in VertxImpl . java to avoid potential NullPointerException when context is not initialized
updated cellLayout and DeviceProfile classes to use folderCellLayoutBorderSpacingPx instead of folderContentPaddingPx to improve layout handling for folder
refactored the initialization of ValueNumeric to use a custom ValueNumeric class to improve code readability and maintainability by encapsulating the
added a condition to check if the response is not deferred in the login or error page to ensure that the authentication is only processed when the response is
updated argument checks from " -- module - start - ini = " to " -- add - to - start " in StartArgs . java to
added a default partition value for dynamicPartValues in DynamicPartitionFileRecordWriterContainer to ensure that the default partition value is used when null is provided
[ hotfix ] [ stream ] fix npe in streamingjobgraphgenerator and streamnode
updated return statements in DefaultArtifact . java to include classifier and classifier details to improve clarity of error messages for better debugging
camel - 14265 : camel - kafka - add a test case for offset - rebalance and offset - rebalance
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to improve error reporting for missing class dependencies in the classpath
use enable _ gmail _ notifications instead of enable _ gmail _ notifications _ enabled
refactor CryptoKey and CryptoKeyOrBuilder classes for consistency to improve code readability and maintainability
updated the expected message count in LumberjackMultiThreadTest to use concurrencyLevel instead of 5 to improve test performance by reducing the expected message count
added a condition to check if the player is not dead before accessing its health and scoreboard to prevent potential null pointer exceptions during health checks
refactor Exchange class to improve code readability to enhance maintainability and facilitate future updates
updateuser api key and secret key should be specify with key and secret key
refactor switch - case statements in MfaProvider , IdleTimer , JdbcMfaProviderProvisioning , and SamlServiceProviderConfiguratorTest to simplify
refactor AbstractMetaDataExportMojo to improve code organization to enhance maintainability and readability of the code
added SQLIntegrityConstraintViolationException handling to Hive . java to improve error handling by providing clearer feedback when dropping materialized views
updated the property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to improve clarity and consistency in the property
added a new file ` RoboExecutorService . java ` that extends ` org . robolectric . util . concurrent . RoboExecutorService ` to provide a
bug fix : add subgroups to the menu item for root group
updated method names from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` for consistency to improve code readability and maintainability
refactor testDynamicNumberOfGCThreads to use base arguments instead of hardcoded values to improve code readability and maintainability by reducing redundancy in
changed return types of getHostFlavorMap and getAllPossibleHostFlavors methods from ImmutableFlavor to Flavor in CxxPlatforms and KnownBuildRule
updated SQL syntax for creating tables and modified parameter handling in CreateTable , CreateTableDeParser , and CreateTableTest classes to improve code readability
refactor background drawable initialization in ChatViewerFragment to use a variable for clarity to improve code readability and maintainability by encapsulating background
test : migrate ctiteratortest to junit 5
added calls to ` token . clear ( ) ` in multiple tokenizer classes to ensure consistent state management and prevent potential memory leaks
pmd : fix : do n ' t crash on block statement in a block statement
updated StateMachineConfiguration , StateMachineFactoryConfiguration , StateMachineFactoryConfiguration , and ConfigurationTests to use StateMachineConfigurerAdapter for better error handling to
alexeibarantsev : add a testlocators to the selenium test suite
fix numberformat . tostring ( ) to use integer . min _ value instead of integer . max _ value
( chore ) camel - core : remove unused code in aggregatelifecycle . java
updated touchable insets to use TOUCHABLE _ INSETS _ REGION instead of TOUCHABLE _ INSETS _ CONTENT
removed conditional check for ' ~ ' in FencedCodeBlockParser . java to simplify code logic by eliminating unnecessary checks
added socket timeout functionality to the ConnectionFactory and related classes to enhance socket timeout management by allowing configurable timeout values
added a delay of 500ms in ElementAttributeTest . java to handle InterruptedExceptions during test execution
updated BufferedReader initialization to specify UTF - 8 character encoding to ensure proper handling of character encoding in URL input
refactor List class to improve code structure to enhance maintainability and readability of the code
refactor AsyncFileImpl to accept URI and Path parameters in AsyncFileImpl and add a new test class AsyncFileImplTest to improve error handling
added API annotations to CucumberEngineExecutionContext and modified CucumberEngineExecutionContext to be declared as immutable to enhance code clarity and maintainability by
cloudstack - 10284 : return empty list if there be no nuage vsp device configured on the physical network
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated related logic in ` FileUploader ` and ` UploadList
removed the ` getJavaVersion ( ) ` method and related logic from ` ConstantPoolTagTests . java ` to simplify the code and improve readability
improve error message when compile with - xlint
added a method ` removeAllHeaders ( ) ` to ` AsyncHttpClient ` that clears the client header map to ensure that the client header map is
replaced Vector with ArrayList and updated related variable usages in Main . java to improve performance and readability of the code
updated the defaultGRID _ COLUMN value from 4 . 0 f to 3f in AppPreferencesImpl . java to align the user preferences with the
added a condition to check if the view creation is not enabled in the CalcitePlanner to ensure that view creation is only executed when necessary
fix tesths2httpserver . testreplaceall ( string , string , string , string , string , string , string , string )
do n ' t swallow exception in graphprinter . asobject ( )
updated driver variable from IE to FIREFOX and modified test method calls in SingleTestSuite . java to ensure compatibility with the latest SSL certificate
updated byteOffset calculation in ByteBlockPool to use Math . addExact for byteOffset and added a new test for TooManyAllocs to ensure
updated InteractionValueEncoder to use Locale . ENGLISH instead of static and modified string formatting to use Locale . ENGLISH to improve code readability and maintain
added error handling to the stoppedLatch in TcpTransport . java to improve robustness by ensuring exceptions are properly handled
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress serial warnings related to serialization issues
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` OcamlDebugLauncher ` to simplify the class hierarchy by removing
add an option to show the file to the main window for save / unsaved change .
updated OAuth20DeviceCodeResponseTypeRequestValidator to check for registered service access and added validation for registered service access to enhance security by preventing unauthorized access
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure the correct index is used for processing
[ flink - 18157 ] [ table ] add support for inputformat in mapreducereduceutil . inittablemapperjob ( )
removed duplicate call to append ( jrubyClasspath , testClasspathElements ) in AbstractJRubyMojo . java to simplify the code and improve readability
do n ' t throw an exception if no language be available
added a deprecated commit duration configuration to the ReplicationHandler class to ensure compatibility with Solr 7.1 and improve logging clarity
replaced ` cacheVariableName ` with ` cacheForeignKey ` in ` DIHCacheSupport . java ` and updated related references in ` AbstractDataImport
updated ECKeyPairGenerator to use Object [ ] instead of long [ ] for key size and decoding to improve type safety and avoid potential ArrayIndexOutOfBoundsExceptions
[ hotfix ] [ runtime ] add suspend ( ) method to statewithexecutiongraph
replaced instances of RotationTouchHelper . INSTANCE with a new instance of RotationTouchHelper in RecentsAnimationDeviceState . java to simplify the
refactor filter logic in UniFiControllerCache to use flatMap for filtering devices to improve code readability and maintainability by standardizing lambda expressions
changed method parameters from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity and consistency in thread ID
updated the logic for adding and removing candidates in the offer list and improved logging for better clarity to enhance code readability and maintainability by reducing redundancy
make test more robust when run with different jres and apr / native connector build with different version of openssl .
updated MockitoMethodInvocationControl and SystemClassUserTest to use ` doReturn ` instead of ` when ` when ` with ` when ` and ` when
replaced instances of ` NotLoadedException ( ) ` with ` NotLoadedException ( this ) ` in multiple classes to improve exception handling by using a
updated the intent to set EXTRA _ FILE to null in FileDisplayActivity to ensure proper handling of OCFile in the intent
added error handling and compaction file management in StoreDirect and StoreWAL classes to ensure proper resource management and prevent memory leaks
replaced direct calls to ` stopSwipePipToHome ` with a call to ` screenshotTask ` in ` AbsSwipeUpHandler . java `
added a hidden flag to the LiquibaseCommandLine class and its getter / setter methods in CommandArgumentDefinition to control the visibility of command arguments based
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to ensure compatibility with the expected network address range
[ geos - 6442 ] add sld support to layergrouphelper . getsld ( ) and getsld ( )
added permission checks for launch intents in InstallShortcutReceiver and Launcher classes to ensure proper handling of malicious intents during shortcut creation
added ` getId ( ) ` and ` setId ( int id ) ` methods to multiple tile classes to enable customization of tile IDs for better
refactor Manager class to improve code organization to enhance maintainability and readability of the code
updated JDBCExample . java and SessionExample . java to include a version parameter for the Session . Builder to ensure compatibility with the latest version of the
added schemas and includeSchema properties to LiquibaseGenerateChangeLogMojo and updated diffOutputControl initialization to include schemas and target schemas
replaced ` putIfAbsent ` with ` put ` in ` registryCache ` for consistency to improve code readability and maintainability
[ hotfix ] [ benchmark ] use logger . warn instead of logger . error
removed the ` final ` modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore . java ` to restrict access to the constructor
fix fileselectorfragment to use ' / ' instead of ' / ' .
added new test methods for handling response content in FastCGIProxyServletTest to ensure proper handling of response content in the HTTP client
added a call to start the ReadInteractionsService in MarkReadService . java to ensure the service starts with the correct interactions service
added a conditional check for lintClassfile before logging warnings in ClassReader . java to ensure warnings are logged only when lintClassfile is
added a check for the " mail . server . port " property and set it to " 25 " if it is null to ensure a default port
added retry logic for SSLFactory creation and error handling in TlsUtils . java to improve SSL factory management and error handling during SSL factory renewal
updated the date format from " yyyy - MM - dd " to " yyyy - mm : ss " in ObjectMapperProvider . java to ensure
updated the assertion message in SpyingOnRealObjectsTest to reflect the absence of a private class due to mocking to ensure the test accurately reflects
added a boolean flag ` _ isEndsOnNL ` to the ` LineBox ` class and updated related logic in ` LineBox ` to
updated filePathString construction to handle null parent paths gracefully to improve robustness by avoiding potential NullPointerException when the parent directory is null
removed the import of DocCollection from TopicStream . java to streamline the code by eliminating unnecessary dependencies
refactor NinjaServletContextTest to use a separate ServletInputStream and add a new test for Windows 1250 parameters in multipart requests to improve code
added properties for web exposure include in AbstractCasEndpointTests to enhance configuration flexibility for web exposures
added a check to ensure the current graph is a dynamic graph before proceeding to prevent runtime errors when the current graph is not a dynamic graph
add ` ` method ' ' a default value for @ scopeone . add ` ` eagerinitfactory ' ' to allow @ scopeone .
added support for suppressing exceptions in JsonPath expressions to enhance error handling by allowing specific exceptions to be suppressed
removed redundant call to ControllerLeaderLocator . create ( _ helixManager ) in HelixServerStarter . java to streamline the code by
updated usage messages in CLHSDB , HSDB , and HSDB classes to improve clarity of usage instructions for better user experience
refactor ` configureChunkProvider ` method implementations in ` FaultTolerantStepFactoryBean ` and ` SimpleStepFactoryBean ` to
remove deprecate write class since it ' s no longer needed
refactor ShadowAccessibilityManagerTest to use a private AccessibilityManager instance instead of a direct method call to improve code readability and maintainability by
add group _ display _ id to analytics . group _ display _ statistics .
removed the ` AbstractBuildRuleWithResolver ` parameter from the ` SourcePathResolver ` constructors across multiple classes to simplify the class structure and improve
refactor PostgreSQLDatabaseConnector to use a new PostgreSQLEnumDataTypeHelper class and add PostgreSQLEnumDataTypeHelper
updated the expected log path format in LogFileTests . java to use File . separatorChar instead of File . separatorChar to ensure consistent path formatting
corrected the spelling of " getMapRedLocalWork " to " getMapRedLocalWork " across multiple files to ensure consistency in naming
added an ` UnsupportedOperationException ` for index tables in ` HiveMetaStoreClient . java ` to handle unsupported operations for index tables to improve error handling
added visibility check before updating disabled flags in RecentsView to ensure disabled states are only updated when the view is not visible
added a conditional check to set the highlighter for non - Windows environments to ensure highlighter is displayed for non - Windows environments
add a method to add optional variable annotation to the BugInstance class and update the CrossSiteScripting class to use it to enhance the functionality of
[ hotfix ] [ hadoop ] use tostring ( ) instead of touri ( ) . touri ( ) . touri ( )
updated the removeCaptureListener method call in SelectBox . java to ensure the correct listener is removed from the list
changed the value of _ metaDataComplete from true to false to disable metadata completion for improved performance
modified the ` removeTaskTarget ` method to return a ` void ` instead of a boolean and updated bitmap handling logic in ` WorkEduView
added support for setting the " RELEASE " environment variable in JsBundleGenrule and corresponding tests in JsBundleGenruleDescriptionTest to
updated type casting logic in Lower . java and added a new class T6500701 . java with a test method to improve type safety
added unit tests for crlf lines in comments and javadocs in AddImport and AutodetectGeneralFormatStyle classes to ensure proper handling of newline
added hubMode handling in AbstractLiquibaseChangeLogMojo and defined it in AbstractLiquibaseMojo to enable dynamic configuration of the hub mode
removed unnecessary null check from skipPolicy assignment in JsrFaultTolerantStepBuilder . java and JsrChunkProcessor . java to
added a check for the existence of the linkDb before adding it to the input path in IndexerMapReduce . java to ensure the linkDb
refactor setIndexerThreadPoolMethod initialization to use a reflection method for improved readability to simplify the code and enhance maintainability by eliminating unnecessary try -
updated the address format in GameCanvasImplementation . java from " sms : / / " to " sms : / / " to correct the address format
refactor execution handling in MapJobExecutionDao to use a copy method to improve code readability and maintainability by centralizing execution copy logic
added a new file ` DownloadTest . java ` that extends ` GdxTest ` to implement a test for downloading content to ensure proper functionality
move language code normalization to util . normalizelanguagecode ( )
updated exception handling in GenericUDFRound . java to use UDFArgumentTypeException instead of UDFArgumentException to improve error reporting by specifying
added null check for selectedVersion before accessing its properties in ManageDependencies . java to avoid potential NullPointerExceptions when the selectedVersion is not
added multiple request matchers for various security configurations in SecurityConfig . java to enhance security by removing unnecessary matchers
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
add a check for the qualified name before processing the bean definition in BeanDefinitionInjectProcessor . java to ensure that only non - java . lang . Object
added an @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to known issues
removed the ` final ` modifier from several constants in ` OpenWebNetEnergyHandler . java ` and ` OpenWebNetThermoregulation
removed conditional checks for SocketStatus . OPEN , STOP , TIMEOUT , and TIMEOUT in AprEndpoint . java to simplify the code and
deleted the SunToolkitSubclass . java file to the functionality is no longer needed in the project
updated DefaultRenderableSorter to use Matrix4 for translation checks and added a method to check for rotation or scaling to improve accuracy in translation calculations and ensure
added a new test method ` registerWrapperHandlerBeforePrimitive ` to ` TypeHandlerRegistryTest . java ` to verify the functionality of ` register `
pdfbox - 4071 : add torgbimage2 ( ) and torgbimage2 ( ) , a suggest by valerybokov
updated URL constants from ` CommonsApplication ` to ` BuildConfig . WIKIMEDIA _ API _ HOST ` across multiple files to standardize
add health check to camel - main - http - health - add health check to camel - http - main
added null check for the block position before accessing it to prevent potential NullPointerExceptions when accessing the block state
added a new test method ` testAlterTableWithViewsExtendPk ` to ` AlterTableWithViewsIT . java ` to verify the functionality
updated variable initialization in FileFloatSource . java and modified document assertion logic in TestFunctionQuery . java to improve clarity and correctness of document handling
removed the ID field from the fields in MongoRecordReader to ensure that the fields are removed from the database
added disconnect method to YeelightHandlerBase , DeviceBase , and WifiConnection classes , and modified connection state handling in WifiConnection to
add support for auto _ increment in innodb auto _ increment
added functionality to manage and retrieve existing SharedIndexInformers in SharedInformerFactory to enhance the management of SharedInformers by allowing dynamic retrieval of the
fix npe in templatemanagerimpl . savedetails ( ) when uservm be null
updated ShadowBitmapFactory to use RobolectricBufferedImage instead of RobolectricBufferedImage and modified color array initialization logic to improve image
removed deprecated constants from LauncherSettings . java to clean up the code and reduce unnecessary dependencies
make broker data file relative to data / broker . dat in order to make it easy to read
added legendTop and legendBottom variables to PieChart . java to improve legend positioning and ensure accurate offset calculations
added a check to return early if the world transform is zero in BaseShader . java to prevent unnecessary processing when the world transform is zero
added a new file ` MaryScriptCreator . java ` that reads and prints a script file to facilitate the creation of script files with specific encoding
http : / / issues . apache . org / jira / browse / amq - 4252 - add the restlistener . remote . source
[ hotfix ] [ table - common ] clean up compaction logger in levelcompactiontsfilemanagement
remove the xlink : href attribute from the component description
[ hotfix ] [ aws2s3 ] make s3 _ streaming _ upload _ timeout _ checker a constant
hbase - 17224 addendum add a check for cluster shutdown state in the assignmentmanager
added null check for span before logging in Slf4jSpanLogger and DefaultTracer classes to avoid potential NullPointerExceptions when span is null
trim whitespace from the active option before adding it to the configuration to ensure consistent behavior when adding active options
updated DepthController to conditionally set wallpaper zoom based on user preferences to enhance user experience by allowing depth adjustments based on user preferences
updated the assertion in OverseerTest to check success count to ensure accurate tracking of success counts in the overseer
removed the method ` getKernelVersion ( ) ` from ` LinuxFileStore . java ` to simplify the code and improve readability by eliminating unnecessary
refactor ExecConstants to improve code structure to enhance maintainability and readability of the code
removed the import of ScreenRecordRule and annotation from ThemeIconsTest . java to streamline the code by eliminating unnecessary dependencies
added a new method ` setScanAttributeForPaging ` in ` TableSnapshotResultIterator ` and implemented it in ` ScanUtil ` to enable paging
added a conditional check for ` lowRange ` in ` Request . java ` and ` RequestV2 . java ` to ensure ` lowRange `
make cache key and value size estimation protected and add debug cache size estimate
updated the assignment of zoneId in HostJoinDaoImpl . java to ensure the correct UUID is used for the host response
updated Content - Type header from " application / json " to " APPLICATION _ JSON _ UTF8 _ VALUE " in BaseLivyInterpreter . java
refactor filesystem removal logic to use a single parameter to improve code readability and maintainability
changed the type of the ` obj ` variable from ` Object ` to ` String ` and updated the ` toJson ` method to use ` json
updated polling timeout values for hardCommitWaitMillis from 2 milliseconds to 5 milliseconds in SoftAutoCommitTest . java to allow more time for changes in
do n ' t call listener . beforeevent ( ) and listener . afterevent ( ) in selenidelogger
refactor multiple Dial classes to improve code organization to enhance maintainability and readability of the dial - related classes
updated error logging statements in SyncQueue . java for consistency to improve code readability and maintainability
updated the ryuk container version from 0.4 . 0 to 0.4 . 1 in RyukContainer . java to reflect the latest version of the
updated ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added a new
[ mojang ] fix build for patchy library
[ hotfix ] [ yarn ] remove unused yarnclient parameter from yarnitcase
add statistics of no data included map to localmapstatsprovider
deleted the AllTests . java file to the test suite is no longer needed in the project
added constants for non - breaking hyphens and zero character characters in AbstractWordConverter . java to enhance character handling capabilities for better user experience
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify that large stack trace invocations are not star
updated method call from ` getResultMappings ( ) ` to ` getResultMappingsForRowKey ( ) ` in ` NestedResultSetHandler . java ` to
added a boolean flag ` eventHandled ` to ` UIText . java ` to indicate that the event is handled correctly
deleted the ` Controller ` annotation and replaced ` Weldby ` with ` WeldModule ` in ` Weldby . java ` to simplify
added a flag to control capture groups in empty checks in the backtracking NNFAExecutorNode and NFATraversalRegexASTVisitor classes to
added a protected field ` liquibaseProLicenseKey ` and removed its retrieval from ` System . getProperty ( " LIQUIBASE _ PRO _ LICENSE
refactor method names from ` this . measuresHierarchy ` to ` setMeasuresHierarchyMemberReader ` in ` RolapCube . java ` to
add an option to generate a debug info value update .
[ hotfix ] [ test ] fix typo in mondrianproperties
added support for retrieving friend paths in Kotlin - related classes to enhance functionality by allowing users to specify source paths for Kotlin - related
added aliases for BATAK , BRAHMI , MAND , and MANDAIC in Character . java and refactored main
updated equality checks in ExecutionCommand and added a new method stringToExecutionCommand in StageUtils to improve readability and maintainability of the code
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
refactor OCFile class to improve code structure to enhance maintainability and readability of the code
added a ` toString ( ) ` method to the ` SystemScope ` class to provide a string representation of the ` SystemScope ` class
refactor CSS parsing logic to handle different numeric types and improve error handling to enhance error handling and provide clearer error messages for invalid parameters
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ` in ` LocalIndexIT . java ` to verify the functionality of
updated imports and method names in BaseAndroidTestCase , BackupHelperTest , and LanguageHelperTest to use ApplicationProvider instead of InstrumentationRegistry to improve
updated toast messages in multiple activities to use string resources instead of string concatenation to improve readability and maintainability of the code
removed unnecessary conditions from while loops in RendererUtilities . java and updated test cases in RendererUtilitiesTests . java to improve code readability and maintain
replaced ` Iterator < JsonNode > ` with ` ArrayNode ` in ` KrakenStreamingAdapters . java ` and added a new method ` ask
added exception handling when adding a column twice in FileContentProvider . java to improve robustness by logging exceptions when adding the same column twice
removed a print statement from AsyncServletIOTest . java to clean up the code and improve readability
[ hotfix ] [ table - planner - blink ] add hashtable load factor to convertjoinmapjoin
updated the ` buildView ` method to accept a ` Context ` parameter and modified the ` buildView ` method to use a ` TypedArray `
added authentication handling in SecurityMockMvcResultMatchers and corresponding tests in SecurityMockMvcResultMatchersTests to improve authentication handling and ensure correct authentication
vpc : do n ' t set vpcid if vpcid be null
[ flink - 10955 ] [ test ] skip flinksavepointtest on version 1.11 .
removed unnecessary @ Cue annotations in multiple Java files to improve code readability and maintainability
modified the loop condition in Actor . java to include a check for the size of actions to ensure action execution only occurs when the size exceeds the size
replaced ` BaseExchange ` with ` BitmexExchange ` in ` BitmexStreamingExchange . java ` to simplify the class structure and improve
[ core ] add test for relationshiprestrepositoryit . findbytype and orgunitrelationshipvirtualmetadata
added null check for spatial in LodControl . java to prevent potential NullPointerExceptions when spatial is not initialized
updated the ` lastTokenFiltered ` and ` EndTrimmingFilter ` classes to replace ` false ` with ` true ` in ` ConditionalTokenFilter
do n ' t use graph . unique ( ) in unsafestorenode . add ( )
updated the method call from ` super ` to ` io ` in ` BoundedMemoryIO . java ` to use ` io . putAddress `
added an assertion to check if the casEventRepository ' s load is empty to ensure that the casEventRepository is not empty before proceeding with
removed unused parameters ` attributeTemplateName ` , ` attributeTemplateName ` , and ` attributeCol ` from ` AuthenticationAttrProcessor . java ` to
added null check for the specified key in MacOSXPreferences . java and created a new RemoveNullKeyCheck . java file to ensure that null
added a typeface setter method to CodenameOneTextPaint to ensure typeface is not set in runtime
added ` open ` method implementations for ` AzurePinotFS ` , ` LocalPinotFS ` , and ` PinotFS ` classes
[ java ] remove deprecate webdriverrunner . fail ( string )
removed the check for ` item . getSize ( ) > 0 ` in ` SolrRequestParsers . java ` to simplify the conditional statement for better
replaced instances of ` resultObject . getValue ( ) ` with ` this . useConstructorMappings ` in ` DefaultResultSetHandler . java ` to simplify
added a quote to the SQL statement in CreateTableGeneratorTest . java to ensure compatibility with SQL syntax in the database schema
added a filter mode check and modified the return logic in VectorizationContext . java to improve the handling of filter expressions based on the result type
changed the type declaration of ` inheritConfig ` from ` ConfigUtils . inheritConfig ` to a generic type ` ConfigUtils . inheritConfig ` to
replaced ` ReorganizeTableStatement ` with ` modifyDataTypeStatement ` in ` ModifyDataTypeChange . java ` to simplify the code by eliminating unnecessary
updated cluster name constants in multiple classes to use constants instead of hardcoded values to improve code readability and maintainability by centralizing cluster name
updated connection handling to include pending and max connections in PeerGroup . java and improved logging messages in PeerEventListener . java to enhance debugging capabilities and provide
added conditional logic to assign style values based on the length of style strings to ensure proper handling of style values based on their length
[ worldedit ] fix entity nbt tag to be a binary tag .
updated the return statement in NoToStringOnStringType . java from " Use ` String ` to " No # toString ( ) on String " to
updated the JVM memory limit from " - Xmx64m " to " - Xmx32m " in TestThreadFailure . java to
modified the ` retryFailed ` method to return a ` FailureContext ` instead of ` int ` and added a new ` DataProviderRetryAnalyzer `
updated the return value from ` tokens [ 0 ] ` to ` bandwidth ` in ` BucketStateIEEE754 . java ` to correct the
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 42225 . cgi
removed the ` printWarning ` parameter from the ` doPrintEntry ` method and updated its usage in the ` Main ` class to simplify the code
removed redundant call to cancelExecution ( ) in TaskAsyncCallTest . java to improve code readability and maintainability
added checks for dialog opacity , shape , and decorated dialogs in Dialog . java and Frame . java to ensure dialogs are not opaque or decorated
changed the ` state ` variable from ` private ` to ` private final ` in ` DefaultProjectFilesystem . java ` to ensure the ` state `
added sentinel and standalone configurations for sentinel and standalone connections in LettuceObjectFactory . java to ensure proper handling of sent
add ` ` lastseendelayedmessage ' ' property to chatroomjabberimpl . java
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` notifyContent ( ) ` method calls to ensure
replaced the creation of CreateShareOperation with a service creation in FileOperationsHelper and updated related services in OperationsService to improve code clarity and maintainability
removed unnecessary condition in the isValue assignment in BeanDefinitionInjectProcessor . java and added jakarta Inject annotation in FieldPropertyInject . java to simplify
replaced calls to ` getMinBuildHeight ( ) ` with ` yStart ` for loops in ` ClassicPlotManager . java ` to improve code
add a check for nullpointerexception in mackintegrationtestcase to avoid npe .
fix ( exif ) : fix npe when read exif file with interop sub dir
added support for the ENABLED _ LS mode in VersionedTargetGraphCache and updated executor initialization logic in VersionedTargetGraphCache to support
added a check for video format in DLNAResource . java to ensure proper handling of video formats in the parser
refactor AutoMlClient and AutoMlClient classes to improve code organization and maintainability
added a load flag to LwjglNativesLoader and modified the load method in LwjglNativesLoader to enable dynamic loading
added support for an escape character in CSV strategy to ensure proper handling of special characters in CSV parsing
added support for AUTHORIZATION _ CODE in ClientRegistrations . java and updated test cases in ClientRegistrationsTests . java to ensure
8012044 : give more information about self - suppression from throwable . addsuppressed
added a prepared statement to the DerivedTableIT class and modified the OrderedResultIterator constructor to include a null parameter to enhance test coverage and
added RSquare value to the map in RegressionEvaluator and updated tests in StreamExpressionTest to ensure correct evaluation of the RSquare value in the
http : / / issues . apache . org / jira / browse / amq - 4252 - add context attribute to the servlet filter
refactor code to use MapWork directly instead of casting to MapWork to improve code readability and maintainability by reducing unnecessary type casting
added folder and country image handling to PdfJndiReport , PdfSessionInformationsReport , and PdfSessionInformationsReport classes to improve image
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for WHEDN resolution in JwtIssuerAuthenticationManagerResolver
updated the condition from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test for
added a boolean parameter ` isMethod ` to the ` Function ` constructor in ` LLVMInteropType ` and updated related methods in `
removed redundant sleep calls in AbstractBasicMockingIntegrationTest . java to improve code readability and maintainability
added a new file KernCrash . java to implement a KernCrash class with font rendering functionality to demonstrate the use of Kern Crash
added a call to fail ( ) in LinkedHashTreeMapTest . java to ensure proper failure handling during hash tree operations
added a method ` getInterfaceAddresses ` to retrieve network interface addresses based on a specified prefix to enhance functionality by allowing users to specify IPv6 addresses
[ java ] cancel housekeeper task after shutdown in hikaripool
changed the method call from ` getClientAddress ( ) ` to ` getSlaveAckOffset ( ) ` in ` GroupTransferService . java ` to
refactor Assert class to improve readability and maintainability to enhance code clarity and maintainability
added a new test class ` Issue247Test ` to verify the functionality of the ` DBMaker ` class to ensure that the ` DBMaker
changed the type of ` results ` from ` CategoryItem ` to ` ArrayList < String > ` in ` CategorizationFragment . java ` to
added validation for today and birth year in ValidatorTest . java to ensure correct validation of age validation based on the current year
added error handling for various Grbl responses in GrblController . java to improve error message processing by including specific error codes
updated the return statement in Workspace . java to conditionally display the home button label based on the number of screens to improve user experience by providing clear
removed the ` count ` parameter from the ` getTrades ` method in ` Bittrex ` and ` BittrexMarketDataService ` classes
updated ConsoleReader and MemoryHistory to handle null prompts and modified index calculation in MemoryHistory to improve code clarity and ensure proper handling of null prompt
updated the construction of ` jdkPath ` to use ` jdkFolderName ` instead of ` . jdk ` to improve code readability and maintainability
replaced instances of ` getDescription ( ) . getBuildRuleType ( ) ` with ` input . getType ( ) ` across multiple classes to standardize
updated JFCModel and related classes to accept a Consumer < String > parameter for warning logging to improve error handling by providing more informative warning messages
added a validation check for tolerance in MaximumInscribedCircle . java to ensure tolerance is positive to prevent runtime errors
added methods ` createView ` and ` dropView ` to ` TestUtil ` for creating and dropping views in ` TestUtil ` and `
added checks for stable floats and doubles in NaNTest . java to ensure tests are only executed on non - Windows platforms
added a new file ` DesktopTaskbarUIController . java ` that extends ` BaseQuickstepLauncher ` to implement a custom DesktopTaskbarUI
added progresskeeper task count listener to moditemadapter and moditemadapter
refactor file handling methods in Files . java to improve code readability and maintainability
refactor ` AnnotationGrpcServiceDiscoverer ` to use ` Collection < ServerInterceptor > ` instead of ` Set < ServerInterceptor > ` to
removed the @ FunctionalInterface annotation from DomainAwareServicesManager interface and updated ChainingServicesManager to extend ServicesManager to simplify the interface structure and
add more logging to resourcepackloader . generatepackinfo for mod file
chore : update gapic - generator - java version to 2.1 . 0 and update gax - java version to 2.1 . 0 ( # 1
added multiple overloaded grow methods to the Cell class to provide access to the Cell class for better functionality
updated DefaultInputHandler to use KeyStroke instead of Map for bindings to improve type safety and prevent potential NullPointerExceptions
add a try - catch block to prevent the test from fail .
replaced ` long ` array with ` byte ` array in ` MetricsMemoryTester . java ` and added a memory fail count check in ` TestDocker
deleted the JobParametersPrototype . java file to the functionality is no longer needed in the project
added a securityEnabled flag to the MappingsTable class and updated related methods to include it to enhance data connection security checks and ensure proper handling of
rename APPLE _ SWIFT _ OBJC _ CX _ HEADERS to APPLE _ EXPORTED _ OBJC _
changed the DUMP _ TO _ FILE constant from true to false in TestMSPowerPointParser . java to disable DUMP _ TO _ FILE
add support for Amazon and AFTS codecs in the eos propagation workaround
[ java ] use logbufferdescriptor . isConnected ( ) instead of check for producerlimit . get ( )
added a check for the output options ' isNoInfo ( ) ' in the dbInfo null check to ensure that the output options are not null
[ java ] disable ssl by default for driver uris that do n ' t support ssl .
added DOMOutputOptions to the buildDOMSubtree method to enhance error handling by allowing additional output options
refactor Assert class to improve readability and maintainability to enhance code clarity and maintainability
added a new boolean parameter ` topic ` and ` retained ` to the ` Event ` and ` Publish ` classes to allow the ` topic ` and
[ hotfix ] [ test ] remove @ ignore annotation from eventserializationtest
added a getName ( ) method to SqlGroupedWindowFunction and updated SqlStdOperatorTable to use " $ TUMBLE " instead of "
removed the import of fastparse . core from LatexToUnicodeAdapter . java to simplify the code and improve readability
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 645 . cgi ?
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` in ` AppModule . java ` and refactor
use ansisqldialect instead of calcitesqldialect in sqlnodeconvertcontext
change log level from debug to trace in FirmwareUpdateService . java to improve logging granularity and clarity of firmware update messages
added tests for handling null dates and timestamps in GetObjectTest . java to ensure proper handling of null values in SQL queries
refactor string handling in StringSubject , Subject , and RelabeledSubjectsTest to improve clarity and consistency in naming conventions to enhance read
added unit tests for repository permission handling in UserModelTest . java to ensure correct behavior of repository permissions for different teams
added a new Java file ` Test7088020 . java ` with a method handle test to verify the behavior of ` MethodHandles . invoke
refactor audience validation in Saml2ResponseValidator to use a HashSet for audience URIs to improve performance and maintainability of audience validation logic
refactor ` afterAppAuthChanged ` method to ` afterAppAuthChanged ` and ` refreshLocalCache ` methods in ` AbstractDataChangedListener
replaced direct calls to ` _ stderr . println ( ) ` with null checks for ` _ stderr ` and ` _ stderr ` to improve null safety
added a new constant ` SEPARATION _ ORDER ` in ` Warning . java ` and updated ` BasicEventSimulationEngine . java ` to track
updated the parameter from offlineTableConfig to realtimeTableConfig in the queryOptimizer method from offlineTableConfig to realtimeTableConfig to ensure accurate
added normalization functionality to the CREATE _ METRICS _ AGGREGATE _ TABLE _ SQL statement and updated related logic in PhoenixHBaseAccessor
refactor SavepointV2 and FileStateHandle classes to improve code readability and maintainability
added BluetoothClass handling in ShadowBluetoothDeviceTest and implemented Bluetooth class management in ShadowBluetoothDevice to ensure proper functionality and functionality of
fix checkstyle issue in net / player / glowoffline / glowoffline / glowoffline / glowoffline / glowoffline /
added check for empty list in SumFunction . java and updated error message in FEELFunctionsTest . java to improve error reporting for empty list
replaced ` graphModel . getGraph ( ) . readUnlockAll ( ) ` with ` graph . readUnlockAll ( ) ` in ` Data
updated the coreNodeName construction to use getCoreName ( ) instead of getCoreName ( ) to ensure the correct core name is used for
do n ' t refresh recent chat request when the contact list be update .
[ hotfix ] [ test ] fix typo in taggerparserpostagcompatibilityitest
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to suppress codecs for
added a new class T7005671 with multiple array type checks to ensure correct handling of array types in arrays
updated superTriangle calculations in DelaunayTriangulator . java and added a new test class in LwjglDebugStarter
updated multiple Java classes to implement the @ Override annotation to improve code readability and maintainability
refactor JWTClaimsSet initialization to use Builder pattern for improved readability to enhance maintainability and maintainability of the test code
refactor state management in StackOverflowCheckImpl to use old and new state variables to improve clarity and maintainability of state management
added ShadowSQLiteDatabase , ContentValues , and ShadowContentValues classes , removed deprecated methods from SQLiteDatabase and SQLiteDatabaseTest classes to streamline code and improve
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglGraphics . java ` and added ` initiate
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` and updated comparison logic in ` BKDWriter . java ` to improve
updated variable names and added null checks for language , country , and default locale in Locale . java to improve code readability and ensure default locale is
updated the return value from ` mIconCurrentTextAlpha ` to ` mIconLastSetTextAlpha ` in ` PredictionRowView . java
corrected the spelling of " ConfigMap " from " Confimap " to " ConfigMap " to clarify the purpose of the warning message
replaced the import of LoginMockMvcTests with UaaJunitSuiteRunner . allSuiteClasses ( ) in DefaultConfigurationTestSuite . java to simplify
trim whitespace before adding items to _ mimeTypes , _ excludedAgents , and excludedAgentPatterns in GzipFilter and GzipFilterDefaultTest
updated the output type assignment from WRITER to WRITER to ensure consistency in output type handling
updated the default value of the " nashorn . regexp . impl " property from JDK to JONI to ensure compatibility with the
replaced ` LooperExecutor ` with ` FutureTask ` and updated task handling in ` ViewCapture . java ` to improve thread safety and performance by using
add support for ` ` style ' ' , ` ` neutral ' ' , ` ` voice ' ' , and ` ` info rh ' '
added a check to ensure the parent folder exists and does not exist before creating it to prevent errors when the folder does not exist
updated IP Fall back to 127.0 . 0.1 and nodeDiscoveryBindIp from 0.0 . 0.0 to 127.0 . 0.1 to reflect the correct
camel - 14265 : camel - jbpm : fix the default handler name for inonlycamelworkitemhandler and inoutcam
pdfbox - 4071 : remove static import , a suggest by valerybokov
replaced ` WorkModeToggleContainer ` with ` WorkFooterContainer ` in multiple files to improve clarity and consistency in naming conventions
refactor multiple Dalvik - related classes to improve code organization to enhance maintainability and readability of the codebase
refactored the handling of type parameter references in DefaultJavaPrettyPrinter . java to improve code readability and maintainability by reducing duplication
added a call to freeMemory ( bytes ) in the driverContext class to ensure memory management is properly managed during execution
updated string formatting in QueryByExamplePredicateBuilder , JpaPersistentPropertyImpl , and StringQuery classes to remove unnecessary null checks to improve readability
replace ` evictionCounter ` with ` evictionCounter ` and ` statsList ` in ` ConcurrentLRUCache ` and ` FastLRUCache `
refactor ` runInJavaFXThread ` to ` runAndWaitInJavaFXThread ` and add a new method ` runAndWaitInJavaFX
do n ' t use InetAddress . getLocalHost ( ) in networkaddressmanagerserviceimpl . java
[ java ] set data and source root in mainframe to make it easy to configure .
added a constructor to ` MarkedClientEnabled ` and ` AdminServerEnabled ` to enable configuration of ` MarkedClientEnabled ` and ` Mark
refactor TableEnvironment class to improve code readability to enhance maintainability and facilitate future updates
removed the ` setStatementTimeout ` method and updated its usage in ` MapperBuilderAssistant ` , ` MappedStatement ` , and ` ExecutorTestHelper
removed the ` hangingTscTimeout ` parameter from multiple method signatures in ` TypeScript2JavaScriptTranspiler ` and ` TypeScript2JavaScript
added serialization for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of GeoLocationRequest and GeoLocationResponse
updated precondition checks in ArtifactFilesystem and modified test cases in ArtifactFilesystemTest to use BuildArtifact instead of ImmutableSourceArtifactImpl to improve clarity and ensure
tika - 126 : do n ' t throw a tikaexception if the excel document be not a hslf document .
ggbscript should not trigger concurrent modification
[ java ] do n ' t try to write to pipe if the input stream be empty .
added error handling for ` hasValue ` and ` hasValue ` methods in ` GuavaOptionalSubject ` and corresponding tests in ` GuavaOptionalSubjectTest
updated method to include VERTICAL _ SWIPE _ INDICATOR and modified hotseat progress logic in ShelfScrimView . java to
added null check for nav in MatDefEditorlElement . java to prevent potential NullPointerExceptions when nav is null
do n ' t draw the classic box if there ' s no point at all
updated error handling logic in ErrorOccuredInOnExceptionRoute . java to improve error reporting accuracy
replace scheduleAtFixedRate with scheduleWithFixedDelay and change log level from info to debug in AstroDiscoveryService . java to improve responsiveness and
refactor irrUnit and pemUnit assignment logic in SinglePassAndImageBasedLightingLogic . java to improve code readability and maintainability
added JUnit @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that hang
updated import statements in GuiceFactoryTest . java to use specific Google dependencies instead of wildcard imports to improve code clarity and maintainability by using
added a ` systemFeatureList ` map to ` RobolectricPackageManager ` and implemented the ` hasSystemFeature ` method in ` Robole
refactor RCAFrameworkLoader to handle path properties and add a new test class RCAFrameworkLoaderTest to enhance path handling and improve test coverage
removed a log statement indicating the start of a cancellation watch dog to clean up the code and improve readability
added a null check for enumerationValues and initialized it to null if it is empty to ensure proper handling of empty enumerationValues and prevent potential NullPointerException
renamed variables ` needInline ` and ` needEndText ` to ` needStartText ` and ` needStartText ` and ` needEndText
http : / / issues . apache . org / jira / browse / akamai / akamai / akamai
removed conditional logic for altering the UPGRADE _ ITEM _ TABLE column type in UpgradeCatalog260 . java to simplify the code
updated error messages in BaseTableDataManager to refer to available space and write permissions to improve clarity of error reporting for directory creation failures
refactor DatasetUtilities to improve code structure to enhance maintainability and readability of the code
added a line to append the selector ID to the key to ensure the selector ID is correctly displayed in the matcher
updated debug log message formatting in GouraudShadingContext . java to improve readability and maintainability of the code
added ALPHA _ INDEX _ HIDDEN _ WHILE _ DREAMING and ALPHA _ INDEX _ HIDDEN
removed redundant entries from KeyExchange . java to improve code readability and maintainability
added a check for JdbcConnection before executing the version ( ) method in CockroachDatabase . java to ensure proper handling of JdbcConnection instances
refactor indexing logic in ServerMainTest to use a variable for fileIndexThatRemains to improve code readability and maintainability by
added methods to retrieve media recording MIME type in CodenameOneImplementation , MediaManager , and ImageIO classes to provide a way to retrieve the media recorder
make shaderhelper . useshaders public so that it can be use .
updated the condition in DruidAdapterIT . java from " C = 6588 " to " C = 13500 " to correct the order of
updated the initialization of ZkStateReader in CloudSolrServer . java to ensure proper initialization of the ZkStateReader instance
refactor XMPMetaParser to improve code readability and maintainability to enhance maintainability and maintainability of the code
added a new interface ` ClientRegistrationIdentifierStrategy ` with a method to retrieve the identifier for a client registration
updated the condition in UrlHelper to use a while loop instead of a hardcoded value to improve code readability and maintainability
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and added a new test class ` Var
refactor border property checks to use a new method ` borderIsNotSetOrBlank ` to improve code readability and maintainability by encaps
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to improve logging granularity and reduce verbosity
updated the ` attachProjectToConnection ` method to include ` HubRegisterResponse ` as a parameter and modified its usage in ` HubUpdater ` to
replaced ` & 0xff ` with ` Byte . toUnsignedInt ( b [ 0 ] ) ` across multiple classes to use ` Byte . to
[ hotfix ] [ runtime ] fix typo in opentracingtransactionproducer
updated the default caching configuration from DepFiles . ENABLED to DepFiles . CACHE in AbstractCachingBuildEngineBuckConfig . java to
changed the default value of rangePannable from true to false to disable rangePannable functionality in CategoryPlot
updated the logic for setting the main active page in AllAppsContainerView to handle cases where the current active page is not MAIN or
changed access modifiers of variables and variables for GcodeRenderer and FPSAnimator in Visualizer2TopComponent . java to improve encapsulation
added exception handling for CancellationException in FunctionTest . java to improve error management for CancellationException
changed constructor visibility from package - private to protected in JarFileResource , JarResource , and JarFileResource classes to enhance encapsulation by allowing subclasses
refactor DefaultTrackSelector class to improve code organization to enhance maintainability and readability of the code
added a sleep delay of 200ms in LevelCompactionTsFileManagement . java to ensure proper handling of unseqmerging states during compact
updated the fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to ensure correct comparison of the fee currency
updated SQL queries to use ` PostDTO ` instead of ` Post ` for consistency and clarity to improve code readability and maintainability by standardizing
refactor Unicode class to improve code readability to enhance maintainability and facilitate future modifications
updated the ` installAutoInstance ` method to include ` Service ` as a parameter and added functionality to update Hive LLAP settings based on the
removed unnecessary whitespace in SendHeadersFirstPublisher . java to improve code readability and maintainability
refactor SSECustomerKey to use SSECustomerKeyBuilderMixin instead of JsonDeserializer to improve code readability and maintainability by using a
added handling for BIG _ DECIMAL value types in RangePredicateEvaluatorFactory to improve error messaging for unsupported value types
refactor treebackedprocessorwrapper to use javacprocessingenvironment instead of inner
removed the import of ` java . lang . annotation ` from ` ParameterInfo . java ` to clean up the code and improve readability
updated playback preference retrieval and improved playback state handling in PlaybackController . java and VideoManager . java to enhance user preferences management and streamline playback
added a map to return a JSON response with a value of null to ensure proper handling of null values in the response
added @ SuppressWarnings ( " Commons DBCP " ) annotations to DelegatingStatement ,  DiskFileItem , and DiskFileItem classes to address
added a new test method ` testSelectInto ` to ` IoTDBExtendTemplateIT . java ` to verify the functionality of selecting into
refactor RTimerTree class to improve code readability to enhance maintainability and facilitate future updates
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core . rules . graph
[ jme358 ] fix # 358 text alignment issue ( # 358 )
[ java ] set name of client pool and scheduler in clientconnector .
changed access modifiers of ` treePane ` and ` resultPane ` from protected to private and modified layout settings for better encapsulation to enhance
added phoneNumbers and phoneNumbers descriptions to ScimUserEndpointDocs . java to enhance user experience by providing detailed phone numbers and phone numbers
added private constructors to multiple classes to enforce encapsulation and improve encapsulation
added null check for responseMap in JsonHttpPropertyRequest and improved error logging in URLStreamProvider to enhance robustness by preventing null pointer exceptions
refactor SolrRequestHandler to improve code structure to enhance maintainability and readability of the code
added a condition to check if DEFAULT _ PARALLEL is not null in XmlSuite . java to ensure that parallels are only processed when
fix checkstyle violation in testvmwaremo and testvmwareutil
added a condition to check for SCARD _ E _ NO _ SMARTCARD in the CardImpl constructor to ensure that cards are only created when
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress system out checks for purpose purposes
camel - 14284 : camel - bindy - bindy : add a method to bindykeyvaluefactory and bindykeyvaluedata
set default value of useowner and usetimestamp to false instead of true
updated the method signature of ` runAndCheckException ` to use ` ThrowingRunnable ` instead of ` Runnable ` to improve exception handling by using
added null checks for ` via ` and ` pathFromSeed ` to avoid potential NullPointerExceptions when ` via ` and ` pathFromSeed `
camel - 14284 : camel - aws - sdb component should set property on endpoint and not configuration object .
updated version string from " 4.0 . 1 " to " 4.0 " and refactored object retrieval methods in LiquibaseXMLTransformer . java to
change default cert validity from 7 to 90 in proxycontrol
added smoothDelta and lastDeltaUpdate variables and updated related calculations in ThreadHandler . java to improve clarity and functionality of the thread handling logic
added null checks for paginator in HttpBatchReader , HttpScanBatchCreator , and HttpUrl parsing in HttpScanBatchReader and HttpScanBatchCreator
added null check for compactionInfo client in Worker . java and created a test for it in TestWorker . java to ensure proper handling of compact
updated the onSaveInstanceState method in ShadowFragmentActivity and added a test for it in FragmentActivityTest to ensure that onSaveInstanceState is called on
updated variable names for consistency and clarity in BatchResourceFactoryBean . java to improve code readability and maintainability
removed the test method ` shouldParseSimpleAndroidColorReferences ` from ` ColorResourceLoaderTest . java ` to ensure proper parsing of Android color references in
fix nullpointerexception in abstractjpaquery . getsingleresult ( )
refactor community handling logic to use a local owner variable instead of a local variable to improve code readability and maintainability
updated the method call from ` l ` to ` LawnchairApp ` in ` DepthController . java ` to use ` Lawnchair
removed unnecessary import of ProcessTools in LocalManagementTest . java to streamline code by eliminating unnecessary dependencies
removed the ` now ` parameter from the ` updateTotalEnergyAverageUsage ` method in ` EnergyProcessor ` , ` Manager ` , and ` Manager
added null checks for extensions and extensions in ExtensionStack . java and created a test for toString method in ExtensionStackTest . java to enhance robustness
[ rxjava3 ] fix the issue that flowableflatmap . onnext ( ) do n ' t dispose the disposable on cancel .
added connection manager timeout settings to MultiGetRequest , ServerTableSizeReader , and ServerTableSizeReader classes to ensure proper handling of connection timeouts
reformatted the initialization of AndroidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replaced ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter . java ` to replace ` NewModelTest
replaced instances of ` SystemResourcesEdgeEventFetcher ` and ` TenantResourcesEdgeEventFetcher ` with ` SystemResourcesEdgeEventFetcher ` and ` Tenant
removed conditional check for cache upload in CachingBuildEngine and added a test for outputHash not calculated in CachingBuildEngineTest to ensure cache
camel - 14284 : camel - netty - add a configuration option to use bytebuf in the endpoint .
updated the partition alteration method to use the qualified name instead of the old name to ensure the correct table name is used for partition alteration
update error message in Transport . java to indicate that the Vertx instance must be created with the preferNativeTransport option to provide clearer feedback on
rename enumtypehandlerserializertest to colortypehandlertest and add unit test
refactor StreamEx class to improve code readability to enhance maintainability and facilitate future updates
removed duplicate setHint calls for specQueryTimeout and specLockTimeout in SessionImpl . java to streamline query and lock timeout handling
added a new file ` StaticLoggerBinder . java ` that implements the ` LoggerFactoryBinder ` interface to provide a standardized way to configure the logger
replaced occurrences of ` CellUtil . cloneFamily ( kv ) ` with ` set ` in multiple Java files to improve code readability and maintainability
updated orientation checks in TaskbarManager to include newOrientation and oldOrientation to ensure proper handling of orientations based on new configuration settings
[ java ] unescape xml for occupant ' s nick in jabber chat room .
added a new test class ` Issue265Test ` and modified the ` compact ` method in ` StoreDirect . java ` and ` Issue2
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress warnings related to mutable and non - mutable types in the codebase
make executionflowcontroltest . Holder a static inner class
updated type checks for audioTracks and subtitleTracks in DLNAMediaInfo , DLNAResource , and FFMpeg
added a boolean parameter ` unlimited ` to the ` NBWriteServlet ` and ` TestWriteListener ` constructors and updated the ` TestWrite
fix blockchain # updatetotaldifficulty ( ) to return invalid totaldifficulty
refactor action handling in DefaultPlaybackController to simplify action assignment logic to improve code readability and maintainability
replaced ` Collections . synchronizedList ( new ArrayList < > ( ) ) ` with ` CopyOnWriteArrayList < > ( ) ` in ` NativeLibrarySupport
added uniform allocation handling in AllAppsView . java and updated pos and bendAngle calculations in AllAppsView . java to ensure uniform
updated the condition to check for both ' : ' and ' : ' keys in HttpURLConnection . java to ensure proper handling of special characters in the
added PrincipalResolver to the CasSimpleMultifactorAuthenticationMetaDataPopulator constructor to enhance flexibility in handling principal resolvers
replace ObjectMapper with JSONParser and ObjectBuilder in DelegationTokenResponse . java to enhance JSON parsing capabilities and improve error handling
added a new method ` removeTrailingSlashes ` to the ` IoUtil ` class to remove trailing slashes from the StringBuilder to ensure that trailing
added empty pattern matching methods in PatternsMatcher and corresponding tests in PatternsMatcherTest to enhance pattern matching functionality and improve test coverage
updated error message formatting in LoadIncrementalHFiles . java to use placeholder syntax to improve readability and maintainability of the error message
fix fire fire not fire with potion entity
modified the order of parameters in the beginOrAdjustReorderPreviewAnimations method call to improve code readability and maintainability
corrected the calculation of decreasePercent in ContractStateCapsule , ReceiptCapsule , and ResourceProcessor classes to ensure correct calculation of
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 7674 .
added a null check for the weightField parameter in DocumentDictionaryFactory . java to ensure that the weightField is a mandatory parameter before proceeding with
added variable expansion functionality for plist variables in AppleBundle . java and created a corresponding test in AppleTestIntegrationTest . java to ensure proper handling of
updated BulletType size from 110 to 140 in BulletType and modified Turret entity handling in Damage , Damage , and Turret
updated KucoinAdapters to use OrderCreateApiRequest instead of adaptOrder to improve type safety and prevent potential ClassCastExceptions
added a new file ` PreParseGrammarTest . java ` to test the parsing of XML grammars to ensure that the parser correctly handles XML grammar
added ` @ SuppressWarnings ( " missing " ) ` annotations to multiple Java files to suppress doclint warnings to improve code clarity and maintainability by
added FontManager import and overrideFont method calls in ExtendedEditText . java to enable font override functionality for improved user experience
added null check for currentUser in AuthorizeTag . java and implemented a test case in AuthorizeTagTests . java to ensure proper handling of
camel - 14284 : camel - cxf - fix the issue that camel - cxf do n ' t use unsafe uris
added a setupData method to JDBCGeometryTestSetup to ensure proper initialization of JDBC data
removed unused import of DumpHandler in MultipartFilterTest . java to streamline code by eliminating unnecessary dependencies
[ hotfix ] [ runtime ] throw flinkexception if task be already cancel .
do n ' t try to create rmi registry if server . rmi . create = true
replaced String . join with StringUtils . join for anticompact ranges in CompactionManager . java to improve code readability and maintainability by using a
updated qualifier handling in ParallelUniverse , QualifiersTest , ResBundleTest , ResBundleTest , and ShadowApplication classes to include display metrics to
[ java ] add cluster member id to service heartbeat .
added a condition to set the total thread allocated bytes based on the version check to ensure compatibility with different version checks for different operating systems
added checks for negative infinity and positive infinity in CustomExpression . java to ensure correct handling of negative infinity and positive infinity values
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 42225 . cgi
added authentication routes for GET , POST , and authorized in Routes . java and created a new AuthenticityController . java file to enhance authentication
added assertion to ensure nextnode is not alive in LoweringPhase . java and added assertion in SnippetTemplate . java to ensure that the next
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure compatibility with the latest HttpClient implementation
[ java ] remove redundant compare ( ) call in defaulttrackselector
refactored serialization methods in RuntimeSerialization . java to improve code clarity and maintainability
do n ' t draw image if cropbox be set to false .
refactor UnitOfWorkFactory to improve code organization to enhance maintainability and readability of the code
added a new variable ` allAppsCellWidthPx ` and updated its usage in ` WidgetProfile ` , ` WidgetPreviewLoader ` ,
tika - 147 : add content - type - name to submd if content - type be not specify
updated the URI construction in ThumbnailsCacheManager . java to use fileId instead of remotePath to improve clarity and maintainability of the code by
added mark functionality and reset logic in Source . java to ensure that the input is correctly set and resetting the input state
added @ Deprecated annotations to multiple Java files to indicate that these classes are outdated and should no longer be used in future development
added a configuration property to control the visibility of error stacks on the error page to enable users to control the visibility of error stacks on the
cloudstack - 10284 : delete domain and template if cleanup fails
do n ' t throw a BailoutException if no foreign call be available
[ drools - 4072 ] implement ruletemplateconfiguration adapter for legacy ddl 5 . x api
refactor ` onRequestPurchaseResponse ` method to use ` waitingForResult ` instead of ` waitingForResult ` to improve code readability and
increased the default timeout duration from 100 milliseconds to 1000 milliseconds in UnboundedSourceSystemTest . java to allow more time for the test to complete
updated import statements and modified the way the parent style is formatted in ShadowAssetManager . java to ensure proper formatting of the resource name based on the
deleted MrefStat . java and MrefStat1 . java files and added MrefStat and MrefStat1 . java to streamline
replaced direct calls to ` getRequested ( ) ` with ` StringUtils . isBlank ( ) ` in ` DependencyInsight ` and ` DependencyInsight `
added constants for no trades and bad status in BTCETradeServiceRaw . java to improve error handling and provide clearer feedback when no trade
[ hotfix ] [ test ] use hamcrest assertion instead of junit in favor of junit 5
added a method to retrieve payment request URLs in BitcoinURI . java and corresponding tests in BitcoinURITest . java to improve payment request
[ flink - 383 ] [ model - planner - 383 ] [ model - planner - 383 ] [ model -
removed redundant calls to setFolderInfo in FolderPagedView . java to simplify code and improve readability
updated conditional checks in JfrBufferNodeLinkedList , JfrChunkWriter , JfrChunkWriter , and JfrThreadLocal classes to ensure proper
refactor null checks in BasicAbstractTuple to use a for - each loop for better readability to improve code clarity and maintainability by simplifying
replaced ` Files . get ( ) ` with ` InputResourceUtility . createNewInputReader ( ) ` for reading linter configurations to
replaced direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a Runnable to ensure the updateBackgrounds ( ) method is called
fix inventory . oninventorytick ( ) not call onplayertick ( ) .
added a new case OCELOT _ BABY to PlayerEvents . java to handle OCELOT _ BABY events in the Player
[ hotfix ] [ runtime ] add @ publicevolving annotation to statettlconfig
added null checks for ` x ` in ` PreparedStatement ` , ` Array ` , and ` PreparedStatement ` classes to ensure proper handling of null
[ hotfix ] [ table - planner - blink ] improve documentation for archivetool
corrected a syntax error in the append0 method call to ensure proper formatting of the output
added a new test method ` jsonSnapshot ` to ` SiteSnapshotVariationsTest ` and modified ` SiteSnapshotVariationsTest ` to include a
updated the ` removeTheTxAndBlock ` method to accept a ` Sha256Hash ` parameter and refactored the ` test ` method to
added handling for the CHANNEL _ ENABLE _ PRIVACY _ MODE command in AmcrestHandler and DahuaHandler classes to
removed ` NoSuchBuildTargetException ` from method signatures in ` BuckConfig ` , ` BuildRuleFactoryParams ` , and ` BuildRuleFactoryParams `
refactor ChangeLogIterator to accept a list of change set filters to improve flexibility in handling different change set filters
do n ' t print stacktraces when guest exception be throw .
updated environment variable retrieval from ` getenv ` to ` getEnvOrSystemProperty ` in ` Ec2Utils . java ` to ensure compatibility with environment variables
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for various classes
refactor space initialization logic in SpacesVisitor . java to use a dropParentUntil method to improve code readability and maintainability
fix : add servercacheoptions . copy ( boolean nearcache ) method to servercacheholder . copy ( )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest ` to ensure the Border is not visible on a float element with overflow
replaced ` ActionGraph ` with ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` and ` ProjectCommand . java ` to improve clarity
updated variable names from LIVE _ URI to PROD _ URI and added logging for MalformedURLException in KucoinExchange . java to improve clarity and
updated string concatenation syntax and improved search path handling in SpringResourceAccessor . java to enhance readability and maintainability of the code
updated unit assertions in SmartHomeUnitsTest . java and SmartHomeUnits . java to include new unit types for microgram and square meters to ensure
updated vertexMask assignment to use getMaskWithSizePacked ( ) instead of getVertexAttributes ( ) to ensure vertexMask does not contain size packed
deleted the Tls12SocketFactory . java file to the functionality is no longer needed in the project
refactored TexBibEntriesResolver to use citationsStream for improved readability to enhance code maintainability and reduce duplication
added a method to check if the RObolectric mode is enabled in ResourcesTest . java to ensure compatibility with Robolectric '
added a check for FirebirdDatabase to return " DOUBLE PRECISION " data type if it is an instance of FirebirdDatabase to ensure
added null checks for dataSource and transactionManager in DefaultBatchConfigurer to prevent potential NullPointerExceptions when data source is not initialized
add a new package - info . java file for the unittest stubs package .
updated the ping command from " www . google . com " to " ping - c 5 127.0 . 0.1 " and modified the test method
[ java ] use try - with - resources for transaction to avoid memory leak .
modified the ` TermScorer ` constructor to conditionally set ` postings ` based on ` scoreMode . needsScores ( ) ` to
[ hotfix ] [ dataflow ] fix npe in dataflowmetricstest
cloudstack - 10265 : update nic listvms api to use new nic api
refactor ObjectInspector initialization to use a new method ` findTargetOi ` for better clarity to improve code readability and maintainability by reducing
added a method to remove build artifacts from the filesystem and corresponding tests to ensure that build artifacts are properly removed from the execution context
added logic to set the row selection interval based on the selected row in ThrustCurveMotorSelectionPanel . java to ensure that the selected row
use assertthrowsarraystoreexception instead of assertthrows
refactor PropertySource class to improve code organization to enhance maintainability and readability of the code
added support for customizable user agent in HttpClientBuilder and HttpClientConfiguration to enhance flexibility in HTTP client configuration by allowing customizable user agent configuration
refactor session creation and restoration logic in MemorySessionStore and SessionTest classes to use a dedicated restore method to improve code readability and maintainability
updated assertions in IssueTest and Reporter classes to use ` Object ` instead of ` String ` and changed the type of ` HashSet ` to ` Object
added a null check for the file ' s content type before creating ByteArrayDataSource to avoid potential NullPointerExceptions when the content type is null
add activationrequestdenied event for activation request .
added @ SuppressWarnings ( " serial " ) annotation and improved formatting in GraphApplet . java to enhance code readability and maintainability
added a method to update the snapshot radius in RecentsView and changed the visibility of the updateSnapshotRadius method from private to package - private to
added logging for schema generation and updated revision handling in StaticMicroserviceVersions . java to improve debugging capabilities and ensure accurate schema generation for 3rd party
changed the return type of the put method from void to int in ArrayMap . java to ensure that the method returns an integer index instead of void
updated KafkaContainerCluster to use ` withStartupTimeout ` instead of ` withStderr ` and modified broker handling in ` KafkaContainerClusterTest `
( chore ) camel - push - consumer : do n ' t try to send message back to broker if needretry = true .
refactor header checking logic in StaticServerHttpHeadersWriter to use a loop instead of a disjoint check to improve code readability and maintain
added package access check for event listeners in EventListenerList . java to ensure proper access control during class loading
added a custom custom adapter to the ApplicationsFragment and updated the onCreateView method to use it to enhance user experience by allowing custom adapters for
added nullability annotations to the applyIcon method in KeyboardQuickSwitchTaskView . java to improve code clarity and prevent potential null pointer exceptions
refactor DownloadStateCursor to use try - with - resources for better resource management to improve resource management and prevent potential memory leaks
[ flink - 26464 ] [ table - planner - blink ] fix error in basesqmtosqlastconverter
added JUnit test annotations to HibernateCursorItemReaderIntegrationTests , HibernateCursorItemReaderStatefulIntegrationTests , and HibernateCursorProjection
[ java ] add a poller to the DataInputStreamWithTimeout class to improve the performance of the poller process
added support for ENABLED _ TS in VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to
refactor UpgradeCatalog150 class to improve code organization to enhance maintainability and readability of the code
rename ` ` testnet3 ' ' to ` ` oldtestnet ' ' for consistency
do n ' t update propertiesviewd if there be no geos
updated OnboardingPrefs retrieval and added null check for onboardingPrefs in AppsDividerView . java and ActivityContext . java
refactor HdfsDirectory to extend BufferedIndexOutput and modify flush and length methods to improve resource management and error handling to enhance performance and ensure
added a check for path iterator before setting the clipping path in PageDrawer . java to ensure the clipping path is only set when the path iterator is
removed unnecessary synchronization in SocketChannelImpl . java to simplify the code and improve readability
refactor the ` addToRow ` method in ` TemplateTransformer ` to use a dedicated ` addToRow ` method to improve code readability and maintain
added a method ` isWindows ( ) ` to ` Utils ` and refactored file renaming logic in ` Wallet . java `
updated ALPHABET and ASTERISK _ ENCODINGS constants to use CHECK _ DIGIT _ STRING instead of ALPHABET
added null and boolean checks for executed types in NodeGenFactory . java to ensure correct handling of unexpected return types in the execution process
reformatted code for better readability in IndexingChain . java to improve code readability and maintainability
fix timestamp _ sequence ( ) to work with nanoseconds in where clause
removed unnecessary conditional check for postedRunnableStacktraces before adding runnables to improve code readability and maintainability
corrected a typo in the description of the AbstractGCSProcessor class to improve code readability and maintainability
replaced ` assertInitialized ` with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve clarity and functionality by using a more de
updated directory parameter from null to " single " in CachingDirectoryFactoryTest . java and RAMDirectoryFactoryTest . java to ensure compatibility with
replaced ` size ( ) ` with ` filterCount ` in ` FaultTolerantChunkProcessor ` and updated related methods to improve clarity and
updated method visibility from ` FileWithTabs ` to ` \ tpublic ` and modified file handling in ` T4994049 . java `
refactor conditional checks in ConsoleReaderTest to use a unified assumeTrue method to improve code readability and maintainability by reducing redundancy
remove admin check from getfeedbacksessionsaction # getfeedbacksessions ( )
updated comparison logic in AllAppsView . java to correct the positioning of the newSelection variable and adjusted the positioning logic to ensure accurate
do n ' t call notifyclientonresultsavailability when there be no profiled app thread
added loadModelList ( ) and refresh ( ) methods in DataModelManagerDialog , modified connectionList initialization in DbConnectionDialog , and ExportPanel
replaced hardcoded ` writeBufferSize ` with ` WRITE _ BUFFER _ SIZE ` across multiple classes to improve code readability and maintainability
refactor segment size calculation in DocumentsWriter and add a new test for no documents index in TestIndexWriter to improve code clarity and maintainability by
[ blender ] fix dvert check in armaturemodifier
refactor FileDisplayActivity to improve code organization to enhance maintainability and readability of the code
added a custom UnsupportedOperationException to avoid filling in stack traces to avoid filling in stack traces
updated the method to return the average line height in LabelPainter to improve accuracy of label height calculation
updated RotationTouchHelper to accept a DisplayHolder parameter in RecentsAnimationDeviceState and RotationTouchHelper classes to streamline the initialization process
refactor quoting logic in AVA . java to check for single quotes before processing to improve readability and maintainability of the code
updated ` ServletHandlerInterceptor ` to use ` IdConversion . convertToLong ( s ) ` instead of ` Long . valueOf ( s , 16 )
added a new test method ` testSmall ` to ` testBig ` and modified the ` name ` method in ` ServerDatagramConnectorTest `
updated the substring method call in TestSqlEntityProcessorDelta . java to ensure the correct substring method is used for the COUNTRY _ CODE _
refactor Cache class for improved performance to enhance performance and maintainability of caching operations
updated variable names from ' e ' to ' ev ' in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in naming conventions
updated the ` doBefore ` method to accept an ` boolean ` parameter and modified the ` doBefore ` method to use ` IndexSearcher ` to
added a Persistent JTable test to verify the functionality of the GcodeTable with a data table to enhance user experience by providing a visual representation of the
updated WEBAPP _ CONNECT _ TIMEOUT to use cfg . getConnectTimeout ( ) instead of a hardcoded value to improve flexibility in
updated generic type usage in multiple Java files to improve type safety and clarity to enhance code readability and maintainability by using generics
updated TestMediaService . java file to improve test coverage for media service functionalities
removed the HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK constant from Messages . java to clean up the code and
added a new file MarketsPrintTool . java to demonstrate market printing functionality to facilitate the printing of market currency data in the application
added validation for hostname compliant characters and dashes in EndpointAddressInterceptor to ensure that the component does not contain alphanumeric characters in the account
added multiple ` registerSecurityKeyStart ` and ` registerSecurityKeyComplete ` methods to ` AccountProxy ` , ` HttpAccount ` , and `
refactor ServerSpanThreadBinder to improve thread handling to enhance performance and maintainability of the code
updated user object retrieval from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` and modified block bounds in `
[ csv2shape ] add the _ geom and number to the csv2shape builder
replaced callGasWord with gasCost in VM . java and removed unused imports in Program . java to improve code clarity and maintainability by
refactor Parameters class to improve code readability to enhance maintainability and facilitate future updates
added a call to setIgnoreNullValues ( true ) in MultiplePiePlot . java to ensure that null values are ignored in the plot
refactor the bundle loading logic in ResourceBundle . java to streamline the loading process and improve performance to enhance code readability and maintainability by reducing
updated the character ' c ' from ' _ ' to ' - ' in TaggedPdfReaderTool . java to correct the syntax for better readability
add action . isallowedduringediting ( ) and make executescriptaction . isallowedduringediting configurable
added userModified variable to LoginSamlAuthenticationProvider . java to enable user modification functionality in the authentication process
added a new file ` TestSealedObjectNull . java ` to test the behavior of ` SealedObject ` with null values to ensure that the
renamed the method ` onOpen ` to ` setResponse ` in ` ConnectPromise ` and ` WebSocketClientConnection ` to improve clarity and consistency in
added a static final set for SNOW tags in BlockEventListener . java to ensure compatibility with server version 1.11 . 5 and above
updated the CryptsyPublicTrade class to include an ID parameter and modified the Trade constructor to include it to improve trade tracking by including the
added error handling for closing HMS connection in HiveStreamingConnection to ensure proper resource management and prevent potential memory leaks
use random . nextLong ( ) instead of system . currenttimemillis ( ) when generate seed .
added a new device profile for the Nexus 5 in the DynamicGrid . java file to enhance the visual representation of the device profile
[ java ] fix refcount reset when the parent be disconnect .
replaced the use of ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext . java ` to
added support for WHITESPACE _ TEXTUAL _ OP in FormatToken and updated related logic in TokenFormatter to enhance token formatting functionality and ensure correct formatting
added checks for empty and empty files in SaveTask . java and improved test cases in SaveAndLoadTaskTest . java to ensure that the file
added synchronized keyword to multiple method signatures in MLogWriter . java to ensure thread safety during serialization operations
log4j2 - 1334 add support for mutablelogevent in smtpmanager
replace LengthLike with NonNegativeLengthLike in PrimitivePropertyBuilders . java to ensure proper handling of negative lengths in property builders
refactor code to use createcontext ( ) instead of createcontext ( )
fix issue with jimple catch and jimple / jimple / jimple / jimple
updated JUnitRunner and AndroidPlatformTarget to include support for Android SDK Manager in the build tools directory to ensure compatibility with Android SDK Manager in the
updated cache size calculation from maxMemory / 16 to maxMemory / 8 to optimize memory usage for improved performance
added a condition to ` InvocationStageTrace . java ` to check for both ` finish ` and ` start ` in ` InvocationStageTrace . java
do n ' t try to load a BCFKS keystore if it ' s null .
updated UpstreamCheckUtilsTest to use a configurable port instead of a hardcoded value to improve test reliability by ensuring the correct port is used
updated the reference from ` panelDim ` to ` otherParent ` in ` DockManagerW . java ` and ` DockSplitPaneW . java
added support for OpenGL 64 - bit shaders in GLRenderer to ensure compatibility with OpenGL 4.0 and above
refactor PopulatorContext class to improve code structure to enhance maintainability and readability of the code
do n ' t call handlesaveallnotification if the project do n ' t exist
added charset handling for file encoding in ZQLJobManager to ensure proper character encoding is used for JSON output
added a length check for the args array in IkStepDefinition . java to ensure that the args array is not empty before proceeding
refactor FakeOSSOHeaderDecoder to use constants from PREFIX instead of hardcoded strings to improve code readability and maintainability by using
add @ deprecate annotation to generatejavasources , config , javageneratormojo , javageneratormojo , and generatejavasources
removed debug logging statements from DerbyDatabase . java to clean up the code and improve readability
updated CepEspTest and CepJavaTypeTest to include a timeout parameter and modified assertions in CepEspTest and CepJavaType
replaced ` . parallelStream ( ) ` with ` . stream ( ) ` in ` PersonNameSuggestionProvider . java ` to improve performance by reducing
updated operation type check and improved logging message formatting in HubUpdater . java to enhance clarity and maintainability of the code
added new constants for IBM J9 VM in Constants . java and created a test for version information in TestDDRExtensionGeneral . java to ensure
updated logging message format in FontFamily . java and added a new DebugFonts . java file for font handling to improve clarity and maintainability of
updated import statements in ALPNNegotiationTest and NegotiatingServerConnectionFactory to use HttpVersion for HTTP version checks to ensure compatibility with HTTP
added a RateControl import and set it to NO _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to disable the rate control
added a new file Test6741426 . java that implements Runnable to test JComboBox and JTextField rendering to ensure that JComboBox and JTextField paints correctly
updated the assertion message in CsrfAwareEntryPointAndDeniedHandlerTest from " Could not verify the CSRF token " to " ex
added null checks for dbMgdPath and dbExtPath in conditional statements to avoid potential NullPointerExceptions when dbMgdPath is
[ s3 ] move s3copyobjectrequest to core . s3 package
removed the accentColor parameter from setupCategory and setupAboutCategory methods in SettingsActivity . java to simplify code by eliminating unnecessary parameters
updated the error message in TemporaryFolderUsageTest from " / temp1 " to " fileAtRoot " to provide clearer context for folder
replaced instances of ` MAP _ TYPE _ INFORMATION ` and ` COLLECTION _ TYPE _ INFORMATION ` with ` ClassTypeInformation . OBJECT `
fix invalid address in clientnetworkconfig . addaddress ( )
added a new certificate " keynectisrootca [ jdk ] " to VerifyCACerts . java to enhance certificate verification by including the
[ hotfix ] [ runtime ] use int instead of void for compute ( ) and compute ( )
added a conditional check to set the menu mode based on popup state to ensure the menu is displayed only when the popup is not shown or hidden
fontbox : fix arrayindexoutofboundsexception in memoryttfdatastream . read ( )
added a new file ` FinalizerInfoTest . java ` to test garbage collection of ` MyObject ` instances to ensure that ` MyObject `
replaced ` map ` with ` doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator ` to improve code read
do n ' t add compensation request to the compensation proposal if it ' s a custom address
refactor StringSubject class to improve code readability to enhance maintainability and facilitate future updates
updated byte array size from 1 , 000 , 000 to 1000 , 000 , 000 in BatchValidateSignContractTest . java to
renamed the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java ` to improve clarity
updated the query handling in RetweetActivity to replace " @ " with " from : " in the saveRecentQuery method to improve query accuracy by
removed a conditional check for forRebalance in SimulatorDiscoverer . java to simplify the code and improve readability
added account import functionality to YubiKeyAccountRegistryEndpoint and corresponding tests in YubiKeyAccountRegistryEndpointTests to enhance account registration functionality and ensure
updated shader program configurations in ShaderManagerLwjgl . java and FontMaterialProducer . java , and modified asset retrieval in AbstractNode .
added null checks for ` cnt ` in ` paintOnTopLoop ` and updated padding logic in ` SideMenuBar ` and ` Toolbar ` to
refactor AbiWriterProtocol to improve code structure to enhance maintainability and readability of the code
added a null check for subName before assignment caption in HierarchyBase . java to avoid potential NullPointerException when subName is null
change data _ flag from IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java to align data flags with the
refactor conditional checks in CustomExpression . java for improved readability to enhance code clarity and maintainability
replaced the method ` requestBlindVoteListFromNetwork ( byte [ ] majorityVoteListHash ) ` with a call to ` sendRepublish
added a new test method ` testCase4 ` to ` PostgresTest . java ` to verify the functionality of ` PostgresTest . java `
updated substring method from double quotes to single quotes in SubtitleUtils and RemoteUtil classes to ensure consistent handling of special characters in subtitles
updated line separator handling in DefaultJavaPrettyPrinter to use a constant for consistency to improve readability and maintainability of the code
make singleimplementor snapshot a static field in compilationfinal .
added null checks for excludeSet before adding queries in SimpleFacets . java to avoid potential NullPointerExceptions when excludeSet is not present
add support for bridge in thinghelper . mergeallthings ( )
updated error handling in Ktab . java to provide clearer error messages for missing and unknown commands to improve user feedback by providing clearer feedback on
added a check for the existence of the outFile before returning it to avoid potential null pointer exceptions when the output file does not exist
added support for parse datetimes from tee , plus , and minus in DateConverter to enhance date parsing functionality for better data handling
added a query to retrieve a Post by its slug in SpringDataJPALockTest . java and updated PostRepository . java to include a slug
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and added a check for ` Offline
added a static initialization block for SimpleClientHttpRequestFactory and set timeout and read timeout settings in ClientRegistrations . java to improve resource management and ensure
updated file path handling and assertions in SourceTest . java and Source . java to improve clarity and accuracy of file path assertions
remove unused graalvm . version property from defaulthomefinder
added validation for access token and refresh token validity in ClientAdminBootstrap . java to ensure proper handling of token validity and refresh token validity
updated the return statement to use Options . v ( ) . android _ api _ version ( ) instead of a hardcoded defaultSdkVersion to
replaced occurrences of ` this . placeholderPrefix ` with ` placeholderPrefix ` and ` placeholderSuffix ` in ` PropertyPlaceholderHelper . java ` to improve
updated the Public Key Algorithm description to include a version number to improve readability and maintainability of the license information
refactor ZkSolrClientTest to use CountDownLatch for managing collections to improve synchronization and ensure collections are processed in parallel
removed the import of BigInteger and added it to simpleTypes in MongoMappingContext . java to streamline the code by eliminating unnecessary dependencies
added a condition to check if the button text is equal to the string resource to ensure that the toast is shown only when the button text matches the
added a condition to check if Mencoder no out sync is enabled before proceeding with the method to ensure proper handling of MEncoder video configurations
update default event loop count from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to increase event loop size from 10 to 15
changed access modifiers of several classes and methods from abstract to protected in CountMin4 , IncrementalResetCountMin4 , PeriodicWindowTin
added a method to retrieve the sort field in ExternalFileField and created a new ExternalFileFieldSortTest class to enable sorting of external files in
updated error message in FetcherException from " Invalid URL " to " Connection error " to provide clearer context for connection issues
updated event handling to escape the event source and added a new property for the Rocket component to enhance event processing by properly escaping the event ' s
changed the access modifier of the check method from private to protected final in ShapeRenderer . java to enforce immutability of the check method
added synchronization handling for SynchronizeFileOperation in FileActivity to improve user experience by providing feedback when a file transfer fails
updated the URI construction in ThumbnailsCacheManager to use URLEncoder for file path encoding to ensure proper encoding of the file path for previews
added a null check for the property " cn1 $ infinite " in InfiniteContainer . java to prevent potential NullPointerExceptions during initialization
updated the total variable from 0 to 1 and adjusted the calculation for the total value to improve performance and correctness of the hash set calculation
added a lock timeout check for feed updates in FeedRefreshUpdater . java to ensure that locks are only updated if the entry is locked
refactor conditional checks for setting the ' who ' variable in SolarisAclFileAttributeView . java to improve code readability and maintainability by
replaced ArrayList with Edge array and sorted edges in LatLonTree . java to improve performance and readability of the code
added IOUtils for closing the input stream in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
fix a bug in bibtexparser that cause the build to fail on macos
added strict parameter handling in Main . java and corresponding tests in MainTest . java to ensure proper parsing of unknown properties based on the " strict "
[ micronaut ] add default validation for @ constraint ( default = true )
camel - 14297 : camel - http : use http4 instead of http for camel - http
added a call to waitForThingsToLevelOut ( 30000 ) in TestCloudPivotFacet . java to provide a mechanism to wait for things to
replaced ` bytes . length < = Integer . MAX _ VALUE ` with ` bytes . length ` in ` UBJsonWriter . java ` to simplify
refactor ApplicationTest class to improve code readability to enhance maintainability and facilitate future development
changed the type of the ` details ` variable from ` String ` to ` StringBuffer ` for better performance to improve performance and readability of the code
replaced instances of ` Type ` with ` RoboType ` across multiple files to align with the new RoboType naming conventions
[ java ] make recorddescriptorpoller and recordsubscriptionpoller return aBORT if dispatch complete .
added cache key and cache lookup functionality in EntityProcessorBase . java and corresponding tests in TestCachedSqlEntityProcessor . java to ensure that the cache
added a new file PutfieldError . java containing a main method that throws a IncompatibleClassChangeError to demonstrate the use of IncompatibleClass
[ aws ] add a translation to the triggerconnect ( ) method in awsaddresstranslator so that it can be use by the user .
hbase - 16464 memtable . enqueueflush ( ) should log more information when memtable be reach threshold
replaced instances of ` Space . build ( " , empty " ) ` with ` Space . SINGLE _ SPACE ` across multiple Java files to
[ hotfix ] [ runtime ] fix checkstyle violation in flyweight
refactor TestMethodResultMapBuilder to improve code readability to enhance maintainability and readability of the code
added exception handling for ` java . lang . Integer ` methods in ` FindNullDeref . java ` to improve robustness by ensuring exceptions are
[ hotfix ] [ runtime ] remove unused parameter from tasklocalstatestoreimpl
updated string return statements in Utils . java to include an additional string representation to improve readability and maintainability of string resources
added handling for DeepShortcutView instances in Utilities and FloatingIconView classes to improve compatibility with DeepShortcutView instances
updated JwtIssuerValidator to use a Predicate for claim values instead of a String to improve type safety and ensure correct validation of issuer URLs
renamed the method ` buyQuickRate ` to ` getBuyQuickRate ` and introduced ` getBuyQuickRate ` and ` getSellQuickRate
added a new ` CoverageConfig ` class and modified ` CoverageController ` to use it to load project data from ` net . sourceforge .
added a check to ensure EventBus is registered before registeringSticky to avoid registration of sticky events when not registered
added handling for ASCII characters in the normalization process in NormalizerBase . java to ensure only valid characters are processed for normalization
[ hotfix ] [ table - common ] fix typo in jobcoordinationservice . ismigrationallowed ( )
added error handling for SQL execution in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that the update statistics SQL does not fail
camel - Cometd - Producer : migrate to junit4 and camel - Cometd - Producer - Consumer and camel - Cometd - Producer -
updated EndKind references from " OK " to " OK " in HtmlTag . java to ensure compatibility with the latest version of the tag
added a new line " < br / > " to the HtmlCoreReport class to enhance the readability of the report
updated the calculation of ramBytesUsed to handle null scores and added a null check for scores in DocSlice . java to improve robustness by
added Gson serialization and deserialization support for StringHolder in CustomTypeAdaptersTest . java to ensure proper serialization and deserialization of StringHolder instances in JSON
added extra data retrieval from mining parameters in MergeCoordinator and created a test for it in MergeCoordinatorTest to ensure proper handling of extra data from mining
added a static final map to track the number of arguments in the DependencyParser class to improve flexibility and maintainability of argument handling
refactor PathParamServerEndpointConfig class for improved clarity to enhance maintainability and readability of the code
( chore ) camel - migration : fix race condition in defaultmigrationaddresscomparator and migrationrulelistener
updated method parameters from ` part ` to ` partOrList ` in ` RestClientRequest ` , ` RestClientRequestImpl ` , and `
[ drools - 456 ] fix resource path for statistic directory in web . xml
removed the basicCategory method from SpanishTreebankLanguagePack . java to simplify category extraction logic and improve code readability
added a new ` load ` method to ` AbstractEntityLoader ` , ` EntityLoader ` , ` EntityLoader ` , and ` UniqueEntityPersister
hbase - 17284 clear the futures before remove the element from the taskpool . take ( )
do n ' t set size when there be no width / height
fix checkstyle issue in pool . fillpool ( )
removed the ` assureMatchVersion ( ) ` method from multiple filter factory classes to streamline the code by eliminating unnecessary dependencies
[ micronaut ] add default method to executablemethodwriter , and add default method client
added a conditional check for the LA character in the DRLParser . match method to ensure that the input is only matched when the LA character is
refactor multiple subject classes related to GuavaOptionalSubject , IterableOfProtosSubject , MapWithProtoValuesSubject , and ProtoSubject to improve
added a check to throw an exception for invalid payload length in WsFrameBase . java to ensure proper error handling for invalid payload lengths
move publishsubscribechannel to ' dispatcher ' package since it depend on dispatcher ( avoid a tangle ) . also move the publishsubscribechannelparser into ' config ' .
changed the data type of the ` executionId ` variable from ` String ` to ` Long ` across multiple classes to allow for more precise execution ID
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 11919 .
removed log statement for overlay version logging in SolrConfig . java and added imports in SolrConfigHandler . java and SolrConfigHandler . java to
updated the delay calculation in FileSyncAdapter . java to increase the delay from 24 seconds to 3 seconds to improve synchronization performance by allowing more time for
[ hotfix ] [ test ] fix test failure in segmentv1v2tov3formatconvertertest
refactor path handling in QueryProcessExecutor from String to Path object to improve type safety and clarity in path management
added URI handling and improved error logging in DefaultPackageScanClassResolver to enhance URL processing and provide clearer error messages for invalid URLs
[ flink - 24424 ] [ table - planner ] [ table - common ] [ table - common ] [ table - common ]
added a new file ` SpringSecurityAuthenticationSource . java ` that implements the ` LdapUserDetails ` interface to provide a mechanism to retrieve the principal
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with newer Android versions
refactor custom filename handling in GenericViewFragment to use a cached list instead of a hardcoded string to improve user experience by providing a cached
added a new test method ` testNewput ` to ` TxInputUtilTest ` and updated assertions in ` StoreAPITest ` to ensure proper
updated the parameter name in the stream method from ` collection . getName ( ) ` to ` collectionName ` in ` MongoTemplate . java ` to
refactor zoom calculation and logging in MapOverviewImageMouseHandler . java to improve code readability and ensure proper casting for zoom values
added similarity handling to KNearestNeighborClassifier and updated classification tests to use Similarity to improve accuracy of classification results based on similarity
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to improve query performance by utilizing constant score range queries
replaced ` toString ( ) ` with ` getReason ( ) ` in ` LowResourceMonitor . java ` to improve code readability and maintainability
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated ` requestMtu ` method implementations in ` ShadowBluetoothGattTest ` and ` ShadowBluetoothGatt ` to
refactor ServletInputStream implementation to use createServletOutputStream ( ) instead of createServletInputStream ( ) to improve code readability and maintainability by reducing
added logging for UnsatisfiedLinkError in VoskSTTService . java to improve error handling and logging for UnsatisfiedLinkError
replace HashMap with ConcurrentHashMap for mProcessingChains to improve thread safety and performance in concurrent environments
updated Japanese and Japanese resource files to include " grouped " and " summary " to enhance user experience by providing clearer and more informative
updated the condition in JDBCTypeMapping from ` size > 0 ` to ` size > 1 ` in ` JDBCTypeMapping ` and corrected the
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety during player addition and removal operations
refactor TerminalView to use AccessibilityStateTester for controlCodes and codeMatcher to improve code readability and maintainability by reducing duplication
added a new behavior check for side navigation in MenuBar . java and modified the close button condition in SideMenuBar . java to enhance functionality by allowing
removed Disposable usage in PoloniexManualExample . java and added state change handling in WampStreamingService . java to simplify code and improve error
added validation for contract type in UpdateSettingForEnergyLimitContractActuator and updated error messages in UpdateSettingForEnergyLimitContractActuator
updated variable names from ` url1 ` to ` javaUrl ` in ` PostmanJsonBuilder . java ` and added protocol handling in ` Url
camel - 14284 : camel - soap - jaxb - add getter and setter for namespaceprefixref in camel - soap - jaxb
added a static final long ONE _ MINUTE _ MILLIS and refactored assertions in TestRange . java to improve code readability and maintain
added a check to verify the presence of the Jetty Solr runner in BasicAuthIntegrationTest . java to ensure that the BasicAuthPlugin restarts the
added pricefeed support to trade chart chart
refactor configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to use a local variable to improve code readability and maintain
updated the handling of the ' from ' and ' end ' variables in NativeString . java to improve clarity and correctness of the string indexing
added file download functionality to the FileDownloader class to enable file downloading and saving functionality
added a setLength method to RandomAccessFile and set the log channel to the file channel to ensure proper resource management and prevent potential memory leaks
added a method ` checkIfRegistryRunning ` to ` TestLibrary ` and a retry method ` deleteFileIfExistsWithRetry ` in ` FileUtils `
updated import statements in EditTest , Quick3dMain , TextureTest , and TextureTest classes to use componentPresetDao . startLoading ( )
added @ SuppressWarnings ( " SuppressWarnings ( " ) annotations to multiple Java files to suppress unchecked warnings and improve code clarity
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions during execution
added support for setting isolation level to TRANSACTION _ READ _ COMMITTED and TRANSACTION _ READ _ TRANSACTION _ SERIALIZABLE
added error handling for transaction attributes in AbstractStepFactoryBean , ItemOrientedStep , and SkipLimitStepFactoryBean classes to improve error management
replaced ` CasClient ` with ` DirectCasClient ` in ` CasManagementWebAppConfiguration ` and refactored ` casManagementSecurity
updated menu item visibility and added tour tag details in NavigationDrawerFragment and NavigationDrawerFragment to enhance user experience by providing clearer menu item visibility and
renamed the method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and ` FileDisplayActivity . java ` to
pdfbox - 4071 : avoid cast to cosdictionary , pdfbox - 4071 , pdfbox - 4071 , pdfbox - 4071
updated the ` onFontSizeChanged ` method to use ` TypedValue . COMPLEX _ UNIT _ PX ` instead of ` size ` to
added a check for the validity of the fact before assigning it to the fact to ensure that the fact is valid before processing
refactor DistBuildTargetGraphCodec , ConvertingPipeline , ConvertingPipeline , Parser , and VisibilityPatternParser classes to improve code organization and
return new ArrayList ( this . spans ) instead of a new ArrayList ( this . spans ) to ensure proper initialization of the ArrayList instance
removed lockService usage and simplified changelog validation logic in Liquibase . java to improve code readability and maintainability
added a ` setRevision ` method to ` MicroserviceVersions ` and updated ` InstanceCacheChecker ` and ` TestInstanceCacheChecker ` to set
updated foreignKeyName and indexName handling in AbstractRetriever and TableRetriever classes to improve clarity and consistency in naming conventions to enhance code readability and maintain
camel - 14284 : camel - aws2 - s3 - add a test to verify the configuration of uri - endpoint - override - endpoint
removed the currency pair parameter from the getBitstampUserTransactions method in BitstampAccountService and added a new method in BitstampAccountService
added a try - catch block around the getComponentInstance method call in BlueprintContainerRegistry . java to handle potential NoSuchComponentException when retrieving the component
[ coyote ] add option to disable push when push be enable .
test : fix legacyaddresstest failure on window
changed the visibility of the ` findDropTargetAt ` method from package - private to public to allow access to the ` findDropTargetAt `
refactor push warning setup in DrawerActivity and NotificationsActivity to improve code readability and maintainability by encapsulating snackbar setup
added a debug log statement for closing the channel in NettyAsyncHttpProvider . java to ensure proper resource management and prevent potential memory leaks
refactor LdapPasswordPolicyEnforcer to use StringUtils . isEmpty for null checks to improve code readability and maintainability by reducing redundancy
refactor DefaultAnnotationEngine and Stubber classes for improved clarity to enhance maintainability and readability of the codebase
added an @ Ignore annotation to MemoryManagerTest . java to mark the test as ignored due to issue PHOENIX - 2840
nifi - 10226 : add a timezone adapter to aboutdto dto to allow user to specify a timezone of the nifi instance
updated assertions and modified boundary checks in Splitter . java and StorageService . java to improve readability and maintainability of the boundary validation logic
removed exception handling for ClassNotFoundException in BeanContextSupport . java to simplify code and improve readability
fix race condition in connectioncacheimpl . getactivecircuits ( )
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by using IllegalStateException instead of GdxRuntimeException
flume - 102 : move source . stop ( ) and sink . stop ( ) from pollablesourcerunner to sinkrunner
updated logging level from error to info for failed authentication in FastBindLdapAuthenticationHandler . java to improve error handling and provide clearer context for user
refactor ContainerOrderFocusTraversalPolicy class to improve focus traversal logic to enhance performance and maintainability of the code
change return type of getpointlength ( ) and getpointlength ( ) from double to int
updated the constructor signature of CasRiskBasedAuthenticationEvaluationStartedEvent to improve code readability and maintainability
refactor database connection handling in SchemaCrawlerMain and Executable classes to use a try - finally block for connection closure to improve resource management and ensure proper
add default tlsv1 and tlsv1 protocol to connectionfactory . getdefaulttlsprocotol
corrected the spelling of " metadata " in the IllegalStateException message to improve code readability and maintain consistency
refactor audio stop logic and adjust ndx calculation in MediaManager . java to improve clarity and correctness of the audio stop logic
removed conditional check for debug logging in HttpConnection . java to simplify debug logging for better readability
added ` isTransient ` method to ` JpaPersistentPropertyImpl ` and corresponding unit tests in ` JpaPersistentPropertyImplUnitTests ` to
updated stack version assertions in UpgradeResourceProviderTest to use the correct entity version to ensure accurate representation of the upgrade version in the upgrade process
trufflevm : use object . get ( ) instead of symbol . get ( ) .
[ java ] make isbinarytype public so that it can be use by proxy .
updated the default value of TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE from par
refactor the findProblem method in JavaEditor and remove unused imports in JavaProblem and JavaProblem classes to improve code clarity and maintainability by
removed the DEFAULT _ OFFHEAP constant from DictionaryIndexType and BloomFilterHandler classes to simplify the code by eliminating unnecessary default value
use system . getproperty ( ` ` line . separator ' ' ) instead of ` ` \ n ' '
refactor DebugHelper class to improve code readability to enhance maintainability and facilitate future development
added a boolean field ` ownsTexture ` to ` ParticleEffect ` and initialized it in ` ParticleEffect ` and ` ParticleEffect `
added additional LDAP configuration options to HiveConf . java to enhance the configuration options for LDAP operations
[ hotfix ] [ table - planner - v1beta1 ] fix javadoc warning in datacatalog
refactor InputMethodManager initialization and toggleSoftInput calls in DetailActivity . java to improve readability and maintainability of the code
added a test for converting a map of primitive types to objects in DataTableTypeRegistryTableConverterTest . java to ensure correct handling of primitive types in
updated the size calculation in TestFileSystem to delete the " memFS : fsMem . mv . db " file to ensure proper resource management and prevent
updated error message to include a newline for clarity to improve user feedback by providing clearer guidance on closing open resources
refactor dropSequences method implementations across multiple database classes to use a unified dropSequences method across different database classes to improve code organization and
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
updated the assignment of the variable ` f ` in the ` createField ` method call to ensure the variable is assigned before creating it to avoid potential
do n ' t show hierarchical icon if there ' s a map / style model .
added a new test method ` findOneAfterUpsertForNonExistingObjectReturnsTheInsertedObject ` to ` MongoTemplateTests ` to verify the functionality
[ java ] use ` low ` instead of ` < > > > > > > > > > > > > > > > > > >
added a method to record the launch intent and modified broadcast intent handling in multiple classes to improve intent tracking and prevent potential NullPointerExceptions
added a createGraphics ( ) method to create a Graphics2D object and disposed its data to ensure proper resource management and prevent potential memory leaks
[ # 11919 ] instructor : add team member to the list of response for the last group .
added a check for zero inventory ID in Inventory . java and a corresponding test in InventoryTest . java to ensure player ' s inventory ID is generated
added a conditional check for the found state before breaking the loop in ConfigDescriptionRegistry . java to ensure that the loop is only executed when the found
updated method parameters in ReloadableJavaParserVisitor and ReloadableJava17ParserVisitor for consistency to improve code readability and maintainability by
added handling for blended tiles in TileMapRenderer and updated the initialization logic in TiledLoader to improve robustness by preventing potential null pointer exceptions
removed multiple instances of ` SunJCE _ c ` from the ` @ Classes ` annotation in ` Probe . java ` to streamline
updated the ` getArea ` method to use ` abs ` and modified the sum calculation logic in ` IfcTools2D . java ` to
updated the initialization of lockOnSync and throttleRate in Throttler . java to improve clarity and maintainability of the code
pipeseventbus . addactions ( ) do n ' t add handler to the list if it ' s already in the superclass .
updated the timeout duration for ZkController initialization from 1000ms to TIMEOUT in ZkControllerTest . java to allow for more time for the
added a new test method ` passcode _ with _ client _ parameters ` to ` TokenMvcMockTests . java ` to verify the passcode
added imports for KeepWordFilter , LengthFilter , CharArraySet , and CharArraySet , to TestRandomChains . java to ensure
removed the JUnit Ignore import from RandomPlaneTest . java to clean up the code and improve readability
[ gr - 16464 ] fix int overflow in bitva _ start .
replaced direct call to ` btCollisionObjectArray _ at __ SWIG _ 0 ` with a call to ` btCollisionObject . getInstance
added a new property ` BUILD _ COPYRIGHT ` to ` BuildProperties ` and updated the ` OPENROCKET _ URL ` in
add getdistributedobjects ( ) method to jetclientinstanceimpl . getdistributedobjects ( )
added debug print statements for components in FinSet . java and updated test cases in MassCalculatorTest . java to enhance debugging output for better debugging and
replaced TOTAL _ MEMORY and MAX _ MEMORY with MAX _ MEMORY in SmartDexingStep . java to improve memory management by
updated exception handling from MetadataException to Exception in StandaloneSchemaFetcher and CreateAlignedTimeSeriesPlan classes to improve robustness by catching all exceptions
[ btc ] improve validation of delayedpayouttx and delayedpayouttx
updated the input string to use ` json ( ) ` instead of ` replace ( ) ` and added exception handling for big _ integer _ t to
updated the minimum capacity check from 1 to 0x40000000 in ObjectSet . java to ensure that the table size does not exceed a maximum of
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to improve clarity and prevent potential null pointer exceptions when setting decimal digits
removed the @ AddToRuleKey annotation from several fields in AppleTest . java to simplify the code and improve readability
added error handling for security exceptions in FileHelper and TextHelper classes to improve robustness of display name retrieval and ensure proper handling of SecurityExceptions
added support for ` StyleWithMultipleAttributes ` in the ` ShadowThemeTest ` class and updated the ` ShadowThemeTest ` to support multiple attributes
updated the condition to check for the size of sheets in HSSFWorkbook . java and modified test cases in TestHSSFWorkbook . java to
updated the method call from ` primaryColor ` to ` elementColor ` in ` ManageAccountsActivity . java ` to ensure the correct color
updated DefaultEventBus to handle null replyHandler and simplified path resolution in DefaultPlatformManager to improve robustness by preventing null pointer exceptions when replyHandler is
added support for the " utf8 _ bin " column in MariaDbDbmsType , MySqlDbmsType , and AbstractDbmsType to
added a default method ` whenType ` to return an ` Optional < T > ` for the ` Tree ` class to provide a default implementation for
refactor navigation repository retrieval to use a new method for obtaining the user view destination to improve code readability and maintainability by encapsulating
do n ' t use ngupload for opml import , use a classic http post
[ hotfix ] [ kinesis ] improve error message in flinkkinesisconsumer
camel - 14234 : camel - aws2 - jbang - update copyright year to match current copyright year
refactor LeaderElectionTest to use a try - finally block for closing the scheduler to ensure proper resource management and prevent potential memory leaks
corrected the spelling of " setIconsAndDimTransitionProgress " to " setIconsAndBannersTransitionProgress " across multiple files to improve
added a new method ` read ` to the ` ProxyHandler ` class to improve code readability and maintainability by encapsulating the read
replaced ` BufferUtil . allocate ( ) ` with ` ByteBuffer . allocate ( length 11 ) ` in ` ABCase1 _ 2 . java `
modified the ` prepareStreamsToUpload ` method to return a boolean indicating success or failure to improve code readability and maintainability by simplifying the
updated order comparison logic in AbstractConfigLoader and modified config model configurations in TestMicroserviceConfigLoader to ensure correct ordering of configuration models based on
added a new file ` PicOfDayAppWidget . java ` that implements an app widget to update an app widget to enhance user experience by providing
cloudstack - 10265 : default offering id should be set to 0 if no service offering be provide .
updated HiveParserCalcitePlanner to use HiveRelOptUtil instead of RelOptUtil for splitting HIVE - Join conditions to ensure proper handling of
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should no longer be used in future development
added user and password options for remote jmx access in NodeToolCmd . java to enhance security by allowing users to access remote jmx credentials
removed redundant initialization of scratch in Stemmer . java to streamline code and improve readability
updated widget applyFromAppWidgetProviderInfo and applyFromResolveInfo calls to use numPages instead of isHardwareAccelerated ( ) and adjusted
do n ' t show 3d thumbnail in ggbapiw for 3d view
updated rotation calculations in GcodeRenderer . java to ensure rotation coordinates are within valid bounds to prevent potential overflow issues
added a new option ` WORKSPACE ` to the ` DAEMON ` configuration and updated the ` DAEMON ` command to set the
updated file path from " target / test - classes / options . apt " to " target / test - classes / options . html " to
updated ScimUtilsTest to use JUnit 5 ' s PollutionPreventionExtension and assertThrows methods instead of expected exceptions to improve
updated the ` confimAccess ` method to accept a ` Map < String , Object > ` instead of a ` ModelAttribute ` and modified the
updated assertions in HibernateIT . java to use assertTrueEventually for session retrieval to improve test reliability and ensure accurate tracking of level cache hit
refactor EventBusHook class to improve event handling to enhance performance and maintainability of event bus processing
refactor MultiPaintEventTest class to improve test coverage to enhance performance and maintainability of the event handling logic
removed the final modifier from mNewScale assignment in WorkspaceStateTransitionAnimation . java to simplify the code and improve readability
refactor SyncFactory class to improve code organization to enhance maintainability and readability of the code
added uniqueKey field handling in LukeRequestHandler to ensure that the unique key field is included in the schema information
added color and background color handling in BorderEditor and updated EditableResources to use a round border color to enhance color management by allowing customization of
do n ' t throw an exception if an exception can not be parse .
[ hotfix ] [ test ] use declarativeslotpoolbridge instead of impl
added logging statements for pending requests in GatewayRSocket , GatewaySocketAcceptor , GatewaySocketAcceptor , and PingPongApp classes to improve debugging
added a menu item click listener to the RecentChatFragment to enhance user experience by allowing users to click on the recent chat list
changed the ` InfoDropTarget ` class to extend ` UninstallDropTarget ` and modified the ` startDetailsActivityForInfo ` method to return
replaced instances of ` add ( ) ` and ` removeTail ( ) ` with ` push ( ) ` and ` pop ( ) ` in multiple
updated API and EVENTLOG _ WIKI URLs from " test " to " commons " in CommonsApplication . java to ensure compatibility with the
refactor the indexing logic into a separate method ` setIndex ` to improve code readability and maintainability by encapsulating the index
replaced ` Collections . sort ( ) ` with ` Collections . sort ( ) . sort ( ) . sort ( ) ` in multiple configuration classes to
added date and time patterns to the FormatData _ hr _ HR class to enhance date formatting capabilities for better time representation
added a call to clearFocus ( ) in DetailFragment . java to clear the focus of the clicked view to improve user experience by ensuring the
replaced ` notifyDataSetChanged ( ) ` with ` spinnerDescriptionLanguages . setSelection ( position ) ` in ` DescriptionsAdapter . java ` and
updated time zone names for " West Samoa Summer Time " , " West Samoa Daylight Time " , and " estiva Daylight Time "
added native methods for registration global , access fields , and access fields in FastGetField . java to enable native registration and accessing of global and
added handling for null schema types in ReflectData . java and updated tests in TestReflect . java to ensure correct default schema is returned when the schema
[ java ] increase timeout for sedablockwhenfulltest
added null check before remapping RClass in ResourceMerger . java to avoid potential NullPointerExceptions during resource remapping
added a constructor to the HapiFhirDerbyDialect , HapiFhirH2Dialect , and HapiFhirMySQL
camel - 14297 : camel - http - add connection close header to the endpoint to make it easy to get the connection close .
increased the timeout duration from 60000 milliseconds to 120000 milliseconds in BasicDistributedZkTest . java to allow more time for the test to complete
[ hotfix ] [ test ] fix basereservationflowtest failure
refactor Parser class to improve code structure to enhance maintainability and readability of the code
refactor CasProcessingFilter class implementation to improve code readability and maintainability
use document . getfirstelementchild ( ) instead of document . getchildren ( ) . getfirstelement ( ) . getchildren ( ) .
[ hotfix ] [ runtime ] add support for enums in look - up strategy
[ java ] add waittoshutdown ( ) method to clusterenvbase . waittoshutdown ( )
change log level from warn to info in ELContextCleaner . java to provide more informative logging when a bean resolver can not be clean
set the content type for WebdavEntry to " application / octet - stream " to ensure proper handling of octet streams in the application
added the ` getQueueSize ` method to ` LazyTraceThreadPoolTaskExecutor ` and created a corresponding test class ` LazyTraceThreadPoolTaskExecutorTests
do n ' t skip distance operation if the distance be less than the min distance
rename the ` required ` field to ` requiredlabel ` in ` AbstractUITag ` class to improve clarity and consistency in naming conventions
removed the ` next ( ) ` method from ` PurgingPartitionIterator . java ` to simplify the code by eliminating unnecessary overrides
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated references in ` VectorUtil ` to
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide access to the
added validation to ensure localVertices has at least 3 points before assigning them to avoid potential ArrayIndexOutOfBoundsExceptions
replaced ` ObjectMapper . new ObjectMapper ( ) . newDefaultInstance ( ) ` with ` ObjectMappers . newDefaultInstance ( ) ` across multiple files
add a null check for the ` coeff ` variable in ` GeoImplicitCurve . java ` to avoid potential NullPointerExceptions when ` coeff ` is
updated ` ExternalNameRecord ` to use ` int ` for ` nameLength ` and ` multibyteFlag ` instead of ` short ` and `
corrected a typo in the description of the JMS destination type in AbstractJMSProcessor . java to clarify the purpose of the description
added logic to exclude prompts based on the presence of username and password in LoginInfoEndpoint . java to ensure that excluded prompts are excluded when
replaced ` remove ( listener ) ` with ` removeIf ( l - > l ) ` in ` AbstractController . java ` to improve listener management
added a case for toggleing the pie chart in PieChartActivity to enhance user experience by providing a smoother spin option
[ citrix ] kill vhd to secondary storage if it fail to copy vhd .
hbase - 16464 disable normalizing of hmaster table if quota have have quota
refactored import statements and added a resize method in AndroidInput . java to improve code readability and maintainability by encapsulating the
added a static method ` propertyValuesOf ` to the ` PropertySupport ` class and a new method ` propertyValuesOf ` in ` PropertySupport
disable clientmapnearcachetest that be always fail and blocking PRs
fix the hopperhock not be able to move item to the correct position .
added authentication dialog functionality to SsoWebViewClient to enhance user experience by providing a basic authentication dialog
refactor test methods for document deletion and querying in TestStressIndexing2 . java to improve code readability and maintainability by central
[ flink - 22559 ] [ table - planner - blink ] ignore upsertkafkatableitcase test that fail due to
replaced direct retrieval of typeList with computeIfAbsent and updated endPos calculation to improve performance and readability of the code
added ACCEPT _ SINGLE _ VALUE _ AS _ ARRAY configuration to DefaultEntityMapper to enable ACCEPT _ SINGLE _ VALUE _ AS
updated localization message in VersionChangeLogs . java to include UK , UK , and SL to enhance localization support for better user experience
updated SHORTCUT _ CATEGORIES array initialization to use ResourceUtils for splitted categories to improve code readability and maintainability
updated the ` visitExpressionInstanceOf ` method to use ` RelExpressionInstanceOfContext ` instead of ` ExpressionInstanceOf ` and added a new test for `
nifi - 10226 : add mime type attribute to gethttp . gethttp ( )
[ fhir - 16457 ] [ table - planner - blink ] add toprovenance ( ) method to resourcehistorytable
corrected the spelling of " exit " to " done " in HelpActivity and added a searchable option in SearchBookContentsActivity to improve
refactor NatsConfiguration class to improve code organization to enhance maintainability and readability of the code
refactored the ` invalidateStalePartition ` method to accept a ` MetastoreContext ` parameter and updated the ` invalidateStalePartition ` method to
use circularfifobuffer instead of boundedfifobuffer in viewresultsfullvisualizer .
updated icon resource references from ` ic _ group ` to ` ic _ chat _ bubble ` across multiple files to align with the new chat bubble icon
updated method calls from ` getLong ` to ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to use ` getLongVolatile `
updated test method names in MocksCreationTest for consistency and clarity to improve code readability and maintainability by using consistent naming conventions
added a new constant DATA _ SOURCE _ NAME in CSVThirdEyeDataSource and made generateDetectionConfig method public in YamlDetectionConfigTranslator to
updated timeout values in awaiter calls from 10 seconds to 30 seconds in Basic . java to allow for more time for awaiter execution to complete
removed the ` BuildSlaveFinishedStatusEvent ` class and modified the ` DistBuildRunCommand ` and ` DistBuildSlaveFinishedStatusEvent
cloudstack - 10265 : fix uuid generation for vmware vms with utf - 8 character .
add a test for depositing a workspace item without a workflow
added distinct ( ) method to classpathFiles in ClassLoaderSupportImpl . java to ensure that all classpath files are processed as distinct
removed the ` isBoxedPrimitive ` method from the ` Unbox ` class to simplify the code by eliminating unnecessary functionality
refactor argument handling in SpecificCompilerTool and add a new test for ordering of flags in TestSpecificCompilerTool to improve argument validation and ensure
added a check for external table before deleting directories in HiveMetaStore . java to ensure that directories are only deleted if the table is not external
added new asynchronous execution threads and queue sizes to HiveConf and SQLOperation classes , and updated exception messages in SessionManager to improve asynchronous execution handling
added a try - catch block around the dismissDialog method call to handle potential exceptions during dialog dismissal
refactor UpgradeResourceProvider to use a constant for the execution task role and update service name handling to improve code readability and maintainability by
added a new variable ` diff ` to ` ConferenceInfoDocument ` in ` OperationSetTelephonyConferencingSipImpl . java
add clearentry ( ) method to logtree to make it easy to clear the log model
updated the return statements in ChannelEndPoint . java to include checks for the channel ' s output and input shutdown status to ensure proper handling of socket states
refactor SetNullableGenerator class to improve code clarity to enhance maintainability and readability of the code
camel - 14265 : camel - example - reportincident should use servlet transport when generate filename .
refactor NettyRoutingFilter to use wildcard imports and update content type handling in FormIntegrationTests to improve code readability and maintainability by
added " helloWithValue " and " helloWithValue " annotations to multiple service classes to enhance the functionality of the service by allowing customizable value
refactor lifecycle listener management in Lwjgl3Application and Lwjgl3Window classes to use an iterator instead of an array to
updated the color of FG _ FK from 90 to 200 in UIUtil . java to improve the visual appearance of the UI
disable mp3 audio format by default
fix secondaryindexmanagertest and secondaryindexmanagertest failure
added a new header for the PMD plugin and updated the GeneralPreferencesPage to display the version of the PMD plugin to enhance user experience by
[ flink - 14366 ] [ test ] enable customserializationitcase to pass with ng scheduler
refactor MediaFormatUtil to improve code readability to enhance maintainability and facilitate future updates
added an ` isCellEditable ` method that returns false in ` GeneralTab . java ` to provide a way to check if a cell is editable
added a method ` isOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` and modified message formatting in ` JavaBuckConfig `
added a temporary count variable to VocalTractModifier and updated the vscales array in VocalTractScalingProcessor to improve performance by
updated import statements for BaseScalarUdfTest and BaseScalarUdfTest in TestUDF classes to improve code clarity and maintainability by using
added hashCode and equals methods to UaaAuthenticationDetails class to enhance object comparison and prevent potential NullPointerExceptions
updated imports and variable names in TestSkeletonControlRefresh . java to use AnimComposer instead of SkeletonControl . j3o to improve
rename ` NodeFilter ` to ` NodeCountFilter ` across multiple files to improve clarity and consistency in naming conventions
updated the condition to check if the size of the SYNC _ FETCH _ BATCH _ NUM is greater than or equal to SYNC _
updated ` setState ` and ` setType ` values in ` DebugExpressionParser . java ` and modified type assignment logic in ` DebugExpressionParser . java
updated dependency handling in ExcludeDependency . java to use Java Streams instead of Java Streams to improve code readability and maintainability by using
replaced ` tmp ( ) ` with ` dst2 ( v ) ` and ` lerp ( ) ` methods in ` Vector . java ` to
initialize the ` args ` array with a default value of ` { } ` to ` { } ` to ensure that the ` args ` array is
refactor linker argument handling in RustBinaryDescription and add a new test for linker flags in RustLinkerIntegrationTest to improve code
[ java ] use travis . properties instead of test . properties .
added DAG name handling in HiveConf and TaskExecutorService , and improved logging in GenericUDTFGetSplits to enhance LLAP split
removed unused import of java . io . File from TileAtlas . java to streamline code by eliminating unnecessary dependencies
refactored output stream handling in EscapeProcessingOutputStream and GradleDaemonExecutor classes to use AtomicBoolean for thread safety to improve thread safety and ensure proper
updated the ` validateQuery ` method to include an additional ` arguments ` parameter in the ` validateQuery ` method to enhance error handling by providing more
updated INDEX _ VERSION from 1 to 2 and refactored getTree method implementations in LuceneExecutor . java to improve code clarity and maintainability
[ flink - 14424 ] [ kryo ] add test for default kryo registration
added a null check before adding a property to the configTypesUpdated list to avoid potential NullPointerExceptions during configuration removal
refactor boolean value handling in MetaStoreDirectSql . java to use BooleanUtils for better error handling to improve code readability and maintainability by
added a call to hideCustomizationDrawer ( ) in Launcher . java to enhance user experience by allowing customization drawer visibility
refactor term vector warning handling to use a constant for improved readability to enhance maintainability and maintainability of the code
added optimistic types check and modified logging statements in Compiler . java to improve logging clarity and ensure logging is only logged when optimistic types are enabled
refactor Expect class implementation to improve code readability and maintainability
added a new ` UnixSocketConfigurationStrategy ` class and updated ` DockerMachineConfigurationStrategy ` to use it to enable the use of Unix sockets
added @ Tag ( " flaky " ) annotations to CloseableDoSFilterTest and CloseableDoSFilterTest classes to enable flaky
camel - 14265 : camel - reactivestreams should throw an exception if there be no active subscription
refactor task validation methods in Vectorizer to use TezTask and BaseWork instead of MapRedTask to improve code clarity and maintainability by
updated constructor calls in StringAppender and LogDivertAppender to include a boolean parameter to ensure proper initialization of the StringAppender and LogDivertAppender
fix npe in jmetertreemodel when guipackage be null
[ gr - 26464 ] add a way to check if a function have a weak linkage .
updated multiple Java files related to XShareAuto , LoadClassNegative , LoadClassNegative , LoadClassNegative , LoadClassNegative , LoadClassNegative
add test case for defaulttransactionlocal . get ( )
added error handling for invalid operation handles in HiveStatement . java to improve robustness by preventing errors when an operation does not exist
rename ` ` drop not null ' ' command to ` ` drop not null ' '
camel - 14284 : camel - aws - secrets - manager - add integration test for camel - aws secret manager
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
updated error message formatting in UserREST . java to improve readability to enhance code clarity and maintainability
added a subTree parameter to the ` fromContent ` method and modified its implementation to include a ` subTree ` parameter to enhance functionality by allowing
updated column width calculation in Sheet . java and added a new test for column width in TestHSSFSheet . java to ensure correct column width
added configPath parameter to the less command in Builtins . java to provide additional context for the terminal command
replaced ` Set ` with ` Collection ` in ` DotWriter ` and ` GraphExecutable ` classes to use ` Collection ` instead of ` Set `
updated the default sshd image value from " sshd @ sha256 " to " sshd : 1.0 . 0 " in TestcontainersConfiguration
fix npe in agentmanagerimpl # gethostid ( ) when hostid be null
refactored key generation logic in DefaultGroupKeyGenerator to use BlockSingleValIterator for better clarity to improve code readability and maintainability by
updated the ` testSeekNegative ` method to ` testSeekingExceptions ` and improved error handling in ` TestMultiMMap . java `
fix ( recipe ) : refactored code to use a more descriptive variable name .
rename put ( string key , object value ) to putobject ( string key , object value )
updated visibility logic in CellLayout and refactored onDragExit method in DragController to improve code readability and maintainability by encapsulating
updated the ` ModifyRequestBodyGatewayFilterFactory ` to use ` originalBody ` instead of ` o ` and added a ` switchIfEmpty ` method
added package accessibility checks in ConstructorFinder , FieldFinder , and MethodFinder classes to ensure only accessible classes are processed
changed logging level from warn to trace in LoggingHandler . java to improve logging granularity by using trace level instead of warn
updated the prefix extraction logic in WhiteBlackList . java and added a new test class Issue348 . java to address issue # 348 issue
added menu options for gallery images in GalleryActivity to enhance user experience by allowing users to view the gallery image
refactor MongoDBServiceFactory to initialize the instance and service if it is null to improve robustness by preventing potential NullPointerExceptions
added tests to prevent code formatting of boolean values in InlineConstantMutatorTest . java to ensure correct behavior of inline constant mutators with boolean values
updated the ` decode ` method to include a ` Blackhole ` parameter and modified the ` decode ` method to consume the ` sd ` and `
chore : update gapic - generator - java with mock service generation fix ( # 43 )
changed the return type of getAllUnitStrings ( ) from Stream < String > to Stream < Map . Entry < String , String > > in D
removed the call to clearWitnesses ( ) in ManagerTest . java to simplify the code by eliminating unnecessary state management
change jdbcpagesink to use debug log instead of throw prestoexception
replaced ` getScriptStackString ` with ` deleteStack ` and modified stack handling in ` NativeError . java ` to improve code clarity and ensure
added a check for path names starting with " . " in DrillPathFilter . java to ensure proper handling of path names starting with " .
rename ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration ` to
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is cleared before running tests
updated the BOLDWEIGHT _ NORMAL constant from 190 to 0x190 in HSSFFont . java to adjust font weight for better
changed ` fThreadGroup ` to be ` volatile ` in ` FailOnTimeout ` and modified the constructor in ` Timeout ` to improve thread safety
removed the ` final ` modifier from the ` getValue ( ) ` and ` setValue ( ) ` methods in ` ValueResultData . java ` to
updated the hash code calculation in FuzzyQuery . java to use the superclass ' s hashCode ( ) method to ensure consistent hash code generation and prevent
removed debug print statements from PushedResourcesTest . java and PushedResourcesTest . java to clean up the code and improve readability
changed return type of removeFile and removeDirectory methods from SharedRandomAccessFile to void to simplify method signatures and improve code clarity
updated JDBC driver version assertions from " 2.1 . 1 " to " 2.1 . 0 " in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to
updated the ` retrievePersonAttributes ` method to use ` buildResolvedPrincipal ` instead of ` context . getPrincipal ( ) ` and modified principal creation
changed log level from info to warn for connection failures in OpenWebNetBridgeHandler . java to improve logging granularity by using a more
rename methods and variables from ` intHash ` and ` longHash ` to ` hash ` across multiple classes to improve clarity and consistency in hashing
added null checks for storageManager and mImageViewReference in ThumbnailGenerationTask constructor to ensure proper handling of thumbnail generation tasks
updated condition in GroupSelectionQuery to check if nrFound is less than 5 and tries are less than 5 to ensure that the loop does not stop
added a new file ` Bug1933922 . java ` containing a class ` Bug1933922 ` to test the compilation behavior of
updated comparison logic in multipleSeriesProvider , AjaxDecoratorMapper , and Tokenizer classes for consistency to improve code readability and maintainability
updated character validation from ` c < 33 ` to ` c < 32 ` in ` FileResolver . java ` to ensure valid characters are valid for
added a call to ` cmp . requestFocus ( ) ` in ` Display . java ` to ensure proper focus management during rendering operations
update test data for instructorhomepageuitest to work with new instructor home page
rename JsonParserAsync to JsonStreamParser across multiple files to improve clarity and consistency in naming conventions
updated Crouton notification logic in DetailFragment . java and added onPause method in MainActivity . java to improve user experience by providing clear
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` to ` IoTDBSchemaTemplateIT . java ` to ensure
refactor Dialog class to improve code readability to enhance maintainability and facilitate future updates
replaced ` Runtime . getRuntime ( ) . exec ( args ) ` with ` ProcessBuilder ` to remove the " JAVA _ TOOL _ OPTIONS
updated the InetAddress name from getLocalHost ( ) to InetAddress . getByName ( " 127.0 . 0.1 " ) in HintedHandOffManager .
refactor the handling of system variables in Metrics . java to use a loop to improve code readability and maintainability by reducing duplication
added assumptions to skip tests on the MacOSX platform in DaemonLifecycleManagerTest , InstallCommandIntegrationTest , and FakeAppleDeveloperEnvironment to
use getrequiredproperty ( ) instead of validateproperties ( )
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
updated TestLargePageUseForAuxMemory . java file to improve test coverage for large page usage
updated method calls in BinaryParser , PlainTextParser , and PlainTextParser , and added charset handling in ParsingExecutionContextView to improve code clarity and
added a new enum ` MultiPartFormDataCompliance ` and its getter / setter methods to ` HttpConfiguration ` , and created a new ` HttpConfiguration
added GradleVersion . version ( " 7.2 " ) to GradleDistributionManager . java to ensure compatibility with JDK - 17
updated the ` addType ` method in ` SnapshotControl ` to include a ` Class < ? extends DatabaseObject > ` parameter and refactored
refactor Term class to improve code readability to enhance maintainability and facilitate future updates
added null and empty check for runWith in ChangeSet . java to ensure proper handling of null or empty values
added unit test for xaconnection . issamerm ( ) and xaconnection . issamerm ( )
updated multiple Java files for AudioDeviceInfoBuilder , MediaCodecInfoBuilder , MediaCodecInfoBuilder , NativeInput , NativeInput , and ShadowText
pdf417 : make test case more robust .
updated mSnapshotView and mDigitalWellBeingToast methods to use mTintAmount instead of mSnapshotView to ensure accurate
added a new file ` SumZeroAggr . java ` that implements ` DrillAggFunc ` to implement and manage the ` SumZero `
updated SQL query syntax in FirstValueFunctionIT and NthValueFunctionIT classes to remove unnecessary null checks to improve code readability and maintainability
hbase - 16464 bucketcache . getallocationfailwarningmessage ( ) should return a string representation of bucket allocator exception
added a null check for propName before adding it to the roleObject properties to avoid potential NullPointerExceptions when propName is null
added @ VisibleForTesting annotation to several fields and methods in StatusBarTouchController , RecentsView , and FeatureFlags classes to enhance testing capabilities and
added methods to log containers with a stream parameter in DockerClient . java to ensure that the logContainer is only open once to improve performance by avoiding
mvstore : add performance test for mvstore . cache ( )
changed the value of the LONG constant from " L " to " J " in the PrimitiveType class to ensure consistency with Java naming conventions
changed the visibility of the delegatingApplicationListener method from public to static to allow access to the delegatingApplicationListener from other classes
camel - 14284 : camel - rest - bind : set body to null in rest binding advice
added new classes ` FileDeletingTasklet ` , ` TaskletJobFunctionalTests ` , and ` TaskletJobFunctionalTests ` to
update the keep drawables view when the view have be update .
updated variable assignments in BitUtil , Int2IntCounterMap , Int2IntCounterMap , Int2IntCounterMap , Int2IntCounter
updated the ` sendEventToTest ` method to accept a ` stateOrdinal ` parameter instead of a ` eventTag ` for event handling to improve
added user agent checks for video thumbnail requests in multiple classes to ensure proper handling of video thumbnail requests based on user - agent requirements
refactor error handling in ErrorCheckerService to improve code readability and maintainability to enhance error reporting and provide clearer error messages for better debugging
added conditional logic to add menu buttons based on theme constants to ensure proper layout behavior based on theme settings
added " Skia " and " preload = " libskia " in Skia . java and updated link in Skia . java to enhance
added support for the " com . google . bitcoin . unittest " network ID in NetworkParameters . java to enable the use of unit tests based on
added a validation check for format arguments in QueryCommand to ensure that format arguments do not specify format arguments in the query
updated variable names from ` capacity ` and ` isPositionValid ` to ` length ` in ` IntIterator . java ` to improve clarity and maintain
added ` srcTarget ` parameter to ` walkRuleAndAdd ` method to include ` projectConfig . getSrcRule ( ) ` as a parameter
fix ` ` override module ' ' error when use ` ` source ' ' module
[ java ] remove semanticversion check for protocol version in election . java
added conditional logic to set default policy based on SAML authentication status to ensure proper handling of SAML authentication policy based on authentication status
added null checks for MAPPED _ TABLE _ RESOURCE _ NOT _ NULL _ MESSAGE and MAPPED _ TABLE _ RESOURCE _ NOT _ NULL
( chore ) camel - jms : use utils . close ( ) instead of call to close ( ) .
refactor AnonymousAuthenticationFilter to use a deferred context for anonymous authentication to improve code readability and maintainability by reducing duplication
updated the ` removeActor ` method to include a ` boolean ` parameter and modified the ` removeActor ` method to include a ` true ` parameter
updated prompt calls to use validConfigs instead of managed _ schema _ configs to improve clarity and maintainability of configuration handling
added logging functionality to NettyHttpServer , RoutingInBoundHandler , RoutingInBoundHandler , RoutingInBoundHandler , and NettyHttpServer
refactor DatumAliases , AbstractParser , Formattable , and Parser classes to improve code organization and maintainability
replaced the ` update ( ) ` method with a ` SwingUtilities . invokeLater ( this ) ` method in ` CodeDependenciesPanel . java ` to ensure
camel - 14297 : camel - groovy - can not load groovy expression from cache . thanks to daniel for the patch .
updated the handling of plugin dependencies in DefaultPluginManager to use Collections . EMPTY _ MAP instead of List to improve code readability and maintainability by
[ hotfix ] [ cli ] make clioptions . cli . cli . cli . cli . cli . command line option public
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to ensure proper
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 13939 - remove unused
alexeibarantsev : improve error message for convert text to http command
changed the visibility of the updateImage method from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access the updateImage method
add block . dropresources ( ) and block . dropresources ( ) for serverlevel .
added native configurations for SpatialLocationCalculatorConfig and SpatialLocationCalculatorConfig in DataOutputQueue and depthai classes to enable dynamic configuration of spatial location calculator
refactor multiple Java classes including CommunityDetection , GSA , GSAPageRank , LabelPropagation , PageRank , and SingleSourceShortestPaths
replaced ` keySet ( ) . isEmpty ( ) ` with ` isEmpty ( root ) ` and added a new ` isEmpty ` method in ` TreeTrie
updated foreground and background method calls in AttributedStringBuilder . java to include a parameter to simplify the code and improve readability by eliminating unnecessary calculations
updated the ` doFingerprint ` assignment logic in ` PeerSync ` to conditionally set the ` doFingerprint ` based on the system property to ensure
changed the visibility of the moveFunds method from private to public in GDAXAccountService . java to allow external access to the move
refactor BeforeConvertEvent instantiation in MongoTemplate and update test cases in MongoTemplateTests to improve clarity and maintainability of event handling
fix serialization issue in collectionitem . settransactiontest . settransactiontest
tika - 126 : close inputstream in tikacli if it be not null .
updated exception handling in TestCollectionAPIs . java to use ApiException instead of ApiBag . ExceptionWithErrObject to improve error handling by using a
removed unnecessary whitespace in OptionsParser . java to improve code readability and maintainability
updated log message formatting in InstructorFeedbackAddActionTest . java and InstructorFeedbackCopyActionTest . java to improve readability and
[ hotfix ] [ runtime ] fix checkstyle violation in jobservicepipelineresult
removed the ` step ` property from ` DisplayTextVirtualDatapoint ` , ` HmDatapoint ` , and ` HomematicTypeGeneratorImpl
added shared and exclusive locking mechanisms for various documents in PostgreSQLReadWriteAdvisoryLocksTest . java to improve transaction management and
removed duplicate call to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to simplify the code and improve readability
alexeibarantsev : fix testgettextcontent . testgettextcontent # testgettextcontent . testgettextcontent ( )
replaced static variables ` openStack ` and ` level ` with ` loggerTL ` and updated related logic to utilize ` ThreadLocal < Logger > `
refactor functioninitializer to use mockit instead of mockit
added ` boxedTypeOrType ` method to ` Types ` , ` Infer ` , and ` T6638712a ` classes
added a null check and orientation state setting for newFocusedTaskView in RecentsView . java and removed redundant updateChildTaskOrientations ( )
hbase - 16234 testflushfromclient # testflushfromclient # testflushfromclient # testflushfromclient # testflushfromclient
added contract details handling and storage saving functionality in TransactionExecutor . java to ensure proper management of contract details during transaction processing
updated balance calculations in TokenIssueProcessor and TokenIssueProcessor to utilize dynamic properties for asset issue fee to improve flexibility and maintainability of the balance
refactor ` RealisticRenderStrategy ` to use ` URI ` instead of ` RocketComponent , Decal , Texture > ` , and `
refactor raster handling in Blit . java and add a new Bug7049339 . java file for image rendering to improve code clarity and
added support for unselected styles in the Component and Label classes and updated string width calculations in DefaultLookAndFeel to improve user experience by allowing dynamic adjustment of
updated ArrayList instantiations to use a size of 0 instead of a single instance to improve performance and maintainability of the code
removed the flags parameter from queryImplicitIntentServices and queryImplicitIntentContentProviders methods to simplify method signatures by eliminating unnecessary parameters
refactor PingRequestHandler class implementation to improve code readability and maintainability
add mp4 _ asset _ with _ increasing _ timestamps _ uri _ string constant to androidtestutil and removeaudiotransformationtest
[ hotfix ] [ device ] remove isoldfirmware ( ) method from gatewaygatewayhandler
refactor AjaxElementLocator to improve code organization to enhance maintainability and readability of the code
added support for " table - cell " display in BoxLayout and DefaultLayout classes to enhance layout functionality to support additional table - cell types
updated JsonDecoder to handle both START _ ARRAY and END _ ARRAY types and added a new test for reordering fields in TestJsonDecoder
updated the removal cause handling in BlockCache . java to include removalCause parameter to improve clarity and maintainability of the code
added JUnit @ Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready for execution
added multiple @ Test annotations to DroolsMvelParserTest . java to ensure proper functionality of the test class
changed instance variables from non - final to final in ContextRegisterListener . java to ensure immutability and prevent unintended modifications
refactor ObjectHashSet to accept a cacheIterator parameter and modify iterator reset logic to enhance flexibility in handling iterators and improve test coverage
added a default batch size check in SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch classes to ensure that batch values are
changed Context . MODE _ WORLD _ WRITEABLE from MODE _ WORLD _ READABLE to MODE _ PRIVATE in AppSettings
updated JdbcProxyGenerator to include additional logging statements and improved exception handling in JdbcProxyGenerator . java to enhance debugging capabilities and ensure proper resource management during
updated the animation state handling in Workspace . java to use setImportantForAccessibility based on the mState to enhance accessibility support for different states
log4j2 - 132 change log level from warn to debug in protobuflogreader
updated scope handling in UaaTokenServices and added unit tests for persisting scope values to ensure correct substring extraction and improve test coverage for token persist
updated imports in SchemaRetrievalOptionsBuilderTest , AvailableJDBCDrivers , TestAvailablePlugins , and TestAvailablePlugins classes to improve
kraken : move executablecommand to kie - api module to provide a way to execute a command .
remove unused jdbctableservice for idempotent idempotent
added methods to retrieve padding values in CellLayout and adjusted bitmap creation in Launcher to improve padding handling for different landscape orientations
added a check for non - empty ` sb ` before retrieving the ` cands ` list to ensure that the ` cands ` list
updated ` SamlMetadataUIParserAction ` , ` SamlMetadataUIParserAction ` , and related classes to use ` Action ` instead of
added a method to check the number of LDAP processes using a specified port to improve port management and error handling for LDAP processes
[ log4j2 - 129 ] fix shutdown of executorservice in log4j2 - client
updated URL handling logic in Fetcher . java and HTMLMetaProcessor . java to ensure proper matching of URLs to prevent redirects from being processed
updated SolrQuery parameters from " * : * " to " name : samsang " in TestSpellCheckResponse . java to improve clarity
updated console initialization logic to use reflection for old Karaf Console API to ensure compatibility with old Karaf Console APIs and improve logging clarity
change the visibility of getVerticesColors method from public to private and modify the initialization of mcol to improve encapsulation and ensure mloop
updated HTMLReportGenerator to include EXCLUDE _ TIMESTAMPED _ REPORTS _ DIRECTORIES and modified file copying logic to
[ hotfix ] [ test ] rename test method to validatename in datavalidatortest
pdfbox - 4071 : remove unused method , a suggest by valerybokov
added null checks for bindStatus in FieldUtils . java and FieldUtils . java to ensure that expressions are executed within the adequate context to prevent runtime
removed debug print statement from JoglInput . java to simplify code and improve readability
added support for allowExtractingPrivateFields in FieldSupport and updated related tests in FieldSupport _ fieldValues _ Test to enhance field retrieval capabilities and
added a line to replace " { name } " with " { name } " in WebDataHandler . java to ensure the correct device name is
refactor lookup logic in Platform . java to utilize MethodHandles for better handling of Java 8 types to improve code readability and maintainability by
renamed the ` weights ` method to ` weightsByDouble ` and added a new method ` weightsByDouble ` in ` ZParams . java `
updated writeCustomHTML method signatures to include the Database parameter across multiple writer classes to ensure compatibility with the liquibase database in the writeCustomHTML method
added assertion for null values and modified key deserialization logic in BTreeMap . java to ensure proper handling of null values and prevent potential NullPointerExceptions
replaced Exception handling with BalanceInsufficientException in CancelDeferredTransactionContractActuator , UpdateDeferredTransactionContractActuator , and TransactionTrace
do n ' t write zerofile for profiler . heap . profiler . heap . heap . zerofile
replaced direct print statements with calls to ` Scope . getCurrentScope ( ) . getUI ( ) . sendMessage ( ) ` in ` ChangeSet . java
updated byte array size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy and removed generic record handling in HortonworksEncodedSchemaReferenceWriter
added imports for ItemProcessListener in multiple batch - related classes to enable the use of ItemProcessListener in the batch processing framework
refactor code formatting and improve readability in AbstractProviderModule . java to enhance code readability and maintainability
removed the ` doc . get ( title ) ` method from ` SearchFiles ` , ` SortedSetDocValuesFacetCounts ` , and ` Message
updated Test7005594 . java file to improve test coverage and maintainability
updated error message formatting in ResourcesValidationProcess . java to improve readability and maintainability of error messages
refactor TopKRollupPhaseOneJob class to improve code readability to enhance maintainability and facilitate future updates
cloudstack - 4071 : do n ' t throw exception if vmid be not set to vmid
added support for analog button in the gamepad . add a mcoptionutils . supportanalogtriggers ( ) .
updated method signatures and imports in IterableSubject . java and IterableTest . java to use generics instead of generics to improve type safety and
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 239 , http : /
added unit tests for the ` createNativeQuery ` method in ` ActivityHistorySQLServerStoredProcedureTest . java ` to verify the correct number of
replaced direct calls to ` mSeekBarY . getSeekBarY . getProgress ( ) ` with ` yl . setValueFormatter ( ) `
refactor character handling in CommentsParser to use a constant in the constant INNOCUOS _ CHAR to improve code readability and maintainability
added @ SuppressWarnings ( " argument . type . incompatible " ) annotation to Platform . java to suppress warnings related to argument type compatibility
[ hotfix ] [ runtime ] fix typo in tracelinearscanlifecycleanalysisphase
added a TODO comment to the NullAssertionValidator class to clarify the purpose of the Auto - generated method stub
added RuleKeyAppendable import and modified DefaultRuleKeyBuilderFactory to append rule keys to the rule key builder to enhance rule key formatting for better rule
added directory creation and configuration checks in PmsConfiguration . java and updated test setup and teardown methods in DLNAMediaInfoTest . java to
refactor createThreadFactory method to use a unified createThreadFactory method to improve code readability and maintainability
updated the ` HttpChannelOverHTTP ` and ` HttpReceiverOverHTTP ` classes to use ` receiver . getMessagesIn ( ) ` instead of
added a attribute for the " accept " attribute in ImageFileInputDialog to set the accept attribute for the image input dialog
updated ElasticIndexWriter to use PreBuiltTransportClient instead of NodeBuilder and replaced NodeBuilder with PreBuiltTransportClient in TestElasticIndexWriter
added additional debug information for witness and witness classes in ForkController . java to improve visibility into witness and witness classes in the ForkController
added a new file ` APITests . java ` containing a test class ` NullPointerAndEmptyArrayTest ` to verify the behavior of ` CustomURL
removed the method ` findConfiguredGeneratedSourcePathsUsingDeps ` from ` BaseIjModuleRule ` , ` IjProjectBuckConfig `
updated the ` constructWildcards ` method to accept a ` Function < String , String > ` for wildcard patterns and modified the wildcard pattern handling to
refactor alias validation logic in Vectorizer . java for better readability to improve code clarity and maintainability by reducing duplication
updated import statements in WeatherQueryTest . java to use MockitoJUnitRunner instead of MockitoJUnitRunner to improve code clarity and maintainability by
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by handling FirmwareSettings exceptions
refactor the ` getLangs ` method to return a ` Set < String > ` instead of a ` List < String > ` to improve
updated import statements in LazyTraceScheduledThreadPoolExecutorTests . java for consistency and clarity to improve code readability and maintainability
hbase - 16464 add table lock to skip snapshot if tableinfo be not present .
[ j2kt ] add support for ` ` null ' ' and ` ` if ' ' expression in try - with - resources
added a test to verify that explorer should have modified HTTP RPC endpoint to ensure that the explorer correctly reflects the updated HTTP RPC endpoint changes
added a volatile boolean flag ` isSuspended ` and modified thread state checks in ` Thread . java ` and ` Test _ Thread . java `
replaced Javadoc . Author with Javadoc . Hidden and Javadoc . Serial in Java11JavadocVisitor and ReloadableJava8JavadocVisitor
camel - 14284 : camel - spring - boot : use objecthelper . isempty ( ) instead of check for null camelcontext
replaced multiple occurrences of ` @ Override ` with ` @ Override ` across multiple security - related classes to improve code clarity and maintainability by eliminating unnecessary
added module import handling and updated method calls in Java2TypeScriptAdapter and EnumTests to enhance module import functionality and improve test coverage for static fields
use http : / / www . w3c . w3 . org / 2001 / XMLSchema in xssfexporttoxml .
added logic to set content description based on badge status in BubbleTextView . java to ensure correct content description is displayed based on notification status
added MouseWheelListener to manage mouse wheel direction in TestMouseWheelScroll to enhance user experience by allowing mouse wheel interactions
pdfbox : close pdfdocument . load ( ) and add a test for positioning - absolute
updated currency pair references from BTC _ ETH to XRB _ B in KucoinAdapters . java and KucoinIntegrationTests . java
[ hotfix ] [ runtime ] use string instead of object for location .
removed redundant currency assignment for DSH , QTM , and QTM in BitfinexAdapters . java to simplify code and improve readability
updated imports and refactored field handling in JsonFormat . java to use ImmutableSet and TreeMap to improve performance and maintainability of the code
removed unnecessary conditional checks for array types in JacksonXmlFormatMapper . java to simplify the code and improve readability
replaced instances of ` t ` with ` carrier ` in ` VirtualThread . java ` to improve clarity and consistency in variable naming
refactor ` DirectoryTaxonomyWriter ` and ` NameIntCacheLRU ` classes to use ` catTerm ` instead of ` new BytesRef `
refactor VetoableChangeSupport class implementation to improve code readability and maintainability
modify the calculation of the return value in BrowserContentPane . java to correctly account for the height of the owner ' s position
pdfbox - 4071 : remove unused exception that be never throw .
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest . java ` to ensure
refactor : remove unnecessary cast in inputbarhelppanelw .
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
updated Thread sleep duration in BackendInitializerHelper and added new test cases for G28 _ 1 , G28 _ 2 , and G28 _ 3
updated the condition for checking the last update version in SwingStartup . java to use ReleaseStatus . OLDER instead of BuildProperties . getVersion (
danielwagnerhall : add option to include generated file comment in dbmigration
updated command descriptions to include " | | * > " in multiple Java files to enhance flexibility in player command usage for better user experience
deleted the ` BadHdfsThreadsFilter . java ` and ` BadZookeeperThreadsFilter . java ` files to the file is no longer needed
updated method calls to use " optionName " instead of " nameVariableName " to improve clarity and consistency in naming conventions
added a condition to check for parallel classes in XmlSuite . PARALLEL _ CLASSES to ensure compatibility with parallel suites
camel - 14254 : camel - routing - master should not enable action master by default .
remove static import of enums in ctmethodimpl . java
added serialVersionUID fields to multiple exception classes to ensure proper serialization compatibility across the application
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code readability and maintainability
updated the shaBase64 method to accept a separator string instead of a hardcoded value to enhance flexibility in SHA generation by allowing custom separators
updated the parameter handling in Parameters . java and modified the condition in TestAction . java to improve null safety and prevent potential NullPointerExceptions
added a new file ` Person . java ` containing a class ` Person ` with a private field ` name ` to provide a way to provide a
remove unused localendpoint parameter from gossiper . start ( )
updated the method call to use ` toUpperCase ( ) ` instead of ` indexOf ( ) ` in ` AbstractClient . java ` to ensure consistency in
added assertions for time column and totalDocs in SegmentMetadataImplTest and SegmentMetadataImpl to ensure accurate representation of time column and total documents in the
replaced java . awt . Color with net . sf . openrocket . util . Color and updated the background color for the simPlotPanelDesc to
added a call to disconnectEmitters . onNext ( new Object ( ) ) in NettyStreamingService . java to ensure proper handling of disconnect
changed the type of ` scopeHierarchy ` from ` String ` to ` Class < ? extends Annotation > ` in ` DefaultBeanContext . java `
simonstewart : add a test to show how to click on an element with double overflow
added a try - catch block around the dismissDialog method call to handle potential exceptions during dialog dismissal
added JNDI location retrieval and logging for JNDI lookup in JTATransactionManager . java to ensure proper handling of JNDI locations
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the ` hasFunction ` method from the library class to simplify the code by eliminating unnecessary functionality
renamed ` enabledCiphers ` to ` result ` for clarity and consistency to improve code readability and maintainability by using a more descriptive
[ beam - 12265 ] fix timestamp column type in bigquery api
replaced ` IllegalArgumentException ` with ` requireNonNull ` for buffer validation in ` Identifiers . java ` and ` DatabaseConnector . java ` to simplify code
[ hotfix ] [ runtime ] use inputmap . getordefaultvalue instead of input . get ( )
added boundary checks for row and column values in FlightConfigurablePanel . java to ensure proper validation of row and column values
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to ensure the selection is visible before proceeding with
[ java ] unnecessarylocalbeforereturn : fix unnecessary local before return rule
refactor scriptEngine initialization to use a single ScriptEngine instance instead of a single ScriptEngineManager instance to improve code readability and maintainability by reducing redundancy
removed redundant NaN checks and updated assertions in EuclideanDistanceSimilarity and EuclideanDistanceSimilarityTest to improve code readability and maintain
do n ' t run incrementally backup if there be no sstable
refactor ` relativize ` method to accept ` Path1 ` and ` Path2 ` parameters and improve path normalization logic to enhance path
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to improve clarity and functionality for handling null values
[ hotfix ] [ test ] skip the current writer head file in deadletterqueuewritertest
replaced ` toHexString ` with ` toJsonHex ` for the ` result ` variable in ` TronJsonRpcImpl . java ` to improve code
renamed ` ErrorHandlerController ` and ` ErrorHandlerControllerTest ` classes to ` Error403Controller ` and added new classes for error controllers to
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in UnixTerminal and WindowsTerminal to
updated Tiny . java to replace MethodInvocationTree and NewArrayTree with NewArrayTree and improved array conversion handling to enhance code readability and
refactor connection acquisition logic to use an iterator instead of a single iterator to improve code readability and maintainability
updated method names from ` getDateConverter ` to ` getLdapDateConverter ` across multiple classes to improve clarity and consistency in naming conventions
pdfbox - 4071 : do n ' t create a new one if there be no tree .
updated error message formatting in JavassistUtils . java to include the class loader in the error message to improve clarity and debugging by providing more
added exception fields for writer and reader threads in LargeStreamletTest . java to enhance exception handling and improve thread join time for better debugging
updated the logic for setting the ` extraPages ` page type in ` HomeFragment . java ` to conditionally increment ` extraPages ` based on
added error handling for broken gaussian image rendering in AndroidImplementation . java to improve robustness by handling potential exceptions during image rendering
added @ SuppressSubnodes annotation to BaseParser . java and modified return statements in ImplicitActionsConverter . java to improve code clarity and maintain
refactor FDFParser initialization to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed in the project
added a shell command for key event input in AbstractLauncherUiTest . java and removed an assertion in LauncherInstrumentation . java to streamline key
added JSON serialization for filenameToUrl in FileDumper . java to enhance file handling by allowing URLs to be stored in a JSON file
[ bugfix ] [ profiler ] reset profiler result notified flag in profilerserver .
blender : add load feature to the blender context when load the blender from the blender .
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests from " application : " to " application
updated random number from " 9781797745008 " to " 9781797845005 " in RandomizersTest . java
added a ringtone URI to the notification sound setting in AlarmReceiver . java to ensure the notification sound is correctly set based on user preferences
added a method ` reportLoopCount ( int count ) ` to the ` RootNode ` class to track the number of loop counts to improve the
added logic to handle the finalization of the cluster version in FinalizeUpgradeAction . java and updated cluster entity merging in ClusterImpl . java to
fix regionid in listbyregionidandstatesearch by regionid instead of rangeid
removed redundant calls to streamManager . open in ItemOrientedStep . java to streamManager . open to improve code readability and maintainability
added a new file ` CountedLoopProblem . java ` that includes a main method to generate a string representation of the result of a random number
[ gr - 12447 ] remove the ` ` nmethod ' ' parameter from the ` ` executeCompiledMethod ` and ` ` executeCompiled
[ gr - 16464 ] fix the issue that the pending speculation field do n ' t have a type long .
renamed ` KafkaStreamsTracing ` to ` KafkaStreamsTracing ` and introduced ` ValueTransformerWithKeySupplier ` and ` ValueTransformerWithKey
fix constant sum question to use stringhelper . join instead of stringbuilder . join
removed the call to DynamicColors . applyToActivitiesIfAvailable ( this ) in BaseApplication . java to streamline the application process by eliminating unnecessary
added thread management and stack dump functionality in CloseRace . java to improve thread management and error handling for child threads
updated return statement in IntPointField . java and added assertions in TestPointFields . java to ensure proper handling of integer values in the response
updated the ` arcSize ` variable from ` int ` to ` double ` and adjusted related calculations in ` MyButton . java ` to improve accuracy
updated image width values from 768 to 640 in AddAndScaleMultiImage . java and ImageBorderCuttingWizard . java to improve image
rename ` minifySqlEnabled ` and ` setMinifySqlEnabled ` methods to ` shrinkWhitespacesInSql ` in ` SqlSourceBuilder `
refactor waitForStateTransitionToEnd method in AbstractLauncherUiTest and WorkProfileTest to improve state transition handling to enhance clarity and maintainability of
added ` CasCoreAuthenticationPrincipalConfiguration ` and ` CasCoreHttpConfiguration ` imports across multiple test classes to utilize the new configuration
replaced Long . reverseBytes ( ) calls with DataIO . getLong ( buf , 0 , 8 ) and Long . readLong ( ) methods to improve
camel - 14297 : camel - http - use mandatory endpoint instead of fluenttemplate . to ( ) .
refactor Classpath creation in DeclarativeHintsParser to use a builder pattern for system boot path to improve code readability and maintainability by
added a new ` MediaScriptScopeProvider ` class and updated ` DefaultScriptScopeProvider ` to use it to enable audio and voice operations in the
added methods to retrieve and set the layer manager in AnimComposer and updated AnimEvent to use this layer manager in AnimComposer to improve
added a check to return early if the queue size is zero in DeferredHandler . java and removed the showDefaultScreen method from Workspace . java to
updated exception handling in MapRecordProcessor and TezProcessor to catch Throwable instead of Exception to improve robustness by preventing null pointer exceptions during processing
[ fix ] make cylinderregion . center ( ) a deprecated method .
updated TestBadUseCases to use ExpectedException instead of a try - catch block to improve error handling by using JUnit ' s expected exception
added null check for subparams in the sendOneQuery method and implemented a multi - execute test for multi - execute operation in StatementTest to ensure
updated the customizeEnvironment ( ) method to return a boolean and modified the customizeEnvironment ( ) method to return it to ensure that the customized environment is
updated API endpoint to include rctag = android% 20app% 20edit to ensure compatibility with newer Android versions
refactor test cases in Test . java to improve code readability and maintainability
updated PBEKeySpec to use keyLength instead of blkSize for key generation to ensure correct key length according to security requirements
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
added a call to writeSectionDefinition ( ) in RtfDocumentHeader . java to ensure proper handling of section definitions in the document
added a check for ` getCurrentLocationInfo ( ) ` in ` GpsLoggingService . java ` and updated accuracy checks in ` Maths .
updated UI messages in TableLayout , TableLayout , TableLayout2 , TableCellLayout , and TableLayout2 to enhance user experience by providing clear
doc : generate sample code in the java microgenerator ( # 119 )
updated InsightFilter to use Reference < Object > instead of boolean for rootNameFn , sourceFilterFn , and sourceFilterFnHash to improve
removed the binarySearch method from the AllAppsList class to simplify the code and improve readability by eliminating unnecessary sorting
refactor ` SettingsActivity ` to extend ` PreferenceActivity ` instead of ` ThemedPreferenceActivity ` and remove the ` ThemedPreferenceActivity `
updated the value class name from " HostD " to " UsingUnresolvedD " to clarify the purpose of the value class
removed unnecessary whitespace in assertRootArcs ( ) method call to improve code readability and maintain consistency
added an assertion to check if the security policy exists or is a file to ensure that the security policy is valid and does not exist or not
camel - 14284 : camel - olingo2 - add getconfiguration ( ) method to olingo2component
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for the test to complete before proceeding
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify the logging output for better readability
added support for publish image by http via xmpp . publishxmppimagebyhttp
camel - 14284 : camel - netty - fix the issue that camel - netty producer can not get a channel from pool .
fix clickhouse data source url split for invalid host name
removed the system property " org . apache . jasper . compiler . disablejsr199 " from FragmentActivator . java to simplify the code
added support for null string values in CSVRecordReader and CSVRecordReaderConfig classes to ensure proper handling of null values in CSV format
added LiquibaseService import and annotation to multiple connection classes to mark them as skip to improve connection handling by avoiding unnecessary processing
updated the cursor type from CompilationUnit to JavaSourceFile in VariableNameUtils . java to ensure correct handling of JavaSourceFile instances
updated event topic handling in ItemCommandTriggerHandler and ItemStateTriggerHandler to use an itemName variable to improve clarity and maintainability of event processing
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to improve error handling by
replaced instances of ` NodeConfig ` with ` zkCredentialsProvider ` in ` SolrXmlConfig ` and ` TestSolrXml ` classes to clarify the
change mana tablet to show mana fraction for display .
added a method to set the identifier collection in P25P2DecoderState to ensure the current call event reflects the current call event ' s identifier
removed unused imports for DictionaryCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter in TestRandomChains . java to streamline code by eliminating
updated the thread pool name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " in ScryptUtil .
refactor GeneratedCode class to improve code structure to enhance maintainability and readability of the code
corrected a typo in the assertion message in TypeDefinitionRegistry . java to improve readability and maintainability of the code
added visibility of shareWithMeIcon in LocalFileListAdapter to hide the share with the me icon to improve user experience by hiding the share with
updated the link to " https " in multiple filter classes from HTTP to HTTPS to ensure proper handling of anonymous stylesheets in the application
updated import statements and modified headers initialization in RouterFilter , RouterServerListFilter , and RouterServerListFilterTest classes to improve code clarity and ensure
updated assertions in TestIndexWriterMergePolicy to include additional context to improve debugging by providing more context about the document count and segment count
[ hotfix ] [ network ] deprecate vector and reducer , multilayerperceptron , runmultilayerperceptron , runmulti
added a null check for the context in CrawlerSessionManagerValve and implemented a test for multiple contexts in TestCrawlerSessionManagerValve
modified the ` getJspApplicationContext ` method to use a privileged action for privileged actions based on security settings to ensure proper context retrieval based on security
updated RocketComponentConfig to use minL and maxL instead of 0 and added bounds checking for FinSet components to improve accuracy in calculating model
updated NonceService and OpenIDAuthenticationProviderModule to use Scopes . SINGLETON for binding NonceService to improve dependency management and ensure
updated child link update logic in FileWrapper . java to ensure child links are correctly updated for the user context
updated method signature and error handling in SpringCloudPlugin . java to improve code readability and maintainability
increase delay from 100ms to 500ms in retrievalblockingmessagestoretests
[ java ] add a flag to control the behavior of shift code in anykeyboard .
zkleaderelectionmanager . isleader ( ) now check if the leader be currently the leader for a role .
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated filter condition to check if the identity is a reference service instead of a hardcoded value to improve code readability and maintainability by using
updated the ` newInstance ` method to accept a ` noop ` parameter instead of passing ` AbstractCommandOptions ` to improve flexibility in creating artifacts by allowing
added a sleep delay of 3000ms to the exception handling in TestListenTCPRecord . java to improve responsiveness by allowing more time
updated the handling of method call arguments in PatchExtensionMethod . java to ensure correct array representation for method calls
refactor RawNativeLibraries to use a Set instead of a Map and update library loading logic to simplify library management and improve code readability
added support for " apply - sequence " and " ignore - send - failures " attribute in DefaultRouterParser and AbstractChannelNameResolvingMessage
removed unused ` x509PublishUrl ` and ` x509ViewName ` fields from ` ClientKeyPublisherMapping ` and ` JwkViewResolver
updated the initialization of readers to use a single SolrIndexReader instance to ensure proper initialization of readers when no readers are available
replaced ` ValueSourceParser ` with ` Double2Parser ` and added new parsers for ` max ` , ` min ` , and ` max
removed conditional check for focus and pointer events in the Container class to simplify the return logic for better readability
removed unused variables ' n ' , minScore ' , and ' minScore ' from Highlighter , SpanGradientFormatter , and TokenSources classes to
cloudstack - 10265 : fix the bug that cloudstack . com / cloudstack / cloudstack / cloudstack / configserver . java
added @ ConditionalOnWebApplication annotation to flowBuilderServices in CasMultifactorAuthenticationWebflowConfiguration and modified CompositeProviderSelectionMultifactorWebflow
updated WriteJdbcPTest to use ResultSetMetaData and added new methods for managing remaining connections to enhance database connection management and improve database connection management
removed null and empty check for " editor . laf " in DefaultPlatform . java to simplify code and improve readability
refactor method calls from ` getStateEntity ( ) ` to ` getStateEntity ( ) ` for consistency to improve code readability and maintainability by
removed conditional logic for calculating margin start in FloatingTaskView . java to simplify margin calculations for better readability and maintainability
added a condition to break the loop in RootFolder . java and updated the status line in NavigationShareTab . java to improve control flow and provide
removed the threadId variable from CPUCallGraphBuilder . java to simplify the code and improve readability
bugfix : use deftoolbar instead of toolbard . getalltools ( )
added NetworkAddressChangeListener to HomekitImpl and updated related log messages to enhance network address handling and improve logging clarity
refactor lease retrieval logic in TestHDFSEventSinkOnMiniCluster to use a variable for leaseRenewalTime to improve code clarity and
replaced ` SourcePath ` with ` Optional . absent ( ) ` for ` prefixHeader ` and ` linkStyle ` in ` CxxLibraryDescription
added a null check for the exception message in ExceptionHandlerRegistryFactory to prevent potential NullPointerExceptions when the message is null
modified the ` nextID ` variable to be volatile and updated related methods in ` DirectoryTaxonomyWriter . java ` to improve thread safety and prevent potential
fix flaky test in camel - jms - jms and camel - jms - jms
added ` HasSourcePath ` interface to ` AbstractThinArchiveArg ` , ` FileListableLinkerInputArg ` , and ` Source
replaced StringBuffer with direct string concatenation in IllegalArgumentException to simplify error handling by eliminating unnecessary string manipulation
added a default index field name in OrdinalMappingAtomicReader and updated tests in TestOrdinalMappingAtomicReader to ensure the correct index field name is
added validation for ` seconds ` and ` nanos ` in ` Instant . java ` and implemented corresponding tests in ` TestInstant . java ` to
use name ( ) instead of value of vb . getbuffertype ( ) in opengl and lwjgl renderer
added logic to block update scripts in CopyPaste . java to ensure proper handling of update scripts in the application
added a new file ` TestCMoveLimitType . java ` containing a class ` TestCMoveLimitType ` for testing ByteBuffer operations to ensure
[ java ] add recordconfiguration . contains ( recordertype ) method to keep track of recorders .
refactored the parser to use array index instead of arraylist .
updated vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to align with the latest operating architecture
refactor console creation to use a separate method for better encapsulation to improve code readability and maintainability by encapsulating the
refactor token validation logic to use a unified EncryptionUtils class to improve code readability and maintainability by centralizing token validation logic
added EOFException handling for EOFException in Http11InputBuffer . java to improve error handling for eof scenarios
added unit tests for deleting member and non - existent and non - existent groups in DefaultGroupProviderTest . java to ensure correct behavior of
[ hotfix ] [ runtime ] remove unnecessary array in queuereplymanager
deleted the V2ReplicationProtocol . java file to the functionality is no longer needed for the project
replaced ` ImmutableSortedSet < BuildRule > compileTimeClasspathDeps ` with ` ImmutableSortedSet < SourcePath > compileTimeClasspathSourcePaths `
added two new demo classes , ConstructorArgsDemo , FinalDemo , and StrictDemo , and changed the class name from StupidFinal to
[ geot - 4071 ] improve performance of directtemplatefeaturecollectionfactory . gettemplatefeaturecollection ( ) .
update assertion in WriteResponseHandler to check for a maximum replication factor to ensure that the response count does not exceed the maximum replication factor
added a null check for getIndexNumber ( ) in ItemRowAdapter . java to ensure that the item ' s index is not null before proceeding
renamed ` showAnchestorsShown ` and ` showDescendants ` to ` showAncestorsShown ` across multiple classes to improve clarity and
added a check to return early if the app ' s width is less than 12 to prevent unnecessary processing when the app ' s width exceeds 12
updated equality check in ChangeLogParameters and added a new test for handling non - global values in ChangeLogParametersTest to ensure correct comparison of the
changed the ` loggers ` variable from static to final in ` LogFactory . java ` to enforce immutability of the ` loggers ` map
updated return statement to use getBasePlot ( false ) instead of direct reference to the plot to ensure that the plot returns the correct base plot
[ java ] add initialcreation flag to createuploaddir ( ) in case the upload directory do not exist .
added a boolean parameter ` sendStatus200 ` to multiple ServerGenerator , HttpTransportOverFCGI , and ServerFCGIConnection classes to control the
added a condition to check if the comment length is greater than zero to ensure that the comment is not empty before proceeding with operations
added file type management and file type removal logic in BuckModule . java to ensure proper handling of file types in the application
replaced specific function imports with wildcard imports in ComposedUtil . java to simplify import statements and improve code readability
added support for the RTM platform in RTMGenericCommandLineOptionTest and updated error message formatting in TestUseRTMLockingOptionTest to
reformatted code for consistency and readability in AccountsActivityTest . java to improve code readability and maintainability
refactor Player class to improve code organization to enhance maintainability and readability of the code
added a static method ` mockitoPackageImport ` to ` AbstractModbusOSGiTest . java ` to initialize ` ChannelTypeUID ` for
do n ' t use nextElementindex if it be n ' t in the host stack .
added context reset and reset functionality for FontsContract in ShadowFontsContract to ensure proper context management during testing
updated TimeGranularity , PinotDataSourceMaxTime , PinotDataSourceMaxTime , PinotDataSourceMaxTime , and PinotDataSource
added null check for ` _ try . getFinally ( ) ` and modified flow handling logic in ` ControlFlow . java ` to improve robust
updated assertions in Assert . java and ArrayEqualityAssertTest . java to improve error handling and clarity in array comparisons
fix wrong stack size in window click logic
corrected a syntax error in the index calculation in MeshBuilder . java to improve code readability and maintainability
nifi - 11717 : remove the controllerserviceprovider field from standardprocessscheduler
added support for processing Java plugin processors in KotlincToJarStepFactory and created a corresponding test in KotlinLibraryIntegrationTest to enhance plugin
updated RESCROLL _ DELAY constant to use PAGE _ SNAP _ ANIMATION _ DURATION constant and simplified page snapping logic to improve
added functionality to refresh deep shortcuts based on user permissions in LauncherModel and DeepShortcutManager to ensure shortcuts are only updated when necessary
added support for the HISTORY _ SEARCH _ BACKWARD case in ConsoleReader to enhance search functionality for better user experience
added null check for core name in CoreAdminHandler . java and improved error handling in CoreAdminHandlerTest . java to ensure robust core reloading
added marker selection functionality to NearbyMapFragment to improve user experience by ensuring the bottom sheet details are properly deselected
added a try - catch block to handle exceptions in FileSyncAdapter to improve error handling by providing more informative stack traces
refactor test assertions in TestMemoryAwareness . java to use OutputAnalyzer for better error handling to improve code readability and maintainability by reducing
updated refill and merge logic for feeds based on application settings to enhance performance by avoiding unnecessary refills when the application is offline
log a warning if the defaultdrmsession be accessed on the wrong thread .
updated package type handling to use Locale . US in AndroidBinaryDescription and added a setter method in AndroidBinaryBuilder to ensure consistent locale handling across different
updated XML MIME type from " text / xml " to " application / xml " across multiple test files to use the application / xml instead of text
updated variable name from ` confFile ` to ` INSTANCE . confFile ` for consistency to improve code readability and maintainability
updated waitUntilReadyAndTimeout message from " sleep 5 ; " to " exit 1 " in HostPortWaitStrategyTest . java to improve clarity
updated the data type of ` numCountDistinct ` from ` int ` to ` long ` in ` HiveExpandDistinctAggregatesRule . java `
added multiple checks for the headless environment in Toolkit . java to ensure proper exception handling for headless environments
added a condition to check if the recipe matches the world in ExoflameFurnaceHandler . java to ensure that the recipe matches the
add movethreadcountdescription to defaultsolver so that it can be use by the solver .
fix a bug in search with revinclude do n ' t select wrong resource with same sp name .
added a new test class ` Issue582Test ` for testing the ` BTreeKeySerializer ` functionality to ensure that the ` BTreeKey
[ native ] add test for decimal overflow in nativegeneralqueries .
refactor LoadingCache class for improved performance to enhance performance and maintainability of the code
added a rule for " AvoidNonConstructorMethodsWithClassName " in NamingRulesTest . java to ensure proper naming behavior for non - constructor methods with
added exception handling for StaleElementReferenceException in ExpectedConditions . java to improve robustness by handling potential StaleElementReferenceExceptions
updated ViewExistsPrecondition to check for view existence and added a new hasView method in DatabaseSnapshotGenerator and JdbcDatabaseSnapshotGenerator classes to improve view
refactor DOMUtil class to improve code organization to enhance maintainability and readability of the code
added translation calculations and logging functionality in TaskViewUtils and Utilities classes to enhance user experience by providing insights during transitions
changed the default value of FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags and Rotation
added a walk method to ` TempFSTTermsReader ` and modified the ` writeVInt ` and ` writeVLong ` methods in `
updated method signatures to include SolrQueryRequest in multiple factory classes to enhance request handling by utilizing SolrQueryRequest
added SQL statements for handling null content and announcements in SingleTableMySQLTriggerTest . java to ensure proper handling of null values in the database
refactor comparator handling in FieldValueHitQueue and TopFieldCollector classes to use a single setComparator method to improve code readability and maintainability
updated string comparisons in PhoenixQueryBuilderTest to use \ " \ " instead of ' CHAR1 ' and ' CHAR3 ' to ensure consistency in
added Spark . awaitInitialization ( ) method to the init method in RequesterTest . java to ensure proper initialization of the Spark instance
added constants for TOTAL _ STORAGE _ POOL , TOTAL _ STORAGE _ FEE , TOTAL _ STORAGE _ FEE
added NinjaProperties handling to AssetsController and updated related test cases to support dev mode and improve file handling in AssetsController
replace ` mapMark ` with ` getMapMarkKey ` in ` MapMarksManager . java ` to improve code readability and maintainability
updated parameters in ` BaseSemanticAnalyzer ` and ` DDLSemanticAnalyzer ` to use ` TokenRewriteStream ` instead of ` null ` to enhance
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` Main ` classes to simplify method signatures
[ java ] catch exception in xxbrowsermanager when load jxbrowser file
added a check for the AppVersion key and updated the image file creation logic to use equals method instead of equality checks to improve code readability and
[ somfytahoma ] fix typo in somfytahomabridgehandler
[ hotfix ] [ test ] disable flaky test on github
refactor OpenWireConnectionTimeoutTest to use static final constants for keystore , keystore , and keystore properties to improve code readability and maintain
replaced ` warnThenDebugLogger ` with ` stackTraceWarnThenDebugLogger ` and added handling for NaN values in ` DynatraceExporterV2
added a call to remove a session ID from the session info to ensure that the session ID is properly removed from the session information
added null check for alert names in HeartBeatHandler and adjusted formatting in AlertReceivedListener to ensure alert names are set when no alerts are
simplified the return statement in ChannelEndPoint . java to improve code readability and maintainability
move kmodule . xsd from kmodule . xsd to kmodule . api . kmodule . xsd
added unit tests for ` seekTo ` method in ` ShadowMediaPlayerTest ` and modified ` seekTo ` method in ` ShadowMediaPlayer ` to ensure
rename the method ` createTask ` to ` createThrowingTask ` across multiple classes to improve clarity and consistency in task naming conventions
added a conditional check to set the border of the CloseButtonTabbedPane based on the AQUA _ LAF condition to ensure the button is
added HTTP request and timeout settings in TSPTimeStampService . java and modified imports in TestSignatureInfo . java to improve request handling and ensure
make xstreamutils . createxstream ( ) method accessible from classpath .
added validation for diamond application type in Attr . java and created a new DiamondRaw class in Neg12 . java to improve error handling and provide
[ calcite - 2472 ] fix typo in reloptutil . gettypetype ( )
updated argument requirements in Http2Settings . java to include a conditional check for long values to ensure that the setting value is valid before proceeding
deleted the file ` Issue664Test . java ` from ` MapInterfaceTest . java ` and ` Issue664Test . java ` to
added error handling for session insertion in SessionsPoolTest . java to ensure proper management of disposed sessions in a disposed session
added start and end methods to the JSON output in GeoJsonWMSBuilder . java to ensure proper handling of root objects in the JSON output
updated the ` setIndex ` method to use ` intValue ( ) ` instead of a hardcoded value to improve code readability and maintainability
added a check for manual unstash behavior in TaskbarStashController to ensure that manual unstashs are only processed when necessary
camel - 14265 : camel - web - camel - camel - camel - camel - camel - camel - camel - xml - dump - routes
modified the ` getEventMismatchMessage ` method to accept a ` boolean ` parameter for the ` waitForExpectedCount ` parameter and adjusted the timing logic to
added a new file ` HeaderFixer . java ` to handle header file processing to facilitate the handling of license header files in the application
added FIRST _ LOAD _ COMPLETE constant and implemented broadcast permission handling in Launcher and LauncherProvider classes to enhance user experience by allowing
deleted the SuperJumperAndroid . java file to the functionality is no longer needed in the project
updated return value in SystemTableScan . java and modified test cases in TestStarQueries . java to ensure proper handling of distributed tables and improve query
[ hotfix ] [ runtime ] remove unused interface from observation
add missblock parameter to the processidrematches method and remove it from the missingitems list
updated return statements in AtomicIntegerArray , AtomicLongArray , AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to use a long type instead of a hardcoded value
added caching functionality for data format strings in HSSFCellStyle . java to improve performance by avoiding unnecessary string comparisons
updated the query parameter in RemoteAuthenticationEndpointTests to include username and attributes to ensure proper filtering of usernames in the response
changed the condition from ` needsInput ( ) ` to ` finished ( ) ` in ` DeflateCompressor . java ` to ensure that the def
updated logging in Launcher . java to include workspace and page index settings to improve logging clarity and ensure correct page index for the launcher
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
remove deadlocktest . java that be no longer need .
added null check for newInput and improved debug output formatting in BugContentProvider and BugGroup classes to enhance robustness by preventing potential NullPointerExceptions
added a " Reopen in Browser " menu item and modified server opening logic in JavaScriptEditor to enhance user experience by allowing users to open a browser
added error handling for multiple output specifications in SemanticAnalyzer and SemanticAnalyzer classes to improve error reporting and provide clearer feedback when multiple outputs are present
removed unnecessary Runnable instantiation in BasicTest . java to streamline the code and improve readability
fix coordinatearrays . reverse ( ) to handle empty coordinate array
removed unnecessary whitespace in setOpen method call to improve code readability and maintain consistency
added a new variable ` first ` to ` false ` in ` TestPayloads . java ` to initialize the first variable to false
replaced manual enterOverviewMode ( true ) with showOverviewMode ( true ) in Launcher . java to simplify the code and improve readability by
[ hotfix ] [ test ] fix the test failure of networkroutetest
change the return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure the correct value is
removed unused variables and added suppress warnings in NestedArithmeticTest . java and AMD64FloatConvertNode . java to improve code clarity and suppress unused warnings
updated HttpClientRequestImpl to use ` true ` and modified buffer handling in ` HttpTest ` to improve performance and readability of buffer operations
updated the regex pattern for updating verboseLevel and artifact in GetMavenDependenciesTask . java to improve clarity and correctness of the artifact format
pdfbox - 4071 : remove dependency on cosbase , a suggest by valerybokov
removed unnecessary print statements from ReferenceUtil . java to simplify code and improve readability
[ hotfix ] [ table - planner - blink ] make visiblefieldpredicate a functional interface
added support for ` solidityJsonRpcHttpPort ` and ` solidityNodeHttpJsonRpcHttpPort ` in multiple classes to enable HTTP JSON
added a type check before removing the drop target from the drag controller to ensure that the drop target is only removed when the folder is an instance of
refactor stubJar generation logic into a separate method ` createStubJar ` to improve code readability and maintainability by reducing duplication
added new Feature instances for setup wizards and workflows in GettingStartedTab . java and StartPageTopComponent . java to enhance user experience by
[ hotfix ] [ cassandra ] remove unnecessary call to schedulewithfixeddelay ( )
removed unnecessary type casting for available variable in OnlineTestCase . java to simplify the code and improve readability
change return attributes from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure correct return value is returned for user authentication
refactor HttpChannelState to improve error handling and callback execution logic to enhance code readability and maintainability by reducing redundancy
changed the implementation of CreateEndPoint from implementing Runnable to extending Invocable . NonBlocking to enable non - blocking operations for the CreateEndPoint class
updated regex patterns for TABLE _ HEADER _ SEPARATOR and modified conditional checks in TableBlockParser . java and added a new test for one - column
updated return value from 32.0 f to 31.5 f in Camera . java to reflect the latest version of the camera
added a preference for " startonbootup " and updated return values in GpsSettingsActivity , Utilities , and GeneralLocationListener classes to ensure
updated the client secret value from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to ensure compatibility with the expected size of the client
updated assertions in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include the parameter name in the error message to provide clearer feedback
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to race conditions
updated method signatures in SegmentGenerationAndPushTaskExecutor and SegmentGenerationAndPushTaskExecutor to return the PinotFS instance instead of using the Factory
added locale - specific date formatting logic in TimeLineCursorAdapter , TimelineArrayAdapter , and TimeLineCursorAdapter to ensure correct date formatting based
added MetalLookAndFeel import and set it in bug8032878 . java to enhance the visual appearance of the UIManager
added synchronization and refactored message handling in Bot . java to improve thread safety and ensure proper resource management
updated error handling in GlobalErrorHandler from ` getMessage ( ) ` to ` getError ( ) ` to improve error handling by using a more descriptive
rename method parameter from ` module ` to ` from ` in multiple classes to improve clarity and consistency in naming conventions
added handling for CmdLineException in PinotAdministrator . java to improve error logging for caught exceptions
replaced calls to ` super . equals ( ) ` with ` equals ( ) ` and ` hashCode ( ) ` in ` Subject . java ` to
changed boolean flags from " RIGHT " to " END " in CustomPlaybackOverlayFragment and ImageButton classes to improve code readability and maintainability by
updated zoom level minimum and maximum values from byte to byte 0 in BasicMapViewer . java to ensure correct zoom settings for better zoom functionality
refactor user and process user handling in DrillRoot . java to utilize ImpersonationUtil for improved code readability and maintainability to
replaced instances of ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` across multiple files to simplify permission checks and
added argumentExtractor support to DelegatedClientAuthenticationAction and updated related classes to utilize it to enhance flexibility in managing arguments in the authentication process
changed the ` defaultGroup ` variable from ` String ` to ` final String ` in ` NacosServerRegisterRepository . java ` to ensure imm
update tilesizechanger to use createtilecaches ( ) instead of destroytilecache ( )
removed redundant calls to removeAllViews ( ) in CustomPlaybackOverlayFragment and InfoLayoutHelper to streamline code and improve readability
removed the ` cleanEntriesForFeedsWithoutSubscriptions ` method and refactored the ` cleanEntriesForFeedsWithoutSubscriptions ` method
replaced ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to streamline authentication handling
nifi - 11446 : make filebasedclusternodefirewalltest a temporary folder
make lincombobox . lincombobox . lincombobox . lincompoundpoint . lincompound
reformatted conditional statements in RandomAccessReader . java for improved readability to enhance code readability and maintainability
added @ SuppressWarnings ( " unchecked " , " vararg " ) annotations to Fields . java and MockitoBeforeTestNGMethod . java to suppress
refactor CImage methods to use imageToArray instead of createNSImageFromArrays and add imageToArray method to enhance image processing capabilities and improve
replace WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to improve performance by using ByteArrayComparable instead of WritableByteArrayComparable
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple files to improve clarity and consistency in naming convention
replaced null checks with ` Objects . equals ` for version comparisons across multiple Java files to improve code readability and maintainability by using standard
add miss nullable annotation to classpathsymbolresolver . resolveclassfromcanonicalname ( )
added assertions to verify default location settings in NinjaDefaultTest . java to ensure correct handling of location properties in tests
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations in ` DeviceProfile . java
updated padding bottom calculation in DetailFragment and adjusted listViewPositionOffset values in ListFragment to improve layout responsiveness and ensure correct positioning
refactor exception handling in ZkStateReader to use Thread . currentThread ( ) . interrupt ( ) instead of Exception to improve code readability and
added null check for field values in HttpFields . java and created a new test for empty headers in RequestTest . java to ensure robust handling of
cloudstack - 10284 : do n ' t allow staticnat service to be use in specified network id .
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure
added a call to removeExtraEmptyScreen ( true ) in the workspace to ensure that extra screens are removed from the workspace
added a new boolean variable ` fixedWidth ` and modified glyph addition logic in ` BitmapFont . java ` to ensure glyphs are only added when
removed the ` showTitle ` parameter from the ` createFragment ` and ` createArgs ` methods in ` ChangeLogFragment ` and ` ChangeLog
added preEvent and postTransition methods to AbstractStateMachineFactory to enable proper handling of state machine events in the state machine
refactor ConfigDescriptionProvider to improve configuration handling to enhance code readability and maintainability
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf initialization in StorageBasedMetastoreTestBase and StorageBasedMetastoreTestBase to support Windows -
refactor sorting logic in FacetComponent to use a boolean variable for better readability to improve code readability and maintainability by reducing redundancy
updated the cache file path in CheckstyleReport . java to use the model ' s build directory instead of the target directory to ensure the cache file
added functionality to manage and stop Jetty replicas in DeleteInactiveReplicaTest . java to ensure proper cleanup of the Jetty server during test execution
added a file name parameter to the FileActionsDialogFragment constructor and updated its usage in OCFileListFragment to allow users to specify the file name
added INVALID _ DIRECTION constant and updated reorder direction checks in CellLayout . java to improve clarity and maintainability of reorder direction handling
added new fields to InnerTransferRequest and updated API endpoint paths in AccountAPI to ensure accurate representation of account details in the application
[ hotfix ] [ test ] fix the assertjobrunningeventually call in sink stress test
added a new annotation ` EnableAdminClient ` to the ` org . noear . solon . admin . client ` package to enable the admin
replaced specific imports with a wildcard import and added new visitIdentifier methods in FindTypes . java to simplify import statements and improve code readability
added a text color setting for the action text in AuthenticatorActivity to enhance user experience by providing a visual appearance of the action text
added a new method ` find ` to ` Manager ` , ` StreamSupplierComponent ` , ` MockManager ` , and ` AbstractManager ` to
refactor method names from ` addTestSteps ` to ` createTestStepsForBeforeHooks ` and ` createTestStepsForAfterHooks ` to
renamed test methods from " noArgMethodIsNotValid " to " validNoArgMethod " in StaticHandlerMethodResolverTests and MethodInvokingMessageHandler
added a ` cancelClient ` method to the ` startDriver ` method and implemented the ` cancelClient ` method in ` RpcServer ` to ensure
added ` getImplicitPreCoercionValue ( ) ` method to ` SkylarkParamInfo ` , ` ParamInfo ` , and
initialize ` lastDisplayedUser ` to ` Optional . empty ( ) ` in ` FileDisplayActivity . java ` to ensure ` lastDisplayedUser `
added a new method ` findAll ` to ` QueryDslMongoRepository ` and updated its usage in ` AbstractPersonRepositoryIntegrationTests ` to enhance
added null checks for SchemaRegionConsensusImpl and DataRegionConsensusImpl before calling stop ( ) to avoid potential NullPointerException
[ hotfix ] [ benchmark ] exit warm - up loop in case of failure .
added xread and xreadgroup methods to MultiKeyPipelineBase , MultiKeyBinaryRedisPipeline , and MultiKeyBinaryRedisPipeline classes to support
removed FIXME # MN comment and updated method calls in LinkedBufferInput and StreamInput classes to improve code readability and maintainability
added WebSecurityCustomizer to CasWebAppSecurityConfiguration and refactored configureHttpSecurity method in CasWebSecurityConfigurerAdapter to improve security
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` to verify the behavior of ` DBTokenStoreNoDoAs `
added an ` registerProviderInternal ` method to ` ShadowContentResolver ` and implemented the ` create ` method in ` ContentProviderController ` to register a
replaced ` Version ` with ` ClassFile . Version ` in the ` AttributeReader ` constructor to ensure compatibility with the latest ClassFile version
added keep - alive configuration to SingleConnectionManager to ensure proper handling of connection keep - alive settings
[ java ] rename the parameter ` multicastsenderflowcontrol ` to ` multicastsenderflowcontrolsendersenderflowcontrolsupplier
added null check for getCurrentPoint ( ) in DrawLocus and GBasicStrokeD classes to ensure that the point is not null before proceeding
added error handling for IOException in ChannelEndPoint and modified flush logic in WebSocketConnectionD13 and WebSocketMessageD13 classes to improve resource management and ensure
simonstewart : add option to disable takescreenshot for firefox and opera
replaced JUnit ' s assertEquals with AssertJ ' s assertThat for multiple test classes to improve readability and maintainability by using AssertJ ' s
trufflelanguage : remove deprecate method that be no longer need .
refactor Throwable handling in StubberImpl and add new test classes for handling bad throwable exceptions to improve error handling and ensure proper cleanup of mocking
refactored exception handling in Actor and Group classes to improve clarity and consistency in error reporting to enhance code readability and maintainability by standardizing
added location permission handling and improved camera position management in LocationPickerActivity to enhance user experience by allowing permissions on location access and camera position
added a new class ` CounterMDB ` that implements a message listener for tracking counter messages to enable tracking of counter messages in the application
added CookieSpecs import and set CookieSpecs to STANDARD in GetHTTP . java to enable custom cookie specifications for HTTP requests
replaced a conditional check with a method call to ` r1 . overlaps ( r2 . overlaps ( r1 . x , r2
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and updated audio filtering logic in AirspyT
added monitoringUrl parameter to ScrollingPanel and SystemInformationsButtonsPanel constructors to allow users to specify a monitoring URL for UI updates
[ hotfix ] [ config ] remove unused service _ create - timeout option from kubernetesconfigoptions
updated icon resource assignments for " landmark " , " city " , and " empty _ photo " in NearbyListFragment . java to enhance
added a null check for the package before processing in DefaultPackageScanClassResolver to avoid potential NullPointerExceptions when the package is not initialized
added a new file ` PrintInlining . java ` containing a main method that prints the " Passed " message to demonstrate the usage of
fix : fix issue with nested braces in javadoc tag
[ java ] remove publicationinitialtermid and requestrecordingscorrelationid and publicationstarttermoffset from archivetest
updated EdgeDataTableModel to use ` getEdgesAndMetaEdges ( ) ` instead of ` getEdges ( ) . toArray ( ) ` to ensure
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve readability
updated Timber log messages to include the playback speed format to improve clarity of error messages for better debugging
added room removal event when the cluster be start .
updated the string format in AutoScalingHandlerTest from ' replicas ' to ' cores ' to improve clarity and accuracy of test results
added texture key properties to the TextureHelper class to enhance rendering capabilities for textures
refactor ` PythonDslProjectBuildFileParser ` to use ` CloseRecordingProjectBuildFileParserDecorator ` instead of ` PythonDsl
[ j2cl ] add library normalization pass to j2cltranspiler
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactoryTest `
[ hotfix ] [ runtime ] add @ visiblefortesting annotation to memorysegment and memorymanager
added Temporal and TemporalType imports to ConsoleSessionVO . java to ensure proper handling of timestamp values in session management
added new files ` Hbs . java ` and ` HbsTest . java ` for the ` Hbs ` template to implement a Handlebars template
added null and empty checks for hint and message text in ChatMessageAdapter . java to improve code readability and maintainability by encapsulating
updated the iteration method from ` keySet ( ) ` to ` values ( ) ` in ` ImportCsv . java ` to use ` values ( )
add a test that waits until alert dialog appear to be show in the confirm dialog .
added a check to return null for distinct column indices in ReduceSinkDeDuplication . java to ensure that distinct column indices do not exceed
added a boolean flag ` addedToList ` and modified the ` getClassPathFromManifest ` method to handle absolute paths more effectively to improve robustness
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
updated the OSGi bundle identifier from " websocket - server " to " jetty - websocket - client " in TestOSGiUtil . java
[ saml ] make identity . getattributes ( ) return an unmodifiable map instead of unmodifiable map
do n ' t repaint header if the saved program do n ' t match
replaced instances of ` new Double ( bytes ) ` and ` new Float ( bytes ) ` with ` return bytes ` across multiple classes to simplify code
updated method call from ` getDate ( colName ) ` to ` getTimestamp ( colName ) ` in ` JdbcDataSource . java ` to ensure accurate
added a check for " javax . naming . Context " in HtmlJndiTreeReport . java to ensure the correct class name is used for
added database options handling in StorageUtils and improved logging in Manager to enhance database configuration flexibility and provide clearer logging information
updated edge type check from " double " to " mutual " in ImporterGEXF . java to ensure compatibility with different edge types
removed the static final int FLAG _ SLIPPERY constant from StatusBarTouchController . java to simplify the code and improve maintainability by
truffle : make sure we do n ' t need to calculate stable dimension if the type be array .
added functionality to retrieve and set the Google Drive folder path preference in the PreferenceHelper and related classes to enhance user experience by allowing users to configure the
do n ' t shuffle suggestion on e2e and e2e button , so we do n ' t show the suggestion popup .
added @ Nullable annotation to multiple assertThat methods in Truth . java to indicate that the target parameter is not null to enhance code robustness by allowing null
updated array indexing logic in ArrayUtil . java to correct bitwise operations to enhance performance and maintainability of the code
added a new test class ` ApiExceptionTest ` and modified ` instrumentConstructor ` method to check if ` ctorCanBeInstrumented ` is called to
added functionality to manage waiting for Anticompactions in StreamIn and StreamInitiateVerbHandler to improve the handling of Anticomp
added ` isKeyguardSecure ` property and its getter / setter methods in ` ShadowKeyguardManager ` and updated test cases in ` ShadowKey
added serialVersionUID fields to StringDialog class to ensure proper serialization compatibility for the StringDialog class
updated string processing to replace ' > ' with ' ' and added a conditional check for the length of the ` overrideParts ` array to ensure proper
renamed the test method from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureException
modified the ` checkDrained ( ) ` method in ` AsyncFileImpl . java ` and added a new test in ` FileSystemTest . java
updated LIGHTS _ NUM , LIGHT _ INTESITY , LIGHT _ INTESITY , and LIGHT _ INTESITY to
replaced instances of ` FakeProjectFilesystem ` with ` getProjectFileSystem ` in multiple test files to simplify filesystem initialization and improve test reliability
changed the data type of the ` loadRerunFile ` method from ` PathWithLines ` to ` PathWithLines ` across multiple classes to
refactor Gson , JsonArray , and JsonObject classes for consistency to improve code readability and maintainability
removed the @ NotNull annotation from the TEST _ DIRS array in PubRoot . java to clarify the purpose of the test directory array
added a call to Shadow . directlyOn ( realObject , ParcelFileDescriptor . class ) . close ( ) in ShadowParcelFileDescriptor . java
added a method to reset the prefix index in Stylesheet . java and modified prefix index handling in BasisLibrary . java to improve thread safety and
added logging for HTTP connection in TestDistributedStatsComponentCardinality . java to enable debugging by logging the HTTP connection in debug mode
added multiple calls to ` throwIfImmutable ( ) ` in ` IntList . java ` to ensure that immutable values are properly handled in the code
added @ NotNull annotations to method parameters and updated URI construction in GrpcClientBuilder and UnitTestReadHelper classes to enhance code clarity and maintainability
refactored package structure and refactored method calls in Graal . java to improve code readability and maintainability by using a lambda expression
[ gr - 26464 ] fix potential race condition in insight object .
added platform - specific file writing for the manifest file in GenerateManifestStep . java to ensure proper handling of line endings in Windows environments
add a rfe3531161 test case for rcn _ redundant _ nullcheck _ of _ nonnull _ value .
fix npe in thingresource when thing have no configuration ( # 4914 )
refactor createguaranteeexception to return RuntimeException instead of Throwable
added an else clause to init the crop box in PageDrawer . java to ensure that the crop box is properly initialized when necessary
refactor ManagerBase class to improve code organization to enhance maintainability and readability of the code
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to enable accessing all apps
replaced FragmentActivity instantiation with Robolectric ' s buildActivity method to simplify code and improve performance by utilizing Robolectric
renamed the method ` getFileCoordinates ` to ` processFileCoordinates ` and added a ` getDecimalCoords ` method in ` ShareActivity ` to improve
renamed classes from ABCase1 _ 1 and ABCase2 _ 3 to TestABCase1 _ 2 and TestABCase2 _ 3 to
changed parameter name from ' num ' to ' value ' in saveEnergyPriceHistoryDone method and added a null check for the blackhole address in
added a call to ` doSimsChanged ( ) ` before setting the ` RocketChangedEventHandler ` in ` OpenRocketViewer .
added a new recipe class ` ChangeDependencyGroupIdAndArtifactId ` to change Maven dependency groupId and artifact ID to enhance the recipe ' s functionality for
refactor file system and path initialization in IndexingJob . java and add a check in SegmentChecker . java to ensure that the input path is
changed the condition from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to ensure
refactor PreprocessorDelegate to use Supplier for replacement paths and pathToSourcePathMap and improve error handling to enhance code readability and maintainability by
rename JsonExamples class to Examples and update package - info . java files to improve clarity and consistency in naming conventions
added multiple debug logging statements to ViewExtractor . java to improve visibility into the process of copying files in the application
refactor FindsByLinkText class to improve code organization to enhance maintainability and readability of the code
added a new file ` Main . java ` that prints the Java oop entry point hit to demonstrate the usage of Java oop entry point
fix a race condition in sipregisterregistrationsipimpl . createcseqheader .
removed redundant continue statements from NativeScanner . java to clean up the code and improve readability
changed the package of RendererConfigurationTest from ` test ` to ` configuration ` and removed unnecessary imports from ` RendererConfiguration ` to improve organization and
refactor dependency resolution logic in AndroidLibraryDescription . java to use memoization for exported dependencies to improve performance and maintainability of dependency resolution
replaced ` stream ( ) . count ( ) . count ( ) ` with ` size ( ) ` in ` RemoteContainsResults . java ` to
added charset handling to the metadata collection in ExtractingDocumentLoader to ensure the correct content type is used for document metadata
updated SQL insert statements to use placeholders for username and username in DatabaseConfig . java to enhance flexibility in SQL queries by allowing optional usernames
added a check to return early if the slot is - 1 in WindowListener . java to avoid unnecessary execution when the slot is - 1
add option to ignore remote repository introduce by transitive dependency
removed duplicate @ Inject annotation for backgroundJobManager in ContactsPreferenceActivity . java to improve code clarity and maintainability
updated ColorsActivity to extend AppCompatActivity instead of Activity to improve compatibility with newer Android versions
added a null check before closing the selection object in NIOTransport . java to prevent potential NullPointerExceptions when closing the selection
added a condition to break the loop if the matcher ' s start and end matches the string length to ensure proper handling of regular expressions in the regexp
updated the @ IntegrationTest annotation to include a value of " server . port = 0 " to set the server port to zero to ensure the test
added a new UDFReverse class and registered it in FunctionRegistry . java , and created a new UDFReverse . java file to implement a
updated method calls to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` across multiple classes to improve code clarity and
refactor Tracer class implementation to improve code readability and maintainability
[ hotfix ] [ test ] ignore rocksdbstatebackendreaderkeyedstateitcase test
replaced specific JUnit imports with a wildcard import in XMLChangeLogParserTest . java to simplify import statements and improve code readability
added synchronization for buffer clearing in StarTreeRecordStoreCircularBufferImpl . java to ensure thread safety during splits during splits
updated forecast minutes , hours , days , and days in OpenWeatherMapOneCallHandler . java to increase forecast values for better user experience
updated test cases in AbstractPageOperationTemplateTest to include a timeout parameter and modified the lastFetchTime and previousFetchRequestTime variables to enhance test
updated RemoteTargetGluer and FloatingHeaderView to handle multiple remote target handles and added fade - in functionality to improve UI responsiveness and
updated the ` parseRerunFile ` method to return a ` Stream < Collection < FeatureWithLines > > ` instead of ` splitAndMap
add some block to creative tab , and add some block to the creative tab
updated assertions in TestRadioButtons to check for the size of optItem , retrievedOptions , and retrievedOptions to ensure correctness of size assertions for
added functionality to handle uncompressed and compressed file sizes in RCFileCat and RCFile classes to improve file size management and provide clearer
refactor multiple clustering classes to improve code organization to enhance maintainability and readability of the codebase
added multiple checkNDArray checks in JnaUtils . java to ensure that an MXNet NDArray is closed before proceeding with
refactor BlobServer class to improve code readability to enhance maintainability and facilitate future updates
pmd : fix false positive in unusedprivatemethod
rename variable ` lexicalScope ` to ` lexScope ` in multiple files to improve clarity and consistency in naming conventions
[ sftp ] add auto - startup test for sftp inbound channel adapter
added getter and setter methods for Quadtree classes and updated constructors in AbstractNode , Quadtree , AbstractNode , and STRtreeTest classes to
updated version parsing logic to handle both minor and minor characters correctly to ensure correct handling of version numbers in the application
added a check for non - empty tags before adding them to the active item to avoid potential NullPointerExceptions when tags are not available
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and implemented the ` fromDateTime ` function in ` DateTime
updated disassemble method to accept a cache value instead of a single session in CustomType and modified disassemble method to handle null values more effectively to
refactor Log4j2ConfiguratorServlet to improve code organization to enhance maintainability and readability of the code
replaced the initialization of HiveException and AuthorizationException with a direct return statement to simplify exception handling by directly returning the original exception
updated CGoCompileStep to use String . join for the command prefix in CGoCompileStep . java and added a new test for C++
added @ Buildable annotation to CustomResource . java to enable the builder for the Kubernetes API
removed the @ Override annotation from the Only class to improve code clarity and maintainability
added timeout settings for HTTP client connections in HttpClientFactory . java to improve connection reliability by allowing more time for timeouts
added " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _ node _ parse _
[ java ] add support for disabletrace , enableall , and enableother to the security handler
removed the @ Singleton annotation from ApplicationController . java to streamline the code by eliminating unnecessary dependencies
updated username assignment logic in ShareActivity to handle cases where the account name is not empty to improve robustness by handling potential exceptions when retrieving usernames
added BatchStatus import and a new test method ` testResumePausedInstance ` to ` SimpleJobLauncherTests ` and ` SimpleJobLauncherTests `
added null check for cacheConfig before joining to avoid potential NullPointerExceptions when cacheConfig is not initialized
[ grid ] make localnode . dockersession public
[ java ] use the default package name as a string instead of a string .
pdfbox - 4071 : do n ' t decrypt a dictionary , a suggest by valerybokov
[ hotfix ] [ test ] fix test bug in distributedlanczossolvercli
updated HttpServerTestBase . java file to improve test coverage to enhance reliability and maintainability of the test cases
refactor test assertions in PortletApplicationMapTest to use a HashSet for keys to improve readability and maintainability of the test code
add unit tests for ` NestedBeanIgnoreNulls ` in ` BeanTableSchemaTest ` and ` NestedBeanIgnoreNulls ` classes to ensure
( chore ) camel - redisson - spring - starter - add customizer to redisson - spring - starter
updated the index calculation in Indicator . java and added a new IndicatorTest . java file with unit tests in IndicatorTest . java to
added new method ` execInContainerWithUser ` to ` ContainerState ` , ` ExecInContainerPattern ` , and ` ExecCreateCmd `
updated condition checks for ` interestedInByteMessages ` and ` interestedInTextMessages ` to include both ` WebSocketByteListener ` and ` WebSocketText
added test cases for attribute equality and negated attributes in SemgrexTest . java to ensure correct behavior of the SemanticGraph class with different attribute
added a broadcast intent for CLEAR _ PULL _ UNREAD in HomeFragment . java to ensure that the notification is sent to the user
removed conditional checks for Gingerbread and overScroller initialization in TouchImageView . java to simplify code logic for better readability and maintainability
added a destroy method to BaseDstu21Config and updated WebsocketDstu21Config to destroy the default profile validation support to ensure proper resource
camel - 14265 : camel - base - vetoed should throw a runtimeexception instead of throw a runtimeexception .
added FloatingActionButton functionality to ShareActivity for displaying FAB menu based on image coordinates to enhance user experience by providing quick access to the FA
added a new ` InlineParslet ` class and updated the ` toDate ` method to utilize it to enhance date parsing functionality by allowing
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading functionality
updated Swedish translations in ErrorMessages _ sv . java and XPATHErrorResources _ sv . java to replace " det " with " topp
added checks for server status before binding to the OperationsServiceConnection to ensure that operations service binding only occurs when the server is checked
updated the method calls from ` getBeginColumn ( ) ` and ` getEndColumn ( ) ` to ` getBeginLine ( ) ` and `
added waitFor ( ) method to CxxPreprocessAndCompileStep and implemented waitFor ( ) method in ManagedThread to improve thread management and ensure proper
added ` requireAllRepositorySources ` property to ` PrincipalAttributesProperties ` and implemented ` mergePersonAttributes ` method in ` CoreAuthenticationUtils ` to
make maxsizechecker . getmaxsizepernode ( ) public
added support for enabled SSL protocols in NettyWebServer , ServerBasicConfig , ServerBasicConfig , ServerBasicConfig , ServerBasicConfig ,
replaced AtomicBoolean with AtomicReference in SetOnce . java and added a test for trySet method in TestSetOnce . java to improve thread safety and ensure
updated the return statement in QueryDslMongoRepository to handle null properties and added a test for handling null values to ensure proper key retrieval based on
updated assertions in RoundRectBorderTest to use self instead of hardcoded values to improve readability and maintainability of the test code
added check for empty cluster configuration before creating a new cluster and updated test cases accordingly to ensure that empty cluster configurations are handled correctly and improve error
[ java ] remove the paralleltest , it be no longer need .
updated CountDownLatch and List initialization in PrecompiledContracts . java to use a minimum value and added a validation check for the length of the sign to
modified the condition to check if the window is not running in ProcessInformationsPanel . java to ensure that the application correctly handles cases where the window
added a private static method ` empty ( ) ` and refactored methods in ` MoreCollectors . java ` to improve encapsulation
added null checks for orderbook and WebSocketClientExtensionHandler in BitmexStreamingExchange , BitmexStreamingMarketDataService , and Bitmex
added validation for latitude and longitude in GeoPointField and created a test for it in TestGeoPointField to ensure that invalid latitude and longitude are
updated method names from ` createWorkflowFile ` to ` createFile ` and ` getWorkflowDrafFileName ` in multiple classes to improve clarity
refactor ResponderId class implementation to improve code readability and maintainability
updated the ` getTableDocument ` method to accept a ` boolean ` parameter and modified the ` getTableDocument ` method to include a ` withDependents
added handling for the number of consecutive uploads without coordinates in UploadActivity to improve user experience by alerting users when the number of consecutive uploads
added caching for profile data and modified return logic in ProfileResources . java to improve performance and manage profile data in the application
refactor property value handling in JpaMetamodelEntityInformation to use direct field access fallback bean wrappers to improve clarity and maintainability of property
updated the ` bootstrapLastDDLTimestamp ` method to ` bootstrapLastDDLTimestampForTablesAndViews ` and ` bootstrapLastDDLTimestamp
added support for registering default exception mappers in AbstractServerFactory and updated DropwizardResourceConfig to utilize this feature to enhance error handling capabilities
added a new parameter ` false ` to the ` panel . metaData ` parameter in ` EntryEditor . java ` to ensure the ` storeFieldAction
updated the nativeCreateNSWindow method to include the owner pointer instead of a hardcoded value to improve the accuracy of the native creation process by
updated the database alter table name from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME in FileContentProvider . java to ensure the correct
added " Stock " to the CIRCULAR _ PROGRESS message and updated related event handling in Tile . java to enhance functionality by allowing
fixed - rbuckets . get ( string , string codec ) return null instead of null in commandasyncservice .
[ java ] add detection of complex generic type in typeframemodelingvisitor .
refactor LauncherBackAnimationController to utilize a new BackProgressAnimator for improved handling of back events to enhance the responsiveness of the
changed the visibility of the ` _ initialPageNo ` variable from final to non - final and added a check to ensure ` _ pageNo `
[ java ] make crc16 and crc16 benchmark more efficient .
updated comment parsing logic in FormattedSqlChangeLogParser and added a test for comment parsing in FormattedSqlChangeLogParserTest to improve comment
make mavenarchiver an instance of jararchiver in abstractjarmojo instead of create a new instance of jararchiver .
replaced HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by replacing HumanReadableException with BuckUncheckedExecution
removed unnecessary checks for aggregations in TSServiceImpl . java and added multiAggregationTest in DaemonTest . java to improve code readability
added support for UNSIGNED _ BYTE for RGBA and Uint8Array in GwtGL20 . java to ensure proper error handling for unsupported formats
added a new test method ` testDebugInfo ` to ` OutputMemoryTest ` , ` testVarDump ` , and ` testDebugInfo `
replaced UnmodifiableClassException with Throwable and added a lastException variable in InlineBytecodeGenerator . java to improve exception handling and provide clearer
add log for class initialization trace ( fix # 119 )
updated parameter name from queryLevelTimeoutMs to queryTimeoutMs in BaseBrokerRequestHandler . java to improve clarity and consistency in naming conventions
updated TopicRouteService to use Caffeine cache and added error handling for topic route loading to improve cache management and error handling for topic routes
mbtilesdatastorefactory . createdatasource ( ) should set synchronOUs to off if read - only .
updated the regex pattern for invalid source target release in FindBuildToolFailures . java and added a new error compiling test in FailureLogAnalyzerTest
updated the URI construction logic in DetailFragment . java to include availability check and added a location intent for Google Maps to improve user experience by
added a null check for ` getInheritedParameterContexts ( ) ` in ` StandardParameterContextDAO . java ` to avoid potential NullPointerException
refactor ClassLoader class implementation to improve code readability and maintainability
added a method to set origin response headers in ProxyRequestHelper and a corresponding test in ProxyRequestHelperTests to ensure that the origin response headers are
added a new constructor for ProfileSettingDrawerItem in GpsMainActivity . java to enhance the functionality of the profile setting drawer
added XML validation configuration to multiple classes and updated parser instantiation to use this constant to enhance validation capabilities for XML processing
alexeibarantsev : fix the issue that the firefox driver do n ' t work in the firefox driver
added a maxRows variable and adjusted fetch size handling in IoTDBStatement . java to ensure that fetchSize does not exceed the maximum number of
replaced ` isCountOptimizable ` with ` allActionsAreOptimizableFilters ` in ` SqlStreamTerminator . java ` to improve code
added node event handling for mouse events based on selection settings in StandardVizEventManager . java to ensure proper event dispatching for selected nodes and
replaced Integer . valueOf ( ) with a new zeroBuffer ( ) method in ManyToOneRingBuffer . java to improve code readability and maintain
refactor TerminalNode to use memory for XorGroup and add getter and setter methods to improve memory management and encapsulation of Xor
removed the ` getHeight ( ) ` and ` getWidth ( ) ` methods from ` LCDUIImageMonochromeBitmapSource ` class to streamline the
refactor SourcePathResolver to use getPathPrivateImpl instead of getRelativePath and add getAllAbsolutePaths method to improve code readability and maintainability by
[ hl7 ] fix malformed dstu2 string in dstu2
changed the visibility of the ` changeSchemeIfIsWebSocketUpgrade ` method from private to static and updated URI building logic to enhance encapsulation
rename ` ` llvm / ' ' to ` ` llvm / ' ' for consistency
refactor platform retrieval logic in HaskellBinaryDescription to use a separate method to improve code readability and maintainability by encapsulating platform retrieval
added import statements for the IndexReader , IndexReader , Searchable , Similarity , and Similarity classes to improve code clarity and maintainability by
modified ConcurrentLinkedStack to handle null values and added new test cases for bubbles and iterators to improve robustness by preventing null pointer exceptions
added methods ` isMatched ` and ` setMatched ` in ` BinaryHeapQueueTest ` , ` BaseQueueable ` , and ` BaseQueue
added a null check for mDirectories before initializing mDirs to avoid potential NullPointerExceptions when mDirectories is not initialized
updated the condition to check if mOverviewStateEnabled and mFirstLayout are not enabled in RecentsView . java to ensure proper handling of gesture
added multiple new package - info . java files for various Lucene - related classes to ensure compatibility with new codecs in the Lucene analysis framework
added a text field for the visible auto leveler panel in AutoLevelerTopComponent to improve user experience by providing a more descriptive text
added post optimization functionality to DirectUpdateHandler , DirectUpdateHandler2 , and UpdateHandler classes to enable post - optimization functionality in the update process
updated Inflater initialization to use padded length instead of a hardcoded value to ensure proper handling of compressed data during compression
removed the check for user data in Shaderc . java to streamline the code by eliminating unnecessary checks
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 7670 . cgi
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 11919 .
refactor Subject class to improve code readability to enhance maintainability and facilitate future updates
use concurrentreferencehashmap instead of concurrenthashmap in abstractserializationservice . gettypemap ( )
updated color distance calculations in HSSFPalette . java and added a new test for findimilar color functionality in TestHSSFPalette . java
refactor multiple request and response classes for improved clarity to enhance maintainability and readability of the codebase
added a new test method ` testShouldBeAbleToFindASingleElementByNumericId ` and ` testShouldReturnEmptyList ` to
added a ` flags ` parameter to the ` registerReceiver ` and ` registerReceiver ` methods and updated related calls to include the ` flags ` parameter
updated FFmpegTest to use InvocationOnMock for mocking the resource loading to improve mocking and readability of the test code
added previousInput parameter to OggInputStream and OggInputStream constructors to ensure proper resource management and prevent potential memory leaks
added a new constant RESPONSE _ WAS _ NULL and updated failureMessage assignment in AssertionResult . java to improve code readability and maintainability
[ hotfix ] [ migration ] fix anomaly warning when there be no anomaly warning
refactor BaseActivity and DetailActivity to improve code readability and maintainability to enhance maintainability and maintainability of the code
updated the Request creation method to include httpMethod and requestTemplate parameters to improve request handling by using the delegate ' s request template
updated LDAPCertStore to throw CertStoreException instead of " follow - scheme " and added name validation for LDAP referral information to enhance error handling and
refactor retain method in GatewayRSocket to use a dedicated retain method to improve code readability and maintainability by encapsulating retain logic
changed the class name from AdapterViewTest to ListViewTest and added a test for item click functionality in AdapterViewTest to improve clarity and ensure correct
[ hotfix ] [ test ] rename checkpointfailuremanageritcase to checkpointfailuremanageritcase
remove genericitemuiprovider that be no longer need .
added getter and setter for selectedobject in sipcomcommselectorbox . java
added JUnit ' s @ Isolated annotation to MetaInfConfigurationTest . java to mark the test as monitored to ensure that the test is
added serverConnector . setHost ( HTTP _ INFO . bindAddress ) to HttpServer . java to set the host to HTTP _ INFO to ensure the
updated the client registration logic to conditionally set access token and refresh token validity based on grant types to ensure compatibility with different grant types in Heart
added CloverInstrumentationFilter implementation to TestInterfaceAudienceAnnotations and modified conditional checks in SplitLogCounters to ensure proper handling of synthetic classes and improve
added a new constant for Smartmi Evaporative Humidifier in MiIoDevices . java and updated ReadmeHelper . java to
refactor plausibletobreak method to use a CalculationContext instead of a BlockStateInterface to improve code readability and maintainability by using a
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the setScrollRangeDelta method from other classes
added error logging for empty repositories in ClusterStackVersionResourceProvider , HostStackVersionResourceProvider , and ClusterStackVersionResourceProvider classes to improve error
modified the condition to check for missing values in the IntHashSet class to simplify the logic for determining missing values
added java . io . Serializable to RuleAdministratorImpl to enable serialization of RuleAdministrator instances
added support for wildcard wildcard origin in crossoriginfilter .
updated test files from " g3d / cubes . g3dj " to " g3d / knight . g3d
added error handling for invalid solidified blocks in Manager . java to improve robustness by preventing errors when updating the latest solidified blocks
hbase - 16464 htable . hello ( ) should return null if there be no valuetype .
added a method to check if an HTTP response is available before sending an error to improve error handling by preventing potential NullPointerExceptions
replaced ` jar . writeTo ( jar ) ` with ` ByteSource . wrap ( ) ` in ` ClassMirror . java ` and refactored
added a ` shareInternalLinkText ` TextView to the ` FileDetailSharingFragment ` class to display the share internal link text based on the file
updated the accuracy assertion to use Locale . ENGLISH in PredictionTest . java to ensure consistent formatting across different locales
updated the condition to check if the current day is not the day of the month in ModelZooTest . java to ensure that the day is
added hideInput ( ) method to AllAppsContainerView and implemented hideIme ( ) method in LauncherAllAppsContainerView to
use inmemoryeventstorageengine to configure embedded event store in test
refactor BsdFileStore to use a new getmntonname method in BsdNativeDispatcher to improve code readability and
add test case for issue # 1599 ( issue # 1599 )
updated the spawn command to include optional parameters for x , y , and z in the command to enhance command functionality by allowing dynamic positioning based on
replaced direct calls to ` getDesiredWidth ( ) ` with ` getContentAreaWidth ( ) ` and introduced a new method ` getContentAreaWidth (
fix graalcompilertest and hotspotcryptosubstitutiontest failure
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with Windows semantic
added failed checks for plugin class names in UpgradeCheckRegistry . java and reformatted the addColumn method in UpgradeCatalog280 . java to
refactor Environment class to improve code organization to enhance maintainability and readability of the code
added a BadApple annotation to RecoveryAfterSoftCommitTest . java to address SOLR - 7421 issues related to SOLR - 7421
added a check to ensure the home path does not end with a space before processing to avoid potential errors when the home name ends with an empty string
rename flag _ ignore _ hdmv _ dts _ stream to flag _ enable _ hdmv _ dts _ AUDIO _
replaced specific resource accessors with a wildcard import and updated resource accessor usage in LiquibaseEntityResolver and XMLChangeLogSAXParser to simplify resource
added imports for Security and set jdk . tls . disabledAlgorithms to an empty string in ComHostnameVerifier and JavaxHostnameVerifier to enable
updated the Immutable annotation in AbstractCxxDeps and removed the EMPTY constant in CxxLibraryDescription to streamline the dependency management and improve code clarity
rename ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualFullDirectory ` in ` StubJarTest . java
removed unnecessary whitespace in Int2ObjectHashMap . java to improve code readability and maintain consistency
updated folder name hint handling to use ` TextUtils . isEmpty ( ) ` instead of ` FeatureFlags . FOLDER _ NAME _ SUGGEST
added " uaa " parameter to the loadClientByClientId method calls in UaaResetPasswordServiceTests . java to ensure compatibility with client
changed method visibility from public to private for ` isEmptyOrWhitespace ` , ` isSpecialCaseOrUnknown ` , and ` isSpecialCaseOrUnknown
updated string concatenation in AtomicCounter , AtomicLongPosition , AtomicLongPosition , UnsafeBufferPosition , and UnsafeBufferPosition to include ' isClosed ' condition
updated MimetypeIconUtil . java file to improve icon handling to enhance user interface responsiveness
corrected the spelling of " supportsViewFor " to " supportsViewsFor " and " supportsViewsFor " in multiple view provider classes to
added a new test method ` negatedInstanceOf ` to ` UnnecessaryParenthesesTest ` and modified the condition in ` Un
added teleport functionality to the Location class to enhance the functionality of the Location class to support teleportation in the application
replaced ` Base64 . encode ` with ` Base64Utils . encodeToUrlSafeString ` in ` TokenKeyEndpoint ` and ` TokenKey
updated import statements in TranslatorManagerHelper . java to use ProjectComponent instead of onGenerate and added a report method in Statistics . java to improve
rename ` ContainerAnnotation ` to ` ContainedBy ` in ` ContainerAnnotation . java ` to clarify the purpose of the annotation for better clarity
added a null check for the ` getId ( ) ` parameter in ` ObjectIdentityImpl . java ` to ensure that the ` getId ( ) `
refactor ` setUpRevampedTweet ` and ` setUpRevampedTweet ` methods to improve handling of retweeted tweets to enhance
added conditional logic to verify the verified text based on the addon theme setting to enhance user experience by providing a clearer feedback based on the addon theme
refactor AbucoinsDigest to use a private instance variable instead of a static instance variable to improve encapsulation and enforce immutability
camel - 14297 : camel - mongo - add autowired property to configure mongo connection in camel - mongo component .
added a ` sourceIndex ` parameter to ` AttributeMapping ` and updated related classes to include it to enhance attribute mapping functionality by allowing dynamic indexing
improve error message when alter table / column statistics .
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to enable security checks for the user agent
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , EastAsianWidth , and EastAsianWidth classes to improve code organization and
do n ' t escape the email in the contact email if the email be escape .
do n ' t enrich engine ' s reflections with subsystems
updated the string concatenation in JoinModeller . java to include the number of features in the output to ensure accurate representation of feature information in the output
ggb - 271 add miss length check for ` ` < math ' ' command
[ hotfix ] [ kafka ] do n ' t log at debug level if log . debug ( ) be call
move ACTION _ SET _ PLAYBACK _ SPEED from ACTION _ SET _ PLAYBACK _ SPEED to PlaybackStateCompat .
added launch event and delay handling in various configuration handler classes to enhance functionality and maintainability of the flight configuration management
tika - 116 : fix the issue that the ascii name length be equal to the ascii _ chunk _ length .
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to temporarily disable the test due to compatibility with JDK
refactor lock file creation to use a dedicated method for better encapsulation to improve code readability and maintainability by encapsulating
updated version check to use " mention _ sync _ interval " instead of " version _ 5 _ 3 " for consistency and clarity to improve code read
added a check to return null if the username is the FEDERATION _ USER constant in AuthenticationManager . java to ensure that the authentication user
do n ' t use truffleobject in executemethodnode if it be an instance of truffleobject
replaced ` Collectors . toList ( ) ` with ` Collectors . toList ( ) ` in ` JakartaClientShutdownWithServerWebAppTest `
logbackvalve : do n ' t throw error if filter reply be deny .
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the code
removed import of org . apache . lucene . util . Version from CreateIndexTask . java to streamline code by eliminating unnecessary dependencies
added support for OracleDatabase and OracleDatabase in MissingPrimaryKeyChangeGenerator to ensure correct index schema is set based on the backing database type
added MetastoreException to execute and repair methods in MsckOperation and modified exception handling in MSCKRepairOnAcid to improve error
[ hotfix ] [ kafka ] add retryable committable to kafkacommitter . committransaction ( )
[ issue # 116 ] forwardmessagetodlqactivity should remove message receipt handle from the request group .
added a service list and modified the ` runWithCompose ` method in ` DockerComposeContainer ` to handle empty services gracefully to improve robustness
[ recaf ] use copyset ( ) instead of for ( ) in export and struct context decorator
removed unnecessary HTMLCleaner imports and replaced it with a direct xml return to simplify the code and improve readability
removed unnecessary check for AppsCustomizePagedView . DISABLE _ ALL _ APPS and simplified cell layout retrieval in Workspace . java to
change the data type of several fields in MeterRealtimeBodyDataDTO from int to double in MeterRealtimeBodyDataDTO . java
added a new file ` bug4150029 . java ` that implements a JApplet class with a temporary directory for testing to ensure that the
added a boolean field ` isSparkConfigUpdated ` and related getter and setter methods to ` HiveConf ` , and modified ` SparkSessionImpl
added a new method ` getLongPressIndicator ( ) ` to multiple classes and updated the ` Launchable ` class to include a long press indicator to
added checks for empty polys in WKBWriter . java and updated test cases in WKBWriterTest . java to ensure proper handling of empty
refactor UnflavoredBuildTarget and AbstractUnflavoredBuildTarget to use an interner to improve code readability and maintainability
added a new file ` MultiplyByMaxInt . java ` containing a class ` MultiplyByMaxInt ` that implements a multiplication algorithm
added functionality to hide the drawer indicator for the current file in OCFileListFragment to ensure the drawer indicator is enabled based on the current file
updated package structure and import statements in TestRAMDirectory . java to improve organization and clarity of the codebase
replaced FixedBitSet with BitSet in Automaton and Operations classes to simplify the code by using a more generic BitSet type
DMN : add no _ expression _ for _ name _ on _ node message to DMNevaluatorcompiler , a suggest by
replaced instances of ` @ ContainedBy ( AC . class ) ` with ` @ Repeatable ( DC . class ) ` in multiple test files
updated the message format in AbstractController . java to include a duration variable to improve readability and maintainability of the console output
updated the class reference in OpenMBeanAttributeInfoSupport to use baseClassName and added package access check to enhance security by ensuring correct package access and improve readability of class name handling
[ hotfix ] [ cassandra ] fix checkstyle violation in readresponseresolver and quorumresponsehandler
updated the calculation of freeSize in StoreDirect . java to correct the calculation of freeSize to ensure accurate memory allocation for better performance
do n ' t allow touch event to be disabled when touch up .
updated SslContextFactory instantiation to use SslContextFactory . Server instead of SslContextFactory . SslContextFactory to ensure compatibility with
replaced the PrivilegedSocket class with a direct instantiation of Socket to simplify the socket creation process by eliminating privileged actions
refactor InputTest class for improved readability to enhance maintainability and readability of the code
updated methods in AbsSwipeUpHandler and AbsSwipeUpHandler to accept a Runnable parameter for handling recent tasks appearing to improve responsiveness and ensure
refactor location marker handling in NearbyMapFragment to check for null curLatLng before adding it to improve robustness by avoiding potential NullPointerException
updated the ` removeSecret ` method to use ` clientDetailsService . retrieve ( clientId ) ` instead of ` client ` in ` ClientAdminEndpoints
updated SQL query setup and configuration initialization in SqlSourceBuilderTest . java to improve readability and maintainability of the code
( chore ) camel - activemq : fix race condition in message consumer
added a test method ` testKeys ` to ` SlidingGanttCategoryDatasetTest ` to validate the handling of unknown key exceptions to ensure
updated filtering logic in ShenyuTrieRuleListener and added null checks in ZookeeperSyncDataService to enhance robustness by preventing potential NullPointerException
make lightcontrol . controldir , spatialtolight , spatialtolight , spatialtolight , spatialtolight , spatialtolight , and spatial
added @ SuppressWarnings ( " UnusedAssignment " ) annotations and improved formatting in StdErrLog . java to enhance code readability and maintainability
added null check for ApplicationContext in HttpSessionEventPublisher to ensure that the context is not null to prevent potential NullPointerExceptions
[ flink - 24469 ] [ table - planner - blink ] do n ' t throw a semanticexception for create cq
[ hotfix ] [ table - common ] fix typo in flinkiotdbsink
add a counter for custom simplification in the canonicalization feature .
updated the parameter passed to the setImageDrawable method in ActivityListAdapter . java to ensure the correct context is used for the file icon rendering
updated ` indexOrConstraintName ` to use ` schema . getName ( ) ` instead of ` readIdentifierWithSchema ( schema . getName ( )
[ hotfix ] [ table - planner - blink ] fix bug in bigquerytablerowiterator . readwithtime ( )
added ` findViewWithTag ` method to ` ShadowView ` , ` ShadowViewGroup ` , and corresponding tests in ` ShadowView ` ,
updated enumeration type usage from ` Enumeration ` to ` Enumeration < String > ` across multiple Java files to ensure type safety and avoid potential ClassCastExceptions
updated import statements in IndexToolForDeleteBeforeRebuildIT , IndexTool , MetaDataClient , and MetaDataClient classes to improve code clarity and maintain
added JSON _ VALUE and JSON _ CREATOR strings and modified enum value retrieval in SpringBootDocBuildTemplate and SpringBootDocBuildTemplate to
svm : fix resource feature to work with jar file .
updated CUDA _ R _ 32F and CUDA _ R _ 32F constants in cuda . java and cuda . java
refactor ResourceLoader to use a FileFilter for file listing to improve readability and maintainability of the code
refactor getAttachedFace method to use SimpleAttachableMaterialData instead of RedstoneTorch to improve code readability and maintainability by
added support for VARBINARY data type in RelToStageConverter to enhance data handling for VARBINARY data types
removed the import of DateHelper from NoteAdapter . java to streamline the code by eliminating unnecessary dependencies
refactor backup load success and error handling in the player to improve user feedback by providing feedback when a backup fails
ggb - 269 fix the simple panel ' s position to be relative .
refactor file creation to use TempDirectory . create ( ) . toFile ( ) . toFile ( ) instead of path . create ( )
replaced ` getStackForThread ( ) . offer ( ) ` with ` getStackForThread ( ) . removeFirst ( ) ` in ` StackBasedSecurity
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to improve clarity of the rule ' s purpose
fix integerequalsnippetizer to work with xor and xor
removed the static final Type STRING _ ARRAY constant from TypeFactory . java to simplify the code and improve maintainability
refactor IME hiding logic to use a dedicated method for better encapsulation to improve code readability and maintainability by centralizing the
add blockstatecontainer . setbits ( ) method to fix network density issue .
updated assertions in ` TimelineMetricCacheSizingTest . java ` and modified cache management in ` TimelineMetricCacheCacheProvider . java `
add an optimization to the gl _ max _ texture _ size to the playerusagesnooper .
[ java ] call trystoplogrecording ( ) instead of trystoplogrecording ( ) in consensusmoduleagent . java
added a conditional check to reset startPosn based on the transform state to ensure startPosn is reset when the transform is enabled
replaced ` StarTreeUtils . isStarTreeDisabled ( ) ` with ` _ queryContext . isSkipStarTree ( ) ` across multiple classes
added a lockNearbyView flag and modified the refreshView method to conditionally hide the progress bar based on its state to improve user experience by
add ` maptransformer . of ( map ) ` and ` maptransformer . of ( map ) ` method to maptransformer
refactor EmeddedObjects and EmbeddedObjects classes to improve code readability and maintainability
added support for retrieving loaded launcher widget information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance widget information retrieval and improve user experience by providing
replaced ` ChangeEvent ` with ` EventObject ` in ` StageSelector . java ` and ` StageAction . java ` to standardize event handling
added callingUid , callingPid , and callingPid fields to ShadowBinder and corresponding test cases in ShadowBinderTest to enhance functionality for managing calling identifiers
refactor ` ExpectationFailure ` to use ` com . google . common . base . Throwable ` instead of ` com . google . auto .
removed a warning log statement for no support for deserializing messages in BitcoinSerializer . java to simplify the code by eliminating unnecessary logging
fix a bug in imagereplacedelement . getdimensions ( ) that cause an overflow in the imagereplacedelement .
added handling for &# 9 and &# 32 characters in MarkdownNodeRenderer , MarkdownWriter , and SpecMarkdownRenderer classes to ensure proper formatting of
added a mnemonic button to the alert dialog and refactored password setting logic into a separate method to improve code readability and maintainability by en
refactor mapping address and UNMAP _ BUFFER methods to use a class - level class for reflection to improve code readability and maintainability by
updated method access modifiers from public to default in AbstractAssert _ describedAs _ printed _ describedAs _ printed _ to _ console _ Test . java
added new keytab options for Slider AM keytab in LlapOptionsProcessor . java to enhance functionality for managing keytab configurations in the
updated ` tearOutGraphViewContainer ` method to accept a ` JFrame ownerFrame ` parameter and modified animation handling in ` ExtractionModelEditor `
added synchronization and validation for workspace loading in LauncherModel . java to ensure proper handling of loading tasks and prevent potential memory leaks
[ hotfix ] [ table - common ] make isfinished a final field in nodepathscountoperator .
added a new parameter ` messageType ` and ` checkValid ` to the ` IssueInterface ` class and updated the ` ValidationReport ` class to
added a method to safe the provider name in the RSAClientKeyExchange class to improve error handling and provide clearer feedback on the availability of the
rename ` ` dynamic ' ' to ` ` flink ' ' for consistency
change log level from WARNING to OFF in CCJSqlParserUtil . java to improve logging behavior for better user experience
removed unnecessary indent output from AggregateLifeCycle . java to streamline the output for better readability and maintainability
changed the visibility of BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public to allow external access to the BIT
removed the @ Ignore annotation from CovariantOverrideTest . java to clean up the test code and improve readability
refactor ` curly ` method to use ` qtype ` instead of ` cmin ` for better clarity to improve code readability and maintain
camel - 14265 : camel - reload - strategy - reload - strategy - add loadroutesdefinition ( ) method to make it easy to
added space minimum and maximum settings for the X - axis in ScatterChart . java to ensure proper handling of space values in the chart
updated string formatting in ExpressionStringBuilder . java for consistency to improve readability and maintainability of the code
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` , ` BaseState ` , and ` BaseState `
added a check to throw an exception for missing UTF8 key in CheckEncodingPropertiesFile . java to ensure that a valid UTF8 key is present
updated TestReproduceMessage and LuceneTestCase to use MixWithSuiteName instead of RandomizedRunner in TestReproduceMessage . java to
added a new UI event for long - pressing the AllApps item in StatsLogManager and integrated it in ItemLongClickListener to enhance user
added null check for log in StoreWAL . java and created a new test class Issue112Test . java to ensure proper handling of null log
added a condition to check if the sector preset is null and updated the SectorPreset class to include the showSectorLandInfo rule to ensure
updated generics in multiple Java files to use generics for type safety to enhance type safety and avoid unchecked cast warnings
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
updated the ` buildNearbyRandom ` method to accept a boolean parameter for the ` randomSelection ` parameter and added validation for distribution settings to enhance
remove remover _ service and use cachebuilder instead of create a new one
change the visibility of the layers container in NewLayerPage . java from DataStoreInfo to createSQLViewContainer and WMSLayerImportContainer to
initialize the ` Availability _ availability ` variable to ` Availability . UNAVAILABLE ` to ensure proper initialization of the ` Availability _ availability `
added synchronization checks and logging for Pbft commit messages in multiple classes to ensure proper processing of Pbft commit messages based on peer state
chore : update gapic - generator - java version to 2.1 . 0 and update gax - java version to 2.10 . 0 ( #
changed the type of ` _ freeSpaceReclaimDisable ` from ` boolean ` to ` int ` and modified the ` freeSpaceReclaimQ
changed access modifiers of KDC _ OPT _ PROXIABLE and KDC _ OPT _ FORWARDABLE constants from public to private
added a null assignment for the writer in JsonWriter to ensure proper initialization of the writer to avoid potential NullPointerExceptions
reformatted code for consistency and clarity in ProfilePager . java to improve code readability and maintainability
renamed the method ` paintBackground ` to ` paintComponentBackground ` in ` Slider . java ` to improve clarity and consistency in method naming
added a method ` valueFromClassConstant ` to retrieve a value from a class constant to ensure proper handling of object value constant values in the configuration
added logging for initialization failures in KafkaService to improve error handling and logging for service initialization failures
updated ` RESOURCES _ TO _ ALWAYS _ ACQUIRE ` to use ` ImmutableSet . of ( " usr / share / zoneinfo
[ java ] add ' auto - create channels ' option to the message bus to allow the ' auto - create channels ' option for the message bus
added keywords handling in HTMLDocument . java and created a test for index keywords in TestDemo . java to ensure correct handling of index keywords in the HTML
updated the SDK version check from S to R in FileUploader . java to ensure compatibility with the latest SDK version
added a conditional statement to the _ addresses list initialization in MemcachedSessionDataMapFactory . java to ensure that the addresses list is only added if the
replaced the instantiation of ` new CorrespondenceSubclassToFactoryCall ( ) ` with ` CorrespondenceSubclassToFactoryCall . class ` to
refactor Builder class to improve code readability to enhance maintainability and facilitate future updates
updated URL pattern and exception handling in ISBNtoBibTeXFetcher . java to use ebook . de / isbn2
do n ' t throw exception if the language context be not active
added a null check for the text before firing data change events to prevent potential NullPointerExceptions during data change events
added langpack and simplifiedmodel field to SentimentModel and updated SentimentModel to use RNNUtils instead of static methods to improve
added a trim ( ) method to the SuffixURLFilter class to ensure the line is trimmed before processing
added a check for inGodmode in HandlerCombatInvocationsNotify . java to return early if the player is in a god mode
refactored popup registration and unregistering logic in CheckboxCreationDialogW and TextInputDialogW to improve code clarity and ensure proper handling of popup
updated constructor parameters in LinkedHashMapCache and BoundedLinkedHashMap to remove unnecessary parameters to improve code readability and maintainability
removed redundant calls to close ( ) in ChannelEndPoint . java to improve code readability and maintainability
added null checks for keyIndex and refactored KeyIndexBuilder instantiations across multiple files to simplify key index handling and improve code clarity
added Locale . ROOT to exception handling in DirectUpdateHandler2 . java to ensure consistent error reporting across different locales
add a storecheckguard option to the tool , so we can use it .
make BciBlockMapping more robust to exceptiondispatchblock . handler . startbci ( ) .
bugfix : add getclassificationdisagationdisagation ( ) method to abstractcloud and dbcloud
replaced ` BuildTarget . copyOf ( buildTarget ) ` with direct assignment in multiple Java files to simplify the code and improve readability by eliminating unnecessary
refactor SqlRunner class to improve code readability to enhance maintainability and facilitate future updates
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` FileStorage
replaced ` knownApis ` with ` knownSdks ` and updated related methods in ` DefaultSdkProvider ` and ` RobolectricTestRunner
[ bitsquare ] use confidenceprogressindicator instead of progressindicator in create offer view
updated USER _ AGENT header check from " Cling / " to " UMS / " in multiple files to ensure compatibility with the latest C
refactored iteratebpt ( ) and iteratebpt ( ) to take a forceiterate flag to improve performance .
added views for MESSAGE and NOFLEX in CrowdfundingChatAdapter . java to improve clarity and functionality of the onCreateViewHolder method
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and MacOSXLibrary . java ` to
updated regex patterns in EnglishGrammaticalRelations . java for better accuracy to improve matching accuracy in relation matching
updated the ` insert ` method to remove the ` BufferedImage ` parameter and modified image handling logic in ` TexturePacker . java ` to simplify the
refactor the ` getVisitors ( ) ` method in ` RefactorModule ` to use a ` apply ( Refactor < S , T
added methods ` getChildByName ` and ` getChildByNameRecursive ` to ` Xml ` class for retrieving child elements by their names to enhance functionality by allowing
set the Content - Charset header to " UTF - 8 " in HttpSolrServer . java and its corresponding test in BasicHttpSolrServerTest .
added SystemUiControllerFlags annotation and updated UI state handling in TaskThumbnailView , AllAppsTransitionController , and SystemUiController classes to improve
removed the private ClientConfigurationService variable from IntrospectingTokenService . java to clean up the code and improve maintainability
updated the error message format in HiveRecordSet . java to include offset and length details to improve clarity of error messages for better debugging
removed the ownerId byte array from NodeEntry class to streamline the code by eliminating unnecessary variables
corrected the spelling of " BackupSnapshotAferTakingSnapshot " to " BackupSnapshotAfterTakingSnapshot " in the configuration
added score calculation to the merge method in TextFragment . java to ensure score does not exceed the maximum score
removed the private Digester field from Md4PasswordEncoder . java to clean up the code and improve readability
added validation for maximumUnimprovedStepCount in UnimprovedStepCountFinish . java to ensure that maximumUnimprovedStep
added a check for empty editors in EditGcodeFile . java to prevent processing when the currently open editors are empty
replaced direct calls to ` verify ` with ` Mockito . verify ` in ` BDDMockito . java ` and added new test cases in `
replaced ` currentThread ( ) . getContextClassLoader ( ) ` with ` PathScanner . class . getClassLoader ( ) ` in ` PathScanner . java `
updated the ` sayHi2 ` method to handle cases where ` CodeFirstPojoClientIntf ` is not an instance of ` CodeFirstPojo
[ hotfix ] [ test ] add log to abstractsplitbrainprotectiontest . testsplitbrainprotectiontest
added null checks for logoutConfigurer in DefaultLoginPageConfigurer and ServerHttpSecurity to ensure proper handling of logout configurations and prevent potential NullPointerExceptions
[ cagiac ] use degree ( 0 ) instead of degree ( 0 ) instead of degree ( 0 )
added methods to follow logs in DockerComposeContainer and created a new DockerComposeLogConsumerTest class to enhance logging capabilities by allowing users to follow logs
changed the parameter type of the testMapping method from Function < ResultSetMapping , Object > to Class < ? > in StandardJavaTypeMappingTest . java
removed unused import statements from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide an instance of ` Supplier < T , E > `
replaced a break statement with a return statement in ConsoleActivity . java to improve code readability and maintainability
camel - 14254 : camel - platform - http : / / text - content - type : / / text - http : / / text
added pathWithPlatformSeparators method to MorePaths and modified path resolution in CopyStep and AarWithLibsIntegrationTest to support platform - specific
added a null check for authorizationContext . getParams ( ) before processing parameters to avoid potential NullPointerExceptions when params are not initialized
replaced ` load ` method with ` throwExceptionIfFail ( ) ` and added a ` throwExceptionIfFail ( ) ` method to improve error
updated SDK version from " 4611349 " to " 4514284 " in SdkConfig . java and added tests in ShadowText
queuetransactionlog : add a transaction log key to queuetransactionlog .
added a new boolean property ` enableSqlWithoutProfile ` to ` JdbcEnvironmentProperties ` and updated ` JdbcEnvironmentRepository ` and ` JdbcEnvironmentRepository
added a try - finally block around the write operation in ConnectHandler . java to ensure proper resource management and prevent potential memory leaks
fix compile error in modloadingstage . createregistry ( )
updated the date formatting method in DateUtils to use the calendar variable instead of the date object to ensure accurate date formatting based on the current calendar
refactor thread state retrieval methods in CachedThreadStatesGaugeSet and ThreadStatesGaugeSet to utilize a new STACK _ TRACE _ DEPTH
added a ` prevTlogOnPrecommit ` field and modified sleep duration in ` LeaderTragicEventTest ` to improve commit handling and
move fastasyncworldedit - p2 - v6 to fastasyncworldedit - 1.9 . 17
refactor file existence check and error handling in SegmentGeneratorConfig . java to improve robustness by ensuring the directory exists before proceeding
added a new method ` calculateNormalVector ` to ` ObjUtils ` and refactored normal vector calculation in ` TriangulationHelper `
updated the parameter name from ' principal ' to ' identityZoneId ' in JdbcAuditService . java to improve clarity and maintainability of the code
refactor SpanCollector class to improve code structure to enhance maintainability and readability of the code
added a null check for SESSION _ MANAGER before accessing its session info to prevent potential NullPointerExceptions during session retrieval
refactor TransactionIsolationLevel class to improve code readability to enhance maintainability and facilitate future updates
corrected the spelling of " printLVgroups " to " printLogicalVolumeGroups " in OshiController . java to improve code readability
added thread name setting for forwarding to the remote URL in TestSession . java to enhance debugging capabilities by providing context on the remote URL
refactor CookieManager class to improve code readability to enhance maintainability and facilitate future updates
replaced the creation of an ArrayList with a return statement to simplify the code and improve readability
added a new OverviewToAllAppsTouchController to the list to enhance the user experience by providing an overview to all apps touch controllers
changed the return type of ` scaleHotseatWithWorkspace ` method from ` boolean ` to ` float [ ] getHotseatScaleAndTranslation `
added a check for the JUnitRule class in DefaultStackTraceCleaner . java and created a new test in StackTraceFilterTest . java to ensure
replaced instances of ` hasArray ( ) ` with ` array ( ) ` and ` array ( ) ` in ` MappedResizeableBuffer .
added a private ` BalanceListener ` instance and updated its usage in the ` DepositListItem ` class to ensure the balance listener is properly managed and
added conditional logic to set color values based on edge mode in RealisticRenderer . java to ensure correct color conversion based on edge modes
added a null check for httpClientResponse in HttpClientBeanPostProcessor . java to avoid potential NullPointerExceptions during execution
remove unused patternutil . matchresult ( ) from gl200protocoldecoder
updated playback event timing logic in FullDetailsActivity . java to include last playback time checks to improve user experience by providing more detailed time tracking during episode
refactor SpanishXMLTreeReader to use a new method for checking if a node has a lemma to improve code readability and maintainability by en
added logic to clear language and iso values in InstallItem . java to ensure proper handling of empty input values
updated the handling of the ` overrideScheme ` variable in ` ReactiveLoadBalancerClientFilter ` to conditionally override the scheme based on the instance ' s
[ java ] fix typo in defaultmessagestore . java
[ hotfix ] [ runtime ] fix checkstyle violation in nativeimagedebuginfoprovider
replaced the implementation of ` Correspondence ` with ` Correspondence . from ` in ` ShadowBackupManagerTest . java ` to simplify the
rename ` isUSSupported ` and ` isNonUSSupported ` methods to ` isNonENLangSupported ` and ` isNonENLangSupported
removed null check for redeemData in LocalTransactionSigner . java to simplify the condition for better readability and maintainability
add a forge client to render the terrain . png file for the forge client .
added a return statement in TxCacheDB . java to ensure proper execution flow
updated import statements from ` com . sun . xml . internal . ws ` to ` jdk . internal . org . objectweb . asm `
refactor FastDictionary class for improved performance to enhance performance and maintainability of the code
let ioconnection . close ( ) be call on close ( ) instead of closeconnection ( )
updated FlightEvent instances to include new values for various event types in FlightEventsTest . java to ensure accurate tracking of event types for improved functionality
update com . google . vendor . grpc . v1p26p0 to com . google . vendor . grpc . v1p26p
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure the correct namespace declaration is added
add displayable course id to instructor feedback result page
added a short rule to the DefaultPasswordValidator to ensure that alphabetic and numeric sequence rules are only added if the password length is less than 20
[ java ] add ` ` capturescreenscreenshottostring ' ' command for seleniumdriverresourcehandler
removed the JUnit Test annotation from ProxyClassSerializationTest . java to streamline the test execution by eliminating unnecessary dependencies
updated the ` scale ` argument format in ` DLNAMediaInfo . java ` to use ` format = bgr24 ` instead of `
remove jdk . graal . compiler . phases . speculativeguardmovephase
added alias check for AUTHENTICATION _ MANAGER in AuthenticationManagerBeanDefinitionParser and created a test for overriding behavior to ensure proper
added handling for ` forwarded _ host ` and ` forwarded _ server ` fields in ` ForwardedRequestCustomizer ` to ensure proper handling of
added a call to setLength ( 0 ) in ConsoleReader . java to reset the buffer size to avoid potential memory leaks
changed access modifiers of ` allowedRoles ` , ` disallowedRoles ` , and ` disallowedRoles ` from private to protected to allow subclasses to
updated the OpenIDE - Module - Specification version from 1.11 . 0 to 1.11 . 0 across multiple files to ensure compatibility with the
hbase - 16464 add default wrap size to x509util , hbase . server . netty . tls . wrapsize and hbase . server .
refactor multiple Java classes including CookieStore , Inet4Address , Inet6Address , Inet4Address , Inet6Address , Inet4Address ,
refactor FixedLengthTokenizerTests to use JUnit static imports and add unit tests for tokenization to improve test structure and ensure correct exception handling
updated the protocol binding logic in OpenSamlAuthenticationRequestFactory to use a configurable value instead of a hardcoded value to improve flexibility in handling SAML
added AttachedSurfaceControl import and modified transaction handling in DepthController . java to improve responsiveness by ensuring the root surface control is applied
updated version check from " main " to " 2.0 . x " in AsciidoctorConventions . java to ensure compatibility with the latest version
updated action from WRITE to CREATE in AccessController . java to ensure proper handling of bulk load actions in the user interface
updated the sublist size calculation in TsFileManagement and modified measurement schemas in MergeTaskTest to ensure the correct list size is used for
camel - 14297 : camel - file - > file - > file - > file - > file in genericfileconverter , add test
added a ` build ` method to ` DefaultShardManagerBuilder ` and modified the ` build ` method in ` ShardManager ` to conditionally login
removed unnecessary whitespace in DeleteGlobalRef method call to improve code readability and maintain consistency
updated the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to clarify the purpose of the
added a conditional check for marked completion before processing the response to ensure that the response is only terminated if the response is marked as marked
updated the condition in FeedbackResponseCommentsLogic . java to include a check for user student to ensure correct handling of comments based on user
added security checks for profile linking and unc or device path in BMPImageReader . java to ensure proper handling of profile profiles based on user
updated location calculations in ClassicPlotManager . java to adjust positioning to ensure correct positioning of the plot world in the plot world
pmd : do n ' t wait for file in the package , wait for the file to be check before check the file .
refactor grid presenter initialization to use a dedicated setGridSizes method to improve code readability and maintainability by reducing duplication
changed return values from false to true in ContributionsListFragment . java to ensure consistent behavior across the application
added a test skip range for DISTINCT prefix filtering in DistinctPrefixFilterIT . java and updated filter logic in BaseResultIterators
added a new test method ` testAcrobatCheckBoxGroupProperties ` in ` PDButtonTest . java ` to verify the behavior of
added a method ` getFileLastModified ` to retrieve the last modified timestamp of a file to provide a way to retrieve the last modified timestamp of a file
added a condition to check for the " metaTable " property in the AVRO file format check to ensure that the correct AVRO file format is
show a warning if you choose a currency other than the country ' s default currency
changed exception handling from IOException to Throwable in WriteFlusher . java to catch all Throwables instead of just IOException
added a boolean variable ` mStartedEnterAnimation ` and modified the animation notification logic in ` IconRecentsView . java ` to improve animation handling
added a new public String field ` activeKeyId ` to the ` UaaConfiguration ` class to provide access to the active key ID for better
updated action descriptions from " Sends a mail " to " Send attachments " and updated method calls accordingly to improve clarity and consistency in the action
changed the ` isActive ` variable from ` boolean ` to ` volatile boolean ` in ` SocketServer . java ` to ensure that the ` isActive `
updated method names from ` isDesc ( ) ` to ` isAsc ( ) ` in ` OrderByExpressionContext ` and ` SelectionPartiallyOrdered
[ geot - 4252 ] avoid cast to string . tostring ( ) when build implicit equation .
added a condition to check if the app name is equal to " ownCloud " in DisplayUtils . java to ensure that the app name matches the
hbase - 16234 masterfilesystem . getrootdir ( ) should check permission before set rootdir . perms .
updated method calls from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange ` and ` JavaxServletWebExchange ` to
refactor Instant class for improved performance to enhance performance and maintainability of the code
updated the return type of ` getStateFormat ` methods from ` int ` to ` String ` in ` CollectionsHandler . java ` and ` AbstractFull
updated logging statements in CentralAuthenticationServiceImpl . java for consistency and clarity to improve readability and maintainability of the code
added IllegalArgumentException to the exception check in PDICCBased . java to ensure proper handling of specific exception types
corrected spacing in the conditional statement in AbstractFileResourceSet . java to improve code readability and maintain consistency
added a pathTranslator parameter to PluginParameterExpressionEvaluator and updated its constructor to accept it to enhance flexibility in managing file paths in plugin configurations
rename ByteStringCoder to ProtobufCoderRegistrar and update its package structure to improve code organization and organization for protobuf coder registration
updated JpaQueryParsingToken initialization to include a boolean parameter to ensure proper handling of signed numeric literals in query parsing
updated the ` generateLaunchLugFromRASAeroRailGuide ` method to include an additional parameter for parent length and instance separation to enhance flexibility
removed the ` getNonceFactory ` method from ` BitmexStreamingExchange ` to simplify the code by eliminating unnecessary method implementation
updated logging statements to use placeholders instead of string concatenation to improve readability and maintainability of log messages
[ java ] use default timer interval instead of configuration . mtutimeoutns ( )
changed the default value of ` initializeLoadedClasses ` from true to false in ` FastClasspathScanner . java ` to disable the initialization of loaded classes
added a call to grabFocus ( ) in FullTextSearchPanel . java to ensure the search field focus is properly focused for improved user experience
refactor NioParams initialization to use a local variable for clarity to improve readability and maintainability of the code
updated assertion message in StatementTest . java to clarify the purpose of the getDouble method to improve readability and maintainability of the test
updated assertions in TestSolrConfigHandler to use formatted strings instead of formatted strings to improve readability and maintainability of the code
replaced ` HttpMethod ` with ` ServerHttpRequest ` and ` ServerWebExchange ` in ` CsrfWebFilterTests . java ` to improve test
updated density parsing logic in FilterResourcesStep . java to use ` fromDensity ` instead of ` density . toString ( ) ` to improve accuracy in
added a new method ` buttonUIID ` and a ` elementPrefix ` to retrieve the UIID based on the component ' s class type to
removed densityDpi requirement from the rotation check in RecentsAnimationDeviceState . java to simplify the code by eliminating unnecessary dependencies
added two new Java files , TestCloneArrayWithDifferentLengthConstness . java , and TestArrayCopyWithLargeObjectAlignment . java , to
added import for LuceneTestCase . AwaitsFix and annotated ReplicationFactorTest . java to mark the test as awaitsFix as a known issue
fixed - rexecutorservice . schedule ( ) method do n ' t throw npe if there be no scheduled task
refactor credentials checking logic in FileDownloader and FileUploader classes to simplify the logic to improve code readability and maintainability
added null check for the scanner before closing it in Compactor . java to prevent potential NullPointerExceptions during resource cleanup
[ java ] use getordefault ( ) instead of get ( ) to avoid npe .
added a nonce parameter to the TokenMvcMockTests to validate the validity of the token ' s nonce in the test
refactor Chart - related classes to improve code organization to enhance maintainability and readability of the codebase
added width and height settings for formLayeredPane in Form . java to ensure proper layout behavior for UI components
added a maxY method to the BrowserContentPane class to calculate the maximum Y - coordinate based on the owner ' s height to ensure correct height
added a check for the connected state before closing the database in SharedLoginDialogView and modified the openDatabase method in SharedDatabaseLoginDialogViewModel to
updated Docker command handling to use Platform . DOCKER _ COMMAND instead of a hardcoded value to improve clarity and maintainability of the
added null check for the input stream before initializing parameters in TestIsartorValidationFromClasspath . java to avoid potential NullPointerExceptions when the input
added a color attribute to the drawLeaveBehind method in TaskbarView , CellLayout , and PreviewBackground classes to enhance the visual
add a check to verify that the Studio plugin do not work correctly with android Studio
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 139 : do n '
added methods to manage module persistence settings in StartArgs . java to ensure proper handling of module persistence changes in the application
updated argument length check from ` args . length ` to ` args . length > = 1 ` in ` GeminiMarketDataService . java ` to
replaced HashSet with LinkedHashSet for the questions map in VerifyPasswordResetRequestAction . java to ensure consistent ordering of questions in the flow scope
add a unit test for the catalina realm and add a test for it
removed specific jsp exclusions from AuthCheckFilter . java to improve clarity and maintainability of the code
refactored runnable execution logic to use a separate method for better readability and maintainability to improve code clarity and maintainability by encaps
updated method signatures in AbstractCommandRunner , AuditCommandRunner , CommandRunner , and CommandRunner to use String . . args instead of String [ ]
replaced direct character reading with integer reading in XMLParser . java to improve performance by avoiding unnecessary type casting
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to ensure the text appears on
added pivot positions for the arrow in DeepShortcutsContainer . java to improve the visual appearance of the arrow when the icon is above the icon
do n ' t print stacktraces to stderr in case of interrupted exception
modified the ` updateThumbnail ` method to include a ` refreshView ` parameter for better control over thumbnail updates based on gesture state to enhance user experience
pdfbox - 4071 : use class . getname ( ) instead of org . apache . pdfbox . extractttffonts . class
updated InternetAddress instantiation to include an additional boolean parameter and added error handling for invalid hostnames in EmailFormatSpecifier and HostnameFormatSpecifier to improve
updated references from ` DrawerActivity . this ` to ` this ` across multiple activities to simplify code by removing unnecessary dependency on ` DrawerActivity
refactor ` MatchEntireSegmentDocIdSetBlock ` , ` MatchEntireSegmentDocIdSetBlock ` , ` SizeBased
refactor promptToOpenFile method to accept an array of file names instead of a single file name to improve code readability and maintainability by
updated widget count calculations and refactored related methods in AppsCustomizePagedView and AppsCustomizeTabHost classes to improve code
added handling for active instances and transformed instances in FlightConfiguration . java to enhance functionality for managing active instances and improve coordinate calculations
use direct : name instead of seda in message history test
updated DateTimeFormatter initialization to include Locale . ROOT to ensure consistent date formatting across different locales
[ dspace ] filter out non - visible metadata when convert to dspace .
added a new test method ` testMissingRequired ( ) ` to ` TestStarTreeConfig . java ` to verify that missing dimension and metric names
camel - 14284 : camel - spring - boot : add support for ` ` recipientlist ' ' element in ` ` recipientlist ' '
refactor InlineLayoutBox and HoverListener to use a loop for the parent Box in InlineLayoutBox and improve repaint handling in HoverListener
replaced DetectAuthenticationMethodOperation with OperationsService and refactored service handling in AuthenticatorActivity to improve clarity and maintainability of the authentication process
