fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49137
refactor BasicAuthPlugin to utilize a new method for handling prompt headers to improve code readability and maintainability by reducing duplication
removed the call to RecordDescriptor . msgLengthOffset in ManyToOneRingBuffer . java to simplify the code by directly accessing the message length
cloudstack - 6162 : fix npe when update vm / cpu / ram overcommit ratio
added an ` flags ` field and a constructor to ` ShadowPaint ` and updated tests in ` PaintTest ` to support anti - alias detection and
updated the title of MassSetFieldsDialog to use a localized string to improve user experience by providing more descriptive titles
do n ' t fail the test if there be no bug
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 390 . fix issue with
added a new interface ` RemoteInputListener ` and modified the constructor of ` RemoteInput ` to handle connection and disconnect events to improve the handling of
reformatted conditional statements in OrcEncodedDataReader . java for better readability to improve code clarity and maintainability
added a check for enabled devices in the filter condition to ensure that only enabled devices are processed in HomeConnectBridgeHandler
add null check before call removeall and addall to avoid npe
updated assertions to use ` matches ( "           
added JSON serialization for Hive DAG information in TezTask . java to enhance debugging capabilities by providing detailed dag information
added methods to retrieve header and tag time in ComputedSummary and HprofHeap classes to improve clarity and accuracy of time representation in the heap dump
replaced the RxJava2Tasks method with CommonsApplication ' s getUploadCount method and removed the RxJava2Tasks class to streamline
removed unnecessary conditional checks in MVTable . java to simplify code logic for better readability and maintainability
[ issue # 6063 ] fix max offset check for commitlog ( # 6063 )
added logging for folder state changes when the associated folder is not open to improve debugging by providing clearer insights into folder state changes
add test to show that pgproperty name be sort in ascending order
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN to the Common class to provide a clear
changed the parameter type of ` supportsDrop ` and ` getUninstallTarget ` methods from ` Object ` to ` ItemInfo ` to improve type safety
updated error message assertion in RequestBuilderTest to use isIn instead of hasMessage to improve clarity and accuracy of error message validation
refactor NearbyActivity to replace TAG _ RETAINED _ FRAGMENT with TAG _ RETAINED _ MAP _ FRAGMENT
bugfix : flatprofilecontainerfree use profilesessionstatus instead of profilestatus
added a boolean field ` sendZeroAnomalyEmail ` to the ` EmailConfiguration ` class and updated related methods in ` EmailReportJob `
[ hotfix ] [ kafka ] fix npe in flinkkafkaconsumerbase
added methods to retrieve user and geofence from the database to enhance functionality by allowing retrieval of user and geofence data
added a constructor to BlockingResponseListener that accepts a maximum length parameter to enhance flexibility in handling response lengths
[ java ] remove redundant code in mcastserviceimpl . getmemberbroadcastsreceived ( ) .
[ iotdb - 4063 ] fix resource leak in snapshot file system
updated URL formatting in assertions in LoginSAMLAuthenticationFailureHandlerTest . java to ensure consistency in URL formatting for better readability
[ hotfix ] [ test ] fix typo in configmetadataprovidertest . java
updated imports and refactored the updateNoteReminder method to use a reference to this variable to improve code clarity and ensure proper reference to the
replaced an anonymous inner class ` AcceptAll ` with a private static inner class ` AcceptAllFilter ` in ` Files ` and updated directory stream
refactor JdbcTestDataSet class for improved readability to enhance maintainability and clarity of the codebase
make sure that classnotfoundexception be throw when classnotfoundexception be throw in hotspotjvmcihelper .
added DockerImageName utility class and validation logic in GenericContainer . java to improve validation of Docker image name format
updated the login error message from " login _ failed _ username " and " login _ failed _ password " to " login _ failed _ wrong _
setautofocus ( ` ` autofocus ' ' ) to autofocus on form
added SAML configuration tests for different identity zones in SamlIDPRefreshMockMvcTests . java to ensure proper handling of SAML configurations for different
added checks for non - empty and non - digit lists in ComparableVersion . java and updated test cases in ComparableVersionTest . java to ensure proper
updated layout settings in mmm Sheet . java and added padding and margin properties in UIManager . java to ensure proper layout rendering based on user - defined
updated imports and package declarations for ParallelUniverse and ParallelUniverseTest to reflect the new internal structure to improve organization and maintainability of the codebase
updated method type handling in LocalCacheFactory and NodeFactory to use a new FACTORY _ CALL variable to improve code clarity and maintainability by
changed the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in the FrillsAndFills class to
added functionality to draw self loops and bezier curves in ProcessingPreview . java to enhance visual representation of the graph ' s self - loop
updated ALLOW _ TVM _ SOLIDITY _ 0 _ 10 to ALLOW _ TVM _ SOLIDITY _ 059
renamed the method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve clarity and consistency in method naming
added a line to set the drag handle indicator ' s translation Y to ensure the drag handle indicator is displayed correctly during transitions
removed logging statements for collection , community , and item in multiple viewer classes to clean up unnecessary log output for better clarity and maintainability
updated the description of the ` pushPredicatesDown ` configuration in ` HiveConf . java ` to clarify conditions for pushing down filters in the operator
added an assumption to the ScanningAppProviderRuntimeUpdatesTest to skip the test on non - OSX build server to ensure the test does not
added Maven bundles for Jetty ALPN client in TestJettyOSGiAnnotationParser . java and conditionally diagnose bundles based on
fix for act - 141 : update process instance lock time in transactional mode
refactor Transaction class to improve code structure to enhance maintainability and readability of the code
replaced ` @ AddToRuleKey ` with ` @ ExcludeFromRuleKey ` and removed ` @ CustomFieldBehavior ` from ` Genrule
simonstewart : fix the issue with the firefox custom profile launcher on window
phoenix - 648 prevent concurrentmodificationexception in ptableimpl ( addendum )
[ hotfix ] fix compiler warning in hadoop tuple unwrapping iterator
added logic to handle client version and view types in MetaDataEndpointImpl . java to ensure proper metadata handling for different client versions and view types
fix issue where instructor do n ' t have a valid email for a course
updated import statement for TestCellReference in AllXSSFTests . java to ensure proper usage of TestCellReference from the Apache POI library
added block hardness check to the physic lens in the LensPiston class to ensure the block ' s hardness
added a new file LongPointerPressTest3049 . java to implement a network error handling test to verify the behavior of multi - threaded connections
do not report graph too big exception for inlining in partialevaluator .
refactor code to remove redundant null checks in BaseBuilder and XMLConfigBuilder classes to improve code readability and maintainability
updated conditional logic in ListBlockParser and added a new test for deeply indented lists in SpecialInputTest to ensure correct rendering of deeply indented
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to use it to encapsulate and simplify the assertion logic for
ignore webflux test when https : / / github . com / spring - cloud - gateway / issues / 1070
remove ` string . nativestring ` from ` goog . testing . testcaselogger . savemessage ` method
[ hotfix ] fix checkstyle violation in routestartuporderlasttest
added a condition to check if the video format is a video before executing web subtitles to ensure web subtitles are only processed for video formats
added ` jdk . tls . disabledAlgorithms ` property to ` ComHostnameVerifier ` and ` JavaxHostnameVerifier ` classes to disable TLS algorithm
vm : do n ' t allow vms to be manage in zone - specific scope .
updated logging statements in Driver . java and QueryResultsCache . java to include cache entry details to improve logging clarity and provide more detailed cache entry information
added an option to skip updating the dependency model in multiple Java files to enhance model management by avoiding model updates during model updates
added a test for last intent sender request handling in ShadowActivity and implemented intent sending in ShadowActivity to ensure proper functionality of intent sending in the activity
updated GLJPanel initialization and added FBO settings in RocketFigure3d . java to improve rendering performance by enabling or disabling F
updated HydrawiseAccountHandler to use synchronized list for controllerListeners and added dispose method in HydrawiseControllerHandler to ensure thread safety when managing
added a setup method to the TestCoreAdminApis class to ensure EasyMock does not work with Java 9 to address compatibility issues with Java 9 and
updated year retrieval to use ` ChronoField . YEAR _ OF _ ERA ` instead of ` Math . abs ` for BC dates to improve
fix possible npe when stop jabber account .
updated the variable name from ' cur . ws _ commit _ id ' to ' cur _ ws _ commit _ id ' in TxnHandler .
replaced ByteChunk with ByteBuffer for buffered operations in BufferedInputFilter . java to improve performance and simplify buffer management
add asyncutils . tosync ( completablefuture < t > ) and add test
added ActionGraphBuilder to several compiler factory classes and updated method signatures accordingly to enhance the compiler factory ' s functionality by incorporating action graph
simonstewart : add a test for hidden file upload
removed redundant try - catch block around table creation to streamline code for better readability and maintainability
added a check for the existence of a file before calling the superclass ' s getLocalMavenDir method to ensure the method returns the correct local Maven directory
do n ' t show av label if it do n ' t start with the hidden prefix
fix : fix npe in ctelementimpl # getmetadata
change buffer flag setting from setFlags to addFlag for clarity to improve code readability and maintainability by using a more appropriate method
do n ' t allow re - ordering if the cache be sorted by id
updated error message in verify ( mock ) from " method call not specified " to " missing method call " to improve clarity of error reporting for missing
added a null check for the backup folder before logging the expiration date to avoid potential NullPointerException when accessing the backup folder
added a new file ` ArrayNewInstanceOfVoid . java ` implementing a test method using ` java . lang . reflect . Array . newInstance ` to
added @ AddToRuleKey annotation to ToolType field in ClangCompiler . java and GccCompiler . java to indicate that the toolType
replaced hardcoded value of 10000 with a static constant PINCODE _ TIMEOUT to improve maintainability and readability of the code
add issampled ( ) method to distinguish between prometheus and prometheusexemplars
removed the @ Ignore annotation from multiple test classes to ensure tests are running with the required MongoDB server
http : / / issues . apache . org / jira / browse / amq - 4237 - fix test case
updated the condition to check if the table is an artifical instead of a string prefix to improve clarity and accuracy in determining if the table is
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
refactor session attribute handling in MongoSessionManager to improve clarity and correctness to enhance code readability and maintainability by using consistent variable naming
use setsizefromlayout ( ) instead of setfixedsize ( ) in camerasurfaceview
refactor the handling of the stopping CountDownLatch to use a local variable to improve code readability and prevent potential NullPointerExceptions
removed unnecessary whitespace in WebSocketClientHandshaker parameter to improve code readability and maintainability
camel - 14284 : camel - defaultmessagehistory should use system . currenttimemillis ( ) to calculate elapsed time
[ hotfix ] [ test ] use subscribe with lambda instead of doonerror ( )
modified the assertion logic in WebsocketTest to check for WebSocketHandshakeException before proceeding to improve error handling by providing a more informative failure message
refactor AllAppsTransitionController to implement View . OnLayoutChangeListener directly instead of using an anonymous inner class to improve code readability and maintain
refactor variable names from ` theHandler ` to ` handler ` for clarity and consistency to improve code readability and maintainability by using a more
int - 1683 added support for the ' default - output - channel ' attribute on the < xpath - router > element .
updated cacheSeconds from an integer to a string and added DurationCapable annotation to enhance flexibility in cache duration management
doc : fix typo ( # 118 )
removed the call to append ( buffer , true ) in ByteBufferPool . java to streamline buffer management and improve performance
add warning message when detect alt - rt . jar in boot class path
updated username and email handling in JdbcScimUserProvisioningTests to use upper case instead of lower case to ensure consistency in user email representation across different
[ java ] do n ' t use - xx : + unlockdiagnosticvmoptions in flightrecorderprofiler
make sure webcam input panel do n ' t crash if the stream be empty .
added a condition to check if ` _ contentView . hasContent ( ) ` is present in ` HttpParser . java ` to ensure that the
( chore ) camel - atmos : fix typo in javadoc
added support for " printf " and " print " methods in Java2TypeScriptAdapter to enhance functionality to support additional print methods
added a new file TestCapacityUntilGCWrapAround . java to test the capacity of metaspaces on 32 - bit platforms to ensure that
updated package - info . java files for mmm and ppp to improve documentation clarity and maintainability of the code
updated the calculation of the end time in the SamplingStatCalculator to ensure the end time reflects the current time of the resource
added unit test base on user forum issue
tmi - jpeg : do n ' t throw iioexception when icc chunk sequence be invalid .
fix the rod of the sky not be able to be reequip due to change in the model
removed binding of ` Config ` and ` Environment ` classes and added a conditional check for entry types in ` SpringModule ` and ` Jooby
simplifies code and remove some unused code
add support for add additional nameupdater . properties file into jmeter . properties
added a boolean flag ` started ` to the ` ellipsoidRegionSelector ` to track the initial state of the ellipsoid region
updated URLs from " http " to " https " for various websites in JavaSEPort . java to ensure the application connects to the secure
[ geos - 7136 ] validate sortby attribute in wfs getfeature query
updated the condition for retrieving the grantor in AbstractJdbc2DatabaseMetaData . java to ensure that grantTuple [ 0 ] is not null to avoid potential
added graphics configuration and transparency handling for image rendering in DiagramGenerationTest . java to ensure compatibility of images with improved rendering quality
add a good error message if we ca n ' t install fml properly .
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
make locktest more tolerant to slow machine
added methods to tokenize a string and join tokens in the StringUtil class to improve token management and ensure proper formatting of tokens
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 405 .
refactor command handling in SystemHighlighter to use commandIndex instead of command retrieval to improve code clarity and maintainability by standardizing command index management
updated the version to " 1.0 . 1 - SNAPSHOT " and changed the version date from " 2012 - 07 - 14 " to " PENDING
updated buffer position assignment to use dimensionSize instead of idx to ensure correct buffer positioning based on the specified dimension size
added support for handling drag - and - drop events in the System UI components to enhance user experience by enabling drag - and - drop functionality in the
fix socketappendersocketoptionstest and socketappendersocketoptionstest on java 7
added support for PSK - AES256 , GCM - SHA384 , and TLSv1.2 in TestCipher . java to enhance security by
updated description retrieval from ` getDescription ( ) . getText ( ) ` to ` getLongDescription ( ) ` in ` NearbyMapFragment . java
added JsonProperty annotation to ScimGroupMember class to enable proper JSON serialization of the group member information
updated HqlQueryRenderer to handle reserved words and added schema scoping tests for schema scoping to enhance query accuracy and ensure proper functionality
[ hotfix ] fix checkstyle violation in subscriptionhelper
refactor Parser class for improved readability to enhance maintainability and ease of understanding for future developers
updated the ` offsetStreamIndex ` method to accept an additional boolean parameter for index selection to ensure proper handling of tracks based on their indices
updated byte array decoding logic and added new file types for C++ and CPIO files to enhance functionality and support for C++ archive files
[ hotfix ] [ table - common ] remove redundant monotonicity method from flinksqloperatortable
added inheritance functionality to ` OneTimeTokenAccount ` and ` OneTimeToken ` classes to enhance object comparison and string representation for better performance
added a condition to check if the assistant was not launched to ensure fling only occurs when the assistant is not launched
added a new file SolarisShortDSA . java that implements DSA key pair generation and verification using DSA to demonstrate the use of D
added a call to toggleSearchLabel ( false ) in ListFragment . java to improve user experience by disabling search functionality
do n ' t lock the volume when create a snapshot
added a new ` DetailsServiceConnection ` class and modified the handling of ` mConnection ` to ensure proper service connection management and prevent potential null pointer
updated the handling of SSL peer unverified exceptions in HttpClientTLSTest . java to improve clarity and maintainability of the test code
removed the equals method from the ConjunctionScorer class to simplify the code and improve readability
added a null check for the variable ' v ' in bindItems method to improve error handling by logging errors when binding items fails
increase commit timeout for cpmemberaddremovetest
updated cache size calculation and added logging for full cache shrink to improve cache management efficiency and reduce memory usage during full operations
updated API endpoint from v2 to v3 and modified account handling in CryptoFacilities classes to ensure compatibility with the latest API version and
added an ` empty ( ) ` method to check if the size of ` freenect2 ` is zero to provide a way to determine if
added null checks for page data in AsyncPageReader and updated test annotations in TestDrillParquetReader and TestEmptyDictPages to improve code
[ solana ] fix channel name generation for subscriptiontype
add a config option to disable the animation when a mana pool be charge on top of a mana pool
[ java ] add more information to timeout exception .
[ hotfix ] [ test ] log error in waitforhelper
fix defaultservlettest failure on window
removed duplicate calls to stylesProvider . openScreenStyle ( ) and dialogStylesScss ( ) in ResourcesInjectorFull . java to improve code clarity
updated ` BaseLiquibaseTask ` and ` DBDocTask ` to use ` FileResource ` instead of ` String ` for file handling to
fix checkstyle issue in blockworldvector . equals ( )
updated LongConcurrentLRUMap . java to enforce immutability of the CacheEntry class to improve encapsulation and enforce immutability of
replaced direct addition of a single element to the resource configuration with a quoted string to ensure proper handling of string literals in resource configuration
updated the method for retrieving the KRB5CCNAME environment variable and modified the argument handling in EmptyCC to improve flexibility in retrieving the KRB
updated the database path for the ValidateMultiSignContractTest from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSign
[ p2p ] fix fast sync timeout ( # 1179 )
simonstewart : fix a typo in the webdriverservlet . java file .
fix : do n ' t expand ' equal ( x , y , z ) ' format expression
added a check to clear pending rendering operations if it exceeds 20000 and minimized to optimize rendering performance by avoiding unnecessary operations when minimized
fix hazelcasttestsupport sleepmillis to not sleep after the deadline have pass .
fix write behind write - behind write delay time window ( # 11818 )
set the icon of the JLabel to null in GroupTreeCellRenderer to improve visual clarity by eliminating unnecessary space
changed test method names and set strict match settings in TestBlacklistAwareRedirectResolver to improve clarity and consistency in test naming conventions
added imports and modified test methods in ShutdownMonitor and ShutdownMonitorTest classes to improve resource management and enhance test clarity
refactored logic for calculating moveSize and adjusted chunk fill rate adjustments in RandomAccessStore . java to improve code readability and maintainability by
refactor field retrieval and caching logic in Json . java for improved clarity and maintainability to enhance code readability and reduce redundancy in field management
[ hotfix ] move componentclosingutils to operator package
cloudstack - 2530 : when snapshot creation fails , delete all associated volume in the error state when vm be in error state
api : fix npe while list vlans by ip address
rename ` InitializeUserDetailsBeanManagerConfigurer ` to ` InitializeAuthenticationProviderManagerConfigurer ` and update references accordingly to improve clarity and consistency in naming convention
increased the retry timeout for leader retrieval from 15 seconds to 30 seconds to allow more time for leader retrieval in the collection
refactor error message methods in AbstractParam and related classes to remove unnecessary string concatenation to improve clarity and maintainability of error messages for better troubleshoot
updated drawing coordinates in URLImage to correct positioning to ensure proper rendering of images with negative offsets
updated the condition in SolrTestCaseJ4 to compare field names from ' solrDocument1 ' to ' solrDocument2 ' to ensure that the correct
refactor code to introduce a new method ` isItemZeroHighCardDim ` for checking high card dimensions to improve code readability and maintainability
[ hotfix ] [ stream ] add original exception to streamtaskexception
refactor tag processing logic in Preprocess . java to improve clarity and efficiency to enhance readability and maintainability of the code
reformatted the ` read ` method in ` MessagePack . java ` for consistency to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a standardized way to specify type
do n ' t encode empty extension list for fhir comment
updated string splitting in Artifact . java and added null checks in LibraryManager . java to improve code clarity and ensure proper handling of missing dependencies
added an alias for the " node _ popup _ scripting " entry in the ScriptingMenuEntryVisitor to improve organization and clarity of scripting menu
updated HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants in OverviewActionsView
camel - 711 : camel - jms should use getout ( class ) rather than cast to jmsmessage .
( chore ) camel - test - infra - service : fix checkstyle issue
deleted deprecated classes ` AbstractDelegatedVerb . java ` and ` FailureContext . java ` to remove deprecated components to clean up the codebase
added a new ` MicroServlet ` for handling micro - encoded content in ` GzipHandlerTest . java ` and modified the GzipHandler to
[ java ] use backpressureutils . getandaddrequest instead of consumercapacity . getandadd ( ) in onsubscriberedo .
added logging functionality to the ` SpeedmentImpl ` class for component stopping events to improve debugging and monitoring of component lifecycle events
add a new file to allow to load the dspace - config from the application context
updated matcher logic in StoreScanner and adjusted test iterations in TestWideScanner to improve row matching accuracy and enhance debugging capabilities
( chore ) camel - test - infra - karaf : disable jmx by default
replaced hardcoded ' / ' with a constant ` CANONICAL _ PACKAGE _ SEPARATOR ` in ` SourceLineAnnotation . java `
added methods to configure the YARN binary path in HiveConf and refactored related code in RemoteSparkJobMonitor to improve application information handling
added support for " maria " database in the DbConnectionManager to enhance database connection handling for both MySQL and Maria databases
[ hotfix ] fix incorrect time calculation in splitlogmanager
added a new file ` ExecuteAndReturnStringTest . java ` to implement a test for handling network errors to ensure proper functionality and error handling in
added a new file InvokespecialInterface . java implementing an interface and a class implementing a dynamic method to demonstrate the invocation of special methods in interfaces and
refactor EvictingBoundedList class implementation to improve performance and maintainability of the code
do n ' t use edge _ base _ dir if turncosts = true
added a check for backgroundDisabled before executing selection logic in SelectBox . java to ensure selection is valid and prevent negative values from being set
added a null check for the method ` md ` in ` RpcServer . java ` to throw an exception when ` md ` is null to ensure
updated hotseat cell size calculation and adjusted hotseat icon center calculation to improve layout consistency and ensure proper spacing of hotseat icons
updated the construction of ` valString ` to use ` values . get ( ` partitionColumnIndex ` ) ` instead of modifying the partition name
add versioned serialization for namedtaskdecorator ( # 11858 )
updated the directory reference from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure the
updated the ` isDisplayModeEqual ` method to always return true when the conditions are met to ensure that the ` isDisplayModeEqual ` method
fix a bug in format high - codepoints in emsmath ( issue # 119 )
added null and whitespace handling for values in OAIDCCrosswalk and Item classes to ensure proper formatting of values and prevent potential NullPointerExceptions
simonstewart : do n ' t select a frame when the value be empty
added a ` tbClearButton ` to the ` BookmarksPanel ` and modified ` StringSearchPanel ` and ` BookmarksPanel `
replaced the method of building the base URL with a call to ` UrlUtils . buildFullRequestUrl ( request ) ` to simplify port handling and
update softassertionstest to use parsedatetime instead of java . sql . date
updated the ` adaptOrders ` method to include a reverse parameter and modified its implementation to support reverse orders to enhance order adaptation based on the reverse
added null and position checks for variable types in PrettyPrinter and created a new Java11Var class with a test case to ensure proper handling of var
simonstewart : fix a couple of compile error in the java test suite
l4j2 - 1767 : do n ' t overwrite hadoop conf property with default value
replaced ` drawChildren ` method with ` draw ` method in ` WidgetGroup . java ` to simplify method calls for better readability and maintainability
added unit test base on user forum issue
use context . getcatalinabase ( ) instead of globals .
added unit tests for ` getBestDateTimePattern ` methods in ` ShadowICUTest ` and modified the return statement in ` ShadowICU `
added a style to specify the left row and color codes in the PlotSquared object to enhance the visual representation of color codes in the PlotSquared class
added ZuulProperties support to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enhance flexibility by allowing configuration of Zuul properties
tika - 1626 -- add test to verify that tikacoreproperties be set to ` ` utc ' '
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to use ` getBuildTime ( ) ` instead
updated calculation of xDist in PagedView . java to use absolute value to ensure accurate positioning for scrolling effects
remove unused file guirwriteer . java ( should be remove )
removed the @ NullableDecl annotation from the constructor parameters and methods in LazyMessage , StandardSubjectBuilder , and CustomFailureMessage classes to simplify method signatures
updated error message format from " Got : " to " Got : % s " in TestStream . java to improve clarity of error messages for better
updated package structure and import statements for various Thymeleaf template parser classes to improve organization and clarity of the codebase
added a test method to evaluate a string using XPathBuilder in XPathTest . java to ensure correct parsing of XML elements in XPath queries
added @ Nullable annotation to FutureUtils . java to indicate that these fields should not be null in future functionalities
add warn message when invokedynamic be not resolve during call - graph construction .
updated email addresses in ContextTest . java from " gmail . com " to " example . com " to align with the new email structure for
updated the HTTP response format in HttpConnectionTest . java and modified URI comparison logic in URIUtil . java to improve clarity and correctness in URI
implemented the ` getColumnDataType ` method in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a consistent return
add default implementation for serviceclientconfiguration ( ) that throw unsupportedoperationexception
refactor HSSFPictureData class to improve code organization to enhance maintainability and readability of the code
updated time handling to use ` Instant ` instead of ` long ` for time measurements to improve accuracy and compatibility with Java ' s time API
added version handling and improved debug logging in LibMediaInfoParser . java to enhance clarity and functionality of media info options based on the current version
added methods to reflect and create dependencies for IdeaDependency and DefaultIdeaModuleDependency in ProjectReader to improve compatibility with Gradle ' s dependency
added a new file SerialHeap . java and updated references in Universe . java and Universe . java to implement a new SerialHeap class for
added @ SuppressWarnings ( " serial " ) annotations to GsonTypes . java to suppress serialization warnings for the class
update mouse wheel event to use the mouse position of the mouse wheel instead of the current one
datamongo - 1608 - fix nullpointerexception in findbyfirstname case - insensitive query
[ hotfix ] [ table - common ] add multisettypeinfo to maptypeinfo
added a method to retrieve identity providers by issuer in XOAuthProviderConfigurator to improve error handling and provide clearer feedback when an issuer is not found
fix : cmapparser do n ' t ignore delimiters in cmap file
refactor ContactsBackupJob to use OperationsServiceConnection for managing service connections to improve code maintainability and ensure consistent file expiration behavior across the application
refactored type constraints and added new classes T6938454a and T6938454b to improve type handling and introduce new classes with
added property ` ` is _ config _ hidden ' ' to accountlist .
added a check to log an error if the number of supported displays does not match the old and new display dimensions to ensure that the application does not
updated schema removal logic in PMetaDataImpl . java and added a test case in PMetaDataImplTest . java to improve code clarity and ensure correct
ggb - 2212 do n ' t fire passive login if the action be ` ` loginpassive ' '
added a new file ` Box2DTest . java ` and modified ` GDXTester . java ` and ` Box2DTest .
add debug statement to table . apply ( ) , add more information to debug .
[ hotfix ] [ config ] change the default buffer request timeout from millis to minutes
doc ( regen ) : update java microgenerator to 1.0 . 5
added a help button to the OpenOfficePanel to enhance user experience by providing additional information about the OpenOffice integration
[ java ] use ` . childoption ( ) ` instead of ` . option ( ) ` in ` nettyacceptor ` and ` nettytcp
updated method signatures in BinanceAuthenticated . java , BinanceFundingHistoryParams . java , and BinanceTradeService . java to use wildcard
refactor class reference handling in ScanResultObject . java to improve readability and maintainability of the code
refactored connection handling and redirection logic in DecodeServlet . java to improve code readability and maintainability
updated Querydsl to use ` toQueryDslNullHandling ( ) ` method and added a new test class for null handling to improve query
updated loop condition in ParallelAction and modified conditional checks in SequenceAction to enhance robustness by preventing null pointer exceptions during action processing
refactor : fix checkstyle violation in cttypetest . java ( # 3399 )
added synchronization to ` sfWriters ` to ensure thread safety during concurrent access to ` sfWriters `
added a new Java interface ` Issue888 _ JavaI ` and its implementations ` JJ ` and ` JK ` classes with corresponding test
added functionality to revoke an existing agent certificate in the CertificateManager to enhance certificate management capabilities by allowing the removal of existing certificates
added a check for no body responses in the AbstractHttpTest and updated HttpServerTestBase to handle cases where no body responses are received to ensure proper handling
dataimport : improve error message if ' script ' use only in java 6 or above
updated connection pooling type to support both BONECP and DBCP in HiveConf . java and added HikariConfig in TxnHandler
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to standardize
added filterLock method and modified file locking logic in FileMenuFilter . java and OCFileListFragment . java to enhance user experience by
updated versioning logic in mmm Version . java and ppp Version . java to improve version management and maintainability of the code
clear endpoint cache when update a keyspace . patch by jbellis
refactor lock handling by introducing a private method ` waitForState ` to improve code readability and maintainability by reducing repeated calls to ` thr
refactor ` getCoercedAttrValues ` methods to accept ` SkylarkRuleContextAttr ` and update method signatures accordingly to improve
simonstewart : introduce the storage interface to make it easy to use .
fix nullpointerexception in create or replace view statement ( # 11824 )
change exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error messaging for better clarity during segment generation
updated SpellCheckComponent to retrieve the query string from rb and added a null check for the query string to improve robustness by preventing null pointer exceptions
added validation for header values in mmm Headers . java and ppp Headers . java to ensure header values contain valid newlines and whitespace
add afterfieldsoffset to hostinstanceclass and use it in hybridlayout .
[ apex ] make comment container node non - experimental
hhh - 11799 log warn about lazy join with fetchmode . join
refactored NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilters to extend AbstractSpecFilter instead of implementing SwaggerSpec
added assertions for database and table names in TestCompactionTxnHandler and updated TxnHandler to set their values from a result set to ensure that the
camel - 13636 : camel - timer should use graceful shutdown instead of graceful shutdown .
added a conditional check for processed blocks before adding traces and removed the current block from the work list to ensure that traces are only added when
updated ProviderManager to use CollectionUtils for null element checking and added unit tests for null element handling to improve code robustness and ensure proper exception handling
simplified the database type check in InsertOrUpdateGeneratorPostgres . java to improve code readability and reduce unnecessary complexity
added assertions to validate query results in LocalIndexIT and modified scan limit handling in BaseResultIterators and ExplainTable to improve test coverage and
added validation to prevent addition of collections with different types in the past to ensure that only unique collections are used in the past
updated cursor handling logic in VDUBuffer and modified width and height calculations in vt320 to improve accuracy of cursor positioning and ensure proper
removed the constant USE _ RETRIES from HttpShardHandlerFactory . java to simplify the code and improve maintainability
[ java ] fix parsing of java version with version 11.0 . 7 . 0
[ hotfix ] do n ' t run streamtask when there be no input gate
added a JUnit test method to the TestReceivingMessageSourceParserTests class to facilitate unit testing of message source parsing functionality
added null check for properties in RemoteCluster . java to prevent potential NullPointerException when accessing properties
updated IOException handling in FileSystemBlobStrategy to store the cause of the IOException to improve error handling by providing more context in the exception
corrected a typo in a string from " rolling upgrade " to " stack upgrade . " to ensure clarity and accuracy in error messages related
move txidtextfield . txconfidencelistener from walletservice to txidtextfield .
added support for " G1 Perm Gen " in JmxSupport . java to enhance functionality for managing permissions in the application
removed unused import statements and simplified return statement in NearbyController . java to improve code clarity and reduce unnecessary complexity
pdfbox - 4892 : make clonefornewdocument public , a suggest by valerybokov
added checks for home activity type in BaseSwipeUpHandlerV2 . java to ensure correct handling of gesture actions in home activities
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related constants and methods to improve clarity and organization of client filter
renamed methods and modified country ISO retrieval logic in ShadowTelephonyManagerTest . java and ShadowTelephonyManager . java to improve
added a method to set the unfreeze amount in UnfreezeBalanceV2Actuator to ensure that the unfreeze amount is correctly set for
fix typo in conference scheduling description
simonstewart : use commons - io instead of guava to copy the profile directory .
refactor multiple assertion classes to improve code consistency to enhance maintainability and readability of the codebase
refactor Observable class for improved readability to enhance maintainability and clarity of the codebase
updated the ` pushAll ` method to use ` addMultiFieldOperation ` and added a new test for multiple push operations to enhance functionality and ensure
added a null check for randomUUID before setting it in MockHubService to ensure that randomUUID is properly initialized before use
added a default implementation of ` onHoverEvent ` in ` InputConsumer ` and implemented it in ` OverviewInputConsumer ` to handle hover events
updated the logic for determining the boostrap configuration in CoreContainer . java to ensure that the boostrap configuration is only set when the Zookeeper server
camel - 14284 : camel - netty - http - make the default header value configurable
hbase - 27154 increase hbase client retry from 5 to 35
updated file path handling in SourceSnippetHelper . java to ensure consistent file path resolution across different operating systems
make encodedgraphcachetest more robust by retry on failure .
updated the query command from " customer _ count " to " all _ tables " and added a new test for querying over - output to improve
added functionality to adapt and store currency details for assets in KrakenAdapters . java to enhance currency management for asset assets
added a ` toString ` method to ` AnyOf ` and created a corresponding test class ` AnyOf _ toString _ Test ` to provide a clear
[ te ] use dimensionmap instead of entry . getkey ( ) in alerttaskrunnerv2
[ influxdb ] do n ' t publish in -fluxdb if measurement or database be blank
updated method names from ` doTransform ` to ` downcast ` across multiple converter classes to improve clarity and consistency in the conversion process
added filter : : 1 , fec0 : : 1 , and fec0 : : 1 to check for unique local address .
added a method to quote column names in DataTextFormatter to ensure that column names are correctly quoted in the output
added methods to set and get system properties in WrapSystem and StrUtils , and updated method names in CompileMethodEntity to improve system property management and
added a constructor to the UpdateRequest class that accepts a URL to provide a way to initialize the Request object with a URL
updated enum declaration from static to instance in ProtoTypeAdapter . java to improve encapsulation and ensure proper enum usage
added a warning for experimental response formats in DataImportHandler and ReplicationHandler to indicate that the response format may change in future to improve user experience by
updated logging statements in JpmsUtil to include a formatted string for moduleNames to improve readability of debug output by providing more descriptive
add a method to get the default label font and adjust the row height to match the size of the table
[ amq - 13636 ] fix checkstyle violation in defaultbrokerheartbeatmanager
removed redundant code for retrieving meanPartitionSize , partitionCount , and splitCount in CqlInputFormat . java to streamline code and improve readability
[ java ] remove unnecessary check for test class name in junit test
add equal and hashcode method to ruleterminalnodelefttuple to avoid a classcastexception .
added StageIDsRearranger import and configuration for HIVESTAGEIDREARRANGE in TezCompiler . java to facilitate the resolution of stage
fix wrong mbean name for messagingservice . patch by jbellis
refactor memory consumption logic in LotsOfOutput . java to improve readability and maintainability of memory management logic
added imports for Document and Document in multiple classes to enhance documentation clarity and improve code readability
polish ` ` make ldap . anonymous - read - only ' ' configurable
refactor DatabaseMetaData class to improve database metadata handling to enhance code maintainability and readability
changed access modifier of EchoInputDoFn class from public to private to restrict access to the class for better encapsulation
added a new method ` finishMocking ( Throwable failure ) ` to ` MockitoSession ` and updated its implementation in ` DefaultMockitoSession `
updated dependency handling in GoTestDescription . java and added new test cases in GoTestIntegrationTest . java to improve test coverage and ensure correct functionality for
refactor SPDYAsyncConnection to use separate read and write buffers instead of separate flushing states to improve clarity and control over buffer management during
update blockliquidwrapper to use getflowingblock instead of getstaticblock
updated intent data handling in AndroidLocationPlayServiceManager and BackgroundLocationHandler to support dynamic URLs and improve location listener instantiation to enhance functionality by allowing
fix typo in apr endpoint doc .
[ hotfix ] [ table - planner - blink ] use planjsondumpgenerator for streaming plan in clifrontend
make craftingmanager . getrecipes ( ) more efficient .
make test more robust by wait for checkpoint to complete .
removed unnecessary condition in TabsAndIndentsVisitor . java to simplify the code for better readability and maintainability
added a pattern to match the " pg _ temp _ " pattern in NeuteredLinesFilter . java to enhance line filtering capabilities for temporary files
doc ( regen ) : update sample code to set default value to false ( # 37 )
added conditional logic to initialize ` UnknownType ` based on ` dataTypeDefinition ` and updated ` NCLOB ` handling in ` UnknownType `
wavefront : do n ' t flush distributions if not publish histogram
updated the ` handleAdd ` assignment in ` ShenyuClientRegisterSpringCloudServiceImpl ` and added a ` warmup ` method in `
added a new method ` registerListener ` to ` ShadowSensorManager ` that accepts a ` SensorEventListener ` and a ` maxLatency ` parameter to
added error handling in ` testFullMethod ` , ` testFullURI ` , and ` testFullHeader ` methods in ` SelectChannelServerSsl
camel - ignite - fix the unit test error of camel - ignite
added a check for an empty set and modified the condition for reaching the end of the result set to ensure proper handling of empty line numbers and improve
pdfbox - 2576 : catch unsupportedflavorexception instead of ioexception , a suggest by valerybokov
added unit tests for setting display headers and capabilities in ShadowDisplayTest . java to ensure correct functionality and error handling for DOLBY _ VIS
added a finally block to ensure the classLoader is properly reset to prevent potential memory leaks
updated exception messages to include source and target details in SemanticAnalyzer . java and added a toString method in SemiJoinHint . java to improve debugging
added a default constructor to the Message class to ensure proper initialization of the Message class
make serialization idiom priority low for non - gui class .
updated the PhoenixDecimalObjectInspector constructor to accept a PrimitiveTypeInfo and modified precision handling to improve type safety and ensure accurate precision validation for decimal values
updated gzipstream handling in CompressionResponseStream to use OutputStream instead of GZIPOutputStream to improve efficiency by avoiding unnecessary gzip compression when the response is already committed
corrected a typo in the method and variable names related to WWWW authentication to enhance code clarity and maintain consistency in naming conventions
removed specific conditions for EJS and org . omg directories in DCD . java to simplify the code and improve readability by eliminating unnecessary checks
updated ThreadLeakTest to use a new method for retrieving the thread group name to improve code readability and maintainability by centralizing thread group
added logging for security interceptor and refactored afterPropertiesSet method to improve code readability and maintainability
changed the package of DmozParser from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools
updated import statements in RegisteredServiceChainOperatorTypes and ChainingRegisteredServiceDelegatedAuthenticationPolicy classes to improve code clarity and reduce unnecessary dependencies
kvm : add the iso to the list of vms for user vms when migrate to a vm
refactor signal handling logic in SigInt and SigIntTest classes to improve clarity and maintainability of the code
[ hotfix ] use arrayutils . isempty instead of static import
use spring boot auto configuration to avoid test failure
added multiple @ Override annotations to ColorRGBA . java to improve code clarity and ensure proper method overriding
remove deprecate planningentityconfig # resetinitializingplanningentities ( # 1130 )
added a ` setBuildTimeMs ` parameter to the ` TwoLevelArtifactCacheDecorator ` and ` ManifestRuleKeyManager ` classes to set the
updated field access methods in GroupByOperator to use getDeclaredFields ( ) instead of getFields ( ) to improve accuracy in calculating row sizes for aggregation
add a null check before calling addBlockAppearance to avoid potential NullPointerExceptions when the block is null
added CNC _ BTC and CNC _ BTC currency pairs to the Currencies class and updated related imports to support CNC
updated the skewAllowance value from 5 to 15 and refactored related classes to use CasConfigurationProperties to improve flexibility in handling skew allowance
added sorting functionality to SongListActivity and updated query sorting in Utils to improve data organization and ensure consistent sorting of songs
removed unused imports and added a method ` readBodyToBytesIfNecessaryIfNecessary ` in ` Utils . java ` to streamline code and improve readability
replace baseblock with legacybaseblockwrapper , deprecate .
refactored snapshot ID retrieval logic in IcebergBranchExec . java and added a corresponding test in TestHiveIcebergBranchOperation .
replaced ` newArrayList ( " * " ) ` with ` Collections . singletonList ( " * " ) ` in ` AbstractLdapMockMvcTest . java
fix glfw _ key _ move _ up and glfw _ key _ page _ down in photonmappingdemo
updated password change validation logic in IdentityProviderEndpoints . java and added logging in IdentityProviderEndpointsMockMvcTests . java to ensure proper handling of password
added a method to remove non - reflective fields from the notInitializedInConstructors collection to improve the handling of reflective fields in the constructor
added handling for closed connection in JdbcExecutor to ensure correct URL is used when the connection is closed
added a new test method ` testRequiredBody ` to validate the presence and correctness of user data in the RestTemplate to ensure that the expected
updated regex patterns for user and password in CredentialInjector . java and corresponding test case in CredentialInjectorTest . java to ensure correct parsing of
added a new menu item " Item4 " and a new key binding for the ENTER key in ActionListenerCalledTwiceTest . java to
updated print statements and modified assertion logic in TestCoreParser . java to improve clarity of query output and ensure correct validation of results
updated equality check in SimpleNode . java to use ' id ' instead of ' children ' to ensure proper comparison of IDs for proper functionality
changed the access modifier of the PopulatorContextStackItem class from public to package - private to restrict access to the class for better encaps
updated the method for retrieving the number of documents in MoreLikeThis . java and added a new test method in TestMoreLikeThis . java to
reformatted code for better readability in QuestManager . java to improve code clarity and maintainability
[ hotfix ] [ test ] make networkbufferpooltest a static class
updated the query appending method for the EXPIRY clause in MongoSessionDataStore . java to improve code readability and maintainability by reducing redundancy
added a native method ` unsafeGetLong ` to the CompilerDirectivesSubstitutions class to facilitate unsafe retrieval of long values with specific conditions
replace " ARAST " with " EET " for " Asia / Amman " in multiple TimeZoneNames files to standardize the time zone representation
updated the ID from 90000010 to 90000011 in DeprecationLogger . java to reflect the new version of the application
hhh - 14165 handle jdbcexception throw by sessionimpl . getlock ( ) in case of transaction rollback .
change downloadexternalfile . getfilename ( ) to return ` ` . ' ' instead of ` ` . ' '
set menubar use screen menu bar for macosx
fix piecewise integration test for ca
fix recent animation not get complete sometimes when use 3p launcher
added a method to copy the ` modWhiteListPattern ` from ` HiveConf ` and created a test for configuration changes in ` TestJdbcWith
removed the addition of an entry to the invalidClasses map to streamline the class loading process by eliminating unnecessary additions
use player . team ( ) instead of team . sharded in mobileinput
updated the domain setting in CookieImplementationTest from " comp1 " to " domainHelper . getHostName ( ) " to ensure the cookie has the correct
added nullable validation logic in multiple column change generators to ensure that nullable fields are properly validated based on search conditions
refactor multiple security - related classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
updated CustomCollectionTest and CompositeIdRouter for improved query handling and changed variable declarations to static final to enhance code clarity and enforce immutability for
added snapshot handling functionality to ExecutablePreparedStatementBase and updated PostgreSQLIntegrationTest to utilize SnapshotGeneratorFactory to improve snapshot management and ensure proper
updated conditions for caching and resource handling in DefaultServlet . java to improve cache management and enhance code readability
fix issue with tab drag - and - drop not work in some case .
updated description creation in ExecutionUnitRunner and adjusted child count assertions in CucumberTest and CucumberTest to improve clarity and accuracy of test
updated string checks in CommandLineUtils to use StringUtils for better readability to improve code robustness by avoiding potential null pointer exceptions
removed public access modifier from methods in TimeUtils and its test package to enhance encapsulation by restricting access to utility methods
added a method to check for the presence of a direct method handle and refactored the class name checks in RefectionMHTests to improve
updated file extension check from " jpg " to " . jpeg " in PreviewImageFragment . java to ensure compatibility with file naming conventions
make nativeimagedebuginfoprovider use getclassname ( ) to get the declaring type of the method .
added getIcon ( ) method to multiple classes and updated ClassDisplayed value from NONE to NODE to improve icon display functionality and ensure consistent node display behavior
updated substring extraction logic in CounterRequestAggregation . java to handle cases where the last dot is missing to improve robustness by preventing potential null pointer exceptions
refactor the replacement logic in ` FindAndReplace ` and add a test for dollarignstolerated in ` FindAndReplaceTest `
fix npe in jabber debugging when connection be null .
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a new method ` copyDir ` to the ` IO ` class for copying directory directories to enhance functionality for copying files in a specified directory structure
added an exception for unknown datum classes in JacksonUtils . java to ensure proper error handling for unknown datum types
replaced methods to retrieve class and source ABI and source ABI in DefaultJavaLibraryBuilder to improve clarity and functionality by utilizing existing ABI
removed background padding adjustments in the height calculation in SelectBox . java to simplify height calculation logic for better maintainability
added identifiers normalization for dbName and tableName in ObjectStore . java to ensure consistent identifier formatting across the application
updated schema handling for postgres and oracle database in DbSqlSession . java to ensure correct schema is used for oracle databases
removed logout handling from HomeFragment to simplify code by directly calling getActivity ( ) without logging out the activity
updated runtime context parameters from ( 0 , 0 ) to ( 1 , 0 ) across multiple test files to ensure consistency in testing contexts across
added null check for candidates in FastImportAction . java to avoid potential NullPointerExceptions during processing
refactor managed state checks in ContainerLifeCycle and add assertions in ContainerLifeCycleTest to improve code clarity and ensure accurate tracking of lifecycle states
rename iexecutionattributesdialect to iexecutionattributedialect to make it more generic
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to clear unsafe metadata in ` AlterTest . java
fix npe in gettime ( ) when loc be null .
added disruptorqueueexceptionhandler to log exception ( # 11824 )
deleted the Session2Token . java file to the class is no longer needed in the media package
api : add destroy and expunge event when copy a volume from a base image
added a new ` Install ` class and integrated it into ` SystemShortcut ` and ` InstantAppResolver ` to enable installation of apps in the launcher
added a null authorities populator to the LdapAuthenticationProvider and updated tests to verify the behavior of the LdapAuthenticationProvider with a null authority population
added logic to retrieve the retrolambda JAR path from system properties and handle potential issues with Android build issues to ensure the correct jar is loaded
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify code by removing unnecessary exception handling
updated the ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` to improve handling of document sorting by utilizing
added handlenullresult ( ) method to handle null result
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49135
updated assertions in multiple test files to ensure consistency and correct URL formatting to improve code readability and maintainability by standardizing URL formatting
fix the error message for vm snapshot with memory in vgpu .
updated the configuration retrieval logic to use ` methodClassConfig ` instead of ` classConfig ` and changed ` ArrayList ` to ` Set ` for better
change jettysolrrunner to use socketconnector instead of selectchannelconnector
added a method to compare partial partition keys in HiveAlterHandler . java and updated related tests in TestHiveMetaStore . java to improve
added a new BooleanFlag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to control the display of icons in text
removed unnecessary whitespace in SimulationStatus . java to improve code readability and maintain consistency
replaced ` SharedBlockingCallback ` with ` Callback . Completable ` in multiple files to simplify code structure and improve readability
added workspace listener functionality to PreviewControllerImpl and modified PreviewUIController to build the graph based on the update flag to enhance functionality by allowing
added a check for VM anonymous classes in ReflectionFactory and modified class name retrieval in ReflectUtil to ensure proper handling of anonymous class scenarios and improve
refactor TransportHelper to improve code organization to enhance maintainability and readability of the code
updated file path formatting in CatalinaAcegiUserRealm . java to improve readability and maintainability of the code
updated log messages for server initialization and manager initialization in AmbariServer . java to improve clarity and traceability of server and manager initialization processes
added null checks for forNode initialization and modification in JSONWriter . java to ensure proper handling of null values and prevent potential NullPointerExceptions
updated the ` run ` methods in ` SliderAppsViewControllerImpl ` to accept a ` FileSystem ` parameter and modified user authentication logic to enhance
added a check to ensure the backgroundManager is attached before attaching it to avoid potential null pointer exceptions when the backgroundManager is not attached
added methods to reset the current tab in AllAppsTabbed , Launcher , Launcher , PagedView , and Workspace classes to improve
added a null check for the URL in BaseDataSource and created a test for PGSimpleDataSource to ensure proper error handling for invalid URLs and validate
disable test that fail on jdk 11 +
added EditNameDialog support and enhanced directory creation functionality in FileDisplayActivity to enhance user experience by allowing directory creation through the uploader interface
added functionality to toggle bar and chart border widths in multiple activity classes to ensure the chart is invalidated when togglebarborders is pressed
updated the API endpoint from " okcoin . com " to " okex . com " in OkCoinExchange . java to ensure compatibility with the
danielwagnerhall : add deciderscorecomparator to stepscope in acceptedforagertest
replaced FileChannel with SeekableByteChannel for input stream handling in Files . java and added byte array comparison in BytesAndLines . java to improve resource management
refactor ` getFlattenFieldTransferPair ` method to accept a ` FieldReference ` parameter to improve code readability and maintainability by reducing redundancy
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and maintain consistency in naming conventions
fix : do n ' t register serialization type if they do n ' t exist
added memory limit settings for ActivityManager on debug devices to enhance resource management for better performance on debug devices
refactor the sumWithCompensation function to use a local variable for incrementing values to improve readability and maintainability of the code
[ log4j2 - 1080 ] re - enable fail test for now
[ hotfix ] fix precompactedrow . getprecompacteddata ( ) in precompactedrow
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes and added a new test class for invalid render intents to ensure correct rendering intent
add auto - configuration for meterregistrylifecycle ( fixes # 8 )
change log level from warn to info when config center be not find
added exception handling for generating a certificate with a byte array in CertificateFactoryTest . java to ensure robustness of certificate generation process
camel - 13113 : simple - parser should handle ambiguous binary operator . thanks to stan lewis for the patch .
removed unnecessary code in EditorActivity and added focus change handling in IDEEditor to ensure windows are dismissed when the tab is unselected
add user name to error message in accesslogvalve .
updated scaling factors in SkeletonModelGpuSkinningTest and adjusted animation time calculation in OgreXmlLoader and SkeletonModelViewer to
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method to simplify the method signature by eliminating unnecessary exception handling
mark methods in UpgradeResponse as deprecated to indicate that these methods should no longer be used and may be removed in future versions
jsweet 2 catch - up http : / / github . com / cincheo / jsweet / issues / 118 . add
added a test for Kinesis fetch timeout in StreamConfigTest . java and updated the default fetch timeout value in StreamConfig . java to ensure that
[ hotfix ] [ stream ] fix typo in streamdataflowworker
updated the default value of METASTORESERVERMAXTHREADS from 100 , 000 to 1000 to increase the maximum number of threads for the metastore
changed the return type of ` onTaskSnapshotChanged ` from ` void ` to ` boolean ` and added a return statement to indicate if the snapshot
replace mMaxShadowRadius with shadowRadius in SwipeUpAnimationLogic . java to ensure the shadow radius reflects the correct value instead of the maximum
added a new test method ` chainNestingAndAggregation ` to ` ChainParserTests ` to validate the functionality of nesting and aggreg
updated loop condition from ' limit ' to ' end ' in MarketSellAssetActuatorTest . java and added a failure message in the
fix ( context ) : use source . isinteractive ( ) instead of source . isinternal ( ) .
updated condition in CreateKeytabFilesServerAction . java to check for null previousCachedFilePath to improve clarity and correctness of file path comparison logic
added DisplayController import and modified WindowManagerProxy instantiation in LauncherPreviewRenderer . java to enhance functionality by integrating DisplayController functionality
updated toolTipText assignment logic in MetalFileChooserUI and SynthFileChooserUI to retrieve the name of the root directory to improve user experience by
replaced ` getToolkit ( ) ` with ` Toolkit . getDefaultToolkit ( ) ` for retrieving the screen size to ensure the correct toolkit is used for
change the parameter type of the recognise method from List < ? extends RecognisedObject > to List < CaptionObject > to improve type
added test cases for fetching and fetching entities in JPASQLBase . java and refactored entity handling in JPASQLBase .
updated drag index logic in FreeformFinSetConfig . java to ensure the point is removed correctly to improve drag - and - drop functionality
updated the moeVersion from " 1.1 . 2 " to " 1.2 . 0 " in DependencyBank . java to ensure compatibility with the latest version
corrected a typo in the error message and added a call to ` spendAllGas ( ) ` in the ` Runtime ` class to
updated error message formatting in ElementsShouldSatisfy , ZippedElementsShouldSatisfy , and ElementsShouldS
mark the Weights class as deprecated to indicate that the class should no longer be used in favor of a new implementation
refactor unsafe plugin registration by extracting it into a separate method to improve code readability and maintainability
added Hint annotation to AndroidAppModularityDescription and AndroidGraphEnhancerArgs , and implemented a new test for blacklisting modules when not
changed the value of mCenterPagesVertically from true to false to disable vertical page placement for better user experience
fix miss call to migrationinfo . doneprocessing ( ) in migrationrequestoperation
updated constants and variable names related to base URL in the KonnectedBindingConstants and KonnectedUpnectedHandler classes to improve clarity and
updated attributeValue type from Object to List < Object > and added assertions for commonNameValue and emailAddress in WSFederationClaimsReleasePolicy
added database - specific table creation and query processing methods in TestJdbcWithMiniLlap . java and LlapBaseInputFormat . java to improve
added a test case ` testCaseInsideBrackets ` in ` CaseExpressionTest . java ` to validate SQL parsing and deparsing to ensure correct
added copy mode functionality and refactored event handling in ConsoleActivity to improve code readability and maintainability by centralizing copy mode logic
refactor ` writeXmlOutput ` method to accept a ` Writer ` instead of a ` String ` for writing XML output to improve XML output handling
camel - 14284 : fixed npe in abstractaggregationstrategy when use empty split message
camel - 14199 : camel - logging - should use exchangeexception instead of exchangehelper so it can be use elsewhere .
move basicconfigurator to the classic package to avoid confusion .
remove assertion for hi _ node in type qualifier dataflow analysis
removed unused import of SharedStringSource in TestXSSFRichTextString . java to streamline dependencies and improve code clarity
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with additional parameters
refactor BoxAndWhiskerCalculator , BoxAndWhiskerXYDataset , HistogramDataset , and Statistics classes to improve code
[ hotfix ] migrate readablewritableconfigurationtest to junit 5
replaced ` = = ` with ` . equals ( ) ` for equality checks in ` NormUpdate ` and ` MemoryIndex ` classes to improve
changed the access modifier of the singleton variable and its constructor from public to private to restrict access and enforce encapsulation within the IndexFileNameFilter
test : add test expression to ifstatementtest . testvertex ( ) .
updated method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to
refactor TypeAdapter to remove redundant nullSafe method calls to simplify code and improve readability by reducing redundancy
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct expected value in the test
added a new class EXIFReader to process and process EXIF metadata to enhance image processing and metadata handling in the application
fix the issue that cloudwatchmeterregistry # tostandardunit return ` ` none ' ' when the specified unit be unknown
resolve split - packages : fix npe in applypmmlmodelcommand
improve error message in case of repeated countercurrencytransferstartedmessage
added a check to return early if the bubble bar is not visible to improve performance by avoiding unnecessary processing when the bubble bar is not visible
aarch64 : fix aarch64 backend to handle out - of - bounds label range
do n ' t set ` ` initpending ' ' when call ` ` log ( ) ' ' .
added a new method ` find ` in ` TicketCatalog ` and improved debug logging messages in ` DefaultTicketCatalog ` and ` HazelcastTicket
refactor SSL connection and trust store password handling in TestSSL . java to improve code readability and maintainability
[ hotfix ] [ table - common ] make sort - shuffle result partition read thread safe
updated Read and Write constructors to include parameters for Long . MAX _ VALUE and Long . MAX _ VALUE to improve flexibility in data handling by allowing
added ' type ' parameter to plugin handle query and updated related methods in PluginHandleController , PluginHandleDTO , and PluginHandleDO to allow sorting
added the ` start ( ) ` method to the ` DefaultSpanCreator ` and ` SleuthAdvisorConfig ` classes to ensure that the
added support for customizable drawable color , depth , and multisample in IOSApplicationConfiguration and IOSGraphics classes to enhance flexibility in rendering options
fix flaky test in loginit . testuserlockoutafterfailedattempts
refactor PtNDArray instantiation to include a handle variable and add unsupported operations for real ( ) to improve error handling for unsupported operations
removed unnecessary interruption check and replaced with a do - while loop for retrieving lock names to improve code readability and maintainability by reducing redundancy
refactor methods in Implements and ShadowPicker classes to improve code organization and maintainability
refactor HttpClientOptions initialization and add HTTP / 2 connection settings in RestTransportClient . java and TransportClientConfig . java to improve configurability and
updated conditional checks and improved error handling in DynamicStruct , SolidityFunctionWrapper , and SolidityFunctionWrapperGenerator to enhance type safety and
updated getStringProperty calls to include a default value of true for " text - align " , " font - size " , and " font - size
added overloaded constructors to CopyStep for better flexibility in creating CopyStep instances that require a recursive option
fixed - rsemaphore . acquire ( ) and rsemaphore . release ( ) method throw concurrentmodificationexception . #
camel - 7999 : camel - jbang - use routecontextprocessor instead of routecontextprocessor in camel - example - dsl
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` and ` BuildTargetParserTest ` to use it to
updated data types from String to ByteString for various methods and variables in WitnessScheduleStore . java to improve data handling efficiency and compatibility with byte buffers
added a condition to check if resultsMeta is not empty before printing results to avoid unnecessary output when resultsMeta is empty
refactor ConcurrentLinkedQueue logic to improve item removal logic and add a new class for testing memory leak scenarios
added a boolean parameter ` addSpecialTokens ` to multiple methods in ` HuggingFaceTokenizer ` and ` HuggingFaceTokenizer ` to enhance token
[ hotfix ] use collections . ncopy instead of arraylist in taskmanagerservices
[ iotdb - 4071 ] load single tsfile chunk with correct data size ( # 1064 )
added a constant for session storage context and updated web flow configuration in DuoSecurityMultifactorWebflowConfigurer to enhance session storage context management and improve
add unit test for the xml validation feature in tomcat .
added a default constructor to the TypeAdapter class and updated ignore annotations in Java17RecordTest and ReflectionAccessTest to ensure compatibility with Java 17 and
make ` ` preparekill ' ' event a part of ` ` preparekill ' ' event .
refactor AntPathRequestMatcher for improved request matching logic to enhance code maintainability and readability
[ ds - 4023 ] addbitstreamsaction , addbitstreamsaction : use type _ custom instead of null
added null check before releasing deflaterEntry in GzipHttpOutputInterceptor . java and improved assertions in BlockingTest . java to enhance code robust
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup after each test execution
added Normalizer to normalize unicode characters in the MD5 computation to ensure consistent character normalization and prevent potential issues with unicode characters
refactor command handling in ` mmm Example . java ` and ` ppp Example . java ` to improve code readability and maintainability by standardizing
fix checkstyle issue in util / profiler / basicprofilerstate / basicprofilerstate . java
updated the handling of JSON strings in MongoTemplate and added a new test for saving JSON string correctly to ensure correct serialization and deserialization of JSON strings in
added functionality to extract and validate multiple remote addresses from an IP string to ensure proper handling of remote addresses in requests
changed return type of getJobArgs from String to ObjectBuilder and updated related method calls to improve type safety and simplify job argument handling
updated the handling of the local host address in CookieManagerTest and UnmodifiableMaps to use NO _ PROXY instead of a hardcoded
updated glyph layout logic in GlyphLayout . java and added a new test case in BitmapFontTest . java to ensure proper handling of wrapped runs and
added pauseOrResumeSplits method implementations in PulsarSourceReaderBase and PulsarPartitionSplitReaderBase to manage split
added a new configuration variable for script operator ID in HiveConf and updated ScriptOperator to use it to enhance the configuration flexibility for managing operator IDs
refactored the getListedTermCounts method to use Streams for improved readability and functionality to enhance performance and maintainability of the code
added a new action class ` UseSeparateStepSizeAction ` for managing separate step sizes in the application to provide users with the option to specify
added final modifiers and modified file unlock logic in FileMenuFilter . java to improve code immutability and enhance file locking behavior based on user
updated import statements and refactored region server handling in RoundRobinTableInputFormat . java and TestTableSplit . java to improve code clarity and
updated the value of the ` PARENT _ SPAN _ ID ` header from " false " to " 1 " in ` HttpClientRequestAdapter `
pdfbox - 2576 : use ioutils . closeclose instead of a null check
added fullscreen handling and JSNI support in GwtGraphics and GwtApplication to enhance user experience by enabling fullscreen features
updated WebfingerIssuerService to handle URIs and modified parameter name from " login " to " identifier " to improve handling of resource URIs
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate the configuration of ` DubboConfig ` to
replace Gdx . files . internal ( fileName ) with resolve ( fileName ) for asset handling to improve code readability and maintainability by using a
updated logging levels from warn to info in ChainingAttributeReleasePolicy . java and OidcDefaultJsonWebKeystoreCacheLoader . java to
replaced calls to ` PMS . REALTIME _ LOCK . lock ( ) ` with ` PMS . REALTIME _ LOCK
updated package declaration from ` java . lang ` to ` java . lang ` to improve code organization and maintainability
fixed bug in nulldereferenceandredundantcomparisonfinder where catch block be not report .
update dashrendererbuilder to use defaulthttpdatasource in onmanifesterror and onsinglemanifesterror
add a configuration property to set the maximum number of prepared statements cached per connection in the database connection to enhance performance by limiting the number of prepared statements
[ hotfix ] [ config ] rename writableconfig to configuration
removed the checkErr method from AutoScalingHandler to streamline error handling for command operations
refactor CombinedDataset class to improve code organization to enhance maintainability and readability of the code
replaced a byte array with a byte variable in InflateIn _ DeflateOut . java to improve code readability and maintainability by using a
added methods to remove cryptography restrictions in the Utilities class to enhance security by ensuring that encryption restrictions are properly enforced
fix chunk teleportation not work in some case .
added a new test method ` testPageMarginsLongTextTransform ` to the ` TextVisualRegressionTest ` class to ensure that page margins are
added null check for vContext before assigning it to vectorizationContexts to ensure proper context initialization and avoid potential null pointer exceptions
fix wialon speed value ( fix # 1078 )
hbase - 25827 disable the user aggregation by default ( # 2599 )
added an ` isEmpty ( ) ` method to the ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to provide a way to check
replace the unregistering of the receiver with a conditional check before unregistering the receiver to ensure that the receiver is only unregistered if the receiver is
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
updated the zadd method to include an additional parameters parameter to ensure proper handling of parameters during the zadd operation
[ ds - 3023 ] fix unit test and remove unused import
rename testasyncmessages to testasyncmessagesperformance so it can be run multiple time .
added a method to retrieve an optional target and refactored related logic in ` VersionedTargetGraphBuilder ` , ` VersionPropagatorBuilder
updated epoch time comparison values in TimeZoneProvider . java to ensure accuracy in time zone validation
updated the return value in EscherBlipRecord . java and added a new test class TestOLE2Embedding . java for OLE
updated the initialization of ` row ` and ` column ` in ` JSONParser . java ` to ensure proper initialization of variables
replaced ` JavaType . ShallowClass . build ` with ` JavaType . ShallowQualifiedType ` and refactored type matching logic to
updated thumbnail height and added play trailer functionality in BaseItemDetailsFragment . java to enhance user experience by allowing users to view local trailers for playback
added a method to remove glyph information from the cache in CStrike . java and CStrikeDisposer . java to improve memory management by
fix process instance end event not record process instance end when child execution be terminate .
camel - 14146 : camel - core - optimize to use the @ xml XmlRootElement annotation to get the name of the root element . thanks to
updated the endpoint in the test from " http : / / apereo . org / www . apereo . org / www . a
added ' prdef ' option to reset all preference to default value
hbase - 10254 expose the creation of thrift metric and servlet in the thriftserver class ( addendum )
[ danfossairunit ] remove deprecate channel manual _ fan _ speed
use hamcrest assertion instead of junit in integrations / microprofile / openapi - bom
removed redundant check for ` expansionHelper ` before calling ` stop ( ) ` to improve code clarity and reduce redundancy
added null checks and ` equals ` and ` hashCode ` methods in ` PartitionPanel ` and ` PartitionFactory ` classes to ensure proper handling of null
fix a bug where the root disk size be not be set in custom parameter if it be not explicitly set
updated visibility logic in PredictionRowView to conditionally show suggested apps in the drawer based on user preferences to enhance user control over prediction visibility based
[ geos - 7136 ] fix bboxcrs nullpointerexception in apibboxparser
added methods to validate value and position parameters in LibrustzcashParam . java and updated test data in LibrustzcashTest . java to
deprecate ithrowable in favor of fml . common . registry . ithrowable
added new properties ` x ` and ` y ` with random values in ` NodeDataImpl . java ` to generate random coordinates for the node data
renamed the ` validateRefreshToken ` method to ` validate _ happycase ` and added a new test method ` validateRefreshToken _ should _ fail _ when
refactor JavacStep to initialize ` declaredDepsBuildResult ` , ` firstOrderStdout ` , and ` firstOrderStderr ` to
updated the VERSION constant from " 0.9 . 1 " to " 0.9 . 2 " to reflect the latest release version
added a condition to check if the item type is DEEP _ SHORTCUT in LoaderCursor . java to ensure proper handling of deep shortcut
added a hashCode ( ) method to the TimeGranularitySpec class to ensure proper hash code generation for object comparison and comparison
changed access modifiers of classes BooleanWeight , DisjunctionMaxWeight , and DisjunctionMaxQuery from private to protected to allow subclasses to access
added a boolean flag ` useProxyResponseCode ` to control proxy response code usage in ` HttpURLConnection ` to ensure proper handling of NTLM
[ gr - 26969 ] aarch64 : use scratch register for move .
do n ' t try to calculate memory per host when it be not find in the db
added a null check for ` docs . getMaxScore ( ) ` in ` JSONResponseWriter . java ` and modified a query in ` TestDistributed
updated the audio recoder timeout value from 22050 to 44100 to allow for a more reliable audio recoding
updated the calculation of newOriginX in RocketFigure . java to correctly account for the scale factor to ensure accurate positioning of the rocket '
updated DruidQueryBasedInputFormat to check for empty data source and set default interval to DruidStorageHandlerUtils . DEFAULT _ INTERVAL to ensure
added ORIGINAL _ TYPE and modified pattern matching in CustomProperty . java , along with corresponding unit tests in CustomPropertyTest . java to enhance
added a static method ` create ` to create an ` IndexImpl ` instance using a ` Table ` and a ` Map < String , Object >
removed redundant assignment for checkLowerBoundaryPeriod and checkUpperBoundaryPeriod to simplify the return statement for better readability and maintainability
updated compatibility logic and added unit tests for reader and writer incompatibility to ensure correct handling of incompatible types and improve test coverage for schema compatibility
added support for associative attribute types in QueryUtils and updated related logic in QueryUtils . java to improve query handling for entity paths and enhance
updated TestSpanHandler to synchronize access to spans using synchronized blocks to improve thread safety and prevent potential race conditions during span additions
fix compiler warning : use wildcard < ? > instead of < object >
updated exception handling in ViewContextImpl to use InvocationTargetException and added debug log statements to improve error handling and provide clearer logging for authentication failures
refactor OAuth2AccessTokenEntity for improved code organization to enhance maintainability and readability of the code
updated error messages in SCBEngine , TestInvocationFactory , TestInvocationFactory , and TestInvokerUtils to remove redundant status status information to improve clarity
added two new project files for iOS data and moe resources in GdxSetup . java to support iOS image processing for iOS and
updated import statements and set a ConcurrentMergeScheduler in TestSearcherManager . java to improve merge performance and ensure thread safety during index operations
updated conditional checks in QTestUtil and improved list handling in GenericUDTFInline to enhance code robustness and prevent potential NullPointerExceptions
refactored MapIterable , FJIterate , and ParallelIterate classes to improve code readability and maintainability
fix for spreadsheet key event ( e . g . drag and drop )
hhh - 14198 fix osgitestcase . teststop ( ) to properly stop the bundle .
fix incorrect calculation of connection timeout in hikaripool . close ( )
change voicecompiler . createcomponentfile to use non - packaged - resources directory .
updated file handling to use ` File . separatorChar ` instead of ` File . separatorChar ` to ensure consistent file path handling across different operating systems
changed the return type of the ` row ( ) ` method from ` Cell < T > ` to ` void ` to simplify the method ' s
do n ' t allow port clash in rpc - http and p2p - ws port configuration . this should fail with an error message when port
added null mask functionality to WebSocketClient and updated WebSocket connection initialization to enhance flexibility in WebSocket connection masking based on null values
modified the return type of the genUDTFPlan method to a Pair < RelNode , RowResolver > to enhance the method ' s functionality
added counters for bucketed and non - preferred node selection in NodeScheduler , NodeScheduler , and TopologyAwareNodeSelector classes to track and track
added a new class ` Person ` with methods for setting and getting a name in the ` Person ` class to provide a simpler representation of the
added a boolean variable ` hasOwnerPtr ` and modified the execution logic in ` CPlatformWindow . java ` to ensure proper handling of the owner
added clock management functionality to PlaybackOverlayFragment to enhance user experience by providing a visual feedback during playback transitions
fix some sorter and spark changer not call markdirty ( ) .
updated SegmentReader class loading logic to handle SecurityException and default class loading to improve error handling and provide clearer exception messages for better debugging
do n ' t fire cell update event on edt thread
removed the DefaultInetAddressAdapter class and updated the typeHierarchyAdapter method to accept a Class parameter to simplify the adapter registration process and improve code
added methods to retrieve double , long , and string values with null checks in the Series class to ensure proper handling and validation of null values in the
updated audio time stretch option from " -- no - audio - time - stretch " to " -- audio - time - stretch " to ensure proper audio
updated boundary conditions in GeoRelationUtils and GeoUtils , along with new boundary checks in GeoUtils and TestGeoPointQuery to improve accuracy and maintain
fix finddiskoffering to use getdiskofferingid ( ) instead of getid ( )
shutdown all hazelcast instance after each test to prevent test from hang .
add more test for getinstance ( ) in aes - no - padding mode .
added a filter to print operations logs in QFileClient . java to enhance logging capabilities for better debugging and monitoring
fix aop proxy generation for type argument
fix the issue that we do n ' t set the current connection address if it be already set
replaced manual arithmetic with MathUtils ' s cappedAdd method for demand calculation to simplify code and improve performance by leveraging built - in utility methods
refactor code to use try - with - resources for ImageOutputStream and Files to ensure proper resource management and prevent potential memory leaks
replaced calls to ` TvApp . getApplication ( ) . showSearch ( ) ` with direct calls to ` SearchActivity ` in multiple fragments to
removed the ' this ' keyword from the constructor of ` SchemaCrawlerOptions ` and modified the ` toString ` method in ` GrepOptions ` to
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46187 - add osgi
added @ Autowired for PersonRepository in RepositoryIndexCreationIntegrationTests . java to enable dependency injection for the repository instance
updated exception type from Exception to InterruptedException in UIServer . java and corrected log message formatting in TestVertxUIManual . java to improve
fix checkstyle issue in blockcactus . java and add miss case to blockcactus .
refactor mouse event handling in ThemeSelector to use a dedicated MouseMotionListener to improve code maintainability and readability by encapsulating mouse
use rhs padding for multicast flow control to reduce memory footprint
added alignment parameters to the editStringAt method in IOSImplementation . java and IOSNative . java to enhance the functionality of the iOS
make sure we do n ' t throw exception if the model file be null .
added a condition to check for distinct queries in ClusterIntegrationTestUtils and modified query generation logic in QueryGenerator to ensure that distinct queries are handled correctly by
make string similarity ( ) and stringsimilarity ( ) public , and add getsimilarity ( ) method .
bug 55276 - add a comment to the code that be not useful
added a null check for children in PartitionPruner . java to prevent potential NullPointerException when children is null
added fields for token position and current position in MessagePackParser and updated the JsonLocation return statements to improve handling of JSON parsing contexts and ensure
added locale management in AbstractSolrMorphlineTestBase to ensure default locale is restored after test execution
simplified the calculation of the ` size ` variable in ` LauncherFragment . java ` to improve code readability and maintainability by eliminating unnecessary conditional
added a new file ` MetricsReporterTest . java ` to implement unit tests for the ` MetricsReporter ` class to ensure proper functionality and error handling
camel - 14284 : camel - osgi : remove unused field from osgiserviceregistry
added ` equals ` and ` hashCode ` methods to the ` Rectangle ` class to ensure proper comparison and hashing of ` Rectangle ` objects
fix flaky test in streamkafkaptest
updated DSAParameterGenerator to include additional validation for prime strength values and replaced hardcoded BigInteger values with BigInteger . ONE to improve code clarity and
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration and updated related methods to utilize it to enhance work submission
fix flaky clientoutofmemoryhandlertest ( # 11824 )
added a ` getCmoObjectId ` method to various shape classes and updated the ` setObjectId ` method to use it across multiple shapes to
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of fetching distinct post
refactored Driver , SearchTravRetLoadFieldSelectorTask , SearchTravRetTask , and SearchTravTask classes to improve code
fix ( kubernetes - client ) : remove extensionadapter from managedkubeclient
refactor subtitle and body text retrieval to use a utility method for better encapsulation to improve code readability and maintainability by centralizing
updated JUnit imports and annotations from ` @ Before ` and ` @ After ` to ` @ BeforeEach ` and ` @ AfterEach `
do n ' t throw exception when generate summary in xml
replaced multiple calls to ` intPool . reset ( false , false ) ` and ` bytePool . reset ( ) ` with a single call to
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
updated API level checks in ShadowWindowManagerGlobal to use TIRAMISU instead of S _ V2 and added a new WindowSessionDelegate
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49035 - urlhelper
added support for MSSQLDatabase in AddForeignKeyConstraintGenerator . java to ensure proper handling of " RESTRICT " on foreign key constraints for MSSQL
reformatted lambda expressions in multiple classes for improved readability to enhance code clarity and maintainability
fix emzuli pipe not work with non - neptuned item .
simonstewart : add a setter to htmlidentifier to allow the htmlidentifier to be log
updated method calls from ` getProducedTableSchema ( ) ` to ` getTableSchema ( ) ` in ` HiveLookupTableSource . java `
add a setthrowswhenusingwrongthread to the listenerset , and make sure the current thread be in the same thread .
added CatalogAndSchema import and modified schema name assignment in SequenceSnapshotGenerator to enhance schema name customization for better compatibility
updated color calculations in SpriteBatch , SpriteCache , and AlphaTest classes , and modified the SpriteBatch and SpriteCache classes to
fixed - spring data redissonconnection . join ( ) method do n ' t call getsentpromise ( ) . join ( ) method .
added logic to handle HTTP and HTTPS base URLs in SolrLoggerServiceImpl . java to ensure that statistic year cores are not duplicated
refactor ` launchTask ` methods to use ` launchTaskFromView ` instead of ` launchTask ` to improve code clarity and enforce non -
updated MorfologikFilter to improve dictionary loading and import statements to enhance code clarity and functionality by allowing dynamic dictionary loading based on resource requirements
updated sort options in GridFragment from " stars " and " critic _ rating " to " communityRating " and " criticRating " to correct the
added imports for ViewKt and ListRow , and modified visibility logic to ensure proper display of list items in the UI
refactor switch - case structure in StressAction . java to use try - finally block for better exception handling to ensure proper execution of the client
refactor HttpClient class to improve request handling to enhance performance and maintainability of HTTP requests
replaced calls to ` isCaseSensitive ( ) ` with a direct reference to ` DB2Database ` in multiple files to improve type safety and reduce
added support for jackson ' s javatimemodule in standardjavascriptserializer for java 9 +
updated import statement from ` org . apache . log4j . MDC ` to ` org . slf4j . MDC ` to ensure compatibility with
replaced TypeBearer with Type in PhiTypeResolver . java to ensure type safety during type merging operations
removed unnecessary whitespace in CoinbaseTransaction . java to improve code readability and maintainability
added a method ` getBuildTargetList ` to ` BuckConfig ` and modified the ` ProjectCommand ` to use this new method to improve target
replaced the initialization of BusySpinIdleStrategy with a new instance of BusySpinIdleStrategy to ensure proper garbage collection of the system
replaced ` ContentProvider ` with ` ContentResolver ` in multiple classes to simplify dependency management and improve code maintainability
removed redundant checks for state change events in ReportPanel . java to simplify code and improve readability
[ hotfix ] [ test ] make testinglogicalslot . slotowner non - null
added a new file ` RemoveCallsToSystemGc . java ` that implements a recipe to remove calls to ` System . gc ( ) `
removed multiple super ( ) calls from multiple exception classes and removed unnecessary super ( ) calls to streamline code by eliminating unnecessary super ( ) calls
added an overridden method to set the icon in ScaleImageLabel to ensure proper icon handling during UIID updates
rename ` foundEntry ` to ` update ` in ` FeedUpdateService . java ` to improve clarity and consistency in variable naming
added support for the " - cp " argument in the argument handling logic to enhance functionality to support both " - classpath " and " - cp "
updated the compiler configuration in the Avutil class from options to compiler to ensure compatibility with the latest version of the Avutil library
updated initialization flag in StorageService . java to ensure proper initialization state management
refactor Test7196045 . java for improved readability to enhance maintainability and clarity of the test cases
update light density and decay values in ShaderParametersLightShaft . java to improve visual effects by adjusting the density and decay values
added ` withState ` and ` stateData ` fields to ` OidcConfiguration ` and updated related methods in ` OidcRedirectAction
datajpa - 1613 - add support for unique constraint with ` ` not null ' ' and ` ` not null ' ' column ( #
added federated share checks and modified folder sharing logic in UsersAndGroupsSearchProvider and EditShareFragment to enhance user sharing control based on federated
added a method ` needsDocValues ( ) ` that always returns true in the ` TestBBoxStrategy ` class to ensure that document values are
[ java ] improve error message for unaligned buffer .
added a method ` intForEach ` to ` Int2ObjectHashMap ` for iterating over values and modified the ` SpecialisationGenerator ` and `
update scoreboardsavedata to prevent scoreboard share during multiplayer sharing
changed return type of count methods from Long to long in multiple repository classes to improve data handling consistency and prevent potential overflow issues
updated MManager . java to adjust MTree snapshot creation logic and logging messages to improve clarity and correctness of logging messages related to MTree snapshot
updated the dot product score calculation in VectorUtil and added corresponding unit tests in TestVectorUtil to improve accuracy of the dot product score calculation and ensure
added IRREVERSIBLE _ THRESHOLD constant and related methods in DynamicPropertiesStore and Manager classes to manage and retrieve the latest confirmed block number
replaced locale setting logic with a call to ` Systems . setLocale ( ) ` in ` GpsMainActivity ` and ` MainPreferenceActivity
added a condition to check if the new database was created in the LauncherClings . java file to ensure that the cling is only
refactor collection handling in BasicAclEntryAfterInvocationCollectionFilteringProvider to improve code readability and maintainability
reformatted conditional statements in Constants . java for improved readability to enhance code clarity and maintainability
added a check for the current thread in TestIndexWriterDelete . java to ensure the test only proceeds if the current thread is the same
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access and override the method
updated imports and method calls from ` apiclient ` to ` sdk ` in ` FullDetailsActivity . java ` and ` BaseRowItem .
added functionality to set XML attributes from SVG elements in BatikSVGDrawer to ensure proper handling of SVG attributes in the document
added try - catch block to handle IllegalArgumentException in ConsoleKeys . java to improve error logging for user configuration parsing failures
added a check for the " WaitForResult " extra in AndroidImplementation and CodenameOneActivity to ensure that the " WaitForResult " feature correctly handles
refactor ` PriorityQueue ` and ` HitQueue ` , ` SpanPositionQueue ` , and ` PriorityQueue ` to use ` Supplier < T > `
added widget description and visibility handling in WidgetCell . java to improve user interface by displaying widget descriptions when available
added a maximum attribute count check in the Attribute class to prevent registration exceeding the maximum allowed attribute count
move predicatestest to query . impl . predicates package so that it can be use in test .
camel - 14284 : camel - default - header - filter - strategy - add case insensitive option to defaultheaderfilterstrategy
updated inline layout calculations and variable names for clarity to improve code readability and maintainability by using more descriptive variable names
added nullability checks and updated view inflation logic in ShareUserListAdapter . java to improve code robustness and prevent potential NullPointerExceptions
removed androidPackages and instrumentingExcludeList from the Setup class and updated the shouldInstrument method to streamline instrumentation logic and ensure compatibility with Android SDK
added a condition to return the column count if the association is insert destination before the source to ensure the correct column count is returned when the source is
updated CmdModifierTest to use a new method for retrieving the memory limit file based on the Cgroup version to improve flexibility in managing memory limits based
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` in ` AbstractCxxDeps .
added a null check for the source under test in JavaTestRule . java to ensure that the source under test is not among its dependencies before proceed
fix a crash when try to load the proxy for the minecraft 1.10 . x version .
added a check to set the index to 0 in StringUtils . java to ensure that atIndex is never negative to avoid potential errors
increased timeout duration from 100 milliseconds to 500 milliseconds and increased sleep duration from 1000 milliseconds to 5000 milliseconds to allow more time for test execution to complete
updated TaskOverlayFactoryGo constructor to include AssistContentRequester as a parameter to enhance flexibility in managing assist content requests
updated the method for creating and checking the witness address in VoteWitnessProcessor . java to improve clarity and correctness in handling the witness address
updated DefaultMethodRegressionTests . java to improve test coverage to enhance reliability of method regression testing
fix typo find by codespell on fossies . org
updated KafkaException import from ` KafkaProducerException ` to ` KafkaException ` to ensure compatibility with the latest Kafka exception handling
added a call to close the loader in DesktopGeneratorController to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and corresponding test cases in FaultTolerantExceptionClassesTests to enhance exception handling and
[ samza ] include beamjobcoordinatorrunner and beamcontainerrunner in error message
added an extraProperties parameter to multiple methods in TableConfigTunerUtils and related classes to enhance flexibility in configuring tuner configurations
added a check to prevent adding segments in in - progress instances to improve efficiency by avoiding redundant segment additions
added a condition to return null if touchable is disabled in Table . java to ensure that the method does not return null when the touchable is
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to ensure that pre
throw a retryable exception when cache config have not be create yet
refactor npm installation logic in JSweetTranspiler and add node package installation check in ProcessUtil to improve clarity and functionality of module installation
added ManagedObject and ManagedOperation annotations to MBeanContainer and Destroyable classes to enhance monitoring capabilities for MBeans and operations
updated conditional check from ` if ( settings . inAppBrowser ) ` to ` false ` in LongClickableSpan . java to ensure proper handling of
( chore ) camel - jbang : use ` . equals ( string ) ` instead of string . equals ( string )
updated the isReifiable check in mmm Types . java and added new classes T6558559a . java and T6558559
updated print statements in WorldEditListener to include position information to improve clarity of player input messages and enhance debugging information
camel - kafka : shutdown the consumer executor on shutdown .
removed the default implementation of the ` examples ( ) ` method in the ` Schema ` class to simplify the code and improve maintainability
modified thread termination logic and added break statements in AgentRunner . java to improve clarity and control flow in timeout handling logic
remove the time column from the dataset and its result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper management of time columns in the
simplified the null check for shards in FacetComponent . java to improve code readability and maintainability
replaced the use of ` LinkerProvider ` with ` CxxPlatforms ` in ` RustBinaryDescription . java ` and ` Rust
added a private String field ' name ' with getter and setter methods in multiple authentication properties classes to improve the accessibility and encapsulation of the
make sure we do n ' t crash if we ca n ' t connect to the igv
refactor scan range hint handling in BaseQueryPlan and add a new configuration for small scan threshold in QueryServices to improve code readability and maintain
added routeId and exception details to the RetryGatewayFilterFactory ' s toString method to improve clarity and context of the output for better debugging
linereaderimpl : do n ' t write the last binding to the buffer when redisplaying .
replaced multiple instances of ` onOverviewShown ` with ` DiscoveryBounce . showForOverviewIfNeeded ` across multiple files to streamline the overview showing
refactor conditional checks for globalMinPackedValue and size in CheckIndex . java and add a new test for deleting all point documents in TestPoint
updated the publish method ' s parameter from ' true ' to ' updateLastState ' in ZkController . java to improve clarity and functionality of
updated SQL string formatting in MetastoreDirectSqlUtils . java to improve readability and maintain consistency in string concatenation syntax
added a null element to the exp list in SpliteratorCollisions . java to ensure proper handling of collisions in the code
simonstewart : add text condition to make it case insensitive
replaced multiple instances of ` do ` with ` while ( true ) ` in ` ManyToManyConcurrentArrayQueue . java ` to improve code readability
no effective change - forward - only fetch size for mysql and mysql
[ java ] ignore closedchannelexception in httpservermultiplexchannelhandler .
pdfbox - 4892 : set initial arraylist size to avoid arrayindexoutofboundsexception
updated window radius calculation in QuickstepAppTransitionManagerImpl . java to support rounded corners to improve visual consistency and flexibility in window decoration
refactor Background handling in DesktopTaskView to use View and LayerDrawable instead of PagedOrientationHandler and update method visibility to improve code clarity and
refactored the instantiation of ` UpstreamCheckService ` in ` UpstreamCheckServiceTest . java ` to improve code readability and maintain
updated log level from warn to debug for session immortal messages in AbstractSession and AbstractSessionManager to improve logging clarity and reduce unnecessary warning messages
updated ZooKeeperHiveLockManager to return the locks array instead of throwing an exception to improve error handling by returning the locks instead of
[ hotfix ] fix checkstyle violation in core module
added a boolean flag to control texture mipmap generation based on custom data to ensure mipmap generation occurs only when custom data is present
use single quote instead of double quote for password / passphrase test
added selectable property and methods to manage selection state in the List to enhance user interaction by allowing selection of items when no items are selected
removed a condition that checks if the first field vector value count is zero in LlapArrowBatchRecordReader . java to simplify the logic for handling
updated PolicyContext to include file separator handling and improved test cases for file separator expansion to enhance debugging capabilities and ensure correct file separator handling
change the type of ` flatQueries ` and ` expandQueries ` from ` Set ` to ` List ` in ` FieldQuery . java ` to
refactored TLSRestrictions class for improved readability to enhance maintainability and ease of understanding for future developers
refactor Kafka producer closing to use a Runnable for asynchronous execution to improve resource management and prevent potential null pointer exceptions
updated the ` assertNodeStateProvider ` method to accept a ` String ` parameter and modified its implementation to include an ignorableNodeValues parameter to enhance
added functionality to delete the " LOCK " file in the RocksdbMavenPomCache to ensure proper cleanup of cached artifacts
use inetSocketAddress for standalone server in minizookeepercluster
added a new method ` getResponse ` to handle web service connection and logging to improve error handling and logging for web service connections
updated the method call from ` new String [ ] { ... } ` to ` toArray ( new String [ 0 ] ) ` for converting segment URI
updated loginStudent calls to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to
added a null check for ` mCurrentItem . getItemId ( ) ` in ` EnhancedBrowseFragment . java ` and ` StdBrowse
updated the number of strings in TestSpecialOperations from 500 to 100 to improve test accuracy and performance
remove private method from wkbattributeio and use it in hextohex ( )
corrected the method name from ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity and consistency in naming conventions
added a method to check if a transition is a direct substate and updated state checks accordingly to improve state management logic by preventing direct transitions from
added comparison logic for ListMultimap and SetMultimap in MultimapSubject and corresponding tests in MultimapTest to ensure proper equality comparison between ListMultimap and
added JoinOperation interface to PostJoinOperation class to enhance functionality by allowing post - join operations
added a new test method ` testDataIssue258 ` in ` AdditionalPostgreSQLTest . java ` to verify the functionality of Post
http : / / issues . apache . org / jira / browse / amq - 5035 - add test case for async close subscriber
refactor AvaticaDatabaseMetaData to improve code organization to enhance maintainability and readability of the code
changed numeric values for lifeTime , idleTime , and maxWaitTime from int to String in MongoDbConnectionPoolProperties and MongoDbConnectionFactory to
do n ' t cast null to mediaformatfactory in sdputils # createaudiomediaformat
refactor filter handling methods to return a boolean indicating success or failure to improve clarity and functionality of the filter processing logic
added a timeout feature to the ShuffleHandler to allow users to enable or disable timeouts during idle state transitions
replaced hardcoded value of - 1 with a constant QUICKSTEP _ ROTATION _ UNINITIALIZED in OrientationTouchTransformer .
camel - 14284 : improve logging and deprecate old method in xquerybuilder
refactor : move dataresource to a separate class to avoid reflection
add test case for edge case tokenizer ( # 1751 )
added a check for the presence of the " atlas " property in the map and threw an exception if it is missing to ensure that the map
camel - 14284 : camel - core - remove propertyplaceholdershelper since it be not use anymore
[ hotfix ] remove unused code in kafkatest
refactored line handling in CoreMarkdownNodeRenderer to use a new method for splitting lines to improve code readability and maintainability by centralizing
[ int - 1334 ] fix test case that break the build .
refactor SQLBindings to use unmodifiable lists instead of ImmutableList . Builder to improve performance and simplify binding handling
added a check for the " OpenJDK " Java VM in the VirtualMachine class to ensure compatibility with OpenJDK environments
added a keepAlive ( true ) method to the ReactorClient configuration to ensure the reactor connection remains alive for better resource management
replaced string literals with ShaderProgram constants in MD5Renderer , ObjLoader , and ObjLoader classes to improve code readability and maintain
camel - 14284 : avoid reflection when look up the property component from registry .
refactor account retrieval logic in UnfreezeBalanceActuator . java to improve null safety by checking for null before accessing the account capsule
update version number to 3.28 . 1 ( alpha )
replace references to ` t ` with ` unannotatedType ( ) ` in multiple locations to ensure proper handling of unannotated types
updated assertions and added sequence TsFileSize handling in StorageGroupProcessorTest . java to improve test clarity and ensure correct processing of TsFile
added Environment as a parameter to the dumpObjects method and introduced a method to retrieve all environment values to enable better management of environment - specific configurations
added a parameter ` waitbeforestart ` of 2500 to the ` FFMpegVideo ` class to ensure that the video starts before
removed the ` skipCorrupt ` boolean parameter from the constructors of ` OrcEncodedDataConsumer ` and related classes to simplify the constructor and eliminate
updated JUnit imports and modified test methods in AccessorsTest . java and TestListIndex . java to improve test coverage and ensure correct
added framemap getter to lirgenerator to make it easy to get framemap
updated test imports and annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use ConditionalIgnore and RunningContinuousIntegrationCondition
fix the boat ' s y - coordinate not match the block ' s y - value
updated the ` toString ( ) ` methods in ` Directory ` and added a ` getLockID ( ) ` method in ` RAMDirectory `
removed the method ` allowExperimentalOptions ( ) ` from the ` allowExperimentalOptions ( ) ` method to simplify the conditional check for experimental
added two overloaded methods for asserting paths and components in BDDAssertions . java to enhance the flexibility and usability of assertions in the
refactor variable names from ' hp ' to ' hostField ' for clarity and consistency to improve code readability and maintainability by using a
updated logging level from debug to warn for missing Kubernetes config file message to provide clearer guidance on how to configure Kubernetes
added upload status handling in FileUploadService and UploadListActivity to improve file upload management and user experience during uploads
added a new file ` ProviderLoader . java ` and refactored ` TerminalManager . java ` to use a wrapper class for loading security providers
replaced instances of ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and ` StreamEnvironmentPostProcessorTests ` to standard
updated the ` SelectFromDatabaseChangeLogStatement ` to use a computed column configuration instead of hardcoded values to enhance the flexibility of database change
hhh - 14165 - fix schemaupdatetest failure on oracle
fix divide by zero error in partition per member count calculation .
added scheduler state checks and error handling in ExecutionScheduleManager and its related classes to ensure the scheduler is only started if it is currently available to improve
refactor conditional statements in BoxBuilder . java for improved readability to enhance code clarity and maintainability
reformatted checkArgument calls in StatisticMap . java for improved readability to enhance code maintainability and clarity
updated the return value of getStagedRectSlideEnd method from 383 to 500 to adjust the slide end duration for improved user experience
updated string resources in WaveInfoDialog and PlacementFragment to use localized values instead of hardcoded strings to improve maintainability and ease of understanding
updated condition in ` BukkitMain . java ` to include ` plotArea ` in ` KILL _ ROAD _ ITEMS ` check
added touch exploration enablement functionality to ShadowAccessibilityManager and updated listener handling in ShadowAccessibilityManager to improve touch exploration state management and ensure compatibility with different
pdfbox - 5328 : improve performance of cmapsubtable . getunicodecmap ( )
use getname ( ) instead of getpropertyasstring ( ) to simplify code
use poifs . create ( ) instead of npoifs . close ( ) in testnpoifsfilesystem
added PlotArea imports and modified plot retrieval logic in Move . java to enhance functionality by allowing retrieval of plot objects based on specified arguments
updated regex pattern for version matching in TestWebHCatE2e . java to ensure compatibility with versions starting with 9
updated the boundary check for the ` count ` variable in ` Filters . java ` to ensure that ` count ` is within the valid range of
fix clientid in kafka consumer processor ( # 6383 )
added error handling for failed javac execution in JavacCompiler . java to ensure proper error reporting when the javac execution fails
do n ' t repaint the list when there be no selection
camel - spring - batch : fix typo in springbatchproducer
added a method ` isAnimationFinished ` to check if the animation is finished based on the current frame duration to provide functionality for determining if the animation
updated import statements in LoginMockMvcTests . java and added a new test method for custom favorite icon with line breaks to ensure proper functionality and validation
added a null check for ` otherUrl ` in ` TimeLineCursorAdapter . java ` and modified the refreshing text in ` HomeFragment .
fixed an issue where a comma in the name of a value could lead to a space in the name of a value .
refactor ObjectHashSet class for improved performance to enhance efficiency of hash set operations
refactor equality checks for arrays and simplify null checks in DataUtilities . java to improve code readability and maintainability
allow for deletion of enchanted book , mc - 12770 allow for deletion of enchanted book
profile : add unit test for async http request / put / get / put / put / get / put / put / get / put / put
updated header map suffixes and methods from " target - flat " to " target - user - headers " to align with user - specific naming convention
added handling for SendFailedException and improved logging messages in MailService . java to enhance error reporting and debugging capabilities for email sending failures
rename ` resetTaskItemView ` to ` resetToEmptyUi ` and introduce a constant for empty labels in ` TaskItemView ` to improve
added unit tests for retrieving partitions by name and batch size in TestHiveMetaStoreClientApiArgumentsChecker . java to ensure correct functionality of partition
added a closing brace to the FileListListAdapter class to improve code readability and maintainability
changed ArrayList to List for the ' sharees ' field in OCFile . java and OCFileListAdapter . java to ensure compatibility with
updated the index used to remove a view from the last child in BubbleBarView . java to correct the view removal logic to ensure proper view
removed unused imports for " org . eclipse . jetty . websocket . util . server . internal " in JavaxWebSocketConfiguration and JettyWebSocket
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46165
fix jfxradiobutton not update when the timeline be null .
updated the condition for checking the length of splits and added an exception for zero splits in the DeweyNumber class to ensure proper error
refactor categorySet string handling in MwVolleyApi . java to ensure proper formatting of category names to improve clarity and prevent potential issues with
updated assertions in WebSocketClientTest to remove redundant " close control status code " to ensure consistency in test output
added a null check for the classLoader in WebappLoader . java and updated assertions in TestVirtualWebappLoader . java and TestVirtualWebapp
refactor : remove redundant code in persistentattributetransformer . getpersistentfields ( )
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` to validate the functionality of the ` PorterStemFilter ` to ensure that the ` Porter
added a success parameter to the postBatchMutate and postBatchMutateIndispensably methods to ensure that updates are only written when the operation is
corrected the package name from ` exlore . support ` to ` explore . support ` in multiple test files to align the package structure with
fix concurrentmodificationexception in chatwindowmanager . close ( ) .
removed duplicate Sys . touch ( ) calls across multiple Java files to streamline code by eliminating redundant calls to Sys . touch ( )
updated HgCmdLineInterface to include " - mardu " command and modified the untrackedFiles method implementation across multiple interfaces to enhance functionality
camel - 16284 : camel - netty should use netty timer from producer . getendpoint ( ) .
added ' final ' modifier to fields in DirectionalLight , PointLight , and SpotLight classes and updated clamp logic to enhance immutability
updated width and height retrieval in X11GraphicsConfig and WGLGraphicsConfig to ensure minimum width and height are set to 1 to avoid potential errors
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` , ` DelegatingSecurityContextRunnable ` , and ` DelegatingSecurity
added a new ` AnnoFilterTreeSet ` class and modified ` findClassesThatExtend ` methods in ` ClassFinder ` to handle inner classes
updated the overflow handling logic in BytesColumnVector to ensure that integer overflow occurs and maximizes the size of the next smallBuffer to prevent potential overflow
fix flaky test writebehindmapstorewithevictionstest
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI ` and
geofunction : add polyfunction . isequal ( ) to check if two polys have the same degree
added a null check for the table before accessing its column class to avoid potential NullPointerException when the table is not initialized
added a try - catch block around the instantiation of CustomChange to handle potential ClassCastException during class instantiation
updated ` DistBuildConfig ` to use ` BuckConfig ` instead of ` ConfigPathGetter ` and added methods to retrieve whitelist paths to improve
change default value of key _ use _ double _ entry to false ( instead of default value )
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to a broken test case
modified the ` doJoin ` method to return a boolean indicating success or failure in both ` JoinTemplate ` and ` JoinWorker ` classes to enhance
removed the method ` getAutodeps ( ) ` from ` JavaLibraryDescription . java ` to streamline the code by eliminating unnecessary functionality
added FLAG _ ACTIVITY _ NEW _ TASK to intent flags and adjusted intent addition in LauncherTimelineCursorAdapter . java to ensure proper intent
fix : add query . checkpageorderby ( ) to spiquery
updated assertions in RepositoryConventionPluginTests to check for the correct Maven artifact repository URLs to ensure that the test verifies the correct repository URLs for
add a new affiliation task for the pubsub cluster . jm - 133
use uri . normalize ( ) instead of requestutil . normalize ( ) to handle invalid uris
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes and
refactor CacheKey to use Array . get for array - based object updates to improve performance and maintainability of cache key management
updated DefaultFileTypeDetector to use FileSystemProvider for file type detection across multiple filesystem providers to enhance file type detection functionality across different filesystem implementations
added a call to close the WebSocket session in TestWsWebSocketContainer to ensure proper resource management and prevent memory leaks
updated ShadowVirtualDeviceManager to use reflector for VirtualSensor and VirtualSensorDirectChannelCallback instead of ShadowVirtualDeviceParams to improve code clarity and
added a condition to check if the context is not changed before executing the session in HttpSessionSecurityContextRepository to ensure that the session does not remain unchanged
refactor loopback address retrieval logic in NetUtil . java to handle loopback and point - to - point addresses more effectively to improve accuracy in
updated variable names and logic in Zlib . java for consistency and clarity to improve code readability and maintainability by using a more descriptive
added secure validation and retrieval method checks in KeyInfoReferenceResolver , XMLSignatureInput , and ResolverLocalFilesystem classes , and simplified exception handling in the
added a check for icon change listener installation before setting the icon action listener to ensure icon change listeners are only updated when the icon is initialized
added Russian language support to the Language class to enhance localization support for Russian users
hhh - 13276 use nanosecond instead of second for duration type conversion
disable verifying of frame state verification in substrategraphkit .
added system property resets for enabled SDKs , resourcesMode , and resourcesMode in RobolectricTestRunnerTest to ensure tests are clean up
added system class " org . slf4j " to the web application context and verified its class loading behavior to ensure that the LoggerFactory class is correctly
added a check for " jar " in the ChangePackaging class and implemented a test for removing the default packaging in ChangePackagingTest to ensure
fix flaky test : use file . download ( withextension ( " txt " ) )
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to clear buffer data
refactor JogService and related classes to use preferredUnits instead of defaultUnits for unit management to improve clarity and consistency in unit handling across the
adjust test to account for daylight saving time .
reformatted return statement in Terminator . java to improve code readability and maintainability
improved error messages in FileSystem . java and DistributedFileSystem . java to provide clearer context for invalid file URIs to enhance clarity and understanding of
make showtrackingnotification run in 1 minute instead of 1 minute
( chore ) camel - ftp : use awaitility instead of thread . sleep
changed the implementation of KeyedProperties from ConcurrentHashMap to ConcurrentSkipListMap to ensure thread - safe access to the KeyedProperties class
added ` ignore ( Throwable ignored ) ` method to multiple log classes to provide a way to notify when a Throwable is ignored during logging operations
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerExceptions during task execution
removed unnecessary casting of damage to byte in BukkitWorld . java to improve code clarity and reduce unnecessary type casting
remove unnecessary image cleaning in PanelManager to improve performance by avoiding unnecessary processing
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for directory management and unmapping to enable efficient data storage and unmapping of the Solr directory
added null check for ` ic ` before creating ` cleanUpColor ` to avoid potential ` NullPointerException ` when ` ic ` is null
updated the parameter in the assertion from ` field1 _ s ` to ` field1 _ s ` in ` QueryEqualityTest . java ` to
refactored the ExtendedOperatingSystemMXBeanImpl class to improve code readability and maintainability
added ` installLeftCommands ` method to ` SideMenuBar ` and modified ` rightCommands ` initialization to handle left commands more effectively to improve the flexibility
added a ` advanceWindowed ` property and conditionally called ` setUpWindow ( ) ` in multiple activities to control the windowing behavior based on
added SybaseDatabase check to the conditional statement in DropPrimaryKeyGenerator . java to ensure compatibility with SybaseDatabase alongside existing database types
refactor Client class to improve code organization to enhance maintainability and readability of the codebase
[ java ] reset the lastrecordingposition when the leader be ready .
replaced invalidate ( ) method with setCellLayoutPressedOrFocusedIcon ( ) and added shouldDelayChildPressedState ( ) methods in multiple classes to
added a return statement to prevent further processing in the NearCachedClientMapProxy class
updated package - info . java files for mmm and ppp to improve documentation clarity and maintainability of the code
added a method to shutdown the HTTP server in a try - catch block to ensure graceful handling of exceptions during server startup
update to camel - aws2 - s3 - add support for stream upload
[ hotfix ] [ webmonitor ] remove hardcoded parameter to taskmanagershandler
fix 226 - to 227 db upgrade error due to key that do n ' t exist
added a new test class ` TestThriftCLIServiceSecurity ` and modified ` TOpenSessionReq ` to include password validation to ensure that the password
added maxEnergyLimit variable and updated energyLimit assignment logic in VMActuator . java to ensure energy limits are correctly set based on constant calls
added maxInMemorySize property and its getter / setter methods in HttpClientProperties . java , and updated webClientPlugin constructor to accept HttpClientProperties to
refactor caching logic in Cache . java to improve performance and reduce memory usage
added new CucumberTest , RunCucumberOptions , and StepDefinitions classes for Cucumber testing to enhance test coverage and ensure C
updated TypeJsonUtils to handle JSON parsing for double values and added new test cases for array operations to ensure correct handling of NaN , infinity , and
removed duplicate bytes from the buffer in Utf8StringBuilderTest . java to streamline the code and improve readability
added a check for parameter sets in Params . java and updated path handling in RestInvocationHandlerTest . java to improve parameter handling and ensure correct
camel - 13636 : camel - circuit - breaker - load balance : limit the maximum number of output to 1 .
updated the assertion in TestIndexWriterExceptions to use the maximum buffered documents instead of a hardcoded value to ensure the test correctly verifies the
replaced calls to ` String . toString ( ) ` and ` putUnencodedChars ( ) ` with ` Sha1HashCode . update ( hasher
added static methods for enum value , int , and long values in AsmRuntime . java to improve code clarity and maintainability by standardizing enum
added new biome tags for IS _ WET , IS _ HOT _ OVERWORLD , and IS _ DARK in For
remove async image loader thread , use executor service for request image
changed access modifiers of fields and methods in BaseTableUpsertMetadataManager to protected and refactored preloading methods to improve encapsulation and
updated Japanese and Chinese locale codes to replace "  " and "  " with "  " and "  " in multiple
[ java ] use hasimageequals instead of image . equals in abstractsunsecurerule .
camel - jbang : add -- repos option to run command
added handling for NaN scores in CrawlDbReader . java to improve performance by avoiding unnecessary processing of NaN scores
added cleanup method in OnStartupTriggeringPolicyTest to ensure temporary files are deleted after tests to improve resource management and prevent potential memory leaks
fix focus issue with filter condition editor
[ hotfix ] [ checkpointing ] make checkpointcleaner non - blocking
added a new file ` XPathWhiteSpaceTest . java ` that implements XML schema validation to facilitate testing of XPath whitespace characters in XML files
fix a bug where trieloglayer be not override when rollback be enable
updated the FilledNewArrayInstruction class to improve array initialization logic to enhance performance and maintainability of the code
added timeouts to the @ Test annotation in SimpleNetworkTest . java to ensure tests have sufficient time to complete before proceeding
updated the method to check if the parent path ends with a slash instead of a substring to ensure correct path handling for file paths
added a print statement to indicate the failure of loading the skin file to improve debugging by providing feedback during skin file loading failures
added markDirty ( ) and isValid ( ) methods to LgoGroupedLevel2BatchSubscription and LgoGroupedLevel2Update classes to
added a static final Result . UNDEFINED constant to the Result class and updated its usage in TestStep to improve code clarity and maintainability by central
updated assertions in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure proper handling of null pointer exceptions during the registration process
change uploadjobmultipartoperation to implement identifydataserializable ( # 155 )
[ flink - 13636 ] [ runtime ] improve error message when recovery fail .
bugfix : do n ' t ignore child of node in vertical node layout
modified the ` pos ` and ` sizeMask ` fields in ` DataOutput2 ` and added a new method ` ensureAvail ` to improve
added @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest to temporarily disable tests that have failed due to cruelty to animals
refactored the assignment of targets to use subList instead of a fixed size to simplify the code and improve performance by reducing unnecessary variable assignments
updated the declaration order of parameters in FileManager . java to improve code readability and maintain consistency
refactor TransformFunctionType to use string representations for addition , subtraction , and other functions to improve code readability and maintainability by
added getSimpleName ( ) , getEnclosingElement ( ) , and getEnclosingElement ( ) methods to VariableElement to enhance the functionality of VariableElement by
updated RFC references from " RFC3280 " to " RFC5280 " in multiple Java files to ensure consistency in date formatting across the codebase
fix classcastexception for char type in recaf .
replaced ` HashMap ` with ` SparseBooleanArray ` for selected items in ` ListActivity ` and ` NoteAdapter ` to improve performance and memory management
refactor conditional statements in DirectUpdateHandler2 . java for clarity to improve readability and maintainability of the code
updated path handling in ConfigFileApplicationListener to use ResourceUtils for URL - based path validation to improve code readability and maintainability by utilizing
updated PreviewPositionHelper initialization to accept a Context parameter and modified its usage in TaskViewSimulator and TaskThumbnailView to improve compatibility with multi -
[ java ] remove redundant publication of record log timestamp for newleadershipterm
pmdcoveragetest : make assertion more robust
updated the logic for skipping bytes in ByteArrayInputStream and added a new Skip class with test cases to improve accuracy of skipped byte counting and ensure correctness
reformatted conditional statements in UpdaterTask . java for better readability to improve code clarity and maintainability
change the visibility of MAX _ HEADERS from final static to public static and add a conditional check for block headers size in Peer . java to allow
added " rt . jar " to the list of standard libraries in ModClassLoader . java to support additional library types in the application
removed unnecessary code and simplified connection handling in AbstractHandshakeHandler . java to improve code readability and maintainability
updated method signatures and configurations to use constants for heterogeneous Granules and heterogeneous parameters to improve code
added a check to ensure the response is committed before sending an error in HttpChannel . java to avoid sending an error when the response is already committed
updated conditions in HttpSession . java for better clarity and efficiency to enhance code readability and maintainability by simplifying conditions
updated fade - out behavior in HomeGestureTutorialController and added feature flag handling in SwipeUpGestureTutorialController to improve animation
fix : do n ' t log unknown prefab
updated the handling of external groups to include " internal . superuser " and " internal . superuser " to streamline group membership management and improve
updated spacing in FreezeBalanceActuator . java and added a validation check in TransferActuator . java to ensure that the minimum amount
updated lastIndexOf method to use File . separator instead of a hardcoded ' / ' to ensure consistent file path handling across different operating systems
do n ' t show input help panel if it ' s not need
updated GpsMainActivity to retrieve the session description instead of an empty string and modified AnnotationViewFragment to use EventBus for command events to improve
update jsoupnonvisualregressiontest to avoid test failure
add androidnativebufferallocator and deprecate androidbufferallocator in favor of androidbufferallocator
added handling for flag names that start with " ! " in multiple classes to ensure proper validation of flag names and their corresponding values
added a comment to clarify the purpose of the ResultSet variable in JDBCHistoryCache . java to improve code readability and maintainability
updated comparison from ` equals ( " ITEM _ USE _ GRANT _ SELECT _ REWARD " ) ` to ` equals ( ITEM
updated QueuePriorityTest to create an expected list of PriorityElement instances and added a toString method to PriorityElement to improve test accuracy and provide clearer
update affinityapiunittest to use createaffinitygroup instead of createaffinitygroup
added a null check for the command in Main . java and modified the condition to include HELP option to ensure that help information is printed when the
updated LightOutputStream initialization parameters from 7 to 4 across multiple files to optimize memory usage and enhance performance during light operations
changed the visibility of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a new boolean variable ` showBlank ` and updated conditional logic in ` ClassWriter . java ` , while introducing a new class ` T80
added an assertion to check the length of the sn parameter in the Person class to ensure that the sn parameter is correctly validated before proceeding
added null check for file extension before checking against exclusions to improve robustness by preventing potential null pointer exceptions
change return statement to continue in ContactRightButtonMenu . java to improve control flow by allowing further processing
[ java ] fix checkstyle violation in slotsharinggroupassignment
simplified the loop logic in InstallShortcutReceiver . java to improve code readability and maintainability
refactor binding and closing logic in PlainSocketImpl to utilize delegate ' s FileDescriptor to improve resource management and ensure proper closure of socket connections
added functionality to manage removed media items in BookmarkListRootFragment and MediaDetailPagerFragment to improve user experience by ensuring only relevant media items are
updated log message to clarify that offsets are from the element ' s center point instead of the center of element to improve clarity and accuracy of log output
added a new file ` bug4865918 . java ` to implement a GUI test for the ` JScrollBar ` to address bug 48659
kerberos : use velocity instead of velocityengine in kerberosoperationhandler
updated import statements and added group trigger handling in QuestCommand . java to improve code clarity and ensure proper handling of group triggers in the game
move gnucash file chooser to account activity to allow user to select account file .
added Lombok ' s @ ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to improve object representation for better debugging and logging
updated the configuration URI in the CloudService to use a constant from the CloudService class to improve code readability and maintainability by centralizing the
remove setviewport and setjscrollpane ( ) from the browserpanel so that it do n ' t interfere with the viewport .
added KEYCODE _ FORWARD _ DEL for handling key events in LwjglInput . java and updated ParticleEditor . java to
added a configuration option to conditionally retrieve MIME type parts based on configuration to improve flexibility in handling MIME type parts based on configuration settings
added author regex pattern and modified conditional logic in JSDoc . java to include author information to enhance documentation clarity by including author information in comments
updated metrics constant names for database and table operations in MetricsConstant . java and modified metrics verification in TestMetaStoreMetrics . java to enhance clarity and
updated HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and SchemaConfig for improved schema retrieval to enhance flexibility in
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` for query parameters and added error handling
updated Hijrah calendar name to " Hijrah - umm al - Qura Calendar " and modified DateTimeFormatter to include Locale . US
added a condition to check if the browser is not IE and not Firefox to ensure compatibility with audio formats in both IE and Firefox
added a method to append a ServerInterceptor to the GrpcServerBuilder class to enable the addition of interceptors to the server builder
updated SQL table creation statements in TestCompatibility . java and added default charset for tables to ensure compatibility with the latest database schema and improve database compatibility
[ hotfix ] [ table - common ] remove redundant allocateoutgoing in streamingaggtemplate
[ hotfix ] [ runtime ] fix typo in executiongraph
added a boolean flag ` hasFrom ` and related methods to ` Delete ` and ` DeleteDeParser ` to conditionally append the " FROM "
updated synchronization logic to distinguish between multi - status and non - multi - status files to improve error handling and ensure proper synchronization of multiple files
refactor applicable test checking to use a utility method in RecipeScheduler . java to improve code readability and maintainability by encapsulating
updated regex pattern in LogAnalyser . java to allow optional colons in timestamps to improve parsing accuracy of log lines
( chore ) camel - spring - integration - maven - plugin : enable google cloud integration test
fixed - rsearch . findbyscore ( ) and rsearch . findbyscore ( ) method return incorrect result
remove ` ` select change ' ' option and add ` ` no license ' ' option
added a null check before adding global ID to guidIndex to avoid potential NullPointerExceptions when the global ID is not set
updated comparison logic in OptionalAssert to use a custom comparison strategy to improve comparison accuracy by using a more appropriate comparison strategy
fix issue where the last margin be not be set when a paragraph have no newline or no newline
added a new file TestArrayCopyToFromObject . java that contains a test class for array copying to ensure that the ArrayStoreException is thrown
replaced instances of ` \ " \ " " with ` PythonString ` in Python path handling to ensure compatibility with Python syntax for pathlib , watch
fix bug in ajp / ajpnio / ajp / ajp / ajp / socketstate . closed
allow craftinghelper . findfiles ( ) to be visit by default
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to temporarily disable the test case due to instability
[ hotfix ] [ test ] add null check to testinternalinputbuffer
refactor autoloadCall method to accept a lowerName parameter and manage locks more effectively to improve class loading efficiency by allowing multiple locks for
removed server version comparison logic from CustomPlaybackOverlayFragment and PlaybackController classes to simplify code by eliminating unnecessary server version checks
replaced hardcoded " localhost " in principal keys with a dynamic hostname resolution to ensure correct resolution of localhost in the KDC
added a boolean flag for ` jsr250AttributeFound ` and updated return logic in ` Jsr250Voter . java `
updated import statements in MP4Parser . java to include additional boxes for improved parsing functionality to enhance code clarity and ensure all necessary components are included
added a new constant for HS2 proxy user and modified session parameter formatting to enhance security and clarity in session parameter output
camel - 14284 : camel - hdfs - add support for snappy compression in camel - hdfs
added a 1 - second sleep in the HttpClientTest class to ensure proper synchronization during test execution
patch from peter lenahan to fix bug # 49050 - correctly handle multi - cell array formula
updated glyph positioning logic in GlyphLayout and modified text in BitmapFontTest to improve glyph positioning and enhance test coverage for AGWlWi
[ istio ] make sure istio be not hardcoded to ' istio '
replaced calls to ` ReportPlaybackStartAsync ` and ` ReportPlaybackProgressAsync ` with calls to ` TvApp . getApplication ( ) . get
fix potential memory leak in simpleauthority . readproperty ( )
maploader : do not evict evicted entry on initial load ( # 11858 )
change the bitwise operation from ` & ` to ` | & ` in the return statement to correct the logic for handling error flags
add more output to fixdefaultpolicies to help debug the issue
added caching for CompositeFont instances in FontUtilities to improve performance by reducing redundant calculations
updated the calculation of prefHeight in Tree . java to eliminate unnecessary height adjustments to simplify the calculation logic for better readability and maintainability
drools - 102 fix dmn feel validation error message ( # 113 )
removed unused imports and updated method signatures across multiple Java files to improve code clarity and reduce potential runtime errors
changed method visibility of ` finishRunningRecentsAnimation ` from private to public and updated execution method to use ` MAIN _ EXECUTOR
added null checks for node IDs and modified node value parsing in ImportContainerImpl and ImporterGDF to ensure node IDs are valid and
[ beam - 10226 ] log drop unknown response instead of throw exception ( # 10246 )
nifi - 1146 : fix wrong flowfile creation when bin be large than bin limit .
replaced the method of finding the closest core to use Mathf . dst2 instead of Geometry . findClosest to improve accuracy in finding the closest core
added a check to skip copying content - length in RestTemplateCopyHeaderFilter and created a test for it in TestRestTemplateCopyHeaderFilter to
added case handling for CLASS and CHAR in Java2TypeScriptTranslator and updated assertions in SyntaxTests to improve literal processing and enhance testing coverage for export
updated channel bandwidth calculations and preferred sizes in FilterFactory , ChannelizerViewer , and PolyphaseChannelManager classes to improve filtering efficiency and align channel
hbase - 12113 canary : add - allregions option to specify whether to try all region on a regionserver
remove node . environment from cassandra connector and testcassandraconnector
added a call to reset the cursor position in KahaDBStore to ensure the order index is properly reset before further operations
fix a problem in the one - to - one call when the call window be too small .
fix lose of state information in blockfalling . close # 1611
make testhttpsamplersagainsthttpmirrorserver static , so that it can be run multiple time .
added null checks and updated entity removal logic in KerberosPrincipalDAO to improve robustness and prevent potential NullPointerExceptions during entity cleanup
removed the ' true ' parameter from the call to ` AcidUtils . getTableSnapshot ` to simplify the method call by eliminating unnecessary parameters
do n ' t swallow exception in aprendpoint . poll ( ) , just log it .
updated the error message for the licenseKey validation in AndroidGradleBuilder . java to provide clearer guidance on using the Monetization setup and
updated the method to use ` getDisplayName ( ) ` instead of ` getName ( ) ` in ` FileTranscodeVirtualFolder ` and removed unnecessary methods
[ drools - 3523 ] fix package name for boot - inf . classes in kiebuilderimpl
added an assumption to CheckIndexTest to exclude tests running on features 19 and above to ensure compatibility with newer runtime versions
removed the context parameter from the assignTargetsForSplitScreen method and updated related logic in AbsSwipeUpHandler and RemoteTargetGluer to simplify method
[ hotfix ] fix typo in leaderlatch javadoc
added methods to initialize zk - SNARK parameters in SolidityNodeHttpApiService to enhance functionality for managing zk - SNARK parameters
move depth calculation into transactionconfidence . getdepthfuture ( ) to make it thread safe .
added a method to create media recorder and renamed variable names for clarity to improve code readability and maintainability by standardizing naming conventions
set default platformName to " ios " to ensure platformName defaults to " ios "
refactor PageEditClient to improve code organization to enhance maintainability and readability of the code
fix checkstyle issue in util / graphics2d . java
refactor CreateVisibleSignature class for improved clarity to enhance code maintainability and readability
added error handling around the ` nextOutgoingFrame ` method in ` AbstractExtension . java ` to ensure proper logging and callback execution when exceptions occur
replaced the use of AccessController with PrivilegedAction for classloader checks in ContextHandler . java to improve security by utilizing privileged actions for classloader checks
added logic to update the parent of child feed categories based on their IDs to ensure that the parent of child categories matches the current user ' s
add ` ` update ' ' , ` ` library ' ' and ` ` mode ' ' / ` tool ' ' / ` library ' ' to
added a new BigDecimal parameter ` vwap ` to the ` Ticker ` constructor and updated related methods to include it to enhance the Ticker
updated SearchAndRecommendationsScrollController and WidgetsFullSheet to include a new TextView for no widgets and adjusted bottom inset handling to improve user
added rendergraphapi to make it easy to add node to the screen .
set the color of the NCFirebaseMessagingService using the primary theme to enhance visual consistency with the primary messaging theme
updated ShadowUsbManagerTest . java file to improve test coverage and maintainability
add log for evaluation and average absolute difference recommendation
added a call to update the selected configuration in Rocket . java to ensure the selected configuration is properly updated before use
updated calculations in AndroidGraphics to ensure width and height are at least 1 to prevent potential errors with negative dimensions
replaced instances of HashMap with LinkedHashMap across multiple classes to maintain insertion order to ensure consistent iteration order and maintain insertion order
replaced ` ClosureManager ` with ` ClosurePool ` and updated related method calls to improve closure management and enhance code clarity
migrate camel - test - java to junit 5 and make it compatible with late version
added new files ` WebsocketIngressIntegratedBootstrap . java ` and ` WebsocketPluginTest . java ` to implement and test the WebSocket
remove obsolete test for servicemanagertest . testgetservicebynameconfig ( )
refactor authentication equality check into a new method ` isAuthenticationEssentiallyEqual ` to improve readability and maintainability of authentication comparison logic
added a conditional check for the JNDI ffi compile property in X86MethodGenerator . java to ensure compatibility with different JNDI compilation
replaced instances of ` callNode . getType ( ) ` with a local variable ` callNodeType ` to improve code readability and maintainability by reducing
added a new ` Insecure ` annotation and refactored ` MessageBuffer ` to use it to enhance security by preventing the use of potentially sensitive
added several configuration variables in HiveConf . java to enhance the configuration options for Hive operations
initialized scopes and policies with a HashSet and added a null check in DefaultResourceSetService to ensure that scopes and policies are not null to prevent potential
made the ` decrefOnClose ` field final and modified the ` MultiReader ` constructor to accept a ` Collection < ReaderFinishedListener > `
updated multiple Java files related to asynchronous socket channel implementations to improve code consistency and maintainability across the socket channel implementation
simonstewart : refactoring the test to use setvalue instead of sendkeys
remove $ gson $ types . getfirsttypeargument and use reflect . getfirsttypeargument instead
changed return types of keySet ( ) and values ( ) methods from Set < Integer > and Collection < Integer > to KeySet and Collection < Integer
added a duration parameter to the FlipTransition class and updated related methods to allow dynamic configuration of the background color and animation duration
removed trace logging for invalid subtitle settings in DLNAResource . java to simplify code and improve readability by eliminating unnecessary logging
bump version to 10 for the new release .
replace System . err . println with LowLevelLogUtil . log for warning messages related to non - multi - release JARs in StackLocator
add java 16 parser and parser support for java 16
updated background padding logic in ExpansionViewHelper . java to ensure proper padding based on the number of replies
fix partitionbackupreplicaantientropytask to call onresponse if there be no callback
added metadata functionality to SeedUrl and SeedResource classes to enhance the application ' s ability to store and retrieve additional seed information
added a null check for the declaration before creating a new Pattern to avoid potential NullPointerException when the declaration is null
refactor TestCoprocessorWhitelistMasterObserver to improve code organization to enhance maintainability and readability of the code
ww - 3934 add package name to action config name when validate
updated assertions in IterableTest to use explicit type casting and added a new test for handling null values to enhance type safety and improve test coverage for
added stream methods to ` MapIterable ` , ` PrimitiveObjectMap ` , and ` MapIterableTest ` classes to enable enhanced functionality for stream operations
change return statement to clone notifInfo instead of returning it directly to ensure the original object is not modified when returning it
do n ' t check for ` ` null ' ' command when check for ` ` null ' '
refactor AEADBlockCipher class for improved readability to enhance maintainability and clarity of the codebase
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` WebVariablesMap ` , and ` WebVariablesMap ` classes
added a null check for resource ID in PackageResourceTable . java and changed the default resource mode from best to legacy in RobolectricTestRunner
added a condition to check if ` ulSize ` and ` ulPos ` are zero before fetching and setting underline metrics to ensure proper handling of
refactor SignPlugin to accept a list of message readers as an instance variable to improve flexibility in managing message readers
refactor Int2ObjectCache class for improved performance to enhance efficiency of object caching operations
do n ' t check for mavendeployer in standardmavenauthenticationprovider . setvalidation ( true )
refactor AudioNode class for improved readability to enhance maintainability and ease of understanding for future developers
added SSL context initialization and logging for SSL exceptions in LinkyHandlerFactory and updated cookie store retrieval in EnedisHttpApi to improve SSL security
refactor HiveFunctionRegistry to use Streams and improve function name handling to enhance code readability and maintainability by using modern Java features
resolve http : / / issues . apache . org / jira / browse / amq - 4237 - fix the object name format
updated the parameter name in ` getBuildTargetForAlias ` to use ` possiblyFlavoredAlias ` and modified the logic for extracting the build
camel - odata2 : do n ' t call getresultsprocessed for empty odatafeeds
added a constant for equivalent Hive versions and refactored version retrieval logic to improve code readability and maintainability by centralizing version comparison logic
server : fix typo in advanceexpunge method
added @ Deprecated annotations to multiple methods in AbstractDateAssert . java to indicate that certain methods and classes are outdated and should not be used
updated alarm handling in ONDashClockExtension and AlarmReceiver to use an alternative title for notes to enhance user experience by providing more descriptive
updated test cases and column types in GoogleAuthUserConfigTable and TotpEndpointIntegrationTests to improve test coverage and ensure correct validation of column types
replaced ` commit ( ) ` calls with ` apply ( ) ` in multiple Java files to standardize the method for marking first run cling dismissed
added an ` TestIdleListener ` class to the ` StandardSession ` constructor in ` AsyncTimeoutTest . java ` to enable the use of an
add test _ id to bigqueryioit # testgettestbigquerytable ( )
added background resource and reset functionality for icons in HotseatPredictionController and BubbleTextView to improve visual feedback by removing unnecessary background resources
mondrian : fix a typo in the mondrian property name .
add test for ` ` select * from system . runtime . * ' ' and ` ` select * ' ' system query
fix LIMEExplanation to handle the case where all outputs are present in the model to improve accuracy in retrieving active features based on prediction results
add -- r option to apple simulator to run with - r
refactor code to use a generic styled area for position calculations to improve code readability and maintainability by reducing method calls
added checks for the state of the manager before processing it in ContainerBase and StandardContext classes to ensure that the manager is only available when it is
added clipping to outline for the background of QsbWidgetHostView to improve the visual appearance of the background in the widget
added time tracking and logging for flag processing in SQLManager , PlotArea , and PlotTypeListFlag classes to improve performance monitoring and provide clearer
fix a bug in floatingtextrenderer that cause the gl _ depth _ test to fail
rename linux - > linux to be consistent with other nfi backends .
updated the propagation behavior in JdbcAggregationRepository to use a configurable value instead of a hardcoded value to improve flexibility and maintainability of the code
add support for l1 / l2 / l1 / l2 regularization to the layer configuration .
added exception handling around read and write methods in AbstractChecker . java to improve robustness by logging exceptions during connection operations
changed the visibility of the colorStack variable from static to instance to allow instance - level access to the colorStack array
updated method calls from ` false ` to ` true ` in ` getMappedStatement ` and ` hasStatement ` to enable additional functionality for statement retrieval
convert the parameters of ` getDepth ` to lowercase in ` BTCEPollingMarketDataService . java ` to ensure consistent data formatting for depth retrieval
updated the expected values in ChannelStateTests for the mqtt value assertions to ensure accurate representation of channel state values
removed the ` versionedHashes ` field and its associated getter method from ` EnginePayloadParameter ` to simplify the code and eliminate unnecessary parameters related to
set trigger price to an empty string and notify ontriggerpricetextfieldchanged ( ) when the price be change
refactor conditionals in StudentFeedbackSubmissionEditSaveAction . java to improve code readability and maintainability
removed debug print statements from I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 12213 addendum addendum addendum addendum addendum
# 118 - fix entitybeanintercept . setmanyproperty ( ) and entitybean . setloadedproperty ( ) . setchangedproperty (
added a new boolean field ` _ alwaysSaveUri ` and corresponding getter and setter methods to the FormAuthenticator class , and modified the session attribute check
added new methods ` nSetLayerType ` and ` nSetLayerPaint ` to enable layer type and paint functionality in ` ShadowRenderNode `
updated import statements in LWChoicePeer . java to use wildcard imports and added popup menu visibility handling to improve code clarity and ensure popup menu
make stressprofile case - insensitive by make it case insensitive
replaced direct calls to ` JavaConversions . asScalaIterable ` with ` collectionAsScalaIterable ` in ` ExamplesJavaTestWrapper
add more logging to help track down test failure
added warning log for properties file loading failures in DefaultEnvironment . java to improve error handling and visibility for property file loading failures
refactor the initialization of the SessionDataSet to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added multicast support check in SetOutgoingIf . java to ensure proper handling of network interfaces based on their capabilities
modified the initialization of the ` sqlCommand ` string to include a length parameter to ensure proper handling of command parameters during string construction
updated methods in UnDelegateResourceActuator , BandwidthProcessor , and EnergyProcessor to use the latest consume time from the head slot to ensure
added a method to set an invalid session strategy in SessionManagementConfigurer to enhance flexibility by allowing a customizable invalid session strategy
updated the error message in FailedSerializationError to include additional context about the token ' s empty and known labels to improve debugging by providing more context on
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the functionality of ` MapAssert ` to ensure that the ` containsKey
replaced instances of ` stgen ` with ` psgen ` in ` JdbcProxyGenerator . java ` and added a new interface ` JDBC4Temporary
added a ` ensure ` method to ` ServerWebSocketContainer ` and updated ` DirectUpgradeTest ` to use ` Handler ` instead of ` ContextHandler
replaced ImmutableMultimap with ImmutableListMultimap in CxxFlags . java to ensure consistency in data structures used for language flags
pdfbox - 4892 : remove unnecessary type conversion , add null check
replaced the initialization of the hooks array with a static final EMPTY constant in Method . java to simplify code and improve performance by using a single instance of
added a boolean flag ` grantAccess ` to the ` MockAuthenticationManager ` class and updated the ` MockAuthenticationManager ` to conditionally return the
updated the ` afterJob ` method to accept a ` JobExecution ` parameter across multiple classes to enhance functionality by allowing the job execution context to be
updated file permission check in SharedLibraryLoader to ensure both writable and executable files are writable
[ te ] update protoc to v3.15 . 3 : update protoc to v3.15 . 3
rename sampleresult to sampleevent so that event can be unmarshalled
added new constants for battery level , annotation , time offset , and profile name in BundleConstants . java and updated CustomUrlManager . java to use
use map instead of hashmap in searchexpression . applyrule ( )
use absolutescreenlocateable instead of widget in euclidiancontroller ( move )
updated the resize method and texture filters in ProjectiveTextureTest . java , and modified texture parameters in Stage and Container constructors in ProjectiveTexture
refactor setResourceToDelegate method to return a File object instead of void to improve resource management and ensure the output file is writable
camel - 14284 : fixed property intercept uri pattern to not contain colon in the uri .
updated the condition in ActionScheduler to use ' greater than or equal to ' in the time comparison to ensure correct behavior of time comparisons in action
updated dbg _ zip initialization to use a temporary directory and added null check for debug _ log to ensure proper file handling and prevent potential NullPointerException
update notification overlay to hide the hidden flag instead of the hidden flag .
add a resetgate ( ) method to the pipe class to make it easy to reset the gate state
added Locale handling in TestSupplementary . java to ensure locale is restored after execution to improve resource management and prevent potential memory leaks
updated the random value in the Team constructor from 0.5 to 0.4 to improve the randomness of the Team color for better visibility
replaced Set with Collection for activeMatchedStates and updated logging statements accordingly to improve performance and ensure logging only occurs when logging is enabled
updated the condition in the ` SoftAsserts ` class to check for ` annotation = = null ` instead of ` annotation ! = null ` to
improve error message for invalid json and unrecognized property in storage plugin
refactor call tree csv generation in calltreeprinter to use a dedicated method
added null checks and improved note handling in DetailFragment . java to enhance code robustness and prevent potential NullPointerExceptions
added peakTasks tracking and adjusted loading calculations in AssetManager . java to ensure accurate loading of assets based on the peak tasks
simonstewart : enable native event for the firefox driver on window .
added customization for score and fetch interval in Injector . java to improve flexibility in handling different fetch interval formats
updated import statements from org . apache . commons . collections to org . apache . commons . collections4 in ScimExternalGroupsTypeResolving
updated null check in CoreContainer and added isShareSchema method in TestCoreContainer to improve code robustness and add schema sharing functionality
updated method calls to use ` sizeInBytes ( true ) ` and modified size calculations in multiple classes to ensure accurate representation of segment sizes and
updated assertions in VersioningTest to check for null values instead of specific ones to improve test reliability by ensuring no null pointer exceptions are thrown
updated SQL query to include optional handling for domain columns and added tests for non - null domain columns to enhance data integrity by ensuring domain columns are not
[ java ] simplify logic for append new leadership term event in consensusmoduleagent .
removed the method ` buildMediaType ` from ` WebClientPlugin ` to streamline the code by eliminating unused imports
updated method names from ` fillUsingLengthPrefix2 ` to ` fillSlice ` across multiple classes to improve clarity and consistency in byte filling operations
updated AcidUtils logic for handling compacted transactions and added a new test for major table compaction after iow and major table compaction
updated null checks for immutableStorageScheme and qualifierEncodingScheme in PTableImpl . java to ensure proper initialization and avoid potential NullPointerExceptions
added new classes ` PojoProducersCustomized ` and ` RestProducersCutomized ` along with existing ` PojoProducers `
replaced hardcoded string " cache " with a constant CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve code read
[ aes - gcm ] remove duplicate registration of aesgcmsivprotoserialization . register ( )
added replacement for the wooden slab in OreDictionary to enhance the functionality of the OreDictionary
refactor multiple classes related to session management and session handling to improve code organization and maintainability across session management components
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` UndefinedSymbolsLinkerScript ` to simplify the class hierarchy by
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 14146 fix test failure on oracle
updated the spriteBatch drawing position in HelloWorld . java to correct the positioning of the sprite batch
refactor y - coordinate calculation and string concatenation in PlayerFunctions and PlotId classes to improve code readability and maintainability by using consistent formatting
added a deprecated static final Version constant for Lucene version 8.6 . 0 to indicate that this version should no longer be used in favor of a new
updated print statement format in SSLSocketImpl . java for clarity to improve readability of log messages for better debugging
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to validate SQL parsing and deparsing functionality for
refactor dependency type handling in CoNLLUOutputter to use SemanticGraphCoreAnnotations . DependenciesType instead of String to improve code clarity and
refactor methods in ` NoSuchBuildTargetException ` and ` ParseContext ` to streamline error handling for missing directories and files to improve code clarity and
replaced the method call from ` testFromMain ( ) ` to ` test ( ) ` in the ` MyChild ` class to simplify the test
updated the initialization of ` configBlocks ` from an array of length to a dynamic capacity to optimize memory usage and improve performance during block iteration
updated logging statements and modified version checks in BukkitMain . java for clarity and functionality to enhance user understanding of server versioning and support for paper only
updated SQL statement escaping logic in AbstractSQLChange and added a test for escaped question operators in AbstractSQLChangeTest to ensure proper SQL generation for escaped
added overloaded ` ofAll ` methods to ` MutableBagFactory ` , ` MutableBagFactoryImpl ` , and ` withAll ` methods to
pdfbox - 2576 : add support for page - shortname and page - permalink attribute
mqtt : do n ' t allow clientid to be specify in mqttconnection2 constructor
updated the way the change set is retrieved by using the root change log to ensure a valid change log is used to avoid potential null pointer exceptions
removed unnecessary instantiation of MethodResult in StaticMethodInterceptor and streamlined response body handling in RocketMQGlobalPluginHandler to improve code readability and
added HiveMetaStoreClient to drop a database in TestHiveMetaStorePartitionSpecs and enhanced logging in TestObjectStore to improve database management
added a new parameter " order _ currency " to the BithumbAuthenticated and BithumbAccountServiceRaw classes to enhance functionality by allowing order currency to
remove ssefluxwebconfig . java ( it ' s not use anymore )
updated method return type checks from ` getReturnType ( ) . getFullyQualifiedName ( ) ` to ` getReturns ( ) . isVoid ( ) `
refactor Yaml _ READER to Yaml and add a new REST endpoint to list YAMLs to improve code clarity and enhance functionality for fetching YAML
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to restrict access to the methods
refactor thread factory implementation to use a lambda expression and encapsulate await termination logic to improve code readability and maintainability by reducing boilerplate
added unit tests for adding elements to a list in MongoTemplate and created a new PersonWithAList class to ensure proper functionality and functionality of the
ggb - 224 fix for size ( ) when resize applet panel .
replaced direct visibility settings for toolbar with a delayed execution using a Handler to improve UI responsiveness and allow for longer UI updates
[ iotdb - 4063 ] fix the bug of overlap check time series reader
server : do n ' t save password if vm be n ' t run on router
set the ` usingOutputStream ` , ` usingWriter ` , and ` isCharacterEncodingSet ` to false in the ` Response ` class to ensure
added a warning check for assignment side effects in GroupDialog to improve user experience by preventing unintended side effects
refactor JSON and JSONObjectConvertor classes for improved readability to enhance maintainability and clarity of the codebase
updated the comparison in FileUploadApiController to use maxWidthWithMargin instead of maxHeightWithMargin to ensure the correct maximum size is calculated for icons with
refactor JwtTokenCipherSigningPublicKeyEndpoint to use JcaPEMWriter for encoding and writing public keys to improve code readability and ensure proper
added content type and content type checks in Basic . java to enhance error handling and provide clearer output for expected and actual content types
upgrade netty version to 1.1 . 2 and fix a couple of test failure .
added a new utility method ` doesClassLoaderDescendFrom ` in ` Util . java ` and modified its usage in ` MethodHandles . java `
removed the ` doConnect ` method parameter from the ` doConnect ` method in both ` ChannelProvider ` and ` ProxyChannelProvider ` to improve
added a method to start the output field in TextReader and created a test for handling empty final columns in TestCsvHeader to ensure that the CSV
added compass gravity settings and margins in NearbyMapFragment . java to enhance visual appearance and layout of the map
added a new test method ` testInterpolation ` to validate interpolation values in ` GeoPathTest . java ` to ensure accurate distance calculations for different rad
added HiveException handling to the getLeafFilterBuilderByType method and improved error messaging in ParquetFilterPredicateConverter to enhance error management and provide clear
added language setting logic for video stream type in LibMediaInfoParser to ensure correct language handling for audio tracks
added a warning log for schemas in new versions and improved formatting in MicroserviceRegisterTask . java to enhance visibility into schema changes and ensure compatibility
replaced manual resizing of array items with a utility method ` addAll ` across multiple array classes to improve code readability and maintainability by reducing redundancy
reformatted try - catch blocks for better readability in DataSourceProxy . java to improve code clarity and maintainability
added null and empty checks for registrations in InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to ensure that null or empty registrations are
added a method to reset the UI state in SchemaUpgradeHelper to ensure the application correctly reflects the current state of the cluster
added a failedStep flag and modified conditional logic in JUnitReporter to handle both ignored and pending exceptions to improve error reporting and ensure proper handling of
fix playerselector not allow . in entity selector
implement Closeable interface in Selector class to enable resource management for better resource management
updated MaxConcurrentStreamsTest to use MultiplexConnection for connection pooling to improve performance and resource management during concurrent stream operations
added multiple calls to stringType ( ) in CoreOptions . java to enhance type safety for string operations
updated HqlQueryRenderer to handle character and parameter processing based on context properties to improve token processing accuracy and align with new naming conventions
updated status handling in HttpGenerator , HttpChannel , HttpConnection , and StatisticsHandler to use HttpStatus . NOT _ SET _ 000 and modified HttpStatus
pdfbox - 2576 : fix outputintent and outputintent object type check , a suggest by valerybokov
remove h2 : h2 : / / hikaricpcollector . java h2 : / / test / hikaricpcollector .
refactor ParquetFormatPlugin and ParquetGroupScan to utilize expandSelection for file selections and update metadata handling logic to improve file selection
updated the Java compilation success detection logic and added error handling in Jsr199Javac . java to improve error handling and ensure proper compilation
added a baseModelListener to the DefaultSortedTableModel to notify listeners when the table changes
updated the validation condition for the POSITIVE value in ServerConfig from 49152 to 65535 to ensure the number is within the valid range for server
added support for notification of document provider authority in AuthenticatorActivity , AccountRemovalJob , and DocumentsStorageProvider to ensure compatibility with newer Android versions
removed the call to startLogging in MainApp . java to streamline logging process and improve performance
refactor exception handling in FilterChainProxy to utilize ThrowableAnalyzer for better error handling to improve robustness by ensuring wrapped RequestRejectedExceptions are
updated StringBuilder ' s arraycopy method to use ' this . length ' instead of ' length ' to ensure correct copying of lengths during array copying
pdfbox - 4071 : check for empty filter list before call decode ( )
added a new file ` TbStopWatch . java ` that extends ` StopWatch ` to provide functionality for managing stop time and task execution time
fix checkstyle issue in io / pliststore / pliststore . java
added @ Deprecated annotation to multiple classes and log a warning in ContinuationFilter . java to indicate that the Servlet version is now deprecated and should use
[ zeppelin - 5170 ] fix classloading issue in interpreter server
fix classcastexception when check if source be an instance of serverplayer
updated minSdk version from P to O _ MR1 in ShadowRttCallTest and ShadowCall to ensure compatibility with newer Android versions
corrected variable name from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to improve code
# 161 - add simple name to bean descriptor ( # 162 )
fix ( frontend ) : add sass - only / sass - only / sass - import to frontend
added a new test method ` showLatestTimeseriesTest ` to the ` IoTDBMetadataFetchIT ` class to validate the functionality of showing
corrected the spelling of " appContextLocation " to " contextConfigLocation " across multiple test files to ensure consistency and accuracy in the naming
updated exception handling in OCSPChecker to check for CertPathValidatorException to improve clarity and maintainability of exception management
add writeoutputsolutionenabled to benchmarker so that it can be disable by default .
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` for testing the slicing functionality of the ` SortedTableMap ` Sink ` to
add a shapeless recipe to the recipe for the slime craft
mahout - 202 : fix index out of bound exception in sequentialaccesssparsevector .
added functionality to manage owner plot metadata for Shulkers in BukkitMain and EntitySpawnListener to enhance entity management and ensure proper handling of ownerplot
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide access to debug
added import statements and refactored MAX _ DIR _ NAME _ LENGTH and MAX _ FILE _ NAME _ LENGTH methods in IOHelper
added a check for the presence of a tag in UpToTagChangeSetFilter and implemented the isSeenTag method in UpToTagChangeSetFilter to
[ hotfix ] [ runtime ] use arraylist instead of linkedlist in dofnfunction
http : / / issues . apache . org / jira / browse / amq - 4063 - fix typo in brokerroutingmanager
updated volume and upPaint values in CandlestickRenderer . java to use GRAY and GREEN colors instead of gray and green colors to improve
replaced ` FrameLayout . LayoutParams ` with ` LayoutParams ` and added support for ignoring insets in ` InsettableFrameLayout ` to improve layout consistency
added a new parameter ` duration ` to the ` BuildTargetDurationListener ` and updated related tests to include the ` duration ` parameter to enhance the
updated profile annotations to use System . getProperties ( ) instead of Spring ' s Profile annotation to ensure tests are only executed when the expected database profile is
added a null check for the user before processing claims in OAuthConfirmationController to avoid potential NullPointerExceptions when the user is not initialized
added fromendpoint support to camel - test - support
use nonblockinghashset instead of concurrentset for statement set . patch by stu hood ; review by jbellis for cassandra -
api : add the ability to list public ip by source network id in listpublicipaddresses api command
added unit tests and implemented the ` isIgnoringBatteryOptimizations ` method in ` ShadowPowerManager ` to ensure accurate functionality of battery optimization management in
update version retrieval from ` __ buildProperties ` to ` __ buildProperties ` to ensure the correct version is retrieved from the build properties
added unit tests for verifying invocation counts and verification order in NumberOfInvocationsInOrderVerifierTest . java to ensure correct behavior of verification logic
tregex : do n ' t debug unmatched regex result in tregexexecnode
added foreground mode to start profile in process to enhance user experience by allowing foreground mode for profile creation
replaced ` executor ` with ` executorLauncher ` and ` executorCloser ` for better clarity and functionality to improve code readability and ensure proper resource management
replaced ` Map < String , String > ` with ` String [ ] ` for ` parseFieldnames ` to simplify the code and improve performance by
updated logging to use the file name instead of the file object in CodeEditorView . java and added checks in EditorTextActionWindow . java to
updated the logging of skipped entries to include exception messages to improve debugging by providing more context about the skipped entries
refactored Fetcher and FetcherMain to use LuceneStorage for storing documents to improve code organization and maintainability by consolidating related functionality
updated the populateBubble method to include an existingBubble parameter and adjusted related logic to improve bubble management and ensure proper color adjustment based on existing bubbles
route policy : do n ' t log a warning if no start / resume time be specify
refactor ` buildRpcExt ` method to accept a single ` Method ` parameter instead of an array to simplify method calls and improve code readability
[ java ] : use optimalmulticastdelaygenerator for feedback when receive message .
updated Gson initialization and added JSON properties for client details in ClientInformationResponseView . java to improve client information handling and ensure proper serialization of client details
added a condition to check if the field amount is greater than zero before setting the average price to ensure that the order ' s average price is only
removed the ` rawExecutionReports ( ) ` method and directly subscribed to ` executionReportsPublisher ` to streamline the subscription process for
added a fail method to handle exceptions and modified timing logic in ReadServerTimeoutTest . java to improve error handling and ensure proper timing control during timeout
do n ' t crash if the installed / installed folder do n ' t exist .
updated password handling logic in AmbariServerConfigurationHandler and adjusted test expectations in RootServiceComponentConfigurationTest to ensure proper handling of password store aliases
added segment parsing checks in ParseSegment . java and a new method in SegmentChecker . java to ensure segments are not parsed multiple times to improve performance
[ hotfix ] [ yarn ] make application attempt failure validity interval configurable in yarn
do n ' t fail startup if h2 driver be not include
hbase - 25836 set default scan readtype in tablesnapshotinputformat for snapshot - based inputformat
added fixedHeight and fixedWidth properties with their respective getters and setters in LoginInstanceRequest . java to allow configuration of fixed dimensions and width
added a corner radius parameter to several methods in ActivityControlHelper , WindowTransformSwipeHandler , ClipAnimationHelper , and LauncherLayoutListener to
[ flink - 16458 ] [ table - planner - blink ] add filter for cross product table and table
refactor connection handling in TxnHandler to support retries based on a connection pool to improve reliability by allowing retries when the connection pool is full
added txncheckreserve ( ) and txnpreparebackupreserve ( ) to queuecontainer , and add txnpreparebackupreserve ( ) to
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class to store character arrays for better functionality
updated SQL DELETE statements to use client SELECT syntax and added a new test class for explain functionality to improve SQL query performance and ensure proper handling of client
do n ' t retry socketexception if there be insufficient data to be write
added a new parameter for rapidInstallTypes in multiple classes and updated related methods to allow specification of the types of rapid installations for improved functionality
updated the regex pattern for the ` - srand ` command in ` SortTest . java ` to allow for optional digits in the seed selection
refactor MultimapSubject and MultimapSubject classes to improve clarity and consistency in handling multimap entries to enhance code readability and maintainability by
simplified the return statement in the workspace logic to simplify the logic for determining the vertical position of the hotseat
do n ' t auto - transcoding if we do n ' t have any mediaitem
added localization for strings and values in the Picker class to ensure that all strings and values are localized
camel - 14284 : camel - cxfrs - do n ' t swallow exception from exchange . getexception ( )
mondrian : fix for ` ` 40p01 ' ' and ` ` 40p03 ' ' in postgresqldialect
updated database query ID handling in TestJdbcDriver2 . java and modified visibility annotations in HiveStatement . java to enhance robustness by ensuring queryId
add usesunboundedpcollections category to the usesunboundedpcollections test
updated HTML formatting in GpsSimpleViewFragment to remove unnecessary dependency on preferenceHelper to improve readability and maintainability of the code
[ java ] remove leadershiptermid from joinlogasfollower method in serviceproxy .
refactor HttpSender to use a private HttpExchange instance instead of calling getHttpExchange ( ) directly to improve code clarity and encapsulation
[ hotfix ] migrate failoverstrategycheckpointcoordinatortest to junit5
updated method names from ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` to improve clarity and
added null checks and improved marker handling in Recipe , Markers , and SearchResult classes to enhance robustness and prevent potential NullPointerExceptions
use bigdecimal instead of float for font size in xwpf run
change the type of ' email ' from String to String [ ] to allow handling multiple emails instead of a single email field
refactor exclusion handling in RawMavenResolver to streamline the process of adding artifacts to the exclusions set to improve code clarity and maintainability by
added error handling and currency pair validation in DSXAdapters , DSXPairInfo , and DSXBaseService classes to improve robustness and
[ hotfix ] [ table - planner - blink ] fix typo in test file name
[ drools - 90 ] use default release id for incremental build if no pom be specify
updated the initialization of ` copy ` and added a check for ` sobj . has ( k ) ` before defining properties in ` NativeArray `
fix typo find by codespell on fossies . org
do n ' t throw unknownidentifierexception when call methodhandles . findstaticgetter ( ) and methodhandles . findset ( )
added a new method parameter for ` CompletionStage ` in ` DefaultNullnessAnnotations . java ` to enable the handling of ` CompletionStage ` in
updated the calculation of mFreezeCheckPoint from 9000 to 10000 to adjust the freeze threshold based on playback duration
removed unnecessary imports and added Whitebox ' s internal state setting in AbstractCommonPowerMockRunner and PowerMockRunner to streamline the code by eliminating
updated the method call from ` typeCode ` to ` realType ( ) ` in ` AnyImpl . java ` to ensure the correct type is
updated indentation logic for method invocations in TabsAndIndentsVisitor . java to improve indentation handling for method invocations
replaced LuceneTestCase with TestCase in TestSingleTokenTokenFilter to simplify test implementation by using a more appropriate test framework
add wrap text to the end of the report so that it do n ' t interfere with other report .
refactor JdbcStepExecutionDao , MapStepExecutionDao , and SimpleJobRepository to utilize ExecutionContext for managing execution contexts to improve code
added a condition to check if the media folder should be hidden before adding a child to ensure that the child is only added when the configuration is shown
added null checks for the actor parameter and implemented removal logic for first and second widgets to improve error handling and ensure proper removal of widgets based on their
added handling for JavaType . Parameterized in RemoveUnusedImports . java to improve type management by ensuring only valid parameterized types are processed
fix npe in uniquemodlistbuilder when there be no mod file
changed the logger declaration from instance - level to static in TicketGrantingTicketImpl . java to ensure the logger is a static instance of 
updated SQL string to include the RLE . 81 + 12 datatype in the timeseries creation to ensure compatibility with newer timeseries specification
added a method ` isValue ( String value ) ` in ` AttrData . java ` and modified exception handling in ` Converter . java ` to
added checks for character keys in US International PC locale and modifier keys in CPlatformResponder . java and LWCToolkit . java to ensure proper
[ java ] set aeron _ publication _ connection _ timeout in ctestmediadriver .
added a check to return false if the request URI starts with " / css " , " / images " , or " / favicon " to
added assertions to verify the success of the wellbeing test APK installation to ensure the device is rooted when the installation process fails
ignore testqueryforupdate , testqueryfindpagedlist , and testqueryfindpagedlist on oracle
updated assertions to expect a length of 3 for secure transport protocols in TestSimpleBodyHandler and TestVertxTLSBuilder to ensure tests reflect the
updated test paths for Java libraries in DiffRuleKeysScriptIntegrationTest . java to ensure compatibility with the latest version of the Java library
added a boolean flag ` mIsDismissHapticRunning ` and modified the condition for dismissing the touch controller to ensure that the dismiss h
add projectile source to mixineventworldexplosion cause
added ` setHasStableIds ( true ) ` and overridden ` getItemId ( int position ) ` method in ` SymbolInputAdapter ` to
updated query parameters in Bitfinex . java and changed limit _ bids and limit _ asks from 10 to 50 in BitfinexPollingMarketDataService
added a check to replace single quotes with double quotes in the result string to ensure proper handling of special characters in the output
added a ` toString ` method to ` KubernetesLeaderElectionDriver ` , ` ZooKeeperLeaderElectionDriver ` , and corresponding
refactor SqlSessionFactoryBean to improve code organization to enhance maintainability and readability of the code
refactor ( tripleinvoker ) : remove unnecessary reflection from tripleinvoker
replaced error logging with throwing a GdxRuntimeException in PolygonRegionLoader . java to improve error handling by throwing exceptions instead of logging errors
added a method ` isStarted ( ) ` to the ` Deadline ` class and modified timer registration logic in ` RawStoreProxy ` to ensure
improve error message for closedchannelexception in nettyrequestexecutor
updated genre retrieval logic in ItemListActivity to handle null values to improve robustness by preventing potential NullPointerExceptions
[ flink - 23211 ] [ runtime ] add a test for resetting checkpoint in region recovery
fix entitydatajsonformat to handle collection of mappedcontainers .
[ iotdb - 4069 ] fix walnode cost of active memory table
fix the issue that handler . handle ( ) be call twice on the same host on callback failure
[ truffle - tutorial - background ] fix typo in package - info . java
added a new test class SQLServerEscapeQuestionCharacterTest to validate SQL query functionality to ensure proper handling of question characters in SQL queries
fix npe in camel - jooby bean repository when use spring bean
replaced synchronized block with Util . wait in JavaFXSEPort . java to simplify wait logic and improve code readability
updated the package of ParameterFlags from ` com . kenai . jaffl ` to ` com . kenai . jaffl
do n ' t load regiondecoder bitmap when load regiondecoder image .
removed the appName parameter from the configure method and related calls to simplify method signatures and improve code readability by eliminating unnecessary parameters
[ gr - 36969 ] add test for ignore dependency in uninstall and install
[ java ] replace setheadless ( true ) with addarguments ( )
updated the value assignment in VersionedValue to use intern ( ) method to ensure proper memory management and avoid potential memory leaks
added support for " MOVE " status in the connection check to enhance functionality to support moving operations in the database
updated ISO8601 _ MONTH _ DAY _ YEAR2 _ TIME and ISO8601 _ MONTH _ DAY _ DAY _ YEAR4 _
replaced import of org . apache . curator . shaded with com . google . common . collect . Lists in multiple Java files to simplify dependencies
[ hotfix ] remove unnecessary check in hsbuffercontext . startspilling ( )
added a permission check for untrusted visits in the Visit . java file to ensure that untrusted visits are only allowed for untrusted
do n ' t start jabber if it ' s already register .
updated the condition in BasicURLNormalizer to include curly braces and added a new test for curly brace normalization to ensure proper handling of cur
changed access modifiers of methods in QuickstepTransitionManager from protected to private to enhance encapsulation and restrict method access
added a comparison check for clock rates in the EncodingConfiguration class to ensure correct handling of clock rates between two encoders
added a method to get the project path in ProjectGenerator and modified the return type of generateProjects in SeparatedProjectsGenerator to return
updated the handling of zero digit setting and calendar ID retrieval in HostLocaleProviderAdapterImpl . java to improve code clarity and ensure valid calendar IDs
added a new file ` MSwingUtilities . java ` with utility methods for image scaling to provide a utility class for handling image scaling issues in the
camel - mail : make it possible to use async callback to send message in the same thread .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enable dynamic refreshing of authentication settings
added unit test base on user forum issue
added two new Java files , Main . java and ScriptRenderer . java , to implement and implement script rendering functionality for the application
added a condition to check if ` _ inputState ` is ` __ NONE ` in ` MimeTypes . FORM _ ENCODED ` and
updated glyph descent calculation and added isDescendant method in Group class , modified touch focus handling in FlickScrollPane , SelectBox , and Flick
replaced direct failure reporting with context close hooks in DeploymentManager and added a test for context shutdown in DeploymentTest to ensure proper handling of context shutdown hooks
fix lexicon recipe not be ignore in some case .
increased the sleep duration in ConstantTimeBackoffTest from 100ms to 500ms to allow for longer wait time after interruption
updated import statements and added a null check for shortName in LoincHandler . java to improve code robustness and prevent potential NullPointerExceptions
do n ' t use url . getresource ( ) in jollydaydays . java
added a new file ` FieldUtils . java ` to provide utility methods for field access and modification in the security framework
removed conditional check for speculative type in DeferredAttr . java and added a new class DoubleStaticImport . java with a test method to simplify assertions and
updated the layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added default padding for widgets to ensure the custom content
update xabber account state when invalid token be save .
added a new method ` setvar ` to handle setting variables with command - line help to enhance usability by providing users with command - line options
fix cat not be able to use animal tame event . close # 3511
fix ( sql ) : improve handling of unsigned value in windowframe
pdfbox - 4892 : add a test to verify that the appearance of the HELV field be correctly set
added code to set the application ' s mode to ensure the application correctly reflects the current application ' s mode
added methods and test cases for ` ImageFromDockerfile ` and ` DockerfileBuildTest ` to enhance the functionality of ` ImageFromDockerfile
added a null check before initializing ` threadInfos [ threadId ] ` and assigning it to ` threadInfos [ threadId ] ` to avoid
updated the condition in PieChartRenderer to use Utils . FLOAT _ EPSILON instead of a hardcoded value to improve precision by using a
[ hotfix ] [ runtime ] add more log for singleinputgate and singleinputgate
added multiple schema constants to the Schema class to enhance schema management capabilities in the application
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum classes and updated related logic to enhance the FuzzyQuery functionality by allowing customizable
rename method ` addActionsView ( ) ` to ` setActionsView ( ) ` to improve clarity by using a more descriptive method name
add warn message if immediateflush be set in outputstreamappender .
added additional auto configurations for AMQP , Rabbit , and Kafka in the ZipkinAutoConfiguration class to ensure that the Zipkin auto configuration is
added null check for component removal in JLayer . java and created a new test class bug6875716 . java to ensure proper handling of
replaced imports from ` avro . shaded ` to ` com . google . common ` in multiple Java files to ensure consistent usage of Google common
fix a bug in bci block mapping so that exceptiondispatchblock and exceptiondispatchblock be set correctly .
refactored icon rendering logic and added legacyRenderer getter and setter methods to improve code readability and facilitate the management of legacy renderer settings
use ints . tobytearray instead of intinttofourbytes ( int ) .
added a null check for the observer before calling isHomeAndOverviewSame ( ) to prevent potential NullPointerException when mObserver is null
updated the type parameter of the ` thenComparing ` method in ` Comparator ` and added a new ` Department ` class with corresponding tests to
refactor DocIdSet class to improve code organization to enhance maintainability and readability of the code
update end time setting in UserRuleAnomalyFunction to use currentKey bucketMillis instead of null to ensure accurate time representation for anomaly
added a try - catch block around integer parsing in VisualScoreTagTest . java to ensure that NumberFormatException is properly handled and reported
added a class loader to the enhancer configuration in MockFactory . java to ensure that the enhancer uses the correct class loader for naming configuration
added a new ` OriginalFormat ` class and implemented the ` format ` method in ` ConverterWithEnumFormat . java ` to enhance the handling of
replace hardcoded " yyyy / mm / " string with a constant PATTERN _ YYYY _ MM / " to improve maintainability and
updated JAWTRenderer class to improve rendering performance to enhance performance and maintainability of the rendering process
camel - 15836 - camel - aws2 - lambda : enable autowire on the lambda client , fix test
api : replace mac address if insufficient capacity for the nic in the network
added a condition to check if the string header name equals " Authorization " to ensure proper handling of authorization headers in the proxy servlet
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService ` to ensure proper execution flow for asynchronous operations
added ` getDetails ( ) ` methods and ` getDetails ( ) ` method to multiple authentication token classes to provide access to authentication details for better
updated the randomization of ` randUsePoints ` to use a fixed probability of 10 to improve test reliability by allowing more variations in random number
[ java ] remove ` ` appenddot ( ) ' ' from screenreaderbuilder . tostring ( )
updated the ` formatForConsole ` method to include a ` Locale ` parameter across multiple classes to ensure consistent formatting across different locales for console durations
groovyparser should handle name argument with multiple name , not just the first one
added boundary checks for bottom , left , and right inset positions in Border . java to ensure that insets do not exceed defined dimensions
replaced the instantiation of ` GestureState ` with a static final instance and refactored gesture state creation to improve code readability and maintainability
replaced Joda - Time ' s DateTime with Java ' s Instant and DateTimeFormatter for version formatting to improve compatibility with Java ' s DateTime API and
refactor ` openblas ` and ` openblas _ nolapack ` classes to improve code organization and maintainability
( chore ) camel - torrent : use java . io . io . close instead of ioutils
added synchronized keyword to the initTxnMgr method to ensure thread safety during transaction management
increased the timeout duration for recoveries in AbstractDistribZkTestBase and set SO _ TIMEOUT in AbstractFullDistribZkTestBase to
added a new class ` SearchResults ` to handle search results from ` Hits ` to provide functionality for retrieving and converting multiple hits into object objects
refactored the initialization of threadCPURefresher in CPUSamplerSupport . java to improve code organization and maintainability by consolidating refresh
initialize the body of bytecodenode if it do n ' t exist
added support for new versions " 8.1 . 0 - cfs " and " 8.10 . 0 - nocfs " in TestBackward
updated the status of " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified the text condition
added a new API endpoint to retrieve tenant pools for an instance to provide users with information about tenant pools for an instance
refactor ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix ` methods in ` TopFieldCollector `
added a check for ` isNative ( ) ` and ` isToString ( ) ` in InlineBytecodeGenerator and updated tests in InlineByteB
added debug logging statements to CxxCompileStep and CxxPreprocessStep to improve error reporting for compiling and preprocessing processes
implement stringutil # removecharacter ( string , char ) , and add test
fix ( core ) : fix metadata service protocol in applicationconfig ( # 10265 )
add datatransformer interface for kie - api - runtime - process
changed the type of ` Object [ ] ` and ` Number [ ] ` from ` Object [ ] ` to ` Number [ ] [ ] `
removed the boolean flag ' interesting ' and adjusted the conditional check for ' sig ' in the FormatStringChecker class to simplify the code and ensure proper
removed unnecessary whitespace in SolrCore initialization to improve code readability and maintainability
refactor ITestDbTxnManager to improve code structure to enhance maintainability and readability of the code
refactor connection handling in DatabasePlatformFactory to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added a test method for verifying MapModel functionality in CodeFirstPojoClient and CodeFirstPojo classes to ensure proper functionality and validation of MapModel
pdfbox - 4892 : simplify code , remove unneeded null check
updated selection handling logic in ScaleDialog . java to improve clarity and functionality of the item listener to enhance code readability and ensure proper selection state management
rename itemtravelbowt . updateplayerstepstatus to itemtravelbow . tickbelt ( ) , fix npe on forge
pdfbox - 2576 : do n ' t throw exception when there be no rectangle
changed the type of ' keys ' from SortedSet to LinkedHashSet to ensure uniqueness and maintain insertion order
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 in CancelEventTimer . java and
updated the preload libraries in dc1394 . java from " libdc1394 - 22 " to " libdc1394 - 25 " to
added a conditional check for ` agentSupport ` in ` MainMockTransformer . java ` and created new test classes for mocking static methods with private
pdfbox - 4892 : avoid infinite recursion when decrypt string , dictionary or array
use reflection to set default awt classname to avoid reflection call
modify depth calculation based on pixel size in XRSurfaceData . java to ensure correct depth value is set based on pixel size
added error response body handling in OkHttpDataSource and updated InvalidResponseCodeException constructor to include the error response body to improve error reporting and provide more
added a static method ` exit ` to ` TopLogging ` and modified exit logic in ` TopThreadGroup ` to improve error handling and simplify exit
modified the initialization of the ` start ` variable in ` NativeRegExp . java ` to ensure the correct index is used when the regexp is not global
added @ Ignore annotation to the OptaPlannerDaemonSolverTest class to mark the test as ignored when upgraded to optaplanner 6.1 . 1
corrected the variable name from lowIndex to highIndex in DefaultAllocator . java to ensure the correct allocation index is used for high allocations
added a method ` cleanEntriesWithoutFeeds ` to ` DatabaseCleaner ` and ` FeedEntryDAO ` , and updated ` AdminREST ` to
change return type of appendToLabel method from void to AtomicCounter to enable method chaining for better usability
[ java ] change lowlatencymediadriver to use a noop idlestrategy instead of a hardcoded one .
added handling for NOT _ MODIFIED status in CacheControlHeadersWriter and related classes to ensure that no cache headers are written when the response is not
fix instrumentationpartialevaluationtest and add test for tool evaluation
updated the ` paintTabArea ` method in ` SynthTabbedPaneUI ` to handle insets correctly to ensure proper rendering of the tab area with
updated the ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept an additional ` Object ` parameter to enhance
camel - 11446 : fixed file component so that it can be use with relative file name .
added a new method ` build ` to the ` JavaProvenance ` class and updated the ` MavenProjectParser ` to use this new method
added trace logging for registered Hive UDFs and modified condition checks in HiveFunctionRegistry . java and TestInbuiltHiveUDFs .
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to accommodate larger data sets and improve test coverage
rename unserializablecolumnfamilyexception / unserializablecolumnfamilyexception to unknowncolumnfamilyexception . patch by jbellis
added a check for writable output files in NativeErrors . java to skip tests that are not writable due to root permissions
added package info retrieval in LauncherModel . java to handle potential NameNotFoundException to improve robustness by preventing crashes due to missing application info
cloudstack - 10220 : do n ' t log error in case database upgrade fails
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet and add a new test for rethrowing non - skipp
updated string comparison from ` startsWith ` to ` regionMatches ` in ` LineReaderImpl . java ` to improve case - insensitivity handling
added imports for SourcesFileResults and SourcesFileErrors , and refactored dataTables handling in Recipe . java to improve code
added Overview import and task dismissal logic in TaplTestsTaskbar . java to ensure all tasks are dismissed when the overview is available
add databaseupgradesystemvmtemplate interface to support database upgrade from 4.2 to 4.2
removed redundant null checks for the connection variable to simplify the code and improve readability by eliminating unnecessary null checks
refactor code to use a local variable for index to improve readability and maintainability of the code
make login _ done and login _ done access level none for utf8 table . patch by jbellis
added a check to skip synthetic fields in ReflectUtils to improve performance by avoiding unnecessary processing for synthetic fields
added LoggerProvider to manage application - wide logging to enable better logging capabilities in the application
changed the type of ` ImmutableMap < String , String > ` and ` ImmutableMap < String , Object > ` from ` String ` to ` Object `
added a deprecation warning for multiple glue classes that configure the spring context to provide clearer warnings when multiple glue classes configure the spring context
added a new method ` deepStart ` to the ` Startables ` class that accepts a list of ` Startable ` objects to enhance functionality
removed the deprecated ` reservePrimitiveExtensionArray ` method from ` Shape ` and its implementation to clean up the code and improve maintainability
fix a crash when try to place the table on the client side .
refactor the object name validation logic in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
set the expireMessagesPeriod to 0 in MemoryLimitTest . java to prevent test failures due to excessive memory usage
removed null check for handlerName and simplified conditional logic in RequestHandlers . java to simplify code and improve readability by eliminating unnecessary null checks
modify the method to replace hyphens with dots in the servlet name to ensure proper logging format for servlet names
refactor python environment handling in ProjectBuildFileParser . java to use a constant for the environment variable name to improve code readability and maintainability
updated audio processing logic to utilize frame size and improved error handling for memory issues to enhance code clarity and prevent potential memory issues during audio processing
added null check for enums in ElasticSearchStringLookupService to avoid potential NullPointerExceptions when enums are null
[ hotfix ] [ table - common ] fix format string error in commitlogreader
added initialization of the WebSocket policy from the container scope to ensure the WebSocket session uses the correct policy from the container scope
simplified the logic for determining static fields in the Java to TypeScript translation to improve clarity and maintainability of the code
use webroot from command line argument instead of hardcoded value
test : migrate camel - spring - integration - dsl to junit5 ( # 4583 )
use monitoredvmutil . isattachable instead of reflection to check if vm be attachable .
replaced calls to ` printHeaderObject ` with ` createHeader ` in multiple formatter classes to improve clarity and consistency in header creation logic
replaced multiple specific trade DTO imports with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and prepare for
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure the buffer is properly reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to prevent potential NullPointerException when restoring the view
modified the range check for decimal exponent in FloatingDecimal . java and added a new ToString . java file to ensure proper validation of floating - point
updated property type checking logic in PropertyDescriptor . java and added a new test class Test7189112 . java to improve property type validation and
do n ' t use fingerprint ' s maxversion in realtimegetcomponent
updated the handling of the ORIGIN header in NettyRequestFactory to ensure correct HTTP and HTTPS origin headers for secure URIs
refactor task visibility and animation logic in RecentsView , TaskView , and TaskView classes to improve user experience by providing smoother transitions
added additional context to checkState and extractSingleValue calls in ORCRecordReader . java to improve error messages by providing more context about the field being
added two new sample files for " Clear HLS : Tears of Steel " and " Bipbop 4x3 " in DemoUtil .
removed unused imports and simplified string constants in PersistenceProvider . java to streamline code and improve maintainability by eliminating unnecessary dependencies
updated logging references in ExecRPCInvoker and WritableRpcEngine to use the correct class name to improve clarity and organization of logging within the codebase
added diagnostics logging and a warning listener in TestSpecificCompiler . java and implemented a test for union and fixed fields to improve error handling and ensure
refactored session handling in WebSocketEndpoint and added a test for session closure in WebSocketIT to ensure that sessions are only added when the user is
increase delay in second from 1 second to 10 second for daostatemonitoringservice .
rename the opensymphony group to Apache Struts and update related mappings to ensure compatibility with the latest version of the Apache Struts
added conditional checks before calling ` stream . stop ( ) ` in ` WebCamInputPanel . java ` to ensure that video tracks are only
changed the data type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType
update to new geotools version , use jts 2.0 instead of geotools 2
replaced ` substream ( 200 ) ` with ` skip ( 200 ) ` in the ` g ` method from ` substream ( 200 ) `
hhh - 10956 - add identifiergenerator field to simplevalue to avoid npe
rename ` ` findfulltext ' ' to ` ` download full text ' '
refactor the registration process in ` URIRegisterExecutorSubscriber ` to enhance URI registration to include host and port information to improve clarity and functionality of URI
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for a blank OSDb hash before retrieving the API result and changed the type of getParameters from List to List < String > to improve
added token transfer functionality to the RuntimeImpl and MUtil classes to enhance the functionality of token management for smart contracts
camel - 14274 : camel - ftp - remove file in stepwise mode should use the current directory for delete file .
updated the method call from ` getSearchDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration . java ` to ensure the correct
added null and empty checks for join results in MapJoinOperator and modified join logic in HybridHashTableContainer to ensure correct handling of join conditions
updated the HTTPSPDYAsyncEndPoint constructor to accept an AsyncEndPoint parameter and added getter methods for local and remote addresses and ports to enhance the
added extra data for tweet ID in multiple adapters and fragments to ensure consistent identification of tweets by using their IDs
added proxy authorization handling in HttpURLConnection and refactored disconnectInternal method to improve code clarity and maintainability by using a dedicated disconnectInternal method
replaced ` int _ numChildren ` with ` AtomicInteger _ numChildren ` and updated return value to use ` AtomicInteger ` to improve thread - safety and
fix checkstyle issue in plugin and pluginenum . java
disabled the test method for NullPointerException in ValueTypeTests . java to disable the test due to known issues
resolve split - packages : move everything from kie - api under org . kie . api : move class to kieresources
updated PredicateType references from IN to NOT _ IN across multiple predicate classes to ensure consistency and clarity in the predicate implementation
updated exception handling to use ` Exception ` instead of ` AccountUtils . AccountNotFoundException ` and improved account display formatting in multiple activities to enhance error
added null check for witnessService before validating witness permission to prevent potential NullPointerException when witnessService is not initialized
updated the construction of the taggedCol string to use getExprString ( ) for improved clarity to enhance readability and maintainability of the code
added a conditional check before setting the Java documentation in AbstractJavaClassTranslator to avoid setting the JavaDoc when no Javadoc is present
rename ` holderMethod ` to ` holderMetadata ` in ` CompiledICHolder . java ` and add new classes ` RedefineInterfaceCall .
replaced calls to revalidate ( ) with revalidateWithAnimationSafety ( ) in Tabs . java to improve animation handling and ensure proper revalidation of
[ hotfix ] [ kafka ] return unregisteredmetricsgroup instead of unsupportedoperationexception
refactor y - coordinate calculation in Polygon . java to improve code readability and maintainability
added a type cast to the cacheManager ' s createCache method to ensure proper type safety when creating caches
added a length check for stringConstant in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java file with a
refactor ShadowCookieManager to improve cookie management functionality to enhance performance and maintainability of cookie management
added a configuration to disallow dropping external tables using StorageBasedAuthorization to ensure proper authorization checks before dropping external tables
added an empty block to the if statement in Stage . java and adjusted the drawing position in ProgressBar . java to improve code readability and correct
sulong : cache bytearraysupport in llvmlanguage for good performance
updated the property name from " testcontainers . namedpipesocketprovider . timeout " to " testcontainers . windowsprovider . timeout " to
updated the ` initWebViewLogin ` method to accept a base URL parameter and modified the web view loading logic to enhance user experience by allowing dynamic web
updated the exception message in CallableStatementHandler to correctly reference the parameter instead of the output parameter array to improve clarity and accuracy of the exception message for
updated the ` @ RequestParam ` annotation in ` AuditEventsMvcEndpoint ` and modified test cases in ` AuditEventsMvcEndpointTests ` to allow
rename exponential _ throughput timer to precise _ throughput timer ( # 122 )
added logic to remove soft bodies from the world and reset softBody to null to ensure proper resource management and prevent memory leaks
[ hotfix ] [ table - common ] make interface public to allow access from other package
( chore ) camel - zeppelin - maven - plugin : remove useless stack trace from log in zeppelinhub
add a test to ensure that the jingle element do not have a redundant namespace .
add a null check for redplasma and fix a nullpointerexception in the stat collector
added support for http / 2 request header in bareresponseimpl for http / 2 request
refactor conditional checks for UUID comparisons in Remove . java to improve code readability and maintainability
add a newline after a newline in simplereport . tostring ( ) . tostring ( ) . tostring ( ) .
removed the option ` - XDignore . symbol . file ` from ` JavapTask ` and added a new class ` T68637
rename TickerDemo to StreamingTickerDemo and update related imports and methods to improve clarity and functionality of the TickerDemo class
removed unnecessary try - catch block and added contract validation checks in the Runtime class to improve code readability and ensure contract validity before proceeding
do n ' t create input3d in applet for intellisense
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests during development
do n ' t throw parserexception in scripttagpayloadreader , just return false .
added an override annotation to the getRepositoryFactoryClassName method in JpaRepositoryConfigExtension . java to improve clarity and maintainability of the method ' s
updated the return type of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple binary rule classes to enhance
replaced direct assignment of properties in IOSGLES20 with direct assignment to IOSGLES20 to improve code readability and maintainability by
removed the UploadPathActivity class and its associated functionality from ComponentsModule to streamline the codebase by eliminating unused or redundant components
modified return statements in SimpleTextFieldsReader to return - 1 when indexOptions is set to DOCS _ ONLY to ensure that total and sum
fix : implicit constructor should be set to true for constructor ( # 1626 )
updated populateValidate methods to include a Database parameter and added conditional checks for OracleDatabase instances to enhance functionality by skipping certain operations for non - Oracle database
refactor Database class to improve code organization to enhance maintainability and readability of the code
fix typo find by codespell on fossies . org
updated references in DefaultIndexingChain and PointInSetQuery to use ' this . iterator ( ) ' instead of ' this . iterator ( )
removed substring extraction from rawName in SchematicHandler . java to ensure proper formatting of rawName strings
added handling for specific collection types in AbstractCollectionAssert and updated the test cases in CollectionAssert _ isUnmodifiable _ Test to include additional collections
changed the enum declaration from static to instance in ProcessExecutor . java to allow external access to the Option enum
added twitlonger confirmation dialog in Compose . java and removed it from ComposeActivity . java to streamline code and improve readability
replaced the toggleKeepInSync method with a CheckBox for managing file synchronization to simplify the synchronization process by directly using the file operations helper
replaced DatatypeConverter with Base64 for decoding embedded base64 images to improve compatibility with Java ' s built - in Base64 encoding mechanism
added new classes ControllerCounter and DBCallback with their respective getters and setters , and implemented a DBCallback interface for MongoDB operations to enable tracking
added ' final ' modifier to the ticketId parameter in deleteTicket method to enforce immutability of the ticketId parameter
added a new file FlywayMigrationRunner . java to implement a flyway migration runner for database configuration
replaced ` isEmpty ( ) ` method calls with ` size ( ) = = 0 ` in HashMap . java and added a new class ` OverrideIs
updated the version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the latest release of the application
added ` @ Nullable ` annotation to ` modifiers ` in ` CompressionCodec ` and ` ZlibCodec ` classes and updated the ` modify ` method
added null check for mainClass in LauncherHelper . java and improved test cases in Arrrghs . java to ensure robust handling of missing
corrected the spelling of " Tests " in multiple test classes to improve code readability and maintain consistency
make compiler ir type detection more thread - safe
patch from tim allison from bug # 49156 - make cellcopypolicy a constructor and not cloneable
added a method to reset the icon load result in FloatingIconView and invoked it in FloatingIconView to ensure proper handling of icon loading
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` FormFieldValuesToCaps . java
added landscape orientation support and updated margin calculations in IconRecentsView . java to ensure proper layout handling for different screen orientations
deleted the AddAdapter . java file to the functionality is no longer needed in the launcher
[ hotfix ] [ table - planner - blink ] fix nonstaticlifter when constructor be empty .
modified the method signature and logic for processing sort columns in OpTraitsRulesProcFactory . java to improve clarity and functionality of column processing logic
refactor TestLogWatcher to improve message validation and error handling to enhance clarity and maintainability of the test code
added a print statement that prints " < any > " in Java2TypeScriptTranslator to improve output formatting for better readability
updated the SDK version in SdkConfig . java from " 4799589 " to " 4913185 " to ensure compatibility with the
set spring _ aop _ proxy _ target _ class to true if it ' s not present in the environment
removed the singletonLock logic in TypeCachingBytecodeGenerator . java to simplify the locking mechanism by directly using BOOTSTRAP _ LOCK
add some more callback example to the callback action example .
added a new method ` appendToFile ` to ` writeFile ` and modified related calls in ` Utils . java ` and ` SuiteHTMLReporter . java
updated the logic in ` MavenExecutionContextView ` and refactored the ` MavenRepositoryMirror ` class to improve the handling of Maven settings and improve
added a ` name ` parameter to ` BuildRuleSourcePath ` , ` PathSourcePath ` , and ` SourcePathTypeCoercer
updated the service client comparison logic in OAuth20CallbackAuthorizeEndpointController and added a new test for operation clients with the same redirect URI in OAuth20
replaced direct calls to ` values ( ) . values ( ) . values ( ) . toArray ( ) ` with a new method ` AnnotationParser .
updated method calls from ` getBadgedDrawableForUser ` to ` getBadgedIconForUser ` and ` getBadgedLabelForUser
updated the default line separator message in GlobalConfiguration . java to clarify that LF or CRLF are used for output formatting
fix configurationmanager . isimplementinginterface ( ) to check for derived class .
sanitize serverid , basename , and api key when generate the model
chore : update java and python dependency ( # 85 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to throw an ` IOException ` and added an integration test for file names to ensure
refactored methods in CountersReader to improve code readability and maintainability
updated container type assignments in AllAppsRecyclerView and modified method signatures in UserEventDispatcher and DeepShortcutsContainer to improve clarity and functionality of the
hbase - 26165 deprecate the hbase . ipc . server . allocator . max . buffer . count , hbase . ipc .
[ native ] add lineitem query to window query
added a method to retrieve all generic parameter types in Executable . java and updated Parameter . java to use this new method to improve the handling of generic
refactor TestFSTs class for improved readability to enhance maintainability and clarity of the codebase
ggb - 205 use the label height of the input box instead of the y label .
hbase - 25827 increase region split policy to account for initial size ( # 2599 )
removed model state reset and starting of the loader in LauncherClings . java to streamline the model loading process and improve performance
initialize keys and updates at at the current time instead of null to ensure that updatesAt is properly initialized before use
added a method to set a set of excluded datasources and implemented logic to check if a Spring datasource is excluded to enhance data source management by allowing
fix miss storeundoinfo ( ) call in tablevaluesview
camel - 15836 - camel - aws : allow to configure the user agent based on whether the aws client be recoverable .
refactor channel handling in VelbusSensorHandler to use a loop for calculating channel identifiers to improve code readability and maintainability by consolidating
disable broken test due to unfavorable benchmark
[ iotdb - 4834 ] fix illegalpathexception when use a partialpath ( # 1065 )
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure the file collection is properly reset before further operations
renamed ` desiredWorkspaceLeftRightMarginPx ` and ` desiredWorkspaceLeftRightMarginPx ` to ` desiredWorkspaceHorizontalMarginPx `
reformatted code in CharTokenizer . java for improved readability and consistency to enhance maintainability and clarity of the code
chore : update gapic - generator - java version to 2.1 . 0 ( # 118 )
api : fix typo in apiconstants . xenservernetworklabel
updated libGDX and libGDX nightly versions from 1.5 . 5 and 1.5 . 6 - SNAPSHOT to 1.5 . 6 and
removed the ` metricNames ` field and its getter method from ` SolrCore ` to streamline the code by eliminating unused variables
replaced URI with Path for path handling in MavenManifestFactory to simplify path management and improve code readability
refactor macOS detection logic in OisControllers . java to use a static final boolean variable to improve code readability and maintainability by
refactor JdbcAggregationRepository class for improved readability to enhance maintainability and clarity of the codebase
clear the slotList and add the other slotList to the slotList to ensure the slotList reflects the updated state of the other frame
initialize m _ predCount to - 1 in PredicatedNodeTest . java to initialize the predCount variable to avoid potential null reference issues
added property merging functionality in ConfigurationSpringInitializer to enhance configuration management by allowing dynamic property updates
updated the parameter type of ` setupLogging ` from ` Logger ` to ` org . slf4j . Logger ` and refactored conditional logic
replaced HashMap with LinkedHashMap for aliasToWork in multiple files to maintain the insertion order of elements in the iteration order
added a check to determine the jdbcHandlerMap based on the class hierarchy to ensure proper retrieval of the superclass of the type handler
added debug logging statements in Hibernate , Jpa , and Jms item writers to improve traceability of item writing operations for easier troubleshooting
modified the way the language range is parsed by removing the last character from the value before parsing it to ensure that the language range is properly removed from
modified the handling of the close handler in Http2ServerResponseImpl and added context assertions in Http2Test to ensure proper context management during server shutdown
improve performance of xssfevaluationworkbook by cache xssftable
updated schema text formatting conditions in BaseSchemaTextFormatter . java to include BASIC type and streamline primary key and unique index handling to improve clarity
replaced ` MongoFactoryBean ` with ` MongoClient ` and ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to
replaced HashSet with LinkedHashSet for roots and leaves collections to maintain the insertion order for consistent iteration order
updated the initialization of the ` tableScanOpsForJoin ` list and added a debug log statement to ensure the operator tree is properly cloned to avoid
added a null check for the client ID before returning it in DynamicRegistrationClientConfigurationService and JsonFileRegisteredClientService to avoid potential NullPointerExceptions
added a call to ` AchievementList . field _ 187981 _ e . clear ( ) ` in the ` StatList ` class to
initialize ` userName ` , ` productName ` , and ` driverName ` to empty strings in ` MutableDatabaseInfo ` and ` MutableJdbcDriver
updated permission strings from ' read _ only ' to ' share _ view _ only ' in QuickSharingPermissionsBottomSheetDialog and SharingMenuHelper
added support for reading and reading long values from a byte array in ByteBuffersDataInput . java to improve performance and memory efficiency in reading long values
updated UnixFileAttributes to use separate seconds and introduced a new method to convert time values to milliseconds to improve clarity and accuracy in time measurement calculations
added a new file TestNoEagerReclaimOfHumongousRegions . java to test the behavior of eager reclaiming of humong
added search visibility management to AllAppsContainerView to control the visibility of the search bar based on user preferences
( chore ) camel - core : use env . routes ( ) instead of env . router ( )
added null checks in LineChartRenderer . java to prevent potential NullPointerExceptions during rendering
added a new action to reload the current displayed page in the menu to enhance user experience by allowing users to reload the current displayed page
changed log level from info to warn for various entries in SQLManager . java to improve log granularity for non - existent entries
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest security features and improvements
added a null check for ` currentClusterConfigForService ` in ` UpgradeHelper . java ` to ensure that a valid configuration type is provided
use serviceloader instead of factoryregistry to add extension to the list
added a finalize method to close the table in HiveHBaseTableInputFormat to ensure proper resource management and prevent potential memory leaks
added stopStatementExecutor ( ) method to JdbcConnector and HiveViewImpl classes to manage the termination of statement executors to improve resource management and logging
do n ' t allow external DTD declaration and load external DTDs by default .
updated JdbStopThreadidTest to use contToExit method and added OutputAnalyzer for asserting application exit status to improve code clarity and ensure
added a method ` getType ` to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to provide functionality for retrieving the type of a
[ hotfix ] fix classcastexception in expressionthreadpoolmanager
updated the default HTTP port property from " port " to " vertx . httpPort " in HttpTestBase . java to ensure the correct port configuration is
replaced ` addCaptureListener ` with ` addListener ` for buttonTable ' s capture listener to improve code readability and maintainability by using a more
http : / / issues . apache . org / jira / browse / amq - 4237 - increase newsessionqueueoptions batch size
[ hotfix ] [ runtime ] log exception when establish resource manager connection in taskexecutor
initialize classFile to null and modify exception handling in LambdaRewriter . java to ensure classFile is properly initialized and improve error handling clarity
updated the error message format in IllegalArgumentException to include min and max parameters to improve clarity of the error message for better debugging
updated onMessage method signatures to include an owner parameter and modified log messages accordingly to improve message handling and logging clarity for delayed telegrams
added new classes ` Cursor ` , ` Database ` , and ` Row ` for managing database operations to provide a structured way to manage database operations and
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the codebase
# 151 - add ebeanserver . setbeanid ( ) ( # 152 )
replace hardcoded xslt file with a method call to getAddToSiteDescriptorXsl ( ) to improve code maintainability and readability
added a private List < RequestMatcher > to manage request matchers in HttpSecurity to improve the management of request matchers for better request matching
added hashcode ( ) and equal ( ) methods to ContactResource class to ensure proper comparison and hashing functionality for ContactResource instances
move request and response from abstractprocessor to abstractprocessor so they can be reuse .
updated logging messages for clarity and improved error handling in the FileManager class to enhance readability and provide more informative logging for saved Persistable
added teardown method to TestIndexSearcher and reset mockControl in TestJdbcDataSource to ensure proper resource management and cleanup during tests
updated import statements and modified assertion statements in SyntaxTests . java to ensure consistency and correctness to enhance code readability and maintainability by standardizing
updated ConnectionModel and ModeledConnection classes to improve code structure to enhance maintainability and readability of the code
remove fallback parser decorator so fallback parser can be use .
fix a security manager check for dedicatedserver and fml . fml
removed redundant parameters from AccountUtils , IndexedForest , and CustomPopup classes to streamline code for better readability and maintainability
updated the parameter name from " swap " to " rename " in TestCoreAdminApis . java and updated the RENAME method in CoreApi
added test for comment in jsx and updated print statements in dumpvisitor to improve code readability and enhance debugging capabilities
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording for debugging purposes
added error handling for missing Buck configuration in BuildEndToEndTest and CxxEndToEndTest to improve user feedback when Buck configuration is missing
added physical memory size checks in TestStringBufferAndBuilderGrowth . java to ensure the system ' s physical memory is sufficient for testing
updated MapToLocalDateConverter to use the conversionService instead of the deprecated ConversionService to improve code clarity and maintainability by avoiding the use of
added a success flag set to true in HiveMetaStoreClient . java to indicate successful execution of the operation
updated string comparison from ` = = ` to ` . equals ( " * " ) ` in ` ResourceReferenceInfo . java ` and modified the
updated video handling logic to check for both " vine . co / v / " and " amp . twimg . com / v / "
mark AreaReference class as deprecated to indicate that the class should no longer be used and may be removed in future versions
refactor ElementType and Target classes to improve code organization and readability
added assertions and updated reference kind handling in MemberName . java to improve clarity and correctness in reference kind management
changed the default value of ` SUBMIT _ KEY _ UPDATES ` from false to true and added synchronization around the ` runChange ` method to
changed the condition from ` if ` to ` else if ` in ` EditNodeTextField . java ` to ensure proper handling of mouse events in the
camel - 14545 : camel - core - add support for static method in bean expression . thanks to stan lewis for reporting
[ java ] update license header to match the new license header .
[ hotfix ] [ test ] add suppresswarnings to agentrunnertest
added implementations of ` getDescription ( ) ` methods in multiple classes to improve clarity and consistency in the codebase
refactor face handling logic in ObjLoader . java to improve clarity and maintainability of face management logic
[ hotfix ] fix typo in processengine javadoc
corrected the spelling of " reentrant " to " lock " in multiple JavassistProxyFactory , JBoss6
updated the ` printMavenAsCycloneDxBom ` method to include ` mavenPackaging ` parameter and adjusted related references accordingly to
updated back ( ) method to use evt . getComponent ( ) instead of evt . getComponent ( ) to ensure proper handling of the event ' s component
[ java ] fix checkstyle issue in saslauthentication . java
updated nullable annotations and method signatures in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to improve type safety and clarity in type handling
updated method calls from ` NutchConf . get ( ) ` to ` getConf ( ) ` in multiple files to ensure consistency in configuration retrieval
updated SheetAssembly to use tab . deselected ( ) instead of removeboardsPane ( ) and modified assembly selection logic in StubsController
simonstewart : add a getsessionid ( ) method to the remotewebdriver interface
added null checks for node and edge time interval before setting them to prevent potential NullPointerExceptions when node and edge values are null
updated command syntax in MockServerContainer . java for improved clarity to enhance readability and maintainability of the command execution
updated error logging to include the exception message to improve debugging by providing more informative error messages
use crawlmetadata instead of robotshonoringpolicy in attachment processor
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
fix test which randomly fail on window
added imports for ByteArrayInputStream and ZipInputStream , and implemented the alternativePath method in ExpectNewDemo . java to handle potential runtime exceptions and provide a
[ log4j2 - 1342 ] log4j2 - 1343 fixed parsing of log4j2 - log4j -
added a protectionDomain parameter to the BufferAlignmentAgent function to enhance the functionality by allowing protection domains during buffer alignment
fixed memory leak in waterripples when dispose ( ) be call .
added a configuration option to disable semi - join optimizations on external tables and updated related classes to enable control over semi - join optimizations on external
updated the description of the Authorization header in TokenKeyEndpointDocs . java to clarify that no authorization is required for public keys
set the wallpaper offset from - 30 to 0 in the Launcher and Workspace classes to improve the visual appearance of the wallpaper during scrolling
updated return value from false to true in SybaseASADatabase and modified SQL query logic in SequenceSnapshotGenerator and CreateSequenceGenerator to ensure correct
nifi - 10284 : fix issue with putsql auto - commit behavior when driver do not support it
added directory creation and validation logic in SnapPuller and TestReplicationHandler to ensure proper directory creation and error handling during file operations
updated AppTargetId from " id : launcher " to " launcher : launcher " in AppEventProducer . java to align the app target naming convention
updated frame method signatures to include an output parameter across multiple classes to enhance frame handling capabilities by allowing the output buffer to be utilized
refactor method signatures in OAuth2 - related classes to remove unnecessary parameters to improve code clarity and maintainability by reducing redundancy
added an extended description for the delimiters in GenericUDFStringToMap . java to improve clarity and usability of the code
updated PlainFormatter to use ChronoUnit for formatting Instant and TemporalUnit to improve flexibility and accuracy of time formatting in the PlainFormatter
updated timeout constants and refactored the close method in AgentRunner . java to improve code readability and maintainability by using a more descript
hhh - 14146 avoid reflection in classloadingstrategyhelper . classloadingstrategyhelper . classloadingstrategyhelper
updated Mockito library version in the project to ensure compatibility with recent changes in testing framework
updated debug log message from " Closing proto event file " to " New proto event file " in HiveProtoLoggingHook . java to provide clear
ignore a test that produce more than one sample result
updated the exception message to specify that the row and column must be greater than zero to improve clarity and accuracy of the exception message
[ wagoncART ] add try / catch to decisionnode . getfeaturevalue ( int , int )
hssf : fix order of boundsheet record in xls2csvmra
updated calculations for thrust calculations in ThrustCurveMotor . java to improve clarity and accuracy of thrust calculations
fix niftyjmedisplay to pass inputmanager to inputsystemjme constructor
add assertion to make sure offset be non - negative .
remove block . getmesh ( ) , deprecate since 1.6 . 0
updated variable name from keytabPath to localKeytabPath in YarnTaskManagerRunner . java to improve clarity and consistency in variable naming
added a new option ` EMPTY _ WORD _ OPTIONS ` and modified matcher logic in ` LineReaderImpl ` to handle empty word options and
do n ' t write commit log when push view replica
added functionality to handle button presses in CaptureActivity and defined default button IDs in ResultHandler and URIResultHandler to enhance user experience by allowing
added a test method for batching of posts in JoinedTableTest . java to ensure that batching functionality works correctly for multi - inserts
added handling for EntityExistsException in JpaPersistenceService to improve error logging for duplicate timestamps in the persistence service
deprecated the deprecated ` -- format ` option and updated its usage in the ` CucumberOptions ` and ` RuntimeOptionsFactory ` classes to ensure
removed save ( ) method from PMS . java to streamline the code by eliminating unnecessary method calls
simplified the condition for hiding the keyboard in ExtendedEditText . java to improve code readability and maintainability
updated the calculation of newCapacity in AbstractStringBuilder and added a new Capacity class with multiple methods to implement and test the capacity management of StringBuffer and
replaced ` goHome ( ) ` method with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to improve clarity
added support for extract endnotes from xwpfparagraph and patch from tilman hagleitner
added clientInfo parameter to the CasAuthenticationTransactionSuccessfulEvent and updated method calls to include clientInfo in the event to enhance event context for better
[ bridj ] add test for gdal version
added a new file ` Lifecycle . java ` that implements a network error listener to handle network errors to provide a framework for handling network errors in the
fix deviantart ripper to download url on 404 error
removed unused imports and simplified variable declarations in BodyTubeShapes and RocketFigure classes to improve code clarity and reduce unnecessary type cast
[ add ] support for scalable surface in opengl
add the ability to disable the auto - select on the creation of an offline project ( # 421 )
replaced PackedInts usage with BlockPackedWriter and added block size constant in DiskDocValuesConsumer . java to streamline code and improve performance
( chore ) camel - test - infra - router : use a sortedset instead of a collection
removed unnecessary data reading and release logic in GoAwayTest . java to simplify code and improve readability
added support for fluent setter in ReflectionUtils and created a new FluentSetterBean class to enhance functionality for generating fluent setters in the application
refactor BlockingHttpEndpoint and HttpEndpoint to use HttpResponse instead of ByteStreams and CharStreams , and add HttpResponse class for handling HTTP
fix unit test for filesortbycase / filesorter
updated the logging of lastAppearedTaskTarget to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity of
pdfbox - 2576 : add option for write scaling information to the pdf file .
added aggregation function handling in TSServiceImpl . java to improve the display of column names based on the processor ' s parameters
updated test classes to extend WithNestedTests . AbstractNestedTest instead of LuceneTestCase and added cleanup methods to improve test structure and ensure proper cleanup of
[ xcap ] enable / disable xcap server by default .
add a flag to allow the dispatcher to handle exception .
added stopediting ( Runnable onFinish ) to stop text editing in various components to improve user experience by ensuring the application stops editing when the text
nifi - 1075 : fix nullpointerexception in controlrate when group attribute be not set
added checkbox to always open preset when a new component be select
added error handling and logging for chat messages in ChatAnnotation . java to improve error tracking and debugging capabilities during message sending
added a check for non - Windows operating systems in HTMLDataFlavorTest . java to indicate that the test is run for MS Windows only
added SQL _ SERVER _ SNAPSHOT constant to the transaction isolation level enum to support SQL server snapshot functionality
replaced the direct insertion of a new record into the queue with a waiting loop to allow for a new record to be offered to improve resource management and
use java . util . zip instead of org . apache . tomcat . util . compat . jrecompat
added a check for the command class before setting it in RegisteredServiceSimpleFormController . java to ensure that the service ' s command class is
change disk _ failure _ policy from best _ effort to ignore . patch by brandonwilliams , review by jbellis for cassandra -
removed public access modifier from several methods in RipperInterface and RipStatusHandler classes to enhance encapsulation and reduce unnecessary access modifiers
[ java ] do n ' t try to connect to an ip address that be already bind to an ip address .
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to simplify the code by eliminating unused method
updated imports in PinotSegmentRebalancer . java and modified computePartitionAssignment method to include ClusterDataCache to enhance rebalancing functionality by
simonstewart : remove the deletecontainer method and add autoremove option to the container config
simonstewart : make the defaultselenesecommand parser more lenient by use split instead of substring .
attempt to fix flaky test : createglossarytests fail on slow machine
updated references from ` allOfRef ` and ` oneOfRef ` to ` Components . COMPONENTS _ SCHEMAS _ REF
updated the handling of the ` EntityDeletedEvent ` to utilize ` JsonUtils ` for serialization and deserialization to improve code clarity and maintainability by
added support line matching for " gop " format in FormatConfiguration . java and updated DLNAMediaInfoParser . java and LibMediaInfo
added a new file TestProfileReturnTypePrinting . java that implements a performance test for method return types to demonstrate the use of profiled return types
added locking mechanism around configuration updates in ParseConfigUtils . java to ensure thread safety during concurrent access to the configuration
[ multistage ] fix the issue that minmaxvaluebasedselectionorderby do n ' t release segment operator
simonstewart : unignoring a couple of test that should be fix
updated method signatures and return types in HasAndroidDeviceDetails . java and added a new return statement in getSystemBars ( ) to improve clarity and
fix : do n ' t report non - existent bug instance to statistic .
bugfix # 21951 - fix disabled text on gtk laf
removed multiple redundant @ Override annotations in CacheControlImpl . java to clean up the code and improve readability
[ flink - 20536 ] [ core ] fix calendar action for weekly action without a week set
refactor upload button handling from a button to a menu item for better organization to enhance user experience by allowing a single upload option for uploads
refactor multiple message - related classes to improve code organization to enhance maintainability and readability of the codebase
added the ` loadMetaData ` method to ` MeXBTExchange ` and ` RippleExchange ` classes to enable loading exchange metadata from an InputStream
added a custom serializer for Hadoop Writable types in CrawlDbReader . java to improve JSON serialization for various Writable types in CrawlDbReader
fix compilation error in testjaspicbasicauthenticator
added configuration pid to the MDNS discovery service to ensure the correct configuration is used for the MDNS discovery service
added check for null message item before try to scroll to the correct position in the chat view
updated ForkJoinPool initialization in TestBPIndexReorderer to use ForkJoinWorkerThread to improve thread management and performance in concurrent scenarios
removed assertions for DATANODE and NAMENODE in RoleCommandOrderTest to ensure correct role handling in dependencies
added a new method ` dedupWithTableInfo ` and renamed the existing ` writeObject ` method to ` dedupWithTableInfo `
standardized spacing in multiple Java files to improve code readability and maintain consistency
added transformations to BitmapFontTest using Matrix4 in BitmapFontTest . java to improve image rendering by adjusting transformation properties
[ hotfix ] [ python ] ignore non - built - in aggregate in streamphysicalpythongroupwindowaggregate
fix race condition in server . connectiontracker . send ( ) and markpendingecho ( )
add a method to get unreachable token owner and rename to getunreachabletokenowners
fix coordmultiplication to not change to multiplication in geosymbolic
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49447
changed private static fields to private static final and added null checks for localEnvironment in XToolkit . java to improve code clarity and ensure proper initialization of
fix javadoc error in abstractjob and recommenderjob
( chore ) camel - core : use read / write lock instead of synchronized ( )
added a test for reading an identity provider in a different zone using a token to ensure that the identity provider is correctly read in other zones using the
added a new ExpireJob to the job scheduling in ObjectTypeNode . java and modified timestamp handling in PointInTimeTrigger . java to ensure
removed import of Service import from SendTicketGrantingTicketActionTests . java to streamline dependencies and improve code clarity
[ issue # 4878 ] update subscription version after rebalance ( # 4889 )
make the detached mkdir mode configurable for cairo . detached . mkdir . mode
added a new test method to verify behavior of the slow leader when a follower is present to ensure that the system behaves correctly when a follow
updated default label pattern to match auth instead of authors3
refactor DBinaryDescription and DLibraryDescription to use CxxPlatforms for parsing time dependencies to improve code clarity and maintainability by centralizing
refactored GoogleCloudAPI to utilize the ungetOAuthService method and added dispose method to improve code clarity and ensure proper cleanup of the
camel - 15757 : fixed genericfileoncompletion to handle dynamic file name when the file name be not specify .
added a configuration option to reopen readers in the Solr configuration to allow the reopening of readers during the indexing process
add the dialect version to the map writer so that it ' s easy to use
added methods to handle ` $ currentDate ` and ` $ currentTimestamp ` in the ` Update ` class to enhance the functionality of the ` Update
added a new method ` dup ` in ` Attr . java ` and a new test class ` PrimitiveTypeInBoundForMethodRefTest . java
refactor Condition to implement the interface and simplify its implementation to enhance code readability and maintainability by reducing boilerplate code
replaced TermQuery with ConstantScoreQuery in TestFacetsCollector . java and updated expected value calculation to improve performance and accuracy of query results
removed several unused imports from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability
added a method to retrieve specific SharedPreferences for direct nearby uploads in CommonsApplicationModule to enhance functionality by allowing direct access to shared shared preferences
added support for " SYSDUMMY1 " database in the parser and mode classes to enable support for the system dummy 1 database in different
refactor logging statements in TraceGatewayEnvironmentPostProcessor and add sampler configuration in SamplerAutoConfiguration and SamplerAutoConfiguration to enhance logging clarity and
patch from tim allen to fix bug # 49253 - add support for poixmlproperties . getproperty ( )
[ geotiff ] fix geotiffreader to handle negative infinity instead of nan
updated import statements and refactored execution logic in CliDriver . java and SessionState . java to improve code clarity and ensure proper resource management by
updated MockRestAdapter to use Scheduler instead of Subscriber to improve code readability and maintainability by leveraging modern RxJava features
added a default method ` selectByRuleIdSet ` to ` RuleConditionMapper ` that partitions the list of results based on a specified set of
added a method ` addExitDescription ` to the ` ExitStatus ` class and updated its usage in ` AbstractJob ` , ` AbstractStep `
added player check to multiblockrenderhandler . right _ click _ block event .
rename ` ` columnfamily ' ' to ` ` columnfamilycolumn ' ' in slicereadcommand
removed unnecessary import of Collections in PlotConfiguration . java to streamline code and improve readability
refactor DefaultIOSInput to use UIAlertController instead of UIAlertViewDelegate to improve code organization and maintainability by consolidating alert
updated method call from ` params . getBuildTarget ( ) ` to ` nativeLinkable . getBuildTarget ( ) ` to ensure the correct
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity by using a more descriptive parameter
added assertion to verify that the service ' s message is not null in AdvServiceTest . java to ensure that the service ' s message retrieval
refactor key handling in MappingMongoConverter to simplify key conversion logic to enhance code readability and maintainability by reducing redundancy
updated Timber logging statement formatting in NearbyMapFragment . java to improve readability of log output for better debugging
camel - 14284 : camel - jbang - use the deprecated property instead of javatype for the deprecation message .
updated FuzzyLikeThisQuery to use Terms directly and added a test for non - existing fields in FuzzyLikeThisQueryTest to ensure
modified the ` writeApplicationsLinks ` method to accept a ` tabularList ` parameter to improve readability and maintainability of the code by
( chore ) camel - core - optimize createmissingidentifiers to avoid dependency on dspace
updated the parameter for ` assignBytes ` calls to use ` bw . getLength ( ) ` instead of ` bytes . length ` to ensure correct length
changed the return type of getDisplayScript from abstract to a non - abstract implementation to provide a default implementation for the method
simonstewart : fix the order of key sequence in the remote webdriver .
pdfbox - 4892 : initialize cosobjects list with the expected size , a suggest by valerybokov
fix npe in network configuration watcher when there be no active interface .
fix bug # 45538 - read nested object from hssfworkbook . getallembeddedobjects ( )
remove unused import of jogamp . common . os . elf . shdr in shadernodeloaderdelegate
updated variable names from ` hostParams ` to ` roleParams ` in ` AmbariManagementControllerImpl . java ` to improve clarity and consistency
pdfbox - 2576 : support for symbol font , a suggest by valerybokov
replaced GlStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to improve rendering consistency
updated LiveTvGuideActivity to use a new Calendar instance and adjusted duration calculation based on current guide date to improve clarity and functionality in managing guide
updated method invocation from ` getDeclaredMethod ` to ` Whitebox . getMethod ` in ` MockGateway . java ` and added new classes ` CommonParentTest
added JNI library paths for freetype , fontmanager , and fontmanager in JREUtils . java to ensure proper loading of shared libraries for
refactor : add support for multi - variable function for split command
[ gr - 26458 ] fix loop safepoint elimination for float guard .
remove duplicate code in valuenumberdataflowvisitor . isinstanceof ( )
added a new ` LocalizedString ` class and refactored existing methods to utilize it to improve localization support and enhance code maintainability by
add serverconfig . disableclasspathsearch ( ) to disable classpath search
[ java ] make field final and use arrays . copyof ( array ) in dataline .
updated default value of retries ( ) method from 0 to 2 in Reference . java and corresponding test assertions in AnnotationPropertyValuesAdapterTest . java to
added JSON parsing for settings and updated process method to accept settingsFileName to enhance functionality by allowing users to specify settings for packing
updated AchievementsFragment to use text view bindings for upload images and modified progress text format pattern to improve UI responsiveness and maintain consistency in
added test cases for annotation processing in TranslatingJavacPhaseTracerTest . java to ensure correct tracer behavior during testing
added a new parameter ` prop = categoryinfo ` and a new ` CategoryInfo ` class in ` MwQueryPage ` to enhance category information
updated assertion messages in AuthzAuthenticationRequest . java for consistency to improve code readability and maintainability
updated TaskbarStashController to use a dynamic auto - hide timeout from AccessibilityManager to improve accessibility support for taskbar interactions
added handling for the ' ^ ' character in the GenericSignatureParser to ensure proper exception management when a NoSuchElementException is thrown
updated access flag handling in ClassVisitorDriverFromElement and added multiple test cases for stubbing various generic interface and enums in StubJarTest to
updated IntervalFilter to use Objects . requireNonNull for null checks and added null checks in LowpassIntervalsSource to improve code robustness and prevent
added unit tests for iterating over entries in a map to ensure proper iteration over entries in the map
added a serialVersionUID field to the TreeMap class to ensure proper serialization compatibility for the class
updated the timestamp from milliseconds to seconds in ImageData . java to ensure accurate representation of image creation time in seconds
add ` ` f2m ' ' a the default groobcov to the singular - web service .
added imports for EncryptionUtils and deleted private and public keys in AccountRemovalJob . java to ensure proper key management for account removal
use a utility method to get keep - alive header value
do n ' t call postjoinmapoperation if there be no interceptor
danielwagnerhall : remove unnecessary inlining section processor from standarddialect
remove unused ` spillenabled ` parameter from ` binaryhashtable `
refactor environment variable handling in EnvironmentVariableHelper to use Optional for better null safety to improve code maintainability and reduce potential NullPointerExceptions
[ ww - 3523 ] fix checkstyle violation in defaultactionmapper
added import for SerializableMode in Mockito . java and modified formatting in PluginSwitch . java to enhance mock functionality and improve code clarity
do n ' t throw exception if the field be not declare to be null .
http : / / code . google . com / p / mybatis / issues / detail ? id = 365 : add support for isolation
replaced direct calls to ` HiveConf . ConfVars . HIVE _ SERVER2 _ TRANSPORT _ MODE . varname ` with static
added an override for the isCacheable method in GlobalOrdinalsWithScoreQuery to provide a default implementation for caching behavior
added a new file TestStrangeControl . java that contains a threaded test for StrangeControl to implement and test the StrangeControl functionality
updated file extension from " . json " to " . jsfile " and " . jslib " in JsFile . java and Js
added selectionStart and selectionEnd variables with their respective getters to ShadowEditText to enhance functionality for managing text selection positions
refactor grpc server start method to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added a ` use ` method to handle routes with a specified path and improved validation for the ` path ` parameter to ensure the ` path ` parameter
added a null check for ` fst ` in ` FreeTextSuggester . java ` to ensure that an exception is thrown when lookup is not
replaced line separator handling in string output and modified URL verification logic in T4975569 . java and T6729471 . java to ensure
added ABI writer loading functionality in JavacInMemoryStep . java to enable dynamic instantiation of ABI processors based on the specified class name
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to boolean method
do n ' t try to pull a pull request if the service be already stop .
refactor EnergyEndpointer class for improved readability to enhance maintainability and clarity of the codebase
[ te ] fix order of the first column in the preset dialog .
removed unused import statements from BazaarRepository , CVSRepository , and IndexDatabase to clean up the code and improve readability
camel - google - sheets fixed switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` in ` CxxLibraryDescription ` and updated ` CxxLibraryMetadataFactory `
deleted the files Constants . java and DistanceUtils . java to remove unused files to clean up the codebase
refactor disk delimiter handling in RandomPartitioner to improve readability and maintainability of the key extraction logic
[ gr - 26458 ] fix build - time issue with native - image - builder .
[ k8s ] add support for inline rolebindings .
added debug logging statements to UaaSessionCookieConfig for session cookie configuration to improve traceability and debugging of session cookie configurations
updated the calculation of the file name in HotseatFileLog . java to use the current day of the year instead of a fixed number of days
corrected variable name from ' o ' to ' v ' in ObservableBlockingSubscribe . java to ensure consistency with variable naming conventions
added error handling for invalid options in JavapTask . java and created a new class T8033711 . java to improve robustness of
replaced calls to ` Collectors . collect ( toList ( ) ) ` with ` toList ( ) . toList ( ) ` in multiple files
updated logging levels from error to warn and modified error handling logic in TaskDriver . java to improve logging clarity and handle shutdown scenarios
[ hotfix ] [ network ] enable tiered storage for single input gate
( chore ) camel - mailer : use a helper method to check status
updated Cubocy application configuration from false to true in Cuboc . java and CubocDesktop . java to enable OpenGL 2.0 support
remove unnecessary check for voidtype in jimplebody .
refactor OutputMacroExpander to replace DefaultSourcePathResolver and SourcePathResolver with an Arg and AddToRuleKey implementation to improve code clarity
fix sql test assertnojobslefteventually in simpletestinclustersupport
added a condition to check if the file path ends with a backslash in the MergeWordsListTask class to ensure that only valid file paths are processed
fix issue where feedback response comment be not be display to recipient
no functional changes were made to the code in Container . java to improve code readability and maintainability
added a new file TestEscapeThroughInvoke . java containing a class A with methods for escaping and checking object equality to provide a testing framework for object
replaced manual stream skipping with Apache Commons IO utility for reading bytes to improve code readability and maintainability by utilizing a more efficient utility method
http : / / code . google . com / p / mybatis / issues / detail ? id = 390 . add support for interceptor
changed catch block from Exception to Throwable in CoreContainer . java to handle a broader range of exceptions
hbase - 11813 lrublockcache . removeblock ( ) should check if eviction be in progress
removed unnecessary null check for taskCount in RecentsView . java to simplify code and improve readability by eliminating unnecessary checks
added instance config change listener to HelixBrokerStarter and increased sleep duration from 1000ms to 5000ms in HelixServerStarter to ensure
added CoinmateExchange and CoinmateStatic interface , CoinmateMetadataServiceRaw , and CoinmateMetadataServiceRaw classes to enable access to exchange metadata
[ core ] improve warning message for unresolvable system path
pdfbox - 4071 : do n ' t overwrite object key if they differ
add setdisplaydata ( ) to ptransform to allow set display data
updated assertions in SubjectTest to use assertThat with Object type instead of DefaultSubject to improve clarity and correctness of null checks in tests
added a security property to disable MD2 and RSA algorithms in the JSSE client to enhance security by preventing sensitive algorithms
added checks for subcommand groups and option types in OptionData . java to ensure correct handling of option types and improve validation logic
updated module - info . java files for mmm and ppp modules to improve module dependencies and maintainability
added error handling and exception throwing in IOSImplementation . java to improve robustness and error management during connection operations
updated the initialization of sCheckingEvents and added a finally block in LogEventChecker . java to ensure proper resource management and prevent potential memory leaks
refactor exception handling in FileSinkOperator and add dedicated methods for closing writers to improve error logging and ensure proper resource management during file operations
added diagnostics logging to the SchemaGenerator class to improve debugging by providing detailed diagnostic information during task execution
replaced instances of ` RuntimeException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by using a more
updated DataSourceMonitorTests . java to improve test coverage to enhance reliability of data source monitoring functionality
added a HashSet to track loaded resource paths and modified scan logic accordingly to prevent multiple scans of the same resource file multiple times
updated the retrieval of the test instance to handle null cases and added error logging for service initialization failures to improve error handling and provide clearer context for
added a null check for the variable ' o ' in RoutingInBoundHandler . java to handle cases where the ' o ' is null to ensure
added Nullable annotation and improved warning message formatting in EkeyUdpPacketReceiver , EkeyUdpPacketReceiver , and EkeyHandler classes to
updated ArrowByteBufAllocator to use ArrowByteBufAllocator in multiple files to improve memory management and compatibility with the latest Arrow architecture
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added a condition to set the state of the HttpParser based on its length and body in HttpConnection . java , and created a new test case
[ java ] fix race condition in multitimeout .
log more compaction when there be no overlap sstables
added a test annotation to the TestOrcTimezone1 class to ensure proper functionality of the test cases
[ gr - 36458 ] fix metric conditional check when enable / disable .
add error handling for JSON processing in PinotSegmentRestletResource . java and simplify object creation in TraceContext . java and TraceContextTest .
modified JTable ' s getDefaultRenderer method to handle null superclass cases and added a new test class Test6888156 to ensure proper rendering of JTable
update argument handling in IDEService to use BUSYBOX or SHELL when SHELL exists to ensure compatibility with different environments
updated the parameter of the deleteWithoutSubscriptions method from 10 to 1 to optimize resource management by using the correct number of subscriptions
replaced List with LinkedHashSet for testInstances in MockitoExtension . java and added a new ClassWithDependency in JunitJupiterTest . java to
refactor FieldMonitor class for improved readability to enhance maintainability and ease of understanding for future developers
removed the deleteFilesAfterClose ( ) method and adjusted fileMmapEnableIfSupported ( ) calls in BTreeMapTest . java to stream
added a return statement to the iterator in SortedIntList and created a new Iterator class with a corresponding test to improve iterator management and ensure correct
unregister the object in JMXHelper to prevent memory leaks and improve error handling in JMX management
[ hotfix ] [ config ] change rocksdb writebuffer size from 4mb to 64mb
removed the ' true ' parameter from the constructor of the Style class to simplify the constructor and avoid unnecessary parameters
replace ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure proper handling of message encoding in the request
samza runner : remove json graph config for portable pipeline
remove the use of the deprecated vector3f in helloaudio .
refactor LoopRotateBadNodeBudget class for improved readability to enhance maintainability and clarity of the codebase
updated ` convertToMongoType ` methods to accept ` TypeInformation < ? > ` as a parameter across multiple classes to enhance type conversion functionality and improve
fix inputbox renderer to work with complex value ( not complex )
simonstewart : fix the issue that sendkeytoactiveelement . tostring ( ) return an empty array instead of an array .
addandscalemultiimage do n ' t try to scale non - transparent image .
removed the extendArgumentCheck method and the extendWrapStore method from DBMaker . java to streamline the code by eliminating unused methods
add a call to updateshiftstatenow ( ) to update the shift state
removed the ` DETECTED _ ACTIVITY ` constant and its associated getter in ` SerializableLocation ` , and updated ` CSVFileLogger `
updated import statements from ` org . eclipse . websocket . extensions . ExtensionConfig ` to ` org . eclipse . websocket . protocol . ExtensionConfig `
removed import of Buildable from AaptPackageResources . java to streamline dependencies and improve code clarity
added comments to identify unused variable indices in multiple classes to improve code clarity and maintainability by addressing potential issues with unused variable access
updated exception message in WebSocketUpgradeHandler to include response status to provide clearer context on the status of the invalid upgrade protocol
updated formatting of blockMode assignment in P11Cipher . java to improve code readability and maintain consistency
updated Mockito library version in the project to ensure compatibility with recent changes in testing framework
removed redundant code in Merge . java to streamline permission checks for plot ownership to improve code clarity and maintainability
removed deprecated getConversationID ( ) methods from HttpContentResponse , HttpResponse , Request , and Response classes to streamline code and improve maintainability by
update dummyfreettsvoice to use de . dfki . lt . mary . featureprocessors instead of de . sun . speech .
refactor ` stripQuotes ` method to use ` PlanUtils . stripQuotes ` for consistency across classes to improve code maintainability and reduce
refactor Rendering class and update rendering methods to streamline rendering logic and improve clarity in rendering context management
added repositories to the DefaultPluginManager to ensure all relevant resolution groups are included in the project ' s remote artifact repositories
close the applicationcontext when we finish the test
refactor PhysicsClient class to improve code readability to enhance maintainability and ease of understanding for future developers
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable frequent failure due to frequent failures
added a new File object initialization in ZipFile . java to ensure that the file object is properly instantiated
added a deprecated method ` handleAll ( ) ` to ` TryType ` and marked it as deprecated to indicate that the method should no longer be
make channel . uid non - null by default and add test
added logging of call stack traces and refactored import statements in GenericDAOImpl and ForumServiceImpl to improve debugging capabilities by providing detailed stack
removed the @ Test annotation from FormLoginIntegrationTests . java to enable testing of form login functionality in the application
mondrian : fix list unparse for fun and fundefs with multiple parentheses
refactor GET _ CONFIGS _ SELECTED _ MORE _ THAN _ MORE _ THAN _ ONCE _ QUERY to improve
corrected the spelling of " supressWarnings " to " suppressWarnings " and added Java version check for InnocuousThread " to
updated JsonTreeReader to improve error handling for unexpected JsonElement elements to enhance robustness by providing clearer error messages for unexpected JSON elements
added argument handling for the " -- " option in TestCommand . java and a corresponding test case in ExternalTestRunnerIntegrationTest . java to improve test execution
added ` dedup ` and ` indexSolr ` methods to ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to enable ded
[ hotfix ] [ example ] make flink planner configurable in streamsqlexample
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure the database is reset before running tests
updated progress handling in Progress . java and added dispose method in RSSReader . java to improve progress display control based on user preferences
added a condition to check if the parent file exists before proceeding to prevent potential errors when the parent file does not exist
added utility methods for writing and closing POIDocument instances to improve resource management and ensure proper closure of resources
updated print statements in JavaBuild . java to include carriage return and newlines to improve readability of output formatting for better formatting
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for ` dotsPerPoint ` to improve
added generic user search query handling in CustomQueryFilterFactory and improved test cases in TestLdapAtnProviderWithMiniDS to enhance user authentication
add default port to uri route . fix # 299
[ snmp ] fix thingstatus . online check when thinghandler be initialize ( # 11858 )
[ # 10236 ] instructor : edit session : only allow instructor with submit privilege ( # 10266 )
added @ Incubating annotation and marked methods as deprecated in AvailableSettings . java to indicate that these settings are outdated and should not be used
refactored the path handling logic in FileResolverImpl . java and added a new WarFileResolverTest . java file to improve code clarity and
updated the message format for newFlushedSize in DocumentsWriterPerThread . java to include docstores to provide clearer insights into the
fix dirt example to use getunlocalizedname ( ) instead of func _ 149739 _ a ( ) .
corrected the spelling of " stripWhitespaceX " and " stripWhitespaceY " in ImageProcessor . java to improve code readability and maintain
updated the calculation of locks in FeedRefreshUpdater to use a multiplier of 1000 to improve thread management by allowing longer lock times
updated the ` deserializeFrom ` method to include an ` exactSearch ` parameter in ` TsFileSequenceReader ` and added a new test for
( chore ) camel - csv : remove unused parameter
added preferred size adjustment for the pane in the NavigationShareTab to improve the visual appearance and usability of the UI components
refactor beidercreamorsefilter to use a single tokenattribute instead of separate offset attribute .
updated Upnp classes for consistency in naming conventions to improve code readability and maintainability
updated the way the burst ' s collided position is set in LensWarp . java to ensure the burst ' s collided
added unit tests for the ` toJson ` method in ` JsonTest . java ` and updated imports and assertions in ` JsonTest . java
refactor MutableContextDataSupplier for improved clarity to enhance maintainability and readability of the code
change exception handling from Exception to Throwable and log a warning instead of a generic exception to improve error handling and provide more informative logging
updated the KubernetesMockServer constructor to include a HTTPS parameter to enhance security by allowing secure connections to the Kubernetes server
add stamp to the foreigncallnode in defaultjavaloweringprovider to make sure that intrinsics be compute when create a call .
updated HTTP method handling and response headers in DefaultServlet and its test to ensure proper handling of HTTP methods and improve test coverage for GET and OPTIONS
tika - 362 : fix problem with numberformat on non - english locale .
replaced throw statements with setException calls in ShowFileRequestHandler . java and added a new test case in ShowFileRequestHandlerTest . java to improve error
added try - catch functionality to ReflectorClassWriter for handling exceptions to enhance error handling and improve code organization in exception management
added a new method ` clamp ` to the ` Vector ` class and implemented its functionality in ` Vector2 ` to enable clamping vector values based
added OAuth2 authentication handling in ChainedTokenGranter to ensure proper access token creation based on client and requested scopes
refactor BC _ instanceof class for improved clarity to enhance maintainability and readability of the code
remove setsaveflags ( save _ all ) in favor of setsaveflags ( save _ all )
updated UaaUrlUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to enhance test structure and ensure compatibility with the
hhh - 14165 fix nativequery . addscalar ( ) to use basicdomaintype instead of type . getname ( )
added a WeakHashMap to track font availability in SunLayoutEngine to improve performance by reducing redundant font retrieval operations
fix ( fastutil ) : use classlayout . class _ layout _ int _ array _ instance _ size in typedset
simonstewart : fix a couple of test that fail on the ci - server
refactor BrokerRequestUtils methods for improved readability to enhance maintainability and clarity of the codebase
refactor instance management in InjectorBuilderImpl to use a map for uninstantized instances to ensure instances are processed in the correct order
updated the method calls in ` BuildTargetToRawTargetNodeTransformer ` to use ` getBasePath ( ) ` instead of ` getAbsolutePathToBuildFile
added null check for the value before parsing the integer in EchoMessage . java to prevent potential NullPointerException when the value is null
add keepalivelistener to jabber service so it do n ' t interfere with jabber connection .
updated the DEFAULT _ LOAD _ FACTOR constant from 0.067F to 0.067 in IntHashSet . java to ensure consistent load factor for the
added a method to retrieve all data types physical variations and updated related classes to utilize this new method to improve code clarity and maintainability by
change package name of htmlassettranslator and stringresourcetranslator from com . google . zxing to com . google . zxing . client
updated the logic for handling overview actions in OverviewState . java to ensure correct behavior when the overview actions feature is enabled and remove the shelf from
added the @ Entity annotation to the BaseActivityEventEntity class to indicate that the entity should not be treated as a primary entity
added tracing functionality for launcher states in NavBarSwipeInteractionHandler and TouchInteractionService to enhance debugging capabilities for better user experience
added a new file ` InvalidOptions . java ` that implements a test class for validating command - line options to ensure that the application correctly handles
added a check to log an error if the number of supported displays does not match the old and new display dimensions to ensure that the application does not
refactored OAuth20UsernamePasswordAuthenticator to use OAuth20Utils for client ID and secret retrieval to improve code reusability and maintainability by
do n ' t wrap servletexception in test , it should be disable by default .
added a conditional statement to set the status to ShortcutInfo . DEFAULT if the status is set to ShortcutInfo . DEFAULT to ensure the correct
camel - seda - make it easy to configure the seda endpoint to use a default queue size .
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods to App and Kernel classes to enable batching of updates during processing
added HttpClient configuration to ThirdEyeApplication to enable HTTP client support in the application
added sorting functionality to JobInstanceFetchRequest and included it in JpaJobPersistenceImpl to enhance job instance fetching by allowing custom sorting options
updated the cancelCryptoFacilitiesOrder method to retrieve the currency pair from open orders instead of throwing an exception to improve order cancellation handling and
make sure keyboard be hide when click in algebraviewweb
use nfi . getfunctionhandle ( ) for memcpy ( ) and memcpy ( ) .
reformatted code in BindLdapAuthenticationHandler . java for improved readability to enhance maintainability and clarity of the code
added tooltip block functionality to ToolTipManager and enabled it in ModeToggleMenu to improve user experience by allowing tooltips to be blocked
added a timeStyle parameter to DefaultDateTypeAdapter and related classes to allow customizable date and time styles for improved flexibility in date formatting
updated playerSet string formatting from " UID : " to " ( " ) " to improve clarity and consistency in player representation
added a check for empty lists in the List class to ensure proper handling of empty lists in the code
added exception handling for CommandException in ParametricCallable . java to ensure proper exception management for command execution errors
modified the ` getLikeExpression ` method to include a boolean parameter for regexp handling to enhance flexibility in evaluating regexp expressions based on input type
added start ( ) and stop ( ) methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl to implement lifecycle management for stream supplier components
updated locale handling in LuceneTestCase to ensure consistent default locale settings for tests
updated multiple Java classes related to PGConnection , PGStream , PGConnection , DefaultJavaSSLFactory , LibPQFactory , MakeSSLFactory ,
refactor context handler initialization into a separate method ` initContextHandler ` to improve code readability and maintainability by encapsulating context handler
camel - test - add a routebuilder ref test for the blueprint
nifi - 11447 : fix test failure in testexecutestreamcommand
refactored the ` returnTypeSubstitutable ` method to remove the ` Warner ` parameter and updated conditional checks for covariant return types
[ thymeleaf ] allow to throttle char and byte output in testexecutor
removed redundant variable declaration for pixel in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to simplify code and
refactor Annotation and AnnotatedElement classes for improved clarity to enhance maintainability and readability of the codebase
added a new interface ` Model ` in the ` org . apache . poi . hssf . hssf . model ` package
( chore ) camel - http : use constant instead of hardcoded string
added a configuration option to clear the entity manager in JpaItemWriter and JpaItemWriterBuilder to allow users to control the clearing of the
added null checks for ShortcutInfo and intent in multiple classes to improve robustness and prevent potential NullPointerExceptions
[ hotfix ] [ table - common ] make twodimensionalcollectionvaluedmap explicit ( true )
updated exchange specifications from " BTC - e " to " Wex " and changed the exchange name from " BTC - e " to
added null checks in OrcEncodedDataConsumer and enhanced null safety in EncodedTreeReaderFactory to improve code robustness and prevent potential NullPointerException
added null check for files in SegmentInfos . java and a corresponding test in TestIndexReader . java to ensure that a FileNotFoundException is thrown when
( chore ) camel - rest - dsl - elasticsearch : fix date parameter handling
fix the issue that the return value of bigdecimal . tobigdecimal ( ) may be negative .
updated limit checks from < 1 to < 0 in RangeInputStream and RangeReader classes to ensure that the method returns - 1 when the limit is greater
camel - core - optimize to reduce log clutter when there be no route in the registry .
fix calculation of hl segment start time in the hl chunk source
updated test classes to extend LuceneTestCase instead of JUnit Framework to improve test organization and maintain consistency in naming conventions
added a new ` StatefulMapper2 ` class and a state mapping test for ` keyedStream ` in ` StatefulOperatorTest ` to
removed null check before setting bitmap shader in Area . java and Line . java to simplify code and improve readability by eliminating unnecessary null checks
removed dbExists method and updated database checks in Blockchain . java and BlockchainTest . java to streamline database existence checks and improve code clarity
added trimming of whitespace from the group value in SQLPlusSupport . java to ensure consistent handling of leading and trailing whitespace
fix issue with apr socket not be set to async
ggb - 260 fix divide by 2 in web
add controller health check metric for good / bad call
hide the shared avatars view in LocalFileListAdapter to improve user experience by preventing the display of shared avatars
[ mebis ] move scss file to their own source instead of client bundle
updated argument length checks from ` > = ` to ` < = ` in multiple classes to ensure proper validation of input arguments to prevent ArrayIndexOutOfBoundsException
added logging level checks in LogInterceptor to ensure command execution is only executed when logging level is fine
replaced ` awaitLatch ` with ` assertWaitUntil ` for span completion checks in ` EventBusTracingTestBase . java ` to improve test reliability by
updated QueryParser to use Locale . getDefault ( ) instead of a static method to simplify locale management and improve code clarity
remove duplicate code in entrycustomizationdialog . add ( ) and add ( ) .
[ jbrules - 2423 ] fix ttt unit test and add test case for it
pdfbox - 4071 : fix typo and add ocspunauthorized class
added serverState variable and modified sleep duration logic in SSL . java to ensure proper synchronization and error handling for server failures
added functionality to track and manage the number of open connections in the SourceCounter class to enhance connection management capabilities within the application
add method to executorserviceexecutionstrategy to make execution strategy public
added a new method ` getSrcRoots ( ) ` to the ` BuckConfig ` class and modified the ` createDefaultJavaPackageFinder `
updated the initialization of the Writer to use PrintWriter to improve output handling by utilizing PrintWriter for better output management
[ hotfix ] [ test ] fix test instability in filesourcetextlinesitcase
added support for handling DataTable in JRubyStepDefinition to enhance functionality to support DataTable in JRuby integration
updated visibility settings for author components and refactored image retrieval logic in ApacheHttpClientMediaWikiApi to improve visibility management and enhance functionality for custom images
refactor ReadSentimentDataset class for improved readability to enhance maintainability and readability of the code
updated error message in FormulaParser to include additional context to improve debugging by providing clearer error messages for parsing errors
added methods to get and set a bind address in WebSocketClient . java to allow dynamic configuration of the socket bind address
[ java ] delete aeron directory before close the cluster in consensusmoduleharness .
refactored width and height setting logic into a single method call to simplify code and improve readability by consolidating width and height assignments
updated session fixation attribute check to use Boolean . valueOf for better readability to improve code clarity and prevent potential null pointer exceptions
[ te ] fix wrong parameter order when switch to digitalchannel . mode
simonstewart : add an increment / decrement backoff method to chromebinary .
added HttpMethod and Route attributes to ClientResponseWrapper for improved request handling to enhance the client response wrapping functionality by allowing dynamic HTTP method and route retrieval
do n ' t use integer . min _ value when precompacting row
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes and added a new test class for invalid render intents to ensure correct rendering intent
add ` ` not sure ' ' checkboxes to contribution question ( # 10266 )
added multiple calls to ` PublicMethed . waitProduceNextBlock ` in ` ContractInternalTransaction003 . java ` to ensure proper block
replaced Serializable interface with SuppressFBWarnings in KafkaExactlyOnceSink . java and removed Serializable interface from KafkaRecord . java to improve error handling
added PGConnection support to the connection initialization in PooledConnectionImpl . java and created a test for PGConnection in BaseDataSourceTest . java to ensure
refactor PropertyTable and CloseIgnoringInputStream classes for improved clarity to enhance code maintainability and readability
updated logging level from warn to info and reduced log level from warn to trace in TokenAuthenticationHandler . java to improve clarity of log messages and provide
mark Hazelcast class as deprecated to indicate that the class should no longer be used and may be removed in future versions
updated the handling of unbounded key JCE requirement in AmbariManagementControllerImpl and refactored command report creation in AbstractServerAction to
refactor NamedListCodec to support multiple iterators and update related methods to improve functionality and maintainability of the code
fix npe in migrationmanager # assigncompletelylostpartitions and add test
added InclusionRule to ApiExample . java to configure schema inclusion settings for improved functionality
updated the expected value in the assertion from 3.0 to 70.0 to ensure the test compares with the correct mean value
fix a bug in the creation of linear ring for polygon with closed and single point
added methods to retrieve base name and dimension count from the ConstantPool class to enhance functionality for handling constant pool operations
add setdebugevaluationfornexteval ( boolean ) to formulaevaluator to allow easy debugging
refactor ( testmodule ) : migrate testmodule to junit 5 ( # 3736 )
do n ' t enable direct play for live tv if not enable
added a return statement in DynamicStyleBar . java to prevent further processing during execution
added SLF4J logging to the Utils class for debugging purposes to enhance visibility into the properties being set and reset during repl dump operations
refactor ReactiveAuthorizationManager to improve code organization to enhance maintainability and readability of the code
added a check for boolean type in the MethodEmitter to ensure proper handling of boolean types in the code
rename llvmobjectnuller to llvmaddressnuller to avoid confusion .
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
add a new test suite for the CaffeineCacheDefaultConfiguration class to verify transaction - aware cache proxy functionality in the cache configuration
added a method to calculate a bounding box based on the number of components to improve bounding box calculations for mesh rendering
added support for a configurable target hash function in TargetsCommand to enhance hashing performance by allowing users to choose between SHA1 and murmur
refactor DefaultConfigurationProperties for improved clarity to enhance maintainability and readability of the code
added high light color and alpha settings for ListViewMultiChartActivity and modified highlight drawing logic in BarChart to enhance visual appearance and improve accessibility of chart
[ hotfix ] remove duplicate pgpathplanmap entry in clusterplanrouter
[ hotfix ] [ test ] fix flaky test in infinispanremoteproducerit
added a check to remove existing artifacts in MavenArtifactFetcher and refactored dependency fetching logic in MavenDependencyResolver to improve resource management and prevent
updated the fragment shader in SpriteBatch . java to include GL _ ES conditional compilation to ensure compatibility with OpenGL ES environment
refactor RSGroupInfo to use Set instead of SortedSet for servers and servers to improve performance and simplify data handling
added a try - catch block to load the JspPage in TagLibConfiguration and changed log level from warn to debug to improve error handling and
updated the default match version handling in CustomAnalyzer and added a DummyVersionAwareTokenFilterFactory in TestCustomAnalyzer to improve token filtering capabilities and ensure
added a test for reading and retrieving package archive information in ShadowPackageManager to ensure that the application info reads correctly from the setPackageArchiveInfo method
replaced direct method invocation with MethodUtil . invoke in multiple classes to improve package access checks and ensure proper package access checks
added imports for ProjectConfigurationStartEvent and TaskStartEvent , and enhanced progress tracking in Main . java and ProjectReader . java to enhance the
simonstewart : remove unnecessary synchronization in androidwebdriver
do n ' t set initializationfailtimeout to 0 in hikariconfig . getinitializationfailtimeout ( ) .
removed the timeout parameter from the getResult method and added an error method for HTTP requests to simplify the method signature and improve error handling functionality
changed the ` isNative ` field from ` boolean ` to ` transient boolean ` and modified its usage in the ` addEntry ` method to simplify
[ hotfix ] fix checkstyle violation in centrypointcallstubmethod
automation : rename ruleenablehandler to ruleenablementactionhandler to avoid confusion
fix a couple of javadoc error report by findbugs
updated logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of authentication request processing and enhance debugging information
[ hotfix ] [ test ] fix typo in kafka test
refactor repository ownership check to handle null cases to improve robustness by avoiding potential NullPointerExceptions
added support for handling font file extensions . otf and . OTF in the SunFontManager class to enhance font processing capabilities by supporting additional font
refactor type matching logic in AnnotationMatcher . java to improve clarity and correctness of type matching
replace " OFF " with " SEVERE " in the Grep class to improve error handling by providing a more specific error message
added a check for debug logging before logging debug messages in FaultTolerantChunkProcessor . java to avoid unnecessary string concatenation when debug logging is
[ java ] do n ' t create an empty list for ` ` include ' ' and ` ` exclude ' ' .
added checks for ` openFolder ` and implemented ` onHomeIntent ` methods in ` mmm Launcher . java ` to ensure proper handling of home
updated maximum bitrate from 110 to 30 in the configuration to accommodate larger data sets
removed duplicate option entries from the options collection in CommandLineParser . java to streamline code by eliminating unnecessary duplicate entries
trim whitespace from the returned description to ensure consistent formatting by removing leading and trailing spaces
updated the output filename to use a relative path instead of a relative path to simplify the output path for better clarity and maintainability
removed the pid from the error log message in ProcessBesuNodeRunner . java to simplify error logging by eliminating unnecessary information
added getter methods for the loaded music and sound in MusicLoader and SoundLoader classes to provide access to the loaded music and sound resources
removed unnecessary import of ClassUtils and updated type casting in OnBeanCondition . java to improve code clarity and maintainability
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording for testing purposes
cpufeature and memoryfeature : set ` ` pause ' ' button only if it be not null
refactored the account checkbox and checkbox preference handling to use a single instance of PreferenceCategory to simplify code and improve maintainability by reducing complexity in
fixed an issue where an unavailable presence would not be send to the server . jm - 133
modified StringBuilder initialization in ObjectInputStream to use a predefined initial capacity based on utflen to improve performance by avoiding unnecessary object creation when utflen is zero
disable statsd export by default in test
refactor InterruptedException handling to improve code clarity to enhance maintainability and readability of the code
refactor ServiceTicket class to improve code organization to enhance maintainability and readability of the code
refactor connection handling logic in ConnectionCheckOperation . java to streamline SSL connection checks to improve code clarity and maintainability by reducing redundancy
fix ( core ) : fix conversion of map payload string .
added check for ` idxObj ` instanceof in ` SolrServiceCommunityCollectionItemFilterPlugin ` and updated test data in ` XmlWorkflowFactory
added FLAG _ ACTIVITY _ REORDER _ TO _ FRONT to Intent in PasscodeManager . java to ensure proper intent reordering
refactor ( patternparameterconfigurator ) : remove deprecate annotation
modified the ` beginDraggingWidget ` method to return a boolean indicating success or failure to improve error handling by checking for null drawables before proceed
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check for the root object and collected components from the tabbed pane to avoid potential NullPointerExceptions during component collection
added confusion matrix to the test , so that it can be use in the test .
bug 55237 - lastsampleok in jmeter should be set to true instead of false .
added unit tests for Bluetooth headset methods and modified import statements in ShadowBluetoothHeadsetTest . java to enhance test coverage and ensure correct
rename ` ` # autowire ' ' to ` ` # autowired ' ' to avoid confusion
added " clone " to the set of objectMethods and introduced a new constant FINALIZE _ METHOD to enhance functionality to support cloning and finalize methods
[ hotfix ] [ test ] add null check for counter object in integrationtestbiglinkedlist
implement can _ get _ instance _ info command that return not _ implemented error code .
updated the ` setRegisteredServiceFilter ` method to include a service ID check to ensure that the registered service matches with the specified service ID
added a null check for the activity before running the Runnable on it to avoid potential NullPointerExceptions when accessing the activity
fix checkstyle issue in io / job / heartbeat / heartbeatmonitor . java and axonserver . java
added stringType property and its getter / setter methods in DatabaseAdaptor , and changed access modifiers from private to protected in JDBCSessionDataStore to allow subclasses
solr - 2387 : fix UIMAupdaterequestprocessortest by use suggested category instead of language
refactor thread name handling by introducing ` updateThreadName ` and ` resetThreadName ` methods to improve code readability and maintainability by reducing
refactor TaskletAdapter class for improved readability to enhance maintainability and ease of understanding for future developers
drools - 2200 fix npe in decisiontableimpl . evaluate ( )
updated TextureMap patch and modified defaultEnabled logic in SplashProgress . java to ensure proper flushing and disable the texture map creation on macOS
added tooltip text to the showCGCP checkbox to enhance user experience by providing a clear tooltip for the checkbox
updated method calls from ` addTypes ( ) ` to ` addType ( ) ` in ` EnumFactory ` , ` InterfaceFactory ` , and
add text and description to the hot reload action ( # 1626 )
do n ' t use isspreadsheetlabel ( ) , use hasspreadsheetlabel ( ) instead
changed the type of the BRIGHTNESS _ FACTOR constant from ` intValue ( ) ` to ` doubleValue ( ) ` to ensure correct conversion
change filter _ action _ pattern so that it do n ' t affect the revision count .
added a boolean parameter ` isAdmin ` to the ` createUser ` method and implemented user management methods in ` HomekitAuthInfoImpl ` to
added null checks for return types in IndexedPropertyDescriptor and PropertyDescriptor , and introduced a new test class Test6723447 for introspection to ensure
( chore ) camel - dynatrace : remove unnecessary collection .
updated method parameter names for consistency and clarity in Context . java and Response . java to improve code readability and maintainability
fix nullpointerexception in itemstack . setcapabilitiesfromspongebuilder ( ) .
[ hotfix ] [ test ] fix wrong assertion in lifecycleutilstest
added validation for contract types and improved contract creation logic in Wallet . java , GetContractServlet . java , and GetContractServlet . java to
added new package - info . java files for Image , com . ibm , com . ibm . lang . management , and com . ibm . virtual
refactor the add method in DocumentsWriterDeleteQueue to use a concurrent update mechanism to improve performance by avoiding unnecessary synchronization
modified JavadocTool to ignore duplicate JavaFileObjects and updated test arguments in T7091528 . java to improve efficiency by avoiding unnecessary parsing of
change default value of STRIP _ IPV6 from " true " to " false " and adjust substring logic accordingly to ensure proper handling of host
updated the ` LoginServerTokenEndpointFilter ` to accept a list of parameter names and refactored the ` addNewUserParameters ` method to
fix c / cpp and add c / c key to languagefactory .
replaced custom thread pool executor with a custom one - thread executor in multiple classes to improve code maintainability and reduce boilerplate code
added caching and expiration headers to the LoginService , FormAuthenticator , and ConstraintTest classes to enhance security and ensure proper response handling in the application
added exception message to error log in voicemanager to improve error reporting by including the exception message
updated HSSFTests and TestEmptyDocument classes to use specific test suites instead of AllHSSFUtilTests to improve test coverage and ensure
refactored FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
updated the method of obtaining the class directory to handle null output cases to ensure robustness by preventing potential NullPointerExceptions
added access control priority settings for resource access in Java2DRenderer to enhance security by controlling access control during resource operations
added a try - catch block around the draw method in TestTriggerCoverage . java to handle ArrayIndexOutOfBoundsException to ensure that the build process does not
modified the visibility of ` mbean ` and refactored CPU time testing logic in ` GetInternalThreads . java ` to improve thread CPU time validation
added a check for empty comments in TabsAndIndentsVisitor . java to ensure that comments are not included in the validation logic
updated assertions in SimDistribStateManager and TestTriggerIntegration to use a threshold of 100 instead of a fixed value to allow for more flexible validation
updated string comparisons to be case - insensitive for change set conditions to ensure case - insensitive comparisons for change IDs and authors
added a method ` getString ` to return a default string value from a map to ensure proper handling of null values in the ` getString ` method
updated date formatting in TweetActivity to accommodate different locales to ensure consistent date representation across different locales
nifi - 11447 : fix nullpointerexception in standardprocesssession when there be no connection
refactor keyboard focus handling in DetailFragment by extracting focus and focus management into a separate method to improve code readability and maintainability by
updated the way the extra class path is set in App . java to ensure proper formatting of the file path for better compatibility
make solve ( ) synchronize so that solve ( ) do not create a new matrix array .
int - 1671 add miss import for message ( )
refactor SQL query construction in PostgresConnector and MapReduceJobHistoryUpdater to use a new join method in TaskAttempt to improve code readability
updated filter handling logic in AquaFileChooserUI to ensure selected file filters are correctly validated to improve user experience by ensuring the correct file filter is
do n ' t hold the lock in order to avoid deadlock .
updated the ` toFormulaString ` method to return " TRUE " or " FALSE " based on boolean value and added a new test method for formula
[ hotfix ] [ test ] fix checkstyle violation in pgtokenizertest
refactor variable handling in Java2TypeScriptTranslator to improve clarity and correctness in processing anonymous class variables to enhance code readability and maintainability
added sequence creation and alteration for auto - increment columns in PostgreSQL to ensure proper handling of auto - increment columns in Postgre
updated byte reading logic in DataInput . java to use bitwise operations instead of bitwise operations to ensure proper handling of negative values in byte reading
removed assertions for " Dimension VerticalPhysicalPixelSpacing " and " Dimension HorizontalPhysicalPixelSpacing " in ImageParserTest . java to streamline test
updated the method call from ` getParent ( ) ` to ` getParent ( ) . getParent ( ) ` in ` mmm Component . java ` to ensure
reformatted import statements in multiple Java files for consistency to improve code readability and maintainability
replace ` ENGINE _ finish ( testEngine ) ` with ` ENGINE _ free ( testEngine ) ` and add ` ENGINE _ init
added iteration method and updated interleave control logic to improve iteration handling and enhance the controller ' s functionality
updated FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper release of resources to improve resource management and prevent memory leaks
added deleteLogs ( ) method to TestRecovery . java to ensure proper cleanup of logs during tests
modified URL handling in BrowserActivity to launch an activity if the URL contains " twitter : / / " to ensure proper navigation to the twitter URL if
[ java ] wait for host to be up before start deploymentgrouptest .
changed logResult from false to true in VisibilityController . java to indicate that list labels are allowed in the logging output
increased the maximum number of auto - retries from 0 to 25 in the RestTemplateRetryTests to increase the maximum number of retries for better test reliability
updated print statement in TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java to improve code clarity and ensure
added support for a new resource type ` fraction ` in the ` PackageResourceLoader ` , ` ResType ` , and ` Converter ` classes to enhance
removed file confirmation check in BasicFrame . java to simplify the code and improve readability
added null checks for groupId and artifactId in UpgradePluginVersion . java to ensure proper retrieval of dependencies from resolution results
hbase - 27165 throw quotaexceededexception instead of donotretryioexception for table that exceed the total number of table
refactor multiple token - related classes to improve code organization to enhance maintainability and readability of the codebase
refactor TestFuzzPreLoop class for improved readability to enhance maintainability and clarity of the codebase
added a validation check to ensure f0 is non - negative to prevent potential errors with negative values
refactor SchemaRetriever and TableRetriever to improve null checks for primary and foreign key columns to enhance robustness by preventing potential NullPointerExceptions
change inputbuffer to use a static cache of b2cconverter to improve performance .
added support for allowing or disabling empty screens in the workspace based on user preferences to enhance user experience by allowing or disabling unnecessary screen
added a warning log message about the deprecation of the cucumber - needle in NeedleFactory to inform users that the use of deprecated CDI components
updated theme handling in ShadowTest , ShadowArscAssetManager , ShadowArscAssetManager , ShadowVMRuntime , ShadowArscAssetManager ,
updated error messages in TestCase . fail ( ) to use Arrays . toString ( ) for better readability to improve clarity and maintainability of error messages
no effective change - add @ system _ versioning _ alter _ history to ehistory2
added new methods and properties for retrieving and setting prototypes in ScriptObject and modified existing methods in Global and ScriptObject classes to enhance functionality and improve
updated the shuffle method in TestFilterDirectoryReader to use a random order to enhance randomness of the readers during testing
updated the logic for setting the display name in UsersAndGroupsSearchProvider to conditionally use the correct remote clarification based on the user '
updated path handling in CookieRetrievingCookieGenerator to ensure a valid path is provided to improve robustness by preventing potential null pointer exceptions
remove unnecessary closing braces from multiple Java files to improve code readability and maintainability
updated cache name retrieval from ` getBackupCount ( ) ` to ` getTotalBackupCount ( ) ` in ` AbstractCacheService . java ` to
updated the page number comparison logic in ValidationResult . java to ensure that the page number is not equal to zero to improve accuracy of page validation
added a null check for the focused widget in the highlighted state condition to ensure that the focused widget is not null before proceeding with highlighting operations
fix checkstyle issue in util / soundutil . java ( # 833 )
refactor ApplePackageDescription to use a new method for obtaining the AppleCxxPlatform flavor domain to improve code modularity and maintainability by
fix issue with ` ` show ololoed ' ' syntax when use ` ` show ololoed ' ' format
changed method names from onConnect to onAccept in ServerSessionListener and AbstractHTTP2ServerConnectionFactory classes to improve clarity and consistency in method naming
fix typo find by codespell on fossies . org
added a new file TestGetLoggerNPE . java to test logger behavior with NPE to ensure proper handling of NullPointerExceptions during logger operations
added a new method ` getData ( ) ` in ` PathSharingContext ` and replaced ` sharedMap ` with ` null ` in multiple classes to
move cast to castexact ( ) and cast to castexact ( ) and cast to object [ ] .
added functionality to conditionally use " NEXT VALUE FOR " in NextValExpression and related classes to improve flexibility in handling next value expressions based on
improve error message when access a resource bundle that be not pre - cached
refactor BoundedLocalCache to improve handling of pending writes and add a test for clearing pending writes to enhance cache management and ensure proper removal of
added " Leverage _ Level " parameter to QuoineExchange and introduced " order _ direction " in QuoineNewMarginOrderRequest
added bound initialization for properties in PropertyDescriptor and created a new test class Test7192955 to ensure that properties are correctly bound and validate their
added a new ` SetDisplayModeCallback ` interface and modified the ` setDisplayMode ` method in ` LwjglGraphics ` to handle
added a check to reset buttonsAwatingRelease to null if it ' s not already present to ensure that buttonsAwatingRelease is properly
use double . max _ value instead of region . use _ computed _ size for wrap width in linecell
corrected spacing in XSLTErrorResources _ it . java for consistency to improve readability and maintain consistency in error messages
replace HashMap with LinkedHashMap for paramValues in CustomChangeWrapper and CustomPreconditionWrapper classes to maintain the insertion order of elements in the map
replace single quotes with string . format ( ) in multiple text - related classes to improve performance and readability of string formatting
replaced the use of NamespaceContext with a direct method call to getNamespace in StaxXmlPullParser . java to simplify the code and improve readability
added support for nested joins in multiple test classes to enable testing of nested joins functionality
server : allow root admin to be specify by admin only
added caching for JavacFileManager and modified the CompletionTaskProcesor constructor to accept a cursor parameter to improve performance by ensuring the correct class
added Hive configuration settings for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to
updated import statements to use Hamcrest ' s assertThat method instead of JUnit ' s Assert class to simplify the code and improve readability by
use util . createhandler ( ) instead of create new handler ( ) .
[ flink - 2039 ] [ table - planner - blink ] fix the issue that symbolfilemapping do n ' t work correctly
removed debug print statements from TermFilterTest . java to clean up the code and improve readability
removed the Reflection class and updated TypeConverters to use TypeConverters instead to streamline the code by eliminating unnecessary reflection functionalities
refactored ThreadlessExecutor to use getter and setter methods instead of direct initialization to improve code readability and maintainability by encapsulating
refactor exception handling in DateTimeFormatter and add unit tests in TestDateTimeParsing to improve code clarity and ensure proper formatting of date - time values
rename ` ` chunk _ length ' ' to ` ` chunk _ length _ kb ' ' and introduce ` ` chunk _ length _ kb ' '
added a case for WILDCARD in Types . java and created a new class T7034495 . java with generic interfaces to avoid crash
replaced multiple do - while loops with a while loop in LotsOfEvents . java to improve code readability and maintainability
fix a bug in the transitdeciderule when a ref - character be use .
do not print micronaut version when it ' s not need
added unit tests for handling Print _ Area and Area3DPtg formulas in TestBugs . java to ensure correct behavior of formula handling
add ` ` / ' ' to name if it do n ' t have a ` ` / ' '
updated onHomeIntent method to accept an internalStateHandled parameter to enhance flexibility in handling home intents based on the internal state
refactor dependency tree handling in CxxBuckConfig . java to improve clarity and maintainability of the code
updated ` showDetails ` methods across multiple activities to accept an active tab parameter for improved functionality to enhance functionality by allowing users to specify the active tab
replaced occurrences of ` $ apply ` with ` apply ` across multiple Java files to standardize function naming conventions and improve code readability
updated the encoding logic in MinimalEncoder and adjusted test assertions in HighLevelEncodeTestCase to ensure correct byte sizes and improve test coverage
updated the formatting of parameters and comments in SourceBuilder . java for consistency and clarity to improve readability and maintainability of the code
added a call to notifyDataSetChanged ( ) in FolderSyncActivity to ensure the adapter reflects changes in data
added a method to set the default WAL sync mode in ShadowSQLiteConnection to allow configuration of WAL sync mode for SQLite connections
updated type erasure logic in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to improve type safety and ensure proper handling of generic types
remove unused getters from defaults3crtasyncclient
updated test cases in ParserTest . java to reflect updated length values to improve clarity and accuracy of error messages related to corrupted streams
add more information to the test failure message .
make graphbuilderphase . appendgoto ( ) more robust in case of unexpected error .
ggb - 208 fix for aioobe in some case , make sure we do n ' t try to draw an image if it
refactor SQLXML class to improve code structure to enhance maintainability and readability of the code
added a limit parameter to the getOrderBook method in YoBit and YoBitMarketDataService classes to allow users to specify a limit for order book
move gotwrongoopeexception to heapeexception in stresshierarchybaseclass
nifi - 11447 : add stream read constraint to standarddataflow to make it easy to configure
updated the way engines are retrieved and locking in PmsConfiguration . java to improve error handling by avoiding potential null pointer exceptions
corrected the spelling of " FullIterator " to " WheelIterator " and improved code readability to enhance code clarity and maintainability by
do n ' t crash if we ca n ' t find a bug pattern for a key .
[ java ] increase timeout to 10 second in localchunkprovidertest
changed the visibility of the ` uncomplete _ checklists ` menu item from ` true ` to ` false ` to disable the checklists
updated the result map handling in DefaultResultSetHandler and added a new Contract class with tests in DiscriminatorTest to improve the handling of result maps and
updated condition checks in OverviewComponentObserver . java to handle null defaultHome and unregistering the receiver to improve robustness by preventing potential NullPointerException
added VertxGen annotation to PumpImpl . java to enable code generation for code generation
removed unnecessary casting of FileDisplayActivity to FileActivity in FileDetailFragment . java and OCFileListFragment . java to simplify code by
trim leading and trailing spaces from tokens in ConfigAttributeEditor and add a new test to verify that trailing and leading spaces are removed in ConfigAttributeEditor
refactor ClassUsingAnotherAuxiliary , ClassUsingAuxiliary , and SelfClassWithAuxiliary to improve code
make dynamichub . singlemodulreference public and add getunnamedmodule ( ) to classloader .
added conditional logic to set ` relKind ` based on the presence of " pg _ " in the ` r ` case in ` DatabaseMetaData .
deprecated the TIER _ ENTERPRISE _ PLUS _ VALUE constant and modified URIs in Agent and AgentProto classes to improve code
updated the RQST _ FIELD _ DESC value and exception types in ThriftHiveMetastore . java and HiveMetaStore . java to
added a new module - info . java file that defines module exports and requires for various core components to define and manage module dependencies for better modular
updated flush state management and fill interest handling in SslConnection . java to improve connection reliability by ensuring proper flushing and handling of idle and non
refactored Log4j2LogDelegateFactory to improve log delegate creation logic and added a new test class for NoExceptionInInitializerError to
refactor LIBJVM and execution logic in ExecutionEnvironment and TestHelper classes to improve clarity and maintainability of code related to server and client
refactor methods and classes related to MongoDB operations to improve code organization and maintainability
fix ( pgwire ) : set default value for libpqfactory
disable flaky testinterprocesssemaphoreedges . testinterprocesssemaphoreedges test
added case - insensitivity sorting for theme keys in EditableResources . java to improve readability and ensure all theme keys are sorted
added a new file ` OSvTerminal . java ` and modified ` TerminalFactory . java ` to include OSV flavor handling to enable support for
added support for additional file extensions ( . gr and . gr ) in ClassType to ensure compatibility with additional file types
replace HashMap with TreeMap for combinedVectors and updated related methods accordingly to ensure consistent ordering of elements in the test results
updated loop condition to include a check for the size of values in XPathEntityProcessor . java to ensure that the loop does not exceed the expected range
updated WebSocketPolicy implementation to enhance WebSocket connection handling to improve reliability and performance of WebSocket connections
changed ` readPhoneStatePermissionGranted ` and ` setAccessWifiStatePermissionGranted ` to instance variables and methods in ` ShadowWifiManager ` to
added a new method ` resolveMessage ` with optional parameters for template and origin based resolution in ` StandardMessageResolver ` to enhance flexibility in message resolution
update asmutil to use class . assubclass ( ) . assubclass ( ) . assubclass ( )
added new classes ` LoggingAuditService ` and ` UaaAuditService ` for logging user authentication success , failure , and non - existent users
added nullability annotations to temperature and temperature state methods in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to enhance code robustness by
do n ' t generate proxy method for abstract class . fix # 118
camel - http : added support for proxyhost and proxyport option in camel - http component
updated the maximum encoding version from 1.1 to 1.2 in TemplateDTO . java to ensure compatibility with the latest encoding features and improvements
added a call to jdk . internal . util . StaticProperty . jdkSerialFilter ( ) in mmm System . java and ppp System . java to
added detail about the pool size to the log message in the abstractcamelcontext
removed the boolean parameter from the forceFinishScroller method across multiple classes to simplify the method signature and improve code readability
updated parameter name from ` realtimeTableConfig ` to ` rawRealtimeTableConfig ` in ` ensureRealtimeClusterIsSetUp ` method
added iserror ( ) and error ( ) methods to ValidationReport , and updated report handling in DisallowValidator , RefValidator , and RefValidator
updated ` InvariantDeviceProfile . java ` to use ` closestProfile ` for managing inline QSB options to improve code clarity and maintainability by
updated the ` createClassPath ` method to include ` throws Exception ` and modified URL encoding in ` SortedArrayStringMapTest . java `
updated regex patterns in TransformSteps . java from single quotes to single quotes for parameter validation to improve clarity and consistency in parameter matching
add null check to avoid npe
[ hotfix ] [ test ] add timeout to waituntil ( )
updated package - info . java files for mmm and ppp to improve documentation clarity and maintainability of the code
added a method to set the Docker image URL in Environments . java to ensure the correct image URL is used for docker operations
[ java ] add more call to system . gc ( ) in knowledgeagenttest
refactored AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
renamed the method ` createHardLink ` to ` copyFile ` and added a new method ` copyFile ` to improve code readability and
refactor methods in AsyncOperationDocProvider , SyncOperationDocProvider , and SyncOperationDocProvider to use a unified ` getDescription ( ) ` method
fix ( gate ) : make sure all device be in the same device
added a check for ` Xml . Document ` before visiting ` FindIndentXmlVisitor ` and ` FindLineFormatJavaVisitor ` to ensure proper handling
refactor NotesHelperTest , ReminderHelperTest , and GeocodeHelperTest to use AndroidJUnit4 instead of InstrumentationTestCase to improve test
move gaslimitrule and gaslimitrule from commonconfig to commonconfig
changed the visibility of ` setupData ( ) ` from public to private and added a static block to encapsulate the ` setupData ( ) ` method
renamed the variable ` autocommit ` to ` runInTransaction ` in the ` ChangeSet ` class and related code to improve clarity and consistency in
refactor TripleServerStream constructor parameters and add null check for listener to improve code readability and prevent potential NullPointerExceptions
[ flink - 11818 ] [ doc ] update doc for jobmanageroptions and restartstrategyoptions
added a new test method ` testIssue154 ` to ` SelectTest . java ` to validate SQL parsing and deparsing functionality for discount
refactor Common class to improve code organization to enhance maintainability and readability of the code
refactor app launching logic to use a context layer with a try - with - resources statement to ensure proper resource management and prevent potential memory leaks
refactor StreamExecDeduplicate class for improved clarity to enhance code maintainability and readability
add warn log when send kafka message to topic
dataes - 422 - add support for immutable property in simpleelasticsearchpersistententity and simpleelasticsearchpersistentproperty
change setcoord return type to boolean in geopointsys1d and geosegment3d .
added scroll gesture distance calculations and logging for scrolling gestures in AskGestureEventsListener . java to enhance user experience by providing insights into scrolling behavior
improve the ngram estimator to compare all the key , not just the first one
updated import paths for ScenarioScoped from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` across multiple files to align the
updated method calls in StatsLogCompatManager to retrieve folder icon properties to improve clarity and functionality of folder icon handling
updated method name from getServerSlogan to getServerName in ThemeUtils . java to ensure consistency with server naming conventions
8215275 : [ c2 ] ir : make sure - xx : : loopunrolllimit = = 240 be a valid condition
refactor SelectionHighlighter to use a dedicated setter for TransferHandler and update equals / hashCode methods to improve code readability and ensure proper handling of object
added a new ` StringResultConverter ` class to handle string conversions to improve handling of native string values and ensure consistent character encoding
camel - 19751 : camel - account : disable test that do n ' t run on apache ci
updated condition in WaitForSingleObject from " ! = 0 " to " = = 0 " in JansiWinSysTerminal . java to ensure proper
added null checks and buffer limit handling in BufferUtils . java to ensure proper buffer management and prevent potential NullPointerExceptions
updated the assertion in TestSolrDiscoveryProperties to use ` File . separator ` instead of a hardcoded string to ensure the test correctly verifies the
updated OS detection logic in AutoUpdaterServerProperties . java to handle windows and macOS pre - 10.15 versions to ensure accurate OS versioning
updated Lock class to use a string lockName instead of a File object to improve clarity and maintainability of the locking mechanism
updated the method to retrieve the app icon from the all apps view instead of the app icon to ensure the correct positioning of the app icon and
updated references from ' this ' to ' ClientDatagramEndPoint . this ' for consistency and clarity to improve code readability and maintainability by using
updated SQL query from " oreder by STEP _ EXECUTIONS " to " order by STEP _ EXECUTION
updated button handling logic in LwjglInput . java to ignore unknown buttons to ensure proper functionality by ignoring unknown button scenarios
[ hotfix ] [ test ] add permission test for task claim
replaced multiple instances of ` logger ` with a single instance of ` LOGGER ` across multiple classes to improve code consistency and maintainability by centralizing logger
updated SsoAccessTokenProvider and SsoAccessTokenProviderTest classes to remove unnecessary method visibility and added new test cases to improve code clarity and ensure proper
[ geos - 10133 ] skip test that fail on window due to macos github build
[ hotfix ] [ test ] disable mocking of alarm suppression
rearranged conditional checks for defaultCloseOperation in JFrame . java to improve code readability and maintainability
fix a nullpointerexception in libraryscanner when connect to mediadatabase
replaced ` metricsContext ` with ` solrMetricsContext ` for metrics initialization to improve clarity and consistency in metrics context management
updated file and folder display logic in OCFileListFragment . java to improve clarity and functionality of file listing output based on folder count
fix key pair provider to return an iterable instead of an array .
[ hotfix ] [ javadoc ] fix typo in sourceversion . java
added a new test class ` ThreadFactoryTest ` to verify the functionality of ` MyThreadFactory ` in the ` QueuedThreadPool ` class to
updated lock period retrieval to include dynamic properties and adjusted expiration logic accordingly to enhance flexibility in managing lock periods based on dynamic properties
added a new instance of TicketModel in EditTicketPage . java to initialize the ticket object to improve ticket management functionality
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable the dimissing of predicted apps
updated constructors in various assertion classes to include a class parameter for better type handling to enhance type safety and maintainability of assertion methods
updated menu item constants and added quote functionality in TweetActivity to enhance user experience by allowing quote functionality in tweets
make sure we do n ' t start another thread if it be already start yet
rename mediacodecaudiorenderer . usepassthrough ( ) to mediacodecaudiorenderer . shouldusepassthrough ( ) .
added a conditional check for ` result ` before offering failure in ` ServerHTTP2StreamEndPoint ` to ensure failure handling only occurs when the result is
updated German and French error messages in XSLT error resources to improve clarity and accuracy of error messages
added ThreadSafe annotation to CheckpointsCleaner . java to ensure thread safety during concurrent operations
fix mock rest adapter to use subscriber instead of observer .
reformatted the code for better readability in ComponentPresetManager . java to improve code clarity and maintainability
added support for unique column names in result sets by introducing a configuration option for unique column names in Hive
fix for ticket : 259 : remove the unused variable in maryguiclient . java
added session validity check in ` Session . java ` and a corresponding test in ` SessionHandlerTest . java ` to ensure that invalid sessions throw an
hhh - 14146 remove exceptionhelper . java that be no longer use
updated the keyPairGenerator initialization from a fixed value of 256 to a fixed value of 255 to ensure the key pair is generated with a minimum value
updated codec settings in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene41 postings format
[ hotfix ] [ runtime ] log checkpointrangeheaders when they be empty
add asymmetric wrapper to support oaep and rsa / ec / oaeppadding
aarch64 : switch from darwin _ aarch64 to macos _ aarch64 .
added logging for security exceptions in DebugSourcesResolver to improve error handling and provide clearer logging for security exceptions
removed unnecessary check for UNIX environment in AbstractTest . java to streamline code logic for better readability and maintainability
( chore ) camel - controller : change default value of controller . is _ primary to true .
replaced ` BufferUtils . newDisposableByteBuffer ` with ` BufferUtils . newUnsafeByteBuffer ` and added memory management to ensure proper memory management and prevent
change the USE _ PIPELINE _ DOWNLOADER constant from false to true to enable the pipeline downloader functionality
updated DST _ OFFSET assignment in SimpleDateFormat . java and added a new Bug7130335 . java file for time zone testing to
refactor code to use local variables for iconCount and selection variables to improve code readability and maintainability by reducing repeated access to mRollo
server : do n ' t try to create a default router when the plan do n ' t have one
refactor StringBuffer methods for improved performance to enhance performance and maintainability of string manipulation operations
added a uid field to the rule object in RuleResource . java to ensure that the rule object is correctly associated with its identifier
added null check for listener before unsubscribeing in RegistryProtocol . java to avoid potential NullPointerException when listener is null
added a new property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class to allow users to apply pretty print formatting
truffle : change visibility of access _ table array from private to public .
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests to use more descriptive terms to improve clarity and accuracy of error reporting for missing resources
( chore ) camel - tcp : move exception handle into the run method of xmpptransport .
updated multiple Java files including EventDirContext , ControlFactory , ExtendedRequest , ExtendedResponse , and DocFlavor to improve code organization and maintainability
added parameters for upgrade suspension status and modified related logic in AmbariManagementControllerImpl . java to improve handling of upgrade suspension status and ensure proper
start to update the copyright year for the FindsByCssSelector class
removed the initialization of the wfields list in the Resolver class to streamline the code by eliminating unnecessary variable declaration
added default key size settings for encryption and signing in OAuthProperties to enhance security by ensuring consistent key sizes for cryptographic operations
use getcolumnfamilycount ( ) instead of getcolumnfamily ( ) . length ( ) in test
replaced the usage of ` AllowedResourceAliasChecker ` with a lambda expression to simplify alias check logic for better readability and maintainability
updated ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and package - info . java files to improve code consistency and maintainability across serialization classes
added a reset method to the Cluster interface and implemented it in ClusteredServiceAgent to provide a mechanism for resetting the idle strategy in the cluster
updated the initialization of the Writer variable in ChunkedWriter . java to ensure the correct chunk ID is used for writing
added a new abstract class AbstractJobExecutor that implements the JobExecutor interface to encapsulate job execution lifecycle for batch processing
added a replayFuture variable and modified the replay logic in RecoveryStrategy . java to improve clarity and control flow during replay operations
rename ` hugeStaticBase ` to ` staticBase ` throughout the ` HugeResourceTest ` class to improve clarity and consistency in naming conventions
added a method to return service IDs based on discovery configuration to ensure service IDs are only returned when discovery is disabled
replaced usage of Math . random ( ) with SecureRandom for generating hashSalt to enhance security by preventing collision attacks
add a warning when runtime compilation fail during parsing fails .
updated the calculation of currentStart and baselineStart to include aggTimeBucketMillis to ensure accurate start times in the comparison process
added functionality to return a globally configured answer for abstract methods in CallsRealMethods . java and created tests for abstract methods in CreatingMock
refactor checkPackageAccess methods to accept Class objects instead of String names to improve security checks by ensuring only valid class names are checked
updated ContextPathPluginTest to extend AbstractPluginDataInit and added error configuration setup methods to enhance test structure and ensure proper error handling during plugin initialization
use bold font instead of standard font to improve readability
added a new request type ` REQUEST _ HAS _ TIS ` to ` TestInformationHandler ` and updated related logic in ` LauncherInstrumentation `
refactor connection handling in ConnectAction . java to use Mutex . EVENT . writeAccess for thread safety to improve code readability and maintainability
updated data structure from ` String ` to ` BuildTarget ` in ` TargetsCommand . java ` to improve type specificity and align with the
added new classes ` javaemul . internal ` and ` javaemul ` , including ` ArrayHelper ` , ` Comparables ` , `
added handling for the HOME and END character in the code to enhance functionality to display home and end operations in the terminal
removed synchronization around retrieving connected plots in PlotHandler . java to simplify code and improve performance by reducing unnecessary synchronization
replaced multiple conditional checks for installing " com . estrongs . android . pop " with a single Intent creation method to streamline code and improve
removed the ' public ' access modifier from the Roster constructor to enforce encapsulation within the Roster class
added basic constraints extension to certGen in TestUtils . java to ensure proper certificate generation with basic constraints
added a new test method ` testFixedNestedTransform ` to the ` TextVisualRegressionTest ` class to address a failing test due to incorrect transform
replaced conditional logic for calculating precision in TrieDateField and TrieField to simplify code and improve readability by eliminating unnecessary checks
removed the TaskbarStateHandler class and its associated functionality from BaseQuickstepLauncher to streamline the codebase by eliminating unused or redundant components
added a new file ` ArrayLength . java ` that tests the behavior of ` getFields ( ) ` and ` getDeclaredFields ( ) ` for array
add more logging to hzstartit . teardown ( ) and wait for the hazelcast process to destroy .
updated ApplicationSettingsService to use @ PostConstruct and @ ApplicationScoped annotations to improve lifecycle management and ensure proper initialization of application settings
updated assertions and calculation of newValue in Safepoint . java to ensure value is non - negative and correct the logic for handling negative values
updated thread name field type from charArray to String and changed return type from charArrayToString to stringOopToString to improve clarity and consistency in
updated the DEFAULT _ RAND _ SEED value from System . currentTimeMillis ( ) to 42 in HnswGraphBuilder and Lucene90H
add strokeobject and font to drawgraphics ( ) to allow customization of stroke
fix ( sql ) : remove duplicate code in sqlvalidatorimpl # expanddynamicstar
added a method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class using LittleEndian to track the interest of child records in the
added status warning icon to the frame in HTTPServer . java to improve user feedback by indicating a specific status code
use event . getmodifiersex ( ) instead of event . getmodifiers ( ) .
fix bug in amd64countleadingzerosnode and amd64counttrailingzerosnode .
fix npe in as2 client when content - type header be miss .
refactor locale handling in the Locale class to improve code clarity and maintainability
added a ` clearLog ` button to the ` ErrorConsoleController ` , ` ErrorConsoleViewModel ` , and ` LogMessages ` classes , and
removed unnecessary whitespace in RecentsView . java to improve code readability and maintainability
updated locale handling in Debug . java and changed method signatures in CaptionMap . java , CaptionMap . java , and DummyCaptionMap .
updated connection pooling behavior in multiple test classes and adjusted execution count in ConcurrentBatchIdentifierTest , SequenceOptimizerIdentifierTest , and AbstractTest classes to
simonstewart : add support for opera blink in the default session for the opera driver .
do n ' t swallow exception in managejournalspanel . downloadfile ( )
added multiple LIFX product entries to the LifxProduct class to enhance functionality by including additional LIFX product details
added asynchronous request handling in CollectionsHandler and updated related requests in CollectionsAPITest and CollectionsAPIAsyncDistributedZkTest to improve asynchronous collection management and
reformatted code for improved readability in PostgresDatabase and PostgresDatabaseTest classes to enhance maintainability and reduce redundancy in test assertions
updated LogPanel initialization to use repositoryModel . HEAD instead of null for objectId to ensure correct repository ID is used when objectId is empty
update bonewire to use unit _ xy instead of unit _ y
added a browserDestroy method to handle browser destruction to improve resource management by ensuring the browser component is properly stopped when destroyed
added a method call to wait for active collections in AutoScalingHandlerTest to ensure proper validation of API test violations
updated loop structure and added rounding logic in ScreenTerminal . java and removed an unused import in Tmux . java to improve code clarity and maintainability
updated soft reset logic to include specific controller states in SoftResetAction . java to ensure correct behavior based on the backend ' s current controller state
disable on - disc stream cache to speed up texture pack reload
added a conditional check for the parent folder assignment in Request . java and RequestV2 . java to ensure proper retrieval of the parent folder based on
fix typo : ' persistent ' - > ' persistent '
updated FileOutputStream initialization to use a custom close method to ensure proper resource management and prevent potential memory leaks
added error handling for RestClientException in StandardGitHubRepository . java to improve robustness by logging a 403 response for unauthorized access
added ` getOriginal ( ) ` method to ` MessageFactory2Adapter ` and updated test cases accordingly to enhance message factory functionality and ensure proper handling of
added @ SuppressWarnings ( " BanSerializableRead " ) annotations in multiple test files to suppress warnings related to serializable read operations
update regex pattern from " minor " to " minor " in Version . java to allow for a broader range of minor versions
updated initial and dismiss delay settings in ExtractionModelFrame . java to improve user experience by allowing smoother transitions
updated target handling in project generator methods to include passed - in and passed - in targets to improve clarity and functionality of target processing in the project generation
added timezone setting and assertion for time formatting in TimeTest . java to ensure correct time formatting for UTC time zones
refactor MediaSessionConnector class for improved readability to enhance maintainability and clarity of the codebase
use the endpoint . gethandler ( ) . getsslsupport ( ) method to get the ssl support
updated string concatenation syntax in GpsLoggingService . java to improve code readability and maintain consistency in formatting
added a conditional check for future exchanges in BinanceExchange . java and modified order ID handling in multiple services to enhance flexibility in managing future exchanges and
rename variable and method in adminaccountmanagementservlet . accounts to instructorcoursestable and instructoraccountstable in adminaccountmanagementservlet .
added a call to setAcceptQueueSize with maxWorkerThreads in ThriftHttpCLIService to ensure the connector respects the maximum number of thread threads
replaced ` getClass ( ) . getName ( ) ` calls with a static final variable ` PROPERTY _ DISABLE _ WATCHER ` to improve
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46177 - enable ssl
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and refactored exception handling in ` TestWindowFunctions
gcinspector : do n ' t assert duration > 0 for a really fast collection .
fix : return empty optional for method declaration with line comment
replaced memory reserve methods with a method to check if the operating system is on macOS to simplify memory management and improve compatibility with macOS environments
added multiple calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure proper validation of
hbase - 13257 hbaseadmin # gettablename ( ) should print the table description instead of the operation name
camel - 14284 : camel - cxf - allow to specify the service class for the WSDL service .
refactor YAML change log serialization to use a list and a container map to improve clarity and maintainability of the code
updated print statements in SchemaPrinter to include a newline character to ensure consistent formatting of output for unimplemented types
do n ' t send command line help for road regen
updated HomeFragment instantiation to use getActivity ( ) instead of getContext ( ) to ensure proper context usage for the footer and now playing fragments
added ` @ GenericGenerator ` annotation to multiple Java classes to enable native generation of data in the application
removed the ` country ` parameter from the ` getSystemTimeZoneID ` method and related code to simplify the method and eliminate unnecessary dependencies
added position and remaining bytes to the output stream in BZip2Codec . java and modified ByteBuffer initialization in TestBZip2Codec . java to
appwapplet : move logger initialization to appwapplet , not appwapplet
added a new constant VALUE _ TYPE _ EMPTY and modified the type initialization logic in the Value class to improve clarity and maintainability of type handling in
groupmanager : use ` group . equals ( ) ` instead of = = in groupmanager
refactored Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class for improved readability to enhance maintainability and ease of understanding for future developers
added a static method ` newInstanceExact ` to the ` TargetGraphFactory ` class for creating instances of ` TargetNode ` and its dependencies to enhance
fix typo find by codespell on fossies . org
fix serialization and deserialization issue in metadatacollection .
added logic to handle setting and deleting elements in the NativeArray to improve array management by ensuring proper deletion based on the presence of previous elements
updated file handling logic in FileUploader . java to ensure proper parent file management during uploads
added a new file UTF8ReaderBug . java to test XML parsing with supplementary characters to ensure proper handling of UTF - 8 character encoding in
added unit test base on user forum issue
updated assertions in BinanceIntegration and BinanceUsIntegration to include a new endpoint " @ ethbtc @ depth " with a broader
[ hotfix ] [ runtime ] set initial and max allocation to zero in parallelizer
removed import of AssertTree from AmbariManagementControllerTest . java to streamline dependencies and improve code clarity
modified the handling of system properties in mmm Agent . java and added a new class AgentCMETest . java to ensure thread safety when modifying
refactor ModelUtils to improve code organization to enhance maintainability and readability of the code
refactor AbstractDoubleArrayAssert for improved readability to enhance maintainability and clarity of the codebase
fix an index out of bound exception in the legend .
added testDelay ( ) and testAbort ( ) methods to CodeFirstSpringmvcIntf , TestResponse , and SpringMvcIT classes to
updated method to retrieve values from a dictionary instead of a single string and modified the condition to check for non - negative lengths to ensure accurate term
replaced the method of obtaining the source path from rule resolver to a new BuildTargetSourcePath instance to simplify code and improve readability by using a
add a warning if the versioning command be disable .
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added a ` numberOfFiles ` field in ` MediaFolder `
removed the " - b " argument from the AidlStep and GenAidlTest files to streamline command line argument handling and improve clarity
add a test case for issue # 79 , delete java . sql . statement from obligation
added a TODO comment to the FakeHttpLayer class to indicate that the test should not be executed
[ hotfix ] [ runtime ] remove error handler from embeddedleaderservice
refactor CompositeDiscoveryClient to use Single instead of Flowable for reducing instances to improve performance and simplify the code for better readability
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in method naming
[ hotfix ] [ config ] improve documentation of jobmanageroptions
do n ' t show ` ` no widget available ' ' when in search mode
fix ( xml ) : make sure we can load the wstxoutputfactory and wstxinputfactory
refactored the initialization of the ProjectWorkspace in AuditAliasCommandIntegrationTest to use a setup method to ensure proper initialization of the workspace during tests
removed logging statements for header view height and recommended widgets in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up unnecessary
camel - cxf : disable some test that fail on the ci - server
added error handling around the update ( ) method in CachedStore . java to improve robustness by logging errors during periodical refresh
refactor ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` @ RequiredArgsConstructor ` and improve clarity
fix bug # 49537 - avoid unnecessary call to getcolor ( ) in hssfcellstyle
rename ZonedDateTimeFormatterBenchmark class to ZonedDateTimeFormatterBenchmark to improve clarity and consistency in naming conventions
added a new method ` shouldBufferUpdate ` to the ` DistributedUpdateProcessor ` class and created a corresponding test class ` DistributedUpdateProcessor
added a condition to check if the rocket ' s stage is null in addition to the motor ' s null check to ensure that the simulation is valid
make / editreplace and / editscript optional in worldedit .
refactored the ExtendedMasterSecretExtension class to improve code readability and maintainability
changed the declaration of the processor variable to be final to ensure that the processor variable cannot be reassigned after initialization
added a call to ` processedTask . getListener ( ) . onWriteFailed ( ) ` in ` WritableKeyProcessor . java ` to notify
added " CUBE " database type to MySQLDatabase . java to support enhanced database capabilities in the application
added a try - catch block around the rm method call in TestReplicationHandler . java to handle potential IOException during resource cleanup
rename ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and update related constructors and methods to improve clarity
refactor DefaultOkHttpClientFactoryTest to use getter methods for timeout and hostname verifier to improve code readability and maintainability by centralizing timeout and
refactor BatchUpdateException , PreparedStatement , and Statement classes for improved clarity to enhance code maintainability and readability
added a null check for the operating system in RawMessageContentRedirectInterceptor . java to avoid potential NullPointerExceptions during execution
ggb - 260 : fix rendering of indexed string on the right side of the screen
updated the method signature of ` jailerMain ` to include a ` fromCli ` parameter and modified exception handling logic accordingly to enhance functionality by allowing
refactor HttpRequest class to improve code structure to enhance maintainability and readability of the code
added a preference for unread messages in the TalonPullNotificationService to improve user experience by tracking unread unread notifications
fix npe in isnullnode when parent be an object of type object
updated calculations and memory calculations in Box2DTest , Pong , and OrthographicCamera classes to improve memory management and enhance camera interactions
refactor layout manager initialization for RecyclerView in ViewPostDetailFragment . java to improve code readability and maintainability by consolidating layout manager initialization
change log level from trace to warn in CLIService . java to reduce log verbosity and improve error handling clarity
fix for bug where interface method instance be not be create for abstract method .
ggb - 1046 move pointer up callback to app . invokeLater ( ) in ie10plus
updated getNotificationUsers method to include deviceId as a parameter and modified user retrieval logic to filter users based on their device IDs to enhance user
updated the CGIAR provider URL from " droppr . org / srtm / v4.5 / 6 _ 5x5 _ TIF
removed unnecessary listeners and set bottomPanel to null in MotifFileChooserUI . java , and added a new class bug6520101 .
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49134
refactor methods in BuildRuleResolver to improve rule retrieval and type handling to enhance code clarity and maintainability by centralizing rule resolution logic
added visibility control for transportSpinner based on shortcut state to improve user experience by hiding the transport spinner when a shortcut is made
added null check for attributes _ field in ` Attr . java ` and created new classes ` T703371 . java ` and ` T
updated backPressed ( ) method to return a boolean and added checks for button clicks in multiple fragments to improve control flow by ensuring back press events
added support for the LONG _ VIEW _ INDEX _ ENABLED _ ATTRIB in QueryServices , QueryServicesOptions , and MetaDataClient classes to
updated string appending from " V " to " v " in SDRTrunk . java to ensure consistent formatting of the output
clean the path in the PrivateKeyParserTests to ensure a valid private key path before processing it
removed the columnPosition parameter from the diffDropColumn method calls to simplify the method signature and improve code readability
updated IndexWriter and IndexWriterConfig to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the latest
hbase - 24420 disable strict column family check for importtsv ( addendum )
[ java ] use long id for log subscription to avoid race condition .
updated startActivity calls to startActivitySafely and added voice button proxy visibility handling to improve activity lifecycle management and ensure voice buttons are displayed correctly
added a conditional check to return early if the second text value is " i " in the JSON node to prevent processing of empty JSON nodes
refactor Procedure class to improve code organization to enhance maintainability and readability of the code
updated resource bundle loading to include default locale and system class loader to ensure consistent resource loading across different locales
[ j2kt ] add kotlin normalization pass for kotlin array creation .
updated conditions and logic for handling term enum counts in PerSegmentSingleValuedFaceting . java to improve the handling of missing counts and ensure accurate
fix nullpointerexception in modmetadata # getauthors
add miss ` ` sun . misc . import ' ' dependency to com . google . gson . annotations . java and com . google . gson .
do n ' t check if controller service be enable by default if it ' s already enable .
hbase - 27165 set auto flush to ' to ' instead of ' setautoflush ( false ) '
fix : fix cast for ifelement . getelsestatement ( ) in annotationbinding
simplefeature # hasuserdata ( ) should return true if there be no user data
removed ` HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` to simplify error handling by eliminating unnecessary exceptions
refactor RelyingPartyRegistration class for improved clarity to enhance maintainability and readability of the code
added a method to enable logging in the JavaCompiler class to ensure proper logging configuration for Java compilation
added a new class ` InJavaSourceSet ` to filter and manage Java source sets in the compilation unit to enhance functionality for identifying Java source sets
updated resource loading in TestGDALParser . java to use a dynamic file path instead of a hardcoded path to improve flexibility and ensure
added a static method ` createGetter ( Object obj , String attribute ) ` to the ` ReflectionHelper ` class to provide a way to create getter
removed the check for ` useExternalStorage ` in the conditional statement to simplify the code for better readability and maintainability
added a constant for " indexer . nocommit " and modified commit handling in IndexerMapReduce , IndexerOutputFormat , ObjectCache , and
api : make diskofferingid optional in createvolume api call
fix nullpointerexception in tohtml and testcellcomment
added support for handling ` Period ` instances in ` LocalDate ` , ` LocalDateTime ` , ` ZonedDateTime ` , and ` ZonedDateTime ` to enhance flexibility in
added a new file ` Issue382 . java ` to implement error handling endpoints for specific HTTP error responses to ensure that specific exception types are correctly
remove unnecessary code in positionutils . getlastannotation ( )
added condition to hide text in AttachmentAdapter when certain conditions are met to improve user interface responsiveness by preventing unnecessary text visibility
fix ( import ) : fix getimportkindfor ( reference ) throw classcastexception
simonstewart : do n ' t use method reference to get the firefox profile
add a new class ` LiquidBlock ` with a ` FlowingFluid ` property and a list of ` FluidState ` instances to enhance
fix amq2902test failure on slow ci server
updated the timezone setting from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure the application uses the correct
refactor DistinctErrorLog by replacing existingObservation with distinctObservation and simplifying method signatures to improve code clarity and maintainability by consolidating
updated system property retrieval to use annotations instead of hardcoded false to enhance clarity and maintainability of test configurations
renamed method ` createLogger ( ) ` to ` getOrCreateLogger ( ) ` and updated logger initialization logic to improve method clarity and ensure proper logger initialization
fix access deny for class , method , and proxy in graalcontext .
optimize updatepixels ( ) by use raster . setelements ( ) .
updated the source of the HiveAbstractReader to use the partition ' s sd instead of the table ' s sd to ensure that transactional
updated the logic for scrolling overlays in Workspace . java to improve the handling of overlay scrolling behavior based on the last scroll position
hhh - 14146 implement batchbuilder and initiator for hibernate - jdbc - batch
improve error message in analysiserror . shouldnotreachhere ( )
added a new test class ` MockWithStaticStateDemo ` and a corresponding test method in ` PartialMockingRetainsStateTest ` to
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure SQL statements with brackets and
added error handling for null UGI instance in SecurityUtil . java to improve robustness by ensuring proper execution of actions when ugi is null
updated error handling in OpenALMusic to include the error code in the exception message to improve error reporting for audio buffer allocation issues
deprecate endpointhelper . reslovestringparameter and replace it with endpointhelper . resolveparameter
refactor precision and scale calculations for DECIMAL type creation in RexNodeConverter . java to improve accuracy of precision and scale handling for DECIMAL
replaced direct retrieval of vendor and device properties with Optional . ofNullable for better null safety to improve code readability and prevent potential NullPointerExceptions
updated the assertion in WalletTestAccount003 to use Long . toString ( now ) instead of a hardcoded string to improve clarity and
refactor design panel selection logic to use MouseAdapter and simplify selection handling to improve code readability and maintainability by reducing redundancy
added longRunningTime property and its initialization in Args . java to allow configuration of the VM ' s running time based on the configuration
updated priority adjustment from AT _ MOST _ MEDIUM to AT _ MOST _ LOW and added a new class Ideas _ 2012
updated import statements in HttpServerProvider and ScriptEngineManager to use java . util . ServiceLoader instead of sun . misc . Service to improve code maintainability and
fixed unit test that fail on the ci - server
updated assertions in TestRestClientRequestImpl . java for consistency to improve readability and maintainability of the test code
added a condition to check if referenceDatabase is equal in MissingUniqueConstraintChangeGenerator to ensure proper handling of unique constraints in the database
removed the ` addAndroidConstants ` method and adjusted Android properties handling in ` IjProjectTemplateDataPreparer . java ` to streamline the
replace assertEquals assertions with awaitility ' s await methods in DuplicateCookieTest , SessionRenewTest , and SessionRenewTest classes to improve test reliability
added user arguments and timestamp to ChromeTraceBuildListener and its test to enhance logging capabilities by including user arguments and daemon status
[ gr - 11436 ] substitute resource bundle in native library ( # 11447 )
corrected a typo in the trace log message from " match limit to " match order to " match order to " match order to " match
added a new file TheRockMetaDataDemo . java to demonstrate access to exchange metadata for the TheRockExchange integration
changed FloatingDecimal and FormattedFloatingDecimal classes from strictfp to strictfp class and added a test for strictness in ParseDouble to
updated column name parsing in ColumnStatsSemanticAnalyzer to ensure the correct column name is appended to the columnNamesBuilder
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and updated method parameters in ` BlockStatementTemplateGenerator ` to
added a condition to check if a method is not synthetic in InstantiateStaticClass . java and implemented a test case in Bug1282 . java to
replaced ` projectFilesystem . getPathForRelativePath ( basePath ) ` with ` basePath ` in ` WorkspaceAndProjectGenerator . java ` to simplify path resolution
added pending rescue handling and improved error management in IkStepDefinition . java to enhance the robustness of the message sending process by properly managing pending
removed the ` final ` modifier from the ` equals ` method and added multiple ` hashCode ` methods in multiple classes to enforce immutability and improve
added a static method ` getSyncLevel ` to retrieve a default sync level and improved error handling for reading the sync level to enhance code maintainability
[ java ] use try - with - resources in controlcommandstest . testclientpause ( )
added a condition to check if the slice state is not RECOVERY before proceeding to ensure proper handling of recovery scenarios during recovery
updated the create method call formatting in opencv _ core . java to improve code readability and maintain consistency
added SDK path handling to AppleBundle and SwiftStdlibStep classes and modified makeProcessExecutorParams method to accept an ExecutionContext parameter to enable dynamic
refactor ` TransientBlobCleanupTask ` to use a ` BiConsumer < TransientBlobKey > ` instead of a ` File ` for
server : remove 1 : 1 from log msg for static nat rule
refactor PasswordEncoder and StandardPasswordEncoder classes for improved consistency to enhance security and maintainability of password handling functionality
added conversion of sort and union row types to the relBuilder in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure
refactor BetterBlockPos class to improve code structure to enhance maintainability and readability of the code
fix classloading issue in embeddedvelocitytoolboxview . getcontext ( ) .
refactor nightly version handling to differentiate between nightly and non - nightly builds to improve user experience by providing a clearer warning message
added OracleDatabase import and modified SQL statement parsing logic in LoggingExecutor and JdbcExecutor to ensure proper handling of trailing newline characters in SQL statements
added a new boolean field ` UNKNOWN _ VALUES _ ARE _ NSP ` to the ` IsNullValueAnalysisFeatures ` class to provide a configuration
do n ' t use hardcoded port in test
do n ' t use a circle for audio that do n ' t use it anymore .
added a multifactor authentication provider bypass to the DuoSecurityMultifactorProviderBypass configuration to enhance security by integrating multifactor authentication authentication
fix checkstyle issue in util / maxrectspacker . java
[ drools - 571 ] fix javadoc error in drools - maven - plugin
added methods to manage and retrieve the help page in the HelpTab and LooksFrame classes to improve usability by centralizing help page management and
added new files GeocodeProviderFactory . java and Constants . java to implement geocoding functionality and define constants for the Omni Notes beta folder
updated import statements for CharArraySet in LuceneAnalyzerUtil and LuceneTokenizer to ensure compatibility with the latest Lucene library structure
refactor test classes to remove dependency on ExpectedException and add unit tests for constructors to improve code clarity and ensure proper exception handling in tests
[ py4j ] add check for objectid before delete the object in memorycommand .
updated conditions in SegmentsInfoRequestHandler and added new test cases in CollectionsAPISolrJTest to improve handling of document fields and enhance test coverage for
updated the calculation of ` numPredictiveAppCols ` to use ` isPhone ( ) ` instead of ` numColumns ` to ensure accurate
added a new method ` hasScalarSubqueryInput ` in ` JoinUtils ` and updated its usage in ` DrillJoinRelBase ` and
add a block to allow craft to be place in the craft inventory .
refactor layout parameters in DeviceProfile . java to use FrameLayout . LayoutParams instead of Resources to improve layout handling for drag targets in the launcher
changed the method call from ` run ( ) ` to ` start ( ) ` in the ` YahooSession . java ` file to ensure the session
set the ` ms ` variable to ` null ` in ` HiveMetaStoreClient ` and modify its logic in ` HiveMetaStoreClient `
updated ` getDisplayScript ` method to accept a ` Category . DISPLAY ` parameter and added a new test for bug 7079486 to ensure
replaced static imports of CORE _ NAME _ PROP with a direct reference to ZkStateReader . CORE _ NAME _ PROP to improve
replaced ThreadLocalRandom with Random for boolean checking in StoreDirectTest . java to improve performance and simplify random number generation
added a check for launcher readiness before backup operations in LauncherBackupHelper . java to ensure backup operations are only performed when the launcher is in a
updated IllegalArgumentException messages to include specific space details to improve debugging by providing more context in exception messages
camel - core - add resiliencepooledrouteok test base on user forum issue
rename bodySpace to barSpace across multiple classes for consistency to improve clarity and maintain consistency in naming conventions
refactor ShadowProcess class methods for improved readability to enhance maintainability and clarity of the codebase
fix broken test : filemessagehistorytest fail on slow ci server
added debug logging for various loggers in Grasscutter . java to improve troubleshooting by providing more detailed logging information
changed the visibility of the ` highlightCnstScrRngQuery ` and ` isHighlightCnstScrRngQuery `
added a condition to check if the workspace is not in overview mode and added a method to retrieve the workspace ' s state to improve user experience by
refactor various array assertion classes to improve code consistency to enhance maintainability and readability of the codebase
added a check for ` args . cacheable ` before notifying a new template in ` SnippetTemplate . java ` to ensure notifications are only
added ` SCOPE _ SOLR _ CORE ` constant and refactored variable handling in multiple classes to improve clarity and functionality of scope management
updated the CREATE TABLE statement to include a primary key and added assertions for the primary key in the database metadata to ensure the correct retrieval of the measurement
rename cli permission from ` ` -- permissions - config - path ' ' to ` ` -- permissions - config - file ' '
sec - 825 : remove unnecessary check for ` ` allowsessioncreation ' ' property .
added a new file ` TestIfWithDeadRegion . java ` that contains a class that demonstrates the use of ` Supplier < String > `
fix checkstyle issue in dependencyparser and dependencyparser
replaced ` testConcurrentAccess ( ) ` with ` testConcurrentAccess ( ) ` in ` SnowflakeIdGeneratorTest . java ` to ensure
added a static UI setting to AppSettings and modified MainFragment to conditionally hide the toast bar based on user settings
refactor Privilege handling in WindowsSecurity to use a lambda expression to improve code readability and ensure proper resource management
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and added a null check for clientId in ` 
updated JOptionPane calls to use localized messages instead of hardcoded strings to enhance localization support and improve maintainability of the code
tika - 1666 - add mime detection for tika - ooxml and xlsx file
added logging for loading features from the backend and modified the handling of feature paths to enhance debugging capabilities and improve clarity in feature path loading
camel - eip : fix newlines in generated camel - eip schema documentation .
do n ' t send schema check if the endpoint be remove
added debug logging for notification and playback device configurations in DeviceConfiguration . java to improve debugging capabilities and ensure proper handling of audio capture devices
[ type : refactor ] [ type : refactor ] add configuration for websocket max frame payload size ( # 3439 )
make cachevalidationlistener implement isuitelistener . onstart and iinvokedmethodlistener . onstart .
added a check for non - empty content length before adding it to the document to ensure that the content length is only added if it is not empty
move solvingterminated ( ) to a separate private method solvingterminated ( )
refactor createTimeseries method to handle PathAlreadyExistException to improve error handling and logging for concurrent time series insertions
added a new method ` check ( boolean result ) ` to the ` Authz ` class to provide a way to check if a boolean result is
changed access modifiers from public to protected for several methods in ShadowActivityManager , ShadowMeasuredParagraph , and ShadowTypeface to restrict access to enhance
server : fix isrecursive ( ) and isreserved ( ) method in listpublicipaddresses ( ) to check if the isrecursive ( ) method
updated HttpParser to initialize _ valueString with an empty string instead of null if compliance is RFC2616 to simplify the code and improve readability
added thread initialization logic for error and output streams in J9VMInternals . java and removed it from Thread . java to streamline the initialization
added methods to manage external storage directories in ShadowEnvironment and created EnvironmentTest to enhance testing capabilities for environment - related functionalities
fix mvel type coercion for bean with field = ' ' null ' '
reformatted code for consistency and readability in LoggingConfig . java to improve code maintainability and readability
added exception message to the log message in ActionNode . java to improve error logging clarity by including the exception message
remove tel : from sip ' s tonumber if it do n ' t exist .
refactor visibility logic for shared file icon in FileListListAdapter to improve readability and maintainability of the code
deprecated the deprecated HIVEOPTSORTSORTDYNAMICPARTITION configuration in HiveConf . java and updated TestTxnCommands3 . java to
refactor ` ExecuteStatementOperation ` , ` Operation ` , and ` Operation ` classes to use constants for session IDs and log keys to improve
replaced Google Lists and Sets with Java ' s Arrays and HashSet in BTCMarketsStreamingAdapters and BTCMarketsStreamingService to
( chore ) camel - ogr : fix typo in ogrdatastoretest
removed the ` onErrorInStep ` method from ` StepListenerSupport ` to simplify the code by eliminating unnecessary method implementation
refactor Wallet class to improve code structure to enhance maintainability and readability of the wallet functionality
camel - 14284 : camel - netty - http - fix the issue that camel - netty - http do n ' t support the http protocol
replaced System . out . println statements with LogFactory logs for logging messages in TestNonBlockingAPI . java to improve logging consistency and reduce clutter in
added a boundary check for the row index in DbConnectionDialog . java to prevent potential ArrayIndexOutOfBoundsException when accessing the connection list
add a new rule for method with the same name as an enclosing class to avoid false positive
added ExtendedPlatformComponent class and refactored ManagementFactory to utilize it for retrieving platform mbeans to enhance management capabilities by allowing extended mbean registration
added a line to replace single quotes in SQL strings to ensure proper handling of single quotes in SQL statements
updated URL construction in multiple test classes to include the DTO directory to ensure the tests link to the correct DTO directory structure
refactor TextEscapeUtils methods for improved readability to enhance maintainability and ease of understanding for future developers
added a filter parameter to the AbstractSpatialFieldType class and updated the FilteredQuery instantiation to enhance query flexibility based on local parameters
added progress bar display logic in GpsLoggingService and invoked updateResultsEmailSent method in AutoEmailHelper to improve user experience by providing feedback during
replaced ArrayList with HashSet for inlinks and refactored iterator usage in Inlinks , LinkDb , and LinkDbReader classes to improve performance and
added synchronized method to stop scanning and modified result removal logic to ensure thread safety during the stop scan process
updated the ` isClientFilterEnabled ` parameter and modified the ` testFilterForPartition ` method to accept a boolean parameter to enhance flexibility in filtering
added ' Closed ' status to requestWorkflow and proposalWorkflow in TicketModel . java , and updated related code in TicketBasePage .
( chore ) camel - oracle : remove columnaliasprefix assignment
replaced Text type with BytesWritable in LlapRowRecordReader , LlapRowInputFormat , and LlapRowInputFormat classes to improve type safety and
terasologyengine : add a nonnativejvm detector that warn if run on a 32 - bit jvm .
updated conditional checks in PdfCopy . java to use ` . equals ( ) ` for better readability and performance to improve code clarity and maintainability
added a new option ` DAEMON ` and implemented its functionality in ` TerminalClient ` to provide a web pendant UI for better user
added a new file ` FlushIndexTask . java ` that implements a performance task for flushing the buffer in the benchmarking process to improve performance
make memtable . getflushpath ( ) take into account the bmt threshold
added a check for ` SEASONS ` in conditional statements to ensure proper handling of expected outcomes in the MediaLibraryFolder class
added a new file ` LocalSocketAddress . java ` that implements a DatagramSocket using an IPv6 loopback address to test IPv6 availability to ensure
updated grid size points in GridSizeMigrationTask . java to correct grid size coordinates to ensure proper grid size functionality
replaced calls to ` getName ( ) ` with direct access to ` name ` in ` SerializerPojo . java ` to simplify code and improve readability
added read - only context handling in the Context class to enhance security by preventing operations on non - read - only contexts
refactor LookAndFeelCommand class for improved readability to enhance maintainability of the code
updated the calculation of ` lastRunEnd ` to use ` ceiling ` instead of ` floor ` and modified the condition check for ` offset ` to
added imports for EOFException and EofException and modified assertion in GracefulStopTest . java to ensure proper exception handling for EOFException and
reduce lock contention by use remove ( ) instead of unlock ( ) .
refactor NetworkParameters class to improve code organization to enhance maintainability and readability of the code
removed conditional check for account asset optimization in DynamicPropertiesStore . java to streamline asset optimization handling logic
added a new constant J9 _ GC _ POLICY _ NOGC with a value of 0 to disable garbage collection for better resource management
added error handling for InvalidProtocolBufferException in TransactionCapsule . java to improve robustness by ensuring proper protocol buffer validation
remove strict exception type checking , since it ' s no longer use
updated resource path and improved error logging messages in HelpContent . java to ensure proper localization handling and provide clearer error messages for missing files
added a new file ` ProcessorInfo . java ` to determine the number of processors available in a linux environment to provide a mechanism to retrieve CPU
add an option to print a html output ( default . xsl )
make logbackxmllocation a final field instead of an optional field
refactor HostLevelParamsHolder and related classes to use a new method for updating cluster data and introduce recovery event handling to improve code readability and
polish ` ` remove conditional on property ` ` spring . sleuth . propagation . tag . whitelisted - keys ' '
refactor dependency type handling in RustCompileUtils to use a switch statement to improve readability and maintainability of the code
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` for query parameters and added error handling
hbase - 25813 halfstorefilereader . getfirstkey ( ) do n ' t try to seek first kv in the filereader
added a new ` GenerationTiming ` enum and updated related methods to use its ` isAlways ( ) ` method to improve code clarity and ensure consistent
add a parameterized test for nn . layernorm ( ) to check that nan be n ' t nan
replaced direct calls to ` FileActivity ` methods with a call to ` getFileOperationsHelper ( ) ` to streamline file sharing functionality across multiple activities
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to verify the execution of the Liquibase update plugin with relative clob files
updated the method to convert the proxyType to uppercase to ensure consistent handling of proxyType values in uppercase
add a new mod _ MinecraftForge class to provide access to the MinecraftForge version and LootTries method to facilitate the initialization of
updated key handling and filtering logic in JdbcDatabaseSnapshot . java to improve accuracy of column retrieval based on case sensitivity settings
added a new Container with a label and a border to the CSSBorderTest class to enhance the visual presentation of components in the UI
make retryloadbalancer interceptor conditional on status code
change superclass parameters from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to ensure proper layout rendering
updated the construction of ` parentTaskName ` to use ` System . currentTimeMillis ( ) ` instead of ` System . nanoTime ( ) ` to
added error handling for parsing service requests in ServiceResourceProvider . java to improve robustness by providing clearer error messages when invalid input is provided
fix indexdatabase . isindexversionedfilesonly ( ) to return false instead of true
ggb - 290 do n ' t handle negative array in ca
refactor AnonCipherWithWantClientAuth class for improved readability to enhance maintainability and clarity of the codebase
[ hotfix ] [ runtime ] deprecate unused method in producertemplate
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
increase timeout in evictiontest . assertallthetime ( ) to reduce test flakiness
updated the method name from ` encodeInternal ` to ` encodePassword ` for clarity to improve code readability and maintainability by using a more de
replaced direct usage of ` viewTreeObserver ` with direct calls to ` mTaskRecyclerView . getViewTreeObserver ( ) ` to improve code readability
refactor Response class to improve code structure to enhance maintainability and readability of the code
fix typo in sstablemetadata . getmaxtimestamp ( ) . patch by jbellis
set the preferred size of the security panel to match the size of the call .
added null and empty checks for replies in multiple adapters to ensure replies are not empty before processing to avoid potential errors
added ` toString ` and ` hashCode ` methods to ` HitbtcBalance ` class and removed ` ToStringBuilder ` import to simplify the code and
fix ( sql ) : support order by clause with in statement
fix retryexhaustedwithdetailsexception . getaddress ( ) to return the address . tostring ( ) .
use opencookie to open gcode file after open the file .
updated HTTP client imports and references from Apache HttpClient to Apache HttpClient 5 to ensure compatibility with newer HttpClient versions
updated energy calculations in PipePowerWood . java to use the minimum and maximum values of the battery ' s energy to improve accuracy in energy management
added a check to delete the temporary output file if it exists to ensure that temporary files are only removed if they exist to avoid potential memory leaks
updated the parameter name from " tid " to " id " in BitstampWebSocketTransaction constructor and added a new test for fetching trades
added time limit checks in ReplayProcessor and ReplaySubject , along with corresponding tests in ReplayProcessorTest and ReplaySubjectTest to ensure
updated the expected citation string format in CitationStyleGeneratorTest . java to ensure consistency in formatting
set hdd format to video hdv format if available
add show _ definition _ for _ equation _ in _ exam feature for equation in exam mode
fix nullpointerexception in text field when the component be null .
hbase - 27113 add caching to the metareader when startrow be null
updated the SQL initialization script from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
refactor Math and StrictMath classes for improved consistency to enhance code maintainability and readability
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to provide functionality for enabling or disabling
[ hotfix ] [ runtime ] fix typo in accessexecution and archivedexecution
added a condition to set density if scale equals 3 in IOSGraphics . java to ensure density is correctly set based on scale value
rename the ` optional ` variable to ` vararg ` and update related references to improve clarity and specificity of the variable ' s purpose in the
[ hotfix ] [ runtime ] add exception to log message in regionstatestore
[ hotfix ] [ test ] simplify the assertion in testclusterupgradeutils
updated warning messages in AsyncHttpConnection and renamed AsyncContextTest class to LocalAsyncContextTest in AsyncContextTest and AsyncContextTest to improve clarity
added a boolean parameter ` showArrow ` to the constructor of ` SearchUiManager ` to enhance functionality by allowing arrow display in the search results
modify lock _ mode to read _ committed for mvstore in case of mvstore .
skip linux / amd64 only test on linux .
added type checks and return values for Integer and IntValue in Scalars . java to improve handling of input types and ensure proper conversion of integer values
updated primary key validation logic in CreateTableStatement . java to ensure only one PRIMARY KEY is provided to improve clarity and correctness of error messages
added conditional logic to set drawable resources based on LMP status in multiple classes to enhance visual feedback for devices running the LMP feature
added exception handling and improved exception management in VMServiceManager . java to enhance error reporting and provide clearer error messages for flutter views
add method to the headersconfigurer to make it easy to configure
refactor ObjectEnumerableAssert for improved readability to enhance maintainability and clarity of the codebase
[ grid ] move distributed cdp test to the same package a distributed cdp
added type attribute to @ aggregateroot to make test more consistent
added support for prebuilt libraries in Python binary descriptions to enhance compatibility with prebuilt libraries in the build process
added client authentication handling in NetServerOptionsConverter and refactored NetServerOptions and HttpServerOptions to use DEFAULT _ CLIENT _ AUTH to improve
updated REPLDIR and REPLCMDIR configurations to use system - specific paths instead of hardcoded values to enhance flexibility and maintainability
refactor task view removal logic in RecentsView . java to improve clarity and functionality to enhance readability and maintainability of task view management
added timeouts to the AmqpTransformerTest to ensure tests have sufficient time to complete before proceeding
removed the clearAll ( ) method from DataTableTopComponent . java to streamline code by eliminating unnecessary method calls
updated variable names from ` controller ` to ` flowController ` for consistency to improve code readability and maintainability by using a more descriptive
[ flink - 20527 ] [ table - planner - blink ] fix the issue of not set exchange sum in execution context
added ClassLoaderHandler import to module - info . java to utilize ClassLoaderHandler for class loading functionality
fix npe when solve a frame in event thread .
added @ JsonIgnore annotation to ApplicationSettings . java to exclude sensitive data from JSON serialization
changed the condition from checking if throwable is null to checking if throwable is not null to ensure that throwable is correctly handled when throwable is not null
refactor query information retrieval to use a local variable for clarity to improve code readability and maintainability by reducing repetitive code
fix auto workbench not be able to handle empty recipe
fix a bug that cause an arrayindexoutofboundsexception when parse gl200text
renamed timeColumnName and fieldSpec to incomingTimeColumnName and incomingTimeFieldSpec in AvroRecordToPinotRowGenerator . java to improve
removed duplicate calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20Token00
ww - 4412 add initializable interface to container to allow customization of factory
add tag for timer sample ( # 11824 )
updated SYNC _ DELTA _ RATE from float to double and modified calculations for fetch time calculations to improve precision in fetch time calculations and
log warn about unwrapped fragment expression in future version of thymeleaf
changed the type of _ attributes from HashMap to ConcurrentHashMap to ensure thread - safe access to the attributes map during deserialization
fix for http : / / issues . apache . org / activemq / browse / amq - 2473 - duplicate message in the consumer
added new color constants and improved extractInto method to handle fallback color extraction to enhance color extraction functionality and support for dark text hints
fix : add data folder to src folder path if data folder be accessible
updated the ` appendContent ` method to accept a boolean parameter and replaced ` TextUtils . isEmpty ` with ` StringUtils . isEmpty ` for title and content
removed the initialization of the sessionRegistry variable from ConcurrentSessionControllerImpl to simplify the session management process by eliminating unnecessary instantiation
added logging for connection reconnection failures in NettyStreamingService to improve error handling and provide clearer logging for connection failures
use javassist proxy instead of cglib proxy ( # 224 )
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve thread management by utilizing a more suitable collection
simplified exception message formatting and improved address validation in SocketExceptions and ExceptionText classes to enhance readability and maintainability of exception handling logic
added a check to determine if the view path is under the repository directory to improve error handling for cases where the view directory is under the repository directory
remove drag and drop tab from the tab header area , no longer need
improve test coverage for class that use compressed oops
removed error logging for non - ACTIVE or REPLAYING updates in PeerSync . java to streamline error handling for better clarity and performance
deleted the ConnectionHook . java file to remove unused code to streamline the codebase
updated ` waitForReplicasInSync ` and ` waitForReplicasInSync ` constants across multiple test classes to ensure consistency and avoid potential null pointer
( chore ) camel - aws2 - rest - dsl : update to late version of camel - swagger
[ apex ] update version number to reflect current version
pdfbox - 4892 : fix some javadoc warning and a few incorrect javadoc comment .
refactor aggregate processing to use a separate thread pool for aggregate processing to improve thread management and reduce contention during aggregation processing
updated WebSocketAsyncConnection to accept a ByteBufferPool instead of StandardByteBufferPool to improve buffer management for WebSocket connections
added scroll functionality for thumbnails in UploadActivity to improve user experience by ensuring the correct image is displayed based on the specified index
fix ( sql ) : fix bug with sample by on timestamp overridden by other column alias
refactor animation handling in LauncherAnimUtils and add transition animation in LauncherStateTransitionAnimation to improve animation performance and maintainability of the launcher
added a condition to disable the default user agent in HttpClient to ensure that the default user agent is disabled when the configuration is enabled
added a check for pubsubhubbub in FeedRefreshUpdater and modified FeedRefreshUpdater to conditionally handle pubsub updates based on application settings
changed the access modifier of the finalize method from public to protected to restrict access to the finalize method for better encapsulation
fix abi calculation for synthetic class ( e . g . synthetic class ) .
added dspacewebapp . java that do n ' t have a web - inf / web - inf / web - inf / web - inf
added a null check for leftTableAlias and implemented a method to retrieve the table alias containing a column to improve error handling by throwing an exception when
updated the trigger key format in JobGenerator to include " Trigger " to improve clarity and consistency in trigger key naming
updated logging levels from info and debug to warn for transaction broadcast failures to improve log clarity and provide more informative error messages for transaction failures
change test timeout to 3 second by default
updated the default values of rcfileWriterEnabled and rcfileWriterValidate in HiveClientConfig and TestHiveClientConfig to ensure consistent behavior across configuration settings
added an enum ` TlsClientCertPolicy ` and refactored client certificate handling in ` GitBlitServer ` to use this enum to
removed the alert handling for subscription failures in KrakenFuturesStreamingService to simplify the subscription process and improve logging clarity
added headers and sub - protocols handling to the ProxyWebSocketHandler to allow customizable WebSocket protocols based on request headers
added a debug log statement to HiveQueryResultSet . java to improve traceability of fetch requests in the query results
updated the formatting of dimensions and labels in HolidayEventFormatter . java to improve clarity and consistency in the output
updated method names and logic in ` FinalizePrivateFieldsTest . java ` and added a new method in ` InnerStaticClass . java ` to
[ hotfix ] [ runtime ] fix typo in unexpectedjobexecutionexception
removed the ` shouldUseOpaqueButtons ` method and modified ` buttonShouldBeOpaque ` logic in ` AquaLookAndFeel ` and ` AquaUtils
updated maxFreq to maxCost and changed maxFreq to maxCost in DrillSidewaysQuery and DrillSidewaysScorer to
added a mapping for GeoDegeneratePath class to the classRegsitry map to support geodegeneratePath functionality in the application
removed the ` preFill ` parameter from constructors in multiple pool classes to simplify constructor usage and ensure proper object allocation
added a condition to update taskbar state if not in launcher and updated FLAG _ STASHED _ IN _ APP _ SYSUI in Task
added null check for default style in CascadeDeleteVisitor . java to avoid potential NullPointerException during style removal
fix an issue where the marquee label appear in the wrong position when close the icon .
refactor icon retrieval logic in FileTreeViewHolder . java to simplify icon assignment and improve code readability
updated assertions in ParallelUniverseTest to check for multiple qualifiers instead of exact matches to improve test reliability by ensuring qualifiers are correctly validated
fix concurrentmodificationexception in xmlreporter
add nativeprobabilityfunctionqueries test for presto - nativeworker
added a call to deregister the ShutdownThread in ClientContainer to ensure proper resource management and avoid potential memory leaks
alexeibarantsev : do n ' t drop temporary table after use in sybase as well
simonstewart : re - enable the htmlunit driver for the htmlunit driver
refactor Solr - related classes to improve code organization to enhance maintainability and readability of the codebase
refactor LinksIndexingFilter to improve code organization to enhance maintainability and readability of the code
updated hex string formatting in VirtualAllocCommitUncommitRecommit . java to improve readability of reserved bytes for testing purposes
do n ' t update ad timeline when there be no ad group
refactor equality check in MultimapSubject to use a boolean variable for clarity to improve code readability and maintainability by reducing redundancy
updated the value used for the FREQUENCY property from ` deg _ text ` to ` unit _ hz ` in the WaveGenerator
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
replaced the usage of ` putAll ` with a direct assignment to ` includedLabelSets ` to simplify the code and improve readability
fix npe in vertexlighterflat when normal be null .
added visibility tracking for spans in TracingClientInterceptor , TracingClientInterceptor , ITTracingServerInterceptor , and ITTracingClientInterceptor to enhance
updated the timezone handling in ScheduledTrigger and removed the BadApple annotation in ScheduledTriggerTest to improve code clarity and ensure consistent time zone conversion
added AsyncBucket , Bucket , ConfigurationBuilder , and InMemoryExtension classes , and modified existing Bucket and ConfigurationBuilder methods to support asynchronous and custom time measurement
refactor class directory retrieval logic in resexhausted003 . java to improve flexibility in specifying the test class directory
reformatted code for consistency and readability in AbstractConnector . java to improve code clarity and maintainability
refactor OngoingStubbing class for improved readability to enhance maintainability and clarity of the codebase
added functionality to reuse WebServer instances based on the presence of an Optional < WebServer > to enhance server management by allowing selective reuse of existing web
renamed ` productConstructor ` to ` constructor ` in ` HttpClientUtil . java ` and added a static block in ` SolrTestCaseJ4 . java
added a check to clear the thread allowlist if it is utilized but it is not empty to ensure that the thread allowlist is properly cleared
updated the method name from ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to improve clarity
[ drools - 1078 ] do n ' t analyze gap in dmndt if hitpolicy = cassandra
added a new test method ` testSlidingWindowsCombine ` to the ` CombineTest ` class to verify the behavior of sliding windows combining with multiple accumulator
added a conditional check for ` allAppsDirty ` before binding all apps in ` LauncherModel . java ` to ensure apps are only bound
added a check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest to ensure that the test verifies that the server is running before proceed
corrected formatting of code in the Solution class to improve readability and maintainability of the code
refactor AquaMenuBarUI to simplify property retrieval and use AccessController for embedded mode to improve code readability and maintainability by reducing complexity in
add fall distance to setrawlocation ( ) method ( # 152 )
refactor query handling in SimpleJpaRepository to use Specification for single results to improve clarity and maintainability of the query logic
added methods to set parent hash , nonce , and number in the BlockUtil class to enhance block configuration flexibility for genesis block processing
change loop safepoint insertion phase to safepointinsertionphase instead of loopsafepointinsertionphase .
modified the handling of child nodes in RSGroupInfoManagerImpl and ZKProcedureMemberRpcs to check for null or empty lists before processing
changed access modifiers of several methods in the ArtifactResolver class from package - private to public to allow external access to these classes and methods
fix ( core ) : properly shutdown the reactor thread ( # 11835 )
added a check to ensure maxBufferedDocs is at least 1 to prevent IllegalArgumentException when maxBufferedDocs is less than 1
added state management for login state management in LoginActivity to improve user experience by allowing configuration of login state during configuration changes
added null checks for source and value in Pump . java and implemented a reverse order test in PumpTest . java to improve error handling and
added methods and updated loadbalancer initialization in HttpShardHandlerFactory and changed access modifiers from private to protected in LBHttpSolrServer to enhance
updated the order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in BaseAuthenticationServiceSelectionStrategy and added
added Jetty server setup and handler configuration in TestJNDI . java to enable better handling of HTTP requests and context handlers
reformatted code for better readability and consistency in SortedDynPartitionOptimizer . java to enhance code clarity and maintainability while ensuring correct operator
change return value from NioEventLoop to true in FileStreamChannel . java to ensure proper handling of NIO event loops
updated the logic for setting the number of nulls in StatsUtils to ensure that the correct number of nulls is set based on row count
camel - 19146 : camel - jbang - export - add support for kamelets that can be run via maven plugin
refactor OSMJob to use OpenStreetMap ' s AuthorizationService instead of OkHttpOAuthConsumer to enhance security by using OpenStreetMap '
[ graal ] clean up test output and add test for ptx backend
added a clientAuth configuration option and its getter / setter in IoTDBRestServiceConfig , updated RestService and IoTDBRestServiceDescriptor
refactor code to directly use a new HashSet for mock candidates in PropertyAndSetterInjection . java and add a new test class ChildWithSameParent
refactored bloomuriuniqfilter to make it easy to configure
updated the cursor adapter parameter from false to true in HomeFragment . java and added a preference for refreshing me in TweetPager . java to
updated the intermediate header height ratio in ProfilePager from 1f to 75f to improve the layout responsiveness of the UI
updated import statements and introduced a new ` RecompilationEvent ` class for handling recompilation events to improve code organization and facilitate re
added HOST _ SYS _ PREPPED configuration properties and methods to manage host prepping settings across multiple classes to enhance the system ' s
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method and modified its logic for handling unknown file formats to enhance logging
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46177
added properties handling and validation for entities and scores in StaticPipeline . java to ensure proper configuration and validation of entities and scores
added configuration for enabling / disabling Whoops functionality based on configuration to enable or disable the Whoops functionality based on application environment settings
[ geos - 7136 ] do not throw exception if a datastore can not be find in the workspace .
refactor assertions in Assert . java for improved clarity to enhance maintainability and readability of the code
renamed ` MultiLineTests ` to ` MultiLineGridLikeTextTests ` and added new test methods for multi - line text functionality to enhance test
camel - 14545 : camel - core - fix the test which be fail on the ci server .
[ iotdb - 4071 ] fix wrong usage of list < imeasurementschema > in tsfilewritealignedwithtsrecord
[ hotfix ] [ test ] fix test promotionfromsurvivortoturedafterminorgc . testprovisioningfroms
updated log4j jar file name from " slf4j - log4j12 " to " slf4j - reload4j " to
updated assertions in HueBridgeHandlerOSGiTest to use waitForAssert for better readability to improve test reliability by ensuring the status detail is
updated package declarations to include " activities " in multiple activity - related Java files to improve organization and clarity of the codebase by grouping related activities under
ignore kiecontainersolverfactorytest until drools - 1276 be fix
added a constructor to ` PullRequestMergedEventsStream ` that reads the Pinot schema from a file and logs errors to enhance error handling and provide
refactor AbstractExpressionPart class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ runtime ] fix typo in taskslot javadoc
replaced instances of ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket ` and related tests
added error handling when removing a lock in MoveTask . java to improve robustness by preventing lock acquisition failures
replace property loading with resource bundle for GEM _ PATH in JRubyBackend . java to improve flexibility and maintainability of the code
transaction : use empty _ byte _ array instead of zero _ address .
removed redundant initialization of ClassInfo in ClassGraphClassLoader . java to improve code readability and maintainability
make the blob storage directory configurable in jobmanagerstartuptest
chore : [ clouddatastreamresources ] add cloud . datastream : : v1alpha1 and cloud . datastream : : v1
added a new Bundle instance and set its extras in FileDisplayActivity to enhance the builder ' s functionality by allowing customizable extras
updated loop condition from break to continue in ParticleEmitter . java to improve control flow by skipping null particle cases
updated mock counts for cluster names from 2 to 1 in AmbariManagementControllerImplTest . java to correct the expected number of tests for cluster
removed the nullable attribute from the SERVICE column in TransientSessionTicketImpl . java and added exception handling in JpaTicketRegistry . java to simplify
updated Bug4823811 . java file to address bug 4823811 related to bug 4823811
updated the argument handling in RmStep . java to use a path relativizer for pattern deletion to ensure consistent path resolution for pattern deletion
[ deconz ] delay the full state request until the discovery service be ready ( # 11824 )
refactor ShibbolethCompatiblePersistentIdGenerator to use ToStringBuilder for attribute handling instead of byte array conversion to improve code clarity and maintainability
reformatted @ Inject annotation in RequestValidationService . java to improve code readability and maintainability
refactor keyboard handling in UiThreadHelper to use a Bundle for logging keyboard messages to improve code readability and maintainability by consolidating key
reformatted code for consistency and clarity in FileNodeProcessor , MManagerBasicTest , and MTreeTest classes to improve code readability and maintain
refactor NavigableMap and NavigableSet classes to improve code organization and maintainability
add a simple unit test to make sure we get the correct content of the file
added @ FunctionalInterface annotation to multiple classes and modified method visibility in AbstractChannelFactory , GrpcChannelsProperties , GlobalServerInterceptorConfigurer , and
refactor span retrieval logic into a separate method for clarity to improve code readability and maintainability by reducing duplication
added support for Date data type in ETypeConverter and related classes to enable support for Parquet date data handling in Hive schema
replaced hardcoded comma separator with a constant from Patterns . COMMA _ SEPARATOR to improve code readability and maintainability by using a
ggb - 204 error handle for invalid input in ggb - 204
refactor column mismatch validation logic in SemanticAnalyzer . java to improve clarity and correctness in handling table and query column counts
refactor the logic for updating max scores in WANDScorer . java to improve clarity and correctness of document comparison logic
refactor Correspondence class for improved clarity to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT classes to improve clarity and maintainability of the code by using specific
initialized ` curPixVal ` to a default value of ` 0xFF000000 ` and added a new test class ` WhiteTextColorTest ` to ensure
use supertypes instead of subtypes for biome dictionary
rename ` withinTolerance ` to ` exceedsTolerance ` for clarity to improve code readability and maintainability by using a more descriptive termin
updated TaplTestsLauncher3 to use @ Stability annotation with LOCAL and PLATFORM _ POSTSUBMIT flavors to improve test stability management for
updated package - info . java files for mmm and ppp to improve documentation clarity and maintainability of the code
added a check to ensure the log file suffix is not empty before processing to avoid potential errors when processing log file suffixes
updated PythonBuckConfig . java file to improve configuration handling to enhance performance and maintainability of the Python build process
added unit tests for adding and clearing system shared library names in ShadowPackageManager to ensure correct functionality of library name management in the package manager
fix meiligao decoder
added a null check for the tile object before accessing its properties to prevent potential NullPointerExceptions when accessing the power graph
added a async task to trim cache size in PrefFragment . java to improve cache management and user feedback during cache deletion
fix checkstyle issue due to unused com . google . common . collect
replace return false with NotAuthorizedException in multiple classes to improve error handling for unauthorized access scenarios
add scheduleperiodically ( func1 , func2 ) to the scheduler api
updated the file selection method in FileDisplayActivity to use onItemClicked instead of refreshing the list of files fragment to improve user interaction by providing
added a check to choose a single input stream if the path ends with " . xsd " and improved error handling in the StreamUtil class to
refactor table creation methods in SessionHiveMetaStoreClient and HiveMetaStoreClient to use CreateTableRequest instead of EnvironmentContext to simplify code
added a volatile boolean field ` aborted ` and modified ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker ` to
added indent calculation and adjusted block parsing logic across multiple parser classes to ensure proper parsing of indented lines and improve robustness
added NetworkWifiStatusReceiver and ChangeWifiStatusEvent classes for handling Wi - Fi connection status updates to enhance user experience by enabling automatic playback based on
removed redundant condition checking for control frames in FrameGenerator . java to simplify code logic for better readability and maintainability
added visibility setting for collapse handle in WidgetsBottomSheet to improve user interface by hiding the collapse handle when necessary
added two new files , Issue475 . java and XSS . java , to implement HTML and JavaScript handling in the Jooby framework
added a check to return early if units to scroll is zero to improve performance by avoiding unnecessary processing when scrolling is not needed
updated condition from checking if contract list size is greater than one to checking if the size of contract list is not equal to 1 to ensure correct handling
added methods to add and put Enum values to JsonArray and JsonObject classes to enhance functionality for managing enum values in JSON structures
added hashCode method to IPPPrintService and created TestRaceCond class to ensure consistent hashCode implementation for print services
removed the ` DatabaseVersion ` field and its references from ` DB2iDialect ` , ` DB2zDialect ` , and ` TimeZoneSupport
do n ' t try to connect to a transaction that have a platform fee .
refactor BatchUpdateException , PreparedStatement , and Statement classes for improved clarity to enhance code maintainability and readability
ensure that audio codecs be clear first subsample if they be encrypt .
removed public access modifier from multiple classes and interfaces to enhance encapsulation by restricting class and method visibility
added import statement for Retrofit in Part and PartMap classes to enable retrofit functionality in the application
refactor JSON and JSON handling logic in JsonBuildHelper and ParamsBuildHelper , and add commonHandleParam method in ParamsBuildHelper to
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the mix of TYPE _ OPTIONS _ POPUP _ DIALOG
fix : update gapic - generator - java with mock service generation fix ( # 409 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents field in RemoteAnimationTargetSet to improve animation behavior based on the presence of
removed the second parameter from the createRenderScript method call to simplify the method signature for better readability and maintainability
fix typo find by codespell on fossies . org
refactor PluginListCellRenderer and PluginTableModel to use a new method for checking if a bundle is a system bundle to improve code maintainability and reduce
[ hotfix ] fix checkstyle violation in integration test
use low false positive rate in keychaingrouptest . testgetbloomfilter ( )
updated variable names and logic for managing motor configurations in Overview . java to improve code readability and maintainability by using more descriptive
server : fix npe in agentmanagerimpl . isexists ( )
fix nullpointerexception in defaultrecordstore when value be null .
cloudstack - 10213 : throw discoveryexception in case of an exception in the cloudstack server discovery process
updated constants for NO _ NAME and NO _ VALUE in ParamAction . java to improve clarity and consistency in naming conventions
updated constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to accept a Object instead of InvocationContainer
renamed the method ` getMethodLine ` to ` stripMethodParams ` and added a method to strip method parameters from the method name to improve method clarity
updated version name and code for the GreatVoyage application to reflect the latest release and ensure versioning accuracy
use set instead of list to avoid concurrentmodificationexception
[ geot - 5578 ] change style key in symbolmblayer to use key instead of string
make sure popups be center and resize when there be no overlap
updated error messages in ValidationSuite . java to use hyphens for consistency to improve readability and consistency in error reporting
added a new ` StartingWindowListener ` class and refactored the ` onTaskLaunching ` method to utilize it to improve code organization
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to maintain consistency with inherited MBeanServerConnection implementation
updated exception messages and added package access validation in CheckPackageAccess . java to improve clarity and accuracy of security exceptions related to package access
increased the timeout duration in the ThreadSafetyTest from 30 seconds to 90 seconds and added an assertion to check if the executor service is terminated
change the loggingEnabled variable type from boolean to Boolean and add a null check before setting it to improve flexibility in logging behavior by allowing logging to be
added @ JsonIgnore ( true ) annotations to the Schema class to prevent serialization of sensitive data during JSON processing
increased the timeout duration for the test method from 5000 ms to 10000 ms to allow more time for tests to complete successfully
updated training method signatures and classification calculations in SimpleNaiveBayesClassifier . java to improve clarity and accuracy of classification calculations
renamed ` CheckHelperModule ` to ` CheckHelperControllerModule ` and added ` CheckHelperAuditModule ` to enhance functionality by integrating audit
refactor Prototype class to improve code structure to enhance maintainability and readability of the code
added a check for null tableIsTransactional in SemanticAnalyzer . java to ensure the correct property is used for transactional tables
[ java ] remove the writefragment method from recordingwriter and use onblock instead .
update ceasubtitle . gettimeus ( ) to return an empty list instead of 0 .
add miss ` ` alias ' ' tag to datastore metric query
removed unused CurrencyPair instances and replaced existing ones with new ones in VaultOfSatoshiBaseService to simplify code and improve maintainability by
updated EntityManagerFactory usage and added null checks in multiple test files to ensure proper resource management and prevent potential memory leaks
updated KafkaSender import from kafka11 to kafka to ensure compatibility with the latest Zipkin library version
added integration tests for GWT binary build in a new file ` GwtBinaryIntegrationTest . java ` and implemented the ` A ` class in the `
updated loading cause label visibility and added error handling for ResultSetRenderer initialization in SQLConsole to improve user experience by preventing unnecessary loading when a dialog is not
reformatted code for better readability in EnhancedRandomImpl . java to improve maintainability and clarity of the randomizer logic
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to enhance XML security property management and improve code maintainability
added new files InterfaceWithDefaultMethod0 , InterfaceWithDefaultMethod1 , and Subtype classes with default methods to demonstrate the use of default methods in interfaces
updated SQL query patterns from LIKE to GLOB in SqliteFieldPredicateView . java to improve handling of GLOB literals
[ drools - 3524 ] make dmnassemblerservice . getdmnprofiles protect to allow subclass access
fixed - redissonscript . scriptload ( ) method be n ' t execute if slave node be n ' t find
remove method setwordfieldvolatile ( ) that do n ' t call getwordfieldvolatile ( )
updated logging level from debug to verbose in multiple files to improve log granularity and clarity for easier troubleshooting
fix memory leak in fmloutboundhandler . sendproxy ( ) .
added a new constant for HTTP Jetty server handlers in ExecConstants . java and updated thread pool configuration in WebServer . java to allow configuration of
updated shortcut management to handle removed shortcuts more efficiently to improve shortcut management by ensuring removed shortcuts are not added to the workspace
remove unnecessary type check for String in DefaultHttpClientBinderRegistry to simplify code and improve readability
removed case handling for the home button in DetailFragment to streamline navigation functionality for better user experience
added a check for the AndroidMarket in the conditional statement to ensure that play services are only included when the market is available
refactor cell parsing logic in TableBlockParser and add a new test for pipes on outside whitespace in TablesTest to improve code clarity and ensure
added support for bridging headers in NewNativeTargetProjectMutator and related classes to enable dynamic configuration of the bridging header in the project
refactor PotentiallyDeadCode to use a Set for unused methods and improve source path formatting to enhance code clarity and maintainability by standardizing
added diamond detection logic and introduced new classes for testing diamond arguments to enhance type safety and provide clearer warning messages for redundant arguments
replace invocation . startSend ( ) . startSend ( ) with invocation . onStartSendRequest ( ) across multiple files to improve code clarity and
removed import of Utils and debug logging from SolrCacheHolder . java to clean up the code and improve performance by eliminating unnecessary logging
added exception handling for AuthenticationException in LdapCtxFactory to ensure proper management of authentication errors during LDAP operations
updated the condition to check for negative values in the float comparison to ensure accurate validation of negative values in floating - point comparisons
added a local file for " logback . dev . xml " in JoobyMojo . java and modified Main . java to include it to
added a new file ` JaasEventCheck . java ` that implements the ` ApplicationListener ` interface to handle Jaas authentication events to ensure proper
refactor QuickstepTransitionManager to use a list of views for animations instead of local variables to improve code readability and maintainability by reducing redundancy
updated the string comparison logic in ConjunctionSolrSpellChecker and added a new test class ConjunctionSolrSpellCheckerTest to ensure correct comparison
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to ensure consistency with
[ hotfix ] [ runtime ] remove unused constant in defaultleaderelectionservice
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
kvm : add new property : ready . command . wait . timeout ( default to 60 second )
added JDBC _ SCHEMA parameter to the table parameters in AbstractJDBCConnectorProvider to ensure the correct JDBC schema is used for database connection
corrected the spelling of " UPDATE " from " UPDATEAUP " to " UPDATE " across multiple files to ensure consistency and clarity in SQL
replaced synchronized block with a more efficient computeIfAbsent method for schemaTypeCache to improve thread safety and performance when accessing schemaTypeCache
refactor header addition logic in StaticServerHttpHeadersWriter to ensure headers are only added if they already exist to improve efficiency by avoiding unnecessary header addition
added JUnit @ Ignore annotation to LatticeDemo . java to temporarily disable the test due to dependency on files available from CMU
added a call to mkdirs the storage directory in TestCollector . java to ensure storage directory exists before proceeding with operations
added chunked streaming mode for HTTP requests in StarTreeJobUtils . java to improve performance by reducing data transfer overhead
schema : add a couple of syntax checker ( and test ) .
hbase - 25836 addendum move com . google . protobuf to org . apache . hbase . thirdparty
added a test for recursive structure handling in BeanPopulatorTest and created a new Node class to ensure that recursive structure does not cause a stack overflow exception
added IOException to the getRemoteName method signature in AccountingTransceiver . java to ensure proper handling of IO exceptions during method execution
added HttpClient support and modified exception handling in UserAccountManagerImpl , ClientFactory , and ConnectivityServiceImpl to improve client management and error handling for
refactor WebSocketConnection and ExplicitDemandTest classes to improve code organization and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enhance security by allowing differentiation between AspectJ and other security interceptors
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security by allowing configuration of hostname verification settings
removed the final modifier from the item variable in OHLCSeries and added an ` remove ` method in ` OHLCSeriesTests ` to
fix compactformatintegrationtest by use joininternal ( ) instead of joininternal ( )
refactored the joint destruction logic in the World class to improve code readability and maintainability by reducing redundancy
fix chat room search filter not work when search by chat room name .
[ hotfix ] [ test ] move sourcereadertestbase # validatingsourceoutput to testutils
removed redundant null checks for document and parent documents in DocumentsStorageProvider . java to streamline error handling for better readability and maintainability
added a new interface ` HookDefinition ` and its implementation ` JavaHookDefinition ` , along with a corresponding test class ` JavaHookTest ` to
refactor code to encapsulate buffer flushing logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by
updated the ` setExoOptions ` method to include a ` allowTs ` parameter and modified its usage in the ` ProfileHelper ` class
remove user and role from the identifier collection in DMRDecoderState . java to clean up unused identifiers and improve code clarity
added a static Color . INVISIBLE constant and refactored conditional statements in RailButtonShapes . java to improve code readability and maintainability
fix ( core ) : enable null handling for count ( * ) and count ( * ) function
added a new field ` deep ` set to - 1 in ` InternalTransaction . java ` to initialize ` this . deep ` to ensure proper initialization
updated the method for appending the name in the buffer to escape XML characters to ensure proper handling of special characters in the names
updated file handling to use a configurable work directory instead of a hardcoded value to improve flexibility and maintainability of file management within the application
[ drools - 815 ] fix the issue that rulesetfactory . setdeprecated ( true ) do n ' t set deprecated attribute
do n ' t create a new label in amd64directcallop by use the codebuffer position .
updated TimeRange to use static final constants for minStamp and maxStamp , and added conditional checks for allTime initialization to improve memory efficiency and ensure
refactor BitDocIdSet class to improve code organization to enhance maintainability and readability of the code
refactored the metric emission logic into a separate method and updated input stream handling to improve code readability and maintainability by reducing duplication
reformatted code for consistency and improved readability in DetailFragment , GalleryActivity , and InterceptorFrameLayout classes to enhance code maintainability and
add check for world . isremote and modify fluid tank logic to allow fluid to be place in other place .
refactor CsharpLibrary to handle both CsharpLibrary and PrebuiltDotnetLibrary instances based on the presence of DotnetLibraryProviderInfo to
added handling of iqtype . get and iqtype . get in iqpephandler for dummy pep service . jm -
added a null check for the runtime object in the intrinsicGraph validation to ensure that intrinsicGraph is only processed when runtime is not null
[ beam - 10226 ] fix empty check in metric tracking windmill worker
pdfbox - 4892 : avoid overflow when read the object key from the end of pdf
added constructors to LwjglApplet to initialize LwjglNativesLoader and notify listeners to enhance the application ' s behavior
updated the string representation method in EnvironmentAndSystemPropertyClientProviderStrategy to handle null configurations more gracefully to improve code readability and maintainability by
refactored password policy handling in LdapAuthenticationHandler to streamline the authentication process to improve clarity and functionality of password policy application based on configuration
refactor Int2ObjectCache class for improved performance to enhance efficiency of object caching operations
added a private String field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to utilize this field to
refactor Readable class to improve code readability to enhance maintainability and facilitate future feature additions
use testsupport . with _ font in jsoupnonvisualregressiontest ( # 551 )
updated the icon for the share menu item in CaptureActivity . java to improve user interface by using a more appropriate icon
updated Java version checks to include version compatibility checks to ensure compatibility with Java versions other than 8 and 9
change is _ jdbc41 to false if nomethoderror throw in case of a non - jdbc 41 compliant driver .
refactor GenericContainer class to improve code organization to enhance maintainability and readability of the code
[ java ] use arraylist instead of set to improve performance .
added multiple @ Override annotations in CentralAuthenticationServiceImpl , AbstractCasServiceImpl , AbstractCasView , and AbstractCasView classes to enhance code clarity
added braces for jpg , jpg , and gif in ChartProvider . java to improve code readability and maintainability
set working _ directory to bibtex _ db when import and open database
simplified the return statement in JavacParser and added a new class ExtraSemiTest to improve code readability and facilitate testing of semi - colon
added handling for AFTER and BEFORE cases in JpaQueryCreator and User classes , along with corresponding test cases in UserRepositoryTests to enhance
updated Test15FloatJNIArgs . java for consistency to improve code maintainability and readability
updated version formatting in plugin . java for improved clarity and functionality to enhance readability and maintainability of the code
mockprocesscontext : fix stringindexoutofboundsexception in decryption
[ java ] make sure notreentrant call be not allow during archive callback .
added a null check before merging dependencies in OpProcFactory to avoid potential NullPointerExceptions when merging dependencies
added timeouts to the @ Test annotation in SslBytesServerTest . java to ensure tests have sufficient time to complete before proceeding
refactor Peer class to improve code structure to enhance maintainability and readability of the code
rename realtimeindexingcoordinator to historicindexsegment and add streamproviderconfig interface
updated FailureWatcher to check for null before writing view capture data to avoid potential NullPointerException when exporting data
refactor popup positioning logic in RecyclerViewFastScroller . java to use a new method for scroll thumb radius to improve accuracy of popup positioning
updated error message in ` BuckWSServerPortUtils ` to indicate restarting IntelliJ and added a check for tool window instantiation in ` Buck
added a conditional check for Windows before initializing the checkbox for preventSleep to ensure that preventSleep checkbox is only added on the correct platform
updated import statements from ` javax . servlet ` to ` jakarta . servlet ` in ` HttpConfigurationAuthorityOverrideTest . java ` to ensure
refactor QuickstepAppTransitionManagerImpl to adjust window dimensions based on orientation to improve layout handling for different screen orientations during app transitions
added ` fullScreenExclusiveModeState ` and ` isFullScreenExclusiveMode ` methods to ` AWTPermission ` , ` XWindowPeer ` ,
fix stringindexoutofboundsexception in umsutils . playeddurationstr ( )
added methods to add credentials to the DAG in DagUtils . java to improve handling of dag credentials for better resource management
( chore ) camel - test - infra - maven - plugin : use entryset instead of keyset
trim whitespace from the last thread name in SessionState . java to ensure consistent thread naming and prevent potential issues with trailing whitespace
updated the error message in GpsMainActivity to specify that the message can be added to a file to improve user experience by providing clearer guidance
refactor Job class to improve code organization to enhance maintainability and readability of the code
added a new abstract class ` Unused ` and a method ` testUnusedType ( ) ` to check for unused fields in ` Main . java
updated the key for HBASE _ MASTER from " hbase _ master _ host " to " hbase _ master _ hosts " and introduced multiple placeholder
deleted EventReaderDeserializer . java and EventWriterSerializer . java files to remove unused interfaces to streamline the codebase
updated the ` performJoin ` method to return a list of ` GenericRecord ` objects instead of a single record to improve data handling by allowing multiple
updated MAX _ DELEGATE _ LOCK _ PERIOD handling to use a constant instead of a hardcoded value to improve flexibility and
server : fix nullpointerexception when network rate be 0 .
removed the default constructor and overridden the applySpecification method in CmcExchange to streamline the exchange initialization process and improve code clarity
updated configuration retrieval from " seedNodes " to " seed . node . ip . list " and modified configuration strings in GossipLocalNode . java
set default value of hazelcast . client . tpc . enabled when system property ` hazelcast . client . tpc . enabled `
updated the version of the Swagger UI from 2.1 . 10 - 1 to 2.8 . 2 across multiple applications to incorporate the latest features and improvements in
refactored the division logic in MutableBigInteger and added a new ModInvTime class for computing modular inverses to improve clarity and functionality of
refactor key assignment logic in NamedObjectList . java to handle blank names more gracefully to improve clarity and correctness when handling empty names
replaced calls to ` cleanupEmptyDir ` with ` cleanupEmptyTableDir ` across multiple files to improve clarity and consistency in directory cleanup operations
refactor AsyncCache and Cache classes for improved performance to enhance performance and maintainability of the caching mechanism
added import for RCFileInputFormat and registered it with Kryo to enable support for RCFile input format in the serialization process
added methods to retrieve Java types and category for a Column in TypeMapperComponent to enhance type mapping functionality for better data handling
added error handling for invalid host headers in the Request class and created a new test for invalid host headers to improve robustness by providing clearer error
updated ShadowTimeZoneFinderTest and ShadowTimeZoneFinder to use ReflectionHelpers and ClassParameter for TimeZoneFinder to improve compatibility with newer Android SDK versions and
[ hotfix ] [ table ] remove unused method from standardop
changed the visibility of ` segment ` , ` dir ` , and ` cfsDir ` to private in ` SegmentCoreReaders . java `
added ` hasMainThreadProfile ` method to ` AggregateDao ` , ` AggregateRepository ` , and ` TransactionCommonService ` classes to check for
added error handling to ` InterfaceValidator ` for disallowing annotation definitions in non - required rules to ensure that source ABI annotations are not allowed
corrected the spelling of " lowercase " to " lowercaseLowercase " in multiple filter factory classes to ensure consistent casing and improve readability
refactor HSSFSheet and Sheet classes to improve code organization and maintainability
use discoverysearchrequestprocessor instead of lucenesearchrequestprocessor to maintain backwards compatibility
updated the handling of time zones in BasicDateTime . java to remove specific countries related to Canada / Yukon to ensure that specific time zones are
updated SurfaceSyncGroup instantiation to specify the name " TaskBarController " to improve clarity and specificity of the component ' s functionality
removed unnecessary casting of BsonObjectId in GridFsTemplate . java and updated GridFsTemplateIntegrationTests . java to simplify file deletion
added tests for retrieving total size and bytes in ShadowDownloadManager to ensure accurate retrieval of downloaded size and bytes in the download manager
refactor character handling in TextField to improve readability to enhance code clarity and maintainability by simplifying character checks
added a check to return early if the target matches the target to prevent unnecessary processing when the target is the same
added a new method ` afterSetStatements ` in ` BlockLexicalContext ` and modified its logic in ` Lower ` and ` BlockLexicalContext `
added hashCode methods to IntervalXYDelegate and XYSeriesCollection classes and improved equality checks in XYSeriesCollection to enhance hash code generation and ensure
remove nightly test from clientqueuedisruptiontest so that it do n ' t hang forever .
reformatted code for better readability and consistency in CloudWatchAppender . java and created CachingAttributeFilterTests . java to enhance maintainability and
updated Gson serialization method from serializeSpecialDoubleValues to serializeSpecialFloatingPointValues to ensure compatibility with the new serialization standards for floating point values
added multiple calls to ` HttpMethed . waitToProduceOneBlock ` and ` PublicMethed . waitProduceNextBlock ` in
added checks for non - empty language subtags and privateuse in Locale . java and LanguageTag . java , and updated language tag handling in tests
server : add config to control whether to ssh into kvm agent
removed public access modifier from constructors and methods in SchedulerWhen . java and SchedulerWhen . java to enhance encapsulation by restricting access
replaced the import of ` PagerSlidingTabStrip ` from ` viewpager . extensions ` to ` astuetz ` to simplify dependencies and
added a condition to check if the string does not contain a hyphen to ensure that the filter does not contain hyphens
updated sort order labels from natural order to natural column order in BrowserContentPane . java and refactored UI settings calculation in DataBrowser . java
removed the use of ` Arrays . copyOf ( in , 6 ) ` to optimize memory usage by reducing unnecessary array copying
encode the remote address before writing it in HtmlSessionInformationsReport . java to ensure that the remote address does not contain spaces in the output
updated topic in ItemStateTriggerHandler to include the item name in the event ' s topic to ensure correct identification of items in the smarthome context
remove unnecessary synchronization in fasthttpdateformat . getdate ( )
added multi - threading support for file moving in Hive to improve performance by reducing the number of concurrent operations during file operations
added two overloaded ` trigger ` methods to ` WrapTimer ` and created a new ` Timer ` class with a specified period to enhance timer functionality
added support for LOCAL _ DATE and LOCAL _ DATE _ TIME types in TypeStringUtils and created corresponding test cases in TypeStringUtilsTest to ensure proper handling
updated error logging to include a verbose option in AbstractStatusReporter to enhance debugging capabilities by providing more detailed error information
added togglemenu ( ) call to itemcontrols when the menu be unbundled
s2s vpn : do n ' t allow vpn connection between same account ' s vpn gateway
updated error handling logic in CursorReadingTask and added unit tests for error handling in CursorReadingTaskUnitTests to ensure that the error handler is invoked
pdfbox : log error when try to create / extract a pdf
fix the issue that curatorwatcherservice can not be start ( # 10265 )
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code organization and maintainability
updated the method to use ` id ` instead of ` getSelectedItemId ( ) ` and added a call to ` getContentResolver ( ) . delete (
refactor Java6Assertions and Conditions classes for improved readability to enhance code maintainability and clarity
changed the parameter type from Collection < ReplaceOrderCommand > to List < BitmexPrivateOrder > and updated the method signature accordingly to improve clarity
refactor method name from ` enterDefault ` to ` enterIdentNode ` in ` FindScopeDepths . java ` and add ` enterFunction
added a new file ` J9ConstantHelper . java ` and refactored ` ObjectHash . java ` to use it to improve code organization
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify multi - threaded verification behavior to ensure that concurrent modification
added notifyrosteroffline and notifyrosteroffline to transportsession and transportsessionmanager .
replaced calls to ` pd . getProperties ( ) ` with ` pd . getOverlayedProperties ( ) ` in ` MapOperator . java ` and
updated loadHandle method call formatting in FunctionObjectCreator . java to improve code readability and maintain consistency
added null check before initializing ` extTypeCustomDesers ` in ` MessagePackFactory ` and updated tests for ` copyWithDefaultConfig ` to
set the " mockserver . logLevel " property to " WARN " in Main . java to ensure that the mock server logs a warning rather than
removed the @ Test annotation from AbstractRegistryFactoryTest . java to enable the test suite for improved test coverage
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline code and
updated scoreMap and termScoreMap to use Map < String , Map < Float , Float > > instead of Map < Float , Float > to
updated condition checks in U64 . java to use negative values instead of bitwise operations to improve clarity and correctness of data comparison logic
removed the setHeadlineStyle method from MainViewModel . java to simplify the code and improve readability
updated notification logic in WallpaperColorInfo . java to include a check for ` didSupportDarkText ` to ensure proper handling of dark theme changes
[ hotfix ] [ runtime ] do n ' t enqueue checkpoint on too many pending checkpoint
updated the maximum concurrent pool size and added new constants for keep - alive and idle threads in the Parallel . java file to improve performance by optim
replaced ` filter ` with ` anyMatch ` for provider matching in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java ` to improve clarity and
added TestRequirements . notWindows ( ) and notArm ( ) checks to OpenCVImageFactoryTest . java to ensure compatibility with Windows server
fix for http : / / issues . apache . org / jira / browse / amq - 4237 - add fetch property to connection factory
[ py4j ] support python proxy return value in case of exception .
added a Repeatable annotation and a Retention annotation to the Issue class to provide a flexible way to manage multiple issues in the code
updated user property from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and modified imports
updated socket connection logic to use a dynamic address based on the " socksProxyHost " system property to ensure proper resolution of socket connections based on the
[ hotfix ] [ runtime ] fix typo in slotstatus javadoc
added import statement for ClassUtils in ReflectionUtils . java to utilize ClassUtils for enhanced utility functions
replaced instances of HashSet with LinkedHashSet for protocols , excludeCipherSuites , and selected _ protocols , and cipher suites to maintain insertion order
added a static variable ` systemResource ` and logic to return it if it equals ` Resources . systemResourceLocation ` to improve resource management by avoiding unnecessary
add a constant to the size of the plaintext segment in stream aead / seekable decrypting channel .
added a test to verify that a circuit breaker invalid fallback throws an IllegalArgumentException to ensure proper handling of invalid URIs in routes
do n ' t allow hostname verification when create a http client in apppage
updated the size limit setting and removed the resetBytesReadCounter method in PerformanceTest . java to ensure proper memory management and prevent potential memory leaks
added ` preferAES ` property and its getter / setter methods to ` ProtectionPolicy ` and removed it from ` StandardProtectionPolicy ` to streamline
camel - opentelemetry : use logger instead of system . out . println .
[ elb ] remove elbintegrationtest . testloadbalancerinstanceoperations test
corrected the spelling of " setAlarm " to " setRingtone " in the AlarmReceiver class to ensure the method accurately reflects the
added error handling for file creation in DiacriticTest . java to provide user feedback when the locale or file system is configured to prevent file
hhh - 14166 skip test on oracle 11 when driver be not oracle
refactor texture file handling in TextureUnpacker . java to improve error handling and file existence checks to enhance code robustness and provide clearer
added a lock for cluster write operations in AmbariManagementControllerImpl . java to ensure thread safety during configuration operations
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test method to verify that ResultSet can not be closed and implemented the isQueryClosed method in HiveStatement to improve test coverage and ensure proper
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 39059
added logic to remove pre - deleted databases from the schema map to ensure only relevant databases are included in the response
do n ' t flush the chunked writer if it ' s already there
updated item deletion logic in EnhancedBrowseFragment and added a delete confirmation dialog in FullDetailsFragment to enhance user experience by allowing deletion of items
introduced a new interface ` RuleBank ` and refactored related classes to use it for adding rules to improve code modularity and maintainability
add a try - catch around the initialization and doFinal method in JcaTlsCrypto . java to handle potential exceptions during encryption operations
added new files TestMonomorphicObjectCall . java and Object . java to implement a test class for Monomorphic object calls and provide a
replaced the ` removeMetaDataSource ` method calls with ` toFront ( ) ` in both ` DataBrowser ` and ` Desktop ` classes to stream
hbase - 25827 fix npe in defaultmemstore . shouldseek ( )
[ hotfix ] [ runtime ] rename ` local _ state _ sub _ directory ` to ` local _ state _ directories `
fix the alter timeseries alter view to be a final statement .
fix condition . matchtext ( string , string ) to match all string
added error handling around the retrieval of the RoutingTableBuilder in HelixBrokerStarter . java to improve robustness by handling potential exceptions during the
fix possible nullpointerexception in httpclientintroductionadvisor
( chore ) camel - jms : use char [ ] instead of string
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 3949 .
removed the ` toSortedListWithCounts ` and ` isUniformDistribution ` methods and updated equality checks in the ` Counters ` class to
updated the ` initialize ` method to accept an ` SimulationStatus ` object and added warnings to the returned ` BasicTumbleStatus ` to enhance
add miss call to system . currenttimemillis in llvmamd64syscallclockgettimenode .
updated the ` readObject ` method calls to include the ` var ` parameter in ` PrettyPrinter . java ` to ensure the correct variable type is read
added null check for indexToNode [ currSize ] before creating a new Node to ensure proper cleanup of resources to prevent potential NullPointerExceptions
updated DatagramPacket handling and filtering logic in DatagramSocket and DatagramChannelImpl to improve data processing accuracy and ensure proper filtering
updated JUnit imports and annotations from ` @ Before ` to ` @ BeforeEach ` in TestQueryDNS . java to migrate tests to the
added a new class ` NutchServerInfo ` to manage server - related server information to provide a structured way to access and manage server - related
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource in EdgeNGramTokenFilter to simplify attribute management and improve code maintainability
added timestamp support to the CqlInserter and ThriftInserter classes to enable the insertion of timestamps based on user - defined settings
updated DSAParameterGenerator to include additional validation for prime strength values and replaced hardcoded BigInteger values with BigInteger . ONE to improve code clarity and
refactor NumberUtils to improve bitwise operations and introduce Float64ArrayNative in Numbers to enhance performance and maintain compatibility with typed arrays
updated the masking condition in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and improve test coverage for new
added handling for SQL exceptions in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of constraint violations in database operations
( chore ) camel - core : remove setzeroifnotfound from remotebrokeroffsetstore
added a new method ` addTab ` and refactored existing tab creation methods to improve code organization and encapsulation of tab insertion logic
replaced array size ( ) method calls with a zero - length array in multiple classes to improve performance by avoiding unnecessary array allocations
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironment
updated MavenVisitor to include conditional checks for reqGroup , scope , and requestedBom to improve code readability and ensure proper handling of null values
updated mock app secret and configuration updates to use " MOCK _ NAME _ UPDATE " and " MOCK _ NAME _ REFRESH "
added a new file FormatCheckingTest . java to implement a test for class format errors to ensure proper handling and reporting of illegal class names in Java
updated line number handling in CodeGenerator to use the current line number directly to simplify code and improve readability by eliminating unnecessary method calls
added a try - catch block around the addition of properties to the result to handle potential exceptions during configuration retrieval
added two overloaded methods to create RadioButton instances with different RadioButton properties to enhance functionality by allowing RadioButton creation with specified parameters
updated the initialization of the LinkedHashMap in LRUCache and increased CHUNK _ METADATA _ CACHE _ SIZE in MetadataQuerierByFileImpl
int - 1100 add support for ' capacity ' attribute on channel .
fix npe in osgimanagementnamestrategy when symbolicname be null .
fix ( core ) : make external mode configurable
yarnsessionfifoitcase : make sure we wait for 2 container before kill the application .
rename ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` and update related references to improve clarity and consistency in
fix nullpointerexception in abstractreplyproducinghandler # addnotpropagatedheaders
refactor comparison logic in CompareMode . java to improve code readability and maintainability
added HasTests interface implementation to Arg and RustLibraryDescription classes to enable testing capabilities in Rust binary and library descriptions
updated the placeholder icon from ` ic _ recent _ image _ placeholder _ 120dp ` to ` ic _ recent _ image _ placeholder ` in `
refactor OnExitTest class to improve code organization to enhance maintainability and readability of the test code
added an ` onUserPreferenceChanged ` method to ` TaskbarManager ` to recreate the taskbar when the user preference changes
refactor heap dumping logic in HeapDump . java to support both J9 and non - J9 JVM environments to improve flexibility
( chore ) camel - mybatis : ensure session be close even if commit fails .
simonstewart : add the ability to switch to a window in the ie driver .
use java 5 for iterator to for - each constraint instead of jdk 5
set the application state to unavailable when the application is in an unavailable state to ensure proper application state management
updated position and limit handling in ByteBuffer and StringCharBuffer classes to improve readability and maintainability of buffer operations
updated the method call from ` toUri ( ) . toUri ( ) ` to ` toString ( ) ` in ` ConditionalResolverMergeFiles .
updated array deletion logic and added setEmpty methods across multiple classes to improve array handling and ensure correct deletion of elements
changed enum declarations from package - private to public in VirtualAuthenticatorOptions . java to allow access to these enums from other packages
replaced instances of ` doc4 ` and ` doc5 ` with ` doc6 ` in ` TestMultiPhraseQuery . java ` to ensure consistent
fix ticket assignment when offline payment be request ( # 352 )
added a private ` Thread _ onTimeoutThread ` field and improved error handling in ` HttpChannelState . java ` to enhance thread management and prevent
replaced printStackTrace ( ) with debug logging in multiple classes and added debug logging in TrackingSocket and ServerTimeoutsTest to improve logging detail for better
updated package - info . java files for mmm and ppp to improve documentation clarity and maintainability of the code
fix : use local _ quorum for paxos in read ( )
added a condition to check if the model name contains " Home " in HeosDiscoveryParticipant . java and updated HeosPlayerHandler . java to
added a new ` Wait ` class and modified ` PlainSelect ` , ` SelectDeParser ` , and ` SelectTest ` to utilize it
replaced hardcoded label initialization with attribute management for nodes and edges in Neo4j to improve code maintainability and readability by utilizing Attribute
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 55047 - fix npe
nifi - 10213 : deprecate rocksdb and move it to nifi - controller - repository to reduce dependency on rocksdb
updated the method to retrieve the " IS _ GRANTABLE " value from a results object to ensure correct retrieval of the " IS _ GRANT
updated logging statements and modified URL condition in JavascriptContext . java to enhance debugging visibility and ensure proper URL handling
camel - cxf : fix the test error of camel - cxf
modified column modification logic in LoadTestTool to handle new column scenarios to ensure correct column modification based on whether the column is new or not
implemented the Disposable interface in the Texture class to ensure proper resource management by implementing the Disposable interface
updated conditional checks and changed references from ` jetty . xml . config . urls ` to ` jetty . etc . config . urls ` across multiple files
do n ' t use goquorum genesis - file if -- goquorum - privacy be enable
change IOException to Throwable and modify suppression handling in HttpInput . java to improve error management by utilizing a more general Throwable type
added a condition to exclude Thailand from locale checks to address issues related to the current era in the locale handling
updated the response type from ` Response . Wrapper . class ` to ` HostResponse . HostResponseWrapper . class ` across multiple files to ensure consistency
added boost comparison and hash code calculation using floatToRawIntBits to ensure correct comparison and hashing based on the boost value
updated constructor formatting in FileMenuFilter . java to improve code readability and maintainability
[ web ] texteditadvancedpanel : use scrollpane instead of listbox
added a new file TestCMSClassUnloadingDisabledHWM . java to implement a test for CMS class unloading behavior to verify that the
add a check for empty entity before create a new forge event
refactor ` ColumnMapKeyMappingPreparedStatementSetter ` and related classes to use ` ItemPreparedStatementSetter ` instead of ` KeyMappingPreparedStatement
update compactionstest to use abstractbounds instead of range
added null check for the " type " attribute in MiniAapt and created a corresponding test for invalid item resources to ensure robust error handling and
added a new ` SPEL ` operator to the ` OperatorEnum ` and integrated it into the ` OPERATOR _ JUDGE _ MAP
fix ordinalitysymbol check to use equal instead of = =
use java . awt . eventdispatch . lookup instead of sun . misc . service . provider . lookup ( profiler . class ) .
refactored multiple classes related to Conscrypt to improve code clarity and maintainability
removed warning log for attribute lookup failures in AttributeResolution9 . java and corrected integer literals in ShadowArscAssetManager9 . java to
updated the number of options from 1.5 to 6 in SetupHid . java to allow for a more flexible source and target configuration
changed access modifier of ` extractMetadataColumns ` method from private to public and refactored project retrieval logic in ` PushProjectIntoTableSourceScan
added sorting functionality to the localized names list in AboutActivity to ensure the list of localized names is sorted for better user experience
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
added conditional logic to refresh shared preferences based on streaming settings to ensure shared preferences are only updated when the activity is live streaming
added an exception parameter to the MappingException in AuditConfiguration . java to improve error handling by providing more context in the exception
( chore ) camel - file : fix flaky test fileconsumerpollstrategystoponrollbacktest
updated generic type parameters in multiple classes to improve type safety and reduce unchecked warnings
added transport support method in GitClientApplication and updated RepositoryUrlPanel to use it to enhance transport support logic and improve code clarity
updated the ` TouchInteractionService ` , ` AccessibilityInputConsumer ` , ` DelegateInputConsumer ` , ` TaskbarInputConsumer ` , and
fix potential npe in changeparentpom . getversions ( ) when mavenmetadata be null
added a check for " Large Page Support : ( Disabled ) " in TestLargePageUseForHeap . java to ensure that the debug log
cloud _ usage db do n ' t exist to skip event migration when usage db do n ' t exist .
fix the test failure of xmlconfigstarttest on window
added a new test class ` TestObjectStreamClass ` for testing ObjectStreamClass functionality to verify serialization and deserialization behavior of ` ObjectStreamClass `
refactor conditional checks in ZoneAwareDiscoveryFilter to simplify null checks to improve code readability and maintainability
changed log level from error to warn in OpenTracingTracer . java to improve logging clarity for tracing failure scenarios
added a toString ( ) method to the Generator class to provide a string representation of the registered generators
refactor URI handling in mmm URI . java and add new test cases in mmm Test . java to improve code clarity and ensure correct parsing of URI
added a null and empty check for resource existence in ClusterControllerImpl . java and created a corresponding test in ClusterControllerImplTest . java to ensure
fix nullpointerexception in accepttoapiutils . extractresponse ( )
removed conditional logic for Android application type and version in VertexBufferObject . java to streamline code for better performance and maintainability
refactor SybaseASADatabase class to improve code organization to enhance maintainability and readability of the code
added a new boolean parameter ` forceProjection ` to the ` HashJoinInfo ` class and updated related methods to support this functionality to ensure backward compatibility
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to the ` sd ` variable for better functionality
updated PendingIntent flags and refactored related methods for better clarity and consistency to enhance code maintainability and ensure proper permission checks for POST _ NOTIFICATION
added methods to append and retrieve read column IDs in HiveFileFormatUtils and HiveInputFormat to improve code clarity and maintainability by centralizing read
updated UPNPAddress methods to use IPv4MulticastAddress instead of UPNPAddress to ensure the correct multicast address is used for network operations
added a temporary toast message with DisplayTemporaryToast ( ) method in SavedExperiments . java to improve user experience by providing feedback on temporary
added version resolution logic in ServiceModule and corresponding unit tests in ServiceModuleTest to ensure correct versioning of services based on their parent ' s version
added a new test class RawSerializationTest for Gson serialization tests to ensure correctness and functionality of JSON serialization methods in the Gson library
simonstewart : expose the sslcertificategenerator interface instead of the seleniumserver
updated loop structure in ExpansionViewHelper to use index - based access instead of an enhanced for loop to improve code readability and ensure proper padding
increased timeout duration from 3 seconds to 60 seconds in ` ExpiringUrlCacheTests . java ` to allow more time for resource access exceptions to
added a new test method ` testNGramFilterPayload ` to validate the N - Gram filter payload to ensure that the N - Gram
refactor AclImpl class for improved readability to enhance maintainability and clarity of the codebase
added a new test for different array sizes with different sizes in EasyRandomTest . java to ensure that different array sizes are correctly random
xenserver : catch and log exception in case of failure to stop vm .
added a ThreadLocal to manage the execution of asynchronous writes in SslConnection . java to improve performance by reducing the number of calls to run ( )
reformatted code for better readability and added a method to check if an actor ' s ancestors are visible to improve code clarity and maintainability by
added logging for rolling - update steps failure in RollingUpdateOpFactory to improve error reporting for deployment group failures
[ hotfix ] [ table - common ] fix javadoc error in flink - connector - flink
added handling for BadCredentialsException in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent class to enhance error reporting for non - 
refactor AtMostXVerificationTest class for improved readability to enhance maintainability and clarity of the test cases
updated default QTYPE assignment to use LuceneQParserPlugin . DEFAULT _ QTYPE instead of oldLuceneQParserPlugin . NAME to ensure
updated SimpleDateFormat instantiation to include Locale . US to ensure consistent date formatting across different locales
added method ` isInitialized ( ) ` to ` ILanguageServer ` and overridden it in ` JavaLanguageServer ` to improve method visibility and ensure
updated the parameters of the ` test _ fetch _ token _ from _ authorization _ code ` and ` test _ fetch _ token _ from _ authorization
added database transaction methods to DatabaseAdapter and refactored account deletion logic in GncXmlHandler to improve database management and ensure all records are deleted
replace byte array and string reading with a byte array for efficiency to improve performance and reduce memory usage during string conversion
added multiple @ Override annotations in MessagingTemplate . java to improve code clarity and ensure proper exception handling logic
added an ` isAcceptable ` method to the ` AutoFormatVisitor ` class to check if a source file is an instance of ` CompilationUnit
set maximum buffered documents to Integer . MAX _ VALUE and set RAM buffer size to 100 to improve performance and memory management during index merging operations
added a method to clear the witnesses in the Manager class and implemented a test for updating witness addresses to ensure the correctness of witness management and validate
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by preventing NoSuchElementException during iterator operations
use log4j instead of log4j - level from flumenode
added reindexing and metric calculations in BasicAuthIntegrationTest and improved thread handling in DaemonStream to enhance test reliability and ensure proper resource management during
replaced HashMap with LinkedHashMap for the nodes variable to maintain the insertion order of elements
use weld ' s internalerrorhandler in jersey support ( # 11919 )
replaced direct comparison of response headers with a validation method for header validation to improve code readability and maintainability by centralizing header validation logic
refactor system properties handling in mmm System . java and ppp System . java to improve clarity and maintainability of system property management
updated method signatures from ` String ` to ` CharSequence ` in ` StringSubject . java ` and added new test cases in ` StringTest . java
added intrinsics for counter time and event writer in CheckGraalIntrinsics . java to enhance intrinsic functionality for improved performance
rename IntUtilsTest to PrimUtilsTest to clarify the purpose of the test class
updated the way the connection factory is set in the PersistenceManagerProvider to ensure proper datasource initialization based on the forCompactor condition
refactor DeploymentOptions class to improve code organization to enhance maintainability and readability of the code
updated the ` updateTextButtonWithDrawable ` method to use ` Drawable ` directly instead of using ` Drawable . ConstantState ` to improve drawable handling
replaced byte array input stream with try - with - resources in XmlParser and YamlParser classes to ensure proper resource management and prevent potential memory leaks
added support for the COALESCE function in RexNodeConverter and SqlFunctionConverter to enhance the functionality of Coalesce function in SQL
camel - 14284 : remove unnecessary code from hl7dataformattest .
added context class loader management to the proxy factory factory to ensure proper class loading during proxy factory execution
refactor DefaultDateTypeAdapter by removing unnecessary constructor parameters and adding synchronization to date serialization and deserialization methods to improve code clarity and ensure thread safety during
reformatted code in DocumentUtil . java for consistency to improve readability and maintainability of the code
do n ' t invalidate the query if it ' s already set
added a method to filter old feed entries in FeedRefreshUpdater to ensure that only relevant feed entries are processed
hbase - 16458 change log level from fatal to warn in fstlog # append
move nodemap . getvalues ( ) to a nodemapiterable so it can be use in a loop .
updated DiscoveryClientRouteDefinitionLocator to include a subPredicate and modified predicate creation logic to enhance functionality by allowing wildcard wildcard matching for route definitions
added a check for non - empty fields before adding aggregates in MongoRecordReader and modified the return value in RexToMongoTranslator to improve
added admin to the admin list if it do n ' t already exist .
replaced instances of ` MultiFields . getFields ( ) ` with ` SolrIndexSearcher . getSlowAtomicReader ( ) ` in multiple files to simplify
updated the return statement in ConstantBeanHolder to include class name and identity hash code to improve clarity of the returned string representation of the bean
groovy parser : remove unnecessary line number check in groovyparservisitor
svm : remove hash code substitution from frameinfoquery .
[ java ] increase timeouts in sedablockwhenfulltest
added a new package - info . java file for the org . apache . lucene . core . testresources package to provide package - level documentation for
updated the logic for determining the read length in MessageUnpacker . java to ensure correct buffer size handling and prevent potential index out - of -
updated import statement from ` io . micrometer . common . lang . Nullable ` to ` io . micrometer . core . lang . Nullable `
updated SQL query in IconCache to include user serial filtering to enhance functionality by allowing user - specific identification
fix a typo in defaultmqproducer # getbackpressureforasyncsendsize ( )
scan scanspec . enableclassinfo = true for classfile only scan .
added a method to fix foreign key constraints in the Upgrade410to420 class to ensure correct referencing of foreign keys in the database schema
removed the IJava2DRenderer interface and its implementation from the Java2DRenderer class to simplify the class structure and eliminate unnecessary interface
do n ' t call offloadbufferemptying listener when audio be stop
added scheduled execution and delayed processing for upstream tasks in UpstreamCacheManager to improve performance by allowing scheduled execution of upstream tasks
[ hotfix ] [ javadoc ] fix typo in streamtype
add more detail to the assertion failure message
replaced ` GitBlitWebSession ` with ` RequiresAdminRole ` in ` FilestorePage ` and added admin checks in ` RootPage `
camel - elasticsearch - rest : ignore fail camel - elasticsearch - rest test
added check for method declare class in expressioncontrolbusfactorybean . accept ( ) .
updated button labels from " leftButtonAltcoin " and " rightButtonFiat " to " sellWithFiat " and " sellWithFi
camel - 13636 : camel - restlet : allow restlet endpoint to handle invalid url .
add block . createnextblockwithcoinbase ( ) method that take a value instead of a block height
removed Serializable interface from BTreeMapJava and modified serialClone methods in ConcurrentSkipListMapTest and JSR166Test to implement NotSerializableException to
do n ' t log error in ruleengineimpl if the cause be null .
reformatted conditional statement in Main . java for improved readability to enhance code clarity and maintainability
replaced ` mFilesAll ` with ` mFiles ` in the ` indexOf ` method to improve code clarity and maintain consistency in naming conventions
deleted the PlainVerifier . java file to the functionality provided by PlainJWSHeaderFilter is no longer needed in the project
added a condition to close system windows when triggered from an alt tab to ensure proper resource management by closing system windows when the action is triggered from the
updated DialogFragmentIT and OCFileListBottomSheetDialog to utilize BottomSheetDialog functionality to improve dialog performance and maintain consistent state management
updated MimeUtil to use UTF - 8 encoding in parseCharset method calls to ensure compatibility with UTF - 8 encoding in MIME types
added a call to the superclass ' s deinitialize method in TextField . java to ensure proper initialization of the TextField component
replaced manual serialization code with TestUtilities methods in LogFormatTest . java to improve code maintainability and reduce redundancy
updated the handling of previous range in the LogicalGenerator and modified the fill initialization in GroupByFillDataSet to improve the accuracy of duration parsing and enhance
updated array size validation and added negative array size handling in JAXWSExceptionBase . java to ensure proper error handling for negative array sizes and
test : migrate ctunresolvedimporttest to junit 5 ( # 4458 )
increased wait time from 10 seconds to 60 seconds in T6567415 . java to allow for a longer wait time for the thread to complete
[ hotfix ] [ test ] change default value of jobmanageroptions # legacy to region
added ` @ Implementation ( i18nSafe = false ) ` annotations and corresponding methods in ` ShadowActivity ` , ` ShadowAlertDialog ` ,
updated log level from warn to warn for POIFSFileSystem to utilize POILogger for better logging capabilities
refactor alarm handling and motion detection logic in InstarHandler . java to simplify channel state management and improve code readability
add remove latency and remove operation count to mapdeletemessagetask ( # 11824 )
refactored enum declaration and modified status check in Response . java to use a switch statement to improve code readability and maintainability
updated the method for retrieving the Java class location in CheckResourceKeys . java to improve clarity and functionality when accessing the javac file
add project - name support for stable channel
added a new test class DeprecatedStubbingTest for testing deprecated stubbing behavior to ensure compatibility and functionality of deprecated stubbing methods in Mockito
updated the import statement from ` org . eclipse . jetty . server . DispatcherType ` to ` javax . servlet . DispatcherType ` to ensure compatibility
fix partmod for nml and nx when it be not the same a the nml model
disable rsa key exchange by default in fipsutils
rename variable from ' output _ reader ' to ' reader ' across multiple files to improve code readability and maintain consistency in variable naming
delete the access token when delete the pubsub / sdm api
updated interpolators in TaskbarEduView . java from AGGRESSIVE _ EASE to EMPHASIZED to improve animation
added ` UpdateRegionLocationPlan ` functionality and updated logging statements for consistency and clarity to enhance logging clarity and provide clearer insights into region migration
added a new file ` FileDialogLeakTest . java ` to test the behavior of a ` FileDialog ` with multiple finalizers to ensure proper resource
changed the package of TestOpenTableInCoprocessor from Hadoop to HBase and added necessary imports for HBase and MediumTests to
svm : add support for uninterruptible implementation method .
[ flink - 20536 ] [ protobuf ] remove useless split method from pbcodegenrowdeserializer and pbcodegenrowserializer
updated condition to check for non - null disi in DrillSidewaysScorer . java to ensure that disi is not null before
make sourceinforefreshhandler in fakemediasource thread safe
added version management for Java 9 and updated version check logic to ensure compatibility with newer Java versions and improve code robustness
updated FileReporter instantiation to use explicit type casting for null values to ensure proper handling of null values in tests
updated the condition for checking end - to - end encryption keys from ` isFalse ( ) ` to ` isTrue ( ) ` to ensure that the
added menu item handling in DirectMessageConversation . java to improve user experience by allowing back navigation to the home button
added support for retrieving a user in the application and updated protocol version from 5 to 6 to enhance user management capabilities and improve error handling
added @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL to ensure compatibility with different operating system architectures
updated the variable name from ` startClass ` to ` originalStartClass ` in ` WhiteboxImpl . java ` to ensure the correct start class is
remove parameter register from try / catch block , add local for parameter register after splitting
replace calls to getAsyncContext ( ) . getResponse ( ) with event . getSuppliedResponse ( ) in TestAsyncContextImpl . java
fix issue with swing look and feel not work in non - swing mode
updated regex pattern in AppPage . java for version matching to ensure correct version formatting in the application
refactor animation listener implementations in LauncherAppTransitionManagerImpl to use local variables for alpha changes to improve code readability and maintainability by
updated the error message in AddressFormatException to include the version number to improve clarity of error reporting for better debugging
fix wrong extradatamap in editofferdatamodel
updated milestone parameter handling in TicketPage . java to differentiate between open and closed tickets to improve clarity and functionality of ticket retrieval based on milestone status
change the battery size from 640 to 80 in PipeItemsWood . java to allow for a more flexible battery configuration
added a new method ` getClusterKey ` and modified the ` getStateMachineClusterInstance ` method to include blueprintName and blueprintRev parameters to enhance
set default value of downgradeAllowed to true and add a new test for isDowngradeAllowed in UpgradePackTest to ensure downgrade functionality is validated
updated QName usage to ATTRIBUTENAME in multiple document scanner implementations to improve clarity and consistency in handling XML entity scans
added configuration to control whether system library can be load from the classloader .
fix issue where we ca n ' t sort app widget in appscustomize
updated file handling in DefaultPlatformManager and FatJarStarter to ensure the parent directory exists before creating an output stream to improve resource management and prevent
updated assertion messages in TestSecretKeyCredentialHandler for improved clarity to enhance readability of assertions for better debugging and debugging
minor refactor to reduce code duplication
[ hotfix ] [ doc ] fix typo in metric description
hbase - 14284 testfulllogreconstruction fail on slow ci server ( addendum )
added default methods for DatagramSocketOptions in DatagramSocketOptions to ensure consistent behavior across different network configurations
fix checkstyle issue in util / glowserver / serverconfig . java ( # 118 )
simonstewart : remove the deprecated interface from the internal package
updated error messages to clarify that the version field must be searchable and non - retrievable to improve clarity and accuracy of error messages related
replace ` equalityPredicateColumns ` with ` predicateColumns ` in ` StarTreeIndexOperator . java ` to improve clarity and consistency in predicate handling
reformatted code in HandshakeHandler . java for improved readability to enhance maintainability and clarity of the code
updated closing brace formatting in Navigator . java to improve code readability and maintain consistency
change visibility of recordreaderfactory from private to package - private and add test for it
added support for GREATER _ THAN _ EQUAL and LESS _ EQUAL queries in MongoQueryCreator and corresponding unit tests to enhance query
added a method to check for expressions outside the GROUP BY clause in CalciteSqlParser . java to improve code readability and maintainability by
replace UnsupportedOperationException with Unsafe . invokeCleaner for MappedByteBuffer and introduce AtomicInteger for buffer reference counting to improve memory management and prevent memory leaks
refactor code to use a local variable for the validator object instead of multiple calls to l . getValidator ( ) to improve code readability and
added a ` schedule ( ) ` method to ` CircuitBreakerImpl ` and modified ` testCircuitBreakerTest ` to use it to improve
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in mmm Launcher . java and ppp 
bug fix : upload progressbar should be disable by default
updated test name from " Retrieve view column privileges " to " Retrieve column privileges " and added a Disabled annotation to disable the retrieval strategy
fix concurrentmodificationexception in entitygraph . addexportedcount ( )
updated import statements in MetricsImpl . java to replace ` IntRangeUtil1 . requireNonNegative ` with ` IntRangeUtil . requireNonNegative
updated HttpParser to throw BadMessage for illegal characters and modified character casting logic to improve error handling and ensure correct decoding of encoded headers
updated setContentView from trends _ activity to configuration _ activity to ensure the correct layout is used for the configuration activity
updated print statement to include position information in SLWTTextListing . java to improve clarity of log output for better debugging
refactor ForceLeaderTest to conditionally check for TLOG replicas using a timeout and add a new ForceLeaderWithTlogReplicasTest
refactor Thread class to improve thread management to enhance performance and maintainability of thread operations
do n ' t force the creation of html , html , and text template if the forcetemplatemode be false .
camel - 14284 : fixed the issue of camel - cxf do n ' t use the correct namespaces when set the xml attribute
reformatted code in YamlRepresenter . java for consistency to improve readability and maintainability of the code
updated output formatting in ToChar . java and added SQL insert statements in TestFunctions . java to improve code readability and enhance test coverage for timestamp
added support for valid transaction and write ID configurations in GenericUDTFGetSplits . java to enhance transaction management capabilities by integrating
updated logging statements and improved handling of empty collections in JsonSerDe . java to enhance code clarity and prevent unnecessary object creation
bugfix : do n ' t try to open a book folder if there be no book .
refactor SSTDeserializer and its methods for improved readability and functionality to enhance code maintainability and ensure proper error handling during string processing
updated grid column handling in AppPreferencesImpl and ExtendedListFragment to use a constant for the default grid column to improve code maintainability and ensure consistent
updated message formatting in Platform . java and ComparisonFailureWithFieldsTest . java to improve clarity of error messages related to line contents and line break
[ java ] add waitingforkeys field to decoderinputbuffer and set it to false in clippingmediaperiod .
updated API endpoint paths in OkexV3 . java for margin and account operations to ensure consistency and clarity in API endpoint structure
rearranged conditional checks for line coordinates in LineUtilitiesTests . java to improve readability and maintainability of the code
added error handling for old array syntax in JavacParser and created new classes VarargsAndOldArraySyntax and T6569633 to improve
log warn if ` defaultdrmsessionmanager ` be use on wrong thread .
added METHOD context handling in VariableContext . java and corresponding tests in TestVariableContext . java and TestVariableContext . java to improve variable context parsing
added tests for parsing invalid compilation unit and profile strings in ExperimentParser to ensure proper error handling for invalid JSON input
update buffer limit calculation in Piece and SharingPeer classes to ensure correct buffer position handling during buffer operations
added HttpClientProperties to the NettyRoutingFilter and NettyRoutingFilter classes to allow customizable response timeouts to improve control over HTTP client responses
updated ` CxxLibraryFactory ` and ` NativeLinkTargetGroup ` to use ` getTargetForPlatform ` instead of ` getNativeLinkTarget `
camel - main - add a unit test to verify the issue
added field access handling in ASTConverter and refactored conversion logic in RexNodeConverter to improve code clarity and maintainability by centralizing field
refactor QueryLogger to use a static final array for query log entry values to improve code readability and maintainability by centralizing query log entry
fix ( webclient ) : allow proxy . noproxy ( ) to be use
refactored certificate handling in PKCS12KeyStore and updated related tests in StoreSecretKeyTest to improve certificate management logic and enhance test coverage
added reflection access checks and refactored related methods in NativeObject , ReflectionCheckLinker , and Bootstrap classes to enhance security by validating reflection
removed the ` public ` access modifier from the constructors of ` CollisionMap ` to enforce package - private access within the package
marked the ` getRawInputFromTransactionInput ` method as deprecated and added a null check to ensure that the ` input ` parameter is not null to
refactor log level handling from if - else statements to a switch - case structure to improve code readability and maintainability
fix the issue that we do n ' t need the region _ id when insert the user into the database
fix bug # 60284 - support for old excel file with password record
add -- add - exports = all - unnamed for native image build in py micronaut benchmark
updated visibility setting of the image in TimeLineCursorAdapter to ensure the image is displayed correctly in the UI
increased sleep duration in BatchingStateChangeUploadSchedulerTest from 10 seconds to 50 seconds to avoid all attempts timing out during test execution
refactor directory creation and deletion logic in ShadowContext and ContextTest classes to improve code clarity and maintainability while ensuring proper directory management
replaced custom exception handling with class loading for AssertionFailedError and ComparisonFailure to improve compatibility and simplify exception management in the test framework
updated the WAIT _ TIME _ MS constant from 10000 ms to 60000 ms in LauncherInstrumentation . java to increase the wait time
added AUD handling in ConnectOAuth2RequestFactory and updated JWTClaimsSet builder in ConnectTokenEnhancer to utilize a new claim
( chore ) camel - kafka : remove default value
added a new constant ` selectableItemBackground ` with a value of ` 0x10a13 ` to define a background color for selectable
replaced multiple specific imports with a wildcard import for trade DTOs and added a placeholder method for placing stop orders to streamline import statements and
updated eventType assignment logic in TxnSetOperation . java to ensure correct event type is set when the record is null
added a new class ` ResumableRandomAccessFileListener ` and updated ` ResumingExternalDownload ` and ` ResumingExternalDownload ` to
corrected a typo in the class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " to
fix bug # 44564 - fix hssfdataformat . getcellstyle ( ) to correctly set number format
[ hotfix ] [ kafka ] deprecate unused method in flinkkafkaproducer
updated the condition for calculating compressed chunk length in CompressedInputStream . java to ensure correct handling of compressed chunks based on maximum compressed length
camel - 14284 : camel - redis - idempotent - add a redis idempotent repository
fix containerrepair not use metadata for itemstacks . close # 3511
added a boolean flag for local repository handling in LegacyLocalRepositoryManager to ensure correct artifact paths are returned based on the local repository type
[ flink - 11713 ] [ runtime ] check if local taskmanager be initialize before start it .
added deployment options for artifact resolution in AbstractArtifactResolutionException . java to enhance the flexibility of artifact resolution options for better user experience
updated temporal path handling in UploadFileOperation and added a new method in FileStorageUtils for managing temporary files to improve file management and ensure proper context
refactor FeedEntryStatusDAO to use Apache Commons Collections for imports and add a method for fetching FeedEntryStatus by entries to improve code
added thread execution handling in ContextImpl and refactored deployment options in BlockedThreadCheckerTest to improve thread management and enhance test coverage for blocking
updated the ` FormatterConverter ` methods to accept a ` String ` parameter and added a null check for the ` convertOrNull ` method to ensure that
added SDK version checks to load contact files in LoadContactsTask . java to ensure compatibility with devices running Android O and above
replaced setter methods for remote address and hostname with direct assignment to instance variables to simplify code and improve readability by eliminating redundant setter methods
added a null check for realClass in Robolectric . java to ensure that the class is annotated with @ Implements to prevent runtime errors
add tlsmutualauthenticationrequired option to tlssslcontextfactory to allow tlsmutualauthenticationcertificatechain to be configure
updated charset imports and added SSL exception handling in BasicHttpTest . java to ensure proper handling of SSL - related exceptions during HTTP requests
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to provide access to their respective consumer and producer functionalities
simplified conditional structure in PageChangeListener . java and added imports in FrameRenderer . java to improve code readability and maintainability
updated warning message from " email " to " SMS " in CommunicationsManager . java to clarify the absence of email and SMS settings
# 119 - add ebean . draftqueryoptimise ( query < t > query ) to optimize query result
added error handling for IO exceptions in MultipartBody . java to improve robustness against resource temporarily unavailable scenarios
reformatted code for improved readability to enhance code clarity and maintainability
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
fix attach file : use the correct initial directory
added LoadOptionsBuilder and updated SchemaCrawlerOptionsBuilder usage in AccessTest . java to enhance loading options for schema crawling
updated package structure and added a new test method for loading legacy libraries to improve code organization and enhance test coverage for library loading functionality
replace exception throwing with returning null for unknown operation names to simplify error handling by returning null instead of throwing an exception
added methods to set the name , enabled , and expanded properties from the prototype to ensure the project properties are correctly initialized based on the prototype ' s
refactor connection handling in AbstractDbmsOperationHandler to use a try - with - resources statement to ensure proper resource management and prevent potential memory leak
refactor DataStreamJob class to improve code structure to enhance maintainability and readability of the code
updated error handling in TestContentProvider to use try - with - resources for FileOutputStream to improve resource management and prevent potential resource leaks
camel - 14284 : camel - cxf should use classhelper to get real class name for service class .
fix ( http ) : add support for h2 - 14 http / 2
refactor method and variable handling in LambdaToMethod and ClassFileVisitor classes to improve clarity and functionality of symbol management in method references
tiny bug fix in the copious parsing of the barnq word . this fixes some of the problem report by john hewson
increased the timeout duration for copying URLs from 5000ms to 60000ms to allow for a longer time for the cache file to be downloaded
added a method to set the Slop value in the QueryParser to ensure the correct Slop value is used for query parsing
updated sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to allow more time for the long press event to trigger
[ flink - 20536 ] [ connector / flume ] reduce the default port of flume and hadoop timeline sink to 6188
fix ( screengrabber ) : use scheduler . scheduleparallel ( ) to schedule game in parallel
updated visibility logic in EditShareFragment to include available edit options to ensure that the compound view is only visible when editing options are available
updated progress calculation in DepthController . java to ensure progress does not exceed a minimum value of 1.0 f
[ java ] remove unused packetreceived ( ) method from session .
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction to improve error handling
added null checks for the service in ` SamlIdPEntityIdAuthenticationServiceSelectionStrategy ` and ` SamlIdPMetadataUIAction ` classes
added ` hidden = true ` to ` arity ` and ` description ` in ` PantheonCommand . java ` to ensure that account level
added doNotInstrumentClass for " androidx . room . CoroutinesRoom $ Companion " to exclude instrumentation for the Coroutines
added logging for context class loader retrieval in NegotiateAuthentication to improve error handling and ensure thread safety during the authentication process
removed the setInitScript method from InitializingDataSourceFactoryBean to simplify the code and improve maintainability
camel - 14284 : camel - http : / / issues . apache . org / jira / browse / camel - jbang -
refactor AuthenticationProvider and TargetObject classes for improved clarity to enhance code maintainability and readability
added tag handling in PdfDocument . java for image processing to improve rendering of tagged images in the PDF
log4j2 - 1342 add test case for patternselector
simonstewart : do n ' t throw unsupportedoperationexception when run the selenium test in hta mode .
added a new ` MwThankPostResponse ` class and updated the ` thank ` method signature in ` Service . java ` to enhance functionality
added a new interface ` SocketBased ` and updated ` ChannelEndPoint ` and ` SslConnection ` to utilize it to enhance socket management capabilities
removed redundant initialization of RevokingStore and adjusted the max size calculation to streamline the code for better readability and maintainability
add test for implicit join of call and timestamps in hql collection
added line breaks to expect and actual string comparisons in NonVisualRegressionTest to ensure consistent line endings across different operating systems
refactor IndexWriter methods to improve commit handling and add file assertions to enhance reference management and ensure proper cleanup of committed files
added @ final annotation to methods in BaseError . java to allow method overriding by subclass
added validation for consumer resource percentage in ConsumeUserResourcePercentActuator to ensure the value is within valid range to prevent runtime errors
added a check for the old login status in the AuthenticatorActivity to ensure that the legacy login display only occurs when a specific resource is available
[ hotfix ] fix checkstyle violation in streamnetworkthroughputbenchmarktests
refactored the response page setting logic in EditTeamPage . java to improve code clarity and maintainability
updated debug log message to include exception details to improve clarity of error reporting during plugin initialization
added a try - finally block around the shutdown of the server socket channel to ensure proper resource management and prevent potential memory leaks
updated Rocket class to improve functionality to enhance performance and maintainability of the rocket rendering process
added a private method ` createDynPartSpec ` to encapsulate the logic for creating dynamic partition specifications in a separate method to improve code read
ninja : remove round _ half _ up _ factor from stringtemplate and use it instead
added visitDirectory method to JarDirectoryStep and its implementations in DirectoryTraversal to enhance directory traversal capabilities and prevent duplicate entries
added a new file ` JWKSetEditor . java ` that implements ` PropertyEditorSupport ` for setting JWK sets to enable the use of J
refactor term handling in OrdsBlockTreeTermsWriter and BlockTreeTermsWriter to use a single PendingTerm instance to improve code clarity
include parameter klass in partial evaluation when trace throwable .
changed the default value of fetcher . threads . per . host . by . ip from true to false to disable the fetcher threads per host
updated the condition for handling query timeout in StatementUtil . java to improve clarity and correctness of timeout comparison logic
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher , and modified the generated path accordingly to enable dynamic configuration hashing based on
refactor ReplicaPosition class to improve code organization to enhance maintainability and readability of the code
server : fix the initial delay for network usage stats update task ( # 5386 )
replaced a lambda expression with a constant FINAL _ FRAME in multiple classes to improve code readability and maintainability by centralizing interpolator logic
updated swipe length calculation in Background . java to improve UI responsiveness by adjusting the height based on display density
added a new module - info . java file and updated module dependencies in several Java files to improve module structure and ensure proper dependency management
updated JsonType and JsonTest to use static constants for variable names and replaced string literals with constants to improve code readability and maintainability by
removed unnecessary duplicate lines in ResourceResolverBean . java to improve code readability and maintainability
[ hotfix ] [ runtime ] remove unnecessary use of optional in checkpointingoptions
refactor ` reportInnerClassReferences ` method to use ` Element ` instead of ` TypeElement ` and add a new ` visitPackage ` method to
updated command string construction in TimestampCheck . java to include additional options to ensure proper formatting of configuration options
replaced FluentIterable with Java Streams for processing files in ChromeTraceBuildListenerTest to improve code readability and maintainability by using modern Java features
fix ( core ) : allow register service only in jvm ( # 10265 )
added handling for security OTR mode in SettingsManager and updated OTRManager methods to ensure proper session termination based on the security OTR mode
added outline size and transparency properties to NodeLabelRenderer to enhance visual representation of node labels in the rendering process
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated the boolean value from false to true in Win32FontManager . java to enhance the font management functionality
added null check and cursor setting in TreeVisitor to prevent potential NullPointerException when v is null
fix jdtbatchcompiler error handling policy when no classpath be present
added contentAlignmentPoint and textAnchor properties with their respective getters and setters in LabelBlock . java and LabelBlockTests . java to enhance
refactor methods in Class and Parameter classes to improve code readability and maintainability
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future feature additions
changed the type of ` isLoopback ` from ` boolean ` to ` Boolean ` and refactored its initialization logic to improve null safety and
updated ` fromRfc1123DateString ` method to accept a ` Locale ` parameter to ensure consistent date formatting across different locales
fix flaky test in ` filedownloadviaproxytest ` by specify file extension
nifi - 10266 : added property to output a flowfile even if no hit be present
fix the calculation of aggregation ratio in the usage of the volume ( # 4536 )
[ java ] add try / catch around switch statement in election .
close streamfilesp even when close ( ) be call
refactored widget handling logic in PageChangeListener . java to streamline visibility and visibility checks to improve code readability and maintainability by reducing redundancy
added isWriteProtected method to Workbook , FileSharingRecord , and HSSFWorkbook classes , and improved username handling in RecordInputStream and RecordInputStream
added a try - catch block around the unregisterInvalidatedSessions ( ) method call to handle potential exceptions gracefully to improve error handling and logging
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
updated the error message from " reachable = false " to " not reachable " in the updateStatus method to clarify that the bridge is not reachable
add a flag to the fmlclienthandler to allow the client to stop loading .
updated return statements to use ` Core . bundle . getOrNull ( " unit . millions " ) ` instead of ` Core . bundle . mil
refactor MessagePackParser to use a switch statement for handling BYTES and STRING types to improve code readability and maintainability by consolidating
added parameterized test for query parsing using reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to improve test coverage for
added tests for serialization and deserialization of a map in MapTest . java to ensure proper functionality of JSON serialization and deserialization of nested maps
added offset check to geometryutils . geometry2 ( ) to avoid offset problem .
removed unnecessary type casting for EditText and ImageView in FileDisplayActivity and added sorting order functionality in ReceiveExternalFilesActivity to simplify code and improve
do n ' t exit the process if there be no test plan
updated method references from " dbmsName " , " schemaName " , and " operationHandler " to " getDbmsName " , "
updated the argument identification logic in the parser to handle both strict and non - strict identifier types to improve robustness by ensuring argIdent is only added
do n ' t use a hardcoded ssl - http protocol in jettyhttpcomponent9 .
cloudstack - 1076 : set displayvolume to true by default
modified the ` version ` method to accept a boolean parameter and updated message retrieval logic to improve clarity in version handling and ensure consistent message retrieval based on
updated conditions for retrieving the change log parameters and added a check for global change logs to improve the logic for determining the correct change log parameter
changed log level from warn to debug in JtaTransactionManager . java to reduce log verbosity for non - critical issues
skip basicformatterimpl test due to dialect bug in setoperationtest
reorganized the order of socket timeout and handshake in SSL socket handling to improve code readability and maintainability by consolidating multiple calls
updated action bar size calculation in multiple fragments to account for the presence of a popup to ensure action bar is not displayed when a popup is present
change the default value of the ` CHA ` option from ` false ` to ` true ` and mark the ` CHA ` class as `
http : / / issues . apache . org / jira / browse / amq - 4237 - log thread context class loader in debug message
refactor test methods in JodaTimeRangeRandomizersTest to use AssertJ assertions instead of custom data providers to improve code readability and maintain
refactor WebDescriptor to conditionally redirect XML resource paths based on Servlet version to ensure compatibility with different servlet versions and improve resource redirection
fix : add isnodeready ( ) method and add node readiness check .
replaced liveEndpoints with handler . endpoints in StorageProxy . java to ensure correct endpoint retrieval from the handler ' s endpoints
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
update RPC _ VERSION from 1 to 2 in DataRpcConfig and UserRpcConfig to ensure compatibility with the latest RPC features and improvements
added a security check for System . getSecurityManager ( ) in ObjectStreamClass . java and ObjectStreamField . java to ensure that package access checks are only
updated method visibility of ` UGSCommandCount ` and modified ` XLCDCommunicator . java ` to private to improve encapsulation
refactor DefaultMetricsTagProvider to use a HashMap for tags instead of an ImmutableMap to improve code readability and maintainability by leveraging a
simonstewart : move mockbrowsertest to the end of the suite so that it can be run in the same jvm .
change default logging level from OFF to ERROR in Launcher . java to improve error handling by providing more relevant logging levels
changed variable declarations from non - final to final in IconNormalizer . java to enforce immutability and improve code readability
added a boolean flag ` firstCallPrepareDo ` and modified the method invocation logic to conditionally include the " prepare " prefix based on its value
refactor workspace and overview mode logic in Launcher . java to improve focus handling and simplify method calls to enhance code readability and maintainability by
make auth and authstore singleton instead of eager - singleton
do n ' t render invisible association in graphical data model if ignoreinvisibleassociations be true .
server : fix npe when remove the private ip from the storage
updated the relative URL formatting in ProfileServlet . java and added information on the Profiler Home Page to provide clearer guidance on the profiler '
add support for ` ` required ' ' property with @ schema ( required = true )
renamed configuration classes from ` CasCoreWatchConfiguration ` and ` CasCoreEnvironmentBootstrapConfiguration ` to ` CasConfigurationWatchAutoConfiguration `
refactor FeatureFlags class for improved clarity to enhance maintainability and readability of the code
updated UUID and unique string formatting in ConfigStore . java and added a new test for unique ID mapping in CommonSetup . java to ensure consistent and
added picture handling in TimeLineCursorAdapter and TimelineArrayAdapter to ensure that the image is properly set based on the picture URL
updated compaction logic for insert - only tables in HiveConf . java to clarify the functionality of compaction on full CRUD tables
added a null check for storage path in the condition of mWaitingToSend to ensure that the sending process handles cases where the storage path is not
updated resize threshold checks in multiple VectorMapJoinFastBytesHashMap , VectorMapJoinFastBytesHashHashMap , and TestVectorMapJoinFastBytesHash
refactor LDAPConnectionService to improve connection handling to enhance performance and maintainability of LDAP connections
deprecate required = true in aggregatedefinition to make it easy to use .
removed debug tracing logs from TouchInteractionService , RecentsAnimationDeviceState , and TestProtocol to streamline debugging and improve code clarity
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoftAssertions . java to
updated assertions in TestMultiSearcher to compare lengths of hits2 and hits3 to ensure accuracy of search results in the multi - search functionality
added a new file ` LucenePackage . java ` containing a private constructor and a static method to retrieve the package to provide a centralized way to
corrected the calculation of sizeInBytes in RAMDirectory . java to ensure accurate tracking of bytes by subtracting the existing size
updated calculations for aggregation evaluator size and made several fields final in BloomKFilter and BloomKFilter classes to improve performance and ensure immutability of
add a null check for drawertoggle in mainactivity to prevent a nullpointerexception
added @ SuppressWarnings ( " unused " ) annotation to convertToAuthentication method to suppress warnings related to unused Subject parameters
[ gr - 26458 ] fix for jdk . internal . loader . classloaders . platformclassloader not be use when scan the classpath
fix msb export format test when use corporate mode
added a new method ` cancelCoreRecoveries ` to handle core recovery cancellations based on ZooKeeper awareness to improve recovery management for Solr core states
updated time measurements to use a new method and added time difference calculation to improve accuracy in time calculations and enhance debugging capabilities
removed debug print statements and simplified the condition for clicking the found element to streamline the code and improve readability by eliminating unnecessary checks
[ flink - 20536 ] [ table - common ] improve wal - wal - wal - builder documentation
added security - related fields and modified the SecurityExpressionRoot initialization in SecurityEvaluationContextExtension to enhance security context management by allowing dynamic configuration of trust resolver
added a check to set exponentSize based on primeSize to ensure exponentSize defaults to primeSize when it is zero
replaced direct usage of ` ocLocalFolder . getSavePath ( ) ` with ` FileStorageUtils . getUsableSpace ( ) `
modified the DistinctSqlAggregation to accumulate values from ` other . delegate ` and added a new test for the combine method in ` DistinctSql
added a test for executing post login activities for successful authentication in UserService to ensure that the user service correctly executes login activities for successful authentication
make extractorspanishstrippedverb package - private to avoid static state
refactor CharArraySet to simplify hash code calculation and add a new test method for object contains to simplify the code logic and improve readability by
fix check for unsupported audio / video track type in muxerwrapper .
updated ` JsBundleGenrule ` to use ` AndroidPackageable ` instead of ` JsBundleAndroid ` and modified related test cases to
set character encoding to UTF - 8 and refactor string handling in StringDictionary to improve compatibility with UTF - 8 characters in request processing
change case name from " Logical Analyzer " to " Logic Analyzer " and update related card references to improve clarity and maintainability of the
added instanceClassName and instanceClass variables and modified vector instantiation logic to improve instance handling and prevent unnecessary vector instantiation
removed syncMetaLeader ( ) method from CMManager . java to streamline the code by eliminating unnecessary synchronization
update contribution question to return ` ` no response ' ' instead of ` ` response ' '
added TestLoggingExtension to DiagramRendererTest to enable logging functionality for better debugging and monitoring
no effective change - add support for map underscore to camel case
added support for the VIOMI Internet Electric Water Heater 1A ( 60L ) device in MiIoDevices . java to enhance compatibility with
replaced multiple calls to ` getSslSessionData ( ) . getCerts ( ) ` and ` getSslSessionData ( ) ` with a
added a new file ` CreateNewSpreadsheet . java ` for creating Excel spreadsheets to demonstrate the functionality of creating new spreadsheets in Apache P
polish ` ` change spring . cache . redis . time - to - live ' ' property from ` ` duration ' ' to ` ` time -
updated content URIs in LauncherBackupHelper , LauncherModel , and ShortcutInfo to use CONTENT _ URI _ NO _ NOTIFICATION to
updated wiremock version from 2.14 . 0 to 2.17 . 2 in SwaggerResolveTest . java to ensure compatibility with the latest release of
replaced ` lucidaFontName ` synchronization with ` this ` synchronization in ` SunFontManager . java ` to ensure thread safety by using the
added a condition to check if the character ' < ' is equal to 1 before proceeding with the 1 - based logic to ensure proper handling of
updated string formatting in the workspace scroll format method to improve code readability and maintainability
added import for Scope and displayed a message when no validation errors are found to enhance user experience by providing feedback when validation errors are found
added web resource configuration in IntegrationTestContextLoader and updated imports in IntegrationTestContextLoader . java to improve the handling of web application contexts
updated method calls from ` getResponderAt ` to ` getComponentAt ` and added pointer event handling in multiple classes to ensure proper scrolling behavior and improve
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new class ` ClientStat ` and updated related classes to use ` String ` ID instead of ` Long ` to improve the data type of
updated the expression replacement logic in CellContentConverter . java to ensure proper handling of newline characters in expressions
add newlines to the regex so that the test can pass on window .
mondrian : fix a typo in the javadoc of mondrianproperties . java .
added error handling and stack trace printing in ProcessTools . java and modified launcher checks in CustomLauncherTest . java to enhance debugging capabilities and ensure proper
remove tumblr ripper test that do n ' t pass
added a condition to check if the symbol has a slot for the store type before converting it to the store type to ensure that the conversion only occurs
[ java ] initialize time _ unset extractor wrapper when load load from container .
updated imports and refactored IndexWriter initialization in BaseLockFactoryTestCase . java to improve code readability and ensure consistent handling of character encoding
added support for dynamic service loader in tikaconfig and add a dummyparser .
added package - info validation and updated import statements in DocLint . java and DocLintTester . java to improve code clarity and ensure proper handling of
added IMPORT _ CMD constant and modified conditional checks in DataImportHandler . java and DataImporter . java to enhance functionality for importing data
add a test to ensure that inner classes are not modified if the ignoreDefinition flag is set to true to ensure that the code does not modify inner
removed unused import of android . util . Log in JettyService . java to clean up the code and reduce unnecessary dependencies
updated the checkItemPlacement method to include a workspaceScreens parameter and adjusted related logic to enhance item placement checks based on workspace screens
simonstewart : add a system . exit ( 0 ) for the quit switch
fix nullpointerexception in llrealtimesegmentdatamanager
added a check for Windows OS and filtered the display name if it contains " Teredo " to ensure proper handling of Teredo network interfaces on Windows
do n ' t show error dialog when add contact without a protocol provider
updated the registration of the USER _ DETAILS _ SERVICE _ FACTORY bean to use a bean definition instead of a bean definition to improve flexibility
updated the drawBitmap method to use null bounds instead of left and top values to simplify the drawing process and improve rendering accuracy
fix typo in protocol decoder
changed method visibility from public to protected for getFontPath and getPlatformFontPath in SunFontManager and X11FontManager classes to enhance encap
mark multiple instances of EnhancedRandom as deprecated to indicate that these elements are outdated and should not be used in new code
( chore ) camel - aws2 - map - client : fix broken test due to race condition
add option to keep empty sentence in the maxenttagger
updated error handling in MavenArtifactFetcher to return a boolean indicating success or failure to improve error reporting and provide clearer error messages when creating artifact sub
refactor ` ReusableCompiler ` and ` JavaLanguageServer ` to use ` JavaCompilerService . NO _ MODULE _ COMPILER `
added a null check for the answer variable in DirectAgentAttache . java to ensure that the resource returned a non - null answer is properly handled
changed the ` sendEmail ` method to throw a ` MessagingException ` to improve error handling and logging for email sending failures
add miss api for obsidian pipe , and fix a couple of null pointer exception
updated the ` getDateMathParser ` method to accept a ` Locale ` parameter instead of using a default locale to enhance flexibility in parsing math based on
added a boolean flag ` includeDecals ` and its getter and setter methods in ` StorageOptions ` , and implemented a checkbox in ` Storage
updated the generateDocumentation method to include a null parameter in Liquibase . java and added a suppression warning in LiquibaseTest . java
updated performance logging logic in HiveProtoLoggingHook and refactored test methods in TestHiveProtoLoggingHook to improve performance tracking and enhance test
corrected a typo in the log message from " Begining " to " Beginning " to improve clarity and consistency in log messages
updated the class file version check in ignoreRecordAttribute . java to ensure compatibility with the latest features and features of the application
added a new test class ` LdapPasswordAuthenticationTest ` to validate LDAP password authentication functionality to ensure proper handling and retrieval of user passwords from LDAP
replaced ` OrcInputFormat ` import with ` BasicStatsNoJobTask ` import and updated conditional check in ` TaskCompiler . java ` to improve
fix a nullpointerexception in the flutter reload manager ( # 4434 )
refactor methods in VisibleAdvance class for improved readability to enhance maintainability and ease of understanding for future developers
fix : re - start informer without reconnecting
added support for dynamic number columns in EdgeDataTable and NodeDataTable to ensure proper handling of dynamic number columns in data processing
refactor ResolvedGroupArtifactVersion to use ` Objects . requireNonNull ` for null checks to improve code robustness by ensuring required parameters are not null
updated the API assignment to handle null values for ` apiInfo ` to ensure that ` apiInfo ` is always available when ` apiInfo ` is
refactor HeadersConfigurer and CacheControlHeadersWriter classes for improved header management to enhance code maintainability and readability
added light function and disposal methods for textures and shaders in FlameRenderer . java and PhotoPanel . java to improve memory management and debugging
fix ( core ) : add a menu item to the end of anInsnlist editor
updated condition checks in CSSParser to ensure index bounds before processing characters to improve robustness and prevent index out - of - bounds errors
added a boolean property to control the default look and feel of the JFrame or JDialog based on application properties to enhance the user interface by allowing customization
removed unnecessary ' this ' keyword from SQL query in HostRoleCommandDAO . java to simplify SQL query and improve code readability
updated function names and return values in LJ1200Message . java to use translator test constants to improve clarity and maintainability of the code by
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection logic for better user experience
changed the type of ` mHostDb ` from ` HostDatabase ` to ` ColorStorage ` to enable color storage functionality in the application
refactor String class for improved readability to enhance maintainability and ease of understanding for future developers
removed unnecessary logging and serializer imports from multiple Java files to improve code cleanliness and reduce unnecessary dependencies
added a method to retrieve global entries from the map to enhance functionality by allowing retrieval of global entries from the map
added multiple assertions to the ` sendcoin ` method in ` MultiSign34 . java ` to ensure that the ` sendcoin ` method functions
test : migrate cufiltertest to junit 5 ( # 4558 )
use system . getproperty ( ` ` path . separator ' ' ) instead of a hardcoded string
changed the access modifier of the augmentSuccessViewModelObjects method from static to instance - level to allow external access to the augmentSuccessViewModelObjects method for
hhh - 12497 add a test to verify that the field be present in the metamodel .
removed unnecessary configuration parameters from Outlink instantiation across multiple classes to simplify code and improve readability by eliminating unnecessary parameters
removed the ` LexicalContext ` parameter from several methods across multiple files to simplify method signatures and improve code readability
added imports and modified return statement in UseLambdaForFunctionalInterface . java to include modifiers and remove unused imports to improve code clarity and
removed the appendClassSelector method call from the addClassSelector method in TestNGAntTask . java to simplify the file set addition process
removed unsupported check for Aggregate input in HiveCardinalityPreservingJoinOptimization . java to simplify the logic for handling aggregate inputs
fix race condition in registryevent # getmappings ( # 7636 )
reordered assignments for x3 and y3 in Intersector . java to improve code readability and maintainability
added default methods for ` sbeDecodedLength ` , ` sbeLimit ` , and ` sbeLimit ` in ` MessageDecoderF
use current elasticsearch version in testcontainertest . testclientclusterhealth ( )
fix potential memory leak in workreceiver
added versionId and clusterName fields to ClusterDefinition and updated related methods to handle version identification to enhance cluster management and support versioning in the application
camel - 14284 : camel - ftp should use source code generate configurer to avoid reflection configuration .
[ zeppelin - 5139 ] fix error message when dependency can not be load in zeppelin .
added a conditional check to ensure reserved local variables are reserved for DCEedVars to ensure that local variables are not reserved for DCEedVars
added a check to return early if targetCertConstraints ' s basic constraints are invalid and created a new class for building basic constraints to ensure that the
added a method to initialize JDBC connection after the first connection to ensure that values with the same time will be upserted after the database connection is established
added a maximum message size limit for WebSocket compression and implemented buffer size validation in AbstractWebSocketConnection to ensure that the request buffer size does not exceed a
lucene - 1456 : remove undeleteall and rollbackundeleteall variable in segmentreader , so that we do n ' t have to clear
added null check for scopes in ClientRegistration . java and updated test cases in ClientRegistrationTests . java to improve robustness by preventing NullPointerExceptions
added null check for orderBy before adding parameters in CartesianProductStream . java to avoid potential NullPointerException when orderBy is null
[ hotfix ] [ test ] use hamcrest assertion instead of junit assertion
server : do n ' t run vm snapshot if the vm be in backedup state
added logging of the initialization log4j message in HiveServer2 . java to improve traceability and debugging of the initialization process
added a check for ` tasks . size ( ) ` before accessing the first element of ` tasks ` to avoid potential ` NoSuchElementException ` when
return success status of deletepubkeynode and deletepubkeyslistnode method
fixed nullpointerexception in relationentity . getid ( ) and relationentity . getfromtype ( )
added checks for empty result strings in Code128Reader and Code39Reader , and implemented null checks in FalsePositivesBlackBoxTestCase to ensure that
replaced TreeSet with LinkedHashSet for storing CipherSuites to maintain the order of cipher suites
added a method to check for control characters and refactored the character validation logic in the Escaper class to improve code readability and maintainability
updated SqlProvider to handle CharSequence return types and modified SqlProviderTest to use StringBuilder for SQL query handling to improve type safety and simplify SQL generation
updated import statements and added null checks for aliasChildren in InternalMNode . java to ensure proper handling of null values and prevent potential NullPointerExceptions
added a method ` getLayoutTransitionOffsetForPage ` to retrieve the layout transition offset for a given page to improve accuracy of page transition offsets in the
javatemplate : do n ' t auto - format source file when there be no style .
added setAccessible ( true ) to the method in WidgetInterceptor . java to ensure the method is accessible for use in other classes
added a condition to set a literal initializer for the " database . server . id " field in ConnectorConfigGenerator . java to ensure that the field
updated the version of the Mozilla browser from " Intel Mac OS X 10.5 . 0 " to " Win64 " to ensure compatibility with the
added a menu item to browse the server ' s URL in the popup to enhance user experience by providing a convenient way to access the server ' s
refactor value handling in HandleGetter . java to improve type reference management to enhance clarity and maintainability of the code
modified the handling of the Record initialization to handle ArrayIndexOutOfBoundsException to improve robustness by preventing application crashes due to ArrayIndexOutOfBoundsException
[ hotfix ] [ runtime ] improve logging in checkpointio and queue
call loadbattlepassmanager before avatar postload to avoid null pointer
updated SSHD version in ` PortForwardingContainer . java ` and added additional options for agent forwarding and agent forwarding to ensure compatibility with
added a new long array and forced garbage collection in ThresholdTest . java to ensure proper memory management and prevent memory leaks
updated debug logging logic in StdErrLog and added new test cases in StdErrLogTest to ensure proper logging behavior for debugging purposes
fixed - rremoteservice . getremoteserivce ( ) and rremoteservice . getremoteserivce ( ) method be
added functionality to set the selection state of a RadioButton and CheckBox in the MultiButton class to enhance user interaction by allowing multiple selection options for the
replaced UpNextActivity with NextUpActivity in CustomPlaybackOverlayFragment . java to align with the new navigation functionality
[ issue # 6071 ] fix the fenced initialization of replicamanager in brokercontroller ( # 6071 )
refactor RedisReactiveHealthIndicator to use reactiveRedisConnection and add connection closing logic to improve resource management and ensure Redis connection is properly closed
refactor background color handling in ProgramGridCell and Utils classes to utilize a new utility method for retrieving theme colors to improve code maintainability and
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and
removed redundant registration of type adapters for various classes in ToolingApiLauncher to streamline the code and improve maintainability by reducing redundancy
removed unnecessary lines from TestPayloadCheckQuery . java to improve code readability and maintainability
refactored the ` putChar ` method in ` ConsoleReader ` and added a new test method in ` ConsoleReaderTest ` to enhance functionality
added user identification and command execution details to the BaseCommand class to enhance debugging capabilities by providing context for user interactions
move modulesupport to org . graalvm . compiler . api . test instead of org . graalvm . compiler . test
[ hotfix ] remove unused slotsharinggroup constructor
updated condition for creating ` VersionSpecific ` in ` StreamExInternals ` and modified ` hasDropWhile ` logic in ` StreamExTest `
updated Texture and Music files to use " sys . png " and " wheel . ogg " instead of " wheel . ogg " and "
reordered the registration and unregistration of the system dialog receiver to improve code readability and maintainability
updated import statement formatting in HostsRemovedEvent . java to improve code readability and maintain consistency
added support for client introspection in ClientDetailsEntity and updated related logic in IntrospectionEndpoint and ChainedTokenGranter to enhance token introspection
encode session attribute name , name , and content in the report to prevent potential issues with special characters in output
added link tags for PhrasePrefixQuery and SpanQuery in Query . java to enhance the search functionality by providing additional query documentation
replace size ( ) = = 0 with isempty ( ) in commentsinserter and commentsparser
updated the ` isLiteralString ` and ` isThisElementAnOperandInABinaryStringConcatenation ` methods to use ` TypeUtils `
updated method signatures in AbstractAssert , Assert , DateAssert , and Descriptable classes to use Object instead of A to improve type flexibility and reduce
updated the ` ThrowingFunction ` interface to use a generic type parameter and modified related imports and method signatures to improve type safety and clarity in
refactor ` getUploaderBehaviour ` and ` setUploaderBehaviour ` methods in ` AppPreferences ` , ` PreferenceManager ` , and ` Upload
fix ( typefactory ) : try to initialize final field in constructor
updated BitmapDrawable initialization to use Robolectric ' s newInstanceOf method to improve compatibility with Robolectric for bitmap handling
corrected a typo in the method name from " isValidSEnding " to " isValidEnEnding " and added a char parameter to
updated PageMarkerResources from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to reflect the current state of the
added ` reinvocations ` variable and updated log messages for backup completion tracking to track and manage the number of reinvocations for better debugging
updated calculations for topPadding in DefaultLookAndFeel . java to use innerHeight instead of height to ensure correct positioning of elements based on their inner dimensions
added a break statement in the Recognize . java file to ensure proper termination handling in the application
added PreferenceManager2 to manage home screen locking to enhance user experience by providing tactile feedback when accessing home screen settings
updated ExcelBatchReader to handle different cell types for text formulas and added a new test for text formulas in TestExcelFormat to ensure correct
fixed bug 1172424 - immutablefield no long report assignment in anonymous inner class .
added a private String field ` userAgent ` in ` CommaFeedConfiguration ` and updated the user agent assignment in ` HttpGetter ` to allow dynamic
added miss required = true to @ xmlattribute in avro - avro
change log level from info to debug for file not found message to reduce log verbosity and focus on sensitive information
rename the QueueTest class to QueuedPipeTest to clarify the purpose of the test class
updated the version check logic in BukkitMain . java to use OfflinePlayer ' s getUniqueID method instead of PS to ensure compatibility with the
handle file not find exception gracefully in defaultroutescollector
added support for vertex color in pshape3d ( fixes # 422 )
updated the ` printForeignKeys ` and ` printForeignKeys ` methods to include a new parameter ` isPkColumnFiltered ` and modified related logic
removed the use of Shadow . extract and directly retrieved values from the matrix in ShadowMotionEvent . java to simplify the code and eliminate unnecessary dependency on
changed the package declaration of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck . parser .
removed unnecessary code and simplified class handling in GroovyEngine . java to improve code readability and maintainability by eliminating unnecessary complexity
add hawtio branding plugin support ( # 119 )
removed redundant print statement in NativeCodeGenerator . java to streamline output for better readability and performance
replaced calls to updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) in FlightConfiguration . java to improve code clarity and
added unit test for expected exceptions in ThrowableAssert _ hasCause _ Test . java to ensure proper handling of NullPointerException in tests
removed unused variables flattenName and packName from AutomaticDependencies . java to streamline code by eliminating unnecessary variables
fix the issue that we do n ' t have the right default scope
danielwagnerhall : add a couple of test for firefox to be able to set the profile in the firefoxdriver
camel - 14284 : camel - jbang - add route . getdescription ( ) and route . getdescription ( ) to make it
refactor JavacTreeMaker to improve code structure to enhance maintainability and readability of the code
added a line to set the weight of an edge in ImporterCSV . java to ensure that the edge ' s weight is correctly set for processing
api : fix tariff cost calculation with current month
updated SQL queries in DatabaseMetaData to include additional columns from pg _ attrdef to enhance data retrieval capabilities for improved database metadata management
added null check for binarized sentence in sentimentannotator
updated the ` toString ( ) ` method in ` User ` class to include additional information about the user to provide better visibility into the object ' s
updated message handling to check for null body in MessageHelper . java to improve robustness by preventing null pointer exceptions
[ hotfix ] [ runtime ] update taskdeploymentdescriptorfactory to use execution object instead of vertex
add group visibility check to roster . cansubscribe ( ) and group . isgroupvisible ( ) .
added reference to " maven . test . classpath " in AbstractJRubyMojo . java and removed unchecked suppression annotation in CucumberMojo .
updated method handle assertions and added user method tests in MethodHandlesTest and MethodHandlesImpl classes to ensure correct method handle handling and improve test coverage for
added imports for StopFilterFactory , NamedSPILoader , and HTMLStripCharFilterFactory in CommonGramsQueryFilterFactory , and LegacyHTML
updated width and height comparisons in URLImage . java from greater than to less than or equal to ensure images are processed correctly based on their dimensions
added a check to ensure classes do not end with " META - INF / " and updated related logic to ensure proper handling of non - META
added final modifiers to parameters in createImageToFileSystem and createImageToStorage methods and added background task scheduling for image downloads to enhance code clarity
updated assertions in StackWalkerTest to use a dynamic expected value based on version check to ensure tests reflect the correct number of expected values based on the
changed the access modifier of the addViewportJob method from protected to public to allow external access to the addViewportJob method
removed the ` partitions ` parameter from the ` buildFlow ` method and related code to simplify the method signature and eliminate unnecessary complexity
removed server configurations for restart and no system exit in TestDatabase . java to streamline server management and improve test reliability
added null and empty checks in NodePathsConvertOperator and improved error handling in SchemaQueryMergeOperator to enhance robustness by preventing potential NullPointerExceptions
add a callinfoframe . gettotalharvestingtime ( ) to display the harvest time of ice agent .
updated font drawing parameters for frame rate and active count in ParticleEditor . java to improve visual accuracy and performance of particle editing
added logic to update the " keyserver _ port " configuration in UpgradeCatalog240 . java and updated related tests in UpgradeCatalog2
added a transparent background color to the SvgViewerFactory class to improve visual consistency by allowing transparent backgrounds
removed the minSdk attribute from the @ Config annotation in ShadowKeyguardManagerTest and ShadowKeyguardManager to simplify the annotation usage and improve code
updated the method signature of ` containsExactly ` to use ` asList ( varargs ) ` instead of ` accumulate ( first , rest ) `
updated Bucket4jFilterFunctions to include refillGreedy configuration and improved HTTP status handling to enhance bandwidth management and ensure a valid key
added comments to GermanAnalyzer , GermanStemmer , and WordlistLoader classes to improve code readability and maintainability
added a ` postExecHooks ` parameter to the ` Generator ` constructor and modified the ` Optimizer ` , ` SemanticAnalyzer ` , and `
added exception handling for NoClassDefFoundError in REngine . java to ensure robust error management during class loading
refactor TraceWebFilter to use a new ` SpanAndScope ` class for span management to improve clarity and maintainability of span handling in the
updated exception handling to use a fallback message if the cause is null to improve robustness by preventing potential NullPointerException
updated SolrServerException constructor to include the base URL as a parameter to improve error handling by providing the base URL for better context
inverted the boolean value of the setLandscape method in HSSFPrintSetup . java to ensure correct behavior when setting landscape orientation
modify return statement to handle null values in JavaVoidObjectInspector to ensure proper null handling for null values
added validation to check for invalid argument names in ArgDesc . java to ensure proper error handling for invalid argument names
added background location functionality to AndroidLocationPlayServiceManager to manage location updates more efficiently based on the current activity state
changed the condition from checking for non - GL _ POINTS to checking for primitiveType to ensure correct handling of GL _ POINTS for
trufflestring : fix equal ( ) for zero length case .
added a call to setCommandList ( isCommandList ( ) ) in ComboBox . java to ensure the ComboBox uses the correct command list
nifi - 12626 : escape the filename in the tlshelper to avoid accidentally escape the filename .
updated Zookeeper command execution instructions to use localhost instead of hardcoded values to ensure compatibility with localhost configurations across different environments
updated equality checks in ` FirmwareUpdateProgressInfo ` , ` BridgeHandler ` , and ` WemoLightHandler ` to use ` getStatusDetail
added a conditional check for remoteGrpcStatus before posting a severe event to ensure that remote build failures are only sent when the remote grpc status is OK
refactor method signatures in XYItemRenderer and related classes for consistency to improve code readability and maintainability
added an entity ID to the tick ' s entity in the ForgeChunkManager to ensure that the entity ID is correctly associated with the tick
added a new method ` getErrorString ` to return error strings for various error codes in ` GLSurfaceViewAPI18 . java ` to improve error
do n ' t fail the info endpoint if the locale be not support .
updated server URI handling in RFC2616BaseTest . java to use " Host : 1234 1234 " instead of " serverURI " to ensure
added a call to ` addToHelperList ( ce ) ` in the Construction class to enhance the functionality of the Construction class
added handling for cases with a length of - 2 in GlyphLayout . java to ensure proper processing of escape sequences in the layout
added security permissions and refactored context class loader handling in Transport and TCPTransport classes to enhance security by ensuring proper context class loader operations
refactor file handling in ReceiveExternalFilesActivity to ensure proper synchronization and folder management to improve robustness by preventing null pointer exceptions during folder operations
fix npe in testng due to miss serviceloaderclassloader
removed debug logging statement in BarrowmanCalculator and modified deltap calculation in TubeCalc to simplify the code and improve readability by removing unnecessary
added checks for object type before adding columns in TimelineControllerImpl . java to ensure columns are only added when the object is an instance of Node
added a new method ` registerExtraComponents ` to the ` BaseBrokerStarter ` class to enable registration of additional components for the broker admin application
added a new test method ` testBug4658 ` to ` MultiCfQueryExecIT ` for bug 4658 to ensure that the query
change peergroup . candidates to use a linkedlist instead of an arraylist .
fix a crash when build a builder with more than 100 mj cycle .
added configuration for simple consensus snapshot trigger and refactored related classes to utilize a Supplier for better flexibility in managing consensus snapshot retries
updated multiple Java files with no functional changes to standardize code formatting and improve maintainability
add jmxhelper registration only if @ managedservice annotation be present
tika - 3030 : packageparser now detect non - unicode entry name ( e . g . GB18030 )
added a new file TestSplitThruPhiDivMod . java with methods to implement mathematical operations in a mathematical expression to demonstrate the use of mathematical
refactor template lookup methods to improve generic type handling to enhance flexibility and maintainability of the template registration process
updated the default value of ByteArrayOutputStream from 512 to 1028 to optimize memory usage for better performance
updated the excluded languages list in PlayerSettingsScreen . java to include additional Chinese and Persian symbols to enhance functionality by addressing potential issues with non - translated
refactor byte array creation and processing logic in TransferCompletionHandler . java to improve memory management and prevent overload of byte arrays
fixed checkstyle issue in util / sipcomm / chat / chatroom / chatroom / chatroom / chatroom / selectavatarmenu .
refactor error handling in SemanticAnalyzer to check for null source before throwing a SemanticException to improve robustness by preventing potential NullPointerException
added scaling logic to the aabb bounding box in SkeletonRenderer to ensure accurate rendering of the aabb based on the mesh ' s
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to provide a
added the @ ComponentScan annotation to SpringWebConfig . java to enable scanning of Spring web components in the application
removed the ` getAccount ( ) ` method from ` UserListItem ` to simplify the code by eliminating unnecessary method calls
added a test for the ` installPackage ` method in ` ShadowPackageManagerTest ` and modified ` ShadowPackageManager ` and ` ShadowApplicationPackageManager ` to
refactor AvailableSettings class to improve code organization to enhance maintainability and readability of the code
added TransactionCapsule fields and constructors to TransactionTrace . java to enhance transaction tracing capabilities for better data management
add client . shuffle . member . list property to allow client to disable random shuffle
replace Text with CrawlDatum in SegmentReader . java to enhance functionality by utilizing the new CrawlDatum class
refactor JsonDeserializer class to improve code readability to enhance maintainability and facilitate future modifications
refactor TsfileDBConfig and QueryProcessExecutor to use ThreadLocal for fetching fetch size instead of a hardcoded value to improve performance
corrected the method name from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to ensure proper functionality
removed unused import of ExecutionContext in TaskletStep . java to streamline dependencies and improve code clarity
initialized the title variable to an empty string to ensure a default value is provided for the title variable
added a null body handling in AsyncHttpClientCall and a corresponding test in AsyncHttpClientCallTest to ensure that no body is present in the response when
add io . micronaut . runtime . server . embeddedserverinstance interface to deprecate
use the osx . macadapter . macevents method to register mac event .
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related method calls to improve clarity and maintain
updated return statement in HandlerLibrary . java to return the result of toEnum method to ensure proper handling of enum types during enum conversion
fix ( pgconnection ) : set hideunprivilegedobjects to final
fix a bug in audiodatasourcestest where the batch file be not find .
added a check for Android Q to save video URLs to support saving Giphy video URLs for Android 11 compatibility
fix issue with variable deserializedObject in bytearraytype
refactor multiple classes related to authentication and service to improve code organization and maintainability
( chore ) camel - maven - plugin : use computeifabsent in mavenloggerfactory
deleted the DataOutputOutputStream class and updated imports in HbaseObjectWritableFor96Migration and HbaseObjectWritableFor96Migration to streamline code
updated Hive stats configuration to use a fixed value instead of a fixed value to ensure consistency in data retrieval across different environments
change log level from info to debug in MavenEnhancePlugin . java to reduce log verbosity during enhanced class processing
added a static method to get the default provider name and updated OpenSSLProvider and StandardNames to use this method to improve flexibility in determining the provider
added imports and processing for Captor annotations in MockitoBeforeTestNGMethod . java to enhance Mockito functionality by allowing Captor annotations to be processed
added error handling for missing test cases in TestSuiteBuilder to improve debugging and provide clearer feedback when no test cases are found
refactor GroovyAutoComplete and GroovyLanguage classes to improve prefix handling and import statements to enhance code readability and maintainability while ensuring proper handling of empty
bug fix : use graphhopperosm instead of graphhopper
simonstewart : allow the client to be configure with the base url
removed the ' final ' modifier from the ' mHideSysUiScrim ' variable and added preference handling for showing top shadows to allow dynamic
added cancellation logic and improved error handling in OkHttpCall to enhance call cancellation management and ensure proper cancellation of requests
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection logic for better user experience
changed the RequestMatcher interface to extend org . springframework . security . util . matcher . RequestMatcher to ensure compatibility with Spring Security ' s matcher
updated DeferredAttr . java to include IF and SYNCHRONIZED in DeferredAttr . java and added ImplicitLambdaConsideredForApp
[ j2kt ] fix j2kt integration test to be consistent with j2kt
added unit tests for ` applyQualifiers ` method to populate ` displayMetrics . density ` in ` DeviceConfigTest ` and ` DeviceConfig `
replaced IOException with RuntimeException in ExternalViewReaderTest and PinotDataTypeTest , and simplified Timestamp initialization in PluginClassLoader to improve error handling and simplify
updated the icon resource in RootCursor from a logo to a mipmap to improve visual consistency and clarity in the user interface
added errorBuilder . setContentText ( content ) to FileUploader . java to improve error handling by providing clearer error messages
updated the implementation of ConcurrentHashMap to improve thread safety and performance of concurrent operations
added methods to adapt user trades in the AbucoinsAdapters and the AbucoinsTradeService classes to enhance trading data handling and improve
updated method calls and logic in PlotSquared , Claim , Delete , and SetBlockFast _ 1 _ 8 classes to ensure proper handling of plot
simonstewart : fix the htmlunit driver to work with the ie driver that use proxy .
added handling for " VARBINARY " type in BlobType . java to ensure correct database data type is returned for VARBINARY types
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 15959 - fix issue
add synchronized block to ensure thread safety when accessing the simple type map
updated InboundBuffer to use ContextInternal and VertxThread instead of Context to improve context handling and ensure thread safety during buffer operations
updated the ` LdapTimeoutTest ` class to include a new method ` deadServerNoTimeout ` and modified the timeout handling in tests to improve timeout
corrected a typo in the usage message from " UniocdeData . txt " to " UnicodeData . txt " to ensure consistency in
camel - 14284 fix the unit test error of camel - cxf
fix doclint warning in javax . swing . plaf . synth
added support for a BoosterSet in ComponentAssemblySaver and modified the return value in BoosterSet to ensure proper handling of booster sets
added support for proxy authentication in java . net . auth . authenticator
removed redundant blockchain metric retrieval and adjusted timing calculation in multiple classes to streamline code and improve readability by eliminating redundant method calls
replaced an InternalError throw with a return statement in the method to simplify error handling by returning false instead of throwing an error
updated logging imports and logging statements in TestIPCUtil . java to use a static final Log instance to improve logging consistency and ensure consistent logging
replaced chunked transfer handling with direct HTTP requests in NettyRoutingFilter . java to simplify the code and improve request processing
added a call to clearAttributes ( ) in PatternTokenizer . java to improve code readability and maintainability
added a polling period parameter and improved error handling in the VerificationAfterDelayImpl and After classes to enhance flexibility and control over verification failures during verification
added authorization manager setting and compaction control in SemanticAnalyzer and related classes to enhance security by ensuring compaction is disabled during table masking operations
[ zeppelin - 5239 ] allow docker - image - docker - image to download jar file from the interpreter .
hbase - 14545 hbaseadmin # gettableregions should clean up after call metareader . gettableregions
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to known issues
updated the ` calcXBounds ` method in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes to improve
set contenthandler and errorhandler to null on parse failure
added release of headerBuffer and reset it to null in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` to verify the behavior of the ` UseDiamondOperator ` recipe
added null and closed checks before closing the result set to prevent potential NullPointerExceptions when the result set is closed
updated driver version from - 1 to 10 and - 6 in DerbyDatabase . java to ensure compatibility with the latest Derby database version
fixed bug 1223434 - usestringbufferlength no literal should not be emit when there be no literal .
removed error logging from RemoteSparkJobMonitor to streamline error handling by eliminating unnecessary logging
updated the ` createDb ( ) ` method to return a ` Connection ` object instead of void to ensure proper resource management by closing the database connection
refactor CreateCustomMetric , ListResources , and ListResourcesTest classes to improve code organization and maintainability
hbase - 25827 add option to decide whether to use off - peak compaction ( # 2599 )
added handling for " address " in BitstampDepositAddress and created DepositAddressJSONTest for JSON processing to enhance the functionality of BitstampDepositAddress
replace IllegalStateException with IllegalArgumentException in BufferingResponseListener to improve error handling by using the response ' s abort method instead of throwing an exception
updated the path handling in the linkInDeletedDirectories method to ensure the correct absolute path is used for link validation
refactor ` InvocationFinishedEvent ` to implement ` MetricsEvent ` instead of ` Event ` and update metric handling to use ` InvocationType ` instead
added a loop to check if the network interface supports multicast before returning it to ensure that only supported multicast interfaces are returned
updated the logic to check for valid checksums using a loop to improve code readability and maintainability
added a clone method to BufferedChecksumIndexInput that throws an UnsupportedOperationException to provide a placeholder for cloning functionality
replace Math . sqrt with radius - based calculations in Circle . java to improve accuracy of circle geometric calculations
updated frequency band assignment logic in P25Channel . java and added multiple @ Override annotations in P25ExplicitChannel . java to improve code clarity and
rename variables and methods in GestureDetector to improve clarity and consistency to enhance code readability and maintainability by using more descriptive variable names
disable replicate on write by default
added a ` lastFillTime ` parameter to the ` CryptoFacilitiesAuthenticated ` class and implemented date formatting in the ` Util ` class
added ` getDelegate ( ) ` methods to ` TraceCallable ` and ` TraceRunnable ` classes to provide access to the delegate of a callable and
updated error handling and synchronization logic in FileActivity and FileDisplayActivity to improve user feedback during file sharing operations
added quiche _ conn _ stream _ writable method and error handling in ForeignIncubatorQuicheConnection and JnaQuich
added a boolean parameter to the method call in JavascriptContext . java to ensure proper context handling during JavaScript execution
removed unnecessary alignment parameters from TableCell constructors in BaseTextFormattingHelper and TableCell classes to simplify code and improve readability by eliminating unnecessary parameters
added a new file ` TracingAutoConfiguration . java ` for tracing configuration to enable tracing functionality in the UAA application
added a paragraph to the start and second paragraph in Submissions . java to improve the structure of the paragraph structure for better organization
updated methods in ServerQueryExecutorV1Impl to use a list of queryable segment data managers and adjusted segment retrieval logic to enhance segment management and
refactor VertxBufferTest . java for improved readability to enhance maintainability and facilitate future updates
add test for extra hyphen submission chunk in hsmf
changed the access modifier of mContext from private to protected to allow subclasses to access the mContext variable
removed unused imports from ShowTablesOperation . java and ShowViewsOperation . java to clean up the code and improve maintainability
added a new exception class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` and ` MongoTemplate ` to use it to improve exception
[ hotfix ] fix checkstyle violation in jobcoordinatorservice
updated the ` bitsToHumanReadable ` method to replace the existing ` bitsToHumanReadable ` method with a new method ` bytesToHumanReadable
remove unnecessary check for tiered merges in TestUpgradeIndexMergePolicy and add a test method in TestMergeOnFlushMergePolicy to simplify code
added a check to return early if overview state is not enabled to prevent further processing when overview state is not enabled
updated error logging link in CpuNDArrayFactory . java to point to a new documentation page to improve clarity and context for users regarding CPU
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter and updated related method signatures to accept this new parameter to enhance flexibility in
added null checks for input parameters in FilterLeafReader and its constructor to ensure robust error handling by preventing NullPointerExceptions
added support for negative key size in jcecrmfencryptorbuilder
updated IOException message to include the original exception message and removed redundant constructors to improve error handling by providing more informative error messages
( chore ) camel - core : remove javax . inject usage from camel - core
updated the expected size from 9 to 10 in BundledDistributionTest . java and added new assertions in PostgreSQLTest . java to improve
[ hotfix ] [ runtime ] add pipeline . name option to streamexecutionenvironment
updated scaling logic in OverviewState to account for two - panel layouts to ensure correct scaling based on device profile dimensions
change the ice plain biome to use a populator tree instead of a vanilla one
removed the zone parameter from the getMaxTime and getMinTime methods in StorageUtils . java to simplify method signatures and improve code readability
[ j2kt ] add ` ` isqualified ' ' flag to thisreference .
fix xhamster ripper to only allow wmde and ww .
fix issue with entity cache in world . getentities ( ) .
alexeibarantsev : fix bug in oracledialect . gettablename ( ) in oracledialect
fix a typo in the flutterconsolefilter . java file .
added support for selecting all files in the FileMenuFilter constructor and updated relevant actions accordingly to enhance user experience by allowing users to select all files
[ java ] correct calculation of termoffset in network publication .
fix checkstyle issue in io / guild / guildupdateownerevent . java
fix incorrect inportalticks when in creative mode
added support for compressed chart data and updated layout calculations in ClusterMonitorTileSkin . java to improve layout handling and ensure proper rendering of chart data
refactor code for improved clarity and organization to enhance maintainability and readability of the codebase
change data type of length calculations from int to long in Base64 . java to ensure proper handling of large integer values and prevent potential overflow issues
removed the null check for the header in RendererConfiguration . java to simplify the condition for better readability and maintainability
allow disk offering change when scaling cpu and memory of vm with custom service offering
updated import statements and replaced Builder with LimitOrder . Builder in HitbtcAdapters . java and HitbtcOrderLimitOrder . java to
[ ci ] rename idlecount to consecutiveidlecount for good readability
updated the description of the JRuby Scripting service from " jruby " to " jrubyscripting " to clarify the purpose of the automation component
updated variable name handling in ConfigCategory . java for clarity to improve code readability and maintainability
updated the condition in ParticipateAssetIssueActuator to include an additional check for the exchange amount to ensure proper handling of negative amounts
removed redundant loop condition in FeedUtils . java to simplify code logic and improve readability
added a test method for HDF4 parsing in HDFParserTest . java to ensure compatibility and correctness of the HDF4 file parsing
[ calcite - 6092 ] ignore invalid time cast in test
reformatted code in IDEEditor . java for improved readability to enhance code maintainability and clarity
added static methods to quiet close multiple AutoCloseable objects to improve resource management and prevent potential memory leaks
updated confirmation message from ' remove _ remote ' and ' remove _ remote ' to ' common _ yes ' in RemoveFileDialogFragment . java to improve
added null checks before drawing the image in Pixmap . java to ensure images are only drawn when they are non - zero
replaced ReflectionHelpers with Unsafe ' s method for defining a class using ProtectionDomain to improve compatibility with Java ' s security framework
fix a bug in the regex for fqdn and fqd port number validation . also add a unit test for it validation .
updated conflict handling logic in CachedRowSetWriter to use a counter for conflicts instead of a boolean flag to improve clarity and efficiency of conflict management in
fix a nullpointerexception when check for ` ` 0 . 3 ' ' and ` ` 0 . 3 ' ' ( # 4254 )
added a condition to return the reference if the reference is equal to the current instance to improve reference handling logic and prevent unnecessary memory allocation
added seed file validation and improved error handling in the Injector class to enhance robustness by ensuring only valid seed files are injected
added a condition to check if ` hideOriginal ` is true before setting the visibility of ` originalView ` to ensure ` originalView ` is only
loop : fix off - by - one error in defaultlooppolicies
added a check for texture coordinate type before processing texture data in CombinedTexture and introduced a logging mechanism in UVCoordinatesGenerator to improve error handling and
added error handling and validation for barcode file deletion to improve robustness and prevent potential runtime exceptions
added seek ( ) and close ( ) methods to TracingConsumer and TracingProducer , and implemented them in TracingProducer to enhance functionality for
updated the substring method in HandleDAOImpl . java and added a query setting for oldPrefixLength in HandleDAOImpl . java to improve handling of
replaced the manual addition of elements to the convertedValsList with a constructor that initializes it directly from the collection to simplify the code and improve performance
[ java ] deprecate abstracttimer constructor since it ' s deprecate .
added a warning dialog for nightly builds in the Universal Gcode Sender application to inform users that the version of Universal Gcode Sender
[ # 8603 ] feedbacksessionresultsbundle : do n ' t display question without team ( # 8603 )
updated return statement in UnnecessaryThrows . java to include reference to ` ` throws ` declarations to improve clarity of the returned message
deleted CacheApplication . java and replaced its usage with CommonsApplication . cacheData in ShareActivity . java and ShareActivity . java to streamline code
replaced calls to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java ` to simplify
refactor methods in StatisticsServlet for improved readability to enhance maintainability and clarity of the codebase
updated configuration handling in RuntimeEnvironment for API level KITKAT and higher to ensure compatibility with newer Android versions and improve configuration management
added a new constant for stack repository update link existence checks in VersionDefinitionResourceProvider and a corresponding test in StackManagerTest to ensure proper handling of
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
fix npe in cfmetadata . getindex ( ) when indexname be null
added package imports for XML resolver helpers and readers in CheckPackageAccess . java to enhance package management capabilities for XML resolution
rename ` save ` methods to ` add ` in ` JobRepository ` and related classes to improve clarity and consistency in method naming
do not replace loopbegin input if the successor of loopexitnode be a loopexitnode
updated ` SearchAndRecommendationsScrollController ` to replace ` RecyclerView ` with ` WidgetsRecyclerView ` and adjusted related methods to improve the handling of
added a check to ensure the terminal is supported before proceeding with further operations to enhance user experience by preventing unsupported terminal scenarios
changed data types from ` Long ` to ` Integer ` in ` CloudExitableDirectoryReaderTest ` and ` LBHttpSolrClient ` to
added a check for session validity in AbstractSessionCache and modified session attribute handling in RemoveSessionTest to ensure that the session is valid before flushing
refactored the handling of index changes to check for null values before processing to improve code readability and prevent potential NullPointerExceptions
replaced Vector with ArrayList for buttons and added action listener methods for RadioButton management to improve performance and flexibility in managing RadioButton elements
updated UserManagerCompat to use a new UserManagerCompatVM class and modified related checks to improve compatibility with newer Android versions and enhance user creation
added methods to retrieve database major and minor version in MockDatabase , AbstractDatabase , and HibernateDatabase classes , and updated ReorganizeTableStatement
updated ActionGraphCache to use MapDifference and added MAX _ MISMATCH _ RULES _ TO _ PRINT constant for better clarity to
added LockDatabaseDesc and UnlockDatabaseDesc classes to manage database locking and unification of queries in the Hive plan
refactor RankingUIModel and related classes to use setter methods for visibility and selection states to improve code readability and maintainability by reducing
added handling for disconnect messages in HandshakeHandler and improved logging in NodeImpl to enhance disconnection handling and provide clearer logging for incompatible protocols
[ iotdb - 3939 ] add permission to set / delete storage group ( # 1075 )
fix : [ documentai ] rename documentai / ud / documentai / v1beta2 to documentai / v1beta2
added checks for missing variable types and improved type validation logic in Assertions and TypeValidation classes to enhance type validation and provide clearer error messages for missing
added afterTestClass and beforeTestClass methods to StepScopeTestExecutionListener to enhance test lifecycle management during test execution
updated CountersManager to use UTF - 8 encoding and modified buffer size checks for consistency to improve code readability and maintainability by standardizing buffer
removed unnecessary ` toString ( ) ` method implementations from ` MultiSteps ` and ` SendEmail ` classes to simplify logging and improve readability of
added initialization and cloning of joinKeys in JoinDesc to ensure joinKeys is properly managed and avoid potential null pointer exceptions
added PrincipalResolver to the web authentication handler registration to enhance flexibility by allowing custom principal resolution
updated the ` addSettingsFromFile ` method to accept an additional ` ImmutableList < Path > ` parameter and modified the file parsing logic to include search paths
changed member variables from non - final to final in Oracle . java to enforce immutability and enforce immutability of these variables
[ hotfix ] [ doc ] disable unaligned checkpointing by default
fix ( sql ) : do n ' t throw unsupportedoperationexception for invalid query
add graal . compiletheworldtest . log option to disable compiletheworldtest
added a check to throw a CannotDelambaException when the value is not an instance of LocalVariable to ensure proper exception handling for non -
added support for MySQL database timestamp handling in CreateTableGenerator to ensure correct NULL representation for timestamp columns in MySQL databases
added context class loader management in EnvConfiguration . java to ensure proper class loading behavior during context management
added a condition to set ejection delay based on stage number in SimulationListHandler . java to ensure proper ejection delay is set when no
updated the class name from FunctionalRunnerConfig to BeanDefinitionOrderRunnerConfig and modified its usage throughout the test to ensure consistent ordering of bean definitions in
refactor TransactionUtil2 class for improved transaction handling to enhance code maintainability and readability
updated the ` validateIssuerClaim ` method to accept an ` Optional < OAuthRegisteredService > ` parameter and introduced ` resolveIssuer ` method to enhance
added a null check for the collection before returning its string representation to avoid potential NullPointerExceptions when coll is null
replaced ` getStyle ( ) ` with ` getAllStyles ( ) ` in ` TextArea . java ` to ensure alignment is applied to all styles instead of
added support for ` foreignDatabaseName ` and ` foreignSchemaName ` in the ` ForeignKeyColumn ` and ` ForeignKeyColumnMutator ` classes to enhance
[ java ] throw a timeoutexception in case of an error in the election .
refactor ShadowActivity and ShadowBluetoothDevice to use Shadow . extract for PackageManager extraction to improve code clarity and maintainability by centralizing
added validation for selection root and introduced a wildcard check in FileSelection . java , along with a new test case in TestBugFixes . java
deprecate iforgeitem . oninventorytick and replace it with iforgeitemstack . oninventorytick
fix ( io ) : write out the war resource in zip export ( # 1767 )
added a null check before invoking invalidateOptionsMenu ( ) in SingleUploadFragment to prevent potential NullPointerException when the activity is not initialized
refactor widget binding logic in Launcher and PendingAddItemInfo to improve handling of widget options to enhance flexibility and maintainability of widget configuration
[ ecobee ] add air pressure , air quality and vocppm capability to sensor
reformatted code in OperationSetServerStoredContactInfoFacebookImpl . java for improved readability to enhance maintainability and reduce code duplication
added environment variables for AAPT and AAPT2 in Genrule . java and updated tests in GenruleTest . java to support additional AAPT
[ gr - 36444 ] dump access table only when truffleinstrumentbranches be enable .
added null check before disposing of the message to avoid potential NullPointerException when message is null
made the ` db ` field final in ` TronStoreWithRevoking ` and modified the ` init ` method visibility in ` TxCacheDB
log4j2 - 1343 make sure logwatcher be disable if log4j be not available
replaced printStackTrace ( ) calls with fail ( ) and return statements in CategoryPlotTests . java to simplify error handling and improve code readability
replace ByteArrayOutputStream with SmallByteArrayOutputStream and add a new SmallByteArrayOutputStream class to improve performance and simplify byte array handling
shader : use intmap instead of string - > intmap to improve performance
updated JDBC connection string from close to shutdown in AbstractDIHJdbcTestCase . java to ensure proper resource management and avoid potential memory leaks
camel - 14284 : camel - route - do n ' t print the completed date if the completed date be null .
updated the default language handling in TestHtmlTag . java and added multiple test cases in TestUseOption . java to improve clarity and functionality of the
added a condition to check if the result list is not empty and the size of items is greater than 10 to ensure proper handling of incomplete items in
updated command - line argument name from " timeFieldSpec " to " timeColumnName " and modified related logic in HybridClusterIntegrationTestCommandLineRunner to
refactor output format handling in SiteSnapshotVariationsTest and OutputOptions to set the correct output file extension based on the HTMLx output format to
corrected the condition in the QSB margin check to ensure correct behavior when QSB is not enabled
fix equal and hashcode for animationlist and gltfmodelkey
added a date field and methods to set the timestamp in AbstractGenerator , Generator , and HttpGenerator , and updated HttpConnection to use this method to
replace ` Adler32 ` with ` CRC32 ` and update references accordingly to improve clarity and maintain consistency in naming conventions
cloudstack - 10287 : fix default value of xen . heartbeat . interval to null
added a new warning constant for zero area fins and updated the warning handling logic in the FinSetCalc class to improve clarity and functionality of warning
added a custom ` DocumentMetadataSerializer ` to serialize ` DocumentMetadata ` objects to improve JSON serialization for Elasticsearch metadata in the application
add date _ trunc ( ) and date _ truncate ( ) function to h2 and oracle dialect
added a check for the " Memory Pool not found " error message before logging and rethrowing the error in MetricUtils . java to improve error handling
allow use of javascript in ensuresignedup ( ) to be disable by default .
updated annotation messages to use ` Types . PROTOTYPE _ FACTORY _ TYPE ` instead of ` @ ConfiguredBy ` to improve clarity and
updated the BACKFILL endpoint from " / generateAnomaliesInRange " to " / replay " to align the API with the new
updated the instantiation of DataWord instances in PrecompiledContracts . java to use the latest proposal number instead of a new one to ensure consistent data
updated the handling of app items in AllAppsContainerView to utilize BubbleTextView for badge updates to improve code clarity and maintainability by
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
updated context start behavior in ResourceHandlerTest and ServletContextHandler to ensure correct behavior after ContextHandlerCollection is started
removed conditional check for WORKSPACE _ CUSTOM in Cling . java to simplify the code by eliminating unnecessary logic
trufflejdkservices : remove assertion that be no longer need
added @ Ignore annotation to the shadowInvocationWhenChildIsInstrmentedButUnshadowed test method to temporarily disable the test due to
updated import statements for ItBit classes from version 1 to version 2 across multiple files to ensure compatibility with the latest version of the ItBit API
ww - 3905 use getdefinedvalue ( ) instead of getnull ( ) in profile interceptor
added private constructor and made constructors private in multiple classes to enforce immutability and prevent instantiation
add try - with - resources to fix potential resource leak
replaced instances of ` Class . forName ( o . getClass ( ) . getName ( ) ) ` and ` Class . forName ( ) . getName (
added tableNameWithType to the warning log message in RetentionManager . java to provide more context for debugging the retention time issues
added trim ( ) method to check if fragmentList has more than one element to ensure consistent string length checks for improved data integrity
fix resourcepackfilenotfoundexception to use modfile . getfilepath ( ) . tofile ( ) .
refactor TransformerBuilder handling in PartitionToolbar to improve clarity and functionality to enhance code readability and maintainability by using more descriptive variable names
removed unnecessary condition for showAsGrid ( ) and added checks for task view focus and visibility to improve code readability and ensure proper handling of task
refactor CalculatorEndpoint , CalculatorRestEndpoint , CalculatorService , CalculatorServiceImpl , and CalculatorRestEndpoint to return BMI
removed the comparison operator from the thenComparing method in QueryCommand . java to simplify the code for better readability and maintainability
fix a crash when the player try to place a stone in the wrong place .
refactor environment variable handling and improve environment variable retrieval in WindowsProcessAddressSpace , J9DDRImageProcess , NewElfDump , and
add ` - pluginconfiguration ` option to allow user to specify plugin property
updated condition to check for non - empty hashTable instead of null to improve code robustness by avoiding potential NullPointerExceptions
fix ( sql ) : do n ' t allow negative second in timestamp . tostring ( )
[ java ] use the context from the archive context so that the archive context can be reuse .
added a condition to check if the compile threshold is not compiled to ensure that the code only executes when not compiled
( chore ) camel - core - tests : add some online test to the abstracttest suite
refactor TogglableFlag to use a new method for overriding default values and add a change listener to improve configurability and ensure launcher
updated logging statements to include placeholders for better readability to improve logging clarity and maintainability of error messages
added a conditional check for Android platform in SnapshotScreenListener . java to prevent execution on devices running Android
updated assertions in RoutesTest to use Hamcrest ' s assertThat for better readability to improve test clarity and maintainability by using Hamc
added multiple functional interfaces for byte , float , and short functionalities in the common package to enhance functional programming capabilities for various data types
changed the return type of ` getSubsColor ` methods from ` int ` to ` String ` and updated related methods accordingly to allow for more flexible
added a conditional check before deregistering the invocation future to prevent potential NullPointerExceptions when the future is not complete
replaced direct frame processing with a call to the output method in AbstractWebSocketConnection to streamline the connection process and improve code readability
added a check for the " redirected " flag in LoginActivity to ensure the WelcomeActivity is launched only when the " redirected " flag
added a new class ` ShadowCheckedTextView ` to simulate the behavior of ` CheckedTextView ` to enhance testing capabilities for ` CheckedTextView ` in the
added Serializable interface to ParserState and marked fields as transient in multiple classes to ensure serialization compatibility and prevent serialization issues
add " identrustdstx3 [ jdk ] " to the list of supported certificate types in VerifyCACerts . java to enhance certificate
removed duplicate context attribute calls for TEMPDIR _ CONFIGURED and TEMPDIR to streamline code by eliminating redundancy
update muc occupant ' s nickname to match the user ' s nick
[ java ] move connection field from onopen / onclose to onopen / onclose method .
updated MergeScheduler and MergePolicy handling in CreateIndexTask . java to utilize LogMergePolicy for better merge management to enhance code maintainability and
pdfbox - 4892 : remove redundant call to character . gettype ( ) in icu4jimpl
added support for computed date and numeric default values in AddDefaultValueChange . java and updated return statements in AbstractDatabase . java to improve handling of default
[ hotfix ] fix typo in comment of nbtscoreboardioservice
do n ' t try to resolve serviceprovidermetadata if it be already writable
change visibility of graphprinterdumphandler . printer from private to protected so that it can be subclassed
added BigDecimal import and updated order ' s average price calculation in HuobiAdapters . java to ensure correct handling of order amounts and improve precision
updated field handling in ProjectionOperation and TypeBasedAggregationOperationContext to use getTarget ( ) instead of getName ( ) to improve clarity and correctness in field
updated player viewer logic in FakePlayer . java to include a check for viewers before sending packets to improve performance by avoiding unnecessary packet additions when
added constant state management to FolderAdaptiveIcon , ShiftedBitmapDrawable , and FolderAdaptiveIcon classes to ensure proper handling of drawable states
refactor SPDYClient to streamline connection handling and controller assignment to improve code readability and maintainability by reducing redundancy
fix npe in protostuff serialization when the object be null ( # 9696 )
pdfbox - 4892 : fix a couple of typo , a suggest by valerybokov
refactor BarrowmanCalculator class for improved readability to enhance maintainability and clarity of the codebase
added a conditional check to return early if the axes and axis numbers are empty to improve performance by avoiding unnecessary rendering when no axes are displayed
replaced calls to ` setFilter ` and ` setWrap ` with ` unsafeSetFilter ` and ` unsafeSetWrap ` in Texture . java to
( chore ) camel - xml : fix typo in returntoworkspace method
added SSL context and hostname verification functionality to CustomUrlJob . java and created a new class CustomUrlTrustEverything . java to enhance security by
use real - used clock rate for g722 encoding , not g722
refactor TextureAtlas class for improved readability to enhance maintainability and ease of understanding for future developers
updated the method to return the module name instead of the product name in ProjectGenerator and added a method to set module name in AppleLibraryBuilder to
[ hotfix ] [ test ] fix race condition in testslot
# 136 - fix for # 136 - findids ( ) . findids ( ) . findids ( ) with inheritance
updated WebSocketServletRFCTest to use a ByteBuffer for parsing frames instead of a ByteBuffer to improve clarity and efficiency in handling WebSocket connection headers
do n ' t push the reference of the function reference to the stack if it ' s a function reference .
[ type : fix ] add ttl to log collection plugin
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified related methods in CustomChangeWrapper , CustomPreconditionWrapper , and XML
updated DeploymentExceptionTest to use Jetty Server and HandlerCollection instead of QueuedThreadPool to improve server management and ensure proper context management
added error handling for initialization in CommonsApplication and modified vector drawable creation in NearbyController to improve robustness by catching potential exceptions and ensuring
added a null and empty check for objectName before trimming to avoid potential NullPointerException when objectName is null or empty
updated error messages for file access in Command . java and TestPrint . java to improve clarity and provide more informative error messages
[ hotfix ] [ table - planner - blink ] replace string literal with static final string
updated the handling of subject names and improved null handling for subject names to enhance the robustness of certificate handling by ensuring a default subject name is used
added a deprecated annotation to RuntimeOptions . java to indicate that the class should no longer be used in future versions
replaced ByteBuffer encoding and decoding with a direct string ' s getBytes method to simplify code and improve performance by avoiding unnecessary byte array creation
added a new interface ` PermissionEvaluator ` in the ` org . springframework . security . expression ` package to provide a mechanism for evaluating permissions based
added a new option ` ERASE _ LINE _ ON _ FINISH ` and modified buffer handling in ` LineReaderImpl ` to
fix masterfilesystem . getallservers ( ) return false when server be not online
updated exception types from CALC _ MERKLE _ ROOT _ FAILED and CALC _ MERKLE _ ROOT _ FAILED
pdfbox - 4071 : use url . openconnection ( ) to load the jar file , not jarfile .
fix issue where error response be not be emit in case the handler finish
change wrapper layout from center to centerAbsolute in Picker . java to ensure the wrapper container aligns with the absolute positioning of the spinner
[ flink - 20536 ] [ network ] fix the issue that networkbufferpool # requestmemorysegments return incorrect number of required buffer
fix intermittent test failure in testjmxbeanintegration . testjmxbean
replaced AndroidJUnit4 junit runner with RetryTestRule in AbstractIT . java to improve test reliability by using a more suitable test rule
remove the use of autocommit from the state machine and use the session ' s required transaction id instead .
add package - info . java and fix checkstyle issue .
added support for retrieving the DistinguishedNameParser from " javax . microedition . khronos . opengles . GL "
[ hotfix ] [ test ] simplify lambda expression in streamtasktimertest
refactor URI handling in mmm Request . java and add tests for CONNECT method in mmm RequestTest . java to improve request processing logic and ensure
updated key references and refactored storage point retrieval logic in multiple classes to improve code clarity and ensure compatibility with newer Android versions
added sessionavailable / sessionunavailable / sessionunavailable methods to manage client session .
added " liquibase . pro " to the scanning configuration to support Liquibase features in the application
renamed the method ` deleteSyncFolders ` to ` deleteOtherSyncedFolders ` and updated related logic to simplify the method signature and improve
updated the ` loadWithNewGlobal ` method to accept a variable number of arguments and modified its implementation accordingly to enhance functionality by allowing more flexible arguments
refactor start index handling in FastPathResolver for consistency and clarity to improve code readability and maintainability
replaced calls to ` length ( ) ` with ` getRetainedSize ( ) ` in ` HiveClientModule . java ` to improve readability
rename methods and variables related to randomization from " isExceed " to " hasAlreadyRandomized " to improve clarity and accuracy in random
added support for unsupported functions LEAD , LAG , and LAG in UnsupportedOperatorsVisitor and corresponding test cases in TestWindowFrame
clear headers in AbstractProxyServlet to ensure proper handling of request headers
added a check to skip the test if SA attach is not expected to work to ensure that tests are only executed when SA attach is expected to work
added null checks for bgColor in GraphicsDevice . java and created a new TranslucentWindow . java file with translucency support to enhance
added checks for null phone , email , website , and website in UserInfoActivity to ensure user information is available before proceeding with activities
added custom field serialization to PrecompiledHeaderData and modified precondition check in PreprocessorDelegate to ensure PrecompiledHeaderData can not be used on different
[ flink - 20536 ] [ table - planner - blink ] make append mode configurable for table source
added a new integration test class ` MultipleOutputsIntegrationTest ` to verify behavior of multiple output groups to ensure correct behavior of named output groups in the
updated regex patterns and added content comparison logic in FileSettings . java to ensure consistent formatting and maintain consistency in content handling
added SSL context retrieval and versioned flow snapshot handling in StatelessFlow and StatelessValidationContext classes to improve the handling of flow versions and ensure
replaced custom Object [ ] { } with ArrayUtils . EMPTY _ OBJECT _ ARRAY in BinaryCipherExecutorTests . java to improve code readability
added @ TaskbarModeSwitch annotation with persistent mode to TaplTestsQuickstep . java to enable persistent taskbar mode switching during testing
added new device status entries for " leaving - dock " , " energy - save - mode " , and " energy - save - mode " to
catch and log itemloadingexceptions to help with debugging .
updated imports in KrakenFuturesStreamingPublicDataTest . java to include @ Ignore annotation to temporarily disable tests that are not ready for execution
fix getcurrentsurfacescale ( ) to return 1 for 2x gl
rename RussianLowerCaseFilter class to improve clarity to enhance maintainability and readability of the code
refactor CsvBulkLoadToolIT and QueryUtil to use PropertiesUtil for server and client properties to simplify configuration management and improve code maintainability
replace path separators in displayName with underscores in FileDisplayActivity . java to ensure consistent file path formatting across different operating systems
add a resettableinputstream to allow wav file to be read
added support for repeat first line indentation in ColumnText to enhance flexibility in indentation management based on user preference
updated the equality check in Oid class to ensure proper type casting to avoid potential ClassCastException
move initialization of metricstrackerfactory and healthcheckregistry into the constructor of hikaripool to avoid duplicate code .
[ gr - 36478 ] fix loopex class cast exception when use controlflowanchored
added a call to set focus painting on buttons in WindowsPlacesBar . java to improve visual appearance of the buttons
updated the condition to check for UniqueConstraint and ForeignKey instances in DatabaseSnapshot . java to ensure proper handling of backing index fields in both primary and foreign
added a deprecated method ` getAccountLedgersWithParams ` to the ` KucoinAccountServiceRaw ` and ` AccountAPI ` classes to provide
[ ds - 4023 ] add check for dc . title in the communityadmingrouprestcontroller .
do n ' t throw an error if there be no word .
added unit test base on user forum issue
updated ` FeedRefreshUpdater ` to use ` getDatabaseUpdateThreads ( ) ` instead of ` getBackgroundThreads ( ) ` and added getter and setter methods
increased the FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 milliseconds to increase the fast scroll threshold for better user experience
updated the initialization of SystemClassName to use " Ljava / lang / System " instead of " MetaUtil . toInternalName " to ensure the
hhh - 13644 fix npe in procedurecallimpl . getresultstream ( )
added a null check for the API properties in RestSwaggerSupport . java to avoid potential NullPointerExceptions when accessing API properties
added two new files , BinaryFrameGenerator . java and TextFrameGenerator . java , to implement WebSocket frame generators for Binary and Text frames
simonstewart : fix flaky test in pageloadingtest
updated random latitude and longitude calculations in RandomGeo3dShapeGenerator . java to improve randomness to ensure coordinates are generated correctly based on random values
added a keepAlive method to manage ClassLoader instances to improve resource management by keeping the ClassLoader in a separate method
change return value from false to true in SQLiteDatabase . java to ensure the method returns true instead of false
improve priority of jsr166lockmonitorenter for concurrent access
added MkdirStep to directories in multiple classes to ensure the output directory is created when the files are created
updated coordinate retrieval and error logging in MeshLeveler . java to improve debugging and ensure proper bounds checking for coordinates
[ jbpm - 161 ] skip applypmmlmodelcommand execution if jpmml library be not available on classpath
updated the condition from locationMode to thermalStatus in ShadowPowerManager . java to correct the logic for determining the thermal status
updated the temporary directory creation logic in MountableFile . java to handle macOS environments to ensure compatibility with macOS and other operating systems
( chore ) camel - spatial : fix memory buffer issue on window
added a check to ensure that the plugis have an organization in the pom . xml file to prevent PluginException when the organization is missing
updated contributor license information in SepPostingsWriterImpl . java to ensure proper licensing information is included in the file
deleted the TerminateWebSessionListener . java file to the functionality is no longer needed in the web flow
updated the method to use the system ' s class path instead of an empty string to ensure the process uses the correct Java class path for better compatibility
replaced ArrayUtils . EMPTY _ BYTE _ ARRAY with new byte [ 0 ] for cryptKeyInit , cryptKeyPriv , and md5
added a new test method ` dontChangeJavadoc ` to the ` AddLicenseHeaderTest ` class to address issue # 3198 and ensure documentation consistency
updated LAUNCHER3 _ PHYSICS flag from false to true to enable PHYSICS for enhanced user experience
added a ` < div class = ' noPrint ' > to the HTML structure in ` HtmlThreadInformationsReport . java ` to improve the
update LUCENE _ MAIN _ VERSION from " 3.0 " to " 4.0 " and update TEST _ VERSION _ CURRENT to 409
added macosx symbolicator and task handles in BsdDebuggerLocal . java and modified OS detection in PlatformInfo . java to support Mac
use a weak reference to prevent memory leak
do n ' t log connection reset exception in networkdispatcher . log .
[ java ] use context . conductorbytebuffers instead of context . conductorbytebuffers in aeron .
added a break statement in the TouchImageView class to prevent fall - through behavior in the switch statement
chore : [ dialogflow ] update java and python namespaces ( # 118 )
remove sslhandshakelistener from feedablebodygenerator , use feeder . flush instead
added handling for CONTRAVARIANT types in TypeUtils . java to ensure proper assignment of generic types to their corresponding types
use concurrentset instead of nonblockingset for memtablespendingflush
added null check for tree . errs before calling memberEnter and modified error handling in JavaCompiler and Erroneous classes to improve error handling and ensure
change browser type from NO _ BACKGROUND to NONE in BugInfoView . java to disable the background for better user experience
updated the cancel button ' s callback from ` finish ( ) ` to ` cancel ( ) ` in ` AboutActivity . java ` to ensure the
fix integerstamp division when min / max be negative .
added a method to read an InputStream into a byte array and updated image retrieval to use this new method to improve code readability and maintainability by
added variable and local handling methods to CaseStmtToken and ExprGenerator classes , along with a new test for bug 110 in ConditionsTest to
do n ' t fail on invalidkeyexception or unsupportedkeyexception in rsaclientkeyexchange .
updated AdditionalDependencies in WinGammaPlatformVC10 . java to use psapi . lib instead of libGD32 . lib to ensure compatibility with
updated string concatenation and newline handling in StringUtils and StringUtilsTest classes to ensure consistent newline usage across different operating systems
added UTF - 8 encoding settings and updated alert text in TemplateEngineFreemarker . java , and updated alert text in ApplicationControllerTest . java to
crdgeneratortest : make sure to print the generated crd
make ` ` final ' ' for ` ` hold _ samples ' ' and ` ` type ' ' field final
added a conditional check for the " testngEmailableReporter " system property before adding the EmailableReporter to ensure that the EmailableReporter is only
added a boolean variable ` quoted ` and modified assertions in ` CommandLineBuilderTest ` and ` CommandLineBuilderTest ` to handle quoted quotes to ensure proper
removed public access modifier from interfaces and classes in several Java files to enforce package - private visibility and improve encapsulation
added a call to set the number of reduce tasks in FreeGenerator . java to ensure the job uses the correct number of reduce tasks based on the
fix nullpointerexception in schemageneratorhelper ( # 2128 )
updated the file version from 505365 to 532077 in SaveService . java to reflect the new version of the file to ensure compatibility with
added support for the OES _ texture _ float extension and GL _ ARB _ texture _ float in FloatTextureData . java to ensure compatibility
add write ( string , string value ) and close ( ) method to fileserver to make code more thread - safe
added a null check for outputDirectory and jarStream before setting it to ensure outputDirectory is set only when both parameters are provided
added performance measurement to the ` getFuture ` method in ` ShadowSQLiteConnection ` to improve performance monitoring for SQLite operations
updated method calls from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeap
add a new enum resourceerrorhandling to make it easy to know when an error occur in the config file
updated buffer position calculation in RAMInputStream and added EOFException test in TestRAMDirectory to improve buffer handling and ensure proper exception handling for EOFException
update error handling in DefaultServlet and JspServlet to include resource information to provide more context for error messages related to missing resources
modified ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag and added AccessControlContext class to enhance thread management and access control functionality
updated CHECK _ EVERY _ N value and modified memory checking logic in Caches . java to improve memory management efficiency and enhance logging clarity
hbase - 10213 testsplittransaction # testsplitrecoveryrecoveryrecoveryrecoveryrecoveryrecovery
added null check for currentSelectionArea before accessing its properties to prevent potential NullPointerException when currentSelectionArea is null
add a parameterized test for jaas demo in jettyhometester
added checks for spanX and spanY before creating a folder and adjusted the return calculation to ensure the folder is centered within the specified span and its
refactor CacheOffHeap class implementation to improve performance and reduce memory usage
createtable : prevent re - opening a table that depend on another table with a higher id
added a check for row index before setting tile values in TiledLoader . java and improved string handling in TiledLoader . java to prevent potential
fix concurrentmodificationexception in inmemorytilecache . setworkingset
added a new Java class named Manasa to implement a solution for calculating the final steps of a stone based on a given value to implement functionality for
add a AddressChecker interface and modify the TrackerRequestProcessor to use it to enhance address validation for tracker requests
fix translucent render type not work in forgehooksclient .
added tag removal functionality in the GuiConfigEntries class to enhance user experience by allowing tags to be removed
[ netatmo ] make thingtypeversion a string instead of int .
[ java ] fix nullpointerexception in javaseport . seek ( ) .
refactored issingle logic into a separate method to improve code readability
( chore ) camel - docker : use profiler instead of profiler . getinstance ( ) .
added a ` resourcesMode ` parameter to the ` AndroidMetadata ` constructor and updated ` perfStatsCollector ` to include it to enhance functionality by
replace DateUtils with Calendar for date calculations to improve performance and simplify date handling in HistoricProcessInstanceQueryImpl
updated the import method from ` importProject ` to ` importProjectCore ` in ` OpenAndroidModule . java ` to utilize a core import
added error handling for CommandFailedException in LiquibaseCommandLine . java to ensure usage information is printed when a command failure occurs
refactor TreeMap implementation for improved efficiency to enhance performance and maintainability of the code
add enableasyncstacktraces option to show the stack trace
added a method to set glow color in BubbleTextView and updated Folder to use this new method to enhance user experience by allowing customization of glow
added style classes for link and description elements in LinkedFilesEditor to improve the visual presentation of file links in the editor
added tests for the " alltypes " table in ResultSetMetaDataTest . java and modified the return value in AbstractJdbc2ResultSetMetaData . java to
removed the try - finally block around file deletion in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify the code and eliminate unnecessary error
added null check for _ info before accessing its status to prevent potential NullPointerException when _ info is null
added a constructor to the ShadowLocation class that accepts a provider string to initialize the provider instance
updated the condition to limit maximum RAM for 32 bit devices to ensure it does not exceed 2048 RAM limits
add miss stats for map without map data ( # 11919 )
added logging functionality to FileProfileActivator to enhance debugging capabilities by providing visibility into file existence and missing files
updated the error message in the addToBody method from " noname1234 " to " invalid _ " to improve clarity and accuracy of the error message
use set instead of list to avoid concurrentmodificationexception
updated the array size constraint from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter . java to improve
added multiple assertions to the delete method in DashboardUserMapperTest to ensure that the delete method returns expected results for correct functionality
rename recipient to primaryparticipant to avoid confusion
sulong : add guard for auto deref handle in sulong .
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the buffer size for external use
add a usagehelpautowidth option to the terasology command and update the description
reformatted code in DrawerActivity . java for better readability and added logic for setting action bar title based on old interactions to enhance maintain
refactor CommandLineParserTest to improve test coverage to enhance reliability of command line parsing functionality
added constants and interpolators for ANIM _ ALL _ APPS _ CONTENT _ FADE _ MIN _ CLAMPING _ THRESHOLD and
updated method call from ` toUnderscoreSeparated ` to ` javaNameFromExternal ` in ` DefaultJavaLanguageNamer . java ` to improve
added native methods for setting and releasing window , frame , and NSObject in CWrapper . java to enhance functionality and maintainability of the code
added constant value validation in mmm Checker . java and created a new ValueTest . java file to ensure that constant values are handled correctly and provide
refactor multiple test classes to improve code organization to enhance maintainability and readability of the test suite
[ hotfix ] remove unnecessary null check in pojoutils
[ hotfix ] fix typo in javadoc of jiraconfiguration
updated error message formatting in UploadBuild . java to improve clarity of error reporting for better debugging
updated bounds calculations in DeviceProfile . java to include search bar offset to ensure proper layout alignment with search bar offset
fix disconnection logic when idle timeout be zero .
refactor OverviewCommandHelper to run the Fallback activity on the UI thread to improve responsiveness by ensuring UI updates occur on the
added a method ` getSourceGroup ( ) ` that returns an ` Optional < Pair < String , ImmutableList < AppleSource > > ` to provide access
increased wait time from 60 seconds to 32 seconds in TestSimTriggerIntegration . java to allow more time for trigger execution to complete before proceed
updated the parameters in the FloatSelectiveStreamReader to use ' positionCount ' instead of ' outputPositionCount ' to ensure correct block positioning for
fix abstractnodecostsearch to handle case where the distance from startsq be square .
added a condition to skip processing for specific component types in ResourceEditorView . java to improve performance by avoiding unnecessary processing for specific component types
fix crash when launch some apps which require icon to be load on the model thread
added a null check for the commitPoint variable in ReplicationHandler . java to ensure the correct commit point is used when it is null
added unit tests for ` getImei ` and ` getMeid ` methods in ` ShadowTelephonyManager ` and implemented corresponding methods
added debug logging for HTTP request details in SimpleHostRoutingFilter to improve debugging capabilities for request handling in HTTP requests
added ` destory ( ) ` method to ` OfflineResourceDataManager ` , ` BitmapInvertedIndex ` , and ` IndexSegment
[ rocketmq - 635 ] fix the test error of normalmessagesendandrecvit
use standardcharsets . utf _ 8 instead of charset . forname ( ` ` utf - 8 ' ' )
hbase - 25827 fix the exception throw by the bulkload method when there be no ioexception
added a ` commission ` parameter to ` DefaultWithdrawFundsParams ` and updated its usage in ` RippleWithdrawFunds
removed the import of StreamTerminator from AutoClosingReferenceStream . java to streamline the code by eliminating unnecessary dependencies
replaced multiple catch blocks for exceptions in LoadSolrBuilder and SolrLocator to streamline exception handling to improve code readability and maintainability by reducing redundancy
added a check for overloaded methods in the Java2TypeScriptTranslator class to ensure that overriding abstract methods do not lead to runtime errors
added StacklessLogging to manage disk sweep in TestFileSessions . java to improve logging efficiency during file session operations
added Serializable interface and modified variable visibility in multiple classes to enhance serialization support and improve code clarity
modified test cases in SubExactLConstantTest and SubExactLNonConstantTest to improve test coverage for exact and non - constant scenarios
added a null check for claimRequestString in ConnectOAuth2RequestFactory . java to handle cases where claimRequestString is empty to improve robustness
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve flexibility by allowing the instantiation of HiveFilterSetOp
updated the ` processTypeHintForNestedDocuments ` method to handle null values correctly and added unit tests for null values in ` UpdateMapperUnitTest
replaced CoreAdminResponse with CoreStatus in CollectionsAPIDistributedZkTest . java and added a new getCoreStatus method in CoreAdminRequest .
fix a bug where transformers and locators be not be initialize
no effective change - fix typo in error message
add a getcallstack ( ) method to the pegraphdecoder to help debug bailouts
rename methods from ` setOf ` to ` copiedSetOf ` in ` RestTemplateBuilder ` to improve clarity and consistency in method naming
camel - mail : use objecthelper to get identity hash code of mailmessage instead of dump the message .
fix for http : / / issues . apache . org / jira / browse / amq - 4237 - avoid npe in connectionfactory
added a call to setIsPropertyName ( ) in the getIdentifierName ( ) method to ensure the identifier name is correctly represented as a property name
added new WaveGeneratorActivity and updated InstrumentsFragment to start WaveGeneratorActivity instead of Toast to enhance user experience by providing a dedicated wave generator
added null checks and logging for sheet existence in KeyedProperties and SheetOverlaysManager classes to improve robustness by handling cases where no sheet
( chore ) camel - test - infra - k8s to make it easy to run the test in parallel
added a test method ` testNoWriter ` to ` TestReplicationHandler ` and modified ` SolrCore . initIndex ` to detect no index and
[ graal ] fix graalkerneltester to call super . dispatchmethodkernelokra ( )
http : / / issues . apache . org / jira / browse / amq - 4237 - sort defaultmxrecord by priority
refactor thread creation in XToolkit to use a privileged action for improved security and encapsulation to enhance thread management and maintainability of the
added validation method in SelectBox and set the dropdown to " Linux6 " in UITest to ensure proper validation and selection functionality for the dropdown
replaced IllegalStateException with Collector . printStackTrace for stack trace printing to improve error handling by providing more informative error messages
added a ` parentSplit ` parameter to the ` createState ` method and modified state creation logic to include it to enhance state management by associating
changed the ` connectionState ` variable to be ` volatile ` and modified its usage in the ` getConnectionState ( ) ` method to ensure thread safety
updated DEFAULT _ POLLING _ PERIOD from 10 to 1000 in AbstractPollingEndpoint . java and modified test annotations in EnableIntegrationTests . java
refactor encoding methods in MemoryStack and MemoryUtil for improved readability and efficiency to enhance code maintainability and reduce boilerplate code in Memory
added exception handling for DocletAbortException in multiple classes to improve error reporting for aborted document processing
[ java ] unusedmodifier : fix false positive in enum
refactor multiple Java files to use method references and simplify lambda expressions to improve code readability and maintainability
added an " ssl = { 0 } " parameter to the Parameterized . Parameters annotation to specify the SSL configuration for testing HTTP connections
[ hotfix ] improve error message in transformationhelper
corrected a typo in the method name from " userPermissions " to " activeConnectionPermissions " to ensure accurate access to active connection permissions
replaced direct equality check with Apache Commons Lang ' s EqualsBuilder for better readability to improve performance and maintainability of the equality check
updated file processing to handle null outputRoot correctly to ensure robustness by preventing potential NullPointerExceptions
pdfbox - 4071 : add a filter interface to allow user to specify annotation
refactor StackTraceCleaner class to improve stack trace handling to enhance performance and maintainability of stack trace management
added content type determination for CSS and JS files in PluginServlet to ensure proper content type is set for specific file paths
hhh - 16458 skip testcriterialiteralinselectexpressiontest on oracle and sybase
updated parameter names and logic in the upgrade method and stats handling in ForkController . java to improve clarity and ensure stats array is properly initialized when
added ` getStats ( ) ` methods in ` AbstractDataImportHandlerTest ` , ` ContextImpl ` , and ` DocBuilder ` classes to
[ scb - 2423 ] make http client idle timeout configurable ( # 2423 )
replaced fling calls with scroll method calls in PagedView and BaseOverview classes to streamline gesture handling and improve code maintainability
updated the initialization of UnlocksDialog in UI . java and added a button to PausedDialog . java in PausedDialog . java to improve
clear the drop event ' s drops in PlayerEventListener . java to ensure the event ' s drops do not interfere with other events
added a constant for the default parameter in the StreamResult class to provide a default value for the inputName parameter
updated the exception type in the test method from MalformedURLException to IOException to ensure proper handling of IOException instead of MalformedURLException
updated printlnBoth method to include chunk type in TsFileSketchTool and adjusted chunk index handling in LocalTsFileInput to improve clarity of
add exclusion of ` ` lib - swift . h ' ' header from umbrella
fix a typo in the method name grizzlyasynchttpprovider . onhttperror ( )
added encode ( ) method to RequestPlugin . java to ensure proper encoding of request plugins
mondrian : fix bug in mondrian - 1213 . fix for mondrian - 1213 . fix for mondrian -
added a validation check for a null or empty LDAP password in LdapAuthenticationProviderImpl . java and created a corresponding test case in TestLdapAuthenticationProvider
pdfbox - 4892 : remove unnecessary long . tostring call , a suggest by valerybokov
added a condition to clear complexWriters in ProjectRecordBatch . java to ensure proper cleanup of complex writers when conditions are met
added @ SuppressWarnings ( " serial " ) annotations to multiple classes to suppress serialization warnings related to instances of the class
removed the ` public ` modifier from the class declaration and modified the null check condition in ` ClassGraphClassLoader ` to enhance encapsulation and
added schema error handling for " _ errors " in ErrorResponseException . java to improve error reporting by including schema errors
added a constructor to the EventSourcingRepository class that initializes eventStore and snapshotTriggerDefinition to ensure that the eventStore is not null to
refactor symbol handling in binary node processing to streamline symbol definition logic to improve code clarity and maintainability by reducing redundancy
added whitespace handling for current and search text in SearchedPeopleCursorAdapter and QustomDialogBuilder to ensure proper formatting of text in
do n ' t write ` ` # alloff ' ' command if it ' s a standby command
tiff : use tiffbaseline . planarconfig _ chunky instead of tiffextension . planarconfig _ planar .
added a call to the is . close ( ) method in ItemListTag . java to ensure proper resource management by closing the input stream
added averageutil class , and refactored table and lasertablebase to use it
added two new files , SigInt . java and SigIntBarrier . java , implementing multithreaded signal handling to provide a mechanism for
refactor graph handling in ExporterGEXF to support hierarchical graphs and improve edge count calculations to enhance compatibility with hierarchical graph representations
pdfbox - 4892 : use text . getbytes ( ) instead of byte [ ] .
added validation for rubric sub - questions index in FeedbackRubricQuestionDetails and updated setAnswer method in FeedbackResponseDetails to ensure
updated the condition in CatalogComparator to use CatalogAndSchema . ORIGINAL _ CASE instead of DB2Database to improve clarity and consistency in
simonstewart : make the browsermobproxy test less flaky
updated the formatting of criticalErrors to use Integer . toString for better readability to improve code clarity and ensure consistent integer representation
removed duplicate calls to mTextWatcher . reset ( ) in InPlaceEditView . java to improve code clarity and maintainability
improve javadoc for internalbytearray , trufflestring , and internalbytearray
[ hotfix ] [ core ] replace tuple3 with vertex in outedgesfunction
refactor Java6 assertion classes for improved consistency and clarity to enhance maintainability and readability of the assertion framework
deleted the file ` ClassA \ 314 \ 201 . java ` and added a new ` DiacriticTest . java ` to
[ java ] use a barrier rather than a countdownlatch to speed up test .
updated the handling of WorkspaceReader to use diamond operator and improved conditional checks in DefaultMaven and DefaultGraphBuilder to enhance code readability and maintainability
updated SSL scheme validation in ServiceRegistryConfig and added new imports and assertions in TestServiceRegistryConfig to improve accuracy of SSL handling and ensure correct
updated Mockito library version in the project to ensure compatibility with recent changes in testing framework
removed an extra comma in the constructor of Jdbc3Connection . java to improve code readability and maintain consistency
refactored the initialization of the Servlet instance into a synchronized method ` ensureInstance ( ) ` to improve code readability and maintainability by reducing
[ iotdb - 4021 ] fix delta server time not be expire in some case .
fix : add support for nonstop ( tm ) servlets for javaserver page
added null check for the component form before deregistering animation to prevent potential NullPointerException when the form is not initialized
modified the ` decodeResource ` method to accept an additional ` BitmapFactory . Options ` parameter and added descriptions for drawing bitmaps to enhance functionality
[ java ] use constant for number of message in example to avoid deadlock .
added click handling and linkification for tweets in TimelineArrayAdapter to improve user interaction by preventing multiple clicks on the tweet component
added " text " to the unmodifiable data types in PostgresDatabase and modified conditional checks in NumberType and ColumnSnapshotGenerator to enhance support for numeric
remove ignore annotation from entryprocessorbouncingnodestest ( # 3683 )
updated state checks from hardDeletableState to removableState in AmbariManagementControllerImpl . java and modified error messages in Am
added a null check for the bridge result before adding it to the inbox in CreateBridgeServlet . java and updated the test case in CreateBridge
make crawlserver . updaterobots synchronized to prevent thread safety issue
replaced direct calls to ` getDisplayName ( ) ` with a local variable ` dName ` and added null checks for ` getDisplayName ( ) ` in multiple
updated SpriteBatch constructors to accept a default ShaderProgram parameter and modified shader creation logic to enhance flexibility in handling shaders based on available shader
added multiple options for synchronous commit in TestUtil . java to enable synchronous commit functionality in the application
added element type coercion functionality to the SortedSetTypeCoercer class to enhance type coercion by allowing coercing
updated confirmation logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to differentiate between folder and local favorite confirmations to enhance user experience by providing appropriate confirmation messages
added a condition to check if the character index is less than 256 in URLPathEncoder . java to ensure that the code does not exceed the maximum
do n ' t use hardcoded port number when register fragment in client core node .
updated the expectation for retrieving clusters in HostResourceProviderTest to ensure that the test returns an empty map instead of an empty map
[ hotfix ] remove unused logger parameter in yarnentrypointutils
add validate and repaint method to sipcommframe .
deleted the ` ShadowHtml ` class and updated test assertions in ` HtmlTest ` to streamline code and improve test accuracy
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` implementing ` StarTreeRecordStoreFactory ` to implement a black hole
updated Jetty logger configuration to include additional Jetty - related classes to enhance logging capabilities for HTTP3 and QUIC modules
changed the visibility of the ` addListeners ` method in ` MockSettingsImpl ` and added unit tests for listener validation in ` MockSettingsImplTest
[ hotfix ] [ javadoc ] fix typo in statehandlestore
updated import statements for Constraint from org . eclipse . jetty . util . security . Constraint to org . eclipse . jetty . http . security . Constraint
add a new error message for team not be enroll in 2 different section .
use try - with - resources to avoid potential resource leak
camel - 1145 : fixed the camel - 1145 route test issue of camel - 1145
updated methods to use BuildTarget and CompilerParameters instead of BuildTarget across multiple classes to improve clarity and consistency in handling ABI jar parameters
remove the ` validating - cerficates ` link from the documentation
api : remove unused getpagesizeval from listcapacity
added a case for CLOSED in IteratingCallback . java to handle the CLOSED case to ensure proper handling of the CLOSED state during
added an ` isAuthorized ` boolean field and updated method signatures in ` AccessControlContext ` , ` ProtectionDomain ` , and ` AccessController ` to
updated event handling logic in OSGiDeployer . java to include a check for AbstractOSGiApp type before sending deployment events to improve
added handling for " tiff " codecV and container in DLNAMediaInfo . java to ensure correct MIME type is set for tiff
do n ' t call profilearguments ( ) if the argument be null .
added a new file ` CubocDesktop . java ` and modified ` Map . java ` and ` MapRenderer . java ` to improve application
updated file paths in PolicyMonitorTest to use the target directory instead of the test resource directory to ensure the tests work in the correct directory structure
added a call to remove all files from the trashbinListAdapter in TrashbinActivity to ensure that all files are removed from the adapter
updated the package reference from ` org . eclipse . jdi . Bootstrap ` to ` com . sun . jdi . Bootstrap ` to ensure compatibility
add checkglobalvariablenode to runner for check if a global variable be already write .
updated the ` createLauncherEvent ` method to include an ` Intent ` parameter and adjusted event data accordingly to enhance event data accuracy by associating intent
change max burn amount to a maximum of 10 , 000 , 000 .
replaced specific imports with a wildcard import and refactored the ` snapshotObject ` method in ` UniqueConstraintSnapshotGeneratorSnowflake .
refactor insert statement handling in DMLTransformer . java to improve clarity and logic flow to enhance code readability and maintainability by simplifying the
updated the pgt URL from insecure to secure in ServiceValidateControllerTests . java to ensure the test correctly validates the service ticket with secure
modified the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and adjusted function body handling to improve function name validation and ensure proper
refactor JarLauncher class to improve code organization to enhance maintainability and readability of the code
updated generic type usage in multiple classes to improve type safety and code clarity
fix a classcastexception and add a new operationsetholepunchpacket to the operationsetgtalkimpl class .
added a test method for updating a PostgreSQL object in ResultSetTest . java to ensure proper functionality of date handling in PostgreSQL
updated password reset endpoint to return UNPROCESSABLE _ ENTITY based on email query results to ensure proper response handling when a user has non - U
updated the method of obtaining the properties element from getChildNodes to getDocumentElement to ensure the correct XML element is used for processing properties
refactor caching logic in Cache . java to improve performance and reduce memory usage
rename timeinsec to timemillis to avoid confusion
fix a crash when the light relay bindy be invalid
added a new ` Chainer ` class and updated ` CollectionSubject ` and ` MySubject ` to use it for chaining items to enhance the
refactor Model class for improved readability to enhance maintainability and clarity of the codebase
updated the calculation of recordedTime to include a maximum of 619315200000L to ensure accurate tracking of recorded time in the application
added a check for Windows terminal type in LineReaderImpl . java to ensure proper resizing behavior for Windows terminals
updated log messages and modified host version state logic in UpdateDesiredStackAction . java and RepositoryVersionState . java to improve clarity of log output and
[ java ] move jre and transpiled test to ` ` main ' ' directory .
( chore ) camel - core - maven - plugin : use linkedhashset to maintain insertion order
removed try - catch block around Operation assignment in OperationServiceImpl . java to simplify code and eliminate unnecessary exception handling
reformatted method call for better readability in KnativeEnvironment . java to improve code clarity and maintainability
updated the executor name in CommitLogArchiver from " commitlog _ archiver " to " CommitLogArchiver " to ensure consistency in naming
added connection methods in CloudSolrClient and a test for uploading configurations in TestCloudSolrClientConnections to ensure that uploading configurations are
fix concurrentmodificationexception in breakpoint and debuggersession
added methods to clear files and cache in ShadowContext and updated file handling in RobolectricTestRunner to improve code readability and maintainability by
added LinkedHashSet and TreeMap imports and added style assertions in SecureXStream . java and XStreamPersisterTest . java to ensure proper order and functionality
[ bz - 10286 ] add kiehelper . setKmodulemodel ( ) method to internalkiebuilder .
refactor soil dry check to use Farmland ' s moisture instead of a specific block type to improve accuracy of soil drying based on
added a default implementation for the getLocalIp method in FinishedSpan . java to provide a default implementation that returns null for better usability
updated the method for retrieving the object value from a binary stream in JdbcStepExecutionDao and added a test for storing integer values in AbstractStepExecution
updated comments and variable assignments in AbstractDictionary , WordDictionary , and HHMMSegmenter classes for consistency and clarity to improve code readability and maintain
added " python - gpu " to the resource list and included " python37 " in addition to " libs " in addition to " python
refactor PluginTab to use DefaultTableModel for plugins retrieval and introduce a refresh method to improve code readability and maintainability by encapsulating
updated log level from info to warn for various errors in DefaultHistory . java to improve visibility of error messages for better debugging
cloudstack - 6121 : fix npe in vmwarestorageprocessor when the volume be not attach to a vm
( chore ) camel - sftp : fix the test error of camel - sftp
refactored ExperimentalMockitoJUnitRunner class for improved readability to enhance maintainability and clarity of the codebase
added functionality to retrieve the serial number using a utility method instead of a hardcoded value to improve flexibility and maintainability by centralizing serial retrieval
updated the implementation of the SwapGBuffers class to improve performance and maintainability of buffer management
added a null check for spatial before removing control to ensure that skeletonControl is only removed when spatial is not null to avoid potential NullPointerExceptions
added smart replication functionality to ShadowRanking and updated ReflectionHelpers to utilize RankingReflector for setting channels to improve flexibility and maintainability of
[ java ] do n ' t use lambda for list of segment in archive conductor .
updated the way the carrot2 resources directory is retrieved in CarrotClusteringEngine . java and its test case in CarrotClusteringEngineTest
added null check for testRect in WindowsTreeUI . java and created a new test class bug8004298 . java to ensure robustness against null
updated the ASM API version from ASM7 to ASM9 in the ScriptUtils and CompilationConfig classes to ensure compatibility with newer A
do n ' t return null for null key , throw a tasteexception instead
added client information handling in SurrogateAuthenticationEventListenerTests to enhance test setup by including client information during tests
added a new variable ` isUserView ` and initialized it to ` false ` in ` CardPresenter . java ` to ensure that the user view
updated the method name from ` GraphvizExecutorUtility ` to ` GraphvizUtility ` for diagram availability checks to improve clarity and consistency in
refactored variable declarations for clarity in LogDispatcherThreadMetrics . java to improve code readability and maintainability
added a new module - info . java file for the SQLite connector to define module dependencies and exports for better modularization and encapsulation
added a 500ms delay in StreamResetTest . java to ensure proper synchronization during test execution
removed conditional check for " web . type " and created a new PermissionsManager instance directly to simplify the code and ensure proper initialization of permissions
refactor DateParser and TestDateParser classes for improved date parsing functionality to enhance code maintainability and readability
added a new method ` getDepth ` that returns a default value of 0.5 f in ` SpringLoadedState . java ` to ensure the depth is
updated the data handling logic in BinaryDecoder to use a constant for minimum size and replaced System . arraycopy with Arrays . copyOfRange to improve code readability
[ hotfix ] [ runtime ] fix typo in executiongraph
removed unnecessary swipe layout annotations and updated notification handling in NotificationRenderer . java to streamline notification management and improve UI responsiveness
[ scb - 2423 ] fix npe when convert exception to invocationexception ( # 2424 )
fix checkstyle issue in entity / glowcontainer . java ( # 380 )
replaced MethodHandle with reflection for setting a setter in ProxyMaker . java to improve compatibility with Java ' s reflective access
fix potential integer overflow in mathtest
updated string concatenation in BaseEmailContentFormatter for metrics and datasets to simplify string concatenation for better readability and maintainability
added logic to manage layout provided panels in LayoutPanel . java to ensure proper display of components based on layout conditions
updated condition in ServerCallable . java to include a null check for the location to enhance robustness by preventing potential null pointer exceptions
[ hotfix ] [ javadoc ] fix typo in javadoc
added a null check for DSA key parameters in BasicChecker . java and simplified public key generation to improve error handling for missing key parameters
refactor MediaTypeRequestMatcher to use a new method for checking ignored media types to improve code readability and maintainability by encapsulating the
refactor task number handling in LlapBaseInputFormat for clarity to improve readability and maintainability of debug logging
added properties to the SpringBootTest annotation in EventServiceTests . java to allow bean definition overriding in tests
added a null check before closing the indexReader to avoid potential NullPointerException when indexReader is not initialized
removed the ' service ' package from multiple Java files to simplify the package structure and improve encapsulation
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest . java ` to ensure rendering of code with no
added a new file ` CompatibilityTest . java ` to test compatibility of properties from XML to ensure compliance with Java ' s DTD specifications
added VariantComponentsModule , PushUtils , and SecurityUtils classes to implement utility functions for push registration and security in the application
fix intermittent test failure in rebalancer
bump version to 2.7 . 0 and update release note
log4j2 - 1342 fix line separator issue on window
improve error message when apr connection time out or timeout occur .
added default values for friction , density , and isSensor in FixtureDef . java to ensure default values are set for proper functionality
[ te ] remove fetchsaclingfactors call in anomaly classifier and task runner
added a try - catch block for shell command execution in LauncherInstrumentation . java to handle potential IOException during broadcast idle waiting
added unit tests for font and link tags in ResourcesTest . java and modified the span calculation in ResStringPool . java to ensure correct handling of
fix checkstyle issue in stats component
added call phone permission handling in Launcher . java to ensure users have the necessary permission before starting a call activity
updated return value in SimulationPanel and modified methods in SimulationEngine , BasicEventSimulationEngine , and Startup classes to include FlightData as
refactor GeoPointQuery and GeoEncodingUtils to simplify byte handling and improve readability to enhance code maintainability and simplify byte manipulation logic
added a synchronized method ` isDockerAvailable ( ) ` to the ` DockerClientFactory ` class to provide a way to check if the Docker client
removed the static final String VPX constant from CodecTypes . java to simplify the code and improve maintainability
added a ` coordinatorAddress ` option to the ` DistBuildFactory ` and updated related classes to allow users to specify the remote coordinator thrift server
added path matching functionality to FsUtils and refactored timer usage in WrapTimer to improve code readability and maintainability by centralizing timer
added a condition to check if the value is greater than zero before adding it to the labelValues list to avoid adding unnecessary entries when the value is
fix for ggb - 1815 nullpointerexception in some case
added a test annotation to the TestPerfBenchMarkDriver class to enable testing of performance benchmarking functionality
added a method to set the materialization time in ObjectStore and implemented a corresponding test in TestObjectStore to ensure that the materialization time is
added error handling for UnsatisfiedLinkError in VoskSTTService . java to improve robustness by catching UnsatisfiedLinkError and providing
bug 60564 - jmssampler : remove the is _ one _ world property and make sure the sampler return a response code ok
refactor break weight logic in GlyphView . java to improve readability and maintainability of the code
refactor synchronization logic in RCFile . java to use a configurable checksum length to improve efficiency and maintainability of the code
added an @ AwaitsFix annotation for SOLR - 13028 in AutoAddReplicasPlanActionTest . java to indicate that the test
refactor ToePool to use LinkedList for storing unwounds and processors to improve clarity and maintainability of the code
removed unnecessary parameters from the ` setToSortedDataFlavorArray ` method and streamlined the ` DataFlavorComparator ` constructor to simplify the code and improve
hbase - 14284 testthriftservercmdline should use free port for hbase - testthriftserver
added a check for end of file in RegExpScanner to ensure proper handling of end - of - file scenarios
added logic to enable metrics and timers based on system properties to improve flexibility in enabling metrics and timers based on system properties
fix npe in chatroomjabberimpl . getnickname ( ) if the nickname be null .
do n ' t print the file name if it ' s empty .
refactor refresh token creation logic into a separate method ` createRefreshToken ` to improve code readability and maintainability by reducing duplication
updated error message formatting in BuckConfig . java to improve clarity of error reporting when transforming paths to SourcePath
[ hotfix ] remove unnecessary locking in yarnflinkapplicationmasterrunner
added a method ` nativeGetHardwareBuffer ` to ` ShadowNativeImageReaderSurfaceImage ` that returns a ` HardwareBuffer ` to provide a
updated BTCChinaMarketDataService initialization to set the SSL URI for the polling market service to ensure secure connections to the BTCChina exchange
change cpdtask to use the project ' s base directory when write to a file
added OauthController , Oauth2Plugin , and Oauth2PluginTest classes to implement OAuth access control and plugin testing for OAuth2 functionality
fix typo in semgrex javadoc
added ` flatCollection ` and ` flatCollection ` methods to ` AbstractStreamEx ` and updated corresponding tests in ` EntryStreamTest ` to improve
improve error message when exception to response converter can not be throw .
added support for compatibility with Maven Surefire by allowing scala tests to be run with Maven Surefire to enhance compatibility with Android projects with mixed scala
[ java ] do n ' t try to decode sdp if they do n ' t support it .
updated the ` CreateTableGenerator ` to use ` DatabaseFunction ` instead of ` SequenceNextValueFunction ` for generating database function values to ensure compatibility
added checks for station 3 gml31 and mml32 gml data in NormalizedMultiValuesTest . java to ensure that the correct 
added a volatile boolean field ` wasInvoked ` and updated its usage in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest ` to
added checks for processor configuration before expanding regex mappings and modified return types in ColumnarDataSource and RowProcessor to improve performance by avoiding unnecessary method calls and
updated the ` splitIntoThirtyParts ` method to ` splitIntoThirtySecondsParts ` and introduced a new method ` getPositions
added XLCDCommunicator and XLCDController classes , and refactored FirmwareUtils to use this new class to enhance command handling and
resolve split - packages kie - api - kmodule . xsd and update kiemodulemarshaller . java to use the same schema
added assertions to check if the retry times is not zero and updated conditions in EventQuery001 , EventQuery002 , and EventQuery004
refactor thread state handling in WorkerProcessPoolTest to use a constant WAIT _ FOR _ TEST _ THREADS _ TIMEOUT to improve
updated equals and hashCode methods in DelegatingMethod . java and added a new test class DelegatingMethodTest . java to improve object comparison and ensure
updated constant values for FREEZE , UNFREEZE , and RESOURCE in EnergyCost . java to improve resource management and reduce memory usage
updated the ` command ` method to throw ` ConfigurationException ` and ensured the configuration is saved and reloaded to improve error handling and ensure configuration
deleted the ` SpringTransactionHooks ` class and updated ` SpringTransactionHooksTest ` to use ` AbstractSpringTransactionHooks ` instead to streamline transaction
refactor AbstractClassAssert for improved readability to enhance maintainability and clarity of the codebase
added a new file ` GetUninitializedStringValue . java ` implementing a Java class to demonstrate handling of uninitialized string values in a multithread
added provided dependencies handling in AndroidLibraryDescription and updated related tests in GraphEnhancementQueryEnvironment and GraphEnhancementQueryEnvironment to enhance dependency management and
added a new device flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to allow users to enable
added a boolean flag ` sSavedBugreport ` and modified the logic for saving system anomaly messages to ensure that bugreports are saved
added a constant for " cinepack " format in FormatConfiguration and utilized it in LibMediaInfoParser to support the " cinepack
added camera bobbing capability to the player to allow for customizable camera bobbing behavior
updated the method call from ` data . describe ( ) ` to ` digest . toString ( ) ` in ` GrpcCasBlobUploader .
deleted HSQLDBServerFilesFilter . java and modified TestUtility . java to use FilenameFilter for file filtering to simplify code structure and improve readability
updated condition to check restoreFromSeed and restoreFromKey before returning to ensure both restoreFromSeed and restoreFromKey are validated before proceeding
updated the method for retrieving the latest version from ` getApiDataVideoVersion ( ) ` to ` getApiDataSeriesVersion ( ) ` and
added a check for type existence in the visitMethodInvocation method to ensure only relevant method invocations are processed
replaced hardcoded array size in AmbientCubemap with a static final variable to improve maintainability and readability of the code
add ` ` reset current mode ' ' and ` ` reset current mode ' ' to profiler dialog
added checks for zero values returning ` maskedNumber ` in multiple UDF classes to ensure that only valid masked values return appropriate data types
use temporaryfolder instead of hardcoded file . deleteallrecursively ( )
added itemstack . isitemstackdamageable ( ) and itemstack . gethassubtypes ( ) to check if itemstack can be
fix line state not render correctly ( mc - 167447 )
simonstewart : fix the issue that firefox do n ' t have the ` ` browser . startup . page ' ' setting
added conditions to check for CONNECT and GET methods in Http1xClientConnection . java to ensure proper handling of HTTP connection upgrade scenarios
updated task acceptance from " compile " to " process - classes " in JoobyMojo . java to improve clarity and specificity of the task
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49156
added a check for aggregate function suffix before processing metrics to ensure metrics are only processed if the function name has a suffix
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskView and TaskThumbnailView to use mCurrentFullscreenParams to improve flexibility
added a new Java class named Solution that counts the frequencies of an integer based on user input to provide a solution for determining the frequency of
[ java ] set socketchannel to null to avoid npe .
updated test cases in MutisignOperationerGodicTest . java to improve test coverage for the operationer functionality
added error handling to ` readToStartFragment ( ) ` and ` readToEndFragment ( ) ` methods in ` StaxEventItemReader
refactor ShadowTextView to simplify imports and add null check for qualifiedResourceName in TestAttributeSet to improve code readability and prevent potential NullPointerException
replaced ` com . nimbusds . jose . shaded . json ` with ` net . minidev . json ` in `
added support for AIX architecture in OS detection logic to ensure compatibility with AIX architecture in the application
fix vpc : use router . getcontrolip ( ) instead of router . getprivateip ( )
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` CN ` class to facilitate the invocation of asynchronous tasks without blocking
remove presencemessagecombotests since it ' s no longer in use
replaced integer casting with Math . round for calculations in PortraitPagedViewHandler . java to improve code readability and maintainability by avoiding
[ hotfix ] fix checkstyle violation in kmeansdriver
hbase - 26166 improve the memory size calculation for keyvalue . get ( )
add type converter to the list of service so it can be reuse by other component .
added support for handling conditional tasks in SparkCrossProductCheck to enable cross - product processing of conditional tasks in Spark
updated the handling of profile added and removed actions in Launcher , LauncherAppState , and LauncherModel classes to ensure proper reloading of
updated conditional logic in ` LoginInfoEndpoint ` and added new test cases in ` LoginInfoEndpointTests ` to ensure that the passcode prompt works
hbase - 25827 add assignmentmanager . todescriptivestring ( ) for debug purpose
renamed ` message ` to ` result ` and updated related methods in ` HuobiAccountInfo ` and ` HuobiAccountServiceRaw `
added support for the " PERIOD " keyword in MariaDBDatabase and created a corresponding test in AddColumnGeneratorTest to ensure proper SQL generation for
[ beam - 10278 ] add environment default for portable worker ( # 11715 )
added descriptions for Android 7.2 to inform users of new shortcuts and bug fixes fixes to improve clarity and user experience on Android 7.1
updated the access modifier of NUM _ MILLIS _ IN _ DAY from private to public in TestUtil . java to allow external access to the constant
removed a debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] use aeron client invoker to invoke aeron client in archive and consensusmodule .
updated validation logic in Attr . java and added a new class NoWarnOnImplicitParams . java to improve handling of implicit lambda parameters to enhance type
refactor menu item handling by consolidating hideMenuItem and showMenuItem methods into separate methods to improve code readability and maintainability by reducing du
added additional BTC _ deposit , credit , and payment types to BTCETransHistoryResult to support additional transaction types for BTC transactions
replaced ` List ` with ` Set ` for series and exceptions in ` RetryFilterFunctions . java ` to enhance uniqueness and prevent duplicates in response
mark the PluginLoader class as deprecated to indicate that the class should no longer be used and may be removed in future versions
[ iotdb - 4076 ] fix last query error when unseq time large than seq time
corrected the newline character in the request string appending method to ensure proper formatting of the request string
set slf4j simplelogger . slf4j . simplelogger . org . apache . http . wire to error in buildimagemojo
added a line to set the title bar to a safe area to improve user experience by ensuring the title bar is safe
modified the loop to iterate backwards from the last element of TimeSeriesChunkMetaDataList to ensure correct iteration through the list of TimeSeriesChunkMetaDataList
added SQL ALTER TABLE statement to rename a column and assert its parsing and deparsing to ensure correct SQL syntax for column renaming
change access modifier of copyState method from package - private to public to allow external access to the copyState method
fixed - redissonexecutorservice . executeasync ( ) method throw concurrentmodificationexception
replace hardcoded string ` ` . part ' ' with constant ` ` . split _ file ' ' .
refactor multiple Orc - related classes to improve code organization and maintainability
swapped the order of valueArg and nameArg assignments in CompareFunctionsProcessor . java to improve code readability and maintainability
fix checkavailablediskspace to properly calculate expect disk usage of compaction task
modified the ` toString ` methods in ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to ensure consistent
added a check for INVALIDATED state in AbsSwipeUpHandler and null check for mLastGestureState in TaskAnimationManager to ensure proper handling of
refactor PreferenceManager methods to use instance methods instead of static methods to improve encapsulation and simplify lock timestamp management
refactor artist retrieval logic in MediaInfoParser to use a dedicated method to improve code readability and maintainability by centralizing artist retrieval logic
added a null check for remoteMessage before accessing its data to prevent potential NullPointerException when remoteMessage is null
nifi - 11447 : fix npe in splittext when byte input be empty .
added support for Windows key store type in HttpsConnectorFactory to ensure compatibility with Windows key store configurations
change default check timeout from 400ms to 1000ms for resttemplatesender and webclientsender
added a condition to check if the result code is not FILE _ NOT _ FOUND in FileSyncAdapter . java to ensure that the handling of
added animation functionality to the Slider class to enable dynamic adjustment of slider behavior based on specified duration , duration , and interpolation settings
updated assertions in LineSeparatorProcessorTest to use lineSeparator instead of eol to ensure consistency in line separator comparisons
increased maxWidth and maxHeight from 512 to 1024 in TexturePacker . java to improve texture packing performance and reduce memory usage
added a new test method ` negatedTernaryNotUnwrapped ` to ` UnnecessaryParenthesesTest . java `
camel - hazelcast : fix the issue that camel - hazelcast do n ' t handle null body
added a new test suite ` TextFeedbackTest ` and a corresponding test class ` TextFeedbackTest ` to validate the functionality of the ` TestRunner
replaced Math . round with Float . compare for score comparison in DefaultSolrHighlighter to improve comparison accuracy for score comparisons
updated DPI values in AddAndScaleMultiImage . java and ResourceEditorApp . java to adjust display dimensions and ensure resources are properly closed to
add arrayclasselementoffset to arraycopysnippets so that it can be read from a klasspointer .
do n ' t increment log stage if we do n ' t have it .
add - r option to disable remote scm
updated state determination logic in MieleApplianceHandler . java to include additional states to ensure proper handling of new state transitions in the application
replaced instances of ` StatsLogCompat ` with ` SysUiStatsLog ` for event logging to standardize the logging mechanism across the codebase
rename the logger variable from ' log ' to ' LOG ' in LocalZookeeper . java to improve clarity by using a more descriptive variable name
added tests for serialization of project generation events in EventSerializationTest . java to ensure correct JSON output for project generation events
ggb - 2195 make sure preview point be expand to polyfunction when click on it
refactor JavaCompiler class to improve code organization to enhance maintainability and readability of the code
[ flink - 26411 ] [ test ] log error if there be no time to execute random read
refactor multiple test classes for consistency and clarity to improve maintainability and readability of the codebase
added " -- gc - sections " and " nocopyreloc " flags to the ldflags list in NdkCxxPlatform . java
updated the SpringCloudCircuitBreakerFilterFactory to utilize expanded fallback URIs and added new test cases for URI handling to improve URI resolution and
simonstewart : move the webdriver test to a separate module for the selenium - selenium module .
patch from jason dere from bug # 49156 - avoid potential npe in readsharedstringstable .
added a new method ` getAccountNet ` in ` HttpMethed ` and a corresponding test in ` HttpTestAccount001 ` to enable
added a check for available text width in SwingUtilities2 . java and modified the Look and Feel initialization in Test6635110 . java to
refactor FlatteningIterator to simplify initialization and remove unnecessary parameters to improve code readability and maintainability
remove HTML tags from the title and body in NotificationUtils to remove unwanted HTML tags from the tweet link
doc : generate sample code in the java microgenerator ( # 419 )
added reloadanddeleteanyexistingquestion test to make sure we reload and delete the question
fix bug # 49564 - handle case where first row be not set in the hssf sheet
added permission checks for launcher activities in InstallShortcutReceiver , Launcher , and PackageManagerHelper to enhance security by ignoring malicious intents
[ java ] move session init event from notifysessionopened to sendevent ( ) .
added hashCode method to AbstractParquetMapInspector and simplified equals and hashCode implementations to improve object comparison and ensure proper hash code generation
added logic to flush the buffer when the remote connection is closed to ensure proper resource management and prevent potential memory leaks
modified the SplitReader interface to extend AutoCloseable and removed the close method to enhance resource management and prevent potential memory leaks
removed the ` deepCopy ` method from the ` GsonBuilder ` class to streamline the code by eliminating unused properties
add a static final reference to llsourcemap . not _ found to avoid multiple nullpointerexceptions .
refactor asynchronous file handling in RestClientRequestImpl to use ` thenRunAsync ` for better clarity and efficiency to improve code readability and maintain
updated method call syntax in GrblController . java to improve code readability and maintain consistency
refactored classloader management in MockFactory and added a new SearchingClassLoader class to improve class loading flexibility and maintainability of the code
[ j3me ] add a test to show how to use the drag - to - rotate and drag - to - rotate feature
added LEFT _ SEMI _ JOIN type check in ConstantPropagateProcFactory . java to ensure proper handling of left - semi - join conditions
refactor response handling in HttpReceiver and HttpSender to use HttpStatus . CONTINUE _ 100 instead of a boolean variable to improve code clarity and
rename arraylengthoffset to arrayoopdesclengthoffset for compatibility with graalvm
fix for http : / / issues . apache . org / jira / browse / amq - 4237 - set default policy for test
updated multiple Java files related to BadKdc1 , BadKdc2 , BadKdc3 , MaxRetries , and Test5653 to
added a check to ensure the application context is running before stopping it to avoid potential errors when the application is not running
changed the return type of the drawItem method from void to GlyphLayout to improve method functionality by allowing the return type of the drawItem method
replaced metric retrieval with a metrics publisher in SpringmvcClient . java to improve metrics handling efficiency by leveraging a dedicated metrics publisher
removed the SAFE _ ACCOUNT _ AGE _ DATE constant and updated the method reference from ` accountAgeWitness1 ` to ` accountAge
reformatted code for consistency and readability in StructureHeader , StructureReader , and StructureReader classes to improve code readability and maintainability
added ResourceUrlProviderExposingInterceptor to the CasWebflowContextConfiguration to enhance webflow interceptor functionality by integrating ResourceUrlProvider
add dexbody . transform ( ) to transform soot ' s return statement .
automation : add new field to enrichruledto ( )
removed the NOFOLLOW _ LINKS option from the isDirectory method in PathResource . java and updated test arguments in AliasCheckerSymlinkTest . java
[ hotfix ] [ table - common ] remove sql dialect from executioncontext
refactor ` rDotJavaPackages ` to ` rDotJavaPackagesSupplier ` and introduce ` hasRDotJavaPackages ` in multiple classes to
added test case for a bug in the api . add a new test case .
set the minimum cross compaction unseq file level configuration in IoTDBDescriptor . java to allow dynamic configuration of the unseq file level for
[ hotfix ] [ runtime ] move activeresourcemanager to activeresourcemanager package
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify that
fix : jarresource . getpath ( ) do not handle path with space
reformatted code for consistency and readability in ExpandableUploadListAdapter . java to improve code readability and maintainability
refactor configuration retrieval logic in RobolectricTestRunner to handle classes hierarchy to improve flexibility in configuring test configurations based on their hierarchy
filter out non - null block and item registry in modelloader
refactor AbstractDataListener methods to use default implementations and update WebSocket connection handling to improve method visibility and ensure proper websocket connection management
updated JSONPojoConvertor to handle enum types and improved assertions in JSONPojoConvertorTest to enhance functionality and ensure correct handling of enum types in
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper . java ` to inform users that the option is
updated GWTRequestWrapper to use ByteArrayOutputStream instead of String for originalPayload to improve memory efficiency and simplify the parsing process
added orientation correction functionality to the GyroControl class to enhance sensor accuracy based on device orientation changes
update BIOME _ LIST _ SIZE to use the length of biome gen array instead of a hardcoded value to ensure the biome list size
replaced instances of ` println ` with ` print ` in multiple test methods and interfaces to ensure consistency in method naming and improve code readability
removed duplicate declaration of the Environment variable in FileCompilerConfig . java to streamline code by eliminating redundancy
added a new interface ByteToLongCollector in the package com . speedment . common . function . collector to provide a standardized way to convert
added a preloading option to MMapDirectoryFactory to control loading behavior based on user input
added custom metrics for enabled components in BukkitPlatform . java to provide detailed insights into component status for better debugging and monitoring
refactor QuickConnectREST class to improve code organization to enhance maintainability and readability of the code
added aspect ratio and default card image in CardPresenter . java to enhance visual consistency and provide a default image for the card
[ scb - 2426 ] do n ' t count implicit authentication method and use the login page url if it ' s not implicit
updated the handling of ` longValues ` , ` doubleValues ` , and ` decimalValues ` to use ` EMPTY _ LONG _ ARRAY `
added tests for System . nanoTime ( ) with warmup phase in the TimeChangeTest class to ensure accurate measurement of the System . nanoTime ( )
trim whitespace from input lines in MultiPartFilter . java and print the parameter in MultipartFilterTest . java to ensure proper handling of null values
fix entity . getexperiencedropevent not fire when the player leave an experience drop ( # 7958 )
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to use a dedicated text file to improve user experience by providing clearer feedback on
[ hotfix ] [ table - planner - blink ] remove unsupportedoperationsvisitor in beamqueryplanner
added RdepsFunction and modified methods in GraphEnhancementQueryEnvironment for improved dependency retrieval to enhance the functionality of GraphEnhancementQueryEnvironment and
refactor character handling methods in Character . java to improve code readability and maintainability
added logic to scale the entire rocket based on the component type to ensure the selection option is only set for non - entire rocket stages
updated assertions in UpdateableResultTest to remove unnecessary Arrays . toString ( ) calls to improve code readability and maintainability
fix the issue that offline and realtime query do n ' t return time boundary for hybrid table
fix the ajp / http connector to add socket to the poller
fix 8muses ripper to download full size image .
replaced calls to ` mDevice . wait ` with ` TestHelpers . wait ` across multiple test files to standardize the usage of ` TestHelpers
added a condition to check if the profile is a phone and not in landscape layout to ensure proper layout handling for phone devices in landscape orientation
replaced ` getValue ( query , PROPERTY ) ` with ` query . unwrap ( QueryImpl . class ) ` in ` PartTreeJpaQueryIntegrationTest
replaced ` Files . readAllLines ` with ` subsystem . readMatchingLines ` and added a new method ` readMatchingLines ` to improve
added dynamic check for the result stream method in JpaQueryExecution . java to ensure the correct method is invoked for JPA query execution
updated condition to check for null values in PhysicsProcess . java to improve robustness by preventing potential null pointer exceptions
add a test to ensure that entry processor clears map when value attribute be indexed
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 , issue #
[ hotfix ] [ test ] fix a bug in the html message in utilstest
disable normalization when no value be provide in the text
updated the scratch path format in Aapt2Link . java and added a recursive step to enhance link tree management by ensuring the correct scratch path
replaced usage of ` Capture < > ( ) ` with ` Capture . newInstance ( ) ` in multiple test files to improve code readability and maintain
ggb - 205 update selection after clear all geos
change exception handling in ysldvalidator to catch emptystackexception and throw runtime exception instead
added an implementation of the ` isCanceled ( ) ` method to the ` BehaviorCall ` , ` Calls ` , and ` ExecutorCall
refactored the ` isAnnotationPresent ` method across multiple classes to use a default implementation to improve code consistency and maintainability by centralizing annotation checking
added a default implementation of the ` removeAllWidgets ` method in the ` UILayout ` interface to indicate that the method is not yet implemented
[ hotfix ] fix yarnsessionfifoitcase and yarnsessionfifoitcase
add a check to ensure output size do n ' t exceed input size .
added logic to decide whether to force a transcoding of high - resolution content in PlaybackController to ensure proper handling of high - resolution video content
[ hotfix ] [ table - planner - blink ] make readsourcetranslatormockbatch static
updated GpsLoggingService to manage network and cell tower preference listeners more effectively to improve flexibility in managing network and cell tower preferences
updated the ` putString ` method to use ` byte [ ] ` instead of ` boolean [ ] ` and modified the ` isWide ` logic
added support for BaseItemDragListener in FolderIcon to enable drag - and - drop functionality for better user experience
add a method to create empty artifact with parent folder if it ' s not a string .
reformatted code for consistency in RabbitMQPublisherImpl . java to improve code readability and maintainability
simplified the condition for verifying the video link in VideoViewerActivity . java to improve code readability and maintainability by reducing complexity
camel - 14284 : camel - sftp should compact the path before create a new one in camel - sftp
fix flaky test in camel - weather
updated variable name from ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and maintainability by using a
fix a bug where double plant can be place in the wrong place .
replace setFocusable ( false ) with setRequestFocusEnabled ( false ) in TranscodingTab . java to enable request focus for better user experience
cloudstack - 6339 : throw an exception instead of silently swallow it .
refactor license handling in DB2TestSystem and update imports in DockerDatabaseWrapper and TableIsEmptyGenerator to improve code clarity and ensure proper
refactored unit management in DoubleModel and GeneralOptimizationDialog to use a setter method to improve encapsulation and maintainability of unit handling
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support trading operations for BTC and ZMW
added a mechanism to set the number of samples in TestPBRLighting . java to ensure the application uses the correct number of samples based on
refactor tasklets assertions in StepWithSimpleTaskJobParserTests for consistency to improve code readability and maintainability by reducing redundancy
changed variable declarations to be final in CentralAuthenticationServiceImplTests . java to enforce immutability and improve code clarity
use ggbabs ( ) instead of ggbabs ( ) for good performance
added multiple calls to ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer . java ` to streamline the process of adding service tasks
[ drools - 5623 ] fix biginteger coercion of bigdecimal in executable model
added a comment to hide the " org . eclipse . jdt . " class by Jetty to improve security by preventing the use of Jetty '
modified the return value of the useAuthCache ( ) method in NegotiateAuthentication . java to always return false to simplify the authentication process by
updated namespace assignment to capitalize the first segment to ensure consistent naming conventions
added directconsumernotavailableexception for backward compatibility
added a null check for ` zooKeeper ` before setting it to ` null ` to prevent potential NullPointerException when accessing ` zooKeeper `
corrected formatting of the progress bar message in Loader . java to improve readability of the progress bar
replaced direct vibration calls with UI helper thread execution in AllSetActivity . java to improve code readability and maintainability by using a dedicated
added a method to update the last remote stream ID in HTTP2Session to ensure the session correctly reflects the latest remote stream ID
fix issue with text anti - aliasing in editor header and toolbar
[ java ] : do n ' t increase window size in the driver publication when the window size be too small .
refactor : remove static import of enums in ctannotationimpl . java ( # 2099 )
fix typo in exoplayer javadoc
replaced the implementation of getRGBPixelImpl with a call to getRGBPixels using a Rectangle object to improve accuracy in retrieving pixel values from a rectangle
added a new method ` newPrintStream ` to handle custom encoding for PrintStream to improve flexibility in encoding configuration for output and error streams
updated vibration duration from 1 millisecond to 25 milliseconds in TouchableMovementMethod . java to improve the responsiveness of the user interface
fix checkstyle issue in com . google . appengine . api . datastore . appenginesqlcloudsession
reformatted constructor calls in WebSocketClient for consistency to improve code readability and maintainability
simonstewart : make the i18n test work again
update bytecodeparser error handling to load constant error instead of illegalargumentexception
( chore ) camel - xml - workflow : restore auth system state after test
added a new ` LowercaseComparator ` class to compare string values in the ` CoNLLUFeatures ` class to enable case - insensitive comparison of
refactor JavadocTool to improve source file handling and logging to enhance code readability and maintainability by reducing redundancy and simplifying parsing logic
simonstewart : add a test for the option . toggle ( ) method that throw an exception if the option be not in a multi
added a check for the length of keys in HighestKvno . java to ensure that the number of keys matches the expected number of keys
added error handling for retrieving attributes in HDF5BatchReader to improve robustness by logging a warning when only Huge objects with 1 record are
update bigqueryio to extend writeresult instead of pdone . in ( )
fix createtemplaterequestentity and processgroupresource to support template file upload
added a new file TestMultiANewArray . java to implement a test for multi - dimensional array initialization in a ClassWriter
cloudstack - 7136 : remove config option secondary . storage . vm from cloudstack - management . xml
refactor block ID retrieval logic in SyncBlockChainMsgHandler to use a local variable for headNum to improve code readability and maintainability by
added theme setting to the content of the preview tab to ensure the preview tab reflects the user ' s preferences
added null check and closing logic for the reader to ensure proper resource management and prevent potential memory leaks
added a test for HTTP idle time in ConnectorTimeoutTest . java to ensure proper handling of idle timeout scenarios in the HTTP client
add property to allow user to specify dictionary list and signature
renamed ` readIdentifier ( ) ` to ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to improve clarity and
updated JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests to remove unnecessary type casting to improve code readability and maintainability
changed log level from warn to debug in DistributedQueue . java to improve log granularity for better debugging
refactor ColorExtractionService to utilize a new method for retrieving the hotseat palette to improve code readability and maintainability by consolidating
updated imports and added methods for setting default data table entry and cell transformers in TypeRegistry to enhance functionality by allowing customization of transformers
remove assertion that checks if newAvailableSharedShared is less than initShared to simplify code logic by eliminating unnecessary assertions
regenerate with updated copyright year ( # 4382 )
added a private boolean field ` projectGenerated ` and its getter method in ` ProjectGenerator ` , and updated its value in ` WorkspaceAndProjectGenerator
corrected the syntax for checking the presence of the AUTH _ HEADER in the header check to ensure proper handling of authentication headers
added route routes for contact and post contact form in Routes . java and implemented contact form handling in ApplicationController . java and BodyParserEnginePost
guacamole - 102 : change simpleuser . getpermissions to return objectpermissionset .
update RELEASE _ VERSION from 20 to 21 to reflect the latest release version
[ drools - 571 ] fix checkstyle violation in traitfactory
updated SQL query parameters from ` findNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` across multiple classes to enhance filtering
replaced manual resource closing with IOUtils . closeSafely for better error handling to improve resource management and prevent potential resource leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
replace menu . show ( ) with overflowButton . setOnClickListener ( ) to enhance user interaction by allowing click on the overflow button
update failure messages from " is null " and " is not null " to " is non - null reference " and " is not null " to
ggb - 233 fix line height of help button in algebra view
move protobufferutilitiestest to core . util and add test for protobufferutilitiestest
fix divide by width issue with split pane
add support for crossrefs in sub - files to prevent duplicate bibtex entry
[ geos - 7036 ] fix some serialization issue in geoserverfeaturestore and resourcepool
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity by using a more descriptive variable
fix the update of metacontacts in the contact tree when a metacontact be update .
updated import statements from ` org . apache . sshd . server . Command ` to ` org . apache . sshd . server . command `
added a test method to verify the cleanup of the audit log table post parameters by position to ensure that the audit log table is properly cleaned up after
added @ SuppressWarnings ( " unchecked " ) annotation and cast the result of the inject method to Object to ensure type safety and avoid unchecked cast warnings
added regex patterns to handle comments and end - of - line comments in ACLFileParser to improve parsing accuracy and maintainability of comment parsing
updated imports and method signatures in MapRDBFormatMatcher . java and MapRDBSubScan . java to enhance functionality to support dynamic table
added an ` ancestorDimensionValues ` map and updated related methods in ` StarTreeNodeImpl ` and ` TestStarTreeNodeImpl ` classes to enhance dimension
added user unlock state checks in TouchInteractionService , BaseQuickstepLauncher , and RecentsAnimationDeviceState , and refactored closeOpenViews
corrected a typo in the condition from ` widthStr ` to ` positionStr ` to ensure proper handling of position strings in the image processing
refactor the validation logic in PKIXValidator to improve clarity and structure to enhance readability and maintainability of the validation process
[ flink - 20536 ] [ hadoop ] [ test ] add archunit test for the test code
updated package names from ` org . apache . shenyu . integratedtest ` to ` org . apache . shenyu . integrated . test
vpc : fix regression cause by change from skipprojectnetworks to isrecursive
updated JSON element retrieval method from removing an element to retrieving a value from the JSON object to ensure the correct shape type is used in JSON processing
add a way to store undo info when the property be set .
updated the way the ` gradProp ` is retrieved using ` AccessController ` to enhance security by ensuring the property is accessed in the privileged context
updated StreamCloseTest to use Awaitility for awaiting stream size assertions to improve test reliability by allowing more time for stream operations to complete
updated the doAfterFlush method across multiple classes and modified the initialization of perFields in TermVectorsConsumer and TermVectorsConsumer to ensure proper
filter out deprecated configuration property that do not have a level . error
refactor capacity and mask initialization in BiInt2ObjectMap and Int2ObjectHashMap classes to use the length of the array instead of a private
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and modified file renaming logic in Hive to
add some extra logging to parallelniosender to aid troubleshoot
added a null check for the context before creating a new SchemeAndroidIDE instance to avoid potential NullPointerExceptions when the context is null
[ gr - 26465 ] native - image : fix classloading in native - image .
updated method signature from ` void ` to ` List ` in ` SwitchUserAuthorityChanger ` and improved array handling in ` SwitchUserProcessingFilter
refactor JaxrsIntegrationTest to extend from JaxrsIntegrationTestBase and add new integration test classes for Raw and Spring to improve test structure and
refactored isjdbc41compliant to throw sqlfeaturenotsupportedexception in the poolutilities . setquerytimeout ( )
added DataProviders for general and supplementary character tests in XslSubstringTest and SupplementaryCharactersTestData to enhance test coverage for
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter ` and added
added support for the NEXT VALUE function in MariaDBDatabase and modified sequence generation logic in CreateSequenceGenerator to ensure compatibility with different database versions and
updated string concatenation syntax in multiple buffer classes for consistency to improve code readability and maintainability
added TableDataManagerProvider . setServerMetrics ( new MetricsRegistry ( ) ) ) to multiple test files to enable accurate monitoring of server - related
updated the retrieval of the " jsse . enableMFLNExtension " property in SSLExtension . java to include support for additional MFLN
replaced ` ObjectIterator < T > ` with ` ObjectHashSetIterator ` and removed unnecessary constructor parameters to simplify iterator initialization and improve code readability
updated character count in ` Compose . java ` and ` TweetFragment . java ` from 22 to 23 in both ` MainActivity . java
[ hotfix ] add ttl support for cassandra datapoint
modified the ` checkForAndKillXcodeIfRunning ` method to accept an ` enablePrompt ` parameter and updated related logic accordingly to enhance user experience
add a method to retrieve terrain at a specified cell in the terrain grid to enhance functionality by allowing retrieval of terrain based on cell coordinates
added default value handling in annotation processing and created a new file T6665791 . java with Java compiler tests for annotation annotations
added error logging for missing QuestEncryptionKeys . json resource to improve debugging by providing feedback when the resource is not found
modified the return statement to check if push is disabled before calling isPushSupported ( ) to ensure that push support is only returned when not needed
refactor PointValue class to improve code structure to enhance maintainability and readability of the code
removed the signing of the local witness with the private key in BlockUtil . java to streamline the transaction process by eliminating unnecessary signing
modified return logic in FileSystemView to handle empty roots and added security checks in Win32ShellFolder2 and Win32ShellFolderManager2 to enhance
fix a bug in columntext when the last row of the table be split by the last row .
added a SparseArray for undoNotesList and modified note removal logic in ListFragment to improve memory management and manage selected notes more effectively
added persistence and persistence of feedbackquestionattributes and feedbackquestionids to upload backup
added a null check for data in bug8024061 . java to ensure that the method handles non - null data gracefully
ebean - config - remove unused pstmtdelegate interface ( no longer use )
replaced Padding class with Rect in AppWidgetResizeFrame and Launcher classes to simplify padding retrieval and improve code maintainability
refactor multiple static MethodHandle initializations into a static block to improve code readability and maintainability by reducing duplication
refactor ClassGraph and ScanResult classes to improve code readability and maintainability
updated the CountDownLatch variable name from ` latch ` to ` goAwayLatch ` and adjusted the timeout duration from 1000 milliseconds to 2 milliseconds to improve
updated assertions in IterableSubjectTest to use ` hasMessageThat ( ) ` instead of ` getMessage ( ) ` to improve clarity and consistency in assertion
replaced ThreadLocal with a static Workbook instance in multiple classes to simplify the management of the current book variable
added support for checking if a given class is supported and improved error handling in the vote method to enhance flexibility in handling different object types and ensure proper
removed unused imports from DataLoader . java to clean up the code and improve maintainability
added functionality to handle the affected rows in the postUpdateLog method to improve logging by capturing the number of affected rows during the update process
ggb - 221 make sure the scaler ' s width and height do n ' t overlap with the window .
updated foregroundFPS and backgroundFPS values to a fixed value of 60 to ensure consistent frame rate across the application
added ObjectReleaseTracker assertions to HdfsTransactionLog and TransactionLog classes to ensure proper tracking of object releases and prevent potential memory leaks
updated the WebSocket frame handling in DefaultHttpServer . java to use a listener for closing WebSocket frames to ensure proper handling of the WebSocket close event
renamed ` TestApplicationEventListener ` to ` TestApplicationEventListener1 ` and ` TestApplicationEventListener2 ` , and added tests for handling ` OnStateMachine
replaced direct intent creation with a method to set the list background to improve code readability and maintainability by centralizing background color management
updated import statement for StringUtils from Apache Commons Lang to OpenHAB ' s StringUtils and added null check for line in RMEThingHandler . java
added the ` accumulate ` method to the ` JavaUserDefinedAggFunctions ` class to update the accumulator ' s sum and count based on a string
hbase - 13976 addendum fix javadoc warning in hbase - replication
updated VALID _ CACHE _ SET to REGEXP _ CACHE and modified regexp compilation logic to improve cache management and ensure unique regexps are
added a static method ` reset ` to the ` GameThread ` class to provide a way to reset the game thread to prevent potential memory leaks
added a login method to the DigestAuthenticator class that checks the realm and service name to ensure the authentication process does not proceed if the realm matches the
refactor parameter handling in SavedRequestAwareWrapper to use an iterator for merging parameters to improve efficiency and maintainability of parameter management
log4j2 - 1343 fixed bug in log4j2 - configuration and contextinitializer .
replaced the call to ` waitPoint . countDown ( ) ` with ` wakeup ( ) ` in ` CommitLog ` and ` HAService
added a check for Android O compatibility in PhotoViewerActivity and implemented a user autocomplete adapter in Utils to ensure compatibility with devices running Android O and
updated schema info level from minimum ( ) to basic ( ) in SchemaCrawlerTest . java to align schema crawler configuration with new configuration requirements
use bufferedoutputstream instead of directly close the zipoutputstream in savetask .
updated character encoding handling and replaced bytesToString method with UTF - 8 - based UTF - 8 conversion to improve compatibility and reliability of character encoding operations
fix mc - 103516 entity not be able to remove entity from the list
added two new adapter names to the ProbeConfig list to support additional Tomcat container adapters in the configuration
[ drools - 3523 ] fix marshalling of multi accumulate with protobuf ( # 3523 )
removed redundant case statements in NowSearchTerm and SearchTermBuilder to streamline comparison logic to improve code readability and maintainability by reducing redundancy
pdfbox - 4071 : remove ' public ' modifier , a suggest by valerybokov
updated RemoteEndpointServiceAccessStrategy to use Spring Expression Language for HTTP method and headers instead of hardcoded values to improve flexibility and maintainability of
added a new method ` newResponseBuilder ` to the ` SearchHandler ` class to improve code readability and maintainability by encapsulating
added notification for command start in AsyncBackgroundTaskManagerTest to ensure proper handling of command execution during tests
refactored the ` recomputePreviewDrawingParams ` method to ` recomputePreviewDrawingParams ` and added a null check for ` mReference
updated the tokenizer and filter handling in LukeRequestHandler to use CharFilterFactory to improve character filtering capabilities in the analysis process
replaced manual null checks with ParamChecks . nullNotPermitted for plot , generator , and hotspot arguments to improve code readability and maintainability by
added verbosity handling to the JavacStep and ExecutionContext classes to enhance flexibility in logging output based on verbosity settings
added a check to convert the schema to uppercase if the database type is oracle to ensure consistent schema formatting across different database types
log4j2 - 1343 add context class name to log message in test .
added a new file TestShrinkToOneRegion . java containing a main method that performs garbage collection to facilitate testing of region shrinking behavior
updated string splitting method in SandboxTestRunner to use Splitter for improved readability to enhance code clarity and maintainability by utilizing Google ' s
updated context handling in AnalyzingInfixSuggester and added a test for binary context in AnalyzingInfixSuggesterTest to improve
updated attachment handling in PushsaferMessageBuilder to use a local variable for better clarity to improve code readability and maintainability by using a local
chore ( model ) : remove showlabelstats ( ) from modelexplorer
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
changed the FORMATTER function from ` final static ` to ` static ` in multiple test files to allow for dynamic reassignment of the FORMATTER function
updated the ` evaluate ` method in ` UDFRound . java ` to use ` BigDecimal ` and ` RoundingMode ` instead of ` Math `
[ refactor ] remove duplicate code in graaljsscriptenginefactory
changed class access modifiers from package - private to public for Test1 and Test2 classes to allow access to these classes from other packages
updated permission handling in PlayerEventListener to use " deny . no _ enter " instead of " permission . ADMIN _ ENTRY _ DENIED
fix bug in conditionandor , add type conversion to valueset
replaced instances of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` and ` do
fix box2d character controller test so it do n ' t fail on slow machine
added tests for various options related to global and thread buffer size limits in FLIGHT _ RECORDER _ OPTIONS and ThreadBufferSizeExceed
removed assertions for " must be a multiple of 8 " in ObjectAlignment . java and Options . java to simplify the code and improve readability
added methods to extract and validate the target package from the manifest to enhance the functionality of Android instrumentation tests by allowing users to specify a specific target package
refactor DocHelper class to improve code organization to enhance maintainability and readability of the code
updated ` acceptableThrowawayItems ` initialization to use an ` ArrayList < > ` instead of an ` Arrays . asList ( ) ` to ensure a
replace raw type usage with explicit type casting in multiple Java files to improve code clarity and reduce potential type casting issues
reformatted code in MessageHandler . java for improved readability to enhance maintainability and clarity of the code
refactor Inflection class to improve election logic to enhance maintainability and readability of the code
added locale getter and setter methods to EvaluationContext to enable locale management in the evaluation context
removed unused import of Plugin in SummaryPrinter . java to clean up the code and improve maintainability
added a break statement in DrawerActivity . java to ensure proper termination of a switch statement
updated MongoQueryCreator to use a wildcard import and modified debug log message to include the query object to improve code clarity and ensure accurate logging of the
add the ability to configure the logger factory via system property ( xwork . loggerfactory )
adminaddpeerwithp2pdisabledacceptancetest : rename adminaddpeerwithp2pdisabled to adminaddpeerhasnoeffect
make availabilitystatehealthindicator a bean name instead of a bean name
added a concurrent map for local pstore configuration in LocalPStoreProvider . java to improve performance by reducing contention during local write operations
changed the access modifier of the ` deleteFiles ` method from public to private to restrict access to the method for better encapsulation
renamed ` Provider ` to ` ServiceProvider ` and updated related methods in ` ServiceLoaderSpliterator ` and ` TypeUtil ` to improve clarity and consistency in
add try / catch around javainteropreflect . findfield ( ) and javaobjectmessageresolution . setfield ( ) .
added methods to check if two toolchains are created in the toolchainProvider to ensure proper handling of toolchain creation status across different components
do n ' t call removecontext ( ) if the context be already add to the engine
updated the condition checks for the ` fail ` string in ` AbstractCheckDescriptor . java ` to use ` contains ` instead of ` indexOf ` to
updated ` PrebuiltCxxLibrary ` and related tests to use ` exportedLinkerFlags ` and ` exportedPlatformLinkerFlags ` to improve
updated the method name from ` onConfigurationChangedInternal ( ) ` to ` updateRecentsRotation ( ) ` in ` AbsSwipeUpHandler `
updated type checks in multiple classes to use wildcard generics for better compatibility to enhance code robustness and prevent potential runtime errors
update abstractblockchain to use the hash of the new block instead of the original block
( chore ) camel - default : use getstorepathphysic ( ) instead of getstorepathphysic ( )
refactored the initialization of JvmGcMetrics and JvmHeapPressureMetrics to remove unnecessary try - with - resources statement to improve code readability
[ http : / / issues . apache . org / jira / browse / amq - 4237 ] add miss / found stats to compact
datajpa - 363 - deprecate commonquery , jpacommonquery , jpasubquery , jpacommonquery , and jpacommonquery
added methods to check for the presence of system UI objects and execute shell commands for keyguard status view to improve test reliability by ensuring the system UI
changed logger from static to instance - level and changed principals and sessionIds from non - static to final to ensure thread safety and enforce immut
added checks for empty cookieJar and removeAll method in InMemoryCookieStore and NullUriCookieTest to ensure proper handling of empty cookie jar scenarios
add debug log for bonsai value rollback and rollforward
updated the method signatures of ` getText ` to accept ` CharSequence ` instead of ` String ` across multiple repository classes to enhance flexibility in handling text input
[ java ] unignoring a test that be not yet implement .
added error handling for connection closure in SocketConnector . java to ensure proper resource management and avoid potential resource leaks
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update related classes to clarify the purpose of
added synchronization to the heartbeatExecutorService initialization in DbTxnManager to ensure thread safety when accessing the heartbeatExecutorService
refactor ` transformBuildResultIfNotPresent ` to ` transformBuildResultAsyncIfNotPresent ` and introduce a new method ` wrapWithTracingAndCancellation
added a method to update the first line showing when the text is out of the TextArea ' s bounds to ensure the first line is displayed correctly when
added Hadoop Path import and configuration overlays for temporary and staging directories in TestInformationSchemaWithPrivilege . java to ensure proper file path management for
refactor graphics configuration retrieval logic in Component . java to improve readability and maintainability of the code
fix tika - 538 - throw an exception when there ' s an out of memory error
( chore ) camel - core - optimize to reduce duplicate code .
refactor PrintTagList to allow users to specify a model file with a - model option to improve flexibility in parsing models by allowing users to specify
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test case in
add test for eofexception in journalcorruptioneoofindexrecoverytest
[ java ] make startfromtruncatedrecordinglogtest more responsive to cluster readiness .
updated the calculation of the arc variable in LineBorder . java and added a test case in Test4252164 . java to improve the accuracy
fix npe in postgallerytypeimagerecyclerviewadapter when there be no image
updated the DEPLOYMENT _ ID column type from VARCHAR ( 10 ) to VARCHAR ( 10 ) in StandardChangeLogHistoryService
pdfbox - 4071 : update usage message to reference interactive . form instead of fdf
removed unnecessary boolean parameters from index method calls in AlterTableAddConstraint . java to simplify method signatures and improve code readability
added functionality to manage provisional engine instances in QuickfixjComponent to improve engine management and ensure proper handling of engines
added methods for setting and getting mixed content mode in RoboWebSettings . java to enable or disable zoom controls in the application
add corporea block to corporea spark , and make corporea spark work with corporea .
refactor ConnectionFactory to improve code organization to enhance maintainability and readability of the code
added methods ` EnableDisableMenuItems ( ) ` and ` EnableDisableMenuItems ( ) ` in ` GpsMainActivity . java ` to
updated the message for empty favorites from " server search " to " favorites _ filter _ list " in ExtendedListFragment . java to improve
move @ serviceregistry . setting to org . hibernate . testing . orm . setting instead of org . hibernate . testing . setting
updated MotorMountConfigurationPanel to use subpanel instead of this in MotorMountTableModel and modified constructor parameters in MotorConfigurationPanel to improve UI responsive
use system . getproperty ( ` ` line . separator ' ' ) instead of system . lineseparator ( )
added getter and setter methods for creator and subject properties in POIXMLProperties . java and updated test cases in TestPOIXMLProperties . java
removed unnecessary whitespace in the doStop ( ) method call to improve code readability and maintain consistency
[ java ] do n ' t try to read empty cnc file .
rename markedfoo to foocommand and add helper
added functionality to handle JMod - specific class paths in ClassFileSourceImpl . java to ensure proper class loading based on the presence of the JMod
updated ` TreeBackedElement ` , ` TreeBackedEnter ` , and ` TreeBackedPackageElement ` to remove the canonicalizer parameter
replace tokenRequest initialization with PublicTokenRequest in Saml2TokenGranterTest and UserTokenGranterTest to ensure proper handling of request parameters
updated array retrieval in AbstractFromPropertyValueRangeDescriptor to use valueRangeObject instead of arrayLength to ensure correct array access based on the specified value range
added multiple calls to ` zkw . sync ( node ) ` in ` ZKAssign . java ` and ` ZooKeeperWatcher . java `
[ fix ] check if the current context be not the same
[ drools - 3523 ] fix removal of activation from flowgroup when it be not active
added a return statement in HystrixDashboardConfiguration . java to prevent premature exit from execution
[ iotdb - 4076 ] fix droppipeprocedure fail when pipe do not exist ( # 10265 )
remove nightly test from clientqueuedisruptiontest so that it do n ' t hang forever .
refactor ( ctreferenceimpl ) : use new defaultjavaprettyprinter in ctreferenceimpl # getsignature ( )
make validateinstance protect to allow subclass to override
updated imports in GeoPointField , GeoPointTokenStream , TermEnum , and GeoPointInPolygonQuery classes to improve code clarity and maintain
added a new class FakeBuildable and updated OnDiskBuildInfoTest to use it to provide a mock implementation of Buildable for testing purposes
use itemstack . isempty ( ) instead of itemstack . getitem ( ) . isempty ( ) in guiingameforge
rename ` path ` and ` FOLLOW _ path _ in _ createIndexStatement2308 ` to ` timeseries ` and update related references to
added a check to return 0 if the velocity is less than or equal to the EPSILON in TubeCalc . java to ensure that the
replace getbucket ( ) call with storage . create ( ) for gcs and dst
removed the call to blockCloseVertxByName ( " transport " ) in a finally block to ensure proper resource management and avoid potential memory leaks
# 825 - postgres history ddl - add support for sys period in the history table
updated the expected value of the ` checkEngine ` method from 2 to 3 in ` CarrotClusteringEngineTest . java ` to ensure the
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as ignored to mark the test as ignored
replaced ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand . java ` and added ` ParserStateObjectInputStream . java
added null check for changeLog and updated objectQuotingStrategy assignment in ChangeSet . java and DatabaseChangeLog . java to ensure proper handling
updated MetainfoParser method from ` parse ` to ` fromXmlStream ` in ` SliderAppsViewControllerImpl . java ` to improve clarity
deleted the CsrfControllerAdvice . java file to remove unused CSRF token handling logic
updated the endorsed argument formatting and added a method to quote the paths to ensure proper handling of file paths in the compiler output
added scrim animations and modified background handling in the Launcher and AllAppsBackgroundDrawable classes to improve visual feedback during resume from action screen off
updated bitwise shift from 2 to 1 in TypeInferenceUtils . java and added new test cases in TypeInferenceUtilsTest . java to enhance precision
regenerate client with updated copyright year ( # 4382 )
added validation for long and UNC path prefixes in WindowsPathParser to ensure that long path prefixes are only used with absolute and UNC paths ,
simplified MulticastSocket initialization by removing unnecessary parameters to simplify code and improve readability
removed redundant calls to writer . close ( ) in TestWildcard . java to ensure proper resource management and avoid potential memory leaks
clone the ` nBits ` object instead of returning it directly to ensure the original ` nBits ` is not modified externally
fix profilercollector . tostring ( ) so that it can be override by subclass .
refactor the type hint check in MappingMongoConverter to use a dedicated method to improve code readability and maintainability by encapsulating type
added performance measurement to the ` factories ` initialization in ` ProxyMaker . java ` to improve performance monitoring during proxy factory creation
added @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
added exception handling for ConnectException and PortUnreachableException in TCPConnection . java to improve error reporting and provide more context for connection exceptions
refactor reinflateWidgetsIfNecessary method to use the Workspace class for widget management to improve code organization and maintainability by centralizing widget rein
added a new file ` DeleteInsideFileDialogTest . java ` to implement a test for deleting a specified file in a file dialog to verify functionality
update lwjgl abstract display only when renderable be set to false .
added test case for show picture in instructorstudentlistpageuitest
testignorance : allow to ignore test that be only run , only run , and method on environment variable .
removed the pointer parameter from the fling method in ScrollPane . java to simplify the method signature and improve usability
updated QueryDslJpaRepository to handle null pageable case and added a new test for null pageable to improve robustness of query execution
add memorymanager . computememorysize ( ) for fraction ( 0 , 1 ) .
http : / / issues . apache . org / jira / browse / amq - 4237 - increase timeout for test
refactor SnowballAnalyzer to improve code organization to enhance maintainability and readability of the code
updated index management logic in StreamingAggTemplate . java to correctly track and manage previous indices to improve clarity and correctness of the indexing process
improve error message when invocation plugin do n ' t require receiver null check
added a new method ` stream ` to the ` StreamSupplierComponent ` class that computes the intensity for a given table ID to enhance stream functionality
updated log messages and added a retry mechanism for file renaming in MediaMonitor . java to improve clarity of log messages and enhance error handling logic
updated methods in InjectorProxy and StandardInjectorProxy to use ` newInstance ` instead of ` setAccessable ` and added exception handling to enhance flexibility
[ hotfix ] [ streaming ] remove unnecessary close ( ) call from streamingcreatefunction
added test case for unsupported statement in showstatement , createtable , and createtriggers
change return value from null to ImmutableList . of ( ) in AppleTest . java to ensure an empty list is returned instead of null
updated the error message format in NamedSetTest . java from " Deliberate error , to " Quality Distribution , Inc . " to clarify the
added a check for websocketReconnect and refactored connection state management in WebSocketHandler and WebSocketConnection classes to improve connection handling logic and ensure proper state
replaced ` setAttribute ` with ` removeAttribute ` for ` ACEGI _ SECURITY _ AUTHENTICATION _ KEY ` and ` SECURITY
hbase - 25827 testregionreplicareplicationendpoint # testtablewithretries should not try to create a table that do n ' t have
added PMS configuration setup in FormatRecognitionTest . java to ensure proper configuration handling for the PMS instance
cloudstack - 10210 : templateservice . createavadatadisktemplates ( template , templateinfo ) should transition to ready state machine (
updated test classes to use JUnit4 annotations and removed unused imports in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to streamline test setup
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method
updated variable names and modified SQL statements in AppendOnlySchemaIT . java for consistency and clarity to enhance code readability and maintainability by using consistent
added a check to ensure deleted documents count matches the segment doc count to prevent corrupt index errors
add a few more method to the sip logger so that it can be reuse .
updated FilamentFactory . java to use a shorter length for staves with no starting barline to ensure compatibility with staves without starting bar
changed the default value of ` handleFileUploads ` from ` true ` to ` false ` in ` VertxPlatformHttpServerConfiguration ` to
added a test to ensure default CSRF protection matcher allows case - sensitive methods to ensure proper handling of access denied methods in the CSRF filter
[ hotfix ] remove static field in hotspotobjectconstantimpl
replaced ` add ` method with ` addFrequency ` for adding suggestions across multiple classes to improve clarity and consistency in suggestion handling across spell checking components
added a watermark to the metadata in FileIO . java to ensure that the watermark is set correctly during file metadata processing
fix potential npe in sqmctestatement # registercopy ( )
added import statement for java . sql . ResultSetMetaData in QueryCompilerTest . java to facilitate SQL metadata handling in tests
updated command line argument from ` -- out ` to ` -- root ` in JsLibrary . java to include the project filesystem ' s root path
updated slider values in RailButtonConfig from ( - 180 , 180 ) to ( - 180 , Math . PI ) to ensure the slider reflects the
updated the positioning of drawEncloser and changed Timers . run to Timers . run for saving tasks to improve rendering responsiveness
added expression language support to the KerberosProperties class to ensure compatibility with expression language features
removed unnecessary null checks and simplified the setting of held item mount points in ThirdPersonRemoteClientSystem . java to streamline code and improve readability
updated the setupViews method to include ScrimView as a parameter and modified related animation configurations to enhance visual feedback during workspace scrim transitions
[ flink - 20536 ] [ state ] add option to disable periodic materialization
added a ` value ` field with getter and setter in ` ProtocolParameter ` and updated ` List ` and ` ParamTagHandler ` to set its
add a unit test that verify that the head http header be not present in the response
added a new boolean field ` isBumped ` and modified the ` parseDetails ` method in ` CheckRouterAnswer . java ` to handle bump
added a header for the application / x - www - form - urlencoded content type in SwitchToPostInterceptor and SearchRequestUnitTest to ensure proper
refactor EmbeddedClientConnector to improve code organization to enhance maintainability and readability of the code
phoenix - 646 log a warning instead of throw exception in phoenixresultset . setfetchsize ( )
added multiple instances of AndroidNet initialization in AndroidDaydream . java to ensure proper initialization of AndroidNet object
[ ci ] fix typo in llrealtimesegmentdatamanager
removed the ' false ' parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify the method calls
removed the PrefixTreeCodec class from TableMapReduceUtil . java to streamline code by eliminating unnecessary dependencies
added a boolean flag to handle back navigation failure in DesignerActivity and made root variable final in AttrInfo to improve user experience by preventing back navigation when
refactor PushbackInputStream class for improved readability to enhance maintainability and ease of understanding for future developers
make loweringphase abstract so that it can be use from schedule .
updated error message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " in ErrorMessageAdapter . java
add newlines to parsers in Makefiles . java and test rule in MakefilesTest . java to ensure consistent newline handling across different
replaced ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` in ` ReadTask . java `
added setTransformRefresh ( ) and setBoundRefresh ( ) methods in SimpleBatchNode . java to ensure proper refresh behavior during node transformations
remove method . isguaranteedsafepoint in favor of method . isuninterruptible .
added framebuffer size callback handling and refactored window size callback logic in LwjglWindow . java to improve window size management and ensure
updated the translation logic and animation parameters in LauncherAppTransitionManagerImpl . java to improve clarity and functionality of task placement in the user interface
updated the ` LiteralNode ` class to use a more generic type ` NullLiteralNode ` instead of ` NodeLiteralNode ` to improve type safety
added a method to set the file length in CompoundFileWriter , FSDirectory , and IndexOutput classes to improve file handling efficiency and ensure consistent file length
updated AndroidNdkScriptGenerator to handle AndroidManifest . xml and added new AntScriptGenerator and LwjglDebugStarter to
camel - 15836 - camel - aws2 - s3 : use sourcebucket and sourcekey instead of copysource
added permission handling for wildcard role in RuleBasedAuthorizationPlugin and refactored test cases in TestRuleBasedAuthorizationPlugin to improve permission processing and enhance test
updated ZookeeperClientServerRegisterRepository to handle null and empty data fields more efficiently to improve code robustness and maintainability by consolidating data
[ hotfix ] [ test ] remove unnecessary instantiation of deep stub from returnsdeepstubs
added a check to ensure that the call value is not empty before processing to avoid potential ArrayIndexOutOfBoundsException when the call value is empty
updated debug logging format for date parsing failure to improve readability and clarity of log output
updated the ` mapPBEAlgorithmToOID ` method to throw an ` NoSuchAlgorithmException ` and modified the ` PBE _ ALGO `
tmi - tiff : do n ' t throw eofexception if the tiff value offset be too large
added validation for input parameters and improved error message formatting in CommandLineJobRunner to ensure valid job parameters are provided and provide clearer feedback to users
updated assertions in SmtpTests and MailTests to expect " foo " instead of " \ r \ n " to ensure the message ' s content
refactor case statements in ExtendedConnectionDataSourceProxy to use lambda expressions to improve readability and maintainability of the code
refactor LongSequenceGenerator to use AtomicLong for tracking lastSequenceId and introduce AtomicLongFieldUpdater to improve thread safety and ensure accurate tracking of sequence IDs
added a new file Test . java containing a class with a method to compute and print the sum of integers for testing purposes
updated ` minSdk ` and ` maxSdk ` configurations and changed private fields to protected in ` WifiUsabilityStatsEntryBuilder `
added a new file ` Solution . java ` that implements a algorithm for generating permutations of integers based on user input to implement a solution for filtering
patch by jbellis ; review by brandonwilliams for cassandra - 1813
refactor taskbar configuration logic for orientation changes to improve clarity and maintainability of the code
refactor SyncFutureCache class for improved performance to enhance efficiency of future cache operations
updated the DUBBO protocol version from 2.0 . 1 to 2.0 . 2 and adjusted related low response attachments to ensure compatibility with the latest version and
[ java ] uselessstringvalueof : fix false positive in uselessstringvalueof
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the behavior of the
set the target max type shard size for producer to 16mb
added new test cases for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to ensure compatibility with the
refactor CompilationTask to improve code organization to enhance maintainability and readability of the code
updated database parameter handling in DDLTask . java and modified conditional logic in TestSemanticAnalysis . java and DDLTask . java to improve clarity
added a call to execute a new ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase to ensure that the Liquibase change log table is cleared
added version handling and improved path comparison in RestClient and CallPath classes to enhance functionality and ensure accurate versioning of call URLs
updated exception messages and added closed state management in PhoenixDriver . java to improve error handling and ensure proper resource management during the shutdown process
bug fix : remove mislead ' mesurement ' typo ( in javadocs )
added JUnit @ After annotation and file deletion in ConflictsResolveActivityIT , modified FolderPickerActivity to extend AbstractIT , and modified visibility
[ gr - 24427 ] fix read optimization in native - image generation when devmode be set .
fix stringhelper . removeleadingandendingendingquotes ( string ) and add test
refactor keyword handling in JpaQueryCreator and add a new method in UserRepository to improve clarity and maintainability of the code
do n ' t push branch id if we do n ' t have authentication .
added a call to dispatch a new P25Message instance in P25MessageFramer . java to enhance message processing functionality
added checks for null handler before calling checkClosed ( ) in WebSocketImpl . java and created a new test for clearing client handlers in WebsocketTest .
[ scb - 1833 ] fix test to work with new discovery api
updated widget padding retrieval to use internal dimensions instead of resource dimensions to improve accuracy and maintainability of widget padding logic
added ` hideAllApps ` methods to ` TaskbarUIController ` , ` TaskbarAllAppsController ` , and ` BaseActivity
removed the synchronized modifier from the launch method and replaced Thread . sleep with a join method to simplify the launch process and improve thread safety
updated the calculation of the point in the JavaSEPort class to use the canvas ' s coordinates to improve accuracy of coordinate calculations for zoom functionality
replace notificationManager . notify with startForeground and modify foreground notification handling to improve code readability and maintainability by using method references
add a new test case to show that a static final field can be define in a static final class .
hbase - 26165 addendum set hbase . client . retries . number to 3 for testthrifthbaseservicehandler . test
change log level from info to debug in TransactionalMessageServiceImpl . java to reduce log verbosity for debugging purposes
added exception handling for FileNotFoundException in ResourceUtils and changed log level from debug to trace in AbstractCipherExecutor to improve error handling and reduce log verbosity
added a new API endpoint to retrieve ticker information from Bittrex to provide users with access to ticker information for the Bittrex market data
refactored the handling of enum constants in EntityEntry . java to improve code clarity and ensure proper access to enumConstants
( chore ) camel - core - websocket : use object instead of class
updated character set initialization to include additional characters in the clist to improve code readability and maintainability
added stylesheet handling functionality to ResourceService and updated related classes to utilize it to improve stylesheet management and ensure correct content is returned when the stylesheet is
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is cleared before processing new data
changed invokevirtual from ObjectParameterStrategy to PointerParameterStrategy in X86MethodGenerator . java to ensure proper handling of pointer parameters in the virtual address
updated condition in CreateSequenceGenerator to check for CockroachDatabase instead of PostgresDatabase to ensure proper handling of CockroachDatabase
updated condition in ObjectStreamClass to remove the check for " java . lang . String " to simplify the condition for better readability and maintainability
replaced UnsatisfiedLinkError with SymbolNotFoundError in Library . java and created a new SymbolNotFoundError class to improve error handling by providing a more specific error
added logic to create a new SolrDocument based on the presence of only pseudo fields in BinaryResponseWriter . java to improve document handling by using a
added support for PING and PONG cases in WebSocketImplBase and created a corresponding test in WebSocketTest to enhance WebSocket functionality and ensure proper handling
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to ensure proper handling of hyphens in regexp
added dns resolution options to DnsResolverProvider and updated related tests to include a cache parameter to enhance hostname resolution capabilities and improve test coverage for rotational
added @ ConditionalOnClass annotation to TraceMessagingAutoConfiguration to ensure MessagingTracing is only available when the class is present
mondrian : use ` ` . ' ' instead of ` ` . ' ' in sqlquery . quoteidentifier ( )
updated import statements in multiple Java files to reflect changes in package structure to improve code organization and maintainability by standardizing imports
added a condition to handle the ' / ' character in XMLLightweightParser to ensure proper parsing of close tags in XMLLightweightParser
removed the setVisibility ( GONE ) method from TouchCharInput . java to simplify code by eliminating unnecessary visibility settings
added a null check for the current user before comparing IDs to prevent potential NullPointerException when the user ' s ID is null
updated the logic for setting the slot in JSObjectLinker to handle cases where the index is not explicitly set to ensure proper handling of non -
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to initialize the randomStringGenerator with a non - null suffix and simplify
mark the SecurityConfig class as deprecated to indicate that the class should no longer be used and may be removed in future versions
deprecate boolean ( ) method and method ( ) in the utility class
deleted the JoglDebugAdaptor . java file and modified the RocketFigure3d . java and GuiceStartup . java files to remove unused
added ` toString ` methods to ` ExtraFieldPropagation ` and corresponding unit tests in ` AWSPropagation ` and ` ExtraFieldPropagationTest ` classes to
added PendingIntent creation in FileDownloader and FileUploader classes to enable automatic updates to the notification content
refactor the nextOrd method to use a private boolean flag and modify its implementation to improve code readability and maintainability by encaps
refactor DateTimeFormatter class to improve date formatting to enhance readability and maintainability of the code
removed unnecessary try - catch block for class loading in desktopProperties to simplify code and improve readability by eliminating unnecessary exception handling
added validation for null , null , and empty values in the setAdministratorCredentials method and implemented corresponding test cases to ensure proper error handling and validation for
added a constant for maximum width for large screens and adjusted the width calculation based on the available width of the device profile to ensure proper layout handling for
add begin and end render for the sketch window color in psurfacejogl .
refactor Hashing class implementation to improve performance and maintainability of the hashing algorithm
updated the ` accept ` method in ` FileSenderFactory ` to use ` folderPath ` and ` fileName ` instead of ` file ` to improve
updated the ` addToListIfNeeded ` method to include a string resource for user information to improve localization support for user information in the application
removed null check for newType in J . java to simplify the code by eliminating unnecessary null checks
updated ACTIVITY _ START _ DELAY from 500 to 800 milliseconds to improve user experience by providing more time for launching activities
added a static final string ` WEBAPP _ HOME ` in ` SolrJettyTestBase . java ` and updated its usage in `
modified the handling of motor diameter and selectedMotorSet in ThrustCurveMotorSelectionPanel . java to ensure proper reset of the selected motor set
added import statement for BufferUtil and invoked clearToFill method to improve buffer management by utilizing the BufferUtil class
( chore ) camel - test - infra - notification : fix issue with alarm trigger
corrected the casing of LDAP configuration keys from " authorization " to " authentication " to ensure consistency in naming conventions for LDAP groups
fix for http : / / issues . apache . org / jira / browse / amq - 4237 - add delete exchange to clustered
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest
[ java ] do n ' t close the socket if we can not connect to the server .
refactor CompositeHandlerAdapter to improve code organization to enhance maintainability and readability of the code
refactor Quartz2Adapter class to improve code readability to enhance maintainability and facilitate future updates
added a try - catch block around the execution of the lookup method in SulongLibrary . java to handle IllegalStateException to improve robustness by preventing
updated Spring Security schema references from 6.1 to 6.2 in multiple files to ensure compatibility with Spring Security 6.2 features and improvements
updated the ` newNameResolver ` method to use ` Args ` instead of ` Helper ` and modified synchronization logic in ` DiscoveryClientNameResolver `
updated annotation handling in JavacParser and added a new utility method in TestAnnotatedAnonClass to improve accuracy in position handling for non - empty
added " com . sun . naming . internal . " to the CheckPackageAccess class to support internal naming functionality in the package
changed the strict variable from false to true in StaxEventItemReader . java to enable strict mode for item reading
modified the ` readPartition ` method in ` OfflineSorter ` to include an ` isExhausted ` boolean to improve handling of exhaustion
refactor ActionResetingPool to improve code organization to enhance maintainability and readability of the code
added a null check for the XY color mode before converting it to HSB type to ensure correct handling of color modes in both XY and
refactor folder creation and reorder radius calculations in CellLayout . java to improve clarity and functionality of folder and reorder radius calculations
added loading dialog functionality to FileDisplayActivity and removed it from FileDetailFragment and OCFileListFragment to improve user experience by ensuring the loading
added null checks and improved null handling in IdeSnapshot . java to enhance robustness by preventing potential NullPointerExceptions during file operations
updated method calls to use ` Locale . getDefault ( ) ` for case - insensitive comparisons in ` FieldNamingPolicyTest . java ` to ensure
added listeners to the result object in XmlSuite . java to ensure proper listener management during XML processing
added a new method ` loadWithNewGlobal ` to manage global loading to enhance functionality by allowing globals to be instantiated
added JSON serialization and deserialization methods to ` StarTreeIndexSpec ` and updated tests in ` TableConfigTest ` to improve data handling and ensure correct
added ObjectPostProcessorConfiguration import in HttpSecurity , HeadersConfigurer , OAuth2LoginConfigurer , OAuth2LogoutConfigurer , OAuth2ResourceServerConfigurer ,
replace double backslashes with single quotes in file path handling to ensure consistent character replacement across different operating systems
[ jbrules - 3257 ] fix npe in in operator when parent be null
added import for FieldCache and flushed the field cache in TestDistributedSearch . java to ensure that the field cache is cleared when more than one
add test case for message boundary event in multi - instance mode
add resolvestaticcall to jimpleprogrammanager to make it possible to resolve static call .
http : / / issues . apache . org / jira / browse / amq - 4892 - make messagegrouphashbucket count configurable
refactor slot handling in the Secmod class to use integer values instead of boolean to improve code readability and maintainability by using constants for
added a new method ` add ` with an ` Alignment ` parameter and modified the ` startRenderering ` method to return a boolean value to
[ hotfix ] [ test ] ignore unalignedcheckpointitcase
added imports and validated type classes in JDK13Services . java to ensure compatibility with different audio formats in the JDK13Services
added a condition to check if the keyword has already been seen before adding it to keywordToReference to ensure that only unique keywords are added to the
http : / / issues . apache . org / jira / browse / amq - 4237 - fix the size of processorexchangepair
remove unused method and method from the worddictionary
escape special character in flavor telegraf ( fixes # 644 )
add the udp port to the member to allow a different multicast address .
rename the class ` OperatorMulticast ` to ` OperationMulticast ` across multiple files to improve clarity and consistency in the codebase
increased the send timeout duration from 1 millisecond to 100 milliseconds in EventBusTracerTestBase . java to improve test reliability by allowing more time for message sending
added a try - finally block around the node initialization in VertxTestBase . java to ensure proper resource management and prevent potential memory leaks
set cachedeventlistenerregistry to null when destroy sessionfactoryserviceregistryimpl
danielwagnerhall : use jwt token from local storage instead of home page
[ pytorch ] add test for map of tensor in ivalueutilstest
added a task stack change listener to manage the visibility state of the pinned stack animation to improve user experience during pinned animation transitions
pdfbox - 2576 : fix bug in defaultsplitcharacter and add profiling test
camel - 16284 : camel - cxfrm - fix the issue of cxfrmendpoint . setproperties ( ) be call twice .
refactor pending animation handling into a separate method ` endPendingAnimation ` to improve code readability and maintainability
added logging for playTime and modified playTime calculation logic in LauncherAnimationRunner . java to improve debugging capabilities and ensure playTime is accurately calculated
added a conditional check for bailout on exceptions in C1XCompilation . java and introduced a new BailoutOnException flag in C1X
removed hardcoded URL values for signup and passwd in Links . java and updated assertions in IdentityZoneConfigurationBootstrapTests . java to
[ hotfix ] fix typo in slotprofile
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49449
[ geotiff ] add gc _ nodata property to geotiffreader
sulong : fix npe when create the source section of llvmbasicblocknode .
replace direct calls to ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao `
fix intermittent failure in testpathchildrencache . testpathchildrencache . testblockuntilconnected ( )
reformatted code for better readability and added null checks in ArrayTypeHandler to enhance code clarity and prevent potential null pointer exceptions
refactor JakartaRegexpCapabilities to use reflection for retrieving regexp prefix to improve flexibility and maintainability by leveraging reflection for regexp prefix retrieval
update application configuration to use Application class instead of null to ensure compatibility with application - specific configurations
[ jbrules - 2423 ] add test case for npe on mutable global
replaced Preconditions with TransactionUtil for validating asset names , URL , and description in AssetIssueActuator to improve validation checks for asset names ,
fix copypaste for textfield ( not in conels )
[ lgwebos ] improve error message when host property be miss
replaced direct calls to setSeedNodes and setActiveNodes with addAll methods for node configuration to streamline node management and improve code readability
add more logging to basetokenstreamtestcase to help debug the test failure
log4j2 - 1343 add modulus to calendar . cal . calendar . calendar . calendar . calendar . calendar . timebasedtriggeringpolicy
added methods for performing items in ShadowAdapterView and updating findIndexOfItemContainingText in ShadowListView to enhance functionality for clicking items with text
pdfbox - 4892 : fix cast to cosstream , a suggest by valerybokov
graph and pep : add dump for loop scope after method scope
sec - 825 : add test for httpsessiondestroyedevent . getsecuritycontexts ( ) .
added a test to verify the service name change in Zipkin using a manually provided one to ensure that the tracer correctly changes the service name from the
added logging statements to JavaInMemoryFileManager and JavacToJarStepFactory , and modified SpoolMode handling in JavacToJarStep
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` and update related references to improve clarity and consistency in naming convention
increase trylock timeout in clientmultimaplocktest from 4 second to 10 second
added a new parameter ` schemaRegistryCacheCapacity ` to the ` of ` methods in ` ConfluentSchemaRegistryDeserializerProvider ` to enhance flexibility
rename the JCheckBox from remind to checkAtStartup and update tooltips to improve clarity and maintainability of the checkbox functionality
added multiple method checks and refactored NodeGenerator to utilize these methods to improve code readability and maintainability by standardizing method definitions
no effective change - code cleanup - no functional change
added support for prototype property access in ScriptObject to enhance functionality for scripting operations
updated the default read mode from " heap " to " mmap " and modified the ImmutableSegmentImpl return statement to improve performance and enhance logging for
added import for ByteArrayTemplate and modified byte class handling in ArrayTemplateBuilder to enable byte - based template processing for byte array types
added a new ` Hipchat ` configuration class and its corresponding getter and setter methods to ` SamlServiceProviderProperties ` and created ` Cas
replaced ` List < URL > ` with ` Set < URL > ` for ` commandRegistryUrls ` and updated resource loading to utilize a
updated warning log message to include the current context and added debug logging for uncovered HTTP methods to improve clarity of warning messages for better debugging and traceability
added logged - in flag to SftpRepositoryConnector and set logged - in flag in SftpRepositoryConnector to improve user experience by ensuring login is
camel - activemq - remove the transactionmanager from the endpoint so it can be use in the jms component .
fix checkstyle issue in api / vmware / vmwareresource . java ( checkstyle violation )
refactor Timers class for improved performance to enhance performance and maintainability of timer functionality
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in the ` DefaultDefectReporter ` class
deprecated several email tokenizer constructors in UAX29URLEmailTokenizer . java and TestUAX29URLTokenizer . java to streamline code
removed ` Map < Object , Object > ` implementation from ` ScriptObject ` class and updated related assertions in ` ContextTest . java ` to simplify
refactor EventBusMetrics class for improved event handling to enhance performance and maintainability of event processing metrics
[ ds - 4023 ] move getepersonlocale from workflowmanager to i18nutil
use @ initializingbean instead of @ postconstruct for javerstransactionaldecorator
removed unnecessary null check before adding pgTypeName to _ pgNameToSQLType to simplify the code and improve readability
added multiple server assignments for multiple handler instances in ScopedHandlerTest to ensure consistent server configuration across multiple test cases
add log for calltimeoutexception when call time out during wait - notify .
updated the condition to check for empty credentials in RestLoginProcessingFilter to ensure proper handling of empty credentials in the login process
updated permission node check from an empty string to a wildcard string to improve clarity and correctness of permission validation logic
rename ` encoding ` to ` sourceCharset ` and introduce ` setSourceCharset ` method in ` AbstractCompiler ` to clarify the purpose of setting the
changed the data type of postLogin and related methods from byte [ ] to String to simplify postLogin handling by using String instead of byte arrays
refactor GeneralOptimizationDialog to utilize new imports for GenericComponentModifier , FinSet , and FlightConfiguration to improve code clarity and reduce redundancy
camel - 14284 : camel - main - enable context reload by default
updated log configuration parameters in CommonTestUtils . java to standardize logging configuration to improve clarity and consistency in logging configuration
refactor PrologSizeSanityCheck class for improved clarity to enhance maintainability and readability of the code
refactor NearbyListFragment to improve code organization to enhance maintainability and readability of the code
added a check to ensure non - marked non - closeables are marked as supported in RequestBody . java and created a corresponding test in 
kristianrosenvold : do n ' t create bean if no bean be configure
update movementdebugcommands to use default value from prefab instead of hardcoded value
refactor random load balancer method to include a half - length total weight to improve performance and correctness in random load balancer calculations
updated GsonParser and MetricsResourceTest to handle cache string and timestamp zero validation to improve code clarity and ensure proper validation of timestamp values
added comments to the parameters for gcmsort and gcmdir in ApacheHttpClientMediaWikiApi . java to clarify the purpose of the parameter for
replace all instances of ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` throughout ` AbstractSharedSession . java `
replaced ReentrantLock with PipeTaskCoordinatorLock in PipeTaskCoordinator . java and added a new class PipeTaskCoordinatorLock . java to improve thread safety and
add a conditional check for ` robolectric . usePreinstrumentedJars ` in ` DefaultSdkProvider . java ` to improve flexibility in dependency resolution
changed the conditional check from ` ! isSilent ` to ` isSilent ` in ExecDriver . java to correct the logic for handling silent mode
added checks to ensure dynamic fields have a default value and require attributes in IndexSchema to prevent runtime errors when required fields are present
remove unnecessary check for randomlyreadrepair ( ) in storageproxy
replaced ` ImmutableSortedSet . copyOf ` with ` Iterables . transform ` for adding system include roots to streamline import statements and improve system include
refactor AdaptableX509CertSelector to initialize startDate and endDate with default values and add isSKIDSensitive flag to enhance flexibility in handling subject
log4j2 - 1343 use abstractappender . parseint instead of string . parsestring ( )
mark guiscreenevent a deprecate since 1.16 .
fix : remove unused method in categoryeditsearchrecyclerviewadapter
# 136 - add cachetype and cachedata to the servercachefactory . createcache ( .. )
refactor RocketComponent to use a for - each loop for setting properties to improve code readability and maintainability by reducing redundancy
use post instead of docompile to prevent memory leak in javadiagnosticprovider
refactor Task implementation to use a Supplier for improved readability to enhance code clarity and maintainability by reducing boilerplate code
added synchronization to the executor and thread safety in the WanReplicationServiceImpl class to ensure thread safety during concurrent access to the executor and executor
added null checks for ` tPartition . getSd ( ) ` and ` tTable . getSd ( ) ` in ` Partition . java `
simplified lambda expressions in LocalServiceRegistryClientImpl . java and RemoteServiceRegistry . java to improve code readability and maintainability
added a new test class ` FilesTest ` and implemented file deletion methods in ` Files ` to ensure proper error handling and file deletion functionality
removed try - catch blocks around socket closing in ServerSocketAdaptor and SocketAdaptor to simplify resource management and improve code readability
updated class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to ensure
refactor working directory addition logic in Project . java to improve clarity and maintainability of working directory management
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to ensure proper handling of null
changed the access modifier of the String constant from public to private to restrict access and enforce encapsulation within the GeneratedEntityDecorator class
updated Java command lines in SimplePostTool . java for CSV and JSON files to streamline the process by eliminating unnecessary URLs
ggb - 223 fix max / min / max toggle for x = ( 0 , 0 )
added ShutdownThread registration and deregistering in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to ensure proper resource management and shutdown handling
updated condition in Linux . java to check for both null and non - present types to ensure proper handling of cases where the type is null
ensure web application context be clean up after each test to avoid memory leak
added search functionality and improved resource retrieval in RemoteBrowseHandler to enhance user experience by allowing dynamic search based on request URI
removed the visibility of the neutral button from SetupEncryptionDialogFragment to improve user experience by preventing unnecessary UI elements
[ ds - 3523 ] add itemdao . countitems ( ) with includearchived and includewithdrawn parameter to the itemd
updated string concatenation syntax for CREATE VIEW statements and column descriptions in DDLTask . java to ensure proper handling of special characters in SQL statements
added error handling and logging for OAuth2 errors in CheckTokenEndpoint . java to improve error reporting and provide better debugging information for OAuth2 issues
refactor multiple classes related to graphics rendering to improve code clarity and maintainability
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use ` HttpEntity ` and ` HttpMethod ` for HTTP requests and changed subdomain handling
updated dismiss delay from 20000 to 10000 in ExtractionModelFrame . java and DataBrowser . java , and added tooltips in SQLConsole .
improve warning message when use surefire 2.2 . 0 and junit 5
changed exception handling from HumanReadableException to RuntimeException in WorkerShellStep . java to improve error handling by providing a more appropriate exception type
[ hotfix ] [ runtime ] make collectsink and collectsink an experimental annotation
refactor StreamCepstrumSource class for improved readability to enhance maintainability and ease of understanding for future developers
added a check to prevent index out - of - bounds errors in the List . java file to ensure that the index does not exceed the size of
updated assertions in CloneHelperTest to check for Parenthesis instead of OrExpression to improve clarity and accuracy of expression type validation
updated DebugPaste class to include confirmation option and requiredType for DEBUG command to enhance the debug paste functionality by allowing confirmation of the debug paste option
replace calls to ` . get ( ) ` with ` orElseThrow ` in multiple configuration classes to improve error handling by providing clearer exceptions when no
ggb - 154 fix focus in mathquillgggggggb in newradiobuttontreeitem . java ,
updated GoBinaryDescription to replace AbstractDescriptionArg with AbstractGoBinaryDescriptionArg and refactored related imports and method signatures to improve code clarity
updated environment variable retrieval logic in Jooby . java to improve configuration handling for logback classpath
refactor ` SimpleRetryExceptionHandler ` to implement ` RetryListener ` instead of ` RetryListenerSupport ` and introduce ` SecondDummyRetryListener ` to
fix elasticmeterregistry . writecounter ( ) for decimal value ( # 498 )
changed email and author fields to final in Contribution . java and added a constructor that initializes the list of GitCommit objects to improve immutability
replaced a loop with a do - while loop to improve readability to enhance performance and maintainability of the formatting logic
updated the handling of the " elements " field to ensure that the original LinkedList is not an instance of LinkedList to avoid potential ClassCastException when accessing
enhanced exception messages in StaxEventItemReader for better clarity to improve debugging by providing more context about resource requirements
make testmultirendertarget more robust to time .
added null check for currentProfile in DelegatedAuthenticationClientLogoutAction . java to ensure that the application handles cases where the current profile is not found
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure correct namespace declaration handling in the
added BigInteger and DSAParameterSpec to KeyStoreManager for cryptographic operations to enhance security by using cryptographic parameters for cryptographic operations
updated method calls from ` getIndexBuffer ( ) ` to ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
set activiti - 5 engine version in bpmndeployer and test
updated velocity engine properties to use " resource . loaders " and " runtime . strict _ mode . enable " instead of " runtime . references .
added check for attached thread in centrypointsnippets , and refactored iscurrentthread to verifyiscurrentthread to improve thread
updated GenericUDFMapValues to handle null maps and added a new test class for handling null maps to improve robustness of map value retrieval and
corrected the spelling of " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to ensure the test
add an option to set how much oil spout can be generate in the world .
fix . clean - me to work in a directory that do n ' t exist
fix memoryrealm . readxml to use sm . getstring instead of hardcoded string
updated import statements in CRLDistributionPointRevocationCheckerTests . java and removed redundant imports from RegisteredService . java and CRL
added EXTID _ ZIP64 , EXTID _ NTFS , and EXTT _ FLAG _ LMT constants in ZipConstants
refactor ` newFileSystem ` methods to improve file existence checks and error handling to enhance robustness by ensuring only regular files are processed to avoid errors
simplified the layout addition in IfControllerPanel . java to improve code readability and maintainability
updated connection initialization in FailoverUpdateURIsTest . java to ensure proper initialization of the connection object
added Gson annotations for serialized names in ServiceOsSpecific . java to enable JSON serialization and deserialization for better data handling
delete existing database record if it fail to create a new one
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
fix an off - by - one error in getresponsemessage ( )
do n ' t create and destroy the web app context when shut down the admin console plugin .
removed the unregisterHandlers ( ) method from WebSocketImplBase . java to streamline the code for better readability and maintainability
added configuration properties for device ID transformation method , ID table , and log file in IoTDBDescriptor . java to enable dynamic configuration of device ID
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 and added a new DelayingSearchComponent class to increase the number of
updated the condition for mockTsp in TestSignatureInfo . java to check if the error is not null to ensure that the mockTsp condition
remove scriptbuilder . createp2pkhoutputscript ( ) and replace scriptcode with witnessscript
updated the expression to include " / schema / types / fieldType " in addition to " / schema / types / fieldtype " to ensure compatibility with
added a new test class ` OptionCompleterTest ` and modified the return condition in ` Completers . java ` to ensure that ` NullCompleter
reformatted code for better readability in S3Utils . java to improve maintainability and clarity of the code
change the data type of sourcePeerId from String to int across multiple classes to ensure consistent data type usage for peer identification
refactor FtpHelper to improve file upload handling by introducing UploadFile method to enhance code readability and maintainability by encapsulating file
removed unused imports and added alpha values for replyButton in TweetFragment . java to improve code clarity and enhance visual appearance of the reply button
updated the expected timestamp format in AccessLogSupportTest . java to use a mocked AccessLogContext instance to improve clarity and maintainability of the
move testfiles - delete - test to tmp directory to avoid test failure .
removed null checks for subscribers and simplified property change notification logic to improve code readability and maintainability by eliminating unnecessary checks
added null check for marshaller in AbstractSamlObjectBuilder and removed unnecessary initialization in AbstractSaml10ResponseView to improve error handling by providing clearer
replaced printStackTrace ( ) with LogUtil . warn ( t ) in DataBrowser . java to improve error handling by logging warnings instead of printing stack trace
updated conditional check in AssetsController and added new test cases in AssetsControllerTest to ensure proper handling of non - existent files in development
[ hotfix ] add writeoptions to rocksdbkeyedstatebackend in rocksdbkeyedstatebackend
updated the default format string from " value - tag - index " to " value - index " to ensure consistency in label naming conventions
move douglas hint from request to request . gethints ( ) .
enable native secp256k1 , secp256k1 and usenative by default
[ hotfix ] [ test ] rename duclssandbox to sandbox
set the exception to the exchange in case the exchange fail to process the incoming message .
make forwardpropagatetree public so that it can be use from other package
updated the group by clause in the SQL query to use a fixed value of 20ms instead of a fixed value to ensure proper grouping of time values
improve error message when profile activation fails
refactor Style class to improve code organization to enhance maintainability and readability of the code
added functionality to handle back key events in ShareActivity to enhance user experience by allowing back navigation to the app
added a conditional check to skip deprecated fields in Json . java to ensure that deprecated fields are ignored when reading deprecated annotations
added animations for showing and hiding the layout in LauncherFragment to enhance the user experience by providing smooth animations when the layout changes
updated method call formatting in Utils . java to improve code readability and maintain consistency
added Progressable parameter to the createSequenceWriter method and its usages across multiple files to enable progress tracking during sequence writing operations
[ hotfix ] fix typo in sourcecoordinatorprovider
added methods to remove contribution and update panel ordering and colors in ContributionListPanel to enhance the panel ' s functionality by ensuring the contribution is properly
[ hotfix ] fix checkstyle issue in template adapter
added a check to set dPath to the system ' s user . dir if it is empty to ensure dPath defaults to the user ' s
fix e - ac3 sample rate when format . samplerate be not specify
log4j2 - 1334 add mapfilter . filter ( ) method to allow subclass to filter map message
refactor VerificationInOrderWithCallsTest . java for improved readability to enhance maintainability and clarity of test cases
updated the parameter from ` axis . z ` to ` axis . x ` in the ` setFromAxis ` method to ensure correct positioning of
corrected a typo in the constant name from " colelction . delim " to " collection . delim " to ensure consistency with naming convention
add a test case to show how to listen to the connectionstatelistener .
# 5355 - fix documentation for function call with null argument .
refactor one - handed mode checks to use a private variable instead of SystemProperties to improve code readability and maintainability by reducing repeated calls to
removed all running tasks from the window in the AppsCustomizePagedView to ensure proper cancellation of tasks when the window is detached
added support for a dictionary resource in the MorfologikAnalyzer and MorfologikFilter classes to enhance functionality by allowing users to specify a
replaced the count variable with a boolean flag set thrown to false in ResultSetTest . java to ensure that exceptions are properly reported as expected during tests
updated the initialization message to include an empty string instead of " debug " to improve clarity in project initialization messages
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` and updated exception handling logic to use ` AtomicBoolean ` instead of ` AtomicReference < Boolean > `
refactor tooltip text handling in ComponentTreeRenderer to use a dedicated method to improve code readability and maintainability by reducing duplication
increased the timeout duration in the await condition from 5 seconds to 10 seconds to allow more time for the zipkin server to be up before proceeding
make deviantart login configurable
replaced the static array of Google signature keys with constants for GOOGLE _ PLATFORM _ KEY and GOOGLE _ LEGACY to
updated method call from ` solutionBusiness ` to ` createSolutionBusiness ( ) ` in ` ImportDirSolveAllTurtleTest . java `
added a new method ` notifyWindowStateChanged ` to handle window state changes in ` WWindowPeer . java ` to improve event handling for window state
added email description to templateData in EntityGroupKeyContentFormatter and set it in TestEntityGroupKeyEmailContentFormatter to improve clarity and maintainability
updated the method call from ` remove ( sel ) ` to ` data . remove ( sel ) ` to ensure the method uses the correct data object
updated the ` getISO3Language ( ) ` method to return the correct language string based on the length of the locale to ensure the correct language
refactor change log parsing and validation logic in Liquibase . java to improve code readability and maintainability by encapsulating the creation
added a check to return early if the screen pinning is active to improve performance by avoiding unnecessary processing when the screen pinning is active
added functionality to display a description when no chart data is available in the chart to improve user experience by providing clearer information when no data is available
added synchronized methods for head - sent validation in Http1xServerResponse and Http2ServerResponseImpl to ensure thread safety and prevent potential race conditions
fix the issue that nettyresponse do n ' t handle httpresponses with ssl .
added " http " header and modified test parameters in Http2TestBase , TestHttp2Limits , TestHttp2Section _ 8 _ 1 ,
fixed - rlocalcachedmap . get ( pattern , count ) and rmap . get ( pattern , count ) method do n ' t work
camel - 13636 : camel - jpa - fix npe in camel - jpa
corrected the assignment of jumpSpeed from fallSpeed to jumpSpeed in PhysicsCharacter . java to ensure consistency in variable naming conventions
added a condition to check if reparsedFunction is null before processing syntax extensions to ensure syntax extensions only occur when reparsedFunction is not null
updated logger variable names and improved order book creation logic in BitstampPusherService . java to enhance code readability and maintainability by standardizing
added deprecated methods for old segment URIs in FileUploadDownloadClient . java to signal that these methods are outdated and should no longer be used
updated MongoDB retrieval from ` findOne ( ) ` to ` findOne ( filter ) ` to enable filtering of documents based on a specified filter
camel - 14284 : added language test support for predicate failure
added a bound to the alpha value in RecentsView . java to ensure the alpha value is within the valid range of 0 to 1
updated the regex pattern in the Import - Package attribute in ManifestReversion . java to ensure correct processing of the version string for import packages
[ hotfix ] fix typo in datasyncconfiguration
added import for JavaSnippetRepository and initialized JavaSnippetRepository instance to ensure the snippet repository is properly initialized
modified the condition for updating dimensions in StarTreeRecordStoreCircularBufferImpl . java to include a loop for updating sums based on the number of
[ java ] use googleapis . com instead of chromedriver . downloads . list .
camel - pgevent : fix connection leak in camel - pgevent
feedparser : upgrade rome to 1.5 . 0 and feedparser to 1.5 . 0
make sure we pass the content - length header to the transferadapter to the nettyasynchttpprovider
refactor Dialog class to improve readability to enhance maintainability and ease of understanding for future developers
updated the constructor of EnhancedRuntimeException to include a writableStackTrace parameter to streamline exception handling by eliminating unnecessary constructor parameters
fix flaky test in socketappendertest
( chore ) camel - test - infra - endpoint - dsl - remove unused dependency
updated method signatures and exception handling in ByteArray . java to improve compatibility with JDK 8 and enhance error reporting
added a method to disable the input proxy during touch events in RecentsAnimationWrapper . java to improve touch event handling and logging for better debugging
camel - 6770 : camel - restlet - remove @ ignore from camel - restlet test
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method to simplify the method signature for better readability and maintainability
move test module from ` com . hazelcast . tests ` to ` com . hazelcast . test . modulepath `
added source directory retrieval functionality to JavaLanguageServer and JavaServerConfiguration to improve debugging and provide clearer information about the source directories provided
updated menu item identifier from menu _ open _ web to menu _ mute _ hashtags in TweetPager . java to improve user experience by
updated method names and assertions from " nodeIsAncestorOfItself " to " nodeIsNotAncestorOfItself " and " nodeIsNotDescendantOf
fix potential indexoutofboundsexception in worldeditplayer
[ iotdb - 4063 ] fix data loss when insert with partial insert ( # 10265 )
removed extraneous quotes from the closing brace in JavaCompiler . java to improve code readability and maintain consistency
[ hotfix ] [ stream ] remove redundant mailboxexecutor from operator factory
hbase - 25827 allow user to set table state and fix meta on remotewithextrasexception in securetestutil and masterrpcservices
updated method reference from ` meter . getId ( ) ` to ` Meter : : getId ( ) ` and improved debug output formatting to enhance code
updated BlockJUnit4ClassRunner constructor to use the Java class instead of the test class to ensure proper instantiation of the runner with the correct test
updated the parameter in the delete method from remoteItems to lastTimeData to ensure the correct data is processed during the delete process
updated calculation of allAppsCellWidthPx to include allAppsCellPaddingPx to improve layout consistency by incorporating padding
[ hotfix ] [ core ] add a constant for parent - first loggingpatterns
updated references from ` doc ( ) ` to ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure consistency in
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to ensure that the merge operation is
updated the ` Session ` interface to implement ` Closeable ` and modified the ` close ` method to return ` void ` instead of ` Connection ` to
refactor GetLocations class to improve code organization to enhance maintainability and readability of the code
changed exception handling from checking if the exception is not null to checking if the exception is null to simplify error handling and improve code readability
updated exception handling in Contents . java to use a more general catch clause to simplify exception management and improve readability
updated ` GeneratePubkeyActivity ` to extend ` AppCompatActivity ` instead of ` Activity ` to ensure compatibility with newer Android versions and improve
ruby flavor : use quantifier instead of switch for snippet .
changed log level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask . java to
remove the usecaches flag from the nio2 endpoint
updated CasGeoLocationConfiguration to use Resource instead of MaxmindProperties and refactored database reading methods to improve code clarity and maintainability
[ fix ] instructor feedback result page ui test fix for the new helper view .
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter and modified its implementation to include a scan parameter to enhance functionality
removed public access modifier from multiple methods in ApprovalStore and ApprovalsControllerService to enhance encapsulation by restricting access to methods
added a boolean flag to track download status and implemented notification for download progress to improve user feedback during downloads by canceling notifications when downloading is
updated method calls from ` getOpenView ` to ` getAnyView ` in ` TaskbarDragLayerController . java ` and added new methods
updated project version from 1.0 . 11 to 1.0 . 13 and corrected formatting in JFreeChartResources . java to ensure consistency in versioning and
replaced ` yield ( ) ` method calls with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure consistent thread yield behavior
refactor GsonBuilder class for improved readability to enhance maintainability and clarity of the codebase
added null check for centerGeo before adding it to fixedPoints to avoid potential NullPointerExceptions when adding points to circleCenters
remove the option to set espresso home by default
doc ( javadoc ) : fix doclint issue in java . lang . model
refactor DeleteSessionAction to use a private modifier for timeToDieInSeconds to enhance encapsulation and improve code readability
corrected the spelling of " InvalidDocumentStoreApiUage " to " InvalidDocumentStoreApiUsageException " in the exception classes to ensure
updated conditions and result initialization in JoinQParserPlugin , SolrIndexSearcher , and TestJoin classes to improve handling of empty results and enhance test coverage
updated the triggerMediaScan method call to include a file parameter to enhance the functionality by allowing media scans to be executed with the specified file
removed conditional logic for postTestResults and printTestResults in TestRunning . java to simplify test result handling and improve code readability
added custom G - code settings for custom G - codes in MainWindow . java to enhance the functionality by allowing users to specify custom G - code
updated imports and modified the Writer initialization in AdditionalJaxbMappingProducerImpl . java to use UTF - 8 encoding to ensure proper handling of character
refactor JsonElement class for improved readability to enhance maintainability and clarity of the codebase
added imports and initialized exception ignores in TestBadConfig . java to improve test reliability by ignoring specific exceptions during tests
added a method to remove fragments and the action bar in GpsMainActivity to improve the user experience by ensuring the action bar is properly hidden
add a semicolon to the spanish tokenizer in itest
updated ` RemoteMediaHandler ` , ` RemoteRawHandler ` , and ` RemoteRawHandler ` to use ` Range . Byte ` instead of `
updated the file name in VisualizerCanvas . java and modified the bounds parsing in GcodeViewParse . java to improve clarity and functionality of the
added support for new versions " 8.6 . 0 - cfs " and " 8.6 . 0 - nocfs " in TestBackwards
removed redundant line breaks in assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintainability
added a condition to handle cases where the output stage is null and the query is not completed to ensure proper resource management and prevent resource leaks during
fix integritycheck test and remove dependency on jabref . file directory
removed unused import of SolrClient and shardToClient from ChaosMonkey . java to clean up the code and improve maintainability
fix npe in configurationactivator when use database configuration store .
removed unnecessary whitespace in NestedRepositoryTreePanel . java to improve code readability and maintainability
modified the constructor of ExtensionTypeHeader to be public and added validation for the extension type to ensure that the type and length parameters are within the valid
pdfbox - 2576 : do n ' t swallow ioexception
change default value of pushOnShutdown from false to true and add getter and setter methods to ensure consistent behavior of the pushOnShutdown property
added error handling and logging for state machine trigger errors in ReactiveStateMachineExecutor to improve error management and provide better logging for event processing failures
added a new test method to verify that multiple Python executables on a path are correctly set to ensure that the interpreter correctly retrieves the first path
set the default button to the signin button in the InitialAccountRegistrationFrame to ensure the user interface displays the correct signin button
added a new configuration variable ` TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN `
updated error logging statements in RegistrationRestRepository . java to improve clarity and context of error messages for better debugging
move reflectionutils from org . axonframework . util . reflection to org . axonframework . util
added a static method ` listableCollector ( ) ` in ` OidcIdTokenClaimCollector ` and a corresponding test class ` Oid
removed the private ` center ` field from multiple ` Circle ` , ` Ellipse ` , ` Polyline ` , and ` Rectangle ` classes to
updated conditional check for ` pcollection ` in ` RegisterAndProcessBundleOperation . java ` to ensure proper validation of ` pcollection `
updated SslContextFactory to improve SSL context handling to enhance security and performance of SSL connections
[ hotfix ] [ test ] remove hardcoded value in configurationproperties
updated return value in AccessController . java from " access _ confirmation " to " access _ confirmation _ error " to improve clarity and specificity of
[ 3.0 ] fix classloading issue in consumerclassloaderfilter ( # 10718 )
added a new parameter ` copyRowHeight ` and ` resetOriginalRowHeight ` to the ` shiftRows ` method in ` HSSFSheet . java
replaced ` setRolloverIcon ` and ` setRolloverPressedIcon ` methods with ` setRolloverIcon ` and ` setRolloverPressed
refactor grid translation handling in TaskViewUtils and TaskViewSimulator classes to streamline grid translation logic to improve code readability and maintainability by
refactor assertions methods for improved clarity to enhance maintainability and readability of the code
added a check for the ` currentDateTimeFunction ` in multiple database classes to return its value if it is available to improve database performance by avoiding unnecessary
[ scb - 2635 ] make microservice . yaml file relative to the microservice . yaml ( # 2835 )
updated the ` call ` method in ` DigitalWellBeingToast ` and added a ` contentDescription ` method in ` TaskView `
[ iotdb - 505 ] increase the wait time for meta availability in catalogtracker . getmetalocation ( )
updated LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
do n ' t return null for genericitem . gettypeclass ( ) .
added new imports and a test method for fetching post and details projections in BidirectionalOneToOneNPlusOneTest . java to enhance testing
remove extra empty screen from the workspace in Launcher . java and update the search page index logic in LauncherModel . java to ensure search page
updated HashMap and HashSet initializations to use fixed sizes and added null check in IndexedValueMap to improve memory efficiency and prevent potential NullPointerExceptions
updated string formatting in GoogleLineChart and GooglePieChart to use double quotes instead of single quotes to improve consistency and readability of chart data
do n ' t wait for batch in sendingaccountor . sendbatches ( ) if send complete .
added position tracking and logging functionality in WALPrettyPrinter . java to enhance debugging capabilities by providing insights into cell size and heap size
updated the timeout value of the NettyTransceiver initialization from 1 to 0 to allow for more flexible communication timeout during connection failures
sort event before generate report
added a test for CSV line parsing with double quotes in the description to ensure correct handling of CSV lines containing escaped quotes
make sure we do n ' t run the chinese test by default
fixed an issue where the iqhandler and iqrouter do n ' t send message if the recipient be a remote server . jm -
removed the @ JniImpl annotation from VM . java to clean up the code and improve maintainability
updated configuration settings in Fetcher2 . java to use Protocol constants instead of hardcoded strings to improve code readability and maintainability by using
added a condition to check if the media HDR format is not " dolbyvision " in FFMpegVideo . java to
updated package names in the test assertions from " other _ package " to " other _ package2 " to improve clarity and consistency in naming conventions
fixed issue where set world border size would be negative ( # 421 )
hbase - 25836 hmaster # getwalgroupsreplicationstatus should return an empty map if we do n ' t have the regionserver
ggb - 2576 do n ' t open the login dialog if the login event be successful
fix flaky markdataresourceonline method in routingtabletest
changed the access modifier of the FieldAttributes class from final to public to allow access to the FieldAttributes class from other packages
add a test to verify that read erroneous maven project contain a reference
removed unnecessary null checks from the conditional statement in PropertyMap . java to simplify the logic for proto equality comparison
updated the ` getControllerId ` method to accept a ` configId ` parameter and modified relay handling logic to improve code clarity and functionality by allowing
updated session closing method from ` sessionFactory . close ( ) ` to ` session . close ( ) ` to ensure proper resource management and prevent potential
removed the condition checking for refresh refresh in the OidcConsentApprovalViewResolver to simplify the logic for handling consent approvals
removed a debug print statement from Http2SolrClient . java to clean up the code and improve readability
updated BaggagePropagation to use a NoopGetter instead of a lambda expression to improve code readability and maintainability by encapsulating
refactored the conditional on enabled resource chain implementation to improve clarity and maintainability of the code
added a condition to check if the tree root has child nodes in BarrowmanCalculator . java to ensure that the calculation only occurs when there are
updated the input stream used in JBIG2Filter from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` to
updated log messages and added callbacks for intent result listeners in FacebookImpl . java to improve logging clarity and ensure intents are properly restored after successful login
updated the return values in ShadowICU to use a dynamic skeleton instead of a hardcoded string to ensure that the correct datetime format is used
removed KeyguardManager dependency and simplified condition check in TouchInteractionService . java to improve code readability and maintainability by reducing complexity
fix npe when add a disk offering to a volume when it do n ' t exist
updated UtowBodyHandler to use AsynchronousFileChannel for handling file writes to improve performance and reliability of file operations
reformatted code in SigInt . java and SigIntTest . java for consistency to improve code readability and maintainability
ggb - 1616 use prepare ( ) instead of updatebyboundingrectangleresize ( )
change return value from - 1 to 0 in Asset . java to ensure the method returns a valid value instead of - 1
added static final constants for size and mapping functions , and updated lambda expressions in ComputeBenchmark . java to improve code readability and maintainability by
added onRefreshListener to UploadListFragment to notify data changes when the fragment refreshes
change file type from ` file ` to ` path ` in bibdatabasecontext .
refactor access to ` Array ` to use ` get ` instead of ` class ` for accessing elements to improve code readability and reduce potential
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49447
updated error messages to include a period at the end to improve clarity and consistency in error reporting
added a check to return early if the playback state is not PLAYING to prevent further processing when the playback state is not currently playing
replaced ` findByPK ` method with ` findById ` for retrieving ` ServiceComponentDesiredStateEntity ` to simplify the retrieval of ` ServiceComponentDesiredState
refactor Java2TypeScriptTranslator and add InnerClassFieldClash test for handling inner class field clashes to improve code robustness and ensure correct
added support for custom Docker logging and follow - redirection filters in DockerClientFactory and DockerClientProfile to enable customizable logging and logging behavior based
added locking mechanism around display changes in XToolkit . java to ensure thread safety during display changes
hhh - 10183 - fix flaky test in nationalizedscalarquerytest
[ java ] do n ' t call input . close ( ) in case of failure .
change access modifier of storeClassFile method from private to public to allow access to storeClassFile from other classes
removed assertion for NO _ MORE _ ORDS in SingletonSortedSetDocValues . java and added a new test class TestSortedSetDocValues
updated error messages in CGIHandler and added a new method JavaVMCallbackHandler in JavaVM to simplify error messages and improve code readability
added additional characters " \ 033 [ m " and " \ 033 [ 0m " to the string validation logic to ensure proper handling of
use set instead of list to avoid concurrentmodificationexception
do n ' t try to render shaders with no vertex
fix incorectbindingpuzzlefixedtest and add additional test case
replaced ` FileUtil . createData ` with ` FileUtil . createFolder ` in ` MacroService . java ` to ensure the menu is
fix checkstyle issue in util / typesystem . java .
refactor JsonObject class to improve code structure to enhance maintainability and readability of the code
updated the condition for maxIdleTime in SelectChannelEndPoint and adjusted the low resource check in HttpConnection to ensure proper handling of idle times and improve
fix farmlandblock . cansustainplant not use iplantable
added a primary key with sALT _ BUCKETS in QueryDatabaseMetaDataIT . java and modified the query in ConnectionQueryServicesImpl . java to
updated SimpleDateFormat instantiation to use Locale . US and added a new class B6791927 to ensure consistent date formatting across different locales and validate
removed multiple redundant database close calls in DbHelper . java to improve code efficiency and readability by reducing redundancy
increased the timeout duration for polling processes from 1 second to 5 seconds in BatchMessageListenerContainerIntegrationTests to allow more time for data processing to complete
make economyallocationstage constructor optional for tracera .
fix ` ` save search ' ' and ` ` save all ' ' key binding
added a static initialization block for ObjectMapper in DrillTest . java to ensure consistent line separator usage across different operating systems
change windows path to [ / ] and change [ d : / path ] into [ d : / path ]
removed unnecessary Application references and added a static Application instance in BaseTest . java to streamline the application setup process and improve resource management
[ java ] remove unused method in recordinglog . validateexistinglog ( ) .
fix itsystemtest to use errorgroupname instead of groupname
remove travis debug code from testfutoptimizations . testfutoptimizations
added a private boolean variable ` reverseImage ` and updated its assignment in ` CameraManager . java ` to streamline code and improve readability by
updated string comparisons in multiple files to use ` getName ( ) ` method instead of ` equals ( ) ` to improve code readability and maintain
fix mdmmatchlinksvctest and fix mdmmatchlinksvctest
updated JUnit 4 imports and annotations from ` @ Before ` to ` @ BeforeEach ` in ` AuthenticationSuccessListenerTests . java ` to
improve performance of settype . gettype ( )
refactor methods in TypeUtil for improved readability to enhance maintainability and clarity of the codebase
updated triggerTime setting to use LocalDateTime . ofInstant ( LocalDateTime . ofInstant ( ) , TimeZone . getDefault ( ) . toZoneId ( )
added a method ` maybeCreateAbstractMethodErrorThrower ` to handle method error throwing for abstract methods to improve error handling for abstract method errors in
camel - 13157 : simple expression should be valid only for body . ognl and not body . ognl .
removed unnecessary check for empty toExplore in AbstractParser to simplify code logic and improve readability
camel - jclouds : fix the issue that camel - jclouds do n ' t work with camel - aws2 - *
camel - jbang - fix the build error of camel - test
updated conditional logic in ` Check . java ` and added a new test class ` CheckACC _ STRICTFlagOnDefaultMethodTest . java
[ java ] use aeron . context . drivertimeoutms ( 2 _ 000 ) for test .
added a new file ` FileExtensions . java ` that defines file extensions for C++ , C++ , and tcc files to provide a central
replace ThreadLocalDateFormat with a static final instance of DateFormat and modify FORMAT _ THREAD _ LOCAL to simplify the initialization of DateFormat to improve thread safety and
removed deprecated VM deprecated options related to memory limits in VMDeprecatedOptions . java to improve compatibility with newer memory management features
added a displayName field to client properties and updated related classes to utilize it to enhance customization options for clients in different environments
replace RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling for thread interruptions
updated method call formatting in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 15959
fix npe in eventdispatcher # getcapabilities when parent be null
wallettool : remove keycrypterexception from catch block .
added @ Deprecated annotation to SubmitOrderedCompletionService . java to indicate that the functionality is outdated and should no longer be used
updated the handling of hyphenation length in HyphenationTree . java to ensure correct concatenation of hyphenation lengths during string processing
added a delay of 200 milliseconds in IQRegisterHandler . java to allow for a longer processing time during registration
move simpleaccountregistration to a separate package so that it can be use by other plugin .
updated the description of the PARAMETER _ NEEDS _ TO _ BE _ NAMED constant in ParameterBinder . java to correct a typo
added a new boolean variable ` providersChanged ` and set it to false in ` ConfigurationManager . java ` to track changes in provider configurations
added a method to quote identifier tokens in the SemanticAnalyzer to ensure proper handling of quoted identifiers in token processing
pdfbox - 4892 : avoid npe if ' name ' entry be miss , a suggest by valerybokov
updated type casting and removed unchecked warnings in SolrResourceLoader . java to improve type safety and eliminate unchecked cast warnings
updated boundary condition in Window . java to improve hit detection logic to ensure proper handling of hit positions within the window boundaries
added null check for appManifest before accessing its properties to prevent potential NullPointerExceptions when appManifest is null
refactor ConfigurationMetadataGenerator to use a dedicated method for adjusting serialization and deserialization settings to improve code readability and maintainability by consolidating
added userName property and its getter / setter methods to Driver and related classes to enable user identification in the database connection
camel - 14284 : camel - jbang - add setter to the xsltcomponent to allow to configure the xslt component
added HadoopShim dependency and updated related classes to utilize it to enhance compatibility with Tez Hadoop across the application
removed unnecessary variable declarations and simplified enqueue method calls in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to improve code clarity
do n ' t log access event if there be no mapping context
[ java ] do n ' t log message in throughputlogger when the duration be 0 .
updated VM option checks in CompilerConfigFileWarning and ConfigFileWarning classes to use Platform . isDebugBuild ( ) instead of system property retrieval to improve
[ scb - 2426 ] add metric statistic statistic to log ( # 2429 )
updated logback configuration handling in FrameworkLauncherExtended . java to ensure proper resolution of the logback configuration file
updated validation annotations and class names from ` Cas ` to ` DefaultCas ` across multiple files to enhance code robustness by ensuring required parameters are
updated Escaper references from BASH _ ESCAPER to SHELL _ ESCAPER across multiple classes to standardize shell command handling across
[ hotfix ] [ test ] use try - with - resources in test
rename the test class from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to align the test with the new
removed redundant closing brace in RelativeDateFormatTests . java to improve code readability and maintainability
added a method to generate shield addresses in RpcApiService to enable the generation of shield addresses in the network
change return type of readConsoleInput methods from byte [ ] to String across multiple classes to improve performance by avoiding unnecessary byte array conversions
b / 194528425 : remove presubmit and postsubmit from teststabilityrule
updated SolrFragmentsBuilder initialization and added a conditional check for multi - valued fields in DefaultSolrHighlighter . java and updated HighlighterTest . java
modified the ` tryToLogin ` method to accept additional parameters for username and password to enhance security by allowing credentials to be set during the login process
refactored entity death handling in ` HandlerSceneEntityDrownReq . java ` and ` PacketSceneEntityDrownRsp .
( chore ) camel - jms : fix checkstyle issue in jmsproducer
replaced wrapCollection ( parameter ) with a direct parameter in the update method call to simplify parameter handling and improve code readability
added exception handling for IllegalCurrencyException in BTCEAdapters . java to improve robustness by ignoring unknown currency types during execution
[ java ] remove duplicate clientid check from demand subscription .
pdfbox - 4892 : fix typo , a suggest by valerybokov
[ hotfix ] [ test ] add support for create broker and server tenant in test
replaced ImmutableMap . builder ( ) with direct casting of response value to simplify code and improve readability
added a check for non - empty attributes in ProjectWorkspace . java to ensure that only valid attributes are processed
added methods to retrieve project JDK name , type , and language level in AbstractIjProjectConfig and updated related classes to streamline project
changed the log level from Experimenal to Experimental in HiveSessionProperties . java to indicate that optimization should not be applied when bucket count is
added a new UsernamePasswordAuthenticationToken to GrantedAuthorityEffectiveAclsResolverTests and modified test method names for clarity to enhance test coverage and ensure
use typesolver . getsolvedjavalangobject instead of new reflectionclassname ( ) in javaparsertypedeclarationadapter
added button count management to XToolkit to ensure that the number of buttons does not exceed a predefined limit
updated import statement for assertEquals from the test library to the correct package to ensure compatibility with the latest test library version
added a new ` MessagePackFactory ` class and refactored the existing ` newUnpacker ` methods in ` MessagePack . java `
added new biome tags for " is _ desert " , " is _ cave " , and " is _ world " in multiple files to enhance code
rename ` ` present ' ' to ` ` draw ' ' in multiple screen .
updated layout logic in ComponentGroup . java to conditionally set the element UIID based on horizontal orientation to ensure proper UI ID assignment based on the
use matcher . matches ( ) instead of regex . match ( ) to improve performance
replaced ` touchHandler instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput . java ` and ` AndroidLocklessInput
[ java ] close commit position counter in cluster service to avoid deadlock .
add test and documentation for usersite and recordidclass
refactor HttpConverterRegistrar to handle URL parsing and port retrieval to improve error handling and ensure correct port retrieval from malformed URLs
fix : do n ' t update host _ id if the host be allocated or storage _ assigned
replaced the method for obtaining the file length in NRTCachingDirectory to improve efficiency by directly using the file length method
refactor ` JavascriptCompiler ` to use ` JavascriptParser . ExpressionContext ` and modify method signatures to improve code clarity and ensure immut
modified synchronization mechanism in UISettings class to ensure thread safety to improve performance by avoiding unnecessary synchronization
added a check to return early if native text input is active and text editing is active to improve text input handling and prevent unnecessary text input during text
retry if the spanner emulator do not support one transaction .
( chore ) camel - jbang : use diamond operator to reduce boilerplate
updated array type check from double to short in ObjectInputStream and added a new CloneArray class to enable cloning of short arrays instead of doubles
changed the method of retrieving the nonce claim from ` getClaim ` to ` getStringClaim ` in ` OIDCAuthenticationFilter . java ` to
added a condition to check for relationship fields in DCInputSet . java to ensure proper handling of relationship fields in the input set
added functionality to store and manage server slogans in the capabilities table to enhance user experience by allowing users to customize their capabilities
updated the conditional logic for tinting menu items in DrawerActivity . java to improve code readability and maintainability
updated test to use JUnit ' s Assume for exception handling to improve test reliability by ensuring the test only runs if there is a network connection connection
added a check to return early if no symbol events are present to improve performance by avoiding unnecessary processing when no symbols are present
mondrian : fix a couple of test which fail on the ci - server .
added a final variable ` dataProviderHolder ` and a warning log message if the ` dataProviderHolder ` returns an empty array or an iterator to
( chore ) camel - spring - boot : use collections . emptyset instead of collections . empty _ list
update freeplane 9.0 . 0 to 9.0 . 8 , add support for rich selection style
corrected the variable name from ' mass ' to ' restitution ' in PhysicsRigidBody . java to ensure accurate representation of
added AutoFtpActivity to handle FTP sending and success / failure scenarios to provide a structured way to test FTP sending success and failure scenarios
refactor token type handling in BaseSemanticAnalyzer to improve readability to enhance code clarity and maintainability by reducing repetitive code
added methods to get and set component states in ImageViewer , OnOffSwitch , GenericSpinner , and UIBuilder classes to improve component state management and
added a new file ` RemoteExecutionEnabled . java ` and corresponding test cases in ` BuildableSerializerTest . java ` to implement and validate the
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated file reading to use InputStreamReader with UTF - 8 encoding in ImportCsv . java to ensure proper handling of character encoding during file reading
added a method call to assert working score from scratch to ensure that shadow variables are not stale during the scoring process
updated SEMIJOIN _ CONVERSION configuration property from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin .
added SLF4J logging statements to DatagramPacketDecoder , DatagramPacketDelimiterDecoder , DatagramPacketEncoder , and DatagramPacketObjectDecoder classes to improve error handling and debugging
updated file removal logic to use ` removeDirectory ` instead of ` removeFile ` and refactored directory handling in ` FileDisplayActivity ` to
added assertions to validate the presence and presence of transaction hash in the PollingTransactionReceiptProcessorTest class to ensure that the transaction hash is correctly validated
deprecated the ` testConstructSchemaBlackList ` method and updated the schemaBlackList method to ` testDeleteTimeseries ` in ` SchemaRegionBasic
add a check for null samplemimetype in mediacodecrenderer to prevent an illegalargumentexception
replaced instances of ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl ` and ` AbstractJdbc23PoolingDataSource `
added ` @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) ` to the ` @ AllArgsConstructor ` annotation to ensure proper
added SQLFeatureNotSupportedException for unsupported operation for creating an index on a view to indicate future implementation of creating an index on a view
added a new class ` Website ` and updated ` PopulatorImplTest ` to use it to implement Java network type population functionality
added locale setup in BSFormatterTest to set the default locale to US to ensure consistent test execution across different locales
log a warning if there be a bunch of badly download jar in coremods .
updated assertion in MultiPartParsingTest to use Matchers . equalToIgnoringCase instead of containsString to improve readability and maintainability of the test
added checks for single parameter and its tokens in SimpleExprGenerator . java to ensure correct handling of variable expressions in the expression generator
added a volatile boolean field ` createdVertx ` and updated the conditional check in the ` VertxComponent ` class to ensure that the component only
updated writeAttributes method to accept a NodeModel parameter instead of null to improve type safety and avoid potential NullPointerExceptions
updated log messages to use " Synchronized " instead of " Synchroned " and added null checks for currentFile and currentDir to
added a boolean field ` ignoredReadStatus ` to the ` Entries ` class and updated its usage in the ` CategoryREST ` and ` Feed
replaced MavenTestingUtils . getTargetDir ( ) with MavenPaths . targetDir ( ) in multiple test files to simplify resource path resolution and improve
added validation logic for URIRegisterDTOs and updated imports in RegisterServerConsumerExecutor . java and URIRegisterExecutorSubscriber . java to enhance data
updated sound state check in GwtMusic . java to ensure playback only occurs when the sound is not paused
added PERMISSION _ ADMIN _ SUDO _ AREA to Captions . java and modified its usage in MainCommand . java to
updated query options handling in ServerRequestPlanVisitor and refactored test cases to use a dedicated method to improve code readability and maintainability by
updated path comparison logic in ReloadableJava parser input files to use ` getFileName ( ) . toString ( ) ` instead of ` toUri (
refactor assertions in ResourcesTest to use variable names for consistency and clarity to improve test readability and ensure accurate comparison of attribute values
added a new native method ` NMTOverflowHashBucket ` and a new method ` NMTMallocWithPseudoStack ` in ` WhiteBox
[ flink - 20536 ] [ serializer ] migrate javaeitherserializersnapshot to new typeserializersnapshot
updated DEFAULT _ NDOTS to use DEFAULT _ ROTATE _ RESOLV _ OPTION and added ROTATE _ RESOLV
added a call to the superclass associate method in RequestRockerTemplate and a corresponding test in RequestRockerTemplateTest to ensure proper handling of null
pdfbox - 2576 : avoid npe if the value be null
updated XML namespaces from " liquibase / parser / core / xml " to " liquibase . org / xml / ns / dbchangelog " to
move commonmimetypelocator to test . source package so that it can be use by other test .
change default repository version state from INIT to NOT _ REQUIRED across multiple classes to enforce the requirement of a repository version
updated the CompareControl parameters in GenerateChangeLogTask . java to include schema comparisons to ensure accurate comparison of schema types in the change log generation
updated import statements from JUnit to TestNG annotations in TestBackwardAnoamlyFunctionUtils . java to utilize TestNG annotations instead of
added a new file ` ProgressiveJPEGTest . java ` for testing progressive JPEG rendering to implement a new test for progressive JPEG rendering to
fix a materialloader crash when load a material that do n ' t need it .
include 32 - bit architecture in error message for unsupported native - image building .
added a null and empty check for the text before setting the size to avoid potential NullPointerExceptions when the text is empty
updated the calculation of ` readVarInt ( ) ` to use ` readVarInt ( ) % 1 _ 000 _ 000 ` to
added private constructors to PushUtils and ThumbnailsCacheManager classes to enforce immutability and prevent instantiation of utility classes
replaced manual bounds calculation with a call to ` curConfig . getLength ( ) ` to simplify code and improve performance by eliminating unnecessary checks
removed unnecessary casting of dir to MockDirectoryWrapper in TestDirectoryReaderReopen . java to simplify code and improve readability
updated the regex pattern for loading preset files from a wildcard to a regex pattern to improve regex matching for preset files
added accessibility announcement condition in TaskbarStashController and updated variable names in ActivityContext and FloatingIconView to improve accessibility handling and ensure compatibility
replaced calls to Args . getInstance ( ) with RefreshTask . getNodeId ( ) in NodeManager . java to improve code clarity and maintainability by
add targetjdk15 and targetjdk13 to pmdtask so that it can be run on jdk 1.5 .
[ hotfix ] replace powermock with mockito in test
added static PrintStream variables and set error streams to System . err in TestSchemaToolCatalogOps . java to improve error handling by allowing custom output and
hbase - 27347 clear sasl key before create sasl handler ( pengcheng xiong )
updated the constructor of MongoQueryMethod to include RepositoryMetadata as a parameter to enhance the functionality of the MongoQueryMethod class by incorporating
tweak to digester to support different entity resolvers .
removed redundant static imports related to byte constants in MetaDataEndpointImpl . java to streamline code and improve readability by reducing redundancy
updated ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added deadlock handling in TxnHandler . java to increase allowed
refactor ` BarChartActivity ` to use a local variable for ` xl ` and ` xAxis ` for better readability to improve code clarity
added methods to validate character and system system names in FsUtils . java to ensure proper handling of printable characters in the application ' s operating system
rename ` ` in ' ' to ` ` using ' ' in selenide test
added processpluginconfiguration option to projectbuilder and defaultprojectbuilder to allow maven to process plugin configuration .
fix the calculation of traffic amount in the connection manager and server traffic counter .
fix integration test for google - cloud - vision
updated connection handling in multiple classes to return null instead of " STUB " and added remote host retrieval in AuthenticatedUser to enhance connection management by
[ ds - 4023 ] add admin permission to the list of community in the web interface
added ` AtomicInteger ` for longCompactions and shortCompactions in ` CompactSplit . java ` to track concurrent long and short compaction threads
updated the method of obtaining the wallpaper package name from ` getApplication ( ) . getPackageName ( ) ` to ` getResourcePackageName ( ) ` to improve
updated Near . java to include a method for retrieving players in a plot visible to improve user experience by providing visibility information for players in the plot
refactor multiple classes including AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity to improve code organization and maintainability
refactor MlibOpsTest . java for improved readability to enhance maintainability and facilitate future updates
replace string literals for " com . sun . management . internal . OperatingSystemImpl " with a constant OPERATING _ SYSTEM _
updated attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a new test in SchemeGeneratorTest .
simplified the initialization of the encryption key and IV in UploadFileOperation . java to improve code readability and maintainability by reducing complexity
added @ Stability annotation for LOCAL and POSTSUBMIT platforms in WorkProfileTest . java to ensure compatibility with newer platform configurations
removed conditional check for bucketing version in TezCompiler . java to streamline code by eliminating unnecessary checks for bucketing version
updated the method call from ` setCursorPosition ( x , y ) ` to ` input . setCursorPosition ( x , y ) ` to
refactor ` LockFreeBucket ` to extend ` LockFreeBucketContendedTimeMeter ` and introduce ` LockFreeBucket _ FinalFields _ Cache
nodeprobe : print thread pool stats when available
updated max bitrate retrieval to use user preferences to ensure consistent bitrate settings across different user settings
refactor ZipkinHttpSpanExtractor to improve trace and span ID checks using helper methods to enhance code readability and maintainability by reducing redundancy in
do n ' t update user payment account if bsq swap be enable
fix an issue with the right align method in the dart server completion ( # 1076 )
added a line to set the project in LauncherUtils . java to ensure the project is correctly referenced in the file system
updated JsBundle , JsLibraryBuilder , JsTestScenario , JsTestScenario , JsBundleWorkerJobArgs , Js
refactor multiple Java classes related to envelope and databinding to improve code organization and maintainability
[ hotfix ] fix typo in metricsdslcontext
removed the implementation of the VersionConfig interface and refactored its usage in VersionBuckConfig . java to simplify the code and improve readability
added a try - catch block around the bindShadowClass method call to handle TypeNotPresentException to improve robustness by gracefully handling potential type
changed the access modifier of the ` validateTypes ` method from static to public and updated the exception message from " AST " to " LST "
fix : update gapic - generator - java with mock service generation fix ( # 174 )
added SLF4J logger imports to SimulationStatus . java to facilitate logging and monitoring of simulation status
updated the VERSION _ POSITION _ Y and VERSION _ FONT for the Splash class from 138 to 150 to align the splash screen with
updated notification handling in UserInterfaceComponentImpl to run asynchronously to improve responsiveness by ensuring notifications are added on the main thread
added a mock implementation for returning elements in the ReturnsElementsOf class to ensure that the mock returns the expected list of elements
corrected a typo in the error message from " not allowed non - string partition column " to " only allowed non - equality " to improve
added a test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to verify the functionality of handling line - file documents in
added a method to retrieve the version code in MainApp and updated usages in FeatureList and WhatsNewActivity to streamline version handling and
camel - 14284 : fix issue with ambiguous method reference in bean
updated method names from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in tests to ensure consistency in naming conventions for
added buffer ownership checks and disposed unsafe byte buffers in IndexBufferObject and VertexBufferObjectWithVAO to ensure proper resource management and prevent memory
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password reset during login form
refactor JerseyClientConfiguration to improve code organization to enhance maintainability and readability of the code
remove unnecessary class reference in console inbound and consoleoutboundchanneladapterparser . java ( # 1079 )
updated print statements to use ' o ' instead of ' s ' for better clarity and consistency to improve code readability and maintainability by using wildcard
added methods to handle empty arrays in the Table class and adjusted column and row counts accordingly to improve data integrity by ensuring proper handling of empty arrays during
added ` AutoCloseable ` interface and enhanced ` GenericContainer ` with a ` withCustomizer ` method to enable customization of container creation commands
changed log level from info to error in MediaInfo . java and refactored error handling in RendererConfigurationTest . java to improve logging clarity and
added support for the " schemapattern " option in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance database configuration flexibility by allowing users to
do n ' t try to decrypt a null tls session if it ' s null .
updated calculations for ratio and bitmap creation in AndroidGraphics . java to improve accuracy in rendering bounds and ensure proper bitmap dimensions
refactor Base64 encoding methods for improved performance to enhance performance and reduce memory usage
[ gr - 11478 ] add fallback for managed single context and single context assumption .
simonstewart : unignoring a test that fail on the iphone when run on the ipad
refactor FlowBuilder and FlowJobBuilderTests classes to improve code organization and maintainability
replaced the ` resName ` field with ` resId ` in the ` AttributeResource ` class and removed the ` ResEntry ` class to simplify
refactored TLS file handling in DefaultDockerClientConfig and updated DockerContextMetaFile to utilize a new method for resolving context TLS file to improve
use @ before instead of @ after in simplereactiveelasticsearchrepositorytests
modified capture logic in ` Attr . java ` and added a new class ` T6450290 . java ` with generic types to improve type
added logging configuration option to the LoggingFlags and LoggingOptions classes to allow customizable logging levels for better debugging and monitoring
added logging statements to various classes and modified the deleteItemsFromDatabase method to accept a Collection of packages to improve traceability and debugging of package removal
added allFilesOption methods to FileActivity , FileDisplayActivity , and PreviewImageActivity to enhance file handling capabilities in the application
added new overloaded methods for processing operations , matching , and removal in MutationOperationGroup to enhance functionality and maintainability of the code
updated the calculation of ` numPredictiveAppCols ` to use ` isPhone ( ) ` instead of ` numColumns ` to ensure accurate
updated String initialization to use UTF - 8 encoding to ensure proper handling of character encoding in string processing
added RequestMatchers utility class and its corresponding tests to enhance request matching capabilities in the security framework
ggb - 168 fix for drag and drop in applet
adjust position calculations in ProgressBar to account for bgBottomHeight and bgRightWidth to ensure proper positioning of the ProgressBar based on its dimensions
[ native ] use external _ functions . json instead of src / test / resources
[ gr - 14278 ] make some field final in adaptiveargumentmoverhandle . permuteargs ( )
added a condition to check if the state handler is invalidated in the gesture state check to ensure that gesture handling only occurs when the state handler is
updated layout metrics calculations in DynamicGrid and Workspace classes to use constrained dimensions to improve layout responsiveness and accuracy of cell dimensions
added a condition to check if the file is a " / robots . txt " in the HttpRobotRulesParser class to ensure that the correct
add ` ` @ staticresource ' ' for static resource in jbrowsemodule . java and netbeans . java .
updated button subscription methods in AdvancedGameSetupScreen . java from " continue " and " close " to " createWorld " and " return " to
updated null and value checks in UDFOPDivide . java and added a new test class TestUDFOPDivide . java to ensure
reformatted code for consistency and readability in FlowJob and FlowJob classes to improve code maintainability and adhere to coding standards
updated filter configurations in FormLoginBeanDefinitionParser and LogoutBeanDefinitionParser to use a matcher for authentication requests to enhance security by allowing customization of
added onDestroy ( ) method to ShareActivity and ContributionsActivity to unbind the upload service to ensure proper resource management and prevent memory leaks
updated references from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to ensure consistency in referencing the correct thumbnail
refactor multiple Java classes for consistency and clarity to improve code maintainability and readability across the project
added a call to set the request timeout in RaftServerConfigKeys to ensure the RPC request timeout is correctly configured based on the configuration
updated logging level from error to debug and added return statement in TsFileResourceManager . java , and modified test assertions in ResourceManagerTest . java
added setSystemProperties method to MavenModuleLoader to ensure system properties are correctly set for the model source
added readiness check metric and refactored method signatures in the ServerMeter and HealthCheckResource classes to enhance monitoring capabilities for readiness checks and improve code
fix animated torch model not be render in the client side .
added null check before closing the writer to avoid potential NullPointerException when closing the writer
added a method to retrieve Hive configuration from a directory to improve code modularity and facilitate easier configuration management
added a new link to Muting Users in FeaturesActivity to enhance user experience by providing a direct link to the Muting Users feature
added a new property ` jdk . reflect . useDirectMethodHandle ` with a value of ` false ` to disable direct method handle usage in reflection
updated ` SplitOnLeadingVarCharColumnsPolicy ` to extend ` SteppingSplitPolicy ` instead of ` ConstantSizeRegionSplitPolicy ` to align
[ hotfix ] [ yarn ] add lib and plugins folder to ship file
use getword ( ) . getspelling ( ) instead of getpronunciations ( ) in trainerdictionary .
updated JSON string formatting in JsonUtilsTest . java to remove unnecessary newline characters
added extra data for tweet ID in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to ensure proper identification of tweets in
log a warning when a message be terminate due to a lost reliable topic .
throw a more appropriate exception when there be no class to analyze
updated import statement from Key to PublicKey in KeyFetcher . java to align with the new security package structure
updated the initialization of the ` isIncompatible ` boolean variable in ` DLNAResource . java ` to ensure proper handling of the incompatibility
updated the method signature of ` createAccount ` to use ` AccountCreateContract ` instead of ` Account ` to align with the new contract structure for
pdfbox - 4892 : avoid a nullpointerexception if there be no range
resolve http : / / issues . apache . org / jira / browse / amq - 4237 - fix test failure
set off - heap format to OFF _ HEAP and change default version to OFF _ TREE _ FORMAT _ VERSION to OFF _ HEAP
modified title handling in FeedUpdateService to limit the length of the title to a maximum of 2048 characters to ensure the title does not exceed the
updated JColorChooser and BasicColorChooserUI to initialize the previewPanel using ColorChooserComponentFactory to improve flexibility in handling preview panels based on component
changed log level from info to debug for extension checks in DefaultBuildExtensionScanner . java to reduce log verbosity and focus on sensitive information
added a null check for the reusable bitmap before setting inBitmap to avoid potential NullPointerExceptions during bitmap decoding
added layout parameter and getter method to FakeView class to provide access to layout parameters for better view management
added a check for closed Cursor and implemented a test for iterator method in CursorSimpleTest to ensure that IllegalStateException is thrown when a cursor is already
pdfbox - 4892 : avoid a classcastexception , a suggest by valerybokov
camel - aws2 - jms : ignore fail test due to time issue
http : / / issues . apache . org / jira / browse / amq - 4237 - add ts field to message class
refactor genericexceptionmapper to use custom exception mapper to improve code maintainability and reduce duplication
changed the access modifier of the AbstractExecutor class from package - private to public to allow access to the class from other packages
clean up duplicate parameter in isochroneresource and routeresource
removed public access modifier from test classes in multiple test files to enforce package - private visibility for better encapsulation
refactor CSRF setting logic into a separate method ` setCSRF ` to improve code readability and maintainability
added support for bootstrapping the ` PackageShader ` or ` ClassFileMetaData ` in the ` EclipseLoaderPatcherPatcherTransplants `
jbrules - 2823 : add numericdisabled property to excel rule sheet listener ( # 1815 )
changed log level from info to debug for using the default value in HiveConf to improve logging granularity and reduce log verbosity
added null checks for axes , buttons , and polled controllers in Lwjgl3Controller and Lwjgl3ControllerManager to ensure proper
updated the import statement for ObjectFactory from Cucumber . api to io . cucumber . core . backend in WeldFactory and WeldFactoryTest
refactor port forward saving logic to use a local variable for host database to improve code readability and maintainability by reducing redundancy
added a new configuration property ` SHOULD _ SNAPSHOT _ DATA ` and its getter and setter methods in ` GlobalConfiguration ` to control
modified the ` SyncedFolderObserver ` to conditionally create a ` PersistableBundle ` instance and added logging for the event path to improve
refactor LocationMarshaller to improve code structure to enhance maintainability and readability of the code
removed trackpad motion event checks in StatusBarTouchController . java and updated related logic in OtherActivityInputConsumer . java to simplify gesture handling logic
refactor VectorReader and related classes to a unified class structure to improve organization and maintainability of the codebase
updated imports from ` ArgumentMatchers ` to ` Matchers ` across multiple test files to standardize the usage of matchers across the test
updated method calls and variable names to use ` getRelativePath ( ) ` instead of ` getRelativePathName ( ) ` in ` AbstractPathSourcePath
updated the ` SegmentMapper ` , ` CompositeTransformer ` , and ` CompositeTransformer ` classes to use ` RecordReaderFileConfig ` instead of `
added a null check for the extractor before returning it in ControllerMethodInvoker . java to ensure that the extractor is only instantiated if it is null
api : fix max secondary storage for volume with domain and account
add guiscreenevent . Potionshiftevent to allow custom guiscreenevent to be use with the inventoryeffectrenderer .
deprecate cold _ reads _ to _ omit option in sizetieredcompactionstrategyoptions
[ java ] stop the leech thread in the clienttest .
[ issue # 7136 ] fix pop message metric ( # 7136 )
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to temporarily disable the test until a fix is implemented
rename eventloopgroupmongoclientsettingsbuildercustomizer to nettydrivermongoclientsettingsbuildercustomizer and make it volatile
added session upgrade request and response handling in UpgradeConnection and JettyTrackingSocket classes to ensure proper handling of websocket upgrade requests and responses during the
added timeout functionality to AndroidImplementation to enable configurable connection timeouts for improved user experience
refactor user and team access permissions methods in GitblitClient and RepositoriesPanel to use RegistrantType instead of RepositoryMemberPermissions and
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to validate SQL parsing and deparsing for quoted cast
updated assertions in Misc . java to handle root directory checks to ensure correct file permissions are enforced based on the operating system ' s root directory
refactor FixedThreadExecutor to utilize configurable thread groups and threads to improve flexibility and maintainability of executor management
added null check for the field before checking if it contains " catalogname " to prevent potential NullPointerException when the field is null
replaced ` CasEventListener ` with ` InitializingBean ` and updated related method signatures to use ` InitializingBean ` instead of ` Cas
refactor animation end logic into a separate method ` endAnimation ( ) ` to improve code readability and maintainability by encapsulating the
added a custom close method to the DeflaterOutputStream to ensure proper resource management and prevent memory leaks
added a new file ` gsp001 . java ` to implement tests for retrieving system properties at early phase to ensure that the JVMTI Get
refactored code to use annotation metadata instead of method - based logic to improve readability and maintainability of the code
[ francoisreynaud ] added read / write method for cameranode , lightnode , and cameracontrol
updated PopupNotificationPanel to use the parent window for managing the popup window title to improve code clarity and ensure proper disposal of the popup window
replaced multiple exception classes with a single InferenceException in Infer . java to simplify exception handling and improve code clarity
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the ` featureValue ` value for external use
changed the parameter type from ` int ` to ` long ` in the ` after ` method from ` int ` to ` long ` to ensure compatibility
added ` OnBuild ` and ` ExecutionDriver ` fields with their respective getters and setters in ` ContainerConfig ` and ` Info ` classes
added right - to - left support for the title command in the Toolbar and FlowLayout classes to improve user experience by providing a more visually appealing
added a boolean flag ` enablePositionIncrements ` and modified the return statement in ` StopFilterFactory ` to allow configuration of position increments for
[ java ] use java . util . mail . internetaddress instead of hardcoded value in test
added a new boolean variable ` mTryShareAgain ` and set it to false in ` FileActivity . java ` to manage sharing behavior during
added logic to determine if TTY name is used based on the specified version in the JansiNativePty . java file to improve flexibility in
refactored variable names and logic for calculating transaction size in BandwidthProcessor . java to improve code readability and maintainability by using consistent variable
replaced direct assertions with Awaitility ' s await method in Issue410Tests . java to improve test reliability by ensuring trace IDs are checked
updated API _ BASE _ URL to the HTTPS endpoint in EaseeBindingConstants . java to restrict access to the API base URL instead of
increase read timeout in kafkaioit to reduce flakiness
updated matcher logic in SearchResultMatcher to use is ( itemName ) instead of anyOf ( ) to improve code readability and maintainability by simplify
added SSL support and certificate trust functionality in OkHttp . java to enhance security by ensuring certificates are properly verified for SSL connections
refactor ` NavbarButtonsViewController ` to use ` buttonView ` instead of ` mA11y _ LONG _ CLICK ` to simplify
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` int ` instead of ` byte
added nullability annotations and null checks for workingDirectory in ShellStep . java to ensure proper handling of null values and prevent potential NullPointerExceptions
increase timeout in asyncappendertest to reduce test flakiness
refactor escapeDatabaseObject methods to use objectName and objectType for improved object handling to enhance flexibility and maintainability of database object escape operations
added a boolean field ` inputChanged ` and modified input validation logic in ` MaterialRenameDialog . java ` to improve input validation logic for material titles
added unit test for state change functionality in ShadowDisplay and implemented setState method in ShadowDisplay to ensure correct behavior of display state changes in non - J
[ geos - 7939 ] add ows interface for invoke operation in the dispatcher .
added handling for KEY _ X and KEY _ Y keycodes to return " ^ x " and " ^ y " in GlobalKeyDispatcherW
added version checks for PostgreSQL dependencies in PgDatabaseMetaData . java to ensure compatibility with PostgreSQL versions prior to 9.0
added @ Nullable annotation to message variable in QueueChannel . java to indicate that the message variable should not be initialized
updated method signature and variable names in FileUtils . java for clarity to improve code readability and maintainability by standardizing variable names
added logic to handle JENKINS _ NODES _ SUFFIX and context display based on application URLs to enhance monitoring capabilities for Jenkins applications
fix security . headers . disabled when use placeholder
hbase - 12213 protobuflogreader should not seek to the end of the file if the end of the file be at the end of the
remove nacos registry listener when destroy registry
camel - mybatis : fixed switch / cases indentation see camel - 14540
refactor GoAwayGenerator , GoAwayBodyParser , and GoAwayGenerateParseTest to incorporate SPDY version handling to improve
reformatted code for better readability and added assertions in AuditEventTests . java to improve maintainability and enhance test coverage for JSON object handling
added checks to return 0 instead of a value in Interpolation . java to ensure valid input before proceeding with calculations
change default path to / defaults / instead of / defaults /
refactor DxStep to store the DX executable in a variable before adding it to the builder to improve code readability and maintainability by
added unit tests for PointRangeQuery instances to ensure correct equality comparisons between PointRangeQuery instances and their lower and upper points
hbase - 26166 fix testhfilecleaner to use mock _ archived _ hfile _ dir
do n ' t show the file name if it ' s already in the download request
do n ' t throw jce when try to run a command that do n ' t exist .
[ hotfix ] [ table - planner ] set chainingstrategy to always for rowtimeminibatchassgineroperator
updated ` FilterInvocationDefinitionSourceEditor ` to use ` PathBasedFilterInvocationDefinitionMap ` instead of ` RegExpBasedFilterInvocationDefinitionMap ` to
fix qmap readrandomkey / write write and readrandomkey performance issue
added initialization of G _ SCH _ B in HybridPlotWorld . java to initialize G _ SCH _ B with a new HashMap instance
added null and empty checks for fields and refactored identifier handling in GroovyEngine . java to improve robustness and maintainability of the code by
fix for ggb - 213 : avoid drawables for dependent number ( fix for ggb - 193 )
added TCP keep - alive configuration options to HiveConf and modified TServerSocket initialization in HiveServer to enhance socket management based on configuration settings
corrected a typo in the method name from ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to improve code readability and
no effective change - code cleanup - remove unused import
replaced imports of Joda - Time with lambda expressions and simplified imports in RealtimeSegmentRelocator . java to improve code readability and
do n ' t set success in createvpccmdbyadmin
updated window alpha calculation in WindowTransformSwipeHandler . java and modified condition in FloatingIconView . java to improve code clarity and ensure correct behavior
updated fatal error message to reference Spring Security 4.0 schema to ensure compatibility with Spring Security 4.0
refactor ProtoSubject and ProtoSubjectTest classes for improved clarity and consistency to enhance maintainability and readability of the codebase
[ hotfix ] fix minor code issue in camel - disruptor
added a new file ` TestConfigureUDF . java ` and modified ` ExprNodeGenericFuncEvaluator . java ` to implement a new UDF
fix ( griffin ) : fix stringindexoutofboundsexception in logmessagewaitstrategy
replaced multiple instances of logger . debug ( ) and logger . warn ( ) with a single instance of LoggerFactory . getLogger ( INTERNAL _ LOGGER _ NAME
remove unnecessary ` ` purge _ time be null ' ' constraint from delete purge _ nodes
added support for Java version 17 in the JavaLanguageModule to enable compatibility with version 17 in the application
fix fileappenderresiliencetest by wait for compression job to finish .
[ java ] avoid npe in volatilereadnode when lastlocationaccess be null .
added a method to retrieve an unmodifiable list of steps and adjusted formatting for consistency to enhance code readability and maintainability
removed redundant base58 fields fromBase58 and toBase58 in TronJsonRpc and TronJsonRpc classes to streamline error handling and
refactor CurrencyPair instantiation to use a local variable for clarity to improve code readability and maintainability
fix duration statistic in longtasktimer and meterregistrycompatibilitykit
[ euphoria - 2380 ] do not use shaded guava partitioner in reducebykeytranslator
refactor color and colors retrieval to use CharSequence and update preference handling to improve type safety and simplify value retrieval logic
add a system property to allow to configure version and reset
updated the condition in the query loop to limit the number of tweets processed in the conversion process to ensure that the loop does not exceed a maximum
updated the map ' s refresh interval from 1 to 2000 milliseconds to allow more time for the map to refresh during tests
[ java ] add test for fully acked deleted tail page in queue
fix checkstyle issue in server / glowserver # getimplementationtitle ( ) .
refactored the grow method in DataIO to improve code organization to enhance maintainability and readability of the code
removed unused import of java . io . DataOutputStream in GdxSetup . java to streamline code and reduce unnecessary dependencies
added a method to retrieve the submitted file name in AttachmentHttpBinding to provide access to the submitted file name from the attachment
added markReadForLoad ( ) method to LauncherFragment . java to enhance loading state management during loading
updated the ` JarInstrumentor ` class to handle ` NegativeArraySizeException ` and removed the failed classes collection to simplify error handling and improve
added a method ` checkForSpillPossibility ` to check for spill positions in ` HashAggTemplate . java ` to ensure proper error handling
replaced repeated calls to ` info . info . getDocStoreSegment ( ) ` with a single variable ` dsName ` to improve code readability
added a default name ID format in SamlProfileSamlNameIdBuilder to ensure a valid name ID format is used for SAML names
added error handling for password change in ChangePasswordPage . java to improve user feedback when password changes are aborted
updated closing brace formatting in Deadlock2 . java to improve code readability and maintain consistency
added a new method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide access to the maximum idle time for
deleted the FontScalingTest . java file that contained font size validation for Metal look and feel to ensure that the system ' s look and feel is
updated date filtering logic in RRD4jPersistenceService . java to use a local variable for begin and end dates to improve code readability and
added checks for non - positive numVectors in GenericUDAFComputeStats . java to prevent processing when the number of vectors is zero
test : migrate executablereftest to junit 5 ( # 4558 )
added null checks before setting view and glassPane in JLayer . java and created a new test class bug6994419 . java to ensure
camel - 14284 : camel - wiretap now allow to configure uris for the wiretap expression .
change visibility of setAction method from public to protected to allow subclasses to access and override the setAction method
[ flink - 26458 ] [ table - planner ] add topn option ( planner - planner - blink )
[ java ] do not set ` aerondirectoryname ` for driver and archive agent test .
fixed - rbatch . ping ( ) and rexecutor . executeasync ( ) method do n ' t work correctly if the queue flag be set
refactor HiveConf to use FileOutputStream and FileOutputStream instead of ByteArrayInputStream and remove LoopingByteArrayInputStream to streamline configuration variable handling and improve
updated the device parameter in the createModel method call from ` Device . defaultDevice ( ) ` to ` criteria . getDevice ( ) ` to
updated onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to handle menu item selection and saving functionality to improve user experience by allowing
refactor CertificateValidator class to improve code organization to enhance maintainability and readability of the code
make hawtio . dirname configurable via system property
added a condition to handle empty comments and return SINGLE _ SPACE when the comments list is empty to ensure proper handling of empty comments and maintain
updated variables to be volatile in multiple dictionary classes to ensure visibility of these variables across multiple threads
removed printStackTrace ( ) method from Throwable in ContextHandler . java to simplify error handling by eliminating unnecessary stack trace printing
move customitemdroptest to integration / regression , and move it to testutils
added a conditional check for partition existence in DDL tasks and updated related classes to handle it to improve handling of non - existent partitions in the
fix incorrect byte reading in nfs secondary storage . patch by brandonwilliams , review by brandonwilliams for cassandra - 14
[ java ] do n ' t set local controlrequeststreamid in all clustered service node .
wfs : add spatial _ operators element and test for it
added import for LuceneTestCase and annotated the test with @ AwaitsFix to address a known issue related to SOLR - 2161
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49155 -
[ java ] change default value of isingressexclusive from true to false .
refactor HBaseStorageHandler to use an array of cache keys instead of string constants to improve code readability and maintainability by consolidating
added methods to track and update the running record count in JSONRecordReader to improve clarity and maintainability of the code by encapsulating the
added filtering for year entries in the mergedItems list to ensure only relevant year entries are processed
updated drawColor method calls in CacheableTextView , CellLayout , and HolographicOutlineHelper to use a zero value instead of 0x00000000 to
added a check for OpenGL ES 2.0 availability in the render method to ensure compatibility with OpenGL ES 2.0 and prevent runtime errors
fix : backgroundprocess now set the action context to null
updated methods in BaseSemanticAnalyzer , QBParseInfo , QBParseInfo , and SemanticAnalyzer to support database names and table names to improve
set connection timeout to 1 minute and make count constant final
added test cases for percentile functions in TestHiveAggregationQueries . java to ensure correct functionality of the percentile function in various scenarios
updated WebSocketIdleTimeout and WebSocketChannel to use DEFAULT _ IDLE _ TIMEOUT and DEFAULT _ WRITE _ TIMEOUT instead of Duration . ZERO
updated the method to retrieve file shares based on the user ' s platform account to ensure accurate file sharing by using the correct user ' s account name
updated type declarations and added null handling for scope _ id in Inet6Address . java to improve code type safety and ensure proper handling of null values
change playback control view to use enable / disable flag instead of disable them .
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 14747 - fix session
updated method call from ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java
make useexceptionprobability default to ` ` true ' ' by default
updated the method for setting new plate color based on the icon ' s theme to improve visual consistency with themed icons
guacamole - 139 : refactoring of mysqluser to reduce code duplication .
added " center " alias to the aliases list to enhance clarity and consistency in naming conventions
added the inject method to the DirectUpload class and made the DirectUpload class public to enable dependency injection for better integration with the CommonsApplicationComponent
added space settings for left and right axes in BarChartActivity and adjusted calculations in BarLineChartBase and YAxisRenderer to improve layout consistency and
added support for ` HasJavaAbi . CLASS _ ABI _ FLAVOR ` and ` VERIFIED _ SOURCE _ ABI
added operationEventStatusType parameter to OnlineHubService and initialized the services list in CompositeLogService to ensure proper handling of operation event status and prevent
added debug logging for parameter annotations and created a VisibilityAnnotationTag if none is present to improve debugging capabilities by providing insights into parameter annotations
[ java ] rename startbundle ( ) and finishbundle ( ) to setup ( ) and teardown ( ) .
added classpath information to the ProcessBuilder in SortedArrayStringMapTest . java to ensure the correct classpath is used during the process execution
updated file path separator handling in PackageResourceLoader . java to ensure consistent file path resolution across different operating systems
removed ' this ' references from method calls in DataSet . java to streamline code and improve readability by eliminating unnecessary ' this ' references
added JUnit Ignore annotation to WorkProfileTest . java to temporarily disable the test due to known issue b / 243855320
updated error message formatting to escape percent characters in stack traces to enhance security by preventing XSS vulnerabilities
fixed - jcache . close ( ) method do n ' t call getcachemanager ( ) . geturi ( )
fix ( log ) : reduce log level for technical exception in commandcontext
reformatted the initialization of the ALPNClientConnectionFactory in HTTP2Client . java to improve code readability and maintainability
use instance . getbasevalue ( ) instead of instance . getvalue ( ) in entitypropertiespacket
use thinghandlerhelper . ishandlerinitialized instead of thingstatus . online in sonosaudiosink
updated await timeouts from 500 milliseconds to 5 seconds in ContextRegisterListenerTest . java and SpringMvcClientBeanPostProcessorTest . java to allow
changed log level from info to debug in LightThingHandler . java to improve log clarity for wrong request handling
change the job execution pool size to be 2 / 3 of the maximum active cloud connection limit .
updated method signatures and import statements in Reporter and ReturnsSmartNulls classes for consistency and clarity to enhance code readability and maintainability by standardizing
refactor the ` generate ` method to directly use ` DataFrame ` instead of casting to ` DataFrame ` to improve code clarity and reduce casting
updated multiple package - info and module - info . java files across multiple files to ensure consistent formatting and improve code organization
added a check for non - empty physicalColumnNames before matching against DEFAULT _ HIVE _ COLUMN _ NAME _ PATTERN in OrcPageSource
added a call to ` methCla . mixPlay ( input , amp ) ` in the ` Engine ` class to enable the mixing of
refactor JComponent and SynthTextPaneUI classes for improved code organization to enhance maintainability and readability of the code
fix a bug in the finder pattern finder , so that it do n ' t interfere with other test .
removed redundant checks for non - existent leadingIncludePaths in PreprocessorDelegate . java to simplify the logic for better readability and maintainability
fix a nullpointerexception in vector multiplication
add ` ` find ' ' and ` ` findall ' ' to the list of query in selenideelementproxy
fix e - ac3 sample rate when format . samplerate be not specify
add get / set formula support to xssfname and make xssfname final
updated the target value in HighDimensionsTest from 60000 to 90000 to adjust the scaling factor for improved performance
fix bug in simpletypegt and add a test for pattern schema
added a new test class ` ClassPathXmlJobRegistryContextTests ` to validate the functionality of the ` ClassPathXmlJobRegistry ` class to
changed the data type of mHistoricTimes from float to long to accommodate larger time values in the MotionPauseDetector class
camel - 12320 - camel - restlet : deprecate producer get and add unit test for it
remove showout from logendpointbuilder . showout ( boolean )
refactor code to extract the event creation into a separate method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability by reducing
added checks to ensure only non - canceled , non - filled , and non - rejected limit orders are added to the limitOrders collection
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to enhance image layout reliability and ensure proper handling of pixel offsets
updated timestamp handling in Event . java and refactored ruby timestamp retrieval in JrubyEventExtLibrary . java to improve timestamp handling consistency and
added logic to handle paths ending with a slash in ContextHandler and created a test for non - existent real paths in WebAppContextTest to
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SET
updated variable names and logic for setting horizontal and vertical vertical values in JEditTextArea . java to improve code clarity and ensure correct scrolling behavior for horizontal
do n ' t set guard stage if the caller scope be null
test : migrate sniperjavaprettyprinterjavaxtest to junit 5 ( # 4583 )
refactor URLOutputStream and related tests to use try - with - resources for resource management to ensure proper resource management and prevent potential memory leaks
added multiple @ Entity annotations to the Mail class to ensure that the Mail entity is not affected by other entities
updated default value from false to true and added default message for tablespace to enable tablespace by default and indexing
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to these buffers for better data management
added a flag to manage non - empty files in ScanBatch and implemented a test for handling empty files in TestJsonReader to ensure proper cleanup of
added custom name handling in failure comparisons and improved assertion messages in tests to enhance error reporting for better debugging and clarity in comparison failures
added a regex pattern to match library names and modified the condition to check for Cuda library compatibility to ensure compatibility with different DLL and dylib
changed catch blocks from ClassNotFoundException and NoClassDefFoundError to Exception in both JrtJavaBasePackages . java and PackageHelper . java to
hbase - 11813 check if file system be in safe mode for master ( addendum )
updated error message formatting in TranslatingJavacPhaseTracer . java to improve clarity of error messages for better debugging
( chore ) camel - core : remove unused plugin descriptor cache
add a mobile contact status change event when a contact be remove .
remove requestdetails . withresourceandparams ( ) from servletrequestdetails and add javadoc
added a new integration test class for fetching account information from BTCE exchange to ensure the correct retrieval of account information from the BTCE exchange
added mouse wheel functionality to VDUInput , vt320 , and TerminalView classes to enable custom mouse wheel events for better user interaction
set library path for game input if jinput be available
# 219 - remove deprecate @ columnhstore annotation and update to use @ dbhstore
add ` ` player skin ' ' flag to metadataindex .
updated LoadBalancerWithServiceTests to use SLF4J logging instead of RequestFieldMatcher and modified test data creation methods to enhance logging capabilities and improve
fix potential nullpointerexception in mapservice . getentry ( )
replaced System . getProperty with AccessController for retrieving the operating system version to enhance security by using privileged actions
updated the file suffix configuration in TemplateEngineFreemarker . java to allow dynamic configuration of the file suffix to improve flexibility and maintainability of the template
( chore ) camel - jbang - fix selectmessagequeuebyhash and add test
add animation to toolbarpanel . hide ( ) so that it do n ' t interfere
fix issue with caretcolumn not be set correctly in styledtextareavisual .
updated PrebuiltAppleFramework , CxxBinaryDescription , CxxGenruleDescription , and CxxBinaryDescription to incorporate CxxBuck
replaced SimpleParameterAccessor with ParameterAccessor in multiple files to standardize parameter handling across the repository
added a null check for the passwordAttribute before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
fix datautilities . defaultvalue ( ) for byte [ ] and string [ ]
updated the host name handling logic in SslContextFactory to ensure correct host name retrieval based on the client authentication requirement
updated assertions in TestFSTableDescriptors to use assertTrue instead of assertEquals to improve accuracy of cachehits validation in test cases
danielwagnerhall : move cookie deletion code to ie driver
added a boolean variable ` mHasEndedLauncherTransition ` and modified the return condition in ` AbsSwipeUpHandler ` to ensure proper handling of
added charset attribute to HTML structure in HTMLListWriter and HTMLWriter to ensure compatibility with UTF - 8 encoding in HTML output
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future feature additions
updated the maximum length of HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and refactored
added an arrow button in BasicComboBoxUI and created a new class bug6337518 for testing to address bug6337518 related to
hbase - 26175 addendum fix test for flaky testrandomaccessbuffer
refactor UserInfoActivity to improve code organization to enhance maintainability and readability of the code
added import of HomeContentProvider and updated broadcast calls across multiple services to ensure consistent notification of content changes
added state management for pressed and focused backgrounds in BubbleTextView and updated related methods in Launcher and BubbleTextView to improve UI responsive
updated the ` getFallbackResponse ` method to include a ` Throwable ` parameter across multiple classes to enhance error handling capabilities in the fallback policy implementation
removed conditional check for ` env . _ compile _ only ` in ` DumpBytecode . java ` to simplify the conditional logic for better readability
added null checks for tags in ChannelUri . java to prevent potential NullPointerExceptions when tags are null
updated JAVA _ REGEX _ SPECIALS to include " . " and modified SQL pattern handling in RegexpUtil and TestSqlPatterns to
added functionality to set and restore the action bar title in FileActivity and updated the action bar title in FileDisplayActivity to ensure the action bar title
updated method to use ` Iterables . getLast ( convertedElements ) ` instead of ` Iterables . getOnlyElement ( convertedElements ) ` to
updated the hour attribute in the @ Schedule annotation from " minute = * " to " 0 " to simplify the scheduling configuration for cleaner operations
updated TransactionalValidationListener to support retrieving partitioned tables and improved table path validation to enhance functionality by allowing retrieval of partitioned tables and improving error handling
added polling functionality to the SnapPuller class to enable polling functionality for improved performance
changed the data type of generatedKey from int to long and added a scrubbed SQL string in ShadowSQLiteDatabase . java to ensure accurate key
reformatted code in SimpleReferenceCache . java for improved readability to enhance maintainability and clarity of the code
improve error message for failed test cases to provide clearer context on failure scenarios
( chore ) camel - web : use a fixed thread pool size of 10 and set stop timeout to 0 .
deleted the HttpTestAccount001 . java file to the test class is no longer needed for the current implementation
change exception handling from Exception to Throwable in Dispatcher . java and simplify test assertions in DispatcherTest . java to improve error handling robustness and ensure proper
camel - 14284 : camel - cxfr - do not create attachment for cxf message with isxop = true .
added handling for the ' ~ ' character in ClientUtils . java to improve handling of special characters in the application
camel - slack : add an option to the consumer to delay a millisecond before the next poll .
change block drop event to fire blockharvesting event ( # 4434 )
updated layout constraints and added a space for encodedAudioPassthrough in TranscodingTab . java to improve layout responsiveness and enhance user interface clarity
added a new file ` bug8057791 . java ` implementing a Swing application with a JList and NimbusLookAndFeel to demonstrate the use of Nimbus
updated flag assignment logic in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java to improve clarity and maintainability of the
updated WebSocket methods handling in RunnerBuilder and added a new test for Eth API configuration in RunnerBuilderTest to improve websocket method management and
update null check for ' to ' in ComposeActivity . java to ensure robustness by preventing potential NullPointerException
refactor ParquetFixedWidthDictionaryReaders to support dictionary handling and add a new test for big integer values with a dictionary to improve performance and
updated layout calculations for landscape orientation in PortraitPagedViewHandler . java to improve layout handling for landscape orientation
added logging aspect with a new Log annotation and LogInterceptor class to enhance logging capabilities in the application
updated the trace logging logic in QueuedThreadPool . java to handle empty trace cases to ensure that trace information is displayed correctly when trace is not provided
updated CacheGenerator and CacheProvider to include an optional implementation parameter for cache handling to enhance cache management by distinguishing between Caffeine implementations and
added a totalFrameSize parameter to the createReferenceMap method call to ensure the reference map is created with the correct total frame size
refactor TypesafeConfigurator to improve code organization to enhance maintainability and readability of the configuration logic
camel - graphql : added karaf integration test for camel - graphql
updated method names from ` main ( String args ) ` to ` bug1 ( ) ` and added multiple ` bug3 ( ) ` methods to
do n ' t encode the url - encoded value , it ' s not need .
replaced the implementation of ` unsupportedPlatformTool ( ) ` with a new class ` UnsupportedPlatformTool ` to improve code readability and maintainability by
updated the calculation of ` loopCount ` to use ` int ` instead of ` double ` and improved log message formatting to enhance clarity and accuracy in
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide a way to retrieve the size of the map based on
[ drools - 768 ] make abstractaddressmanager and kieaddressmanager test more robust
change row and column specifications in VLCVideo . java to ensure proper layout alignment for UI components
rename bisq / bitsquare to bitsquare / bitsquare / bitsquare / issues
updated the AUTHORITY constant from " talon " to " twitter " to align the application with the new twitter provider structure
add a ` ` / . m2 / user . xml ' ' to the user ' s home directory .
added a call to bind the GL array buffer in VertexBufferObjectWithVAO . java to ensure the OpenGL buffer is properly bound for rendering
refactor ServerHttpSecurity class for improved security configurations to enhance security features and maintainability
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests that are not ready for execution
added default HTTP headers support in HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP client configuration flexibility by allowing custom headers
added error response for invalid password and not - valid password
deleted the NoOpConfigPathGetter . java file to remove unused code to streamline the codebase
replaced Codec . base16Decode with Bytes . fromHexString for signingKey conversion to improve performance and reduce memory usage during signing
updated FloatUtil . java to use constants for CSS properties and adjusted first - line position based on current style to improve code clarity and ensure correct position
planner - 283 move planningfactcollectionproperty , planningentitycollectionproperty , planningsolutionproperty , planningfactcollectionproperty , and planningfactchange
updated the method name from ` getDefaultHeaders ( ) ` to ` defaultHeaders ( ) ` and changed the return type of ` getDefaultHeaders ( )
http : / / issues . apache . org / jira / browse / amq - 4237 - rename proxyserver encoding to charset
added a method ` getJobId ( ) ` in ` StepContext ` and a corresponding test in ` StepContextTests ` to provide a way to
replaced ` compareTo ` method calls with ` compare ` methods in ` ExpandableUploadListAdapter ` and ` FileStorageUtils ` to improve code read
replace error logging with debug logging in DefaultJdkHttpClient and JdkBlockingHttpClient to improve logging granularity for better debugging
updated import statements in LegacyAuthenticationHandlerAdapter . java to use NamedAuthenticationHandler instead of GeneralSecurityException to ensure proper handling of authentication - related classes
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other
filtermanager : do n ' t remove invalid filter if it be our own
introduce a static wrap method to make it easy to reuse .
updated DataOutputStream initialization and closing logic in MinimalLockingWriteAheadLog . java to ensure dataOut is properly closed in a finally block to
added a new test method ` testSelectAllFromView ` to ` TestJdbcDriver2 ` and modified assertions in ` HiveBaseResultSet ` to
updated FocusTransitionTest . java to improve test coverage to enhance reliability of focus transition functionality
fix wrong import of gwtproject . gwt . core
added a check for MapRedTask before attempting to retrieve counters to ensure that counters are only retrieved when the task is a MapRedTask to avoid
updated the initialization of the readListener variable in HttpInput . java to ensure that the readListener is not null to prevent potential NullPointerExceptions
refactor color selection handling in AppearancePanel to use a new method for setting color based on the color chooser ' s selection state to improve code
updated the constructor parameters in TaskHelper from ' false ' to ' hidden ' to allow for more flexible control over the behavior of the application
http : / / issues . apache . org / jira / browse / amq - 4676 - make test more reliable
pdfbox - 4071 : close resource in ccittfactory . createfromrandomaccess ( ) to prevent resource leak
added DefaultParameterHandler import in BoundSql , SqlSource , and LanguageDriver classes to enhance parameter handling capabilities in the scripting framework
lsra spill optimization : check loop depth before set spill state in interval
add a new class micronautastbuilder that compiles the groovy script and only the first one
fix ( pgstatement ) : make pgresultset . execute ( ) call volatile to ensure that it be call twice
set default value of serviceAdvisorType to PYTHON to ensure proper initialization of the service advisor type
replaced static resolver with a ThreadLocal thread - local resolver for ResolvingDecoder to improve performance by preventing multiple threads from accessing the resolver
use arraylist instead of collection to avoid concurrentmodificationexception
replaced hardcoded byte array with a random byte array for memo in SendCoinShieldTest . java to improve test reliability and maintainability by
added a method ` setPersonalisation ` to ` SkeinParameterSpec ` for setting personalisation with a specified locale to enhance user experience by
removed redundant code in CodeGenerator . java to streamline code for better readability and maintainability
removed the percent parameter from the scroll method parameters in multiple classes to simplify the method signature for better readability and maintainability
made the pointer variable public and added reset methods to FlatRecordReader to allow external access to the pointer variable for better usability
change class name from ContentDigestHistory to BdbContentDigestHistory across multiple files to align with the new BDB naming convention for better clarity
refactor cast expression to use a wildcard import and simplify boolean casting logic to improve code readability and maintainability by eliminating unused imports
replaced the use of ArrayList with a boolean flag for accepting accepted media types to simplify the logic and improve readability of the code
added a new boolean variable ` false ` to the TaskView class to indicate that the task should not be displayed in the UI
added ` isAutoIncrement ` method to ` LiquibaseDataType ` and implemented it in ` CreateTableChange ` to ensure proper handling of auto
set default errorText to " Command failed due to Internal Server Error " to provide a clearer message when command execution fails
updated imports in ` LocalManagementTest . java ` and ` DeadListenerTest . java ` , and added VM options in ` Utils ` to
replaced calls to ` toSimulate . add ( currentStatus ) ` and ` boosterStatus ` with ` toSimulate . push
added support for binding and binding AJP connections in the GitBlitServer class to enhance security by ensuring proper configuration of AJP port
added type coercion logic for compound types in TransTypes . java and created a new class Intersection03 . java with assertions to ensure
renamed the class ` EmbeddingTest ` to ` EmbeddingITest ` to clarify the purpose of the embedding functionality
added a native method to check if the toolkit thread was started before starting it to ensure that the toolkit thread is only started once to avoid redundant initialization
add an option to compress the bundle in parallel .
do n ' t show the surface if it ' s windows specific
updated the temporary directory name in AbstractRecordExtractorTest to use class name instead of a hardcoded string to improve clarity and maintainability of the
added configuration options for HTTP service configurations related to node HTTP to enable or disable HTTP services based on configuration settings
added a new ` service ` field to ` GoogleCloudFirestoreTicketDocument ` and modified ticket counting logic in ` GoogleCloudFirestoreTicketRegistry
refactor Generate class to improve code organization to enhance maintainability and readability of the code
updated ScalarFunction annotations and added test cases for Java and JSON null values to ensure correct handling of null values in JSON and JSON functions
refactor BadgeRenderer to use a conditional check for DOTS _ ONLY and simplify width calculation to improve code readability and maintainability by
removed the ' final ' modifier from the getConfiguration method in FreemarkerManager . java to allow for overriding of the method in subclasses
added a test method for invalid excluded package patterns in OgnlUtilTest . java to ensure proper error handling for invalid package pattern configurations
updated device Udid retrieval logic to differentiate between macOS and iphone platforms to improve compatibility with macOS environments
updated error logging to warning and modified HTTP client response handling in DefaultHttpClientFilter and TestDefaultHttpClientFilter to improve clarity of error messages and ensure correct
refactor the binding and execution of the root script and state saving logic in AllAppsView . java to improve code clarity and ensure proper execution
added a new boolean variable ` TEXT _ BURN ` and modified conditional logic in ` Utilities . java ` to conditionally set the shadow layer based
added teardown methods for table and view operations in TestColumnAccess and TestReadEntityDirect to ensure proper resource management and teardown of database tables and views
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46527 - add parser
updated formatting of conditional statements in BoundedLocalCache . java and added a new test method in BoundedLocalCacheTest . java to improve code
updated RawConnection and related classes to extend WebSocketConnection and added complete and flush methods to enhance WebSocket functionality and improve frame processing efficiency
added multiple test methods for asserting all assertions in SoftAssertionsPerfTest . java to ensure that all assertions in a SoftAssertionsPerfTest
added a new constant ` TEST _ FAILURES _ EXIT _ CODE ` and modified the ` assertExitCode ` method visibility in ` PythonRun
refactor glyph layout handling in GlyphLayout . java to improve clarity and logic flow to ensure proper rendering behavior when markupEnabled is enabled
refactor score assertion logic in TestBooleanRewrites . java to use Java Streams and Set to improve readability and maintainability of the test
change the method of retrieving the enclosing class from ` getEnclosingClass ( ) ` to ` getSuperclass ( ) ` to ensure the correct class hierarchy is
removed unnecessary type check for playersocketconnection before call flush ( )
added a check to prevent multiple invocations of the OnDrawListener in Launcher and LauncherAnimUtils to improve performance by avoiding redundant operations on
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
updated rule imports and modified match status check in ReplicaAssigner . java to enhance rule assignment logic to include non - APPLICABLE
updated the default value of MEDIAPARSERV2 from false to true to enable media preparation for media parsing
add support for interceptor annotation in aop proxy
added assertions and permission verification for the TRUNCATE TABLE command in FolderPermissionBase . java to ensure that the INSERTION operation correctly verifies permissions
do n ' t log a warning if the provider be register due to registrationstate change .
updated the random color calculation in PastelColor . java to use a base value of 180 instead of a fixed value to improve color accuracy in
refactor ScriptEngineFactory to improve code organization to enhance maintainability and readability of the code
updated bitmap handling in HolographicViewHelper to use original and outline bitmaps instead of drawables to improve visual consistency and ensure the original image is
refactor request method handling in CloudClient to use a parsing method instead of string comparison to improve code readability and prevent potential NullPointerExceptions
add a way to infer the unigram containing phrase in the pre / post processing of a multi - word .
[ hotfix ] [ test ] remove unused import
added conditional logic to determine the correct output format class based on the presence of HivePassThroughOutputFormat . HIVE _ PASSTHROUGH _
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
updated boundary check in DOMBuilder . java to ensure valid input to prevent index out - of - bounds errors
refactor graph handling in ClusteringCoefficient , EigenvectorCentrality , and update message retrieval in DiameterUI to improve code
camel - 14850 - camel - aws2 - translate : improve the verifier to check if a particular service work on a specified region , eg
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing an interface with static and default methods to demonstrate the behavior of default methods in
camel - 14284 : keyselector now use the property placeholder from the property placeholder . thanks to daniel for the patch .
removed redundant instanceof check for Throwable in LogResolverBean . java to simplify code and improve readability
refactor various cryptographic classes for improved consistency to enhance maintainability and readability of the codebase
updated JGit version from " 201106090707 - r " to " 201109151100 - r " and added sorting and reverse
fix bug where client can not be find if the client ' s path be not specify .
added ' transformer ' namespace support - add a ' transformer ' element to the ' spring - integration ' namespace .
updated BACK _ FACTOR to REWIND _ TIME and added REWIND _ TIME constant in ResumeObj . java to
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` and modified ` Button ` and ` JavaSEPort `
updated usage formatting and improved documentation formatting in UtilityCommands . java and DocumentationPrinter . java to enhance clarity of usage output and handle empty command usage
fix typo : ` ` collection . map ' ' - > ` ` collections . map ' '
removed setSeqFiles and setUnseqFiles methods from CrossSpaceCompactionResource and updated their usage in RewriteCrossSpaceCompactionSelector to streamline
removed duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
refactor rule synchronization logic in ProjectPropertiesModelImpl . java to improve readability and maintainability of the code
fix synchronization issue in abstractsootfieldref . getfieldunsafe
add elasticnamingconvention for index ( fixes # 10 )
added listeners and command creation methods to IController and TinyGController , and updated BackendAPI to use IController instead of AbstractController to enhance
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to verify rendering of a large horizontal rule in ` Path
replaced System . out . println with TTY . print in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to streamline output
refactor Response and related classes for consistency and clarity to improve code readability and maintainability
updated condition from checking if frameLength is equal to zero to checking if frameLength is less than or equal to zero to ensure proper handling of frame
added return statements for float and int values in IntFloatMap and IntIntMap classes to ensure consistent return behavior across different map implementations
updated icon handling in ImageDownloadService to use Display . getInstance ( ) . callSerially for thread safety to ensure icons are set on the UI
added a null check for the registered variable in HandlerRegistration . java to avoid potential NullPointerExceptions during registration processing
move htmlnode . hasnextsibling to ienavigator to avoid unnecessary native method .
fixed potential nullpointerexception in redisdistributedmapcacheclientservice # getallresults ( ) method
updated log message formatting in MobFileCache . java to improve clarity and consistency in logging output
refactored the ColConvCCMTest class for improved readability to enhance maintainability and clarity of the test cases
replaced instances of ` source ` and ` target ` with local variables for ` allowCovariantReturns ` and ` allowCovariantReturns ` to improve
pdfbox - 4071 : use generic instead of raw type , a suggest by valerybokov
replaced Float . toString ( jsonData . asFloat ( ) ) with jsonData . asString ( ) in mmm Json . java and added a
added return statement in GenericFileConsumer . java to prevent premature exit from method execution
added a new Runnable inside EventQueue . invokeLater in bug6638195 . java to ensure proper execution of the event dispatch logic
updated the calculation of maxSize in CompressExtension . java to use getMaxBinaryMessageSize ( ) instead of getMaxBinaryMessageBufferSize ( ) to ensure
updated steering value additions from ` - 0.5 ` to ` . 5 ` in multiple test files to correct the calculation of steeringValue by removing unnecessary
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by using a more efficient
updated JdbcSerDe to convert java . sql . Date and java . sql . Timestamp to LocalDate and LocalDateTime to improve date handling accuracy and ensure
updated VERSION from 2 to 3 and modified metadata reading logic based on version to ensure compatibility with different data formats and improve metadata handling
updated FlywayAutoConfiguration to include conditional logic for EntityManagerFactoryBean and added FlywayInitializerJpaDependencyConfiguration to enhance configuration flexibility and
added sorting functionality to the ClassesImpl class to ensure the classes are processed in a consistent order
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated references in ` AbstractLauncherUiTest ` to
[ hotfix ] fix typo in sharedinformer javadoc
updated class loading and method invocation logic for scope handling in TestCloseScope0 . java to improve compatibility with different JDK versions and ensure proper
increased the test timeout from 500ms to 5000ms in AdaptServerSocket . java to improve test reliability by allowing more time for tests to complete
refactor CaptchaChannelProcessorTests for improved test coverage to enhance reliability and maintainability of the code
added logic to update the owner of an item based on the changes in the MetadataImport class to ensure that the item ' s owning collection matches
added a retry mechanism for saving cache properties in AbstractRegistry . java to limit the number of attempts to save cache files and improve logging clarity
updated the directory reference in TrackingDirectoryWrapper from ` mergeDirectory ` to ` directory ` to ensure the tracking of the correct directory structure
add some more test to the ruletst , so that it pass on jdk 1.5
added validation for insert overwrite queries on bucket partitioned Iceberg tables to prevent execution of insert overwrite queries on non - bucketed Iceberg tables
updated assertions in BootstrapTests to check for the presence of the Legacy SAML key ID in the default configuration to ensure that the Legacy SAML keys are correctly
updated methods in Excluder to check for anonymous or non - static local types to ensure proper handling of non - static and non - static fields
fix npe in case of unexpected e - mail address .
removed multiple waiting - for - block and waiting - for - block comments from CommentsParser to streamline comment parsing and improve code clarity
added IOException handling to lock release methods and introduced LockReleaseFailedException class to improve error management and ensure proper resource cleanup
change package declaration from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to align the package structure with the
added a check for unary operations before transforming the right node in SpelExpressionTransformer . java and simplified operator checks in LiteralNode . java to
added TypeValidation . DISABLED to ByteBuddy initialization to disable type validation during byte code generation
replaced instances of ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` to simplify type handling by removing unnecessary type
updated lock exception handling and modified lock timeout settings in multiple test files to improve error handling and reduce timeout values for lock operations
fix reference to log _ file system property in loggingapplicationlistener
added a method to check for redirect status and refactored HTTP request handling to improve redirect handling and enhance error management during HTTP redirects
added constants for service and application mapping in ServiceCombConstants and modified microservice configuration logic in MicroserviceFactory to improve code clarity and ensure proper application
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the correct
fix test failure due to database prefix
update return statement to use unread count from HomeDataSource to ensure accurate retrieval of unread count for the current account
add testvirtualthreadpoolpreview ( ) for jdk 20 +
added a limit parameter to the getAllOrder method in MarketOrderIdListCapsule and adjusted related logic in Wallet and Wallet classes to
added null check for the user before retrieving user settings to prevent potential NullPointerExceptions when accessing user settings
updated file path retrieval in LocalFileSystem and added a new test for relative wildcard path matching in LocalFileSystemTest to improve file matching accuracy and ensure correct
added maximum width and height limits for component bounds in ComponentBuilders to ensure components do not exceed a predefined size limit
added logging functionality and deprecated the ` setConnectionManagerTimeout ` method in ` CommonsHttpSolrServer ` to enhance error handling and provide warning messages for
added import statement for ExceptionHandler and updated error handling in PrintController . java to streamline error handling and improve code clarity
refactor filename generation logic in CrateType . java and add integration tests in RustBinaryIntegrationTest . java to improve code readability and ensure
added checks for empty words and number separators in SpellChecker . java and a corresponding test case in SpellCheckerTest . java to ensure proper handling
updated the formatting of the MESSAGE constant in HelloWorld . java to improve code readability and maintain consistency
added methods for handling file actions in FileDisplayActivity and updated OCFileListFragment initialization to improve user experience by allowing contextual actions on the
added a call to ` puller . setDaemon ( false ) ` in ` ReplicationHandler . java ` and added error handling in ` SnapPull
removed an extra parameter from the update method call in StoreCachedTest . java to improve code readability and maintainability
updated the parameter name in the StreamerLoader constructor to use ` theMaterials ` instead of ` materials ` to improve clarity and functionality in handling
added new dependencies and updated existing ones in DependencyBank . java to enhance clarity and organization of dependency management in the project
added functionality to set maximum recycled views for various item types in AppsContainerRecyclerView to enhance memory management and improve performance during app transitions
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure that multiple binary builds
make examplebaritonecontrol more resilient to miss tag .
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enable parsing and resource management for procedure changes
add support for handling null bitmaps in FilterOperatorUtils and introduce a new test for range filtering in NullHandlingEnabledQueriesTest to ensure proper functionality
updated validation for bootstrap method parameters in JDynamicInvokeExpr . java to ensure correct argument types are used for bootstrap methods
updated the port number in JmsHttpJmsTest from " localhost / myservice " to " jetty : 9000 / myservice "
removed the clearing of formatters in runtimeOptions to improve performance by eliminating unnecessary formatting
changed the type of ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` and updated related method calls to ensure type
added conditional logic to adjust workspace labels based on cell padding to ensure workspace labels are only hidden when necessary for better layout management
updated assertions in ReplicationFactorTest to use assertRf ( ) method for clarity and consistency to improve code readability and maintainability by using a
sulong : allow llvm to be pre - initialized if pre - initialization be enable .
removed JUnit @ Ignore annotations from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest to enable tests that are not
replace RuntimeException with JsonIOException in Gson . java to improve error handling by providing a more specific exception type
remove unnecessary boxing / unboxing in visualscoretagtest
updated error messages and file tree walking options in mmm Copy . java and ppp Copy . java to improve clarity of error messages and ensure proper handling of
add segmentname . ishighlevelconsumersegmentname ( ) and segmentname . islowlevelconsumersegmentname ( )
added methods to start and start activities in ShadowFragment and corresponding tests in FragmentTest to enhance fragment functionality and ensure proper exception handling in tests
updated the method to create a new DateTime instance using the current time instead of the current time to ensure accurate date representation within the clock
added " - target " CPU type " x86 _ 64 - none - linux - android " to the ImmutableList returned to support specific CPU architecture
added a method to delete all files for an account in FileDataStorageManager and integrated it in ManageAccountsActivity to improve file management for
updated command line option in SchemaCrawlerCommandLine . java from " - ? " to " - h " to improve clarity of command - line options for
added a static factory method to the Description class and updated equals methods to use unique IDs to enhance suite description functionality and ensure uniqueness in comparison
updated the method of decoding bitmaps from TRY _ HARDER and PURE _ BARCODE to MultiFormatReader to simplify the code
removed unnecessary ` ImmutableList < String > sources ` parameter from the constructor of ` BuckTarget ` to simplify the constructor and eliminate unnecessary complexity
added unit tests for range calculations in GWCZoomContextFinderTest . java to ensure correct handling of end and start ranges in the context
added dependency tracking configuration to JRubyScriptEngineConfiguration and updated JRubyScriptEngineFactory to conditionally activate the dependency tracker based on this configuration
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure
do n ' t announce keyspace when add new table / keyspace . patch by jbellis
refactor WelcomeWindow to improve image handling and caching to enhance performance by reducing unnecessary image processing during rendering
refactor tuner configuration management and transfer handling in multiple classes to improve clarity and functionality of tuner configuration management
added HasTests interface to AbstractShBinaryDescriptionArg and implemented a new test method in ShBinaryRuleIntegrationTest to enable testing of ShBinary with tests
added a condition to set the includeString variable to " db : hsqldb " in TestFilter . java to ensure correct inclusion of the database
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
trufflestacktrace : only materialize host exception if it be empty .
refactor service loading logic to use an iterable to improve efficiency and clarity in handling service providers
added test for duplicate command handler resolution in aggregateannotationcommandhandlertest
[ flink - 20865 ] [ runtime ] introduce fine - grained shuffle mode for all edge in batch job
fix entityfish hook not be able to place block in the player ' s world
camel - 11436 : camel - ftp - fix the javadoc error of camel - ftp
renamed methods and variables from ` getCommandRunner ` to ` getStepRunner ` across multiple classes to improve consistency and clarity in the codebase
rename ` useShortNames ` to ` compressPackageNames ` in ` GangliaReporter ` and related methods to enhance package name compression functionality by allowing
added a check for empty items in AppsContainerRecyclerView to prevent processing when no items are available
added @ ConditionalOnMissingBean annotation to ZipkinAutoConfiguration . java to ensure the reporter bean is only created if it does not already exist
log4j2 - 1343 add support for property in xmllayout .
added a new parameter ` OMIT _ HEADER ` and implemented removal of specific response headers from multiple writer classes to enable the specification of the " omit
updated the method to retrieve property names using ` getPropertyNumber ( ) ` instead of ` _ id ` in ` EscherProperties . java `
updated method call from ` getBuildRuleType ` to ` getDescription . getBuildRuleType ` to improve code readability and maintainability
add a call to modifyhierarchy in sootclass to modify the hierarchy .
fix nullpointerexception in testifdisputetryreplay ( )
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` , and updated method signatures in multiple classes to
wallet : update sendtx confidence type to not _ seen _ in _ chain .
fix issue where @ body and @ header do n ' t apply to request parameter
fix : craftinghelper . processconditions do n ' t handle ` ` _ conditions . json ' ' properly .
hbase - 16464 catch throwables in close ( ) and add log .
refactor null and length comparisons in Credential . java for improved readability to enhance code clarity and maintainability by reducing redundancy
[ java ] do n ' t add image to the subscription if it ' s already in the subscription .
updated the ` destroy ` method to throw an ` InterruptedException ` and modified process termination logic to enhance error handling and improve process termination logic
added support for Oracle in the database check to ensure compatibility with Oracle database configurations
camel - 16284 : mail consumer should try to connect if the mail store be n ' t connect .
added token comparison logic in the Parser class to ensure that only tokens in the query are processed to prevent parsing errors when there are remaining tokens in the
camel - 16640 - aws - translate : list all the available language in the enum - start with ` ` k   
added support for duration and f0 model in the voice class . fix the bug that the audio model be n ' t load correctly .
added emailDomain property and its getter / setter methods in LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable configuration of the email address in the identity
added read and connect timeout properties and their retrieval methods in Configuration . java and updated ViewRegistry . java to utilize these properties to improve configuration flexibility
do n ' t try to process deferred concept if there be nothing to save
added RedisCategory import and JUnit category annotation to RedisServiceRegistryTests to enable testing of Redis services in the application
refactor ` FindDeprecatedMethodsTest ` to use ` @ NullAndEmptySource ` and ` @ ValueSource ` annotations to improve test coverage and
added a call to the superclass ' s paintComponent method in WaterfallPanel . java to ensure proper rendering of the component during rendering
removed unused imports from multiple configuration files to clean up the code and improve maintainability
updated event signature handling in ContractEventTriggerCapsule and added event signature full format in LogEventWrapper to improve event logging clarity and enhance event
updated filtering logic in FileTestHelper to check for file names ending with a underscore to ensure that only valid filenames are processed for session management
mapview : use background and fillrect instead of clearrect ( )
refactor code to improve readability to enhance maintainability and clarity of the compilation error handling logic
remove some unnecessary system . out . printlns
added a conditional check for NaN score before asserting results in TestFieldCacheSort . java to ensure that assertions are only executed when scores are valid
update oldKeys initialization to use Set . copyOf for better immutability to improve code safety and prevent unintended modifications to entity keys
added handling for zero - time values in ColumnSnapshotGenerator and created a test for date default values in MySQL to ensure proper functionality and validation of date
rename ` ` multisig ' ' and ` ` taker ' ' multisig to ` ` taker ' '
fix raw type ambiguity in functionallgroupheads , functionfirstpassgroupingcollector and functionsecondpassgroupingcollector
[ rhdm - 302 ] fix npe when create a new kiesession when create a kiecontainer with multiple ksessionmodel
updated the instantiation of HiveMetaStoreClient to use ' this . conf ' instead of ' conf ' to ensure correct initialization of the HiveMetaStore
added a conditional check to return early if modalness equals modalness to prevent unnecessary processing when modalness changes
added a test for codec capabilities from a profile level in ShadowMediaCodecListTest . java and implemented native methods in ShadowMediaCodecList . java
fix focus issue in confirm button ( # 5460 )
added input validation for width and height in SunVolatileImage and improved error handling in XRSurfaceDataProxy to ensure width and height are non -
updated the thousands separator from a period to a non - breaking space to ensure consistent formatting of thousands in the user interface
replaced ` int [ ] _ loops ` with ` AtomicInteger [ ] ` in ` AsyncStressTest . java ` and updated sleep duration and
added visibility handling and toast messages for beta flavors in AchievementsFragment and LeaderboardFragment to improve user experience by notifying users when a
added access , name , and desc fields to SearchMethodVisitor to enable access , name , and description retrieval from the search context
added sleep calls in IoTDBInsertWithoutTimeIT . java to handle InterruptedException to improve synchronization during SQL operations
removed unnecessary line breaks in DLNAResource . java to improve code readability and maintainability
removed the ' required ' attribute from the XML element annotations in ResequenceDefinition , BatchResequencerConfig , and StreamResequencerConfig classes
refactor transaction management methods and improve error handling in TableReader . java to enhance code readability and maintainability while ensuring proper transaction management
flume - 152 . make key manager algorithm configurable ( # 493 )
refactor ` getSingleSourceApplicableTest ` method to use ` TreeVisitor ` instead of an anonymous inner class to improve code readability and maintain
added exit ( ) method to Blockmania . java to handle tab key events to improve user experience by ensuring proper termination of the application
rename accessspecifier . package _ private to accessspecifier . none to avoid confusion
refactor method names and error handling in Check . java and add a new file ` log . error ` for handling overrides to improve code clarity
updated stripes and stripeStats assignment logic in OrcInputFormat . java to ensure correct stripe retrieval from eithercTail orcReader
added a null check before proceeding with further logic in JCache . java to avoid potential NullPointerExceptions during execution
update nexturl to http : / / myhentaicomics . com and use http : / / myhentaicomics .
added command - line argument handling and version printing in App . java to provide user feedback on the current version of the application
use splittokens ( ) instead of split ( ) for export ( )
updated rotation handling in ConsoleActivity and added input connection logic in TerminalView to improve user experience by allowing customizable rotation settings
updated the type of ` hq ` from ` PriorityQueue < ? > ` to ` PriorityQueue < ? extends ScoreDoc > ` to improve type safety
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerExceptions when the ownerConnectionAddress is null
camel - 10278 : camel - jolokia - add ability to retrieve headermap factory via jmx .
added single quotes around closing braces in JavaCompiler . java and Diagnostic . java to improve code readability and maintain consistency
int - 1334 add spring xml namespace support for the jms outbound gateway .
updated index parameter in the expect method call from ` i + 1 ` to ` i + 2 ` to ensure correct indexing for array replacement
updated classloader creation logic and added error logging for script engine initialization to improve error handling and ensure script engine is only added when necessary
added support for the ` org . postgresql . PGStatement ` in Proxy . newProxyInstance calls to ensure compatibility with the correct PostgreSQL
[ hotfix ] [ test ] fix test memory size estimate for cassandraiotest
changed log level from error to warn in AtomicRemainder . java to indicate a warning instead of an error for memory limitations
fix aggressive full - expired ttl expiration . patch by gdusbabek , review by jbellis for cassandra - 16
fixed - rblockingdeque . poll ( ) and rblockingdeque . poll ( ) method return 0 instead of 1 .
removed unnecessary parameters from printMap calls in JobInspectCommand . java to simplify output formatting for better readability and maintainability
refactor Engine class to improve code organization to enhance maintainability and readability of the code
refactor sorting logic in ChildHolder to use CLASS _ COMPARATOR for better readability to improve code clarity and maintainability by using a more
remove acl hook , use sessioncredential instead
updated condition from ` numIndexDims ` to ` numDataDims ` in BKDWriter . java to ensure correct handling of data
[ zeppelin - 2478 ] fix npe when interpretergroup be null
updated the parameter in ExpressionNodeEvaluator from funN to lt to ensure the correct variable is used for expression evaluation
removed public access modifier from methods in NodeIdAccessor . java to enhance encapsulation by restricting method visibility
fix the error message when create a snapshot policy for a volume that do not have storage pool
removed public access modifier from methods in ItemWriter . java to enhance encapsulation by restricting method visibility
updated the ThingImpl initialization to include a test parameter to improve clarity and specificity of the test case
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test case in ` ImageNameSubstit
replaced FSDirectory with RAMDirectory in TestNorms . java to improve performance and reduce resource usage during test execution
added a check for the height of mDrawTextRectBuffer before calculating the line height to avoid unnecessary calculations when the height is less than the current
refactor WalletAppKit class to improve code readability to enhance maintainability and facilitate future updates
remove hat _ js _ nashorn from the initialization of the oql engine
chat transport selector : fix menu / button remove issue
added resolve and replaceTokens methods to Context and ContextImpl classes to enhance functionality for token handling in the application
protobuf : do n ' t call setbsqblockchainexplorer when the bsqblockchainexplorer field be null ( #
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49156 . add attribute
added assertions to verify the names and ages of the plain bean in TestDbJson _ List . java to ensure that the correct fields are returned for
[ java ] use initialpagecount instead of pageSize for monotonicappendinglongbuffer average
fix typo find by codespell on fossies . org
added DataSource and JdbcTransactionManager bean configurations for HSQL database in BatchMetricsApplication to enable proper database management and transaction management for batch processing
fix checkstyle issue in net / glowroot / glowrootloghttpservice . java ( # 380 )
pdfbox - 4892 : fix issue with pagedrawer . getdrawable ( ) and pagedrawer . drawimage ( )
removed unnecessary synchronized blocks and added synchronization for the close method in DocumentsWriter and IndexWriterPerThread to improve performance by reducing unnecessary synchronization
added methods to retrieve and set multiple choice options and validation constraints in UiBinding . java to enhance functionality for handling multiple choice options and validation constraints in
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for setting properties across multiple classes to improve code clarity and ensure
added a fullSave flag to conditionally update the stored copy of the subTree to prevent updating the stored copy of the tree for a full save
refactor Affix and Dictionary classes to streamline condition handling and improve pattern tracking to enhance code clarity and maintainability by reducing redundancy in condition management
replaced explicit generic type parameters with diamond operator in KrakenAdaptersTest . java to improve code readability and maintainability
removed the import of CharTermAttribute and its retrieval in DefaultIndexingChain . java to streamline token attribute handling and improve code clarity
refactor NBJavacTrees class for improved readability to enhance maintainability and clarity of the codebase
removed unsupported encoding check in VectorizedPrimitiveColumnReader to simplify error handling for unsupported data encodings
added MarkerFactory import and modified logging logic in HttpSolrCall . java to enhance logging clarity and maintain consistent logging behavior
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener to ensure proper cleanup of metadata service proxies
fix infinite recursion when default max level be set to 10
updated error message formatting to include check for null changelog ID to improve clarity of error messages when changelogs are not registered with the Hub
add tryharderhint to make test more robust .
updated the ` executeCompilation ` method to return ` ProcessExecutor . Result ` instead of an ` int ` and modified related return statements to improve code
updated event handling logic in ObjectStore . java to simplify event count counting to improve code readability and maintainability
refactored the support check for @ Validated annotations in ValidatedLocalValidatorFactoryBean . java to simplify the logic and improve readability of
fix memory leak in entityawareworldprovider
[ hotfix ] remove unnecessary code in intrinsifyarraycopyphase
do n ' t set log level to all in testcoyoteadapter
removed the ` WantedAnywhereAfterFollowingInteraction ` class and updated stack trace assertions in multiple test files to streamline exception handling and improve
added null checks for ownerAddress and keyAddress in AccountPermissionUpdateActuator and updated address validation in PermissionAddKeyActuator to ensure
do n ' t use comparator in script to sort the command
fix ( ruby ) : add ruby namespace for lifescience and v2bet
corrected the method name from ` addProperty ` to ` setProperty ` in ` BaseSingleTreeBuilder . java ` to improve code readability and maintain
updated AsmLoader to accept a ClassLoader parameter and added constructors to the AsmLoader class to enhance class loading flexibility by allowing the class loader
pdfbox - 4892 : fix a problem with rline ( ) and rrcurveto ( ) , a suggest by valerybokov
updated export statements in Java2TypeScriptTranslator to conditionally include a namespace declaration based on the definition scope to improve clarity and functionality of the export
updated HttpClientTest to use AbstractHandler instead of EmptyServerHandler and added copying of the input stream to enhance request handling and ensure proper output stream management
removed unnecessary string array creation for listeners in HelloInput . java to simplify code and improve readability
fix npe in abstractsqmpath when lhs be null
updated package declarations in multiple test files to improve code organization and readability
use int _ rgb instead of int _ rgb for indexed image in awtcanvas .
make libgraal work on graal when run from a jvmci environment .
[ hotfix ] [ test ] remove usage of dataflowportabilityapiunsupported
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code ( # 118 )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for the classes
refactor CallStack class to improve code readability to enhance maintainability and facilitate future updates
log warn if max size of map do n ' t allow any data in the map .
fix ( core ) : change ast to lst in error message
alexeibarantsev : fix bug in threadedacousticscorer . getscoreablesperthread ( ) . fix
nethooks : do n ' t throw illegalargumentexception when attempt to connect .
fix flaky test : use window ( ) . gettitle ( ) instead of serveraddress ( ) .
added a default ` makeString ` method across multiple iterable classes to standardize the string creation logic across different iterable classes
replaced ` Ordered . HIGHEST _ PRECEDENCE ` with ` DEFAULT _ ORDER ` in ` OidcServicesManagerRegisteredServiceLocator
added a ` Predicate < ProposedWeakAssociation > ` parameter to the ` WeakAssociationsAnalyzer ` constructor and updated related tests to utilize
refactor Deflater class to improve performance to enhance compression efficiency and reduce memory usage
added a try - catch block to handle exceptions in Font . java to improve error handling by throwing an IOException if an exception occurs
added a null and empty check for the content variable in VersionTypeBinding . java to ensure that a valid version is returned when the content is empty
refactor NearbyListFragment to directly return the list of places instead of using a private list to simplify the code and improve readability by
updated content type check to be case - insensitive to ensure consistent handling of content types regardless of case
change visibility of auth _ magic in opensshprivatekeyutil to public .
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for folder name suggestion updates to enhance functionality based on whether the folder
updated InheritanceCacheTest to use wildcard import and added JPA annotations for finding the Post class to improve code clarity and ensure proper access control for
updated import statements in ConnectOAuth2RequestFactory and TofuUserApprovalHandler , and implemented getUserApprovalRequest method in TofuUserApprovalHandler to
fix influxnamingconvention convention to not apply to tag value
remove system . out . println ( ) from twoproblemhere and add a dump ( ) method .
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection to ensure compatibility with updated cookie handling
added a static method ` classMetadataUnsupported ( ) ` to the ` Platform ` class and updated its usage in the ` Subject ` and ` Platform
added functionality to enable or disable a clear all task based on user preferences to enhance user control over task visibility and task management based on user preferences
updated ` ClusterStackVersionResourceProvider ` and ` HostStackVersionResourceProvider ` to include a ` repository _ version ` field and increased the timeout
remove memoryleaktest since it ' s not use anymore
updated the return statement in ServletTester to use the local host name if localhost is set to ensure the application connects to the correct local address
added a check for ` USE _ MVDWAPI ` in the plugin check and introduced a new setting for hooking into ` Mv
fix cluster size assertion in abstractpartitionassignmentscorrectnesstest
replace unsupported operation exception with a singleton instance of FFIProvider to improve resource management and ensure FFIProvider is only instantiated when required based on
tika - 3623 -- add test for hierarchical file list in tika - batchprocess
added null checks for objectToSave , collectionName , and persistentEntity in MongoTemplate . java to ensure proper handling of null values and improve test
nodeclass : use node _ list instead of 0 for direct input and successor
added a new field ` accTradeValue ` to the ` BithumbTicker ` class and its getter method in ` BithumbTradeServiceRaw `
updated logging statements in RealtimeSegmentDataManager . java to use parameterized messages instead of string concatenation to improve readability and maintainability of log messages
updated maxParallelThreads to a static final constant MAX _ PARALLEL _ TASKS in OverseerTaskProcessor . java to improve
replaced ArrayList with CopyOnWriteArrayList in FixedByteMVMutableForwardIndex and FixedByteSVMutableForwardIndex classes to ensure thread - safe access to
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 640 : fix typo
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions during execution
camel - http : / / issues . apache . org / jira / browse / camel - maven - plugin / camel - msv -
camel - 13636 - camel - jbang - fix delegation service start cycle check to use > instead of = =
updated RandomValueStringGenerator to use a random value of 10 and modified test assertions to check for a length of 10 instead of a non - negative
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure proper matching of UniqueConstraint instances
updated the description processing logic in MediaDetailFragment . java to improve handling of multiple language codes to enhance the accuracy of description processing by ensuring all supported
do n ' t swallow arrayindexoutofboundsexception in findbugs2 .
added a new method with reference and key filters to ListImagesCmd and updated ListImagesCmdImpl to utilize these filters to enhance functionality by allowing
( chore ) camel - jms : remove bridgeerrorhandler from camel - jms
added a check to break the process if no ops are found and set all ops to true to ensure that exclusion settings are only set to true when
added two return statements to the DatabaseCommand class to ensure that the method returns a boolean value indicating success or failure
updated Politicians in HonestPoliticianExample . java to use specific names to improve clarity and accuracy of Politician representation
( chore ) camel - shell : use stringutils to check if initfile be not empty
camel - 14284 : camel - restlet should use getport ( ) instead of hardcoded 0
removed unused imports and added a case for WALL _ SIGN in SchematicFormat . java to streamline imports and improve code clarity
set a system property " hive . query . max . length " to 100Mb in QTestUtil . java and remove unnecessary overridden configurations
updated access modifiers and refactored HTTP configuration methods in WebServer and WebServer classes to enhance encapsulation and improve code readability
[ hotfix ] fix typo in sink and source name
modified the logic to determine if the application name is not equal to " spark . app . name " and updated the application name handling in HiveS
rename ` ` white ' ' to ` ` included ' ' in managedclassfactory
simonstewart : add the ability to maximise a window with a size of 200
refactor ` LocalCellProviderFactory ` , ` AbstractEmbeddedCellBuckOutInfo ` , and related classes to improve handling of main cell Buck
added a null check for the exception message in TestXMLEntityExpansion . java to ensure that the exception message contains " entity expansions "
updated table offset and length calculations to mask values with 0x7FFFFFFF to ensure proper handling of bitwise operations for table length
added an assertion to check that the customized field is null to ensure that the form ' s customized field is not null to prevent potential NullPointerExceptions
refactor line buffer initialization and bounds checking logic in LineChartRenderer . java to improve readability and maintainability of the code
refactor flavor handling in AndroidBinaryDescription to use a loop instead of a single flavor check to improve code readability and maintainability by consolid
change buffer index from offset to i in LwjglGL11 . java to ensure correct buffer generation based on the specified index
added new classes ` Property ` , ` PropertySuper ` , and ` TestClassResolutionFail ` , and implemented a test class ` TestClassResolutionFail `
[ java ] do n ' t remove shutdown hook when completely shutdown .
updated FilterChainProxy to use FilterChjainProxy instead of FilterChainProxy and simplified the constructor parameters to enhance code clarity and maintainability by
updated sorting and retrieval methods in PercentileAggregationFunction to use Arrays instead of Collections to improve performance and readability of the code
added checks for schema loading before loading tables in MetaDataBasedSQLCompletionProvider and QueryTypeAnalyser to ensure that tables are only loaded when the schema
set ` baseType ` to null in ` DatabaseInfoRetriever ` and initialize ` literalPrefix ` and ` literalSuffix ` in ` MutableColumnDataType
updated JavaDoc comments to use { @ link } syntax to improve code readability and maintainability
replaced multiple instance retrievals of evaluator instances with a single instance method to improve code readability and reduce boilerplate
updated references from " osx _ x86 - 64 " to " osx _ config " across multiple test files to standardize naming conventions
added sound effect handling in AllAppsView . java to improve user experience by enabling sound playback
updated the main method to throw IOException instead of Exception to improve error handling by providing a more specific exception type
enable the granularity of the left axis in BarChartActivitySinus to improve visual clarity of the chart display
refactor version comparison logic into a separate method ` compareVersions ` to improve code readability and maintainability
updated file handling in ContextHandlerGetResourceTest to use MavenTestingUtils and added OS alias support checks to ensure compatibility with different operating systems and
added a close method to multiple client transport classes and implemented it in JsonAsyncHttpPinotClientTransport to ensure proper resource management and prevent potential resource
change mockappender to use a blockingqueue instead of a counter to improve performance .
[ beam - 4142 ] improve error message when resource be not a directory
updated import statements in IsometricStaggeredTiledMapRenderer . java to improve code clarity and maintainability
removed duplicate call to unbindHandle in ItemServiceImpl . java to streamline code by eliminating redundancy
refactor configuration and attribute classes for improved clarity to enhance maintainability and readability of the codebase
removed unnecessary conditional checks for touch tracking in OtherActivityTouchConsumer . java to simplify code logic for better readability and maintainability
updated NavbarButtonsViewController to use UI _ MODE _ NIGHT _ MASK and adjusted button image tinting based on theme settings
bugfix : do n ' t swallow error if we ca n ' t determine the language
replace ` bootstrapMethodIndex ` and ` nameAndTypeIndex ` with ` refKind ` and ` memberIndex ` in ` ClassWriter . java
added BlockFormattingContext parameter to findBox and findElementBox methods to enhance functionality to support block formatting context handling
added a method to retrieve standard error output and improved error handling in WorkerProcess . java and WorkerShellStep . java to enhance error reporting and provide
added null checks and improved error handling in Collections and CheckedListReplaceAll to enhance robustness by preventing NullPointerExceptions during list replacement operations
added volatile boolean and FutureCallback handling in SslConnectionTest . java and implemented a test for writing on a connection to improve connection handling and ensure
added device configuration change listeners to the DeviceFlag class and made default value final in FeatureFlags . java to improve listener management and ensure default value is
added an import statement for JUnit ' s Ignore annotation and annotated the test class with @ Ignore to temporarily disable the test due to a known issue
removed import statement for MalformedURIException in StandardRequestHandler . java to clean up unused imports and improve code clarity
modify instructorfeedbackeditpage to focus on the first argument when click on the edit button
refactor synchronization logic in KrakenStreamingTradeService for better readability to improve performance by reducing unnecessary synchronization blocks
updated print statement from ` System . err ` to ` System . out ` in ` ChangeableUrls . java ` to improve log readability
added support for random access rows in SparseRowMatrix by introducing a new constructor and modifying the constructor accordingly to enhance flexibility in handling random access rows
cloudstack - 10226 : add volume delete usage event only if the volume have a poolid
refactor file input handling to differentiate between local and global configurations to improve flexibility in loading the Hive plan based on configuration settings
[ beam - 12274 ] fix compile error due to vendored guava
reset internal profiler provider after profile .
fix a nullpointerexception in conferencechatmanager when there be no multiuser chat operation
added file creation and writing checks in Save . java to ensure the file can be written before proceeding with operations
added support for folder synchronization in the DrawerActivity and created a new FolderSyncActivity to enhance user experience by allowing users to navigate to a folder
[ hotfix ] use try - with - resources in sequentialchannelstatereaderimpltest
improve the spanish tree normalizer to handle comma as well a comma .
pdfbox - 4892 : use heappointwriter . getpackedvalueslice instead of heappointwriter . pointvalue ( )
add a new LocaleRandomizer class and its corresponding test to provide functionality for generating random locales based on available locales
added unit tests for MIME types in TestMimeTypes . java to ensure proper handling and parsing of font type data in the application
add 9.0 - > 9.0 to the list of installed packages in Installer and AutoUpgrade classes to ensure compatibility with the latest version of the
reformatted the ` AccessController . doPrivileged ` call in ` TCPTransport . java ` to improve code readability and maintainability
updated socket wrapper ' s read method to include a default value of 0 to ensure that the read timeout is always set to zero for blocking operations
increased the default initial delay for the WATCHER _ INITIAL _ DELAY from 120 to 600 milliseconds to allow for a longer wait time
updated SQL error message formatting in SelectStatement . java to improve clarity and consistency in error reporting
added date handling functionality to ThirdEyeJiraClient by importing DateTime and DateTimeFormatter to enhance date handling capabilities in the Joda - Time library
refactor priority generation logic in HeadersGenerator and PriorityGenerator classes to improve code readability and maintainability by centralizing priority generation logic
added a constant for maximum scalar replacement code size and updated the condition to check if the entire class length does not exceed a predefined limit
add date _ takenn to the list of projection in mediaprovider .
updated image drawing calculations in TexturePacker2 . java to correct the positioning of the rectangle to ensure correct rendering by adjusting the image dimensions
updated JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to utilize the context handler and ensured the WebSocketUpgradeFilter is properly configured
added shutdown calls to Manager , TransactionsMsgHandler , and TransactionsMsgHandler , and reformatted Timer initialization in NodePersistService to improve resource
added RawJsonRequestBody annotation to Swagger generator context and registered it in Echo to support raw JSON input handling in the Swagger generator
added a new method ` newTarget ` in ` LoggerUtils ` to create a ` Target ` instance with specified type and extension to enhance functionality for
updated ListBeanContainer to create a new ArrayList from entries and added unit tests for BeanContainer to enhance functionality and ensure proper functionality of list operations
hbase - 26165 testmetricsregionserver . testgetblockcachehitpercent should use ` ` blockcachecounthitpercent ' ' instead of
camel - 11624 : camel - core - optimize to reduce memory footprint of cachedoutputstream
fix : fix teltonika decoder
updated the method for reading the first line in HybridProjectBuildFileParser to use asCharSource instead of Files . readFirstLine to
added a null check for the operator in JCAssignOp and created a new Test class with an unknown class to ensure proper handling of null operators and
added a boolean flag ` enableAccountHandling ` and modified the ` onCreate ` method call in ` BaseActivity ` to conditionally call ` mixinRegistry
refactored IsochroneResource to use a heuristically find main connected component to improve code readability and maintainability by reducing redundancy
updated DrillViewTable to accept a list of paths and modified its constructor to accept a path list to enhance flexibility in managing view paths and improve
updated constructor parameters in PooledByteBufAllocatorL to include additional pool size configurations to enhance memory management flexibility for different allocator configurations
updated array type check from double to short in ObjectInputStream and added a new CloneArray class to enable cloning of short arrays instead of doubles
added LLAP _ IO _ THREADPOOL _ SIZE configuration to control the number of threads used for low - level IO thread pool
use sun . security . ssl . debug and sun . security . ssl . ssllogger in jdk 8 +
updated latitude and longitude range validation in LatLonGrid . java and added a new test for growing a polygon in TestLatLonGrid . java to ensure
simonstewart : add expectedconditions . invisibilityofelementwithtext and add invisibilityofelementwithtext to the expectedcondition
added an additional parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and updated its implementation accordingly to enhance functionality by allowing insertion of existing
added a test for the ` getOuterClass ` method in the ` ReflectorTest ` class to ensure that the ` getEnclosingObject ` method
updated the default value for " auto _ android _ facet _ sources " from false to true in IjProjectBuckConfig . java to enable
updated message handling in HubChangeExecListener to include the changeset author ' s message to improve clarity and context of communication failures in the UI
added properties property management in Link class and corresponding test cases in QuickLinksConfigurationModuleTest to enhance configuration flexibility by allowing properties to be overridden
added a ` toString ( ) ` method to ` YamlConfigFileDTO ` and modified the ` InitialConfig ` class to implement a custom ` toString (
fix generic in awaitableserverclientcallconfiguration
refactor forName methods to include a caller class loader parameter and improve class loading logic to enhance flexibility in class loading behavior based on caller context
replaced ` isEmptyOrNullString ( ) ` with ` IsEmptyString ( ) ` for token retrieval in ` RequestItemRepositoryIT . java ` to
replaced ` LinkedBlockingQueue ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve thread management by using a more suitable thread pool
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
updated imports and refactored code to replace HumanTime with Calendar in TimeStepdefs . java to improve code organization and enhance readability
fix incorrect pattern for spark _ isolated , spark _ recessive , and spark _ isolated
updated the ` RestProxyFactory ` calls to use ` exchangeSpecification . getUri ( ) ` instead of ` ExchangeSpecification ` to streamline proxy creation
updated print statements in RecordGenerator . java to include a suffix after generated file to simplify output formatting for better readability and maintainability
( chore ) camel - kafka : do not auto commit offset when autocommit be enable .
updated lock handling in LoggingExecutor and added database change log lock table flag in StandardLockService to improve lock management and ensure database change log table is
updated @ SuppressWarnings annotations in AbstractAuthorizeTag and added deprecation and serial warnings in AuthorizeTagCustomGrantedAuthorityTests to improve code clarity and
no effective change - remove unnecessary ' this ' from synchronized method
camel - 14284 : camel - spring - boot - auto - configuration - add support for nested property source .
updated the method call from ` currencyPair . baseSymbol ` to ` currencyPair . counterSymbol ` in ` VirtExMarketDataService . java ` to
camel - core : fix the build error of camel - core
replace UUID generation with system property retrieval for testId in HoneycombJdbcInterceptor to ensure compatibility with system - dependent test IDs
added synchronization to date parsing and formatting in DefaultJobParametersConverter . java to ensure thread safety when accessing shared resources
updated package - info . java files for mmm and ppp to improve documentation clarity and maintainability of the code
fix a bug in FractalHeightMapGrid where the height scale would be 256 instead of 256
updated equality check in SecurityConfig and changed assertion method in SecurityConfigTests to ensure correct comparison of security strings and improve test reliability
added a default value of false to the ` dumpPartitionId ` variable in ` StdoutSink . java ` to ensure that the default value is not
added unit tests for TronTXOutput and TronTXOutputs in UTXOSetTest . java to enhance testing capabilities for Tron
[ java ] unused variable : fix false positive with unused variable
pdfbox - 4892 : avoid npe , a suggest by valerybokov
reformatted code for better readability in JsrJobOperator . java and added a new test method in JsrJobOperatorTests .
added a new field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ` to the ` DatabasePlatform `
refactored the principal retrieval logic in JaasAuthenticationHandler . java to improve readability and maintainability of the code
refactor core closing logic to use an executor service for thread safety to improve resource management and ensure proper shutdown of the SolrCore
added null check for mActionsView before setting visibility to VISIBLE or INVISIBLE based on fullscreen progress to improve user experience by ensuring actions view
refactor parameter handling in RunIdIncrementer to use a conditional assignment to improve code readability and prevent potential null pointer exceptions
refactor BasicEntity and TestUtil classes to improve code readability and maintainability
added unit tests to verify the results of ` getMatchedDevices ` method in ` SchemaRegionBasicTest ` to ensure that the correct number of matched
refactor MetricsEventBus to use tryInvoke for event processing to improve error handling and logging for metric event executions
added a conditional check for max in EigenvectorCentrality and created a new EigenvectorCentralityBuilder class
updated registry handling in LookupIPv6 . java to use a dynamic port instead of a hardcoded value to improve flexibility and maintainability of registry
[ geot - 4846 ] geometrygenerator now properly set type and color .
change the amplifier value from 2 to 0 in the BlockEntityBeacon . java file to improve the ambient effect of the beacon
refactor TubeCalc class for improved readability to enhance maintainability and clarity of the codebase
disable client health check by default
updated the type of ` DEFAULT _ GROUPS ` from ` Class ` to ` List < Class < ? > > ` and added validation checks for
updated bug annotations and added a timeout for the main method in the JList selection test to improve test reliability and ensure proper execution of the main test
fix # 322 to allow application to exit via main method completion ( # 322 )
do n ' t replace a number with a digit when parse the lexicon version
added a call to ReflectionCheckLinker . checkReflectionAccess ( type ) in JavaAdapterFactory . java to ensure proper reflection access validation for type
[ java ] use ` ` lazysessioncreation = true ' ' instead of ` ` sync = true ' ' in test
updated ` initIOContext ` method to accept a ` RecordReader ` parameter and modified the initialization logic in multiple classes to enhance flexibility in I /
deleted ClassLoaderHolder . java and LoaderManager . java files to remove unused classes and simplify the codebase
added a method to update workspace roots and modified file removal logic to handle non - writable paths and improve file validation to ensure that workspace roots are
added try - catch blocks around session callback registration and unregistration to handle potential exceptions gracefully
removed " src / test / org / apache / lucene / index / index . cfs " and added " 23 . nocfs " to
added a method to create and start a AkkaRpcService using a BiFunction to improve flexibility and allow for custom instantiation of AkkaRpcService
added a retry configuration for mapreduce map attempts in TestExportSnapshot . java to limit the number of map attempts when not retryable
pdfbox - 2576 : set non - symbolic flag for font - specific font , a suggest by valerybokov
add a new test class SslConnectionTest for verifying SSL connection behavior to ensure that SSL connections are properly closed before being filled
added validation for address family type in InetAddress and NetworkInterface classes to ensure only valid IPv4 and IPv6 addresses are processed to avoid runtime errors
added a test method to serialize a list of date objects in a collection to ensure proper serialization and deserialization of date objects in the collection
refactor Message class to improve code organization to enhance maintainability and readability of the codebase
added debug logging for SQL generation in PutDatabaseRecord . java and modified conditional logic in PutDatabaseRecord . java to improve traceability of SQL generation
updated loop condition in TableOutput . java to correct the calculation for loop iteration to ensure correct handling of widths within the running width
pdfbox - 4892 : remove null check , a suggest by valerybokov
raise priority of formatstringchecker when there be no { 0 }
add property to ignore non - final loop variable in for - each statement
updated PDFExporter and test files to include new PDF version and full compression settings to ensure compatibility with newer PDF formats and improve test coverage
added a new test class LdapUserDetailsMapperTests to validate role attribute mapping to ensure correct functionality of the LdapUserDetailsMapper class
added ldap . read . timeout configuration to make ldap connection timeout configurable
updated test classes for consistency and clarity to improve maintainability and readability of the test suite
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
updated variable and method names from ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to improve clarity by indicating that allocation should
added a condition to check if the state handler is invalidated in the gesture state check to ensure that gesture handling only occurs when the state handler is
updated folder creation distance and old rotation values in Workspace . java to improve accuracy of folder creation distance calculations
use configproviderresolver instead of configprovider to get default source for oci . config . path property
refactor Testjsig class for improved readability to enhance maintainability and facilitate future updates
fix the mana table not return the correct mana if there ' s no mana available .
regenerate client with updated copyright year ( # 4382 )
added @ SuppressWarnings ( " serial " ) annotation to P11TlsPrfGenerator . java to suppress serialization warnings for the class
refactor file validation logic in DataRegion . java for clarity and correctness to improve code readability and ensure proper cleanup of tsFile resources
added new Switch21 class with multiple switch pattern matching and null handling methods to implement string formatting for switch patterns in various contexts
updated error messages in ComparableSubjectTest . java to remove method invocation conversion errors to simplify error reporting for better clarity and maintainability
[ ooxml ] add standalone flag to streamhelper , and add test
updated the size constraint and improved exception messages in Int2ObjectCache . java to ensure that the cache size does not exceed the maximum array size and
updated security filter chain ordering and added a new test for ordering security filter chains to ensure proper ordering of security filter chains in the application context
removed TimeInForce . GTC from the market order parameters in BinanceTradeService . java to simplify the order processing by removing unnecessary time -
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and update default minimum and maximum values to enhance functionality and ensure values are validated against minimum and maximum
change the separator character from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure the correct separator is
camel - 14284 : camel - core - add support for camel - jms to be able to load component type from classpath .
added error handling in SourceUtils and created a new test class for it to improve robustness of the SourceUtils by handling potential NoSuchFieldError and
refactor leaf filter builder logic to use a dedicated method for converting Parquet type to FilterPredicateLeafBuilder to improve code readability and maintainability
updated BatchPropertyBeanPostProcessor to conditionally strip the original artifact name if it starts with the SCOPED _ BEAN _ PREFIX to
fix segment fetcher to read all the certificate , not just the first one
refactor ` getDefaultBooleanValue ` method to return a ` String ` instead of a boolean and add a new class ` DnsFallback ` for testing
ww - 4892 add more information to exception when tag can not be write
changed the ` success ` field from a boolean to a ` url ` string in the ` DepositAddress ` class to replace the ` success ` field
refactor Privilege handling in WindowsSecurity to use a lambda expression to improve code readability and ensure proper resource management
removed " address " and " phone " from the scope configuration in CommonOAuth2Provider and its tests to simplify the OAuth2 provider to only allow
fix thread issue with managedselector . start ( )
added constants for BIG _ DECIMAL _ 182 _ 04 and saturation calculations in WLedHandler . java , and modified win request
refactor VectorizationProvider to use a set of valid callers instead of a single validation method to improve code readability and maintainability by reducing
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to handle JSRInst cases in the code
added transaction management to the subscription activatingsubscriber .
refactor SQL statement handling in DBMSProcessor . java to improve readability and error logging to enhance code maintainability and error handling during database operations
removed elevation setting logic from ContactItemInflater for devices running Lollipop and above to simplify code and ensure compatibility with newer Android versions
rename ` ` typeinformation ' ' to ` ` identifier ' ' in j class
added ` AccessController . doPrivileged ` to file operations in ` SandboxFileManager . java ` to enhance security by restricting access to sensitive operations
updated GroovyParserVisitor and GroovyPrinter to handle access operators and added space handling for binary operations to improve code readability and maintainability by standardizing
updated warning message format in MetaDataFetcher . java to include class name to improve clarity of log messages for better debugging
updated character handling and compression checks in RecordInputStream and UnicodeString classes , and added a new test case for UMIat reading in TestUnicodeWorkbook
add a test to verify that file name contain no way character .
updated CancellationException handling in AsyncResource and added isCancelled methods in FingerprintScannerSample and FingerprintScannerSample to improve error management and enhance
added a null check for statistics before handling the count in TimedMemberStateFactory to avoid potential NullPointerExceptions during cache handling
refactor test annotations and add a new test method for removing an object from an explicit collection to improve code readability and enhance test coverage for object
update copyright year to 2022 , fix some javadoc error
updated string formatting in Coder . java to use % n instead of \ n to improve readability and consistency in formatting output
added a flag to track if the clear all button is fully revealed and refactored scroll handling in RecentsView and PagedView to improve
added a static final map ` COMMON _ HMS _ PROPERTIES ` and refactored parameter handling in ` HiveIcebergMeta
added a method to check if a server address is in use and updated related code to use this new method to improve error handling and maintainability by
added a command - line argument for copying the test class path in TestNestmateAttr . java to enable dynamic configuration of the test class path
updated logging level from VERBOSE to verbose _ schema in Grep . java to improve clarity and consistency in logging output
fix checkstyle and remove unused import
fix : add support for nested transaction use savepoint
replace int fetchSize with ThreadLocal < Integer > fetchSize in QueryProcessExecutor and update related methods accordingly to improve thread safety and ensure fetchSize is
[ java ] remove sharednetworkidlestrategy from embeddedpingpong .
add a helper method to handle the return value of a non - nullable java method .
added HDP _ VERSION system property setting logic in SliderAppsViewControllerImpl . java to enable dynamic configuration of HDP version based on configuration
updated JavacProcessingEnvironment to manage ServiceLoader reloading and added close methods to improve resource management and ensure proper closure of service loaders
added DeepCloner to clone parameters in ParameterizedRobolectricTestRunner and modified method visibility in ParameterizedRobolectricTestRunner to enhance method functionality
added binding for JETTY _ SHOW _ STACKTRACE to Boolean . FALSE in ResourceBase . java to enhance debugging capabilities by providing stack
added a check for OBJECT type in NativeObject . java to ensure proper handling of object types to avoid runtime errors
refactor OopField initialization to use a single instance of OopField for better clarity and consistency to improve code readability and maintainability by
added support for ec and rsa key serialization in jwkkeylist
[ gr - 26458 ] fix default behavior of heap . spawnisolates and spawnisolates .
refactor MBeanServerMXBeanUnsupportedTest . java for improved readability to enhance maintainability and clarity of the test code
removed import of OrderClassLoaders from MavenPluginCollector . java to streamline dependencies and improve code clarity
updated methods in Actuator , CreateAccountActuator , TransferWitnessActuator , and TransactionCapsule to include getOwnerAddress method
add a new demo class to demonstrate how to use a broker with dot file .
refactor command execution to use byte array representation based on min and max values to improve handling of edge cases when min and max values are NaN
protoannotationserializer : add support for empty index for protos
[ java ] do n ' t remove a command from the async command set if it already exist .
added saveConflict method calls in FileDataStorageManager , FileDownloader , and FileUploader classes to ensure proper handling of file conflicts in the storage
( chore ) camel - test - infra - transactional : fix raw and unchecked warning
replaced instances of ` StrUtils . splitFileNames ` with ` splitFileNames ` across multiple filter and factory classes to streamline imports and
added Oracle and MySQL driver properties to enable remarksReporting and useInformationSchema to ensure compatibility with Oracle and MySQL database driver configurations
updated the constructor of MethodInterceptor to accept a handler parameter and added a serialVersionUID to ensure compatibility with the updated method interceptor
updated time calculations in FileChangedExclusiveReadLockStrategy to use current time instead of a Date object to improve accuracy of time comparison by using a more accurate
[ hotfix ] [ table - planner - blink ] wrap classloader in environmentinstance
added onBufferChanged method to TerminalTextViewOverlay and modified buffer handling in TerminalTextViewOverlay to ensure UI updates correctly when the terminal buffer changes
reformatted code for better readability and added conditional logic to enhance code maintainability and ensure proper handling of service PID namespaces
refactor freeze action logic to conditionally handle frozen calls based on VM configuration to improve code clarity and maintainability by consolidating freeze action logic
added support for insecure TLS configuration in TlsConfig and updated TlsUtils to utilize this feature to enhance security by allowing users to configure
refactored code to simplify the path retrieval logic in JavadocTool . java and added a new class T7091528 . java with
replaced case - insensitive comparisons with case - insensitive comparisons for edge columns in ExporterGDF . java to ensure case - insens
updated the @ OneToOne annotation to use CascadeType . ALL for the DefaultAddress entity to ensure that the entity is properly marked as MAN
change message . hashcode to use array . equals instead of message . getmessageid ( ) .
fix unit test to use unicode instead of unicode
[ hotfix ] remove unused iskeyserializertypevariablesizedd from rocksdbserializedcompositekeybuilder
added a method to retrieve static permissions in ProtectionDomain and updated its usage in SubjectDomainCombiner and JavaSecurityProtectionDomainAccess to ensure proper handling of static
fix some null pointer exception in recipe handler . close # 296
refactor parsing logic in mmm Parser . java to improve readability and maintainability of the parser code
added a connection error popup method to UploadMediaDetailFragment and UploadMediaDetailsContract , and modified error handling in UploadMediaPresenter to improve user experience
added a new file ` Issue596 . java ` and modified ` HttpHandlerImpl . java ` to check for ` contentType ` in ` Status
change bitwise operation from bitwise & ~ ( 1 < bitIndex ) to bitwise AND ~ ( 1L < bitIndex ) to ensure
refactored imports in ImportLayoutStyle . java to improve code readability and maintainability
refactor ConsoleUIService to replace gitBashConfigValue with useStdIn and add MINTTY environment variable handling to improve flexibility in terminal
replaced mock account manager callback implementation with a new test account manager callback to improve test readability and maintainability by using a dedicated test class
remove private field from analysistype so that it can be reuse
corrected method names from ` getProperty ` and ` getEntries ` to ` property0 ` , ` getEntries ` , and ` concatSuffix `
[ hotfix ] [ runtime ] remove unnecessary timeout in putallcallable
[ issue # 6063 ] fix npe when register consumer in mqclientinstance ( # 6063 )
[ java ] generate source identity only when necessary for the driver .
added a new file ` TopTabAction . java ` that implements the ` ActionListener ` interface to provide a toolbar with a label for the top tab
camel - core - optimize to reduce object allocation when use recipientmode = all _ match .
updated AggregateItemReaderTests to use JUnit 4 annotations instead of TestCase to improve test structure and ensure compatibility with JUnit 4
updated the generic type parameter in Procedure constructor to improve type safety and clarity
updated AchievementsActivity , OkHttpJsonApiClient , NetworkingModule , and OkHttpJsonApiClient to improve user experience by counting edits and
added a validation check to ensure the length does not exceed Short . MAX _ VALUE to prevent runtime errors
do n ' t report overflow for min _ value and integer . max _ value
refactor multiple category dataset classes to improve code organization to enhance maintainability and readability of the codebase
enhanced error messages in ProvisionClusterRequest for better clarity to improve debugging by providing more context on acceptable credential types
updated random number generation for v [ 0 ] and v [ 1 ] in TestVectorUtil . java to improve randomness in random number generation
change the return type of the ` compareBy ` method from ` int ` to ` long ` and simplify comparison logic to improve code readability and
fix test failure when ssl system property be not set
simonstewart : disable safebrowsing by default
fix potential npe in basemotormount and recoverydevice . setflightconfiguration ( )
added a condition to check if transcoding is disabled in the DLNAResource class to ensure proper rendering behavior when transcoding is disabled
updated table diff logic to handle empty list scenarios and improved error message formatting to enhance robustness and prevent potential NullPointerExceptions during table comparisons
added a new constant ` CustomIgnoreTag ` and logic to remove it from the iterator if the section ' s native code starts with ` CustomIgnore
camel - 16465 : camel - jdbc should throw optimisticlockingexception instead of runtimeexception for optimisticlockingexception
do n ' t require private method to be inject with @ configurationproperties ( parent )
updated PreferencesActivity to extend LimitlessIDEActivity and added toolbar padding to enhance UI consistency and ensure toolbar padding is applied correctly
deleted the ClusterNodeInfo . java file to the functionality is no longer needed in the project
updated return statement in ShieldedTransferActuator . java to ensure correct functionality of the method
added debug logging for standard and legacy ciphersuite chosen in ServerHandshaker . java to enhance visibility into cipher suite selection during the handshake process
refactor template selection logic to handle single and multiple templates in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to improve user experience by
added a nodeLabelMap and a new method to check for duplicate nodes in the ImportContainer implementation to improve node validation by preventing duplicate nodes from being
added a new file R2303044ListSelection . java that implements a list selection functionality to demonstrate and test the functionality of selecting an
[ java ] do n ' t reuse aeron client when a client time out be already in use .
added a null check for mWorkspace in the launcher to prevent potential NullPointerExceptions when mWorkspace is not initialized
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to ensure that compound properties are correctly set
updated the calculation of new row counts in StatsRulesProcFactory to use a local variable for row counts to improve code readability and maintainability by
updated path handling and parameter setting logic in SpringBootDocBuildTemplate . java to improve clarity and maintainability of the code
change logger to be final and remove unnecessary call to getname ( ) .
updated ` DistBuildSlaveExecutor ` to use ` CachingBuildEngineDelegate ` instead of ` DistBuildCachingEngineDelegate ` and added
updated the RuntimeException message to include additional characters in the JSON string to enhance error reporting by providing clearer error messages
added a DEBUG level check before logging the message in WidgetsModel . java to ensure logging occurs only when debug mode is enabled
refactor Console and Scanner classes to improve code readability and maintainability
updated the calculation of ` numTerms ` in ` SimilarityBase . java ` and added a new test method in ` TestSimilarityBase . java
updated tests to conditionally send items based on the presence of the " send " method in ` SimpleMailMessage ` and ` MimeMessage `
added ' exit ' and ' quit ' methods with corresponding properties to Global . java and removed the old ' quit ' method from ScriptingFunctions . java
refactor application context initialization in LoanBrokerSharkDetectorDemo . java to improve readability and maintainability of the code
rename methods and variables from " getFirstUnverified " to " findFirstUnverified " across multiple files to improve clarity and consistency in method naming conventions
vmware : use cookie . applyrelevantcookies ( ) instead of setrequestrequestheader ( )
updated assertion statements in ResinAcegiAuthenticatorTests . java for consistency to improve code readability and maintainability
updated big integer conversion methods in ECKey . java to specify a 32 - bit value to ensure proper handling of input parameters for data integrity
updated the property key for disabledModList from " fml . disabledMods " to " fml . modStates " to ensure the application uses the
refactor account selection handling by introducing a ` showAccountChooserDialog ` method and updating state management to improve code readability and maintainability by reducing
improve exception message when collectsink can not connect to the client
added error handling for unexpected empty simulation results in ValidatorContractController to ensure robustness by throwing an exception when unexpected results are received
added a null check for the root file before reading settings to avoid potential NullPointerExceptions when reading settings file
removed conditional check for null datasource and JNDI in PooledConnection . java to simplify the code and improve readability by eliminating unnecessary checks
updated TARGET _ MB , WINDOW , and WINDOW values , and modified count and sink allocation in TestRefprocSanity .
added null checks for currentConsole before writing to streams to prevent potential NullPointerExceptions when currentConsole is not initialized
set the credential refresh delay to 100ms in KinesisConfigUtil . java to improve user experience by allowing more time for credentials refresh
replaced multiple existing AlertDialog builders with a new ` showInfoAlert ` method for dialog titles and descriptions to improve code readability and maintainability
updated method parameters and added package argument in T4501661 . java to improve clarity and functionality of the test method
bump alpn to 0.8 . 0 _ 31 and fix test
fix opensourcebim dependency to only resolve plugin bundle if they be provide .
added stream management for ZipFileInputStream in ZipFile . java to ensure proper resource management and prevent potential memory leaks
renamed ` DATAMATRIX ` to ` DATA _ MATRIX ` across multiple files to improve clarity and consistency in the codebase
[ flink - 20527 ] [ table - planner - blink ] add runactive / runidle to sequencegeneratorsource
fix checkstyle issue in blobserver and blobservergettest
replaced ` findAny ( ) ` method with ` findFirst ( ) ` in ` AnnotatedDelegate . java ` and ` SyntheticAnnotated . java `
added support for " ppc64le " architecture in Bits and ByteArrayAccess classes to enhance compatibility with additional architectures
updated the error message in RuntimeException to include a reference to the RoboMonitoring documentation to provide users with information about the issue being addressed
transaction . waitwithdeadline ( ) should use long . max _ value instead of minute .
replaced instances of ` Date ` and ` OffsetDateTime ` with ` Instant ` and ` ZoneId ` for improved date handling to enhance compatibility with modern
refactor BytesRef class for improved readability to enhance maintainability and clarity of the codebase
added a toast message to inform users that the YouTube Player does not work on Lollipop yet to improve user experience by providing feedback when YouTube
fix ( sql ) : improve error message for unterminated dollar and name quote
added a null check for the vibrator before proceeding with vibration handling to prevent potential NullPointerExceptions when the vibrator is
updated table and column properties in DotRenderer . java and added arrowhead / arrowtail logic based on foreign key column characteristics to improve visual clarity and
added a method to check if a string is encoded parameters in HiveConf . java and modified output formatting in SetProcessor . java to improve configuration handling
pdfbox - 4892 : catch all stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class to improve code structure to enhance maintainability and readability of the code
fix uri prefix in meter registry configuration ( # 3903 )
updated TimeLineCursorAdapter to use NetworkedCacheableImageView and added image loading functionality in NetworkedCacheableImageView to improve image loading efficiency and
removed the ' this ' parameter from the ' ofFloat ' method across multiple classes to simplify the method signature and improve code readability
updated controller version handling in DependencyBank and BuildScriptHelper to ensure compatibility with the latest versioning of controllers across different operating systems
refactor LaunchedURLClassLoader . java to improve code structure to enhance maintainability and readability of the code
updated DataSourceHealthIndicator to utilize DataAccessUtils for handling ResultSet and IncorrectResultSetColumnCountException to improve error handling for incorrect result set column
added no - cache header to authenticate and adminonly filter
updated the locale used for warning message formatting in ZkController . java to ensure consistent message formatting across different locales
updated the constructor of SolrQueryParser to accept an Analyzer parameter to enhance flexibility in query parsing by allowing custom analyzers
updated copyright year in multiple Java files and added licensing information to enhance code clarity and ensure compliance with licensing requirements
refactor MainTest class to improve code readability to enhance maintainability and facilitate future feature additions
refactor TypeContributions class for improved readability to enhance maintainability and clarity of the codebase
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper initialization of VoidColumnVector when the source is a VoidColumnVector
updated the parameter in StatementGenerator to use req . getName ( ) instead of templateName to ensure the correct request name is used for processing
no effective change - code cleanup - remove unused method
[ java ] add sessiondecorator . offer method with correlationid and length parameter .
rename ` trustallxforwardedremoteaddressresolver ` to ` trustall ` and fix typo .
added a new annotation ` NoBootstrap ` and modified ` BootstrapInserter ` to check for the presence of bootstrap annotations before building the bootstrap block to
hbase - 25827 fix npe in tabledescriptorchecker when maxfilesize and flushsize be null
fix bug in branch graph servlet when there be more than 2 commit .
added InvocationTargetException to main method and modified invokeLater method to invokeAndWait to improve error handling and ensure proper invocation handling
added a new constant ` BUILD _ ID ` and refactored methods in ` CachingBuildEngine ` and ` CachingBuildEngineTest
removed unused imports for TxInputUtil and TxOutputUtil in TransactionCapsule . java to streamline code by eliminating unnecessary dependencies
removed duplicate call to markAsDone ( future , channel ) in HttpProtocol . java to streamline code by eliminating redundancy
added TezConfiguration import and updated TezConfiguration initialization in TezConfigurationFactory . java to enable configuration management for Tez components
added null check for keyPurposes in TimestampedSigner . java to avoid potential NullPointerException when keyPurposes is null
simplified the conditional statement in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a null check before stopping the most recent sound and introduced a forget method to ensure proper handling of audio interruptions and prevent potential NullPointerExceptions
clear position discontinuity only once when newframe be render
added decimal decimal and tick units for various decimal places in NumberAxis . java to improve precision in tick representation for better data representation
refactor TargetGraphAndBuildTargets to use builder pattern for building targets to simplify code and improve readability by reducing boilerplate code
removed the IndexFileNameFilter class and updated related logic in IndexFileDeleter . java to simplify the code by eliminating unnecessary dependency on IndexFileNameFilter
add a new configuration option to check the entire entity ' s collision bounding box for ladders instead of just the texture stitcher .
added a compressionLevel parameter to several methods in ApkBuilderStep , ApkBuilder , and SignedJarBuilder to allow customizable compression levels for
added a test method to verify inclusion of static fields in a class to ensure correct functionality of static fields in the stubbed
added support for BYTES data type in MetricFieldSpec , Schema , SingleValueSet , and SingleValueSet classes to enhance metric handling capabilities for
updated assertion messages to include a newline for multiple failures instead of multiple failures to improve readability and consistency of error messages across test files
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( ) ` in ` Trade . java ` to improve code readability and
added caching support and a test for updating post cache in multiple classes to enhance caching functionality and improve performance in the forum service
change pronunciation model to use locale - specific property instead of german property .
added handling for empty or null post body in SimpleHttp . java and updated test cases in TestHttpPlugin . java to ensure proper handling of null
added a dispatcher and shutdownNow method to ClientSideSlb and a test for it in ClientSideSlbTest to ensure proper resource management and test
modified vertical positioning logic in TextureRegion . java based on flipY condition to ensure correct vertical positioning for different texture orientations
add check for not - mapped property on discovery strategy
added a null check for the contextPath variable and initialized it to " NA " if it is null to ensure that the contextPath defaults to "
[ drools - 1023 ] avoid re - initing defined type when class be change ( # 1623 )
added a check for the root header in BTreeMap and introduced a constant B _ TREE _ MAP _ ROOT _ HEADER in SerializationHeader to
added precompiled header validation and validation in ` AbstractCxxSourceRuleFactory ` and ` AppleDescriptions ` to ensure proper handling of precompiled
replaced WeakReference with a new AccWeakReference class for security context management to enhance security by ensuring privileged actions are executed with the correct access control context
modified access modifiers of methods in ObjectMap , ObjectSet , and OrderedSet to enhance encapsulation and improve code clarity
fix vertexbufferobject . setisdirect ( false ) to correctly set the isdirect flag
remove duplicate code in maryclient . getaudioeffecthelptexts ( )
changed the return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 in Actor and Group classes to
pdfbox - 5764 : use input . limit ( ) instead of input . capacity ( ) , a suggest by valerybokov
added null check before removing the close hook to avoid potential NullPointerException when context is null
updated the handling of folder - specific border spacing in CellLayout and DeviceProfile classes to improve layout consistency and support for scalable folder layouts
refactor numeric parsing to use a new ValueNumeric class to improve code readability and maintainability by utilizing a dedicated factory method
updated the authentication logic in FormAuthenticator to handle deferred responses to ensure that authentication is only performed for non - deferred responses
updated argument checks in StartArgs . java to replace " -- module - startd - ini = " with " -- add - to - start
added a default partition value to DynamicPartitionFileRecordWriterContainer and updated the logic for adding dynamicPartValues to ensure dynamic partition values are correctly handled
[ hotfix ] [ stream ] add null check for operatorfactory
updated return statements in DefaultArtifact . java to include classifier checks to improve clarity and correctness of artifact information display
camel - kafka : fix race condition with rebalance of offset .
improve error message when no class def be available in the classpath
fix : enable gmail notifications by default
doc : [ cryptokey ] fix docstring formatting
make the lumberjackmultithreadtest more resilient on slow machine .
add player . isdead ( ) check to playerupdatehandler # getplayerdisplayname ( ) .
refactor Exchange class to improve code organization to enhance maintainability and readability of the code
api : updateuser : allow api key and secretkey to be specify with apikey / secretkey
replaced switch - case statements with if - else statements in multiple classes to simplify code and improve readability by reducing boilerplate code
refactor AbstractMetaDataExportMojo for improved clarity to enhance maintainability and readability of the code
added SQLIntegrityConstraintViolationException handling for table deletion in Hive to ensure proper error messaging when attempting to drop tables in materialized views
corrected the casing of " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure consistency in property naming
added a new class ` RoboExecutorService ` that extends ` org . robolectric . util . concurrent . concurrent . RoboExecutorService ` to mark the
added condition to check if the group is a root group and adjusted menu items accordingly to improve group management by ensuring subgroups are only added when the
updated method and variable names in BraveClientExecutionInterceptor . java to improve clarity and correctness in handling service and span names
gc / ergonomics / testdynamicnumberofgcthreads . java fail when run with - xx : + forcedynamicnumberof
updated ` CxxPlatforms ` and ` KnownBuildRuleTypes ` to replace ` ImmutableList < ImmutableFlavor > ` with ` ImmutableSet < Flavor
refactor SQL creation logic in CreateTable and CreateTableDeParser classes to improve readability and maintainability of the code
set alpha to 64 in chatviewerfragment . setchatbackground ( ) .
test : migrate ctiteratortest to junit 5 ( # 4556 )
added clear ( ) method calls to various tokenizer classes to ensure consistent token handling across tokenizers
add a test to prevent crash on block statement .
updated generic type parameters in StateMachineConfiguration , StateMachineFactoryConfiguration , and StateMachineFactoryConfiguration classes to improve type safety and provide clearer error
simonstewart : do n ' t try to find link in the selenium test suite , it ' s not need anymore .
fix numberformat to support round to decimal point in locale .
remove unneeded code in aggregatelifecycle . getcurrentscope ( )
replaced ` insetsIsTouchableRegion ` with ` insetsInfo . setTouchableInsets ( TOUCHABLE _ INSETS _ 
removed a conditional check for the presence of a character in the fenced code block to simplify code parsing logic and improve readability
added socketTimeout property handling in multiple classes to enable configurable socket read operations and timeout settings
fix flaky test in elementattributetest by add a delay
updated BufferedReader initialization to use UTF - 8 encoding to ensure proper handling of character encoding in URL connections
refactor List class for improved readability to enhance maintainability and ease of understanding for future developers
added constructors to ` AsyncFileImpl ` for URI and Path , and updated error handling in ` Future . failedFuture ( ) ` to improve
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that the class is part of the stable state of the
fix npe in listvirtualmachinetemplates command when there be no vsp device configure on the physical network
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated related logic to improve clarity and functionality in handling failed uploads
updated classFileVersionJava8 to classFileVersionJava9 and modified related methods to use the current Java version to ensure compatibility with Java 9 and
update compiler . java to handle warning and error
add a method to remove all the client header from the client header map
replaced Vector with ArrayList and updated related method calls to improve performance and readability of the code
updated the default grid column value from 4.0 f to 3 f to improve the visual appearance of the user interface
added a condition to check if ` forViewCreation ` is false in the ` CalcitePlanner ` class to ensure proper handling of view creation
updated regex pattern and assertion handling in TestHS2HttpServer . java to improve accuracy of date matching and enhance test reliability
added exception handling around object retrieval in GraphPrinter . java to improve robustness by preventing application crashes due to potential runtime exceptions
simonstewart : add the ability to access page with an insecure ssl certificate to the ie driver
updated byteOffset calculation to use Math . addExact and added a test for too many allocations in ByteBlockPool to ensure correct byte offset handling
make interactionvalueencoder use english locale in string . format ( )
added catch block to catch all throwables in TcpTransport . java to improve error handling and provide more informative exception messages
add @ suppresswarnings ( ` ` serial ' ' ) to papplet
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` OcamlDebugLauncher ` and removed ` SourcePathResolver `
add ` ` discard change ' ' and ` ` return to jabref ' ' dialog for database change
added validation for response types and service access in OAuth20DeviceCodeResponseTypeRequestValidator and updated error messages in multiple controllers to enhance security checks and
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to invoke the ` chk ( index , 1
hbase - 14254 add support for tablemapper job with different inputformats ( griffin )
removed duplicate call to append method in AbstractJRubyMojo . java to streamline code by eliminating redundancy
sulong : throw a polyglotexception if a language can not be find .
added deprecation warning and validation for the RESERVE configuration in ReplicationHandler . java to ensure that both master and reserve commit durations are mutually
rename ` cacheVariableName ` to ` cacheForeignKey ` and update related references to improve clarity and maintain consistency in naming conventions
updated ECKeyPairGenerator to use Object [ ] instead of long [ ] for key pair generation to improve type safety and reduce potential errors in key generation
[ flink - 13636 ] [ runtime ] suspend job if the job be cancel during restart .
replaced the singleton instance of RotationTouchHelper with a direct instantiation to simplify the instantiation process and improve thread safety
[ iotdb - 4071 ] fix npe in controller cache when there be no portpo
updated method parameters and their implementations to use unique _ thread _ id instead of lwp _ id to improve clarity and accuracy in identifying unique threads
do n ' t add or remove offer from the list if they have different offer id .
replace hardcoded tls version with constant .
updated MockitoMethodInvocationControl to handle Class type in mock handling and refactored test assertions to use doReturn for class types to improve code clarity and
updated NotLoadedException to include PartialDatabaseObject as a parameter in multiple classes to enhance exception handling by providing context for better debugging
removed import of DisplayUtils and added an extra _ FILE to the intent in FileDisplayActivity . java to streamline the code by eliminating unnecessary dependency
added error handling and file closing logic in StoreDirect and StoreWAL classes to improve robustness by preventing runtime exceptions during file operations
updated the ` stopSwipePipToHome ` method to use ` UI _ HELPER _ EXECUTOR ` for screenshot tasks to
added a ` hidden ` flag to the ` CommandArgumentDefinition ` class and updated ` LiquibaseCommandLine ` to utilize it to enhance command
[ hotfix ] fix flaky test in loggingkafkaplugintest
[ geos - 9306 ] add stylegroup . getsld ( ) to styleinfo and use it in geoserverstyleinfoimpl
added permission checks for launcher activities in InstallShortcutReceiver and Launcher to enhance security by ignoring malicious intents
added ` setId ` methods and their implementations for ` TiledMapTile ` , ` AnimatedTiledMapTile ` , and ` Static
refactor Manager class to improve code readability to enhance maintainability and facilitate future updates
updated JDBC connection string to include a version parameter and improved session builder configuration to ensure compatibility with the latest version of the database connection and enhance session management
added schemas and includeSchema properties to LiquibaseGenerateChangeLogMojo to enhance change log generation by allowing schemas to be optionally included
replaced ` putIfAbsent ` method with ` put ` method in ` JmxRegistry . java ` to ensure proper handling of concurrent access for the registry
log singlebenchmarkrunnerexceptions a warn instead of error
removed the ` final ` modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore . java ` to allow overriding of the method
updated return statements in Tools . java and FileSelectorFragment . java to include a leading slash to improve code readability and maintain consistency in formatting
added new test methods and modified response handling in FastCGIProxyServletTest . java to improve test coverage and ensure proper handling of large response content
added a call to start the ReadInteractionsService in MarkReadService to enable the service to start the ReadInteractionsService
added a conditional check for lintClassfile before logging warnings for missing annotation methods to ensure warnings are logged only when the class file is not found
added configuration for the mail server port and set it to a default value of 25 to ensure proper port configuration for email communication
fix sslfactory reload in case of exception ( # 10265 )
updated the date format in ObjectMapperProvider from " yyyy - MM - dd ' T ' HH : mm - dd ' T ' HH : mm
updated the assertion message in SpyingOnRealObjectsTest . java to clarify the reason for the exception being thrown due to mocking a private class
added a boolean flag ` endsOnNL ` and modified line ending logic in ` LineBox ` to ensure proper handling of line endings with a
updated the logic for constructing filePathString to handle null parent cases to improve robustness by preventing potential NullPointerExceptions
removed unused import of DocCollection in TopicStream . java to clean up the code and improve maintainability
refactor NinjaServletContextTest to use a dedicated method for creating ServletInputStream and add a new test for handling Windows 1250 parameter in multipart
updated property configuration in AbstractCasEndpointTests . java to improve clarity and maintainability of the code
added a check to ensure the current graph is a dynamic graph to prevent runtime errors caused by incorrect graph validation
add support for eager initialization for @ scopeone ( # 6374 )
( chore ) camel - json - path : add option to suppress jsonpath exception
removed redundant call to ControllerLeaderLocator . create in HelixServerStarter . java to streamline the process of creating the controller leader
updated usage messages in CLHSDB and HSDB to use " - help " instead of " java " to improve clarity and consistency in usage
removed duplicate configureChunkProvider method in FaultTolerantStepFactoryBean and updated its implementation in SimpleStepFactoryBean to streamline code by
[ hotfix ] [ runtime ] remove deprecate write class
refactor ShadowAccessibilityManager usage by replacing direct calls to getAccessibilityManager ( ) with direct access to AccessibilityManagerInstance to improve code clarity and
add analytics for display of usage statistic ( # 4212 )
removed the ` SourcePathResolver ` parameter from multiple classes to simplify the class hierarchy by removing unnecessary dependencies
refactored the initialization of ` enumDataTypeHelper ` and created a new ` PostgreSQLEnumDataTypeHelper ` class to improve code organization
updated log file path assertion in LogFileTests . java to ensure compatibility across different operating systems
updated references from ` getMapLocalWork ` to ` getMapRedLocalWork ` across multiple classes to ensure consistency in local work representation across the
added error handling for index table deletion in HiveMetaStoreClient . java to ensure proper management of unsupported operations for index tables
added a condition to update disabled flags in OverviewActionsView based on visibility to ensure disabled flags are updated correctly when the view is not visible
added a specific highlighter for non - Windows platforms to ensure proper syntax highlighting for non - Windows environments
add local variable annotation to http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 43
updated file path retrieval from ` toUri ( ) . getRawPath ( ) ` to ` toString ( ) ` in ` HadoopPinotFS
removed an unnecessary line from the removeCaptureListener method call to improve code readability and maintainability
changed the ` _ metaDataComplete ` variable from ` true ` to ` false ` to reset the state of ` _ metaDataComplete ` to ensure that
refactor ` removeTaskTarget ` method to use ` THREAD _ POOL _ EXECUTOR ` for asynchronous task removal to improve performance
added support for the " PLATFORM " environment variable in JsBundleGenrule . java and corresponding tests in JsBundleGenruleDescriptionTest
updated type casting logic in ` mmm Lower . java ` and added a new file ` ppp T6500701 . java ` with a
added tests for crlf newlines in comments and Javadoc in AddImportTest . java and updated import statements in AutodetectGeneralFormatStyle
added hubMode property to AbstractLiquibaseMojo and AbstractLiquibaseMojo classes to enable dynamic configuration of Liquibase hub mode
updated conditional logic in JsrFaultTolerantStepBuilder and JsrChunkProcessor to remove unnecessary null checks to improve code clarity and
added error handling for missing linkDb in IndexerMapReduce to improve robustness by gracefully handling exceptions when linkDb is not found
simplified the retrieval of the indexer thread ' s method by directly using the class loader to improve code readability and maintainability by reducing complexity
updated the address construction in GameCanvasImplementation . java to simplify the address construction for better readability and maintainability
refactor MapJobExecutionDao to utilize a new copy method for managing JobExecution instances to improve code clarity and maintainability by encapsulating
added a new file ` DownloadTest . java ` to implement a test for downloading images from the wordpress application to ensure that the application can
updated language assignment logic in multiple files to ensure consistency in language representation across formats
updated exception handling in GenericUDFRound . java to use argument types instead of exceptions to improve clarity and consistency in error reporting for ROUND arguments
added null check for selectedVersion in manageDependencies . java to ensure stability by avoiding potential NullPointerExceptions
added multiple AntPathRequestMatchers for various URL patterns in SecurityConfig . java to enhance security by matching specific URLs
added JUnit Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
fix ` ` java . lang . object ' ' not be write to bean definition
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to known issues
[ openwebnet ] fix checkstyle issue in io / openwebnet / thermoregulationhandler and openwebnetthermore
simplified the execution of SocketEventProcessor by removing unnecessary conditional checks to improve code readability and maintainability
deleted the SunToolkitSubclass . java file to remove unused code to streamline the codebase
updated translation handling in DefaultRenderableSorter to use Matrix4 and added a method to check for rotation or scaling to improve code clarity and maintainability by
[ typehandlerregistry ] add a test for wrapper handler before primitive .
pdfbox - 4071 : add support for the alternate colorspace in the pdseparation class
replaced hardcoded URLs with dynamic values from BuildConfig to improve maintainability by centralizing API host configuration
camel - health - add a health check test base on user forum issue
fix a crash in the thorn chakram that cause it to crash .
added a new test method ` testAlterTableWithViewsIT ` to verify the functionality of altering a table with indexes extend the primary key
updated offset initialization in FileFloatSource . java and added conditional assertions in TestFunctionQuery . java to improve document handling logic and enhance test coverage for
removed DrillMongoConstants . ID from the fields in MongoRecordReader to remove unnecessary ID fields from the fields
added disconnect methods to YeelightHandlerBase and DeviceBase , and modified connection handling in WifiConnection to ensure proper resource management and connection state
add support for auto _ increment column in innodb syntax
fix : add a resync period to the sharedindexinformer .
server : fix npe when create template from private template
replaced ` BufferedInputStream ` with ` RobolectricBufferedImage ` and refactored color array initialization to improve compatibility with Robolectric
removed deprecated constants from LauncherSettings . java and updated LauncherProvider . java to streamline code and improve maintainability
[ drools - examples ] move file to / org / drools / examples
added a new variable ` legendTop ` and updated the calculation of ` mOffsetTop ` and ` mOffsetBottom ` to improve legend positioning
added a check to return early if the world transform is zero to prevent rendering when the world transform is not valid
added a new file MaryScriptCreator . java that implements a script generation tool to facilitate the creation and writing of user scripts from a text file
nifi - 11445 : add the source host to the flow file to listenhttpservlet
refactor compaction logger initialization and file deletion logic in LevelCompactionTsFileManagement . java to ensure proper resource management and prevent potential memory leak
removed " xlink : href " prefix from URL attributes in ComponentDescription . java to simplify URL construction and improve code readability
camel - 15836 - camel - aws2 - s3 : replace hardcoded string with constant
[ flink - 20536 ] [ runtime ] only log the regionserver when the cluster be shut down
updated Slf4jSpanLogger and DefaultTracer to check for null spans before logging and handling spans to improve code robustness and prevent
trim whitespace from active options in Main . java to ensure consistent handling of options with leading or trailing spaces
added depth effect preference handling for wallpaper zoom out in DepthController to allow dynamic adjustment of wallpaper depth based on user preferences
added an assertion to verify the success count of overseer actions in OverseerTest . java to ensure the correctness of the overseer '
removed the method ` getKernelVersion ( ) ` and simplified the return value of ` true ` in ` LinuxFileStore . java ` to simplify
refactor ExecConstants class to improve code organization to enhance maintainability and readability of the code
removed the import of ScreenRecordRule and the associated annotation from ThemeIconsTest . java to eliminate unused imports and improve code clarity
added a new method ` setScanAttributeForPaging ` to ` TableSnapshotResultIterator ` and utilized it in ` ScanUtil ` to improve
added a check for lowRange in Request . java and modified conditional logic in RequestV2 . java to ensure lowRange is within the valid range
updated access modifiers of keySizeEstimator and valueSizeEstimator to protected and adjusted cache size estimation calculation in AsyncWriteCache to enhance accessibility
updated the setZoneId method in HostJoinDaoImpl . java to ensure the correct UUID is set for the host response
updated Content - Type header to use MediaType . APPLICATION _ JSON _ UTF8 _ VALUE and added UTF - 8 string handling in LivyInterpreter to
updated filesystem removal logic in ZipFileSystemProvider . java to improve code clarity and maintainability by using a more descriptive variable name
change variable name from ` Object ` to ` String ` in ` HttpRequestBuilder ` to improve clarity by using a more descriptive variable name
[ hotfix ] [ test ] increase timeouts in softautocommittest
add try - catch to listener . beforeevent ( ) and afterevent ( ) method .
rename multiple classes related to dial functionality to improve clarity and maintain consistency in naming conventions
updated logging statements in SyncQueue . java for consistency to improve code readability and maintainability
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to incorporate the latest features and improvements in the container
updated ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added a new
fix issue where legacyxmllayout . class file do n ' t exist .
[ hotfix ] [ test ] remove dependency on yarnclient in yarnitcase
add stats for non - distributed object in localmapstatsprovider
deleted the AllTests . java file to the test suite was deemed unnecessary or redundant
added support for non - breaking hyphen and zero - width space in abstractwordconverter
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify memory allocation behavior to ensure that large stack trace
updated method call from ` getResultMappings ( ) ` to ` getResultMappingsForRowKey ( nestedResultMap ) ` to ensure proper mapping retrieval for
added a boolean flag ` eventHandled ` to the UIText class to enable event handling in the UIText component
deleted the Controller annotation and renamed the Weldby class to WeldModule to simplify the codebase by removing unnecessary annotations
ruby : do n ' t check zero - width group if they be empty .
removed hardcoded value for liquibaseProLicenseKey and added a protected field to streamline license key retrieval process and reduce unnecessary logging
rename method ` ` measureshierarchy . setmemberreader ' ' to ` ` measureshierarchy . setmeasureshier
add - g option for generate node source info ( # 11347 )
mondrian : fix a typo in the javadoc of mondrianproperties . java .
added support for friend paths in Kotlin compiler and related components to enhance Kotlin support by allowing users to specify relative friend paths
added aliases for BATK , BRAHMI , and MAND in Character . java and refactored main method in CheckScript . java
updated equality check in ExecutionCommand . java and added a new method in StageUtils . java for stringToExecutionCommand in TestStageUtils . java
updated Mockito library version in the project to ensure compatibility with recent changes in testing framework
refactor OCFile class to improve code organization to enhance maintainability and readability of the code
added a toString ( ) method to the SystemScope class to provide a readable string representation of the SystemScope object
added support for processing percentage values and improved error handling in the cmyk ( ) function to ensure proper parameter validation and prevent potential runtime exceptions
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ` in ` LocalIndexIT . java ` and modified ` LocalIndex
updated imports in BaseAndroidTestCase and BaseAndroidTestCase to use ApplicationProvider instead of InstrumentationRegistry to ensure compatibility with the latest test framework standards and
updated toast messages in multiple activities for clarity and consistency to enhance user experience by providing clearer and more descriptive messages
simplified conditions in RendererUtilities and added a new test method in RendererUtilitiesTests to improve code clarity and enhance test coverage for XYSeries functionality
refactor KrakenStreamingAdapters to use ArrayNode for ask and bid nodes instead of iterators to improve code readability and maintainability by
added exception handling for SQLite column addition in FileContentProvider to improve robustness against duplicate column additions during upgrade from 24 to 30
removed debug print statement from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
added hash table load factor and refactored online data size calculation in ConvertJoinMapJoin . java to improve data size estimation for
updated ` buildView ` method to accept a ` Context ` parameter and added background resource configurations to enhance the flexibility of background settings based on the
added authentication assertions and corresponding test cases in SecurityMockMvcResultMatchers and SecurityMockMvcMvcResultMatchersTests to enhance security testing capabilities by
vpc : do n ' t create gateway to the vpc if it do n ' t exist
[ flink - 10955 ] [ test ] disable flinksavepointtest for version 1.11
fix checkstyle issue in util / media / subtitleview . java
updated loop condition to check if the index is within the range before processing actions to ensure actions do not exceed the size of the action list
updated BitmexStreamingExchange to extend from BitmexExchange instead of BaseExchange to ensure compatibility with the latest Bitmex exchange structure
added unit test to show the issue
add a null check for the spatial object before accessing its properties to prevent potential NullPointerExceptions when the spatial object is null
updated ConditionalTokenFilter and related classes to improve token filtering logic and add new test cases to enhance functionality and ensure correct token position increments
fix unsafestorenode . getstateafter to set state after storefieldnode .
updated the method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to ensure
added an assertion to verify that the casEventRepository ' s loadAny ( ) method returns an empty list to ensure that the event repository is properly
updated the attributeTemplateName and attributeLine / attributeCol parameters in AuthenticationAttrProcessor . java to improve clarity and consistency in attribute processing
added null checks for the specified key in MacOSXPreferences . java and created a new class RemoveNullKeyCheck . java to ensure that null
removed the setTypeface method that threw a RuntimeException in CodenameOneTextPaint . java to allow setting typeface without throwing an exception
added open method implementations for Azure , Local , Hadoop , and PinotFS classes to implement functionality for opening files with specified URIs
[ java ] remove deprecate fail ( string ) method from webdriverrunner
simplified the conditional statement in SolrRequestParsers . java to improve readability and maintainability of the code
refactor DefaultResultSetHandler to use a single instance variable for useConstructorMappings to improve code readability and maintainability by encapsulating the
updated SQL constraint assertion in CreateTableGeneratorTest . java to ensure proper SQL syntax for foreign key references
added support for filtering in VectorizationContext to enhance vectorization functionality to support filtering operations
[ hotfix ] fix compiler warning in exhaustivesearchphaseconfig
replaced ` new ReorganizeTableStatement ( getCatalogName ( ) , getSchemaName ( ) , and getTableName ( ) ` with ` modifyDataType
updated references to ` CLUSTER _ NAME ` to use a constant from ` IoTDBStartCheck ` to improve code readability and maintainability
improve logging and error handling in peergroup . connect ( ) and handle noroutetohostexception
added handling for multiple style strings in Nano . java to improve styling flexibility based on string lengths
update schematic to use new version of nbt - based fixer .
updated return statement in NoToStringOnStringType . java from " Use ` String ` " to " No # toString ( ) on String " to
updated Xmx memory option from 64m to 32m in TestThreadFailure . java to improve memory allocation for better performance
fix ( dataprovider ) : retry on failure in dataprovider method .
updated token retrieval from ` tokens [ 0 ] ` to ` tokens [ bandwidth ] ` to ensure correct retrieval of tokens based on the specified bandwidth
simonstewart : add selectpopup ( ) , deselectpopup ( ) , capturenetworktraffic ( ) and capturenetworktraffic (
refactor the ` doPrintEntry ` method to remove the unnecessary ` printWarning ` parameter and simplify its logic to improve code readability and maintain
[ hotfix ] fix checkstyle violation in taskasynccalltest
added checks to ensure dialog and frame components are opaque to prevent illegal component state exceptions
changed the state variable from private to private final in DefaultProjectFilesystem . java to ensure that the state variable cannot be modified after initialization
refactor Redis connection factory logic to improve handling of Redis sentinel configurations to enhance reliability and maintainability of Redis connection management
added lastseendelayedmessage property to chatroomjabberimpl to allow the user to see a delayed message .
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` notifyContent ` method calls to simplify code and
refactored file sharing functionality to use the OperationsService for creating and unsetting shares to improve code maintainability and reduce redundancy in the sharing process
fix : use jakarta . inject . inject ( ) instead of depend on injected property .
replaced multiple calls to ` getMinBuildHeight ( ) ` with a variable ` yStart ` for loop boundaries to improve code readability and maintainability
added handling for NullPointerException in SmackIntegrationTestFramework to ensure proper handling of NullPointerExceptions during integration tests
tmi - tiff : add support for interop subdirectory .
added support for ENABLED _ LS in VersionTargetGraphMode and modified executor assignment logic in VersionedTargetGraphCache to improve handling of dependency
added a check for video format in conditional statements to ensure only valid video formats are processed
chore : integrate new gapic - generator - java and rules _ gapic ( # 118 )
lwjglnativesloader now load the native library from the servicemanager .
updated CSVRequestHandler to support customizable escape handling and improved encapsulation logic to enhance flexibility in CSV processing by allowing customizable escape characters
updated grant type validation in ClientRegistrations and modified test cases for AUTHORIZATION _ CODE support to ensure compliance with OAuth2 standards and
enhanced exception messages for clarity and improved suppression handling in Throwable and SuppressedExceptions classes to enhance debugging and provide more informative error messages
added a SQL query and modified the iterator parameters in DerivedTableIT . java and ClientAggregatePlan . java to ensure correct byte size handling in
added a mapping for the RSquare value in RegressionEvaluator and an assertion in StreamExpressionTest to ensure that the RSquare value is correctly represented
add context attribute to threadcontextmdcservletfilter when request be miss
replaced instances of casting work to MapWork with a direct reference to mapWork in SparkPlanGenerator . java to simplify code and improve readability
refactor PdfJndiReport and PdfSessionInformationsReport to use dedicated methods for folder image retrieval and country handling to improve code maintainability
updated cache configuration in JwtIssuerReactiveAuthenticationManagerResolver and added tests for trusted issuer handling in JwtIssuerAuthenticationManagerResolverTests to improve
updated resource existence check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test
updated the ` Function ` constructor to include a ` isMethod ` parameter and modified method invocations in tests to enhance functionality by allowing method - based
replace MILLISECONDS . sleep ( 500 ) with MILLISECONDS . sleep ( 500 ) in AbstractBasicMockingIntegrationTest . java to improve code readability and maintain
added a new file ` KernCrash . java ` that implements a graphical user interface with a kerning font to demonstrate the use of
added a failure ( ) statement in LinkedHashTreeMapTest . java to ensure that the test fails gracefully due to unexpected behavior
added a method to retrieve network interface addresses in NetUtil . java to enhance network interface management and improve error handling
added cancellation of the housekeeper task if it have not be schedule after shutdown .
updated the method call from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in ` GroupTransferService . java ` to ensure
refactor assertions in Assert . java for improved clarity to enhance maintainability and readability of the code
added a new test class ` Issue247Test ` to validate the functionality of the ` getTreeMap ` method in the ` Mapdb `
changed the type of ` results ` and ` doInBackground ` methods from ` CategoryItem ` to ` ArrayList < String > ` and modified the
added validation for today ' s leap year and year in ValidatorTest . java to ensure proper field error handling for dates between 29 and 28
added constants for alarm codes and error codes and modified response handling in GrblController . java to improve error reporting and enhance code clarity
added a condition to return a home button label when no screens are available to improve user experience by providing a clearer display of the home button label
removed the ` count ` parameter from the ` getTrades ` method across multiple classes to simplify the method signature and eliminate unnecessary complexity
updated ConsoleReader to strip ANSI handling and improved indexing logic in MemoryHistory to enhance code robustness and prevent potential null pointer exceptions
updated the construction of the jdkPath variable to remove the " . jdk " suffix to simplify the path construction for better clarity and maintainability
replaced calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` input . getType ( ) ` in multiple files to simplify code
added a ` Consumer < String > ` parameter to the ` JFCModel ` constructors and updated related logging methods to enhance logging capabilities and provide
added validation for tolerance in MaximumInscribedCircle . java to ensure that the tolerance is positive to prevent runtime errors
added methods to create and drop views in TestUtil and created a test for view privileges in DatabaseMetaDataTest to enhance functionality for managing views and
8029797 : [ test _ bug ] test / sun / hotspot / jtreg / nantest . java fails due to unsupported
added a new file DesktopTaskbarUIController . java and modified TaskbarManager . java to return a new instance of DesktopTaskbarUIController
updated ModItemAdapter to implement TaskCountListener and added task count tracking to enhance task management and improve UI responsiveness during installation
refactor methods in mmm Files . java and ppp Files . java to improve code readability and maintainability
refactor ` setApplicationContext ` method to use ` Collection ` instead of ` Set ` and update related imports and method signatures to improve code
removed the @ FunctionalInterface annotation from the DomainAwareServicesManager interface and its implementation in ChainingServicesManager to simplify the interface structure and improve
fix the resourcepackloader to use the correct name for the resource pack
chore : update gapic - generator - java version to 2.1 . 0 ( # 118 )
added multiple overloaded methods ` growX ` and ` growY ` to the ` Cell ` class to enhance the functionality of the ` Cell `
refactor DefaultInputHandler to simplify binding management and improve code readability to enhance code maintainability and reduce complexity in handling key strokes
( chore ) camel - test - infra - jms : add try - catch to prevent test failure
replaced long arrays with byte arrays and added memory failure count check in MetricsMemoryTester . java and TestDockerMemoryMetrics . java to improve memory management
deleted the JobParametersPrototype . java file to remove unused prototype class to streamline the codebase
added a securityEnabled field and updated related methods in ` MappingsTable ` , ` TableResolverImpl ` , and ` MappingsTableTest `
rename ` APPLE _ SWIFT _ OBJC _ CXX _ HEADERS ` to ` APPLE _ SWIFT _
changed the DUMP _ TO _ FILE constant from true to false in TestMSPowerPointParser . java to disable the dumping of the file
improve mediacodec eos support for icu4j .
[ java ] : do n ' t increment publisher limit when there be no spy .
added a condition to check if ` dbInfo ` is null or ` isNoInfo ( ) ` in ` BaseFormatter . java ` to ensure
fix ` ` presto . ssl . port = 443 ' ' when use ` ` presto . uri . ssl = false ' '
added ` DOMOutputOptions ` and modified ` buildDOMSubtree ` method to include error output options to improve error handling by allowing customizable error output
refactor assertions in Assert . java for improved clarity to enhance maintainability and readability of the code
http : / / issues . apache . org / jira / browse / amq - 4237 - add support for retain message in publish
removed the @ JsonIgnore annotation from TestResultSummary and updated test cases in EventSerializationTest to ensure proper serialization and deserialization of test cases
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - b
updated import statement in LatexToUnicodeAdapter . java from ` fastparse . core . Parsed ` to ` fastparse . Parsed ` to ensure
added locking mechanism and refactored SSL _ CTX _ set timeout logic in AbstractSessionContext . java to improve thread safety and ensure proper
refactor the Watcher class to use a new constructor and improve event processing to enhance readability and maintainability of the code
[ hotfix ] [ table - planner - blink ] use ansi dialect in sqlnodeconvertcontext
changed log level from debug to trace for no firmware update handler availability to improve logging granularity for better debugging
added unit tests for handling null dates and timestamps in DateTest and GetObjectTest classes to ensure correct functionality of date and timestamp retrieval in database
refactor string concatenation in StringSubject and Subject classes for improved readability to enhance code clarity and maintainability by reducing redundancy
added unit tests for repository permissions for different teams in UserModelTest . java to ensure correct permissions are applied for different repository teams
added a new file Test7088020 . java that includes a test for MethodHandles to verify the behavior of invokeExact and invokeExact methods
refactored audience restriction validation code to use a set for audience URIs to improve clarity and maintainability of the validation logic
refactor cache refresh methods in AbstractDataChangedListener and HttpLongPollingDataChangedListener to use ` this . refreshLocalCache ( ) ` instead
updated stderr handling in StdErrLog to conditionally use System . err or System . err to improve null safety and prevent potential NullPointerExceptions
added a new constant ` SEPARATION _ ORDER ` and logic to track the number of active stages in the current status to ensure warnings are correctly
updated the query optimizer parameter from offlineTableConfig to realtimeTableConfig in BaseBrokerRequestHandler . java to ensure the query optimization uses the correct table
refactor SQL execution for creating metric AGGREGATE _ TABLE _ SPLIT _ POINTS and add normalization property handling in UpgradeCatalog
refactor SavepointV2 and FileStateHandle classes for improved clarity to enhance code maintainability and readability
added BluetoothClass functionality to ShadowBluetoothDevice and its corresponding test in ShadowBluetoothDeviceTest to enable testing of Bluetooth class functionality in
fix checkstyle issue . use ` ` containsprofile ' ' instead of ` ` contains ' ' .
chore ( core ) : fix null and empty for sum ( [ ] )
replaced the call to ` graphModel . getGraph ( ) ` with a direct call to ` graph . readUnlockAll ( ) ` to simplify
updated coreNodeName construction to use nodeProps . getCoreName ( ) instead of nodeProps . getCoreName ( ) to ensure correct core
change chatactivity to use updatebackpressure instead of call update ( ) directly .
updated TaggerParserPosTagCompatibilityITest . java to improve test coverage to enhance reliability of tag compatibility checks
added @ SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to suppress the use of SimpleText codec
updated condition in ` Types . java ` and added a new class ` T7005671 . java ` with multiple method implementations to enhance type
updated indices in DelaunayTriangulator and renamed the test class to DelaunayTriangulatorTest to improve accuracy
added @ Override annotations to multiple Java classes to ensure consistent method overriding and improve code maintainability
refactor JWTClaimsSet initialization to use JWTClaims . Builder for improved readability and maintainability to enhance code maintainability and
updated the handling of yellow zone states in StackOverflowCheckImpl . java to improve clarity and functionality of state management in the code
added Shadow methods for SQLite database and content values in Robolectric to enhance testing capabilities for SQLite interactions in the application
replaced calls to ` graphics . initiateGLInstances ( ) ` with ` graphics . initiateGL ( ) ` in ` LwjglAWT
replaced the bytesPerDim variable with an ArrayUtil . ByteArrayComparator in BKDWriter . java to improve the handling of unsigned comparisons by
updated Locale and Locale classes to include script and default locale properties to enhance locale management and ensure default values are retrieved correctly
change return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to accurately reflect the last set text alpha state
corrected a typo in the warning message from " Confimap " to " ConfigMap " to improve clarity and accuracy of the warning message
removed specific test classes from DefaultConfigurationTestSuite and updated test cases to use UaaJunitSuiteRunner to streamline test suite setup and improve test
trim whitespace from token values in GzipFilter . java and update test parameters in GzipFilterDefaultTest . java to ensure consistent handling of whitespace
updated the assignment of _ outputType to WRITER to ensure consistent output type handling across the application
updated the default regexp implementation from JDK to JONI to ensure compatibility with JONI and improve performance
refactor ViewCapture to use FutureTask instead of Handler for asynchronous task management to improve performance and simplify task execution handling
fix for ticket : 126 -- add ` ` style ' ' query parameter to feature processor .
added a check to create the parent directory if it does not exist to ensure the parent directory exists before proceeding with operations
updated the default port for node discovery IP fallback from 0.0 . 0.0 to 127.0 . 0.1 to ensure the application connects to the correct IP
( chore ) camel - core - maven - plugin : fix checkstyle issue
pdfbox - 4892 : add a private constructor , a suggest by valerybokov
updated method names and class names from WorkModeToggleContainer to WorkFooterContainer to improve clarity and consistency in naming conventions across the codebase
fix a couple of javadoc error in the jdwp plugin
fix ( prettyprinter ) : add superclass annotation to type parameter
[ hotfix ] [ runtime ] fix memory leak in operatorcontext
updated string formatting in QueryByExamplePredicateBuilder and simplified parameter replacement in StringQuery to improve readability and maintainability of the code
updated ConcurrentLRUCache to use AtomicLong for incrementing evictionCounter and added methods for adding and subtracting stats to improve concurrency handling and ensure accurate
refactor DefaultTaskExecutor to use ` runAndWaitInJavaFXThread ` instead of ` runInJavaFXThread ` and add a new method
fix classcastexception in networkaddressmanagerserviceimpl by use intendeddestination
added RuntimeEnvironment setup for database and source root in MainFrame . java to enable dynamic configuration of the database and its source roots
added constructors to ` MarkedClientEnabled ` and ` MarkedServerEnabled ` classes to log successful initialization of the Admin client and server in
[ hotfix ] [ table - common ] fix typo in tableenvironment . java
mapstatement : set default statement timeout ( 2000 )
modified method signatures to remove the hangingTscTimeout parameter from multiple classes to improve code readability and maintainability by reducing redundancy
added imports for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration . java to enable serialization of GeoLocationRequest and
updated precondition checks in ArtifactFilesystem and modified test cases to use BuildArtifact and SourceArtifactImpl to ensure correct handling of artifacts and improve test reliability
tika - 405 : do n ' t throw exception when try to parse jxl file .
apps - 219 prevent concurrent modification when set show object condition
make sure we do n ' t try to write to the pipe if there be no data available .
added equality check for values in GuavaOptionalSubject and corresponding test cases in GuavaOptionalSubjectTest to ensure accurate reporting of expected and actual values
updated the logic for determining the visibility of visible elements in BackgroundAppState and modified the progress calculation in ShelfScrimView to improve the visual
add null check for navigation in MatDefEditorlElement . java to prevent potential NullPointerException during execution
ggb - 205 fix for absolute positioning of label and classic bounding box
refactor ErrorOccuredInOnExceptionRoute class to improve code readability and maintainability
[ astro ] use schedulewithfixeddelay instead of schedulescheduleAtFixedRate ( ) for discovery result
simplify singlepassandimagebasedlightinglogic : no need to check for - 1 when increment irrunit and pemunit
added @ Ignore annotation to JmsJdbcXALoadTest , JmsJdbcXATest , and JmsJdbcXATest to temporarily
updated import statements in GuiceFactoryTest . java to include specific Guice - related classes to improve code organization and clarity in dependency management
added a system feature list and methods to set and get system features in Robolectric to enhance functionality for managing system features in the PackageManager
[ te ] support path postfix in rca config file ( # 2213 )
removed logging statement from the cancellation watch dog to clean up the logging output for better clarity
fix a nullpointerexception when there be no enumeration value
renamed variable ` needInline ` to ` needStartText ` and ` needEndText ` for clarity and consistency to improve code readability and maintain
added asynchronous method to collect and send telemetry data and introduced a method to retrieve the public IP to improve asynchronous processing of telemetry data
removed conditional logic for altering the UPGRADE _ ITEM _ TABLE column type in UpgradeCatalog260 . java to simplify the column
updated error messages in BaseTableDataManager to include available space and write permissions to improve clarity of error messages for directory creation failures
[ hotfix ] [ doc ] fix typo in datasetutilities . java
added a key to include the selector ID in the output to improve the clarity of selector identification in the output
updated debug logging and transformation logic in GouraudShadingContext . java to improve code readability and maintain consistency in formatting
updated taskbar visibility and alpha handling in multiple classes to improve user experience by allowing taskbar visibility based on device state
reformatted code for improved readability in KeyExchange . java to enhance maintainability and clarity of the code
added a type check for JdbcConnection before executing a SQL query to ensure proper handling of JdbcConnection instances and prevent potential ClassCastExceptions
refactor index handling in ServerMainTest . java to improve clarity and correctness in file path construction to enhance code readability and maintainability by
added methods to retrieve the media recording MIME type in multiple classes to enhance media recording capabilities for better user experience
make shaderhelper . useshaders public instead of confighandler . useshaders
change druidadapterit . bindablefilter ( ) to return ` c = 13500 ` instead of ` 6588 `
reformatted the instantiation of ZkStateReader in CloudSolrServer . java to improve code readability and maintainability
alexeibarantsev : fix a bug in the xmp parser that be find by findbugs . no functional change .
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package to
updated the condition for checking for the presence of " < script > " in the result to improve the readability and maintainability of the code
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated related logic for varargs access
refactor border property checks to use a new method ` borderIsNotSetOrBlank ` to improve code readability and maintainability by encaps
changed logging level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and reduce log verbosity
updated the ` InternalDropAllCommandStep ` and ` HubUpdater ` classes to include ` HubRegisterResponse ` as a parameter and modified related method
updated byte handling in multiple Java classes to use ` Byte . toUnsignedInt ( ) ` instead of magic numbers to ensure accurate representation of unsigned integers
[ hotfix ] fix checkstyle violation in opentracingtransactionproducer
change default value from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to align caching behavior with updated caching mechanism
changed the default value of rangePannable from true to false to disable range painting in the category plot
updated the logic for managing work mode switches in AllAppsContainerView . java to improve handling of work mode switches based on the current
changed variable access modifiers from package - private to private for renderer and animator in Visualizer2TopComponent . java to improve encapsulation and
added handling for CancellationException in FunctionTest . java to improve error management and prevent potential thread safety issues
change constructors of JarFileResource and JarResource from package - private to protected to allow subclasses to access these resources
refactor DefaultTrackSelector class for improved readability to enhance maintainability and clarity of the codebase
added a sleep mechanism for unseqmerging status in LevelCompactionTsFileManagement . java to ensure proper synchronization during unseqerging
updated fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to ensure the correct fee currency is used for
updated database table name from ' p ' to ' post ' and refactored test assertions for clarity to improve code readability and maintainability by
refactor Unicode class for improved readability to enhance maintainability and ease of understanding for future developers
updated the ` installAutoInstance ` method to accept a ` Service ` parameter and introduced ` updateHiveLLAPSettingsIfRequired ` method to
removed unnecessary whitespace in the onComplete ( ) method call to improve code readability and maintain consistency
use @ jsonpojobuilder instead of @ deserializer for ssecustomerkey . key ( string key )
added support for handling BIG _ DECIMAL data type in RangePredicateEvaluatorFactory to improve error messaging for unsupported value types
refactor method names from ` inner ` to ` javacProcessingEnvironment ` for clarity to improve code readability and maintainability by using a more
removed unnecessary import of Annotation and print statements from genericParameterType to streamline code and improve readability by eliminating unnecessary print statements
added AC3 support and modified PlaybackController and VideoManager to enhance video playback functionality and improve error handling
updated the HttpResponse return statement to include a null value and set it as a JSON content to enhance the response by providing a content with a null value
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement and DiskFileItem classes to address deprecation warnings related to DBCP
added a test method ` testSelectInto ` to the ` IoTDBExtendTemplateIT ` class to verify the functionality of selecting timeseries
refactor RTimerTree class for improved performance to enhance performance and maintainability of timer - related code
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core . rules . graph
test and fix for issue # 358 ( wrong gap calculation in letter )
updated QueuedThreadPool and ScheduledExecutorScheduler initialization to include unique names for client threads to improve clarity and maintainability of thread naming for better debugging
refactor ViewResultsFullVisualizer to use private access and adjust layout parameters to enhance encapsulation and control over layout behavior
added support for listing and adding phone numbers in ScimUserEndpointDocs to improve user experience by providing clearer and more descriptive information about
added private constructors to the DeleteFiles , IndexFiles , IndexHTML , and SearchFiles classes and added private constructors to prevent instantiation
added null checks for responseMap and status codes in JsonHttpPropertyRequest and URLStreamProvider to improve error handling and provide clearer logging for HTTP
refactor SolrRequestHandler class to improve code readability to enhance maintainability and facilitate future updates
added a check for DEFAULT _ PARALLEL in the parallel validation to ensure proper handling of the default parallel setting
fix checkstyle issue in testvmwaremo and testvmwaremo
added handling for SCARD _ E _ NO _ SMARTCARD in the CardImpl initialization and condition check to ensure proper error reporting for smart cards
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary sysout warnings during testing
camel - bindy : allow to bind multiple key - value pair to one - to - many data format . thanks to stan lewis
disable the useowner and usetimestamp preference by default
updated method parameters from ` Runnable ` to ` ThrowingRunnable ` and modified throwable handling in ` runAndCheckException ` to improve error handling by
added null checks for via , viaContext , and pathFromSeed in CrawlURI . java to improve robustness and prevent potential NullPointerExceptions
camel - 14284 - camel - aws - sdb should use source code generate configurer to avoid reflection configuration .
updated version number from " 4.2 . 1 " to " 4.2 " and refactored data retrieval methods in LiquibaseXMLTransformer to improve code
change default for proxy . cert . validity from 7 to 90
added smoothDelta and lastDeltaUpdate variables and adjusted calculations for elapsed time in ThreadHandler . java to improve accuracy of delta calculations and ensure accurate time
added conditional checks for table name and paginator in HttpBatchReader and HttpScanBatchCreator , and introduced new test cases for JSON query with pagination and
added null check for ` ci ` in ` Worker . java ` and created a test for ` findNextCompact ` in ` TestWorker . java
updated fragment instance state handling in ShadowFragmentActivity and added corresponding tests in FragmentActivityTest to ensure proper fragment state management during instance state changes
reformatted code for better readability in BatchResourceFactoryBean . java to improve code maintainability and clarity
added a test method to validate the parsing of Android color references to ensure that the color resource loader correctly handles Android color references
added exception handling for NoResultException in AbstractJPAQuery and created a new test for uniqueResult in AbstractStandardTest to improve robustness of
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49134
updated the instance of ` getWallpaperDepthEffect ` to use ` LawnchairApp ` instead of ` l ` to ensure the correct
removed and re - added import statements for ProcessTools in LocalManagementTest . java to streamline dependencies and improve code clarity
removed the timestamp parameter from the updateTotalEnergyAverageUsage method and related calls to simplify method signature and improve code readability
updated the ExtensionStack class to handle null extensions and improved string representation to enhance robustness and prevent potential NullPointerExceptions during string construction
close inner subscriber on error in flatmap . flatmap . flatmap . flatMap ( ) .
updated connection timeout handling in MultiGetRequest and added logging for table size timeouts in ServerTableSizeReader to improve connection management and provide clearer
reformatted the assignment of androidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replaced ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter . java ` to use the correct test class
removed duplicate event fetchers in EdgeSyncCursor . java and updated image inline method in BaseImageService . java to streamline event fetchers and
added a new test to verify output hash calculation when cache is not writable to ensure correct output hash calculation when cache is not writable
camel - 14284 : camel - netty - allow to configure whether to use a bytebuf payload or not .
updated the method call to use the qualified name of the table instead of the old name to ensure the correct table name is used for altering partitions
updated the IllegalArgumentException message in the Transport class to provide clearer guidance on the requirement for creating domain sockets with the preferNativeTransport option set
add unit test for colortypehandler . add test for them .
refactor StreamEx class to improve code structure to enhance maintainability and readability of the code
removed query and lock timeout hints from SessionImpl . java to streamline query execution by eliminating unnecessary timeout settings
added a new file ` StaticLoggerBinder . java ` implementing ` LoggerFactoryBinder ` to provide a single instance of ` StaticLoggerBinder ` for logging
hbase - 12254 fix a bug in the code that be introduce by previous change to the hbase family map .
added orientation handling to the if condition in TaskbarManager . java to ensure proper rendering of UI elements based on their current orientation
unescaping of jabber occupant ' s nickname to prevent xml escape issue .
updated the longStackPut method to include the recid parameter in StoreDirect . java and added a new test class Issue265Test . java
added @ SuppressWarnings ( " mutable " , " EqualsHashCode " , " HashCode " ) annotations to multiple Java files to suppress warnings related to
add a holder class to encapsulate value and outcome in execution flow control test .
standardized spacing and array copying in DLNAMediaInfo , FFMpegVideo , and FFMpegVideo classes to
updated NBWriteServlet and TestNonBlockingAPI constructors to include an unlimited flag and modified the listener logic accordingly to enhance functionality by allowing unlimited
add a test for invalid block total difficulty when importing light .
simplified the handling of window seekable actions in DefaultPlaybackController . java to improve code readability and maintainability
[ ci ] use copyonwritearraylist instead of synchronizedlist to prevent concurrentmodificationexception
added uniform allocation calculations and adjusted position values in AllAppsView . java to improve the visual representation of uniform values for better visual representation
added a check for the presence of a colon in the key before verifying the index to ensure proper handling of the presence of a colon in the
added PrincipalResolver dependency to the casSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enable dependency injection for the principal resolver
updated DelegationTokenResponse to use Noggit JSONParser and ObjectBuilder instead of ObjectMapper to improve compatibility with noggit JSON handling
added a method to remove trailing slashes from a StringBuilder in IoUtil . java to ensure proper removal of trailing slashes from the StringBuilder
added methods to match a string in the PatternsMatcher class and corresponding unit tests in PatternsMatcherTest to improve pattern matching functionality and ensure correct
hbase - 26175 improve error message when load bulk load fail
fix fire not be able to drop water ( # 989 )
updated the parameter order in the beginOrAdjustReorderPreviewAnimations method call to improve code readability and maintain consistency
refactor calculations for decreaseFactor and decreasePercent in ContractStateCapsule , ReceiptCapsule , and ResourceProcessor to improve code read
added debug logging for input readiness checks in AsyncContentProducer and implemented a new test for it in BlockingContentProducer to improve debugging capabilities and ensure
added a null check for the weightField parameter in DocumentDictionaryFactory . java to ensure that the weightField parameter is mandatory to prevent runtime errors
added variable substitution functionality to AppleBundle and created a corresponding test to ensure correct substitution of variable names in the plist file
updated lancer bullet length and length , adjusted length , and improved turret behavior in various classes to enhance the turret functionality and ensure proper
[ k8s ] fix classcastexception in k8s adapter
added a new file ` PreParseGrammarTest . java ` that implements XML grammar parsing to facilitate testing of XML schema schema parsing functionality
fix doclint warning in javax . swing . plaf . basic package
added FontManager import and overrideFont method calls in ExtendedEditText . java to ensure consistent font settings across the application
added a null check for currentUser in AuthorizeTag . java and a corresponding test case in AuthorizeTagTests . java to ensure that authorization
camel - 14284 : camel - cxf : fix issue with invalid character in uri
added an overridden setup method in JDBCGeometryTestSetup . java to ensure proper initialization of data for JDBC geometry tests
removed the import of DumpHandler from MultipartFilterTest . java to streamline the code by eliminating unnecessary dependencies
[ hotfix ] [ table - planner - blink ] do n ' t try to restore task that be already cancel
add server . rmi . create property to allow remotejmeter to create a registry .
use string . join ( ) instead of string . join ( ) in anticompactranges log
updated display metrics handling and modified test methods in multiple classes to ensure accurate measurement of display metrics across different environments
[ java ] include cluster memberid in service heartbeat for record aggregate .
updated attribute handling for thread allocation in TestThreadMXBean . java based on version check to ensure compatibility with versions greater than 21
updated the handling of NaN results and hash code generation in CustomExpression . java to ensure correct handling of negative and positive infinity values and improve hashing
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49447 - improve logging
added authentication routes and authorization functionality to the router and AuthenticityController to enable users to authenticate with specific authentication options
added assertion to make sure nextnode be alive in loweringphase .
updated the logger reference from ConnectionManager to HttpClientRequestImpl to ensure proper logging context for the HttpClientRequestImpl class
remove redundant comparison in defaulttrackselector . comparetotruefirst ( )
refactor RuntimeSerialization class to improve serialization logic to enhance performance and maintainability of the serialization process
make sure image be not crop if crop be enable .
refactor UnitOfWorkFactory to improve code organization to enhance maintainability and readability of the code
added a new field ` allAppsCellWidthPx ` in ` DeviceProfile ` and updated references in ` WidgetPreviewLoader ` and `
tika - 3384 - add content - type - name parameter to the mail content handler
updated the URI construction in ThumbnailsCacheManager to use localId instead of remotePath to improve clarity and maintainability of the thumbnail generation process
added checks to reset the input stream if it is supported to ensure that the input stream is marked with a maximum value of Integer . MAX _ VALUE
deprecate asyncprocessor , behaviorsubject , and serializedsubject in favour of behaviorsubject .
added configuration for showing error stacks in the error page to allow users to control the visibility of error stacks on the error page
server : add log message when deletetemplate fails due to fail to delete template from domain
[ sparc ] remove unnecessary check for foreign call in sparc
[ drools - 586 ] add adapter for decisiontableconfigurationadapter for legacy drools 5 . x api
modified the ` onRequestPurchaseResponse ` method to call ` Display . getInstance ( ) . callSerially ` for response handling to ensure that the
increased the DEFAULT _ TIMEOUT _ MILLIS from 100ms to 1000ms in UnboundedSourceSystemTest . java to increase the default timeout
refactor code for better readability in ShadowAssetManager . java to improve clarity and maintainability of the code
deleted files MrefStat . java and MrefStat1 . java while adding classes MrefStat . java and MrefStat1 . java
added a check for blank scope in DependencyInsight . java and updated its usage in DependencyInsight . java to ensure that " compile " is used when
added error handling for " no trades " and " bad status " in BTCETradeServiceRaw . java to improve error management and simplify trade
test : migrate to hamcrest assertion instead of junit in integrations / cdi / cdi / cdi / cdi / cdi /
add getpaymentrequesturls ( ) method to bitcoinuri , and test
planner - 383 improve error message when use collection with annotated variable .
removed redundant call to setFolderInfo in FolderPagedView . java to streamline code by eliminating redundancy
[ jfr ] fix memory leak in jdk 20 and later
updated the handling of null values in BasicAbstractTuple to support multiple values instead of a single null check to improve robustness by ensuring all null values
refactor linter configuration file handling to use InputResourceUtility for improved resource management to enhance code maintainability and ensure proper reading of linter configuration
replaced direct calls to ` updateBackgrounds ( ) ` and ` updatePaddings ( ) ` with a Runnable that executes ` updateBackgrounds
fix incorrect index in inventory . oninventorytick ( ) call
added a new case for OCELOT _ BABY in PlayerEvents . java to enable handling of the OCELOT _ BABY
[ hotfix ] [ runtime ] add miss @ publicevolving to statettlconfig
added null check when setting parameters in PreparedStatement to ensure proper handling of null values to prevent potential NullPointerExceptions
[ java ] add describe and describe - all to archive tool output for invalidated recording .
updated string concatenation from double quotes to single quotes in append0 method to ensure consistent formatting of newline characters
added a new test method for JSON snapshot serialization in SiteSnapshotVariationsTest . java to enhance testing capabilities for JSON snapshots in the database
clear the block cache when a test fail
added functionality to enable and disable the playback of LeLensMask in AmcrestHandler and DahuaHandler to enhance camera functionality by enabling
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig ` , ` BuildRuleFactoryParams ` , and ` BuildRuleFactoryParams
refactor ChangeLogIterator to accept a list of change set filters as a parameter to improve flexibility and flexibility in handling change set filters
do n ' t print stack trace for guest exception in polyglot launcher
updated method call from ` getenv ` to ` getEnvOrSystemProperty ` in ` Ec2Utils . java ` to ensure the correct environment variable is
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility during serialization
refactor space handling logic in SpacesVisitor . java to use dropParentUntil for better readability to improve code clarity and maintainability by simplify
fix : add servercacheoptions # copy ( boolean nearcache )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest . java ` to verify border visibility behavior on floated elements with overflow
updated the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator ` and ` ProjectCommand
updated the constant name from LIVE _ URI to PROD _ URI and added error logging for the exception to improve clarity and provide more informative
updated resource path handling and regex patterns in SpringResourceAccessor . java to improve resource path management and ensure correct path formatting
added tests for microgram per cubic metre and square metre format in SmartHomeUnitsTest . java and SmartHomeUnits . java to ensure
replaced ` getMask ( ) ` with ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to improve performance by using
deleted the Tls12SocketFactory . java file to remove unused or redundant classes to simplify the codebase
fix duplicate citations in tex - bib file ( # 7636 )
added a method to check if Robolectric is in legacy mode to ensure compatibility with Robolectric ' s runtime environment
added a condition to return " DOUBLE PRECISION " for FirebirdDatabase in DoubleType . java to ensure correct data type is returned for
added null checks for dataSource and transactionManager before assigning them to avoid potential NullPointerExceptions during initialization
add ` @ api ` annotation to unittest . stubs and add ` @ api ` annotation .
updated the command in OutputStreamTest to use " 127.0 . 0.0 . 1 " and modified timeout annotations in test methods to improve test reliability and
no effective change - refactor test to use try - with - resources
updated TermScorer instantiation to conditionally use FREQS instead of FREQS based on scoreMode ' s needsScores to ensure that
[ hotfix ] [ runtime ] fix npe in dataflowmetrics
server : do n ' t search account nics if it ' s not in the account data center
refactor DynamicPartitionPruner to utilize a new method for finding target object inspectors to improve code readability and maintainability by centralizing target
added a method to remove build artifacts from the artifact filesystem and corresponding tests to enhance the artifact filesystem ' s functionality by allowing users to delete build artifacts
added selection logic for the table ' s selected row in ThrustCurveMotorSelectionPanel . java to ensure that the table ' s row selection
move assertthrowsarraystoreexception from main to integration test
refactor PropertySource class for improved readability to enhance maintainability and clarity of the codebase
add support for custom user agent in http client
refactor session management by introducing a ` restore ` method for session restoration to improve code readability and maintainability by encapsulating session creation
updated assertions in IssueTest . java and changed the type of the results set in Reporter . java from HashSet to Set < Object > to improve clarity
camel - 14284 : camel - aws - consume should use content - type = text / plain if content - type be null
added activationrequestenied event to send the activationrequestenied event instead of activationrequest
pdfbox - 4892 : fix typo , a suggest by valerybokov
added a method to update snapshot radius in RecentsView and modified the visibility of the updateSnapshotRadius method in TaskView to improve code organization and
added logging for generated Swagger content in StaticMicroserviceVersions . java to improve visibility into the generated Swagger for 3rd party services
changed the return type of the put methods from void to int in ArrayMap . java to allow the put method to return an index value instead of
updated KafkaContainerCluster to use ` withStartupTimeout ( Duration ) ` instead of ` Stream ` and improved error message formatting to enhance code readability
[ issue # 6067 ] fix exception handle in defaultmqpushconsumerimpl # sendmessageback
updated header checking logic in StaticServerHttpHeadersWriter to ensure headers are only added if they already exist to improve header management by preventing duplicate header addition
added package access check before loading the EventListener class to ensure proper access control during class loading
added custom adapter for application list and image list in ApplicationsFragment to enhance user experience by providing customizable application lists
fix npe in keyboardquickswitchtaskview when there be no task
use try - with - resources to ensure download state cursor be close
fix ( sql ) : move clause . insert into the clause stack
added JUnit Test annotations and modified method visibility in HibernateCursorItemReaderIntegrationTests and HibernateCursorProjectionItemReaderIntegrationTests to improve test
added asynchronous polling functionality and improved error handling in DataInputStreamWithTimeout . java to enhance thread safety and performance during data input stream operations
added ENABLED _ TS constant and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphMode and VersionedTargetGraphCache to
refactor UpgradeCatalog150 class to improve code readability to enhance maintainability and facilitate future updates
rename ` ` testnet3 ' ' to ` ` testnet ' ' to avoid confusion
danielwagnerhall : do n ' t update property view if there be only one geo
refactor onboarding preferences handling in AppsDividerView . java and add nullability annotation in ActivityContext . java to improve code clarity and
updated HdfsIndexOutput to extend BufferedIndexOutput and modified flush and writeBytes methods to improve resource management and error handling during closing
pdfbox - 4071 : do n ' t try to draw a rectangle when the clip path be not complete
removed synchronization around the assignment of localAddress in SocketChannelImpl . java to simplify the code and improve readability
refactor row handling in TemplateTransformer to use a new method for adding values to improve code readability and maintainability by encapsulating logic
added a utility method to check if the operating system is Windows and refactored file renaming logic in Wallet . java to improve code
replace char array with a string constant for alphabet and accent encoding to improve code readability and maintainability
added a check for ` executedUnexpected ` and modified type handling logic in ` NodeGenFactory . java ` to improve clarity and correctness in handling
simplified the condition for checking stored fields in IndexingChain . java to improve code readability and maintainability
fix ( sql ) : fix timestamp with nanos in where clause
removed the conditional check for postedRunnableStacktraces before adding to runnables to simplify the code and improve readability
fix typo find by codespell on fossies . org
replace assertInitialized method with waitUntilInitialized method in ConnectionPoolTest . java to improve clarity and functionality of connection initialization checks
updated directory defaults from null to " single " in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to ensure consistent directory retrieval behavior
replaced size - based data retrieval with a direct increment of filterCount in FaultTolerantChunkProcessor to simplify code and improve readability by
updated method formatting and refactored tab initialization logic in T4994049 . java to improve code readability and enhance error handling for file
replaced multiple conditional statements with a single assume statement for TerminalFactory checks in ConsoleReaderTest . java to improve code readability and maintainability by reducing
remove unnecessary check for admin user in getfeedbacksessionsaction
updated calculations for newSelection and adjusted velocity thresholds in AllAppsView . java to improve accuracy of selection selection selection logic
do not notify client on result availability if there be no thread available
added model loading and refreshing in DataModelManagerDialog , removed encryption logic in DbConnectionDialog , and refactored connection handling in ExportPanel
replaced private final int writeBufferSize with a static final int WRITE _ BUFFER _ SIZE and updated constructor calls to use String . valueOf for better
refactor segment size calculation in DocumentsWriter and add a test for no documents index in TestIndexWriter to improve code clarity and ensure proper handling of
[ blender ] do n ' t require dvert value to be present in modifier .
refactor FileDisplayActivity to improve code organization to enhance maintainability and readability of the code
replace direct creation of UnsupportedOperationException with a predefined instance of fillInStackTrace to avoid filling in stack trace for better error handling
updated the method to calculate the average line height using streams to improve accuracy of line height calculation
updated RotationTouchHelper to accept a DisplayHolder parameter instead of using a singleton instance to improve flexibility and allow for different display configurations
refactor quote handling logic in AVA . java to improve clarity and correctness to ensure proper handling of quoted strings in the buffer
updated methods in ServletHandlerInterceptor and added new test cases in ServletHandlerInterceptorTest to ensure correct handling of span IDs and improve test coverage for
added a new test method ` testSmall ` and ` testBig ` to ` ServerDatagramConnectorTest ` to validate the functionality of the `
updated substring method call in TestSqlEntityProcessorDelta . java to ensure correct substring extraction for the country code
refactor caching logic in Cache . java to improve performance and reduce memory usage
updated variable names and set scopes from ' e ' to ' ev ' in ResourceSetRegistrationEndpoint . java to improve code clarity and ensure correct
updated the ` doBefore ` method and modified the ` seenDocIDs ` BitSet initialization in ` TestUnifiedHighlighterTermVec . java ` to
added a Swing application to display a JPanel and a JScrollPane of a GcodeTable with a JScrollPane to demonstrate the functionality of displaying a persistent JTable with
use config . getconnecttimeout instead of hardcoded constant
updated error logging messages and adjusted conditional logic in various classes to improve code clarity and maintain consistency in error handling
refactor TestMediaService class for improved readability to enhance maintainability and facilitate future feature additions
remove the unused constant HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK from Messages . java to improve code clarity and
download market print tool to make it easy to print all currency in the desktop
added hostname validation and validation for components in EndpointAddressInterceptor to ensure that the component name does not exceed the allowed length and improve error handling
added multiple methods to register security key start and complete in AccountProxy and HttpAccount classes to enhance security management capabilities in the application
refactor ServerSpanThreadBinder for improved thread management to enhance performance and maintainability of the code
fix bug in bulletphysics . getuserpointer ( ) and blockitemsystem . getuserdatapointer ( ) .
added new fields " the _ geom " , " the _ geom " , and " number " to the Csv2Shape class to enhance the csv
replaced callGasWord . longValueSafe ( ) with gasCost in VM . java and removed unused imports in Program . java to improve code
refactor Parameters class for improved clarity to enhance maintainability and readability of the code
added a call to setIgnoreNullValues on the piePlot to ensure that null values are ignored during rendering
refactored loading logic in ResourceBundle . java to simplify cache management to improve code readability and maintainability by reducing complexity
updated the character value from ' _ ' to ' - ' in TaggedPdfReaderTool . java to correct the formatting of the character used in the
allow executescriptaction to use @ allowedduringediting annotation when edit action .
added a userModified flag to the LoginSamlAuthenticationProvider class to enable user modification during authentication
added a new file TestSealedObjectNull . java to test the behavior of a SealedObject with null values to ensure that the SealedObject
updated method names from ` onOpen ` to ` setResponse ` in ` ConnectPromise ` and ` succeeded ` to improve clarity and consistency in handling
added a static final Set for SNOW and updated its usage in BlockEventListener . java to ensure compatibility with server versions prior to 1.77 . 5
added an ` id ` field and modified trade handling in the ` CryptsyPublicTrade ` and ` CryptsyAdapterTest `
added error handling when closing the HMS connection to ensure proper resource management and avoid potential memory leaks
use random . nextlong ( ) instead of system . currenttimemillis ( ) . getmillis ( ) . getmillis ( )
updated parameters and added a new device profile " Nexus 5 " to the DynamicGrid and added it to the deviceProfiles list to enhance functionality and
fix refcount reset when use takeuntil ( ) and takeuntil ( )
replaced ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext . java ` to improve clarity and
added support for WHITESPACE _ AROUND _ TEXTUAL _ OP in FormatToken and modified formatting logic in FormatVisitor to enhance the formatting capabilities for
added checks for non - empty file and improved file validation in SaveTask . java , and added unit tests in SaveAndLoadTaskTest . java
added synchronized keyword to multiple methods in MLogWriter . java to ensure thread safety during concurrent operations
log4j2 - 1080 add support for mutablelogevents to smtpmanager
updated the PADDING property to use NonNegativeLengthLike instead of LengthLike to ensure compatibility with non - negative lengths in property builders
replaced calls to ` createContext ( getUser ( headers ) ) ` with ` createContext ( ) ` across multiple resource classes to simplify context creation by
improve handling of jimple catch block in methodirbuilder .
updated error message formatting in JUnitRunner and AndroidPlatformTarget classes to enhance clarity and provide guidance on installing Android SDKs using the Android SDK Manager
update cacheSize calculation from maxMemory / 16 to maxMemory / 8 to optimize memory usage for improved performance
added a condition to check if both finish and start are zero in the InvocationStageTrace . java file to ensure that both finish and start conditions are
handle nullpointerexception when load a fips keystore to avoid nullpointerexception .
change upstreamcheckutilstest to use local port instead of hardcoded value
ggb - 258 fix for resize panel ( issue # 370 )
added support for additional shaders , such a ARB _ compute _ shader , ARB _ geometry _ shader , and OpenGL 4.0 .
refactor PopulatorContext class to improve code organization to enhance maintainability and readability of the code
do n ' t call handlesaveallnotification ( ) if the project do n ' t have a saveallaction
added file encoding handling and updated JSON writing method in ZQLJobManager . java to ensure correct character encoding is used for JSON output
added a check to ensure args length is greater than zero before processing Table to avoid potential ArrayIndexOutOfBoundsException when args length is greater than zero
replace string constants with constants from the OSSOHeaderDecoder class to improve maintainability and readability of the code
deprecate -- suffix - strategy in favor of -- suffix - strategy
removed debug log statements from DerbyDatabase . java to clean up the code and improve readability
[ java ] fix flaky cepepeptest and cepjavatypetest
replaced ` . parallelStream ( ) ` with ` . stream ( ) ` in ` PersonNameSuggestionProvider . java ` to improve performance by avoiding
updated operation type handling and added checks for liquibase hub mode in HubUpdater . java to improve clarity and ensure correct property updates based on the presence of
added constants for version success and failure keys for IBM J9 VM and Eclipse OpenJ9 VM to improve code clarity and ensure correct handling of
modified the message formatting in FontFamily . java and added a new DebugFonts . java file to improve clarity of log messages for different font types
updated imports in ALPNNegotiationTest and NegotiatingServerConnectionFactory to include HTTP _ 1 _ 1 handling to ensure compatibility with HTTP
add no _ rate _ control to maxconcurrentstreamstest
added a new Java file ` Test6741426 . java ` that implements a Runnable implementation with JComboBox and JTextField to demonstrate the use of Nimbus
updated error message assertion in CsrfAwareEntryPointAndDeniedHandlerTest to include the exception message to improve clarity of error reporting in tests
added null checks for dbMgdPath and dbExtPath in HMSHandler . java to ensure that both managed and external directories are validated
[ s3 ] move s3copyobjectrequest to correct package
removed accentColor parameter from multiple setup methods in SettingsActivity . java to simplify code and improve maintainability by using default theme utilities
updated error message in TemporaryFolderUsageTest to include the fileAtRoot to improve clarity of error reporting for non - relative folder paths
replaced instances of ClassTypeInformation . from ( Class . class ) with ClassTypeInformation . OBJECT in MappingMongoConverter . java to simplify type handling
fix nullpointerexception on clientnetworkconfig . addaddress ( string , null ) when address be empty or null
add exception for expire docusign root to verifycacerts . java
return the output count of the computation method in the worker loop instead of void .
added a check for popup interaction before setting the mode in ModeToggleMenu . java to ensure the menu behaves correctly when a popup is clicked or
pdfbox - 2576 : fix Arrayindexoutofboundsexception in memoryttfdatastream . read ( ) and add unit test
added a new file ` FinalizerInfoTest . java ` implementing a test for finalizer and object initialization to verify that finalizer - related functionality
use doonnext instead of map in cachingroutedefinitionlocator and cachingroutelocator
refactored the handling of receiver addresses to check for custom addresses before processing compensation requests to improve code readability and maintainability by consolidating
refactor StringSubject class for improved readability to enhance maintainability and clarity of the codebase
updated byte array size in BatchValidateSignContractTest . java from 1 , 000 , 000 to 1000 , and added @ Ignore annotation to
corrected the method name from ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to improve clarity and consistency in method naming
replace " @ " with " from : " in the saveRecentQuery method call to ensure recent queries are saved correctly after the " from : "
removed the conditional check for rebalance in SimulatorDiscoverer . java to simplify the logic for better readability and maintainability
added a new endpoint ` importAccount ` to ` YubiKeyAccountRegistryEndpoint ` for importing YubiKey accounts and updated tests accordingly to
removed multiple shaders from ShaderManagerLwjgl . java and updated material parameter names in FontMaterialProducer . java and AbstractNode . java
added null checks to the paintOnTopLoop loop and adjusted padding logic in SideMenuBar and Toolbar classes to improve robustness by preventing potential NullPointer
refactor AbiWriterProtocol to improve code organization to enhance maintainability and readability of the code
updated caption assignment logic in HierarchyBase . java to handle null subName cases to ensure proper caption assignment when subName is not provided
change data flag from IMMOBILE to GRAVITY in EntityItem . java to enhance data storage options for better user experience
added null checks and refactored conditional statements in CustomExpression . java to improve code robustness and prevent potential NullPointerExceptions
replaced the method requestBlindVoteListFromNetwork with a call to sendRepublishRequest in VoteResultService . java to streamline the request
add a test case that demonstrate the issue
updated string literals in SubtitleUtils and RemoteUtil to use single quotes instead of double quotes to improve code readability and maintain consistency in string
fix : add a line separator to the comment class . fix # 203
make singleimplementorsnapshot volatile and add compilationfinal annotation .
added null check before adding filters in SimpleFacets . java and updated test cases in SimpleFacetsTest . java to ensure filters are only processed
fix thinghelper to work with bridge and non - bridge thing
replaced calls to ` printHelp ( ) ` with ` error ( ) ` and ` error ( ) ` methods in ` Ktab . java `
added a check to ensure the output file exists before returning it to prevent potential errors when accessing the output file
added date parsing logic in DateConverter and corresponding test cases in DateConverterTest to ensure correct parsing of date strings with specific time formats
added assertions to validate the existence of a Post by its slug in SpringDataJPALockTest and implemented the findBySlug method in PostRepository to
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and refactored the logic for determining
added a SimpleClientHttpRequestFactory to configure connection and read timeouts in ClientRegistrations . java to improve connection handling and resource management during HTTP requests
add some test for source . getpath and source . getname on window .
update GRAALVM _ VERSION handling in DefaultHomeFinder and GraalVMLocator to ensure consistent versioning of the GraalVM implementation
added logic to set token and refresh token validity if they are zero to ensure proper handling of client validity settings based on configuration
updated android API version handling to use Options . v ( ) . android _ api _ version ( ) to ensure accurate default SDK version retrieval based on
refactor PropertyPlaceholderHelper to remove ' this ' keyword from method references to improve code readability and maintainability by eliminating unnecessary ' this ' keyword
removed a method call to ` { 9 } ` in the ` Resources . java ` file to simplify the code and improve readability
refactor ZkSolrClientTest to use CountDownLatch and AtomicInteger for tracking inactive collections to improve thread safety and ensure accurate collection management during tests
added BigInteger import and its usage in simpleTypes to ensure proper handling of BigInteger types in MongoDB mapping
added a condition to check if the buttonText equals the buttonText in the HomeFragment to ensure that the toast is displayed when the button is pressed
added a condition to check if MEncoder no out of sync is enabled and noskip is disabled to improve video encoding behavior based on configuration settings
reduce event loop size from 10 to 15 in test
changed access modifiers from package - private to protected in multiple classes to enhance accessibility and encapsulation of methods in the CountMin4 class
added methods for retrieving file float source and sort field in ExternalFileField . java , and created a new test class ExternalFileFieldSortTest .
updated exception message from " Invalid URL " to " Connection error " in DoiFetcher . java to improve clarity of error reporting for better debugging
added source ID handling in OpenRocketSaver and updated event saving logic in FlightDataBranchHandler to enhance event data management by including source ID
changed the access modifier of the check method from private to protected to allow subclasses to access and override the check method
added handling for synchronization operations in FileActivity to improve user experience by providing feedback when a file synchronization operation finishes
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder for file path and modified the request header in ThumbnailsCacheManager . java
added a check to ensure the InfiniteContainer is initialized before proceeding with further operations to avoid potential errors when the InfiniteContainer is not initialized
changed the initialization of the total variable from 0 to 1 and adjusted the calculation of the total value to ensure the total value is always at least 1
added a lock check before updating feed entries in FeedRefreshUpdater . java to ensure that updates are only performed when the feed is locked
refactor conditional statements for handling user principals in SolarisAclFileAttributeView . java to improve readability and maintainability of the code
replaced the list of edges with an array for storing edges to simplify the code and improve readability by eliminating unnecessary complexity
added IOUtils import and closed the input stream in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
fix bibtex parsing of comment with non - ascii character .
added strict parameter handling to the Main class and corresponding tests to enhance parameter validation and provide clearer error messages for unknown parameters in properties files
allow @ alwaysinvalidconstraint and @ customconstraintvalidatorfactory to work with @ pojoannotation
camel - 14284 : camel - http4 - fix http component verifier to use http4 instead of http
added a call to waitForThingsToLevelOut with a timeout of 30 seconds to improve test reliability by allowing more time for things to be available
removed redundant checks for Integer . MAX _ VALUE and Long . MAX _ VALUE in UBJsonWriter . java to simplify code and improve readability
refactor ApplicationTest class for improved readability to enhance maintainability and clarity of test cases
replaced String with StringBuffer for storing details in ConnectionFactoryImpl . java to improve performance and readability of the code
refactor code to use RoboType instead of Type across multiple files to improve code clarity and maintain consistency with RoboType naming conventions
[ java ] return abort action . abort if archive dispatch be complete .
dataimporter : add support for cache key and lookup in where clause
added a new file PutfieldError . java that demonstrates how to throw a IncompatibleClassChangeError to provide a test case for specific error
make awsaddresstranslator # getprivatetopublic return an empty map instead of null if the host be already in the map
add log in case memtable flush after min be reach . patch by jbellis
replaced instances of ` Space . build ( " " ) ` with ` Space . SINGLE _ SPACE ` in multiple Java files to improve code
removed an unused method ` encodedLength ( ) ` from ` Flyweight . java ` to streamline the code by eliminating redundancy
refactor TestMethodResultMapBuilder for improved code clarity to enhance maintainability and readability of the codebase
added size checks for ` NumberFormatException ` and ` RuntimeException ` in ` FindNullDeref . java ` to improve error handling by limiting the
[ hotfix ] [ runtime ] make tasklocalstatestoreimpl # lock non - null
updated return values for various date and time formats in Utils . java to improve clarity and consistency of date formatting in the code
updated conditions for handling DeepShortcutView in Utilities and FloatingIconView classes to ensure correct drawable retrieval based on the type of shortcut views
changed the type of the validator in JwtIssuerValidator from JwtClaimValidator < String > to JwtClaimValidator < Object > and updated
renamed methods ` buyQuickRate ` and ` sellQuickRate ` to ` getBuyQuickRate ` and ` getSellQuickRate ` , and
add a new configuration class ` CoverageConfig ` and modify ` CoverageController ` to use it to conditionally load the ` ProjectData `
added a check to ensure the EventBus is registered before registering the sticky event to prevent unnecessary registrations
added a check for ASCII character length before calling normalize methods in NormalizerBase . java to optimize normalization process by avoiding unnecessary character checks
[ hotfix ] fix check for migrationtasksallowed in jobcoordinatorservice
added error handling for SQL update in SpillableGroupByIT and NoOpStatsCollectorIT to ensure robust test execution and provide clearer error
( chore ) camel - http : / / issues . apache . org / activemq / browse / camel - examples / camel - c
added attrs ( AttrKind . OK , WIDTH ) and attrs ( AttrKind . OK , ... ) parameters in HR . java to ensure
added a line break to the output of the HtmlCoreReport to improve the readability of the output
updated the calculation of RAMBytesUsed to account for null scores to ensure accurate RAM usage estimation by avoiding potential null pointer exceptions
added a custom adapter for serializing and deserializing a collection element in CustomTypeAdaptersTest . java to ensure proper serialization and deserialization of
set extra data from miningparameters when merge coordinator
added a static map ` numArgs ` and modified the ` argsToProperties ` method to include a ` numArgs ` parameter to improve flexibility in
refactor PathParamServerEndpointConfig for improved clarity to enhance maintainability and readability of the code
change threshold variable name to configuredThreshold in DefaultMigrationAddressComparator . java and introduce a constant for delay in MigrationRuleListener . java to improve code
updated parameter names from ' part ' to ' partOrList ' in RestClientRequest and RestClientRequestImpl classes to improve clarity and consistency in
move html resource to ` ` / bootstrap / statistic / core / statistic / bootstrap . html ' '
remove no longer use basiccategory method from language pack ( no longer need )
hhh - 11713 remove deprecate method from abstractentityloader and use uniqueentityloader directly
hbase - 14545 remove cancelled element from taskpool in snapshotmanager ( addendum )
fix for setsize ( ) in pgraphicsjava2d when width or height be zero
fix checkstyle issue in util / hikari / hikaripool / hikaripool / hikaripool . java ( #
removed the assureMatchVersion ( ) method and updated luceneMatchVersion to Version . LATEST in multiple filter factory classes to ensure compatibility with the latest
add a new default method client interface ( aop ) to allow executable method to be use from the default method .
add a check for the first character of a comma in the DRLParser to ensure proper parsing of commas in the DRLParser
renamed multiple classes related to Guava , IterableOfProtos , MapWithProtoValues , and ProtoSubject to improve clarity and maintain consistency in naming
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46135
move PublishSubscribeChannel and PublishSubscribeChannel from the ' channel ' package to the ' dispatcher ' package to improve package organization and clarity in the code
updated execution ID handling from String to Long across multiple classes to ensure consistency and accuracy in tracking execution IDs across the application
added multiple digest update calls for width and height in ImageProcessor . java to ensure proper handling of byte values for digest operations
removed logging of overlay version in SolrConfig and added imports for various parameters in SolrConfigHandler to improve logging clarity and enhance code maintainability by
updated the delay duration in mSyncResult from a fixed value of 60 minutes to a fixed value of 3 minutes to avoid excessive synchronization delays
updated the initialization of afterConversionTime in SegmentV1V2ToV3FormatConverterTest . java to ensure proper handling of last modified time
updated path handling in ` addPathToMTree ` methods to use a ` Path ` object instead of a ` String ` to improve clarity and
updated URL handling in DefaultPackageScanClassResolver and added a new test case in DefaultPackageScanClassResolverTest to improve package scanning functionality and ensure
[ hotfix ] [ table - common ] [ table - planner - blink ] [ table - common ] add tsextractorutils
added a new file ` SpringSecurityAuthenticationSource . java ` that implements ` AuthenticationSource ` to provide a mechanism for retrieving the principal and its details
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with KitKat and
replaced ` Dialogs . autoSuggestDialog ` with ` SimpleFormDialog . build ` for handling custom file suggestions to improve user experience by allowing custom
added a new test method ` testNewput ` in ` TxInputUtilTest . java ` and updated assertions in ` StoreAPITest . java
updated parameter formatting in the stream method in MongoTemplate . java to improve code readability and maintain consistency in parameter naming
map overview : do n ' t use scroll amount for zoom , use log ( x ) instead
updated the ` KNearestNeighborClassifier ` constructor to accept a ` Similarity ` parameter and modified related tests to utilize this new feature to enhance
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to simplify query parsing and improve performance
updated the method call from ` toString ( ) ` to ` getReason ( ) ` in ` LowResourceMonitor . java ` to ensure the correct
updated package - info . java files for mmm and ppp to improve documentation clarity and maintainability of the code
added MTU request tests and implementations for BluetoothGatt callback functionality to ensure correct MTU request handling based on GATT callback behavior
refactor the creation of ` ServletInputStream ` to a separate ` createServletOutputStream ` method to improve code readability and maintainability
( chore ) camel - vosk : set log level to warn
channelprocessingmanager : use concurrenthashmap instead of hashmap to improve thread safety
updated Japanese translations to include " all " , " grouped " , " summary " , and " summary " to improve clarity and usability of
updated JDBCTypeMapping logic to check for size greater than 1 instead of 0 and corrected formatting in JDBCTypeMappingTest to improve code clarity and
added synchronized keyword to ` addPlayer ` and ` removePlayer ` methods and updated entity addition and removal logic to improve thread safety and streamline entity
replaced the ` isScreenReaderActive ( ) ` method with a new ` AccessibilityStateTester ` instance and updated related logic to improve accessibility handling
added support for side navigation in the command behavior checks in MenuBar . java and SideMenuBar . java to enhance functionality for handling side navigation in the
updated subscription syntax in ` PoloniexManualExample . java ` and added error handling in ` WampStreamingService . java ` to improve code clarity
updated energy limit validation logic and error messages in UpdateSettingForEnergyLimitContractActuator to ensure that energy limit values are greater than zero to
updated variable name from ` url1 ` to ` javaUrl ` and added protocol handling in ` UrlBean ` to improve code clarity and ensure proper
camel - 14284 : camel - soap - jaxb - add getter / setter for the namespaceprefixref property of the soapjaxbdataformat
refactor assertions in TestRange to use a new method isSameDay for date comparisons to improve code readability and maintainability by reducing redundancy
added a check to restart Jetty Solr runner in BasicAuthIntegrationTest and updated security properties in ZkStateReader to ensure the server is restarted
added a PriceFeed parameter to the TradesChartsViewModel constructor to enable users to view the price feed based on user preferences for sticky market prices
refactor configuration setup in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to use a local variable for hbase configuration to improve clarity and
updated variable names and logic in NativeString . java to improve clarity and correctness in determining the last index of a string
added file downloading functionality to FileDataStorageManager to enable automatic file downloading for improved user experience
refactor RandomAccessFile initialization and set the log length in MappedRawLog . java to improve code clarity and ensure the log length is correctly set
added methods ` checkIfRegistryRunning ` and ` deleteFileIfExistsWithRetry ` in ` FileUtils ` to enhance functionality for checking if a registry is
removed unused imports and added componentPresetDao . startLoading ( ) calls in multiple Java files to streamline code and ensure proper loading of component
added multiple ` @ SuppressWarnings ( " rawtypes " ) ` annotations and removed unused variables in multiple classes to improve code clarity and maintainability by
added null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions during execution
phoenix - 4485 allow to set isolation level to transaction _ read _ committed or transaction _ serializable if transaction be disable
added transaction handling in AbstractStepFactoryBean and refactored error processing in ItemOrientedStep to utilize a default transaction attribute to improve
refactor CasManagementSecurityInterceptor to use DirectCasClient instead of CasClient to improve compatibility with newer CAS client implementations and enhance
removed the visibility and editability of the add category menu item in ListFragment and added a new item in NavigationDrawerFragment to enhance user experience by
updated method name from ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and renamed ` observeDownloadWorkerState `
pdfbox - 2576 : avoid classcastexception , a suggest by valerybokov
updated the font size handling in TerminalView and TerminalBridge classes , and modified the text size retrieval method in TerminalBridge to improve font size management and
added a validation check before modifying the ConstantFrame to ensure that the fact is valid before processing to avoid potential errors
refactor DistBuildTargetGraphCodec , ConvertingPipeline , Parser , and VisibilityPatternParser classes to improve code organization and maintainability
replace direct return of spans with a new ArrayList instance to ensure that the returned spans are not modified externally
removed unnecessary locking mechanism in Liquibase . java to improve code readability and maintainability
added a method to set a revision in MicroserviceVersions and updated related test cases to set and verify the revision of the microservice versions to null
updated foreign key and index handling in TableRetriever to include unique names and indexes to improve clarity and consistency in handling foreign key names and index names
camel - aws2 - s3 : add uri - endpoint - override option to all the component - aws2 - s3 component
removed the currencyPair parameter from the getBitstampUserTransactions method in BitstampAccountService . java and added a new method in BitstampAccount
added error handling to return null if a component is not found in the blueprint container to improve robustness by preventing application crashes due to missing components
make pushbuilder . push ( ) return the result of the push ( ) method if enablepush = false .
refactor LegacyAddressTest to read data from a CSV file instead of a hardcoded value to improve flexibility and maintainability of the test by
changed the access modifier of the method ` findDropTargetAt ` from package - private to public to allow access to the method from other classes
refactor push notification handling in NotificationsActivity and DrawerActivity to improve code organization and maintainability by consolidating push notification setup logic
do n ' t close the channel if there be no replay request
updated null checks and method names in LdapPasswordPolicyEnforcer . java for consistency and clarity to improve code readability and maintainability by standardizing string
refactor DefaultAnnotationEngine and Stubber classes to improve code readability and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to issue PHOENIX - 2840
nifi - 3456 : added timezone property to aboutdto and flowresource
fix a bug that cause the split operation to fail when there be more than one data directory .
removed unnecessary exception handling for reading objects in BeanContextSupport . java to simplify code and improve readability
fix a potential deadlock when add a circuit to the active circuit list .
change exception type from GdxRuntimeException to IllegalStateException in ShaderProgram . java to ensure proper handling of uncompiled shader fetch failures
flume - 102 . make pollablesourcerunner , eventdrivensinkrunner , eventdrivensourcerunner , and eventdrivensinkrunner
updated logging level from error to info in FastBindLdapAuthenticationHandler to improve clarity of authentication failure messages
refactored the ContainerOrderFocusTraversalPolicy class to improve focus traversal logic to enhance performance and maintainability of the code
use int for getpointlength ( ) to avoid overflow
removed unnecessary whitespace in the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve code readability and maintain consistency
refactor database connection handling and logging in SchemaCrawlerMain and Executable classes to improve resource management and error handling for database operations
bump default tl version to v1.2 with a fallback for old jdks
updated exception messages in CountersManager to clarify buffer usage to improve error reporting for better debugging
updated audio queue position handling in MediaManager . java to improve audio playback control to ensure proper handling of audio interruptions when the queue is empty
updated debug logging statements in HttpConnection . java to include the connection parameter to improve logging clarity by providing additional context during the upgrade process
added ` @ Transient ` annotation support to ` JpaPersistentPropertyImpl ` and its corresponding unit tests to enhance persistence handling of transient fields in
updated assertions in UpgradeResourceProviderTest to compare different versions of HDP - 2.1 . 1 and cluster to ensure correctness of repository and version
trufflevm : make eval return object instead of symbol .
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46135
corrected the property name from TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE to
refactored error handling in ` JavaEditor ` and ` JavaProblem ` classes to improve clarity and organization of parsing errors in the code
replaced the usage of ` DEFAULT _ OFFHEAP ` with ` DEFAULT ` in ` DictionaryIndexType ` and ` BloomFilterHandler ` to
use system . getproperty ( ` ` line . separator ' ' ) for test
refactor DebugHelper class for improved readability to enhance maintainability and ease of understanding for future developers
added a boolean field ` ownsTexture ` to the ` ParticleEffect ` class and updated its usage in the ` ParticleEffect ` class to
added LDAP configuration parameters to HiveConf . java to enhance security and configuration options for LDAP operations
doc : fix javadoc error in datacatalog
updated input method handling in DetailActivity . java to include SHOW _ FORCED and HIDE _ IMPLICIT _ 
added a test for converting primitive data types to maps in DataTableTypeRegistryTableConverterTest to ensure proper handling of primitive types in data table conversion
added a deletion of the " fsMem . mv . db " file and increased the size from 100 to 50 to improve resource management and reduce the
updated error message to include a newline after closing resources to improve clarity and accuracy of error messages related to resource management
made ` dropSequences ` method abstract in ` AbstractDatabase ` and added import statements in multiple database classes to ensure consistent behavior across different database implementation
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
added a variable ` f ` to store the result of ` createField ` in ` DocumentBuilder . java ` to ensure that the field is properly initialized
fix hierarchical icon when event do not contain map _ styles .
added a test method to verify upsert behavior for non - existing objects in MongoTemplate to ensure that the upsert operation returns the expected inserted object
hbase - 27175 fix calculation of mid index in the hfileblockindex
added methods to record app launch statistics and modified broadcast intent handling to ensure that shortcuts are not null before sending broadcast intents
updated graphics handling in JavaSEPort . java to use Graphics2D for rendering to improve performance by reducing unnecessary data manipulation
renames teammembersfromlastsection to teammembersfromlastparticipantsection to avoid confusion
refactor ID generation logic in Inventory . java and add a test for ID generation in InventoryTest . java to ensure correct ID generation for player inventory
added a conditional check for the found variable in ConfigDescriptionRegistry . java to ensure that the loop only proceeds if the found variable is present
updated returnType and sourceBefore parameters in multiple parser visitor classes to ensure accurate handling of null return types in the parsing process
refactor tile initialization to handle null values for " blended tiles " to improve robustness by avoiding potential NullPointerExceptions
8024848 : remove some unused sun class from the probe . java file
pdfbox - 4892 : fix bug in ifctools2d # getarea ( )
updated the assignment of ` lockOnSync ` to use ` this ` instead of ` null ` and simplified the assignment of ` lockOnSync `
refactored event handling logic in PipeEventBus and added unit tests in PipeBehaviourEmzuli to improve code clarity and ensure proper functionality through testing
updated the timeout value in ZkController instantiation from 1000ms to TIMEOUT to reduce the timeout duration for better test reliability
added a new test method to verify passcode functionality with client parameters in TokenMvcMockTests . java to ensure proper handling of client parameters in the
added brokenOffsetsConstructors for LengthFilter , KeepWordFilter , and CharArraySet constructors in TestRandomChains . java to ensure
removed unused JUnit Ignore import from RandomPlaneTest . java to clean up the code and improve readability
fix ( griffin ) : use integer . tounsignedlong instead of int . tounsignedlong ( )
replace ` btCollisionObjectArray ` and ` btRigidBody _ upcast ` with ` btCollisionObject . getInstance `
added copyright management and updated copyright URLs in BuildProperties and AboutDialog classes to ensure accurate publication of copyright information and improve accessibility of contributors
add getdistributedobjects method to jetclientinstanceimpl and add test
[ fix ] test / sun / security / infra / moi / masscalculatortest . java fail due to incorrect value
change variable name from TOTAL _ MEMORY to MAX _ MEMORY in SmartDexingStep . java to align with the maximum memory limit
[ hotfix ] [ table - common ] fix typo in createalignedtimeseriesplan
use bisq btcwalletservice . getoutputaddress ( ) instead of btcwalletservice . getoutputs ( ) .
updated JSON string handling in JsonLoaderTest . java and added exception handling in JsonLoaderTest . java to improve JSON parsing functionality and ensure proper exception
updated the threshold for tableSize from 1 to 0x40000000 in ObjectSet . java to allow for larger table sizes to improve flexibility in
updated imports and modified the handling of the DATA _ SCALE value in ColumnSnapshotGenerator . java to improve code clarity and ensure dataScale is
removed @ AddToRuleKey annotation from several fields in AppleTest . java to simplify field declaration and improve code readability
added error handling and improved content processing in FileHelper , TextHelper , and TextHelper classes to enhance robustness by handling potential SecurityExceptions and
added a new constant ` StyleWithMultipleAttributes ` and implemented tests for attribute resolution in ` ShadowThemeTest ` to enhance theme functionality to support multiple
patch from tim allen from bug # 49065 - fix bug # 49050 - hssfworkbook . createsheet
change theme color from primaryColor to elementColor in ManageAccountsActivity to ensure consistent theming across the application
updated the handling logic in DefaultEventBus to handle null replyHandler and adjusted the path resolver in DefaultPlatformManager to improve error handling and ensure proper path
runtime - core : fix runtime error due to miss collation
added a new method ` whenType ` to the ` Tree ` interface to provide a convenient way to retrieve tree types based on their class type
replaced calls to ` NavigationRepository . navigate ( ) ` with direct calls to ` UserViewDestination ( baseItemDto ) ` in ` ItemLauncher
replaced Response . ok ( Status . OK ) with a temporaryRedirect to redirect to the public URL to improve user experience by redirecting to the public
[ hotfix ] [ kinesis ] improve error message when deserializer be not serializable
( chore ) camel - jbang - fix the javadoc error of camel - dns
added a try - finally block around the initialization of ZkNodeProps in LeaderElectionTest . java to ensure that the ZkClient is
updated the ` setIconAndDimTransitionProgress ` method to include ` setIconsAndBannersTransitionProgress ` across multiple classes to enhance the functionality of
refactor method calls in ProxyHandler to use a dedicated ` read ` method to improve code readability and maintainability by encapsulating the
[ java ] remove unnecessary bufferutil usage .
modified the ` prepareStreamsToUpload ` method to return a boolean indicating success to improve clarity and functionality of the method ' s return logic
updated order comparisons in AbstractConfigLoader and modified model creation in TestMicroserviceConfigLoader to improve comparison accuracy and ensure correct model generation
added a new file ` PicOfDayAppWidget . java ` to implement a new app widget with image loading functionality to enhance the app ' s
server : fix the issue where the internal lb service offering uuid be n ' t set in the config
updated HiveParserCalcitePlanner to use HiveRelOptUtil instead of RelOptUtil and refactored join condition handling to improve clarity and functionality
[ hotfix ] [ table - common ] deprecate unused windowreader class
added user and password options for remote jmx access in NodeToolCmd . java to enhance security by allowing users to access remote jmx access
removed duplicate BytesRef instantiation in Stemmer . java to streamline code and improve readability
updated the parameters for the applyFromAppWidgetProviderInfo and applyFromResolveInfo methods in AppsCustomizePagedView . java to improve
ggbapplet . getcurrentview ( ) now return the 3d view if the 3d view be available
updated rotation calculations in GcodeRenderer to ensure rotation coordinates are non - negative to prevent negative rotation values
added a new option ` WORKSPACE ` to the ` OptionEnum ` class and updated ` TerminalClient ` to utilize this new option to
fix climanagertest to use html file instead of apt file
refactored ScimUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to enhance test reliability and maintainability by
updated the ` confimAccess ` method to use a ` Map < String , Object > ` instead of a ` AuthorizationRequest ` to simplify the
hhh - 14146 fix flaky test that fail on travis
refactor EventBusHook class to improve event handling logic to enhance performance and maintainability of event processing
refactor MultiPaintEventTest class for improved readability to enhance maintainability and ease of understanding for future developers
removed the final modifier from the mNewScale variable in WorkspaceStateTransitionAnimation . java to allow dynamic modification of the scale value during animation
refactor SyncFactory to improve synchronization logic to enhance performance and maintainability of the synchronization process
added uniqueKeyField handling in LukeRequestHandler to ensure unique key fields are correctly represented in the schema
added color filters for stroke and background elements in BorderEditor and updated EditableResources to utilize them to enhance visual distinction between border elements
fix miss boundary in assertion for binaryparserexception .
[ hotfix ] replace slotpoolimpl with declarativeslotpoolbridgebuilder in defaultschedulerbatchschedulingtest
added logging statements in GatewayRSocket , GatewaySocketAcceptor , and PingPongApp classes , and modified return values in PingPong
added menu item click support for under construction action in recent chat fragment
updated ` InfoDropTarget ` and ` UninstallDropTarget ` classes to extend ` UninstallDropTarget ` instead of ` ButtonDropTarget `
replaced instances of ` add ` and ` removeTail ` with ` push ` and ` peek ` in multiple files to standardize scope management and improve
updated API and IMAGE _ URLs to use " commons . wikimedia . org " instead of " test . wikipedia . org " to ensure
refactor index handling by introducing setIndex and updateIndex methods to improve code readability and maintainability by reducing duplication
replaced ` Collections . sort ( ... ) ` with ` . sort ( ... ) ` for multiple configuration classes to simplify code and improve readability by
added support for various date patterns in the FormatData _ hr _ HR . java file to enhance the flexibility of date formatting in the application
added a call to clear focus on the clicked view in DetailFragment . java to improve user experience by ensuring the clicked view is properly focused
updated selection logic in DescriptionsAdapter and removed null check for savedLanguageValue in SpinnerLanguagesAdapter to improve user experience by ensuring correct language selection
corrected the spelling of " West Samoa Summer Time " to " West Samoa Daylight Time " across multiple language files to ensure accurate representation of
added native methods for registering global , weak , and accessing fields in FastGetField . java and modified constructor and field access logic accordingly to
added default value handling for UNION schema types in ReflectData . java and updated corresponding tests in TestReflect . java to ensure proper handling of NULL
[ java ] increase timeout in seda blockwhenfulltest
added a null check before remapping resource class in ResourceMerger . java to avoid potential NullPointerException when the resource class is not initialized
fix # 486 add miss default constructor to hapi driver
camel - http : add explicit connection close header to http producer
increased socket timeout from 60 seconds to 120 seconds to allow more time for distributed operations to complete successfully
added an assertion to verify the count of free tickets in the database to ensure that the price calculation functions correctly when a price is zero
refactor Parser class for improved readability to enhance maintainability and ease of understanding for future developers
refactor CasProcessingFilter to improve code organization to enhance maintainability and readability of the code
use thymeleaf . getfirstelement ( ) . getfirstelement ( ) . getfirstelement ( ) instead of thymeleaf
planner - 31 : do n ' t replace shiftassignment with removeif ( ) for enums
updated metaPortStart and dataPortStart values from 40001 to 11001 and added a waitingToShutDown method in ClusterNode to ensure
improve logging when elcontextcleaner can not purge class
set default content type to " application / octet - stream " in WebdavEntry . java to ensure proper handling of octet - stream data
added a method ` getQueueSize ( ) ` to ` LazyTraceThreadPoolTaskExecutor ` and created corresponding unit tests to ensure correct queue size retrieval
add distance check in distanceop to avoid infinite loop
rename ` ` required ' ' to ` ` requiredlabel ' ' in abstractuitag
removed the overridden next ( ) method and added updateProgress ( ) method to PurgingPartitionIterator to simplify the code and improve performance by eliminating unnecessary method
added a new method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated references in ` VectorUtil ` to use
add getheight ( ) and getwidth ( ) to basemonchromebitmapsource so that it can be reuse
added validation for the number of vertices in the Polygon class to ensure that the polygon ' s vertices contain at least 3 points to prevent runtime errors
replaced instantiation of ObjectMapper with ObjectMappers . newDefaultInstance ( ) across multiple test files to standardize object mapper usage and improve code maintainability
fix a nullpointerexception in geoimplicitcurve
updated ExternalNameRecord to handle multi - byte Unicode names and added a test case for bug 47384 to improve handling of unicode characters during external name
updated description of the JMS destination type in AbstractJMSProcessor . java to correct a typo to ensure clarity and accuracy in the documentation
added functionality to manage login prompts in the LoginInfoEndpoint to enhance user experience by allowing specific login prompts
updated listener removal logic from ` remove ` to ` removeIf ` to improve performance by avoiding unnecessary removal of listeners
added a case for toggleing the spin action in the PieChartActivity to enable users to toggle the pie chart ' s rotation behavior
cleanup vhd : kill copy process on vhd failure
hbase - 25827 hmaster . getstate ( ) should check if table have quota ( addendum )
updated import statements and added a resize method for pressure handling in AndroidInput . java to improve code organization and ensure proper resizing of the pressure array
added a new method ` propertyValuesOf ` in ` PropertySupport ` to retrieve property values from a specified property name and target objects
disable clientmapnearcachetest until we fix it
fix a bug in the hopperhock that cause the hopperhock to go into infinite loop .
added an authentication dialog to display username and password in SsoWebViewClient to enhance user experience by providing prompts for authentication
refactor TestStressIndexing2 to improve term handling and indexing logic to enhance test reliability and maintainability by using dedicated methods for document
[ flink - 22559 ] [ connectors / kafka ] temporarily disable upsertkafkatableitcase .
replaced ` get ( j ) ` with ` computeIfAbsent ( j ) ` and simplified ` csize ` and ` endPos ` calculations
hhh - 14246 defaultentitymapper should accept single - value array a default
updated localization update message to include both BE , UK , and SL to provide clearer information about the latest localization options
[ ci ] use resourceutils . getstring ( ) to get category from configuration
updated astbuildervisitor to accept ` ` rel ' ' expression instead of ` ` expr ' '
nifi - 339 : added mime type attribute to gethttp response
fix exception when update a bundle with conditional update on resource update
rename ' exit ' button to ' done ' button in HelpActivity and add a searchable check in SearchBookContentsActivity to improve clarity of button
refactor NatsConfiguration class for improved readability to enhance maintainability and clarity of the codebase
refactor ` invalidateStalePartition ` and ` invalidateStalePartitionStatisticsCache ` methods to accept ` MetastoreContext ` as a parameter to improve code
use circularfifobuffer instead of boundedfifobuffer to reduce memory usage
updated icons in multiple classes from ic _ group to ic _ chat _ bubble in UsersAndGroupsSearchProvider , ShareUserListAdapter , and User
replaced ` getLong ` with ` getLongVolatile ` for accessing the latest counter in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to ensure consistent
updated test method names to use underscores for consistency and clarity to improve readability and maintainability of test method naming conventions
added a constant for the data source name in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator to
updated the timeout duration for awaiters from 10 seconds to 30 seconds and added a sleep for the phaser to improve the responsiveness of the
removed the ` BuildSlaveFinishedStatusEvent ` class and updated related event publishing logic to simplify the event handling by eliminating unnecessary parameters
fix findbugs encode issue in vmwarestoragemanagerimpl . java
( chore ) camel - core - workflow : add test for deposit workspace item without a workflow
( chore ) camel - core - classloader : do n ' t add duplicate to classpath file
removed the static method isBoxedPrimitive from Unbox . java to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool and add a new test for ordering of flags in TestSpecificCompilerTool to improve code clarity and ensure
added table handling and directory deletion logic in HiveMetaStore . java and updated test cases in TestHiveMetaStore . java to ensure proper handling
updated asynchronous thread pool and queue size configurations in HiveConf and SQLOperation classes to improve concurrency management and provide clearer error messages for async operations
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to use a constant for service and component names instead of hardcoded values to improve code readability and maintainability
fix a bug in the operation settelephonyconferencingsipimpl that cause a nullpointerexception .
add clearentries ( ) method to logtree and use it in flutterlogview
added a condition to check if the socket is not open or is shut down in the ChannelEndPoint class to ensure proper handling of socket shutdown scenarios
refactor SetNullableGenerator to improve code clarity to enhance maintainability and readability of the code
( chore ) camel - example - reportincident - use newfile instead of file
replaced multiple specific imports with a wildcard import and simplified form request handling in NettyRoutingFilter . java and FormIntegrationTests . java to improve
added a new ` hello ` API operation annotation and implemented it in multiple service classes to implement a standardized way to invoke the service ' s hello
refactor lifecycle listener handling in Lwjgl3Application and update method signatures in Lwjgl3Window to improve clarity and ensure proper
updated the FG _ FK color from 90 to 200 to improve the visual appearance of the FG _ FK color
wnd : disable mp3 audio format by default
refactor secondaryindexmanagertest to use system keyspace . getbuiltindexes ( ) .
add about group to general preference page
[ hotfix ] [ test ] fix broken serialization test
refactor MediaFormatUtil for improved readability to enhance maintainability and ease of understanding for future developers
added a method ` isCellEditable ` to the ` GeneralTab ` class to provide a default implementation for cell editing behavior
added a method ` isOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` and modified the message formatting to conditionally display unused dependencies
added a temporary counter in VocalTractModifier and updated the vscales array in VocalTractScalingProcessor to optimize memory usage and
updated import statements for BaseScalarUdfTest in multiple test files to ensure proper usage of the BaseScalarUdfTest class
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper hashing and comparison functionality for instances of UaaAuthenticationDetails
update testskinningcontrolrefresh to work with new j3o animation
rename nodefilter to nodecountfilter to avoid confusion
change condition from ' less than or equal to ' to ' less than or equal to ' in sync fetch batch size check
bugfix # 366 , use floattype . getfloattype ( ) in debugexpressionparser ( # 366 )
updated dependency filtering logic in ExcludeDependency . java to use streams to improve accuracy of dependency exclusion checks based on classpath context
renamed the method ` tmp ( ) ` to ` dst2 ( t v ) ` and added a new method ` dst2 ( t v )
initialize the ` args ` array with an empty array instead of null to ensure proper initialization of the ` args ` array
updated RustBinaryDescription to use ` linkerFlags ` from ` args ` and changed ` rustcFlags ` to ` ImmutableList < String
( chore ) camel - test - infra - admin : fix test failure
added support for dynamic DAG names in Hive configuration and improved logging in GenericUDTFGetSplits to enhance flexibility in generating app IDs
removed unused import of java . io . File in TileAtlas . java to clean up the code and improve readability
do n ' t throw an ioexception if an exception occur on a closed stream .
updated the ` validateQuery ` method to include an additional ` arguments ` parameter and improved exception handling to enhance flexibility in query validation by allowing multiple arguments
updated INDEX _ VERSION from 1 to 2 and refactored repository field handling in LuceneExecutor . java to improve indexing accuracy and streamline repository
[ hotfix ] [ kryo ] ensure default kryo registration do not change
added null check before adding configuration types to prevent adding null entries to the list to avoid potential NullPointerExceptions
refactor boolean handling in MetaStoreDirectSql to use BooleanUtils for consistency to improve code readability and maintainability by centralizing boolean conversion logic
added hideCustomizationDrawer ( ) method to Launcher . java to improve user experience by hiding the customization drawer
refactor TermVectorComponent to use a static final warning string and streamline warning handling to improve code readability and maintainability by centralizing warning
added optimistic type logging and improved logging behavior based on environment settings to enhance debugging capabilities and provide clearer log messages for optimistic types
refactor Expect class to improve readability to enhance maintainability and ease of understanding for future developers
added UnixSocketConfigurationStrategy to DockerClientFactory and introduced UnixSocketConfigurationStrategy to enhance Unix - socket support for Docker connections
added JUnit 5 @ Override annotations and a test method for flaky low - rate IP in CloseableDoSFilterTest and CloseableDoS
camel - 14284 : camel - reactive - streams - add a reactivestreamsnoactivesubscriptionsexception to indicate when a stream
refactor ` Vectorizer ` to use ` TezWork ` instead of ` MapRedTask ` for map validation to improve code clarity and maintain
update stringappender and logdivertappender constructor to use the same behavior a logbackappender
fix npe in test case when guipackage be null
[ gr - 26026 ] allow to use linkage for weak link .
updated multiple Java files including XShareAuto , LoadClassNegative , LoadClassNegative , ReadFromNoaccessArea , and ReadFromNoaccessArea
no effective change - add test case for defaulttransactionthreadlocal
added a check for invalid handle in HiveStatement . java to improve error handling and logging for invalid and non - existent operations
replace ` ALTER _ TABLE _ ALTER _ COLUMN _ NULL ` with ` ALTER _ COLUMN _ DROP _ NOT _ NULL ` in
camel - 15836 - camel - aws : add support for fetch property from vault / secrets cloud service - aws secret manager
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
removed exception message from the response builder in UserREST . java to simplify error response handling and improve readability
modified the ` fromContent ` method to include a ` subTree ` parameter and updated related methods accordingly to enhance functionality by allowing conditional logic based on
updated column width calculation in mmm Sheet . java and added a new test method in TestHSSFSheet . java to ensure correct column width handling
added a new parameter ` configPath ` to the ` Commands . less ` method in ` Builtins . java ` to enhance functionality by allowing
replaced ` Set ` with ` Collection ` for tables and weakAssociations in ` DotWriter . java ` and ` GraphExecutable . java ` to
use late version 1.0 . 0 for sshd in testcontainersconfiguration
server : do n ' t allow hostid to be null , it should n ' t be null .
refactor group by key generation to use BlockSingleValIterator and multi - valued columns to improve code clarity and maintainability by reducing complexity in key
renamed the test method from ` testSeekNegative ` to ` testSeekingExceptions ` and updated its logic for seeking positions to improve clarity and
fix incorrect ingredient stack size in bauble recipe . close # 196
rename graphhopperconfig . put ( ) to graphhopperconfig . putobject ( ) to avoid confusion
updated visibility setting logic in CellLayout and refactored drag exit methods in DragController and Workspace classes to improve code readability and maintainability by reducing
updated the rewrite function usage in ModifyRequestBodyGatewayFilterFactory and added a test for handling empty request bodies in ModifyRequestBodyGatewayFilterFactoryTests to ensure
added a check for package accessibility in ConstructorFinder , FieldFinder , and MethodFinder to ensure proper access control for classes that are not package - accessible
replaced instances of ` logger . warn ` with ` logger . trace ` for various logging messages in ` LoggingHandler . java ` to improve logging g
fix whiteblacklist wildcard wildcard ( # 348 )
added options menu functionality for displaying gallery images in the GalleryActivity to enhance user experience by allowing users to view images directly from the gallery
added caching for MongoDBService instances and services in MongoDBServiceFactory to improve efficiency by reusing the service and instance instances
added methods to prevent formatting of final boolean values in InlineConstantMutatorTest to ensure correct behavior of boolean values in mutants
added a blackhole to the decode method in RecordTest . java to enhance test performance by optimizing the decoding process
fix : update gapic - generator - java with mock service generation fix ( # 119 )
[ device - thing ] fix group address parse error ( # 11919 )
removed the call to clear witnesses in ManagerTest . java to improve test reliability by ensuring witnesses are properly reset
do n ' t throw prestoexception in jdbcpagesink . abort ( )
updated stack property handling in NativeError . java by replacing direct setting of the stack string with getter and setter methods to improve encapsulation and
added a condition to check if the path name starts with " . " in DrillPathFilter . java to simplify the path validation logic for better
renamed ` onboard ` to ` autoLoad ` and updated related methods in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnoma
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is cleared before running tests
updated the BOLDWEIGHT _ NORMAL constant value from 190 to 0x190 in HSSFFont . java to improve the visual appearance
changed the ` fThreadGroup ` variable to be ` volatile ` and made ` fLookForStuckThread ` final in ` Timeout ` ,
reformatted the constructors and methods in ValueResultData . java for consistency to improve code readability and maintainability
updated hash code and equality checks in FuzzyQuery . java to ensure proper hash code comparison and prevent potential null pointer exceptions
removed debug print statements for SIMON target in PushedResourcesTest . java to clean up the code and reduce unnecessary console output
changed return type of ` removeFile ` and ` removeDirectory ` methods from ` SharedRandomAccessFile ` and ` List < SharedRandomAccessFile > ` to `
updated the product version in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest from 2.5 . 1 to 2.6 . 0 to ensure compatibility with the latest
updated the ` retrievePersonAttributes ` method to include an empty ` handler ` parameter and modified the principal retrieval process to enhance the principal retrieval process by
changed log level from info to warn for ZigBee and BUS Gateway connection messages to improve log granularity and provide clearer
updated method names from ` intHash ` and ` longHash ` to ` hash ` across multiple classes to improve clarity and consistency in method naming convention
added a constructor to ThumbnailGenerationTask that accepts a StorageManager and an Account parameter to ensure that the ThumbnailGenerationTask can be instantiated
updated the condition in the loop to check if ` nrFound ` is less than or equal to ` count ` to ensure that ` nrFound `
added a new file Bug1933922 . java that implements a class to demonstrate the use of recursive compilation in a multithreaded environment
removed unnecessary parentheses in comparison statements across multiple Java files to improve code readability and maintainability
change character check from 33 to 32 in FileResolver . java to allow control characters with zero - 31 or space character 32
added a call to requestFocus ( ) on the component ' s component to ensure the component ' s focus is focused when necessary
add test case for new instructor home page ( fix test case )
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
updated Crouton handling in DetailFragment and added onPause method in MainActivity to improve user experience by providing informative messages when the fragment
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` to ` IoTDBSchemaTemplateIT ` to validate schema query
refactor Dialog class to improve readability to enhance maintainability and ease of understanding for future developers
replaced the direct execution of a process with a ProcessBuilder instantiation in SourceCompiler . java to improve flexibility and control over Java tool options during execution
[ hotfix ] [ metrics ] use 127.0 . 0.1 instead of inetaddress . getlocalhost ( )
refactor subsystem assignment in Metrics . java to use a loop for better readability and maintainability to streamline subsystem assignment and enhance code maintainability
added assumptions in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed when the Apple platform is available
[ gr - 11445 ] jdk . graal . compiler . jvmciversioncheck : remove assertion from jdk . graal .
updated Mockito library version in the project to ensure compatibility with recent changes in testing framework
refactor TestLargePageUseForAuxMemory . java for improved readability to enhance maintainability and clarity of test cases
updated readAllBytes method to accept a context parameter and added charset handling in BinaryParser , PlainTextParser , and ParsingExecutionContextView classes to improve
added a new enum ` MultiPartFormDataCompliance ` and its getter / setter methods in ` HttpConfiguration ` , and created a default value in `
added GradleVersion . java with JDK - 17 support to GradleDistributionManager . java to ensure compatibility with JDK 17 and
added a method ` addType ` to the ` SnapshotControl ` class and refactored type addition logic in ` DatabaseSnapshot ` to improve code
refactor Term class to improve code structure to enhance maintainability and readability of the code
updated return statement to handle null or empty values of runWith to improve robustness by preventing potential NullPointerExceptions
http : / / issues . apache . org / jira / browse / amq - 4892 - add test for xasession . is
refactor multiple audio - related classes to improve code organization to enhance maintainability and readability of the codebase
pdf417 : do n ' t use negative luminances , add assertion to testblackboxcountingresults
updated the tinting logic in TaskView . java to use a variable for the tint amount to improve code readability and maintainability by
added a new file ` SumZeroFunctions . java ` implementing a gaggr function for suming zero values to implement a gaggr function
updated SQL statements in FirstValueFunctionIT . java and NthValueFunctionIT . java to remove unnecessary whitespace to improve code clarity and maintainability
hbase - 27113 bucketcache . getallocationfailwarningmessage ( ) should print bucketallocatorexception in ms and cf
added a null check for the property name before adding it to the roleObject to avoid potential NullPointerExceptions when property names are null
added ` @ VisibleForTesting ` annotation and modified variable visibility in ` StatusBarTouchController ` , ` RecentsView ` , and ` FeatureFlags
added stream logging functionality to DockerClient to enhance container monitoring capabilities by preventing stream open indefinitely
add a performance test to verify the performance of the mvstore cache
updated the string representation of LONG from " L " to " J " in PrimitiveType . java to ensure consistency with Java naming conventions
changed the method ` delegatingApplicationListener ` from instance to static to allow the method to be called without an instance of ` DelegatingApplication
camel - 14284 : camel - rest - fix the issue that camel - rest - dsl do n ' t set the message body to null
added files FileDeletingTasklet . java and TaskletJobFunctionalTests . java to implement file deletion functionality for batch processing in the batch framework
ggb - 1632 : fix size keep drawables when the companion be create .
updated bit - to - lgtm references and added comments for clarity to improve code readability and maintainability by using descriptive variable names
updated the ` sendStateEventToTest ` method to accept an integer state ordinal instead of a string for event handling to improve event testing accuracy by
added handling for video thumbnail requests in RequestHandler and RequestHandlerV2 classes to ensure proper handling of video thumbnail requests for LG and Lav
bug fix in errorcheckerservice ( java / awt / error / errorcheckerservice . java ) : do n ' t scroll to the
updated the layout logic for title buttons based on the theme settings to ensure proper layout alignment based on the user ' s theme settings
updated Skia . java and Skia . java files by modifying value initialization and preloading settings to ensure compatibility with additional operating systems and improve
add support for unittest network in bitcoinj
added validation to ensure format arguments are not specified in the QueryCommand to ensure that only valid format arguments are accepted in the query
replaced the capacity variable with a length variable in the IntIterator class to simplify the code and improve readability by using a more descriptive variable
added a new parameter ` srcTarget ` to the ` walkRuleAndAdd ` method and updated its usage in the ` walkRuleAndAdd `
add support for override module name in module file patch ( # 1079 )
[ java ] do n ' t check protocol version when compare candidatetermid
added conditional logic to set the default policy based on SAML authentication status to ensure the client is always a new client for SAML authentication
added null checks for ` mappedTableResource ` and ` mappedTableResource ` in ` ReadBatch ` , ` WriteBatch ` , and ` Write
refactor : use utils . close ( ) to reduce code duplication
refactor AnonymousAuthenticationFilter to utilize a deferred context for authentication handling to improve flexibility and maintainability of security context management
modified the removeActor method to accept a boolean parameter for unfocus management to improve actor removal behavior by allowing unfocusing when the parent is not
refactor cloudConfig handling to use a validConfigs variable instead of a hardcoded string to improve code readability and maintainability by reducing redundancy
add the ability to configure the logging level for the netty server to improve server performance and debuggability
refactor DatumAliases , AbstractParser , Formattable , and Parser classes to improve code organization and maintainability
replaced direct call to update ( ) with SwingUtilities . invokeLater ( this : : update ) to ensure UI updates occur on the Event Dispatch Thread
camel - 18197 : camel - core - optimize groovy to make it easy to use in camel - jbang
( chore ) camel - core - plugin : remove dependency to manage version map
[ hotfix ] [ core ] make some method in clifrontendparser public
refactor TestSharedPreferences to use TestSharedPreferencesEditor instead of ShadowSharedPreferencesEditor and add TestSharedPreferencesTest for testing to improve code clarity
removed unused storage alias retrieval and certificate chain logging in HttpsMessenger . java to streamline code and improve clarity in certificate chain handling
( chore ) camel - test - infra - selenium : improve error message in case of a classcastexception
changed the access modifier of the ` updateImage ` method from private to protected in ` ImageButton ` and ` ImageTextButton ` classes to allow
add overload for dropresource ( ) method to allow for custom drop of item ( # 6240 )
added native methods for retrieving and retrieving spatial location calculator configuration in DataOutputQueue and depthai classes to enhance functionality for spatial location calculator configuration management
refactor multiple Java classes related to community detection , GSA page rank , and page rank to improve code organization and maintainability
refactor TreeTrie to use a parameterized method for checking if a node is empty to improve code clarity and maintainability by using a dedicated method for
updated foreground and background method calls to include r , g , and b parameters to ensure correct rendering of the current background
added a condition to determine fingerprinting in PeerSync and updated PeerSyncTest to use the " solr . disableFingerprint " system property to ensure fingerprint
changed the access modifier of the ` moveFunds ` method from private to public to allow external access to the method from other classes
updated the ` maybeEmitEvent ` method calls in ` MongoTemplate ` and added a new ` PersonWithIdPropertyOfTypeUUID ` in ` Mongo
fix flaky test in settransactiontest ( # 11858 )
fix for tika - 402 : close inputstream after use .
updated the error handling in TestCollectionAPIs to use ApiException instead of ApiBag . ExceptionWithErrObject to improve flexibility in handling API modifications
removed unnecessary whitespace in the loadConfig method call to improve code readability and maintainability
add comment to help debug test failure
[ hotfix ] [ runtime ] remove unused exception in externalworkerservice
removed the step variable and its getter and setter methods from DisplayTextVirtualDatapoint , HmDatapoint , and HomematicTypeGeneratorImpl classes
added logging for acquiring exclusive locks and improved logging messages in PostgreSQLReadWriteAdvisoryLocksTest . java to enhance lock management and
[ hotfix ] fix race condition in baseschedulerserviceimpl # schedulejobs
simonstewart : do n ' t fail testgettextcontent if the browser do n ' t support it
replaced static Logger with a ThreadLocal < Logger > instance for improved thread - safety to enhance performance by allowing multiple logger instances to be managed concurrently
added @ VisibleForTesting annotation to convertToCompilationUnit and replaced mockit with Mockito in FunctionInitializerTest to enhance testability and maintain compatibility with modern Mockito features
added a new method ` boxedTypeOrType ` in ` Types ` and modified the ` compound ` method in ` Infer ` to handle
reset ` mFocusedTaskViewId ` to INVALID _ TASK _ ID and update ` mDigitalWellBeingToast ` initialization
fix flaky testflushfromclient to use getregions ( ) instead of stream ( )
added functionality to delete an existing cache track and save storage keys if it exists to ensure that the cache is properly cleaned up when a new contract is
updated TOKEN _ ISSUE _ FEE handling in TokenIssueProcessor and adjusted balance calculations in Program to ensure accurate balance calculations based on dynamic
refactor texture caching logic in RealisticRenderStrategy to improve cache management based on URI and URI to enhance texture management by ensuring textures are cleared
refactor raster creation and composition in Blit . java and add a new test class Bug7049339 . java to improve code clarity and
added a boolean flag ` isUnselectedStyle ` and modified ` getStringWidth ` methods in ` Label ` , ` DefaultLookAndFeel ` , and `
updated multiple classes to initialize collections with specific sizes instead of default sizes for better memory management to improve performance and maintainability of the code
removed flags parameter from several method signatures in ShadowApplicationPackageManager for consistency to simplify method signatures and improve code clarity
refactor PingRequestHandler class for improved readability to enhance maintainability and clarity of the codebase
fix test fail due to lack of muxing timestamps
[ tradfri ] improve warning message when a gateway have old firmware .
refactor AjaxElementLocator to improve code structure to enhance maintainability and readability of the code
updated display condition in BoxLayout and added support for " table - cell " display in DefaultLayout to ensure proper rendering of table cells in addition to inline
updated the handling of JSON tokens in JsonDecoder and added a new test for reordering fields in TestJsonDecoder to improve code readability and ensure
fix blockcache . releaselocation ( ) to pass removal cause to blockcache .
added JUnit @ Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready for execution
added two test annotations to the DroolsMvelParserTest class to ensure the parser functions correctly during testing
changed fields in ContextRegisterListener to be final to enhance immutability and enforce immutability of these fields
refactor ObjectHashSet to initialize the iterator conditionally and add caching functionality to improve performance by avoiding unnecessary instantiation of the iterator
added batchBytes validation in SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch classes to ensure that batchSize does not exceed
changed context modes from WORLD _ READABLE and WORLD _ WRITEABLE to PRIVATE in AppSettings and UpdateUtils to ensure
updated JdbcProxyGenerator to handle abort methods more gracefully and improved logging messages to enhance error handling and provide clearer logging for aborted connections
updated the ` workspaceAnim ` initialization to use ` mState ` instead of ` getState ( ) ` and added accessibility support based on the current state
change the log level from warn to debug in protobuflogreader to reduce log verbosity
updated scope assignment in UaaTokenServices and added a test for persisting revocable tokens in UaaTokenServicesTests to ensure proper handling
updated imports in SchemaRetrievalOptionsBuilderTest and AvailableJDBCDrivers , and modified the logger name in AvailablePluginsTest to
resolve split - packages : move everything from kie - api under org . kie . api . command to org . kie . api
camel - itest - idempotent - remove jdbctableservice since it ' s not use anymore .
added padding getter methods to CellLayout and modified bitmap creation in Launcher to improve padding handling for portrait orientation
added a check for a non - empty string before processing possible candidates to avoid potential NullPointerExceptions when the string is empty
refactor SamlMetadataUIParserAction to use Action instead of SamlMetadataUIParserAction and update related imports and method calls to improve
added a method to check if LDAP processes use specified ports in LdapMockMvcTests to improve test reliability by ensuring processes are checked for specified ports
log4j2 - 1343 set default shutdown timeout to 0 in loggercontext . shutdown ( )
updated redirect logic in Fetcher . java and modified meta tag handling in HTMLMetaProcessor . java to improve redirect handling logic and ensure correct meta tag
updated SolrQuery in TestSpellCheckResponse . java to use " name : samsang " instead of " * : * " and modified
karaf : fix for karaf console api which be not support by karaf
make meshhelper . getverticescolors ( ) private to allow for bmesh compatibility .
do n ' t copy timestamped report directory if they do n ' t exist
( chore ) camel - core - mail : move email validation test to parameterized test
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added a null check for bindStatus in FieldUtils . java to ensure that a template processing exception is thrown when expression is not provided
removed debug print statements from JoglInput . java to streamline output for better readability and performance
added support for allowing extracting private fields in FieldSupport and updated related tests to enhance field retrieval flexibility and improve test coverage for private fields
added a replacement for the device name in WebDataHandler . java to ensure the application uses the correct device name
refactor constructor retrieval logic in Platform . java to improve compatibility with Java 8 by using MethodHandles for constructor retrieval
updated the ` weights ` method in ` ZParams ` to use ` weightsByDouble ` instead of ` weights ` and marked it as deprecated to
added a Database parameter to several writeCustomHTML and writeCustomHTML methods across multiple writer classes to enable database - specific functionality in the writing process
added assertions and refactored key deserialization in BTreeMap . java to improve code clarity and ensure proper handling of null values
updated exception handling in ` CancelDeferredTransactionContractActuator ` , ` UpdateDeferredTransactionContractActuator ` , and ` TransactionTrace `
add a profiler . heap . zerofile system property to disable heap zeroing
replaced ` PrintStream . out ` print statements with ` Scope . getCurrentScope ( ) . getUI ( ) . sendMessage ` in ` Main . java `
updated the byte array size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy and removed a generic record assignment in HortonworksEncodedSchema
added ChunkListener and ItemWriteListener imports to multiple classes to enable batch processing capabilities in the batch processing framework
reformatted code for better readability and consistency in AbstractProviderModule . java to improve code maintainability and enhance code clarity
updated print statements in SearchFiles . java and simplified live document retrieval in SortedSetDocValuesFacetCounts . java to improve code clarity and maintainability
refactor Test7005594 . java for improved readability to enhance maintainability and clarity of the codebase
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
[ hotfix ] [ doc ] fix typo in topkrollingphaseonejob javadoc
server : do n ' t try to map the ip address to the vm if it be n ' t find .
use guiscalelistener instead of inputdevice . haskeycodes ( ) to check for analog trigger
refactor ` iteratesOverSequence ` method to ` iteratesOver ` and introduce a new method ` iteratesOverAsList ` to improve
camel - 16458 : camel - http - optimize to avoid arrayindexoutofboundsexception
added assertions to verify the behavior of various SQL queries in ActivityHistorySQLServerStoredProcedureTest . java to ensure that the SQL query returns expected values
added a LargeValueFormatter to BarChartActivityMultiDataset and updated related calculations in Chart and BarLineChartBase classes to improve chart value formatting and
update commentsparser to handle in - string comment that contain a backslash character .
added @ SuppressWarnings ( " argument . type . incompatible " ) annotation to Platform . java to suppress warnings related to incompatible argument types
fix checkstyle issue in traceralifecycleanalysisphase
added a todo comment to Auto - generated method stub in NullAssertionValidator . java to improve code readability and maintainability by providing a clearer
added support for Appendable RuleKeyAppendable in DefaultRuleKeyBuilderFactory to enhance rule key management for better integration with Buck rules
added setup and teardown methods for setup and teardown methods in multiple test classes to ensure proper initialization and configuration of the system profile directory
[ hotfix ] fix checkstyle violation in testcontainersdockercmdexecfactory
refactor message retrieval in HttpChannelOverHTTP and HttpReceiverOverHTTP to use receiver ' s getMessagesIn ( ) method to improve thread safety
added attribute " accept " to the " image / * " element in ImageFileInputDialog . java to enhance user experience by allowing image - based
updated ElasticIndexWriter and TestElasticIndexWriter to use PreBuiltTransportClient and refactored client initialization to improve transport client management and enhance
added detailed witness and witnesses classes to the ForkController to improve debugging by providing clearer insights into witness and witnesses classes
added a new file ` NullPointerAndEmptyArrayTest . java ` that tests handling of null and empty arrays to ensure proper functionality and validation of null
removed unused methods and generated source paths from various classes to streamline code and improve maintainability
updated UaaStringUtils to utilize a new method for constructing wildcard patterns with an optional replacement function to enhance flexibility in regex pattern construction for
updated validation logic for map and table scan aliases in Vectorizer . java to ensure that only one TableScanOperator aliases are processed to prevent validation errors
updated MockitoJUnitRunner import from ' org . mockito . runners . MockitoJUnitRunner ' to ' org . mockito . junit . MockitoJ
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by logging warnings when setting values are
refactor ` getLangs ` method to return a ` Set < String > ` instead of an array and update its implementation to improve handling of
updated import statements and removed redundant assertions in LazyTraceScheduledThreadPoolExecutorTests . java to streamline code and improve readability by eliminating unnecessary assertions
hbase - 27113 add lock to takesnapshothandler to ensure table lock be acquire during snapshot creation
[ j2kt ] use new platform isnullcall for null check check .
added a test to verify the modification of the HTTP RPC endpoint in DockerQuickstart to ensure that the explorer ' s HTTP RPC endpoint is correctly validated
added a volatile boolean field ` isSuspended ` and updated thread state handling in ` Thread . java ` to improve thread state management and ensure proper
replaced instances of Javadoc . Author with Hidden and Javadoc . Serial in Java11JavadocVisitor , ReloadableJava8JavadocVisitor ,
( chore ) camel - spring : fix nullpointerexception when use producertemplate with two camelcontext
removed redundant @ Override annotations across multiple security - related classes to improve code readability and maintainability by reducing redundancy
added module import handling in Java2TypeScriptAdapter and updated enum tests to support static fields and improve test coverage for enums with static fields
[ bug - 66026 ] use http : / / www . w3 . org / 2001 / xmlschema instead of http : / /
added content description handling for badged items in BubbleTextView to improve user experience by providing specific badge information when available
added MouseWheelListener to handle mouse wheel events in TestMouseWheelScroll . java to improve user interaction with the scroll pane
pdfbox - 2576 : close stream in visualtester and add test for positioning absolute
updated currency pair references from BTC _ ETH to XRB _ BTC in KucoinAdapters . java and KucoinIntegrationTests .
refactor ` VacuumController ` , ` VacuumFrame ` , and ` VacuumView ` to use ` String ` instead
simplified currency conversion logic in BitfinexAdapters . java to improve code readability and maintainability
updated imports and refactored field printing logic in JsonFormat . java to improve code readability and maintainability by using ImmutableSet and ImmutableSet for
no effective change - remove unused code in jacksonxmlformatmapper
updated constants and variable names in VirtualThread . java for consistency and clarity to improve code readability and maintainability by standardizing variable names
updated DirectoryTaxonomyWriter and related classes to improve category term handling and cache management to enhance code clarity and maintainability by standardizing category term handling
refactor VetoableChangeSupport class to improve code organization to enhance maintainability and readability of the code
adjusted the calculation of the Y - coordinate in the BrowserContentPane to correct the vertical positioning of the content pane
pdfbox - 2576 : remove invalidpasswordexception , a suggest by valerybokov
added unit tests for security exceptions related to admin methods in ShadowDevicePolicyManager to ensure proper handling of security exceptions in the application
ggb - 1076 show the help button in the menu only if there be a menu item
refactor LambdaBeanPropertyAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced ` Thread . sleep ( ) ` with ` ThreadHelper . waitUntil ( ) ` in ` BackendInitializerHelper . java ` , and added
updated version handling logic in SwingStartup . java to use ReleaseStatus . OLDER instead of BuildProperties . getVersion ( ) to improve clarity and
allow user to specify whether to include comment a generated file
updated URL patterns from " < player > " to " < player | * > " across multiple files to enhance flexibility in player command handling across different
deleted BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused classes to streamline the codebase
updated method calls in OptionProcessor to use " optionName " instead of " nameVariableName " to improve clarity and consistency in naming conventions
added a condition to check for PARALLEL _ CLASSES in TestNGContentHandler . java to ensure proper handling of parallel classes in the XML
( chore ) camel - core - optimize routeinfomanager . setenableactingmaster ( )
refactor : remove static import of enums in ctmethodimpl . java ( # 1078 )
added serialVersionUID to multiple Java classes to ensure compatibility during serialization and deserialization of classes
no effective change - code cleanup - fix typo
updated the shaBase64 method to accept a separator as a parameter in ShibbolethCompatiblePersistentIdGenerator to ensure consistent behavior with different separator
updated parameter retrieval to check for null values and modified condition in TestAction to ensure that system actions are only enabled when the parameter is not null
added a new class ` Person ` with a private field ` name ` in the ` org . apache . maven . it0074 ` package to
do n ' t use fbutilities . getlocaladdress ( ) in start ( )
updated the method call to use ` toUpperCase ( ) ` for string conversion in ` AbstractClient . java ` to ensure consistent case handling of string comparison
added assertions to validate the metadata properties for " timeColumn " , " timeUnit " , and " totalDocs " in SegmentMetadataImpl to ensure
updated color import from java . awt . Color to net . sf . openrocket . util . Color and changed foreground color to DARK _
added disconnectEmitters . onNext ( new Object ( ) ) to NettyStreamingService . java to ensure proper handling of connection termination events
no effective change - code cleanup : use class < ? extends annotation > instead of string
simonstewart : add a test to verify that click on a link hide by double overflow
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
added dynamic JNDI lookup configuration and error handling in JtaTransactionManager . java to improve flexibility and support for dynamic JNDI lookups
changed the access modifier of the ` pickUri ` method from public to private to restrict access to the method for better encapsulation
removed the ` hasFunction ` method from the ` Library ` class to simplify the code by eliminating unnecessary functionality
rename ` enabledCiphers ` to ` result ` for clarity and consistency to improve code readability and maintainability by using a more descriptive
fix timestamp conversion for bigquery
replaced manual null checks with requireNonNull method in Identifiers and DatabaseConnector classes to simplify code and improve readability
fix bug in coerce ( ) by use map . getordefault ( ) instead of input . get ( )
added boundary checks for row and column indices in FlightConfigurablePanel . java to prevent index out - of - bounds errors
added scrollSelectionVisible ( ) method to ThrustCurveMotorSelectionPanel to enhance user experience by ensuring the selection is visible
[ java ] unnecessarylocalbeforereturn : unnecessarylocalbeforereturn false - positive for member selector
replaced the initialization of ` scriptEngineManager ` with a direct assignment of ` scriptEngine ` to simplify the code and eliminate redundant checks for null values
removed unnecessary handling of NaN values and simplified calculations in EuclideanDistanceSimilarity and EuclideanDistanceSimilarityTest to improve code clarity and
do n ' t run incrementally backup if sstables be null
updated the ` relativize ` method to accept both ` baseDir ` and ` Path ` parameters for improved path handling to ensure proper normalization of
updated column size and decimal digits handling in DataType . java and added null checks for columnSize and decimalDigits in ColumnSnapshotGenerator . java to ensure
fix flaky test in DeadLetterQueueWriterTest . java : remove unnecessary . log . tmp file
replaced toHexString with toJsonHex in TronJsonRpcImpl . java to ensure correct conversion of byte array to JSON format
renamed ` ErrorHandlerController ` to ` Error403Controller ` and added ` Error404Controller ` and ` Error403ControllerTest ` to
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in ` UnixTerminal . java `
make ` $ collection . toarray ( ) ` consistent with ` $ collection . toarray ( ) `
refactor connection acquisition logic to use an iterator for better readability to improve performance and maintainability of the connection management logic
updated method names and variable names from ` getDateConverter ` to ` getLdapDateConverter ` to improve clarity and consistency in naming conventions
pdfbox - 4071 : do n ' t try to merge a tree if there be no name
updated error message formatting in JavassistUtils . java to improve clarity of error messages for better debugging
updated exception handling in LargeStreamletTest to allow for more time for reader and writer threads to improve test reliability by allowing more time for threads to
updated page handling in HomeFragment to use dynamic values from shared preferences to improve flexibility in navigation by allowing dynamic page counts based on user preferences
added error handling for broken Gaussian images in AndroidImplementation . java to improve robustness by catching potential exceptions when retrieving images
added @ suppresssubnodes annotation to baseparser . tostring ( ) method .
[ iotdb - 443 ] fix resource leak when load fdf file in loader
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed for the project
added shell command to execute key event input in AbstractLauncherUiTest . java and removed assertion in LauncherInstrumentation . java to improve user experience by
added functionality to generate and write filenames to a JSON file in FileDumper . java to facilitate the mapping of filenames to URLs for
make profilerserver . resetresultsnotified ( ) private .
modifies texturehelper . gettexturefromimage ( ) method to return an image object instead of a texture object .
remove ` ` : ' ' from application id assertion in test
updated randomizer values in RandomizersTest . java from " 9781797745008 " to " 9781797845005
updated notification sound setting to allow dynamic retrieval of the ringtone from preferences to improve user experience by allowing the notification sound to be configured dynamically
added a method ` reportLoopCount ` to the ` RootNode ` class to enable reporting loop count for better debugging and monitoring
added conditional logic to finalize cluster version in FinalizeUpgradeAction . java and updated clusterDAO method call in ClusterImpl . java to ensure cluster version
phoenix - 3909 correct rangeid to regionid in portableipdaoimpl .
removed redundant call to streamManager . open in ItemOrientedStep . java to streamline code for better readability and maintainability
added a new file ` CountedLoopProblem . java ` that implements a counted loop problem with a random number to test and verify the behavior of
remove unused parameter ` ` metaspacemethod ' ' from executecompiledmethod
[ gr - 12278 ] fix jvmci error when javathread : : _ pending _ failed _ speculation be not set .
refactor KafkaStreamsTracing class to use ValueTransformerWithKeySupplier instead of TransformerSupplier and TracingTransformerSupplier to enhance tracing capabilities and improve
update feedbackconstantsumquestiondetails to include received point
removed DynamicColors . applyToActivitiesIfAvailable ( this ) from BaseApplication . java to streamline activity rendering by eliminating unnecessary color application
added thread management and stack dumping functionality in CloseRace . java to improve error handling and debugging for child threads
updated the return statement in IntPointField to use ` intValue ( ) ` and added assertions in TestPointFields to ensure proper handling of integer values
make sure arc size be a rounded value , not a constant value .
[ fix ] imagebordercuttingwizard / imagebordercuttingwizard / imagebordercuttingwizard / imagebordercuttingwizard . java :
rename ` minifySqlEnabled ` to ` shrinkWhitespacesInSql ` across multiple classes to improve clarity and consistency in SQL configuration management
refactor waitForStateTransitionToEnd methods in WorkProfileTest and AbstractLauncherUiTest to improve code clarity and maintainability by consolidating
added new configuration classes and updated imports across multiple test files to enhance configuration management and improve test organization
replaced ` raf . readLong ( ) ` with ` DataIO . getLong ( buf , 0 ) ` and ` DataIO . getLong ( buf ,
( chore ) camel - http : fix the test error of camel - http
refactor ClasspathInfo creation to use a new builder pattern for module boot path to improve clarity and maintainability of the code
[ automation ] improve automation script scope so it can be reuse by other module .
added methods to retrieve and set the layer manager in AnimComposer and updated AnimEvent to utilize this new method to improve layer management and
added a check to return early if the queue is empty in DeferredHandler . java and removed the showDefaultScreen method from Workspace . java to improve
added null checks for mapOp and mapWork in MapRecordProcessor and modified exception handling in TezProcessor to improve robustness by preventing null pointer
[ geot - 5576 ] improve the calculation of the center vector in cylinderregion .
[ hotfix ] [ test ] use expectedexception . none ( ) in testbadusecases
modified the ` sendOneQuery ` method to handle ` subqueries ` with ` SimpleParameterList ` and added a test for multi - execute functionality
do n ' t log message when customization of security environment .
added a new parameter " android% 20app% 20edit " to the GET endpoint in the ReviewInterface . java file to allow users to view
refactor test cases in Test . java to improve code readability and maintainability
updated PBEKeySpec to use keyLength instead of blkSize to ensure the correct key length is used for key generation
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
add a call to writesectiondefinition ( ) in rtfdocumentheader to make it easy to write the section definition .
added distance calculation and warning for large jump detection in GpsLoggingService . java to ensure that large jumps are detected and prevent potential crashes
removed multiple debug print statements from TableCellLayout , TableLayout2 , and TableLayout2 classes to clean up code and improve readability
doc : generate sample code in the java microgenerator ( # 419 )
[ java ] resolve memory leak in insightfilter by use weakreference .
removed binary search for position and info in data and added lists to simplify code and improve performance by eliminating unnecessary binary search
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` in ` SettingsActivity ` and removed the ` ThemedPreferenceActivity ` class to simplify
updated the value class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of the class
corrected formatting of assertion in FST . java to improve code readability and maintain consistency
added an assertion to validate the existence and type of the security policy in JstatdTest . java to ensure that the security policy is valid and
camel - olingo2 - fix camel - test - infra - olingo2 and camel - test - infra - oling
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow for a longer time for the recovery process to complete
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging by eliminating unnecessary exception details
added functionality to publish images by HTTP using HTTP in XMPPClient and XMPPActions to enhance image upload functionality by allowing users to upload images via
( chore ) camel - netty : fix the npe of nettyproducer
updated URL pattern to allow hyphens in the URL and added unit tests for invalid host names to ensure proper URL parsing for valid and invalid host names
remove the system property ` ` org . apache . jasper . compiler . disablejsr199 ' '
added support for handling null string values in CSV records to enable proper formatting of null values in CSV records
added LiquibaseService import and annotation to multiple connection classes to enable the use of service locator for improved connection management
updated variable names to use JavaSourceFile instead of J . CompilationUnit to ensure compatibility with Java source file handling
add ` ` event . topics ' ' to event . trigger and ` ` event . topics ' ' in itemstatetriggerhandler
replace BeanCurrentlyInCreationException with BeanCreationException in TraceWebAutoConfiguration . java to ensure proper exception handling for bean creation failures
added a deprecated case for " zkCredientialsProvider " and " zkCredentialsProvider " in SolrXmlConfig . java , and modified corresponding
remove mana table from mana tablet , and add a durability bar to mana tablet .
added a method to set the identifier collection in P25P2DecoderState to ensure the current call event has the correct identifier collection
removed unused imports for HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter in TestRandomChains . java to streamline the
updated thread pool name from " - % d " to " " in the deriveKeyWithScrypt method to improve clarity and consistency in thread naming
refactor GeneratedCode class to improve code structure to enhance maintainability and readability of the code
corrected a typo in the assertion message for null definitions to improve clarity and maintainability of the error message
removed the visibility of the shareWithMeIcon in LocalFileListAdapter to improve user interface by hiding the share icon when necessary
updated URLs in multiple filter classes to use HTTPS instead of HTTP to enhance security by providing access to the signin page
updated RouterFilter and RouterServerListFilter to enforce non - null and empty headers to improve code robustness by ensuring headers are not null or empty
enhanced assertion message in TestIndexWriterMergePolicy for clarity to improve debugging by providing more context in assertion messages
[ core ] deprecate multilayer and multilayer perceptron method in favor of the same method .
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49156 . add a
added a security check to the getJspApplicationContext method to enhance security by using privileged actions when security is enabled
updated RocketComponentConfig to use minimum and maximum component coordinates instead of fixed values to improve accuracy in determining the component ' s length based on the
updated NonceService binding to use Singleton and added Scopes . SINGLETON scope to OpenIDAuthenticationProviderModule to ensure NonceService is
update child link after parent update
removed the HTTP method parameter from the doExecute method and simplified the URL building process to streamline error handling and improve code readability
fix test which randomly fail on slow machine
added a boolean variable ` mShiftCodesAlwaysOverride ` and modified the logic for determining ` mShiftedCodesAlways ` to ensure that shift and
[ iotdb - 3875 ] fix heartbeat interval check for coordinator .
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintainability
updated filtering condition in AbstractKerberosDescriptorContainer . java to check if the identity name is a reference to ensure that the identity is not treated as a
updated the ` newInstance ` method signatures in the ` ArtifactCacheFactory ` , ` ArtifactCacheFactory ` , and ` InstanceArtifactCacheFactory ` classes
added a delay of 3000 milliseconds in TestListenTCPRecord . java to handle potential InterruptedException to improve synchronization during test execution
refactor argument handling in PatchExtensionMethod by introducing a temporary variable to improve code clarity and maintainability by reducing redundancy
replaced ` Map < String , RawNativeLibraryImpl > ` with ` Set < RawNativeLibraryImpl > ` for managing libraries to improve performance and
add ` ` sequence ' ' and ` ` ignore - send - failures ' ' namespace attribute to the router .
remove unused x509 view from view resolver and clientkeypublisher
updated variable assignment for readers in QueryComponent . java to ensure correct initialization of subReader based on the length of readers
added two new parsers , " max " and " min " , to the ValueSourceParser class to enhance the functionality of the ValueSourceParser
removed null return for focus and pointer events in the return statement to simplify the return logic for better readability and efficiency
removed unused variables and simplified method signature in TokenSources . java to improve code clarity and reduce unnecessary dependencies
cloudstack - 10246 : add uuid to the user table in case the user do n ' t exist
updated ` CasMultifactorAuthenticationWebflowConfiguration ` and ` CasWebflowContextConfiguration ` to use ` @ ConditionalOnWebApplication `
updated database connection settings and added methods for managing remaining connections in WriteJdbcPTest . java to improve test reliability and ensure proper database connection management
do n ' t use preferences . get ( ` ` editor . laf ' ' ) in defaultplatform . java
replaced calls to ` getDesiredStateEntity ( ) ` with direct access to ` desiredStateEntity ` in ` ServiceComponentHostImpl . java `
simplified margin calculations in FloatingTaskView . java to improve readability and maintainability of the code
added a condition to handle the case where the application is not running and updated the status line message in the NavigationShareTab to improve user experience by
remove redundant initialization of threadId in CPUCallGraphBuilder . java to improve code readability and maintainability
ggb - 205 use default toolbar for probability perspective ( fix for npe )
[ homekit ] add networkaddresschangelistener to log message ( # 11824 )
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use getLeaseRenewalTime instead of getLeaseManager to
replaced ` Optional < SourcePath > absent ( ) ` with ` Optional . absent ( ) ` in ` CxxLibraryDescription . java ` to
added null check for the exception message in ExceptionHandlerRegistryFactory and created a new test for fatal IOException with a null message to ensure robust error handling
changed the ` nextID ` variable to be volatile and updated related methods for clarity to ensure thread - safe access to the ` nextID ` variable
try to fix intermittent test failure on slow ci server
added HasSourcePath interface and implemented it in AbstractThinArchiveArg , FileListableLinkerInputArg , and SourcePathArg classes to
replaced StringBuffer with direct string concatenation for IllegalArgumentException in Arrays . java to simplify code and improve readability
added custom index field name and updated test cases for handling tags in OrdinalMappingAtomicReader and TestOrdinalMappingAtomicReader to enhance functionality by allowing
updated the ` toEpochMilli ` method to handle negative and negative values for ` seconds ` and ` nanos ` values to ensure accurate conversion of
fix ( renderer ) : use getattribute ( ) . name ( ) to avoid npe
added functionality to block update scripts in CopyPaste . java to ensure that updates are blocked during the copy - paste process
added a new test class TestCMoveLimitType to validate character buffer behavior to ensure correct handling of character positions in CharBuffer during optimization
refactored audio packet handling in multiple classes to improve efficiency and clarity to enhance performance and maintainability of audio packet processing
( chore ) camel - jbang - parser : fix an arrayindexoutofboundsexception in parsetoken .
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java and AudioSystem . java to reflect
refactor console creation and version printing logic into a separate method for better code organization to improve code readability and maintainability by encapsulating
refactor token validation in InputStreamBinder and NextcloudRequest to use a new utility method for hashing to improve security by ensuring the token matches the
improve error handling for eof in inputbuffer . read ( ) .
added unit test to cover delete member from non - existent group member .
camel - 14284 : remove unnecessary object [ ] constructor in camel - irc component
deleted the V2ReplicationProtocol . java file to remove unused replication protocol implementation
replace ` BuildRule ` with ` SourcePath ` in several classes to standardize the handling of source paths for compile time classpaths
added new classes ` ConstructorArgsDemo ` , ` StupidFinal ` , and ` StrictDemo ` , and modified ` Stupid
fix potential resource leak in directtemplatefeaturecollectionfactory
updated assertion in WriteResponseHandler to allow for a maximum of 2 responses based on replication factor to ensure that the response count does not exceed the defined replication
added a null check for the index number in ItemRowAdapter . java to prevent potential NullPointerException when accessing item properties
corrected the spelling of " anchestor " to "Ancestors " across multiple classes to improve clarity and maintain consistency in naming conventions
added a width check for the application ' s width in KBBase . java to ensure that the application does not exceed the application ' s width
updated equality check to use ` . equals ( ) ` instead of ` = = ` in ` ChangeLogParameters ` and added a new test for
changed the visibility of the loggers map from static to final in LogFactory . java to ensure the loggers map cannot be accessed concurrently
updated return statement to use ` getBasePlot ( false ) ` instead of ` p ` to ensure the correct plot is returned for improved functionality
camel - 11436 : camel - rest - server - add option to create a new directory on startup .
added a boolean parameter ` sendStatus200 ` to various classes and related constructors and methods to control status updates based on HTTP status code
added a length check for multi - line comments in Space . java to ensure comments are not empty before processing to avoid potential errors
added imports for BuckFileType and FileTypeManager , and implemented file type removal logic in BuckModule . java to improve file type management by
simplified import statements and changed return types in multiply methods from ToLong and ComposedToInt to ToInt to improve code readability and maintain consistency
refactor RTMGenericCommandLineOptionTest and TestUseRTMLockingOptionTest to handle unsupported OS versions and improve error messaging to enhance clarity
standardized spacing and formatting in AccountsActivityTest . java for consistency to improve code readability and maintainability
refactor Player class to improve performance to enhance performance and maintainability of the gameplay mechanics
added a method to retrieve the ChannelTypeUID class in AbstractModbusOSGiTest to ensure the correct class is imported for testing purposes
fix index check for guest to host reflective call .
set ` systemContext ` to null in ` AndroidTestEnvironment ` and implement context management in ` ShadowFontsContract ` to ensure proper context management
[ multistage ] fix max epoch offset in timegranularity ( # 11388 )
updated control flow logic to handle null finally and break / continue cases more effectively to improve robustness and prevent potential NullPointerExceptions
updated assertions in Assert . java and ArrayEqualityAssertTest . java to improve clarity and error messaging for array comparisons to enhance debugging and ensure accurate
fix switch / cases indentation issue in windowclicklogic .
fix index calculation in MeshBuilder . java to ensure correct indexing logic
nifi - 145 : remove unused field controllerserviceproviderprovider in processscheduler
added support for processing Java annotation processors in KotlincToJarStepFactory and created a list of AP class paths in KotlinLibraryIntegrationTest
updated RESCROLL _ DELAY from 750 to PAGE _ SNAP _ ANIMATION _ DURATION and simplified page snapping logic to improve code
refresh the workspace when the user has the shortcut host permission change
added case statements for HISTORY _ SEARCH _ BACKWARD and HISTORY _ SEARCH _ BACKWARD in ConsoleReader .
added null check for core name and improved error handling for reloading a non - existent core to enhance robustness by preventing null pointer exceptions
added marker selection functionality in NearbyMapFragment to manage bottom sheet behavior based on the selected marker
added error handling for throwable in FileSyncAdapter . java to improve robustness by catching potential runtime exceptions
refactor test memory assertions to use OutputAnalyzer for better error handling to improve test reliability by catching runtime exceptions during assertions
updated the filtering logic for feeds in FeedQueues . java to conditionally execute based on the application ' s heartbeat setting to improve performance and
log warn if ` defaultdrmsessionmanager ` be use on wrong thread .
updated AndroidBinaryDescription to use Locale . US for case - insensitive conversions to ensure consistent handling of package types across different locales
( chore ) camel - wfs3 : change file type from text / xml to application / xml
updated configuration file reference to use INSTANCE . confFile instead of configFile to ensure consistency in file handling across instances
updated the sleep value in the waitUntilReadyAndTimeout method from " sleep 5 " to " exit 1 " to improve test reliability by eliminating unnecessary
updated methods and variable types from ` IntMath ` to ` LongMath ` in ` HiveExpandDistinctAggregatesRule . java ` to improve precision
added multiple lines to check for headless environment in mmm Toolkit . java and ppp Toolkit . java to ensure proper exception handling in case of headless
fix ExoflameFurnaceHandler . canSmelt to match the furnace ' s world
add ' move thread count ' to solver ' s log
fix search for resource with revinclude to not select the same sp name
added a new test class ` Issue582Test ` to validate sorting and sorting of ` Fun . Pair < String , Integer > ` features to
[ native ] add test for decimal overflow
refactor LoadingCache class implementation to improve performance and reduce memory usage
added a new rule " AvoidNonConstructorMethodsWithClassName " to the NamingRulesTest to ensure that non - constructor methods are not treated as constructor
simonstewart : catch staleelementreferenceexception in expectedconditions . getelementselectionstate ( )
refactor view existence check by introducing ` hasView ` method in ` DatabaseSnapshotGenerator ` and ` JdbcDatabaseSnapshotGenerator ` to improve error handling
refactor DOMUtil class to improve code structure to enhance maintainability and readability of the code
added translation calculations for fullscreen scale in TaskViewUtils and a logMatrix method in Utilities to improve user experience by providing visual feedback on task view
change the default value of FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags and Rotation
added a method to walk FST arcs in TempFSTTermsReader and modified output methods in TempTermOutputs and TempTermOutputs
updated the create method to include SolrQueryRequest as a parameter across multiple factory classes to enhance functionality by allowing more flexible request handling
updated SQL trigger test cases in SingleTableMySQLTriggerTest . java to include new transaction creation and validation logic to ensure proper handling of null values
refactor comparator assignment in FieldValueHitQueue to use a dedicated setComparator method to improve code readability and maintainability by encapsulating
updated SQL query formatting in PhoenixQueryBuilderTest . java to include quotes around column names to ensure proper formatting of query strings for improved readability
added Spark initialization to the init method in RequesterTest . java to ensure that the application is fully initialized before proceeding
added constants and methods for managing storage properties in DynamicPropertiesStore . java to improve code readability and ensure proper handling of potential IllegalArgumentExceptions
added support for streaming files from a specified source directory in AssetsController to enhance resource loading flexibility for development environments
updated mapMark key retrieval to use getMapMarkKey method to ensure correct key retrieval for map markings
added a TokenRewriteStream parameter to the getDefaultValue and related methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance token handling capabilities in the
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` FatalError ` classes to simplify method
[ jxbrowser ] fix loading of jxbrowser file in case of error .
fix crash on ios with appversion = appversion
updated logging statement in SomfyTahomaBridgeHandler to use getUID ( ) instead of getBridgeUID ( ) . getId ( )
( chore ) camel - maven - plugin : disable flaky test on github
updated OpenWireConnectionTimeoutTest to use system properties for SSL configuration to improve code maintainability and ensure proper SSL configuration
added handling for NaN values in the DynatraceExporterV2 and DynatraceExporterV2 classes to improve error logging and provide clearer
added a method to remove a session from the session info to ensure proper cleanup of session - related information
added logic to set the hostname if the alert ' s hostname is null in HeartBeatHandler . java and adjusted formatting in AlertReceivedListener .
simplified the logic for determining if buffers are empty in ChannelEndPoint . java to improve code readability and maintainability by reducing complexity
resolve split - packages : move everything from kie - api under org . kie . api : move resource to org . kie .
added unit test for ` seekToMode ` in ` ShadowMediaPlayerTest ` and implemented the ` seekTo ` method in ` ShadowMediaPlayer ` to
rename ` createTask ` methods to ` createThrowingTask ` across multiple files to improve clarity and consistency in task creation handling
added border settings for tabCloseButton in AQUA _ LAF mode to improve UI consistency for different architectures
update tsptimestampservice to use post request , connect timeout , and read timeout , fix test
[ jbpm - 511 ] add jbpm / optaplanner package permission to xstream . createxstream ( )
added a check for non - generic types in the diamond application logic and created a new DiamondRaw class with a main method to improve error handling for
[ hotfix ] fix checkstyle violation in reloptutil
updated validation conditions for setting ID and value in Http2Settings . java to ensure that values are valid unsigned 16 - bit and 32 - bit values
deleted the file ` Issue664Test . java ` to the test class is no longer needed for the project
added exception handling for session disposal in SessionsPoolTest . java to ensure robustness by preventing unsupported operation on disposed sessions
make sure we start the root object in the geojsonwmsbuilder , not the geojsonwmsbuilder
changed the method ` setIndex ` to use ` intValue ( ) ` for setting the start index of the PopupMenuButton to ensure consistent use of
added methods to check for manual unstashing in TaskbarStashController to improve efficiency by avoiding unnecessary unstashing operations
camel - 14284 : camel - core - optimize to avoid unnecessary check for route with customid .
modified the ` getEventMismatchMessage ` method to include a ` waitForExpectedCount ` parameter and adjusted related logic to conditionally wait for events to improve
added a new file ` HeaderFixer . java ` that implements a header file processor to handle license headers in the application
added broadcast permission handling for first load completion in Launcher . java and updated app widget binding in LauncherProvider . java to enhance user experience by
deleted the ` SuperJumperAndroid . java ` file to the functionality is no longer needed in the Android framework
updated SystemTableScan to return distributed table status and modified TestStarQueries to include new test cases for broadcast join functionality to enhance query performance and ensure
remove obsolete keyvalueprovideraware , observationconventionaware , and observationconventionaware interface
add miss item to the missingblock list in the processidrematches ( ) method .
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast index to long to ensure correct calculation of multiplication in atomic operations
added caching for format strings in HSSFCellStyle . java to improve performance by reducing redundant calls to getDataFormatString ( )
updated query string in RemoteAuthenticationEndpointTests to include username in the response to ensure correct retrieval of users based on their username
changed the condition from ` needsInput ( ) ` to ` finished ( ) ` in ` DeflateCompressor . java ` to ensure proper handling of
updated the logging mechanism for the launcher all apps exit to include workspace and page index to improve logging clarity by using a builder pattern for workspace and page
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
remove deadlocktest . java that be fail to run on the ci server
add some debug code to fix a bug where marker do n ' t exist .
added a " Reopen in the Browser " menu item and implemented functionality to open the server in the browser to enhance user experience by allowing users to
added error handling for cases with multiple output times in SemanticAnalyzer to improve robustness by providing clearer error messages for unexpected output scenarios
updated the ` addEntryListener ` method calls in ` BasicTest . java ` to include additional parameters to ensure that the ` addEntryListener `
fix arrayindexoutofboundsexception in coordinatearrays . reverse ( )
removed unnecessary whitespace in setOpen method call to improve code readability and maintainability
added a boolean variable ` first ` and initialized it to ` false ` in ` TestPayloads . java ` to ensure proper initialization of the first
updated overview mode handling in the launcher to ensure the overview mode is displayed correctly when the workspace is not in overview mode
[ java ] set the destination for the message dispatch in networkroutetest .
change default value of integer . min _ value to integer . max _ value in messagehandlerinterceptordefinition
fix a bug in nestedarithmetictest and amd64floatconvertnode
fix a bug in httpclientrequest that could cause buffer to be append twice .
updated the artifact string replacement logic in GetMavenDependenciesTask . java to handle non - solr - specific characters to ensure proper formatting of the artifact string
use getcosstream instead of getdictionaryobject , a suggest by valerybokov
removed unnecessary print statements and simplified substring assignment in ReferenceUtil . java to improve code clarity and reduce unnecessary console output
make fieldvisibilitypredicate public so that it can be use a functional interface .
added configuration options for solidity node HTTP JSON - RPC protocol and port configuration to enable dynamic configuration of JSON - RPC connections based on configuration settings
added a type check before removing a drop target from the folder to ensure type safety and prevent potential ClassCastExceptions
refactor stub jar generation logic into a separate method for clarity and maintainability to improve code readability and maintainability by encapsulating the
added new feature files for Setup wizard , Probe module , and Workflow helper in StartPageTopComponent . java to enhance user experience by providing additional
[ hotfix ] fix scheduling of meteredflusher in cassandra daemon
removed unnecessary type casting for ' available ' in OnlineTestCase . java to simplify logic for better readability and maintainability
change return attribute from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository to reflect the correct user authentication behavior
refactor onIdleTimeout handling logic in HttpChannelState . java and add failure listener in HttpChannelTest . java to improve code clarity and ensure
change createendpoint to extend invocable . nonblocking to make it non - blocking
updated table header separator pattern and improved matching logic in TableBlockParser . java , and added new test cases in TablesTest . java to enhance
updated the return value from 320.0 f to 315.0 f in Camera . java to improve accuracy of the camera ' s performance
added a preference for starting the GPS boot setup in GpsSettingsActivity and updated return values in Utilities and Utilities to ensure compatibility with the new
increased the maximum size of the client secret from 128 to 512 to optimize security by using a smaller base64 value
updated assertion messages in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include the ' true ' parameter to ensure that the correct parameter
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest to mark the test as ignored due to race conditions
refactor PinotFS initialization and scheme handling in SegmentGenerationAndPushTaskExecutor and SegmentGenerationAndPushTaskExecutor to use PluginManager to improve
added locale checks in TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is only applied to non - English locales
added MetalLookAndFeel to the UIManager in bug8032878 . java to enhance the visual appearance of the user interface
added preDestroy annotation and refactored ping task management in Bot . java to improve thread safety and resource management during message sending
removed the call to getMessage ( ) in GlobalErrorHandler . java to simplify error handling by directly using the throwable object
rename variable and method parameters from ' module ' to ' from ' in ModuleTable and PackageTable classes to improve clarity and consistency in variable naming
updated exception handling to catch CmdLineException instead of Exception to improve error logging for better debugging and traceability
replaced ` super . equals ( o ) ` and ` super . hashCode ( ) ` methods with ` isEqualTo ( o ) ` and ` hashCode (
refactor code for improved readability and consistency in the CustomPlaybackOverlayFragment and ImageButton classes to enhance code clarity and maintainability by standardizing
updated zoom level settings from 10 , 20 , and 24 to 0 in BasicMapViewer . java to improve user experience by adjusting zoom settings for
replaced direct assignment of adminUsers and adminUserGroups with processUser and processUserGroups using ImpersonationUtil to improve code readability and maintain
replaced instances of ` AccessController . checkPermission ( ) ` with ` sm . checkPermission ( ) ` and refactored permission assertions in ` CheckPermissions
added support for ArgumentExtractor in DelegatedClientAuthenticationAction and related classes to enhance the flexibility of service resolution by allowing multiple argument extraction
changed the ` defaultGroup ` variable to be ` final ` in ` NacosServerRegisterRepository ` to ensure that the ` defaultGroup ` variable
fix tilesizechanger to use createtilecaches ( ) instead of destroy ( )
removed redundant view removal logic in CustomPlaybackOverlayFragment and InfoLayoutHelper to streamline code and improve maintainability by eliminating redundancy
refactor the ` cleanEntriesForFeedsWithoutSubscriptions ` method to use a separate ` cleanEntriesForFeedsWithoutSubscriptions ` method
replaced CoreAuthenticationTestUtils . getAuthentication ( ) calls with a new variable auth to improve code readability and maintainability by using a more de
filebasedclusternodefirewalltest : use temporaryfolder instead of file . deletefile ( )
ggb - 211 make sure cubicfivepoints be conic ( not conic )
reformatted conditional statements in RandomAccessReader . java for improved readability to enhance code maintainability and clarity
added @ SuppressWarnings ( " unchecked " , " vararg " ) annotations in Fields . java and MockitoBeforeTestNGMethod . java to suppress
refactor CImage . java to improve image handling and conversion logic to enhance code readability and maintainability by encapsulating image processing logic
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to simplify the code and improve readability
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple files to improve clarity and consistency in naming convention
( chore ) camel - core : use objects . equals instead of null check
updated method names and added support for binary name resolution in multiple classes to improve clarity and correctness in handling binary names in the symbol resolution process
added verifications for default view properties in NinjaDefaultTest . java to ensure correct handling of HTML location configurations
renamed method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations in ` DeviceProfile . java `
updated padding values and adjusted list view position offsets in DetailFragment and ListFragment to improve layout responsiveness and ensure proper positioning of the
refactor exception handling in ZkStateReader . java to improve thread interruption handling to ensure proper interruption of the current thread ' s interrupt
added null checks for field values in HttpFields . java and implemented a test for handling empty headers in RequestTest . java to ensure proper handling of
server : do n ' t allow static nat rule for network that do n ' t support it in the specified network id
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure
remove extra empty screen from the workspace to improve user experience by eliminating unnecessary content
added support for fixed width in BitmapFont to improve glyph positioning accuracy based on the last glyph ' s width
removed the boolean parameter ` showTitle ` from the ` createFragment ` method and refactored related code for better readability and maintainability to
added preEvent , postTransition , and state machine error methods to AbstractStateMachineFactory to enhance state management capabilities in the state machine implementation
[ hotfix ] [ doc ] fix typo in configdescriptionprovider
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf initialization in StorageBasedMetastoreTestBase and TestStorageMetastoreAuthorizationDrops to enhance
refactor count checks in FacetComponent . java for clarity and maintainability to improve code readability and ensure correct handling of sorted counts in distributed
updated the method of creating overriding properties and set the checkstyle cache file path based on the build model to ensure the correct cache file path is used
added logic to identify and manage active replicas in DeleteInactiveReplicaTest . java to improve error handling and ensure proper cleanup of jetty instances
added a file name parameter to the FileActionsDialogFragment constructor and updated its usage in OCFileListFragment to include the file name in the dialog
updated reorder direction handling to include an INVALID _ DIRECTION constant to improve code clarity and maintainability by avoiding hardcoded values
added new fields for currency , recAccountId , and to in InnerTransferRequest . java and updated API endpoint paths in AccountAPI . java to improve
introduce jobexecutionservice . getexecutionidforjobid ( ) to make test more robust
added a new annotation ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package to provide
updated import statements and added visitIdentifier methods in FindTypes . java to streamline imports and enhance identifier handling to improve code readability and maintain
added action text color to AuthenticatorActivity to improve the visual appearance of action buttons
added a new method ` find ` to ` Manager ` , ` StreamSupplierComponent ` , ` StreamSupplierComponent ` , and ` MockManager `
rename methods and variables related to test steps for clarity and consistency to improve code readability and maintainability by using a more descriptive method name
corrected a typo in the method name from " noArgMethodIsNotValid " to " validNoArgMethod " in multiple test files to
added a ` cancelClient ` method to ` RpcServer ` and modified the ` startDriver ` method in ` SparkClientImpl ` to handle client
added ` getImplicitPreCoercionValue ` methods in ` SkylarkParamInfo ` , ` ParamInfo ` , and ` Default
initialize lastDisplayedUser with an Optional . empty ( ) to ensure lastDisplayedUser is always initialized to avoid potential NullPointerExceptions
added a new method ` findAll ` to ` QueryDslMongoRepository ` that returns ordered results based on a ` OrderSpecifier ` to enhance query
added null checks before calling stop methods on SchemaRegionConsensusImpl and DataRegionConsensus to prevent potential NullPointerException when stopping
added a break statement to the DefaultPlannerBenchmark class in case of a failure to exit the warm - up loop in case of a failure
added overloaded xread and xreadgroup methods to MultiKeyPipelineBase , MultiKeyBinaryRedisPipeline , and MultiKeyBinaryRedisPipeline to
refactored LinkedBufferInput and StreamInput classes to remove unnecessary ' this ' keyword and updated method calls accordingly to improve code clarity and maintainability
added WebSecurity configuration to CasWebAppSecurityConfiguration and modified CasWebSecurityConfigurerAdapter to streamline security configuration and improve code organization
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` JdbcWithDBTokenStoreNoDoAs ` to
added methods to register and create ContentProviders in ShadowContentResolver and ContentProviderController to enhance functionality for managing content providers in the application
updated the version parameter in the AttributeReader constructor to use ClassFile . Version instead of Version to ensure compatibility with the latest version specifications
fixed - single connection keepalive should be enable by default .
[ java ] add a supplier for flow control strategy to make it easy to configure .
fix a nullpointerexception in 3d locus with no point in 2d
added concurrency support and improved error handling in WebSocket connection classes to enhance thread safety and prevent potential resource leaks during WebSocket operations
added support for selecting Firefox and Opera drivers in HttpWebClient . java and modified screenshot retrieval logic in HttpWebClient . java to improve
replaced JUnit assertions with AssertJ assertions in multiple test files to improve readability and maintainability of test assertions
remove deprecate method from trufflelanguage . getcontextreference ( ) .
initialize ` e ` to ` null ` in ` StubberImpl . java ` and improve error handling in ` finally ` to ensure ` e `
updated error handling in Actor . java and Group . java to throw IllegalArgumentException for ascendant actors to improve code clarity and provide clearer error messages
added location permission handling to the LocationPickerActivity to enhance user experience by allowing users to access the current location and improve user experience
add multi - threaded integration test for camel - example - jms
added CookieSpecs . STANDARD to requestConfigBuilder in GetHTTP . java to ensure consistent cookie configuration across requests
replaced a conditional check for intersections with a call to ` overlaps ( r1 ) . overlaps ( r2 ) ` to simplify the
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and removed logging statement in AirspyTun
updated the ` ScrollingPanel ` and ` SystemInformationsButtonsPanel ` classes to accept a monitoring URL parameter to enhance functionality by allowing users to
removed the SERVICE _ CREATE _ TIMEOUT configuration option from KubernetesConfigOptions . java to simplify the configuration for service creation timeout settings
added a switch - case structure for setting icon based on place description in NearbyListFragment . java to improve code readability and maintainability
added a null check for the package before accessing its properties in DefaultPackageScanClassResolver . java to avoid potential NullPointerExceptions when accessing
added a new file PrintInlining . java that prints " Passed " to provide a main method that prints " Passed " to
fix ( java ) : fix parsing of nested brace in ` ` { } ' '
[ java ] remove unused field in archivetest to reduce code duplication .
updated the method calls from ` getEdges ( ) ` to ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTable . java `
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve maintainability
updated logging statements to use a float instead of integer for playback speed to improve log readability and provide clearer feedback on playback speed settings
send room remove event when clustering be start .
updated the ' minimize ' parameter from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to ensure the test uses the
added key configurations for flipY and generateMips in TextureHelper . java to improve texture rendering flexibility and performance
refactor PythonDslProjectBuildFileParser to use a new ` CloseRecordingProjectBuildFileParserDecorator ` class and update related code to
[ j2kt ] add support for normalization pass in j2cl transpiler
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` , ` Java8OptionalConverterFactory ` ,
[ hotfix ] [ test ] remove unneeded isfreed check from memorymanager
added Temporal annotation to ConsoleSessionVO . java to enable timestamp handling in database operations
added two new files , Hbs . java and HbsTest . java , implementing Handlebars and TemplateEngine to provide a template engine for rendering Handlebars
updated chat message adapter to handle empty hint and message display logic to improve user experience by hiding UI elements when no text is provided
changed the iteration method from ` keySet ( ) ` to ` values ( ) ` in ` ImportCsv . java ` to ensure the correct iteration over
fix flaky test : wait until alert dialog appear
added a null check for distinct column indices in ReduceSinkDeDuplication . java to ensure proper handling of cases with fewer distinct column indices
refactor MiscUtils to improve path handling and enhance error logging to enhance code clarity and maintainability by using more descriptive variable names
regenerate client with updated copyright year ( # 4382 )
updated websocket dependencies from " websocket - server " and " websocket - client " to " jetty - websocket - server " and " jetty - websocket -
samluser # getattributes should return an unmodifiable map , not an unmodifiable map .
added code to update the ` ` modified ' ' status of program in the header to ensure the ` ` modified ' ' status reflects the saved program
replaced instances of ` new Double ( bytes ) ` and ` new Float ( bytes ) ` with direct return values in multiple classes to simplify code and
changed the method used to retrieve the timestamp from the result set from getDate to getTimestamp to ensure the data is stored as a timestamp instead of a date
added a check for " javax . naming . Context " in the HtmlJndiTreeReport class to ensure proper handling of both Context and javax
updated database options handling in StorageUtils . java and added buffer size setting in Manager . java to improve database configuration flexibility and enhance logging clarity
change edge type check from " double " to " mutual " in ImporterGEXF . java to reflect the change in edge type from "
removed the unused FLAG _ SLIPPERY constant from StatusBarTouchController . java to simplify the code and improve maintainability
truffleconstantfieldprovider : fix stable dimension calculation for array type .
added methods to retrieve and set the Google Drive folder path in PreferenceHelper and updated GoogleDriveJob and GoogleDriveSettingsFragment to utilize this new
add option to shuffle suggestion in the ggb - ggb - ggb - ggb - ggb - gg
added @ Nullable annotation to multiple assertThat methods in Truth . java to improve code clarity by indicating that the target parameter can be null
updated the return logic in ArrayUtil to correct bitwise operations for size handling to ensure proper size calculations and improve code clarity
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to check for constructor instrumentation to ensure that the ` ctorCanBe
added an anti - compliance mechanism to the ` StreamInManager ` , ` StreamInitiateVerbHandler ` , and ` StreamOut ` classes to
added methods to manage the ` isKeyguardSecure ` state in ` ShadowKeyguardManager ` and refactored tests in ` ShadowKeyguard
added serialVersionUID fields to the StringDialog class to ensure proper serialization compatibility for the class
updated string handling in GrblUtils to replace ' > ' with ' ' and added a conditional check for ' overrideParts ' to ensure correct parsing
corrected a typo in the method name from " assertEmptyThrowsMutipleFailureExceptionForManyThrowables " to " assertEmpty
added a test to verify that the drain handler is not called after the file closure to ensure that the method is not called after the file closure is
updated LIGHTS _ NUM and LIGHT _ INTESITY from 4 to 8 and modified light shader and configuration settings to improve light performance and
replaced instances of ` FakeProjectFilesystem ` with ` getProjectFileSystem ( ) ` in multiple test files to simplify filesystem access and improve code maintainability
changed the type of ` PathWithLines ` from ` String ` to ` PathWithLines ` in ` RuntimeOptions ` and ` Cucumber
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
added TODO 2022 . 1 to the TEST _ DIRS array to address issue 2022 . 1
added a call to close the ParcelFileDescriptor to ensure proper resource management and prevent memory leaks
added thread - local support for managing prefix indices in BasisLibrary to improve performance by reusing the prefix index across different threads
added HTTP connection debug logging in TestDistributedStatsComponentCardinality . java to improve debugging capabilities during development
added ` throwIfImmutable ( ) ` method to ` IntList . java ` to ensure that modifications to immutable lists do not interfere with modification
added nullability annotations to ` onApplicationEvent ` and modified URI construction in ` GrpcClientBuilder ` to improve code robustness and ensure proper
move demo - graal to demo / graal - demo - graal - demo - graal - demo - gra
update insight object to invalidate function array only when key change .
added platform detection and file writing functionality in GenerateManifestStep . java to ensure proper handling of manifest files on Windows systems
[ flink - 3131161 ] [ test ] warn about redundant null check of nonnull value
added @ Nullable annotation to getConfigDescription methods and improved null checks in ThingResource to enhance code robustness by preventing potential NullPointerExceptions
make cancellationexception in masterjobcontext a runtime exception instead of throwable
pdfbox - 4892 : initialize the stream with the crop box if necessary
[ hotfix ] fix typo in managerbase javadoc
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to enable accessing All Apps from the system Task
replaced direct initialization of FragmentActivity with Robolectric ' s activity controller to simplify code and improve maintainability by utilizing Robolec
renamed the method ` getFileCoordinates ` to ` processFileCoordinates ` and added a new method ` getDecimalCoords ` in ` FileProcessor ` to
updated class names from ` ABCase1 _ 1 ` , ` ABCase2 ` , and ` ABCase3 _ 3 ` to ` Test
updated parameter name from ' num ' to ' value ' in saveEnergyPriceHistoryDone method and added a null check for BlackholeAddress in Manager
refactor the handling of the current rocket in OpenRocketViewer to use a variable for the handler to improve code readability and maintainability by
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` that implements a recipe for changing Maven dependency group IDs and artifact IDs
updated IndexingJob and SegmentChecker to check if the input path is valid and added a validation check in SegmentChecker to ensure that the input path
updated comparison from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to ensure correct
refactor PreprocessorDelegate to use memoized suppliers for replacementPaths and pathToSourcePathMap and improve error handling to enhance code efficiency and maintainability by
rename ` JsonExamples ` to ` Examples ` and update package - info files accordingly to improve clarity and consistency in naming conventions
added debug logging statements in ViewExtractor . java for various parts of the code to improve traceability and debugging of input and output stream operations
refactored methods in FindsByLinkText class to improve code readability and maintainability
added a new Main class with a main method to demonstrate Java oop entry point functionality
fix thread safety issue with sip account register request .
removed redundant continue statements from NativeScanner . java to streamline code by eliminating unnecessary continue statements
changed package and import statements in RendererConfigurationTest . java from ` net . pms . test ` to ` net . pms . configuration `
refactor dependency management by replacing ImmutableSet . Builder with Supplier for queried and exported dependencies to improve performance by caching the results of dependency resolution and
updated the count method for remoteContainsResults from stream ( ) . count ( ) to size ( ) to improve performance by using the actual size of
added charset handling for content streams in ExtractingDocumentLoader to ensure proper encoding is applied based on content type
fix findbugs sql _ prepared _ statement _ generated _ from _ nonconstant _ string warning in databaseconfig
added a check to return early if the slot is - 1 in PlayerInventory . java to prevent unnecessary processing when no slot is available
add a cli option to ignore transitive repository introduce by maven
removed duplicate injection of BackgroundJobManager in ContactsPreferenceActivity . java to streamline code by eliminating redundancy
updated ColorsActivity to extend AppCompatActivity instead of Activity to improve compatibility with newer Android versions
added null check before closing the selection object to prevent potential NullPointerException when closing the selection
added a condition to break the loop if the matcher ' s start and end are the same and the matcher ' s start and end are the same
added server port configuration to the @ IntegrationTest annotation to ensure the integration test runs on a non - default port
added a new UDF called ' reverse ' in FunctionRegistry and registered it in UDFReverse . java to implement a reverse operator in the Hive
updated method names from ` getContextPathEncoded ( ) ` to ` getRequestContextPath ( ) ` and modified path handling in multiple files to improve clarity
refactor Tracer class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ test ] ignore rocksdbstatebackendreaderkeyedstateitcase due to time issue
replaced specific JUnit assertions with a wildcard import in XMLChangeLogParserTest . java to simplify import statements and improve code readability
added synchronization to the buffer clearing process in StarTreeRecordStoreCircularBufferImpl . java to ensure thread safety during split operations
updated forecast values in OpenWeatherMapOneCallHandler to use 60 minutes , hours , and 8 days to improve accuracy of weather data representation
fix flaky abstractpageoperationtemplatetest . testlastfetchrequesttime ( ) and fix timeouts
added logging and animation features for the all apps content in the RemoteTargetGluer and FloatingHeaderView classes to improve debugging capabilities and enhance user
updated the method ` splitAndMap ` to return a flat map and modified the return type of ` parseRerunFile ` to streamline the
add some more block to creative tab , and add some new block to the creative tab .
updated assertions in TestRadioButtons to correct the expected size of optItem and retrievedOptions to ensure accurate validation of the expected number of items and retrieved
added support for specifying uncompressed , compressed , and uncompressed file sizes in RCFileCat and implemented getNumberRows method in RCFile to enhance
pdfbox - 4071 : fix typo find by codespell on fossies . org
[ fix ] check for closed mxnet ndarray in jnautils
[ hotfix ] [ doc ] fix typo in blobserver . java
fixed bug 1229696 - unusedprivatemethod no long report false positive on method call from initializers
rename lexicalScope to lexScope across multiple files to improve clarity and consistency in variable naming
( chore ) camel - sftp : add test for sftp auto - startup
added methods and constructors to manage child and item boundables in STRtree and Quadtree classes to enhance the functionality of spatial indexing and
modify version parsing logic to handle minor version numbers correctly to ensure correct parsing of versions with different minor versions
added a check for empty tags before updating the active item ' s tags in ItemRegistryImpl . java and changed log level from warn to debug to
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and a corresponding function ` fromDateTime ` in ` DateTime
hhh - 17100 : make stringwrapperusertype . getparameter and stringwrapperusertype . getvalue ( ) return serializable
refactor Log4j2ConfiguratorServlet to improve logging configuration to enhance performance and maintainability of logging functionality
replaced multiple instances of creating HiveException and AuthorizationException with a single return statement to simplify code and improve readability by reducing unnecessary variable declarations
updated CGoCompileStep to use String . join for the CC command prefix and added a new test for C++ prebuilt dependencies to ensure compatibility
added @ Buildable annotation to CustomResource . java to enable buildability for the kubernetes API builder
added an @ Override annotation in mmm Only . java and ppp Only . java to ensure proper method overriding and improve code clarity
added timeout settings for HTTP connections in HttpClientFactory to improve connection reliability by allowing longer timeouts
added new configuration attributes for non - resolving raw target node parse pipeline and updated event scope in RawTargetNodeToTargetNodeParsePipeline to
simonstewart : add support for enabling / disabling other trace method in the selenium server
added the @ Singleton annotation to the ApplicationController class to ensure that the ApplicationController cannot be instantiated multiple times
updated username retrieval logic in ShareActivity to use OwnCloudAccount for display name validation to enhance user experience by providing a more informative display name
added imports for BatchStatus and BatchStatus , and implemented a test for resuming paused instances in SimpleJobLauncherTests to ensure proper handling of paused
added null check for cacheConfig before processing parameters in HttpSyncDataService . java and refactored data refresh logic in DataRefreshFactory . java
[ grid ] fixing checkstyle issue in ` ` localnode ' '
use getnameasstring ( ) . getnameasstring ( ) instead of getname ( ) . getname ( ) . tostring (
change nonsequentialparser to nonsequentialparser , a suggest by valerybokov
[ mahout - 146 ] fix checkstyle violation in testdistributedluczossolver
refactor HttpServerTestBase class for improved readability to enhance maintainability and clarity of test cases
port http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49447 - fix
added tests for ` @ DynamoDbIgnoreNulls ` and implemented methods in ` NestedBeanIgnoreNulls ` and ` BeanTableSchema `
add spring starter interface to allow customization of spring configuration
fix indicator . todouble ( ) and add unit test
[ api ] add execincontainerwithuser ( ) and execincontainerpattern ( ) method .
update interestedInByteMessages and interestedInTextMessages assignments to include both WebSocketByteMessages and WebSocketTextListeners to ensure proper handling of byte and text
add some more test to the semgrex test suite
added a broadcast intent to clear the unread unread tweet to enhance user experience by providing additional notifications
removed conditional logic for setting ` isPreGingerbread ` and ` overScroller ` in ` TouchImageView . java ` to simplify code
flush websocket and dstu21 config bean to prevent memory leak
make abstractcamelcontext . getexposed ( ) return null instead of a boolean . set ( false ) .
added FloatingActionButton functionality to manage FAB menu visibility based on image handling to enhance user interaction by allowing navigation to the main FAB menu
added inline parser for tokens containing single quotes in ToDateParser to enhance date parsing capabilities and improve handling of special characters
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading scenarios
updated Swedish error messages and resource files to replace outdated terminology to improve clarity and accuracy of error messages
added a condition to check if the server is checked before binding to OperationsServiceConnection to ensure that the operations service connection is only bound when the server
updated position calculations to use the start and end lines instead of the end column to ensure accurate position representation for node nodes
added multiple calls to waitFor ( ) in CxxPreprocessAndCompileStep . java and implemented waitFor ( ) in ManagedThread . java to ensure
added a new property ` requireAllRepositorySources ` and integrated it into the ` PrincipalAttributesProperties ` , ` CoreAuthenticationUtils ` , and created
fix flaky test and increase timeouts in mapstoreevictiontest
added support for configurable SSL protocols in the Netty web server configuration to enhance security by allowing customizable SSL protocols
replaced AtomicBoolean with AtomicReference in SetOnce class to improve thread safety and encapsulation of atomic operations
updated key retrieval logic in QueryDslMongoRepository and added a new unit test for empty strings in SpringDataMongodbSerializerUnitTests to ensure
removed multiple assertions for default and corner radius settings in RoundRectBorderTest . java to simplify test assertions for clarity and maintainability
added a check for empty cluster configuration and modified Bft acceptance test parameters to ensure that the application does not proceed when no genesis configuration is available
remove parallel test since we be not use it anymore
updated CountDownLatch and list initialization to use ' min ' instead of ' cnt ' and added a validation check for the sign length to ensure correct handling of
[ java ] do n ' t show process information for non - windows environment .
added a private static method ` empty ( ) ` and ` greatest ( ) ` and ` least ( ) ` to the ` MoreCollectors `
added null checks and improved method calls in BitmexStreamingMarketDataService and BitmexManualExample classes to ensure proper initialization and prevent potential null
added validation for latitude and longitude in GeoPointField to ensure that invalid coordinates throw an appropriate exception
updated method names and logic in OozieProxyImpersonator and WorkflowFilesService for consistency and clarity to improve code readability and maintainability
refactor ResponderId class to improve code organization to enhance maintainability and readability of the code
updated getTableDocument method to include a boolean parameter for dependent tables to enhance functionality by allowing conditional handling of tables with dependent tables
show a confirmation dialog if the number of consecutive uploads do n ' t have coordinate
added a cache for profile data serialization and deserialization in ProfileResources . java to improve performance by reducing the frequency of profile data serialization and deserialization
refactor JpaMetamodelEntityInformation to improve ID property handling and support for nested ID classes to enhance flexibility in property setting and ensure proper ID
added index creation and index validation in UpgradeUtil and updated method names for clarity to improve code readability and maintainability by using a more de
add the ability to disable jersey by default for server factory
updated method call to include a boolean parameter to ensure proper handling of the storeFieldAction parameter
added an ` ownerPtr ` parameter to the ` nativeCreateNSWindow ` method and updated its usage in the ` CPlatformWindow ` class to
updated the SQL table command in FileContentProvider . java to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to ensure the
added support for the STOCK tile in the Tile class to enhance the functionality of the StockTileSkin for better visual representation
fixed - rbuckets . get ( ) method throw npe if codec be null
add findunrelatedtypesingenericcontainer annotation to the ide test
added BackProgressAnimator to manage back animation progress to improve the responsiveness of the back animation process
removed the final modifier from the ` _ initialPageNo ` variable and added logic to initialize ` ContentLimitContainer ` with new content limits based on
fixed bug in crc16 . getcrc16 ( ) and change total operation to 32 - bit .
added comment parsing functionality to FormattedSqlChangeLogParser and corresponding test cases to enhance the parsing of SQL comments in the change log
camel - plexus - maven - plugin : make sure archiver be set before use it .
replaced ` HumanReadableException ` with ` BuckUncheckedExecutionException ` in ` DefaultClassUsageFileReader . java ` to improve error handling by using a
removed redundant condition checks in TSServiceImpl . java and added a new multiAggregationTest method in DaemonTest . java to improve code clarity
added validation for UNSIGNED _ BYTE and RGBA formats in GwtGL20 . java to ensure input pixels are of type ByteBuffer and improve error
added a new test method ` testDebugInfo ` and refactored method invocations in ` PrintR ` , ` VarDump ` , and
replaced UnmodifiableClassException handling with a custom Throwable handling in InlineBytecodeGenerator . java to improve error reporting for javac - compiled classes
add trace for track class initialization in native image instrumentation
( chore ) camel - core : fix typo in basebrokerrequesthandler
updated TopicRouteService to use Caffeine caching instead of CacheBuilder to improve performance and resource management by leveraging Caffeine caching
make database connection read - only by default
updated the regex pattern for invalid source target release in FindBuildToolFailures . java and added a fatal error message in FailureLogAnalyzerTest .
updated URI construction and added location intent check in DetailFragment . java to improve location handling and ensure proper navigation to Google maps
fix npe in standardparametercontextdao when inherit parametercontexts be null
refactor ClassLoader methods for improved readability to enhance maintainability and clarity of the codebase
added origin response header handling in ProxyRequestHelper and a corresponding test in ProxyRequestHelperTests to ensure proper header management and validation for response headers in
removed the new ProfileSettingDrawerItem ( ) method from GpsMainActivity . java to streamline the code by eliminating unnecessary functionality
added XML validation attribute handling in multiple classes to enable automatic XML validation based on configuration settings
simonstewart : fixing issue with the firefox driver that return ` ` undefined ' ' instead of ` ` undefined ' ' when
added a maxRows variable and modified fetch size handling in IoTDBStatement . java to allow dynamic adjustment of the maximum number of results based on
updated method names and logic in SqlStreamTerminator to improve clarity and consistency to enhance readability and maintainability of the code
added event handlers for node selection and mouse click events in StandardVizEventManager . java to enhance user interaction responsiveness when selection is enabled
refactor memory management by introducing a new method ` zeroBuffer ` to improve code readability and maintainability by encapsulating memory setting logic
[ gr - 26457 ] make xorgroup in terminalnode memory - friendly
removed redundant methods from LCDUIImageMonochromeBitmapSource to streamline code by eliminating unused methods
refactor SourcePathResolver methods to use private implementations for path resolution to improve code readability and maintainability by centralizing path handling logic
fix ( parser ) : fix identifier value parse for hl7 . org / hl7 / hl7 / v2 / 020
change the visibility of the method ` changeSchemeIfIsWebSocketUpgrade ` from private to static and add encoded URL handling in the ` WebsocketRouting
corrected file paths to include " compile " in multiple test suites to ensure correct execution of test suite configurations
refactor CxxPlatform retrieval logic to use a dedicated method to improve code readability and maintainability by encapsulating platform retrieval logic
added import statements for the IndexReader , IndexReader , Field , and Similarity classes to enhance documentation clarity and maintain consistency across the codebase
fix potential npe in concurrentlinkedstack . peek ( ) and concurrentlinkedstack . pop ( )
added methods ` isMatched ( ) ` and ` setMatched ( boolean matched ) ` to ` BinaryHeapQueueTest ` and ` BaseQueueable
added a null check for mDirectories before initializing the array to avoid potential NullPointerException when mDirectories is null
updated gesture condition in RecentsView . java to include checks for overview state and first layout to ensure correct gesture handling when overview state is not enabled
added multiple package - info . java files for various Apache Lucene packages to improve package documentation and organization of the Lucene implementation
added a text setting for the visible AutoLeveler panel in AutoLevelerTopComponent to enhance user experience by ensuring the autoleveler panel is
added post - optimization callback handling in DirectUpdateHandler and DirectUpdateHandler2 , and implemented event listeners in UpdateHandler to enable customizable post -
updated Inflater initialization and compression logic in CompressionMode . java to ensure proper handling of compressed data and avoid potential ArrayIndexOutOfBoundsExceptions
added a call to ` check ( user _ data ) ` in the Shaderc class to ensure user data is validated before processing
added a condition to check if the meta store is a local meta store in retryingMetaStoreClient to ensure retry logic handles cases where local meta
handle connectionclosedexception in heliossolologservice . gethoststatus ( )
refactor Subject class for improved readability to enhance maintainability and clarity of the codebase
use a concurrentreferencehashmap instead of a concurrenthashmap in abstractserializationservice
updated color distance calculations in HSSFPalette . java and added a new test method in TestHSSFPalette . java to improve accuracy of color
fix ( regen ) : fix docstring formatting ( # 119 )
simonstewart : add a test for find element by numeric and empty id
added a flags parameter to multiple methods for receiver registration in ShadowApplication , ShadowContextImpl , and ShadowInstrumentation to enhance receiver registration flexibility by allowing flags
added a mock implementation for BufferedReader in FFmpegTest . java to enhance mocking capabilities for the version resource retrieval
added handling for previous input streams in Ogg classes to ensure proper resource management and prevent memory leaks
refactor failureMessage to use a constant for response was null to improve code readability and maintainability by centralizing response handling logic
[ te ] change the condition for anomaly detection to only check for anomaly warning count .
refactored code to use a new Toast method for displaying toasts in BaseActivity and DetailActivity to improve code readability and maintainability
updated the request creation method in TracingFeignClient to use the delegate ' s HTTP method and request template to ensure the correct HTTP method
added name validation and referral handling in LDAPCertStore . java to improve robustness and error handling for LDAP operations
refactor retaining logic into a separate retain method in GatewayRSocket . java to improve code readability and maintainability by encapsulating
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a new test for the ` setOnItemClickListener ` method in ` ListViewTest `
[ hotfix ] [ test ] move miniclusterwithclientresource initialization to @ classrule
remove genericitemuiprovider that be no longer use
add select object to selector box so that it can be reuse
added JUnit 5 @ Isolated annotation to MetaInfConfigurationTest . java to improve test isolation for static methods in FileSystemPool
set the server connector ' s bind address to the HTTP _ INFO . bindAddress to ensure the server connects to the correct bind address for better
updated token validity settings based on heart mode and grant types for authorization , implicit , and client credentials to improve token management based on different grant types
add clover instrumentation filter to make test more robust
added support for the Smartmi Evaporative Humidifier in MiIoDevices . java and corrected formatting in ReadmeHelper .
use calculationcontext instead of stateinterface in mineprocess # plausibletobreak
changed the access modifier of the ` setScrollRangeDelta ` method from package - private to public to allow access to the method from other classes
added error logging for empty repository lists in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to ensure that Ambari can manage repositories for
updated the logic for checking missing values in the IntHashSet to simplify the logic for better readability and maintainability
added serializable annotation to ruleadmininvocator to make it clear that this class be serializable
refactor ` CrossOriginFilter ` to use ` Set ` for storing allowed origins and timing origin patterns instead of individual lists to improve performance and
updated file paths in BaseG3dHudTest . java to include " knight . g3db " instead of " cube _ anim
added a check for negative solidifiedPosition in numHashCache and added error logging for invalid solidifiedPosition to improve error handling and provide clearer
updated ExecResult to handle null values and improved test assertions in TestServerCustomProtocol and TestServerCustomProtocol to ensure proper handling of null values and
added a method to check if a user has access and modified error handling in the response to improve security by ensuring response is not null before sending an
replaced the ` writeTo ` method with a ` getStubClassBytes ` method in ` ClassMirror ` and refactored the code in ` Stub
added a TextView to display internal link text based on file type to enhance user experience by providing clearer and more informative text
updated assertion to use Locale . ENGLISH in PredictionTest . java to ensure consistent formatting across different locales
change condition from ` = = ` to ` ! = ` for day comparison in ` ModelZooTest . java ` to ensure correct handling of
updated ` hideInput ` methods in ` AllAppsContainerView . java ` and ` LauncherAllAppsContainerView . java ` to
( chore ) camel - core - eventsourcing : fix the test error of camel - core
refactor BsdFileStore to retrieve mount point names using BsdNativeDispatcher to improve code readability and maintainability by centralizing
add test case for issue # 1599 symbol resolution error ( # 1599 )
added a new command type ` < x > ` and ` < z > ` in ` SpawnCommand . java ` to allow optional parameters for
added MIN _ CONTENT _ DIMEN constant and refactored content dimensions calculation in Folder . java to improve layout responsiveness and ensure minimum
[ gr - 11420 ] dump code after compilation of crypto substitution test
replace ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with mock directory
added plugin check class names to the failed checks in UpgradeCheckRegistry . java and restructured column addition in UpgradeCatalog280 . java
refactor Environment class to improve code organization to enhance maintainability and readability of the code
added import for LuceneTestCase and a BadApple annotation in RecoveryAfterSoftCommitTest . java to address issue SOLR - 7421 related to
updated home string construction logic in CodenameOneImplementation . java and removed unnecessary warning check in HashtableContent . java to improve code clarity and reduce unnecessary
updated FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AU
updated import statements and resource accessor initialization in LiquibaseEntityResolver . java and XMLChangeLogSAXParser . java to streamline resource handling and
added ` jdk . tls . disabledAlgorithms ` property to ` ComHostnameVerifier ` and ` JavaxHostnameVerifier ` classes to disable TLS algorithm
updated the Immutable annotation and removed the static final EMPTY constant in CxxLibraryDescription and CxxLibraryTest to simplify the code and improve readability
rename ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualStubDirectory ` in ` StubJarTest . java
removed unnecessary whitespace in Int2ObjectHashMap . java to improve code readability and maintain consistency
updated folder name hint logic to use a consistent string resource instead of a hardcoded value to improve user experience by providing clearer and more inform
updated the method calls in UaaResetPasswordServiceTests to include an additional parameter for loading clients to ensure proper handling of different client types during tests
changed access modifiers of methods from public to private in ShadowSQLiteDatabase . java to restrict access to these methods for better encapsulation
updated logging statements in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to handle isClosed state to ensure accurate representation of values when the system is
refactor MimetypeIconUtil for improved code organization to enhance maintainability and readability of the code
corrected the spelling of " supportsViewFor " to " supportsViewsFor " across multiple view provider classes to ensure consistency and clarity in method
added a new test for negated instanceof in UnnecessaryParenthesesTest . java and updated the instanceof check in UnwrapParent
add teleportation support for location . getentity ( ) .
replaced ` Base64 . encode ` with ` Base64Utils . encodeToUrlSafeString ` for modulus and exponent in ` TokenKeyEndpoint `
updated imports and modified statistics reporting method in TranslatorManagerHelper . java to improve code organization and enhance reporting functionality
rename the ` ContainerAnnotation ` annotation to ` ContainedBy ` to improve clarity and specificity of the annotation ' s purpose
added a null check for the result parameter in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non - null value to
updated the ` setUpRevampedTweet ` method to include a ` muffled ` boolean parameter and improved the logic for checking retweeter
updated the user profile display logic to conditionally display the verified text based on the application ' s theme setting to ensure verified text is displayed based on
make abucoinsdigest non - static and make instance field private .
camel - mongodb - add autowired option to configure the mongo connection .
added support for sourceindex in attributemapping . this allow to specify the index of the attribute mapping .
do n ' t log corrupt column statistic in semitransactionalhivemetastore ( # 11919 )
added a method to check if security is enabled in UserGroupInformation to enhance security checks for user authentication
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
[ geoserver ] escape contact email in geoserver home page
remove modulemanagerimpl # enrichreflectionswithsubsystems ( ) from modulemanagerimpl
update join modeller to use the number of feature instead of the number of feature to ensure that the model file output correctly reflects the expected number of
do n ' t throw an exception if the command be an empty string
added checks for debug logging before logging statements in SingleNodeKafkaResumeStrategy . java to avoid unnecessary string concatenation when debug logging is disabled
use PlaybackStateCompat for consistency to ensure consistent usage of ACTION _ SET _ PLAYBACK _ SPEED across the application
added deprecation warnings for the " automatic " setting and refactored motor instance handling in multiple classes to improve code clarity and ensure proper handling of
tika - 499 , improve validation of msownerfileparser ascii name and unicode character length
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as non - deterministic on JDK
refactor lock file creation in MavenDependencyResolver to use a dedicated method to improve code readability and maintainability by centralizing lock file creation logic
updated version preference handling from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added multiple ` putString `
added a check to return null if the username equals the FEDERATION _ USER to ensure that only valid usernames are processed
do n ' t cast parameter to truffleobject in executemethodnode . isvalid ( ) .
removed unnecessary ` Collectors . toList ( ) ` calls from ` JakartaClientShutdownWithServerWebAppTest ` and ` JakartaClientShutdownWithServer
do n ' t throw error if filterchaindecision = deny
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the code
added import statement for org . apache . lucene . util . Version in CreateIndexTask . java to ensure compatibility with the latest Lucene library version
added schema handling in MissingPrimaryKeyChangeGenerator for OracleDatabase and AbstractDb2Database to ensure correct catalog and schema settings for database comparisons
added ` MetastoreException ` to the exception handling in ` MsckOperation ` and ` TestMSCKRepairOnAcid ` to
[ flink - 12274 ] [ kafka ] retry commit when producer have already be recover
update forwardmessagetodlqactivity to remove the messagereceipt handle ( # 5583 )
added a new ` services ` list and modified the ` runWithCompose ` method logic in ` DockerComposeContainer ` , and created a corresponding test
fix ( recaf ) : use copyset ( ) to avoid concurrentmodificationexception
replaced HtmlCleaner with SimpleHtmlCleaner for XML processing in FeedParser . java to simplify XML handling and improve code readability
removed the condition checking for ` mAppsCustomizeContent ` in ` Launcher . java ` and updated the child layout retrieval in ` Workspace
changed data types of energy fields and methods from int to double in MeterRealtimeBodyDataDTO to allow for more precise calculations of energy values
added a new JApplet class to handle file chooser initialization and destruction to address bug 4150029 related to the backspace keyboard functionality in the
added a boolean field ` isSparkConfigUpdated ` and corresponding getter and setter methods in ` HiveConf ` , modified ` SparkClient ` ,
added a method to retrieve the long press indicator in AppIcon , AppIconMenuItem , and AppIconMenuItem , and modified Launchable and Workspace to
added handling for empty polygons in WKBWriter and updated test cases for POLYGON EMPTY in WKBWriterTest to improve handling of
refactor UnflavoredBuildTarget creation to use a builder pattern using Interners to improve code readability and maintainability by centralizing
added a new file ` MultiplyByMaxInt . java ` that contains a method to multiply an integer by the maximum value of an integer to
updated OCFileListFragment to enable navigation drawer indicator based on the current file state to improve user experience by ensuring the drawer indicator is enabled based
removed unused imports and package declarations from TestRAMDirectory . java to streamline the code by eliminating unnecessary dependencies
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton . java ` and ` Operations . java ` to simplify the code and improve
drools - 3523 drools - 3523 drools - 3523 drools - 3523 drools - compiler should use a dynamic message for no expression define for
updated annotations from ` @ ContainedBy ` to ` @ Repeatable ` in multiple test classes to improve consistency and clarity in annotation usage
updated the file completion message to include the send duration in the console to provide clearer feedback on the file ' s completion status
updated the way class names are retrieved and checked for package access in OpenMBeanAttributeInfoSupport . java to enhance security by ensuring proper package access validation
patch from jbellis ; review by jbellis for cassandra - 1188
updated freeSize calculation to include a round to 16 to ensure accurate memory allocation based on the specified size
update touch event handling to account for motion event when touch is disabled
updated SslContextFactory to use SslContextFactory . Server instead of SslContextFactory to improve clarity and specificity in SSL context management
removed the PrivilegedSocket class and directly instantiated the Socket object in PG _ Stream . java to simplify the socket creation process and improve security by
refactor InputTest class for improved readability to enhance maintainability and ease of understanding for future developers
added pauseBlurs functionality and modified the finishRecentsAnimationOnTasksAppeared method to accept a Runnable parameter to enhance user experience by controlling blur
added null check for current location marker in NearbyMapFragment . java to prevent potential NullPointerException when adding the marker
updated the method calls to retrieve client IDs and client details in ClientAdminEndpoints . java and added mock mocks in ClientAdminEndpointsTests .
updated SqlSourceBuilderTest to use ` @ BeforeEach ` instead of ` @ BeforeAll ` and modified the setup method to improve test structure and
fix for http : / / issues . apache . org / jira / browse / amq - 4237 - wait for the executor service to
added unit tests for key handling in SlidingGanttCategoryDataset to ensure proper exception handling for unknown key and row key scenarios
updated filterConditions initialization to handle potential null values and added return statements in ZookeeperSyncDataService to improve robustness by preventing potential NullPointerExceptions
minor refactoring in lightcontrol to improve code readability and maintainability
updated conditional logic for hiding stacks and improved for - loop syntax to enhance code readability and maintainability
added a method to retrieve the application context and improved context validation in HttpSessionEventPublisher to enhance context management and ensure that the application context is not null
remove change to v0 . 14 syntax in create cq statement
[ hotfix ] [ iotdb ] fix typo in flinkiotdbsink
add custom simplification for declared node in canonicalization phase .
updated the context parameter in the setImageDrawable method call from ` null ` to ` context ` to ensure the correct context is used when retrieving the file
updated readIdentifierWithSchema method to include schema name in Parser . java and modified test names in TestScript . java to enhance schema handling and improve
add time field to bigquerytablerowiterator to support timestamps
added ` findViewWithTag ` methods to ` ShadowView ` and ` ShadowViewGroup ` classes , along with corresponding unit tests to enhance view
code quality : remove raw type usage
updated imports in IndexTool and MetaDataClient classes to improve code clarity and maintainability
added JSON _ VALUE and JSON _ CREATOR constants and modified enum value retrieval logic to enhance enum handling and improve code clarity
[ gr - 11486 ] fix bug in resourcefeature . getclasspath ( ) for jar file
updated CUDA _ R _ 32F , CUDA _ C _ 32F , and CUDA _ C _ 32I variables
changed the package of ResourceLoader from ` ResourceLoader ` to ` FileFilter ` to enhance resource loading flexibility by allowing multiple layout directories
fix a classcastexception in redstone torch when the block be not attachable materialdata .
[ hotfix ] [ table - planner - blink ] add support for varbinary type to reltostageconverter
added import statement for DateHelper in NoteAdapter . java to utilize date utility functions for date handling
updated backup error messages and added backup load success handling in Backup . java and Captions . java to improve clarity and functionality of backup loading failures
ggb - 221 set position of eview to relative ( not absolute )
removed file deletion check for the pipe file in ShadowParcelFileDescriptor . java to simplify the file creation process and improve error handling
int - 1443 move securitycontextholderstrategy to first in order to avoid race condition
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to improve clarity and specificity of the rule
canonicalize xor neutral reference ( fixes stackoverflowerror )
removed the static final Type STRING _ ARRAY constant from TypeFactory . java to simplify the code and improve maintainability
refactor IME hiding logic into a separate method ` hideIme ( ) ` across multiple classes to improve code readability and maintainability by
force bit density to fix network issue
updated assertions and cache management in TimelineMetricCacheSizingTest and TimelineMetricCacheTest classes to improve readability and maintainability of tests
add gl _ max _ texture _ size optimization for vanilla vanilla texture ( vanilla )
[ java ] do n ' t try to stop log recording if it be already stop .
added a condition to reset startPosn when in transform mode to ensure startPosn is reset when in transform mode
[ te ] add querycontext . isskipstartree ( ) to disable star - tree query ( # 11346 )
refactor NearbyActivity to introduce a lockNearbyView flag and rename refreshView method to improve clarity and functionality of the refresh process
add maptransformer . of and maptransformer . bimap ( ) and maptransformer . of ( map < k , v > )
refactor EmeddedObjects and EmbeddedObjects classes to improve code readability and maintainability
added launcher widget span information handling in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance widget loading capabilities for better user experience
replaced ` ChangeListener ` with ` EventObject ` in ` StageSelector ` and ` StageAction ` classes to align with OpenRocket ' s
added ` callingUid ` and ` callingPid ` fields to ` ShadowBinder ` and corresponding methods in ` RobolectricTest ` to enable
refactor ` ExpectationFailure ` class to remove AutoValue annotations and use ` Objects ` for better null safety to enhance code readability and
do n ' t log warn if we do n ' t have support for deserializing message
updated calculations for newW and newH in ImageReplacedElement . java to handle cases where targetWidth is - 1 and targetHeight is -
added HTML escape handling for ' \ n ' and ' \ \ n ' in CoreMarkdownNodeRenderer and updated test expectations in MarkdownWriter to ensure
added a warning button and refactored password handling in SharePasswordDialogFragment to improve clarity and maintainability of the code
refactor methods for mapping and unmapping in IoUtil . java to utilize a dedicated MappingMethods class to improve flexibility and maintainability of the
updated access modifiers and method visibility in AbstractAssert _ describedAs _ printed _ to _ console _ Test and AbstractAssert _ describedAs _ printed _
added OPTION _ SLIDER _ KEYTAB _ DIR and OPTION _ SLIDER _ KEYTAB _ DIR constants
updated tearOutGraphViewContainer method to accept an OwnerFrame parameter and added animation control in ExtractionModelFrame to improve graph view management and enhance
added a check for loader completion before binding complete runnables in LauncherModel . java to ensure that shortcuts are only added when the loader is
modified methods in NodeManageMemoryMergeOperator , NodePathsConvertOperator , NodePathsCountOperator , and NodePathsCountOperator to enforce immutability
updated method signatures and class names in IssueInterface , ValidationReport , and ValidationReport to include messageType , GUID , and checkResults to improve
added a method ` safeProviderName ` to safely retrieve the cipher provider name and improved exception handling in ` RSAClientKeyExchange . java ` to
[ hotfix ] [ runtime ] rename ` dynamic ` to ` flink `
change log level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity and focus on relevant messages
updated output formatting in AggregateLifeCycle . java to ensure proper formatting of output when the index is not equal to the size
change the visibility of the BITMAP _ HEIGHT and BITMAP _ WIDTH constants from private to public to allow external access to the
removed the @ Ignore annotation from CovariantOverrideTest . java to indicate that it does not implement the covariant override functionality
pdfbox - 2576 : refactor curly method to use a private Qtype method to improve code readability and maintainability
camel - 14284 : camel - core - optimize load route to load resource from xml .
added space minimum and maximum settings for the X - axis in ScatterChart to improve visual layout of the scatter chart
updated string concatenation syntax in ExpressionStringBuilder . java to ensure consistent formatting to improve code readability and maintainability
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` , ` BaseState ` , and ` BaseState `
added a check for the UTF8 key in CheckEncodingPropertiesFile . java to ensure that a valid UTF8 key is present to prevent runtime errors
lucene - 3995 : fix testreproducemessage and testreproducemessage to print random value
added a UI event for long - pressing an AllApps item in the StatsLogManager and integrated it into the ItemLongClickListener to enhance user
added null check for log and created a new test class Issue112Test for double - commit functionality to ensure proper handling of null logs and validate
added a condition to check for ` showSectorLandInfo ` in the conditional statement to ensure that ` showSectorLandInfo ` is only
updated type casting in multiple classes to use wildcard generics for better type safety to enhance code clarity and prevent unchecked cast warnings
refactor Enum class for improved readability to enhance maintainability and ease of understanding for future developers
fix ( beta ) : throw an exception when there be no random selection
fix potential memory leak in temporarycache . remove remove executor service
disable the create sql view and wms layer container in the new layer page
set default value of Availability _ availability to Availability . UNAVAILABLE to ensure proper initialization of the Availability _ availability variable
updated synchronization logic and improved block handling in multiple classes to enhance synchronization process and ensure accurate epoch calculations
chore : update gapic - generator - java version to 2.10 . 1 ( # 118 )
updated the ` _ freeSpaceReclaimDisabled ` variable to ` _ freeSpaceReclaimQ ` and modified the ` freeSpaceReclaimDisable
changed KDCOptions constants from public to private static and updated their usage in condition checks to improve encapsulation and clarify the purpose of the
refactored the assignment of the writer variable and set its output type to null to improve code clarity and ensure the writer is properly initialized
reformatted code for consistency and improved readability in ProfilePager . java to enhance maintainability and clarity of the code
changed the method name from ` paintBackground ` to ` paintComponentBackground ` in ` Slider . java ` to improve clarity and consistency in the
added a new method ` valueFromClassConstant ` to parse configuration values from class constants to improve configuration handling and ensure proper formatting of object value constants
added logging for initialization failures in KafkaService to improve error handling and debugging for service initialization issues
updated RESOURCES _ TO _ ALWAYS _ ACQUIRE to use ImmutableSet instead of Set to enhance flexibility in resource management by allowing multiple resource paths
( chore ) camel - core : allow the auto - create of the default output channel .
added keywords property to the document in HTMLDocument . java and implemented a test for indexing functionality in TestDemo . java to enhance document indexing functionality
updated SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
added an else clause to the initialization of the _ addresses list in MemcachedSessionDataMapFactory . java to improve code readability and maintainability by
replace instantiation of CorrespondenceSubclassToFactoryCall with a class reference to improve clarity and maintainability of the test code
refactor Builder class to improve code readability to enhance maintainability and facilitate future updates
change isbn to ebook . de , show error message instead
[ gr - 11478 ] increase the default keep - alive time to 10 second .
added null check for text before invoking data change events in TextField . java to prevent potential NullPointerExceptions when text is null
make the ideamodel a bit more consistent with the ideamodel , so it can be use in the future .
added trimming of whitespace in SuffixURLFilter . java to ensure consistent handling of line endings
added a check to return early if the player is in Godmode to prevent further processing when inGodmode is active
ggb - 205 remove the code for register / unregistering popups in checkboxcreationdialogw .
removed the ` maximumSize ` parameter from the constructors of ` LinkedHashMapCache ` and modified the concurrency level settings in ` TCache ` to simplify
removed unnecessary ` _ channel . close ( ) ` calls and adjusted the assignment of ` len ` in ` ChannelEndPoint . java ` to streamline
updated key index validation logic in FixAcidKeyIndex . java and refactored KeyIndexBuilder usage in OrcOutputFormat . java to
added Locale . ROOT to the exception handling in DirectUpdateHandler2 . java to ensure consistent exception handling across different locales
make store check guard configurable in writenode .
fix edge detection for exception dispatch on exception dispatch .
add cloud . getclassificationdisagreement ( ) method that return 0 for non - voting designation .
removed unnecessary ` BuildTarget . copyOf ( ) ` calls and added JSON serialization annotations to simplify code and improve readability by eliminating unnecessary object creation
refactor SqlRunner class for improved readability to enhance maintainability and clarity of the codebase
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver . java ` and modified
refactor ` knownApis ` to ` knownSdks ` and update related methods in ` DefaultSdkProvider ` and ` Robolectric
replace progressindicator with confidenceprogressindicator in createofferview
updated user agent header from " Cling / " to " UMS / " in multiple files and added new imports and headers in UPNP
add a forceiterate option to builder to avoid unnecessary iteration
added support for message view type in CrowdfundingChatAdapter to enhance user experience by allowing different message formats
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL . java
remove the ' -- ' operator from the regular expression for conj
removed the canvas parameter from multiple method signatures and added duplicate padding functionality to simplify method signatures and improve code readability
added a default method ` apply ` in ` RefactorModule ` and modified the stream processing in ` AddGradleEnterpriseToMavenProject
added methods to retrieve child elements by name and recursive in Xml . java to enhance functionality for retrieving XML elements based on their names
set the Content - Charset header from " UTF - 8 " to " UTF - 8 " in HttpSolrServer and its corresponding tests to ensure consistent
added SystemUiControllerFlags annotation and updated UI state handling in TaskThumbnailView and SystemUiController to improve flexibility and maintainability of UI state management
removed the private ClientConfigurationService field from IntrospectingTokenService to simplify the service configuration handling
updated exception message formatting in HiveRecordSet . java to improve clarity of error messages for better debugging
removed the ownerId field from NodeEntry to streamline the code by eliminating unnecessary field
correct typo in config . backup . snapshot . aftertakingsnapshot - > backup . snapshot . rightafter .
added score calculation to the merge method in TextFragment . java to ensure the score is properly updated when merging text fragments
removed the private Digester field from Md4PasswordEncoder . java to simplify the code structure and improve maintainability
added a validation check for the maximumUnimprovedStepCount property to ensure it is non - negative to prevent runtime errors
added a check to return early if no editors are opened to optimize performance by avoiding unnecessary processing when no editors are open
refactor BDDMockito to use Mockito ' s verify method instead of direct method calls to improve code readability and maintainability by centralizing
updated ClassLoader usage in PathScanner to use PathScanner . class . getClassLoader ( ) instead of Thread . currentThread ( ) . getContextClassLoader ( ) to
updated the ` sayHi2 ` method to accept a ` CompletableFuture < String > ` parameter and modified related implementations to enhance asynchronous handling of
initialize log in abstractsplitbrainprotectiontest to avoid npe
added null checks for logoutConfigurer before adding the default logout page in DefaultLoginPageConfigurer and ServerHttpSecurity to enhance security by preventing null pointer exceptions
make sure degree = = 0 work in giac . tostring ( )
added logging functionality to DockerComposeContainer and created a new test class DockerComposeLogConsumerTest to improve log handling and ensure proper testing of Docker instance
updated the generic type parameter in the testMapping method in StandardJavaTypeMappingTest . java to improve type safety and clarity in method signatures
removed unused imports from AmbariMetaInfoTest . java to streamline the code and improve readability
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a convenient way to obtain a ` Supplier ` from a
replaced a break statement with a return statement in ConsoleActivity . java to improve control flow by ensuring the return value is always true
fix camel - platform - http : / / camel - platform - http : / / camel - platform - http - add body support for platform http
added methods to handle path separators in different operating systems to ensure consistent path formatting across different operating systems
added a null check for authorizationContext before processing parameters to avoid potential NullPointerExceptions during execution
updated the ` load ` method to include a ` throwExceptionIfFail ( ) ` method and added a ` throwExceptionIfFail ( ) `
updated SDK version from " 4611349 " to " 4514284 " and added tests for stopping text - to - speech functionality to
queuetransactionlog : add a new transactionlogkey class to encapsulate the transaction log item id and name
added a boolean flag ` enableSqlWithoutProfile ` and its getter / setter in ` JdbcEnvironmentProperties ` , and updated ` JdbcEnvironmentRepository `
added a try - finally block around the write operation in ConnectHandler . java to ensure data is set in a finally block to prevent potential memory leak
fix compiler warning in modloadingstage
updated date formatting to use the correct calendar parameter to ensure consistency in date formatting across the application
updated method implementations in CachedThreadStatesGaugeSet and modified getThreadInfo method in ThreadStatesGaugeSet to include stack trace depth to improve thread
added a ` prevTlogOnPrecommit ` field and modified the sleep duration in ` LeaderTragicEventTest ` to improve transaction logging
update FastAsyncWorldEdit version from " . net / job / FastAsyncWorldEdit - P2 - V6 / " to " . net
segmentgeneratorconfig : create output directory if it do n ' t exist
added new methods ` calculateNormalVector ` and ` calculateNormalNewell ` in ` ObjUtils ` for calculating normal vectors to improve vector normalization
updated the ` JdbcAuditService ` to include ` IdentityZoneId ` as a parameter in the ` find ` method to ensure the correct identity zone
refactor SpanCollector class to improve code readability to enhance maintainability and facilitate future feature additions
added a null check for the current session in the AuthorizationFilter to ensure that the session info is not null before proceeding
refactor TransactionIsolationLevel class for improved clarity to enhance maintainability and readability of the codebase
updated method names from ` printLVgroups ` to ` printLogicalVolumegroups ` for clarity to improve code readability and maintain consistency in naming convention
added thread naming and logging for the current thread in TestSession . java to improve clarity and traceability of the thread ' s execution flow
refactor CookieManager to improve cookie handling to enhance performance and maintainability of cookie management
simplified the return statement by returning an empty ArrayList instead of an empty ArrayList to improve code readability and reduce unnecessary complexity
added a new touch controller to the list in RecentsUiFactory to enhance touch functionality for the launcher
refactor ` scaleHotseatWithWorkspace ` method to ` getHotseatScaleAndTranslation ` in ` LauncherState ` and ` WorkspaceState
added a check for JUnitRule in the DefaultStackTraceCleaner and created a new test for filtering elements above the JUnitRule to ensure that only
refactor MappedResizeableBuffer to use direct and native byte array methods instead of direct and native byte array methods to improve code readability and
added a private BalanceListener variable and modified its usage in the walletService to improve encapsulation and ensure balance listeners are properly managed
updated color assignment logic in RealisticRenderer to handle edge modes appropriately to ensure correct color representation for different edge modes
added null check for httpClientResponse in HttpClientBeanPostProcessor and simplified log initialization in multiple test classes to improve code readability and maintainability by removing
remove unused patternutil . checkpattern ( ) from gl200protocoldecoder .
updated playback event timing logic in FullDetailsActivity . java to improve responsiveness by allowing more time for playback events
spanishxmltreereader now correctly handle mw and lemmas
added a condition to clear language if the value is an empty string in InstallItem . java to ensure proper handling of empty input scenarios
updated the scheme override logic in ReactiveLoadBalancerClientFilter to support secure service instances to ensure the correct scheme is used based on the service instance ' s
( chore ) camel - default : fix duplicate bug in defaultmessagestore
make nativeimagedebuginfoprovider . fullfilepathfromclassname non - final .
refactor Correspondence creation from an anonymous inner class to a lambda expression to improve readability and reduce boilerplate
replaced instances of " US " with " EN " in locale support checks from " US " to " ENLocales " to ensure consistency
removed the condition checking for null redeemData in LocalTransactionSigner . java to simplify the logic for better readability and maintainability
add a MinecraftForgeClient class to handle block render and override block texture
added a return statement to the TxCacheDB class to prevent premature execution of the method
updated import statements from ` com . sun . internal . ws . org . objectweb . asm ` to ` jdk . internal . org .
refactor FastDictionary class for improved performance to enhance performance and maintainability of the code
added closed state to iosession . close ( ) to make sure that the session be close .
updated FlightEvent parameters for GROUND _ HIT , SIMULATION _ END , and TUMBLE in FlightEventsTest . java to
[ hotfix ] [ vendor ] update vendored grpc to 1p26p0
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure correct namespace declaration handling in the
[ # 8654 ] instructorfeedbackresults : show feedback session name and course id in result page ( # 8654 )
added a shortRules list and modified defaultRules initialization in DefaultPasswordValidator . java , and updated validation logic in DefaultPasswordValidatorTests . java to
simonstewart : add a command to retrieve last remote control log and capture screenshot to string
removed the import of JUnit Test annotation and added the @ Test annotation to the ProxyClassSerializationTest class to streamline the test suite by eliminating
updated the ` scale ` command in ` DLNAMediaInfo . java ` to include a format parameter to improve readability and maintainability of
remove speculative guard movement phase in jdk . graal and jdk . graal
added additional checks to the authentication manager bean definition parser in AuthenticationManagerBeanDefinitionParser to ensure that multiple authentication managers do not override bean definitions
updated logic for handling forwarded request fields in ForwardedRequestCustomizer and added unit tests for host and port handling in ForwardedRequestCustomizerTest to
added a line to reset the StringBuilder to zero in ConsoleReader . java to ensure the StringBuilder is reset before usage
changed access modifiers of allowedRoles and disallowedRoles from private to protected to allow subclasses to access these lists for better extensibility
[ openide ] correct version of openide - module - specification - version in manifest and project . properties
hbase - 26165 set the size of nettytls . wrapsize for nettyrpcserver .
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
updated FixedLengthTokenizerTests to use JUnit assertions instead of TestCase and added new test cases for tokenization to improve test clarity and ensure correct exception
refactor OpenSamlAuthenticationRequestFactory to allow configurable protocol binding URIs to enhance flexibility and prevent invalid protocol binding configurations
refactor DepthController to utilize AttachedSurfaceControl for applying SurfaceControl transactions to improve performance and maintainability of the DepthController
update asciidoctor version to 2.5 . x ( fixes # 241 )
hbase - 26165 change the action of create to create for bulk load and pre cleanup ( addendum )
updated subList parameters in TsFileManagement . java and modified measurement schemas in MergeMultiChunkTask . java and MergeTaskTest . java to
added support for convert from file : / / target / gf to file : / / gf
added login functionality to ShardManager and its builder to enhance security by ensuring proper authentication before building the manager
removed unnecessary whitespace in DeleteGlobalRef method call to improve code readability and maintainability
updated the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to improve clarity and consistency in
modified response handling in HttpSender to check if the response is marked before proceeding to ensure that the response is only processed when the marked response is
do n ' t show giver comment if the user be not the giver
added checks for linked profile permissions and modified ICC _ Profile initialization logic in BMPImageReader . java to enhance security by ensuring linked profiles are only
updated the coordinates in the setSimpleCuboid method calls for better visual representation to ensure correct positioning of plots in the user interface
add a wait message to remind user to wait while pmd check the file in this package .
refactor grid presenter initialization and add a method to set grid sizes based on user preferences to improve code readability and maintainability by encap
changed return values from false to true in ContributionsListFragment . java to ensure the method returns true instead of false
added a test skip range test in DistinctPrefixFilterIT . java and modified scan logic in BaseResultIterators . java to enhance test coverage
pdfbox - 2576 : add test for acrobatcheckboxgroupproperties , a suggest by valerybokov
added a method ` getFileLastModified ( String file ) ` to retrieve the last modified timestamp of a file to enable retrieval of the last modified timestamp of
added a condition to check for metadata tables in the HiveIcebergStorageHandler to ensure proper handling of metadata tables in the file format validation logic
refactor : use combobox instead of textfield for currency selection in cashdepositform
changed catch block from IOException to Throwable in WriteFlusher . java to handle a broader range of error scenarios
fix issue where empty task list do n ' t get fill when enter recent animation
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to track the active key ID for better configuration management
add miss action label and rename @ text action to be more descriptive .
changed the ` isActive ` variable from ` boolean ` to ` volatile boolean ` to ensure thread - safe access to the ` isActive ` variable
remove the isdesc ( ) method from orderbyexpressioncontext and replace it with isasc ( )
cast to charsequence to avoid classcastexception
added a check for the existence of the ownCloud app name in the date validation to ensure that the check for the ownCloud app name matches the
hbase - 13838 addendum make sure rootdir . perms be set when use kerberos
updated method calls from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange ` and ` JavaxServletWebExchange ` classes
updated the implementation of the Instant class to improve performance and maintainability of the code
updated state format handling from int to String in multiple classes to improve consistency in state format representation across the application
updated logging statements in CentralAuthenticationServiceImpl . java for clarity and corrected type checks in AbstractTicket . java to improve code readability and ensure
added IllegalArgumentException to the exception check in PDICCBased . java to ensure proper handling of IllegalArgumentException during data processing
corrected a syntax error in the if statement within AbstractFileResourceSet . java to improve code readability and maintain consistency
[ mng - 5352 ] fix path translation for plugin parameter ( # 486 )
[ hotfix ] [ protobuf ] fix custom coder registration for protobuf coder
updated JpaQueryParsingToken to include a boolean parameter in HqlQueryRenderer to enhance query parsing functionality by allowing signed numeric literals
refactor LaunchLugHandler and RailGuideHandler to include parent length parameter and adjust angle calculations to improve clarity and functionality of Launch and RailGuide
removed the implementation of the getNonceFactory method in BitmexStreamingExchange to provide a default nonce factory that returns null to simplify the code by
( chore ) camel - mail - bindings : use placeholder instead of string concatenation
[ java ] add default timeout and timer interval to driverconductortest .
change default value of initializeLoadedClasses from true to false to disable loading of loaded classes by default
added focus management for the search field in FullTextSearchPanel to improve user experience by ensuring the search field is properly focused
refactored the initialization of NIO parameters in TlsConnectionLogging . java to improve code readability and maintainability
updated the assertion in StatementTest . java to use a random value instead of a fixed value to improve test reliability by allowing the method to return a
updated assertion in TestSolrConfigHandler to use a consistent formatString method to improve clarity and maintainability of test code
replaced ` HttpMethod ` with ` ServerHttpRequest ` in ` CsrfWebFilterTests ` to simplify the test setup by using a more appropriate mock
updated the density handling in FilterResourcesStep . java to use a variable for better clarity to improve code readability and maintainability by using a more
refactor ComponentGroup to utilize a new method for setting UI IDs based on the component type to improve code clarity and ensure consistent UI ID
removed densityDpi check from rotation condition in RecentsAnimationDeviceState . java to simplify rotation validation logic
added two new files , TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java , for testing array
added import for LuceneTestCase . AwaitsFix and annotated the test class with @ AwaitsFix to indicate that the test is waiting for
fixed - executorservice . schedule ( ) and tasksrunnerservice . schedule ( ) method throw npe if startdate be null
simplified the condition for updating credentials in FileDownloader and FileUploader classes to improve code readability and maintainability by reducing redundancy
add null check and close logic for StoreFileScanners in Compactor . java to ensure proper resource management and prevent potential memory leaks
fix npe in inetmetricmanager by use getordefault ( ) instead of get ( )
added nonce parameter and assertion for token claims in TokenMvcMockTests to ensure correct handling of token claims in tests
updated ChartEditor , ChartEditorFactory , DefaultChartEditor , DefaultChartEditorFactory , DefaultAxisEditor , PaletteChooserPanel , and PaletteSample classes to
added methods to set the width and height of the form layered pane to ensure proper layout behavior for the layered pane
removed unused imports and added a method to calculate the maximum Y value based on the owner ' s height to improve code clarity and ensure proper height
updated the ` openDatabase ` method to return a boolean indicating database connection status to ensure that the login dialog only closes if the database is open
replaced references to ` DOCKER _ COMMAND ` with ` Platform . DOCKER _ COMMAND ` in ` DockerTestUtils ` and
added a null check for the input stream before processing input files in ` TestIsartorValidationFromClasspath . java ` to enhance robustness by
added a new color attribute and modified the drawLeaveBehind method to accept it in TaskbarView and CellLayout to allow customization of
show an error dialog when try to use a Canary version of Android Studio to ensure compatibility with Canary versions of Android Studio
api : fix npe and log a warning if the identityproxy table name be null .
removed modulePersistEnable , modulePersistDisable , and modulePersistEnable , and their associated methods from StartArgs . java to streamline the module management
updated argument validation and error message formatting in GeminiMarketDataService . java to ensure correct handling of arguments and improve clarity of error messages
changed HashSet to LinkedHashSet in VerifyPasswordResetRequestAction . java to maintain the order of questions in the flow scope
refactor test to make sure we do n ' t break the build
updated exclusions in AuthCheckFilter to remove specific JSP files to improve security by preventing sensitive information from being processed
refactor runnable execution and sorting logic in the Scheduler class to improve clarity and maintainability of the scheduling logic
updated method signatures in AbstractCommandRunner , AuditCommandRunner , and CommandRunner to use varargs instead of String [ ] to improve flexibility in argument
modified XMLParser to check for - 1 before reading input and return END _ TAG to improve error handling and prevent potential errors during XML parsing
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to address overflow issues with text
added pivot calculations for arrows in DeepShortcutsContainer to ensure arrow positions correctly based on icon positioning
do n ' t print stacktraces to stderr in fileupdatemonitor
added a refreshView parameter to updateThumbnail method and adjusted related logic to enhance thumbnail refreshing behavior for better user experience
pdfbox - 4071 : use class name instead of org . apache . pdfbox . extractttffonts
added validation for internet domain in HostnameFormatSpecifier and modified validation logic in EmailFormatSpecifier and HostnameFormatSpecifier to improve error handling and ensure
replaced instances of ` AuthenticatorActivity . this ` with ` this ` across multiple Java files to streamline code and improve readability by eliminating unnecessary
refactor ` SizeBasedDocIdIterator ` to use instance variables for ` maxDocId ` and ` _ currentDocId ` to improve code
[ fc ] add option to file dialog to set the current directory
updated widget span and sleep delay values in AppsCustomizePagedView . java and refactored page count updates in AppsCustomize
added functionality to retrieve and update component bounds based on active instances in FlightConfiguration . java to improve accuracy and performance of component bounds calculations in the flight
( chore ) camel - micromule : use direct instead of seda
updated DateTimeFormatter instantiation to include Locale . ROOT to ensure consistent date formatting across different locales
[ ds - 4021 ] add check for hidden field to filtered metadata filter
added a test method to verify the behavior of the StarTreeConfig builder with missing dimension and metric names to ensure that the builder correctly handles missing configuration
camel - 14284 : camel - spring - dsl - fix recipientlist api to work with camel - spring
refactor InlineLayoutBox and HoverListener to improve layout handling and repaint logic to enhance code readability and maintainability by consolidating nested
replaced ` DetectAuthenticationMethodOperation ` with ` OperationsService ` for authentication method handling to improve integration with the operations service for better user experience
